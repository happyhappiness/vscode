<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1709_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">smtp_auth_sasl<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">CONNECTION<pos:position pos:line="1" pos:column="38"/></name><modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type> <name pos:line="1" pos:column="40">conn<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name><modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type> <name pos:line="1" pos:column="58">mechlist<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">sasl_conn_t<pos:position pos:line="3" pos:column="14"/></name><modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type> <name pos:line="3" pos:column="16">saslconn<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">sasl_interact_t<pos:position pos:line="4" pos:column="18"/></name><modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type> <name pos:line="4" pos:column="20">interaction<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><name pos:line="4" pos:column="34">NULL<pos:position pos:line="4" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name><modifier pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></modifier></type> <name pos:line="5" pos:column="15">mech<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name><modifier pos:line="6" pos:column="13">*<pos:position pos:line="6" pos:column="14"/></modifier></type> <name pos:line="6" pos:column="15">data<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name pos:line="6" pos:column="22">NULL<pos:position pos:line="6" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">unsigned<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">int<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">len<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">buf<pos:position pos:line="8" pos:column="12"/></name> <init pos:line="8" pos:column="13">= <expr><name pos:line="8" pos:column="15">NULL<pos:position pos:line="8" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">bufsize<pos:position pos:line="9" pos:column="17"/></name> <init pos:line="9" pos:column="18">= <expr><literal type="number" pos:line="9" pos:column="20">0<pos:position pos:line="9" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">rc<pos:position pos:line="10" pos:column="9"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="11">saslrc<pos:position pos:line="10" pos:column="17"/></name></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><call><name pos:line="12" pos:column="7">mutt_sasl_client_new<pos:position pos:line="12" pos:column="27"/></name> <argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">conn<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="35">&amp;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="36">saslconn<pos:position pos:line="12" pos:column="44"/></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call> <operator pos:line="12" pos:column="46">&lt;<pos:position pos:line="12" pos:column="50"/></operator> <literal type="number" pos:line="12" pos:column="48">0<pos:position pos:line="12" pos:column="49"/></literal></expr>)<pos:position pos:line="12" pos:column="50"/></condition><then pos:line="12" pos:column="50">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">SMTP_AUTH_FAIL<pos:position pos:line="13" pos:column="26"/></name></expr>;<pos:position pos:line="13" pos:column="27"/></return></block></then></if>

  <do pos:line="15" pos:column="3">do
  <block pos:line="16" pos:column="3">{
    <expr_stmt><expr><name pos:line="17" pos:column="5">rc<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <call><name pos:line="17" pos:column="10">sasl_client_start<pos:position pos:line="17" pos:column="27"/></name> <argument_list pos:line="17" pos:column="28">(<argument><expr><name pos:line="17" pos:column="29">saslconn<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="39">mechlist<pos:position pos:line="17" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="49">&amp;<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="50">interaction<pos:position pos:line="17" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="63">&amp;<pos:position pos:line="17" pos:column="68"/></operator><name pos:line="17" pos:column="64">data<pos:position pos:line="17" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="70">&amp;<pos:position pos:line="17" pos:column="75"/></operator><name pos:line="17" pos:column="71">len<pos:position pos:line="17" pos:column="74"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="76">&amp;<pos:position pos:line="17" pos:column="81"/></operator><name pos:line="17" pos:column="77">mech<pos:position pos:line="17" pos:column="81"/></name></expr></argument>)<pos:position pos:line="17" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="83"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">rc<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">==<pos:position pos:line="18" pos:column="14"/></operator> <name pos:line="18" pos:column="15">SASL_INTERACT<pos:position pos:line="18" pos:column="28"/></name></expr>)<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="7">mutt_sasl_interact<pos:position pos:line="19" pos:column="25"/></name> <argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">interaction<pos:position pos:line="19" pos:column="38"/></name></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt></block></then></if>
  }<pos:position pos:line="20" pos:column="4"/></block>
  while <condition pos:line="21" pos:column="9">(<expr><name pos:line="21" pos:column="10">rc<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">==<pos:position pos:line="21" pos:column="15"/></operator> <name pos:line="21" pos:column="16">SASL_INTERACT<pos:position pos:line="21" pos:column="29"/></name></expr>)<pos:position pos:line="21" pos:column="30"/></condition>;<pos:position pos:line="21" pos:column="31"/></do>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name pos:line="23" pos:column="7">rc<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">!=<pos:position pos:line="23" pos:column="12"/></operator> <name pos:line="23" pos:column="13">SASL_OK<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">&amp;&amp;<pos:position pos:line="23" pos:column="31"/></operator> <name pos:line="23" pos:column="24">rc<pos:position pos:line="23" pos:column="26"/></name> <operator pos:line="23" pos:column="27">!=<pos:position pos:line="23" pos:column="29"/></operator> <name pos:line="23" pos:column="30">SASL_CONTINUE<pos:position pos:line="23" pos:column="43"/></name></expr>)<pos:position pos:line="23" pos:column="44"/></condition><then pos:line="23" pos:column="44">
  <block pos:line="24" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">dprint<pos:position pos:line="25" pos:column="11"/></name> <argument_list pos:line="25" pos:column="12">(<argument><expr><literal type="number" pos:line="25" pos:column="13">2<pos:position pos:line="25" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="25" pos:column="16">(<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">debugfile<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">,<pos:position pos:line="25" pos:column="27"/></operator> <literal type="string" pos:line="25" pos:column="28">"smtp_auth_sasl: %s unavailable\n"<pos:position pos:line="25" pos:column="62"/></literal><operator pos:line="25" pos:column="62">,<pos:position pos:line="25" pos:column="63"/></operator> <name pos:line="25" pos:column="64">mech<pos:position pos:line="25" pos:column="68"/></name><operator pos:line="25" pos:column="68">)<pos:position pos:line="25" pos:column="69"/></operator></expr></argument>)<pos:position pos:line="25" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">sasl_dispose<pos:position pos:line="26" pos:column="17"/></name> <argument_list pos:line="26" pos:column="18">(<argument><expr><operator pos:line="26" pos:column="19">&amp;<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="20">saslconn<pos:position pos:line="26" pos:column="28"/></name></expr></argument>)<pos:position pos:line="26" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><name pos:line="27" pos:column="12">SMTP_AUTH_UNAVAIL<pos:position pos:line="27" pos:column="29"/></name></expr>;<pos:position pos:line="27" pos:column="30"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><operator pos:line="30" pos:column="7">!<pos:position pos:line="30" pos:column="8"/></operator><call><name pos:line="30" pos:column="8">option<pos:position pos:line="30" pos:column="14"/></name><argument_list pos:line="30" pos:column="14">(<argument><expr><name pos:line="30" pos:column="15">OPTNOCURSES<pos:position pos:line="30" pos:column="26"/></name></expr></argument>)<pos:position pos:line="30" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="28"/></condition><then pos:line="30" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="5">mutt_message<pos:position pos:line="31" pos:column="17"/></name> <argument_list pos:line="31" pos:column="18">(<argument><expr><call><name pos:line="31" pos:column="19">_<pos:position pos:line="31" pos:column="20"/></name><argument_list pos:line="31" pos:column="20">(<argument><expr><literal type="string" pos:line="31" pos:column="21">"Authenticating (%s)..."<pos:position pos:line="31" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="31" pos:column="48">mech<pos:position pos:line="31" pos:column="52"/></name></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="54"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="33" pos:column="3">bufsize<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">=<pos:position pos:line="33" pos:column="12"/></operator> <ternary><condition><expr><operator pos:line="33" pos:column="13">(<pos:position pos:line="33" pos:column="14"/></operator><operator pos:line="33" pos:column="14">(<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">len<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">*<pos:position pos:line="33" pos:column="20"/></operator> <literal type="number" pos:line="33" pos:column="21">2<pos:position pos:line="33" pos:column="22"/></literal><operator pos:line="33" pos:column="22">)<pos:position pos:line="33" pos:column="23"/></operator> <operator pos:line="33" pos:column="24">&gt;<pos:position pos:line="33" pos:column="28"/></operator> <name pos:line="33" pos:column="26">LONG_STRING<pos:position pos:line="33" pos:column="37"/></name><operator pos:line="33" pos:column="37">)<pos:position pos:line="33" pos:column="38"/></operator></expr> ?<pos:position pos:line="33" pos:column="40"/></condition><then pos:line="33" pos:column="40"> <expr><operator pos:line="33" pos:column="41">(<pos:position pos:line="33" pos:column="42"/></operator><name pos:line="33" pos:column="42">len<pos:position pos:line="33" pos:column="45"/></name> <operator pos:line="33" pos:column="46">*<pos:position pos:line="33" pos:column="47"/></operator> <literal type="number" pos:line="33" pos:column="48">2<pos:position pos:line="33" pos:column="49"/></literal><operator pos:line="33" pos:column="49">)<pos:position pos:line="33" pos:column="50"/></operator></expr> <pos:position pos:line="33" pos:column="51"/></then><else pos:line="33" pos:column="51">: <expr><name pos:line="33" pos:column="53">LONG_STRING<pos:position pos:line="33" pos:column="64"/></name></expr></else></ternary></expr>;<pos:position pos:line="33" pos:column="65"/></expr_stmt>
  <expr_stmt><expr><name pos:line="34" pos:column="3">buf<pos:position pos:line="34" pos:column="6"/></name> <operator pos:line="34" pos:column="7">=<pos:position pos:line="34" pos:column="8"/></operator> <call><name pos:line="34" pos:column="9">safe_malloc<pos:position pos:line="34" pos:column="20"/></name> <argument_list pos:line="34" pos:column="21">(<argument><expr><name pos:line="34" pos:column="22">bufsize<pos:position pos:line="34" pos:column="29"/></name></expr></argument>)<pos:position pos:line="34" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="36" pos:column="3">snprintf<pos:position pos:line="36" pos:column="11"/></name> <argument_list pos:line="36" pos:column="12">(<argument><expr><name pos:line="36" pos:column="13">buf<pos:position pos:line="36" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="18">bufsize<pos:position pos:line="36" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="27">"AUTH %s"<pos:position pos:line="36" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="38">mech<pos:position pos:line="36" pos:column="42"/></name></expr></argument>)<pos:position pos:line="36" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="44"/></expr_stmt>
  <if pos:line="37" pos:column="3">if <condition pos:line="37" pos:column="6">(<expr><name pos:line="37" pos:column="7">len<pos:position pos:line="37" pos:column="10"/></name></expr>)<pos:position pos:line="37" pos:column="11"/></condition><then pos:line="37" pos:column="11">
  <block pos:line="38" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">safe_strcat<pos:position pos:line="39" pos:column="16"/></name> <argument_list pos:line="39" pos:column="17">(<argument><expr><name pos:line="39" pos:column="18">buf<pos:position pos:line="39" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="23">bufsize<pos:position pos:line="39" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="32">" "<pos:position pos:line="39" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="37"/></expr_stmt>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><call><name pos:line="40" pos:column="9">sasl_encode64<pos:position pos:line="40" pos:column="22"/></name> <argument_list pos:line="40" pos:column="23">(<argument><expr><name pos:line="40" pos:column="24">data<pos:position pos:line="40" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="30">len<pos:position pos:line="40" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="35">buf<pos:position pos:line="40" pos:column="38"/></name> <operator pos:line="40" pos:column="39">+<pos:position pos:line="40" pos:column="40"/></operator> <call><name pos:line="40" pos:column="41">mutt_strlen<pos:position pos:line="40" pos:column="52"/></name> <argument_list pos:line="40" pos:column="53">(<argument><expr><name pos:line="40" pos:column="54">buf<pos:position pos:line="40" pos:column="57"/></name></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></call></expr></argument>,
                       <argument><expr><name pos:line="41" pos:column="24">bufsize<pos:position pos:line="41" pos:column="31"/></name> <operator pos:line="41" pos:column="32">-<pos:position pos:line="41" pos:column="33"/></operator> <call><name pos:line="41" pos:column="34">mutt_strlen<pos:position pos:line="41" pos:column="45"/></name> <argument_list pos:line="41" pos:column="46">(<argument><expr><name pos:line="41" pos:column="47">buf<pos:position pos:line="41" pos:column="50"/></name></expr></argument>)<pos:position pos:line="41" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="41" pos:column="53">&amp;<pos:position pos:line="41" pos:column="58"/></operator><name pos:line="41" pos:column="54">len<pos:position pos:line="41" pos:column="57"/></name></expr></argument>)<pos:position pos:line="41" pos:column="58"/></argument_list></call> <operator pos:line="41" pos:column="59">!=<pos:position pos:line="41" pos:column="61"/></operator> <name pos:line="41" pos:column="62">SASL_OK<pos:position pos:line="41" pos:column="69"/></name></expr>)<pos:position pos:line="41" pos:column="70"/></condition><then pos:line="41" pos:column="70">
    <block pos:line="42" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="43" pos:column="7">dprint<pos:position pos:line="43" pos:column="13"/></name> <argument_list pos:line="43" pos:column="14">(<argument><expr><literal type="number" pos:line="43" pos:column="15">1<pos:position pos:line="43" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="43" pos:column="18">(<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="19">debugfile<pos:position pos:line="43" pos:column="28"/></name><operator pos:line="43" pos:column="28">,<pos:position pos:line="43" pos:column="29"/></operator> <literal type="string" pos:line="43" pos:column="30">"smtp_auth_sasl: error base64-encoding client response.\n"<pos:position pos:line="43" pos:column="88"/></literal><operator pos:line="43" pos:column="88">)<pos:position pos:line="43" pos:column="89"/></operator></expr></argument>)<pos:position pos:line="43" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="91"/></expr_stmt>
      <goto pos:line="44" pos:column="7">goto <name pos:line="44" pos:column="12">fail<pos:position pos:line="44" pos:column="16"/></name>;<pos:position pos:line="44" pos:column="17"/></goto>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>
  }<pos:position pos:line="46" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">safe_strcat<pos:position pos:line="47" pos:column="14"/></name> <argument_list pos:line="47" pos:column="15">(<argument><expr><name pos:line="47" pos:column="16">buf<pos:position pos:line="47" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="21">bufsize<pos:position pos:line="47" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="30">"\r\n"<pos:position pos:line="47" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="38"/></expr_stmt>

  <do pos:line="49" pos:column="3">do <block pos:line="49" pos:column="6">{
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><call><name pos:line="50" pos:column="9">mutt_socket_write<pos:position pos:line="50" pos:column="26"/></name> <argument_list pos:line="50" pos:column="27">(<argument><expr><name pos:line="50" pos:column="28">conn<pos:position pos:line="50" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="34">buf<pos:position pos:line="50" pos:column="37"/></name></expr></argument>)<pos:position pos:line="50" pos:column="38"/></argument_list></call> <operator pos:line="50" pos:column="39">&lt;<pos:position pos:line="50" pos:column="43"/></operator> <literal type="number" pos:line="50" pos:column="41">0<pos:position pos:line="50" pos:column="42"/></literal></expr>)<pos:position pos:line="50" pos:column="43"/></condition><then pos:line="50" pos:column="43">
      <block type="pseudo"><goto pos:line="51" pos:column="7">goto <name pos:line="51" pos:column="12">fail<pos:position pos:line="51" pos:column="16"/></name>;<pos:position pos:line="51" pos:column="17"/></goto></block></then></if>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><operator pos:line="52" pos:column="9">(<pos:position pos:line="52" pos:column="10"/></operator><name pos:line="52" pos:column="10">rc<pos:position pos:line="52" pos:column="12"/></name> <operator pos:line="52" pos:column="13">=<pos:position pos:line="52" pos:column="14"/></operator> <call><name pos:line="52" pos:column="15">mutt_socket_readln<pos:position pos:line="52" pos:column="33"/></name> <argument_list pos:line="52" pos:column="34">(<argument><expr><name pos:line="52" pos:column="35">buf<pos:position pos:line="52" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="40">bufsize<pos:position pos:line="52" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="49">conn<pos:position pos:line="52" pos:column="53"/></name></expr></argument>)<pos:position pos:line="52" pos:column="54"/></argument_list></call><operator pos:line="52" pos:column="54">)<pos:position pos:line="52" pos:column="55"/></operator> <operator pos:line="52" pos:column="56">&lt;<pos:position pos:line="52" pos:column="60"/></operator> <literal type="number" pos:line="52" pos:column="58">0<pos:position pos:line="52" pos:column="59"/></literal></expr>)<pos:position pos:line="52" pos:column="60"/></condition><then pos:line="52" pos:column="60">
      <block type="pseudo"><goto pos:line="53" pos:column="7">goto <name pos:line="53" pos:column="12">fail<pos:position pos:line="53" pos:column="16"/></name>;<pos:position pos:line="53" pos:column="17"/></goto></block></then></if>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><call><name pos:line="54" pos:column="9">smtp_code<pos:position pos:line="54" pos:column="18"/></name> <argument_list pos:line="54" pos:column="19">(<argument><expr><name pos:line="54" pos:column="20">buf<pos:position pos:line="54" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="25">rc<pos:position pos:line="54" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="29">&amp;<pos:position pos:line="54" pos:column="34"/></operator><name pos:line="54" pos:column="30">rc<pos:position pos:line="54" pos:column="32"/></name></expr></argument>)<pos:position pos:line="54" pos:column="33"/></argument_list></call> <operator pos:line="54" pos:column="34">&lt;<pos:position pos:line="54" pos:column="38"/></operator> <literal type="number" pos:line="54" pos:column="36">0<pos:position pos:line="54" pos:column="37"/></literal></expr>)<pos:position pos:line="54" pos:column="38"/></condition><then pos:line="54" pos:column="38">
      <block type="pseudo"><goto pos:line="55" pos:column="7">goto <name pos:line="55" pos:column="12">fail<pos:position pos:line="55" pos:column="16"/></name>;<pos:position pos:line="55" pos:column="17"/></goto></block></then></if>

    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><name pos:line="57" pos:column="9">rc<pos:position pos:line="57" pos:column="11"/></name> <operator pos:line="57" pos:column="12">!=<pos:position pos:line="57" pos:column="14"/></operator> <name pos:line="57" pos:column="15">smtp_ready<pos:position pos:line="57" pos:column="25"/></name></expr>)<pos:position pos:line="57" pos:column="26"/></condition><then pos:line="57" pos:column="26">
      <block type="pseudo"><break pos:line="58" pos:column="7">break;<pos:position pos:line="58" pos:column="13"/></break></block></then></if>

    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><call><name pos:line="60" pos:column="9">sasl_decode64<pos:position pos:line="60" pos:column="22"/></name> <argument_list pos:line="60" pos:column="23">(<argument><expr><name pos:line="60" pos:column="24">buf<pos:position pos:line="60" pos:column="27"/></name><operator pos:line="60" pos:column="27">+<pos:position pos:line="60" pos:column="28"/></operator><literal type="number" pos:line="60" pos:column="28">4<pos:position pos:line="60" pos:column="29"/></literal></expr></argument>, <argument><expr><call><name pos:line="60" pos:column="31">strlen<pos:position pos:line="60" pos:column="37"/></name> <argument_list pos:line="60" pos:column="38">(<argument><expr><name pos:line="60" pos:column="39">buf<pos:position pos:line="60" pos:column="42"/></name><operator pos:line="60" pos:column="42">+<pos:position pos:line="60" pos:column="43"/></operator><literal type="number" pos:line="60" pos:column="43">4<pos:position pos:line="60" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="60" pos:column="47">buf<pos:position pos:line="60" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="52">bufsize<pos:position pos:line="60" pos:column="59"/></name> <operator pos:line="60" pos:column="60">-<pos:position pos:line="60" pos:column="61"/></operator> <literal type="number" pos:line="60" pos:column="62">1<pos:position pos:line="60" pos:column="63"/></literal></expr></argument>, <argument><expr><operator pos:line="60" pos:column="65">&amp;<pos:position pos:line="60" pos:column="70"/></operator><name pos:line="60" pos:column="66">len<pos:position pos:line="60" pos:column="69"/></name></expr></argument>)<pos:position pos:line="60" pos:column="70"/></argument_list></call> <operator pos:line="60" pos:column="71">!=<pos:position pos:line="60" pos:column="73"/></operator> <name pos:line="60" pos:column="74">SASL_OK<pos:position pos:line="60" pos:column="81"/></name></expr>)<pos:position pos:line="60" pos:column="82"/></condition><then pos:line="60" pos:column="82">
    <block pos:line="61" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="62" pos:column="7">dprint<pos:position pos:line="62" pos:column="13"/></name> <argument_list pos:line="62" pos:column="14">(<argument><expr><literal type="number" pos:line="62" pos:column="15">1<pos:position pos:line="62" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="62" pos:column="18">(<pos:position pos:line="62" pos:column="19"/></operator><name pos:line="62" pos:column="19">debugfile<pos:position pos:line="62" pos:column="28"/></name><operator pos:line="62" pos:column="28">,<pos:position pos:line="62" pos:column="29"/></operator> <literal type="string" pos:line="62" pos:column="30">"smtp_auth_sasl: error base64-decoding server response.\n"<pos:position pos:line="62" pos:column="88"/></literal><operator pos:line="62" pos:column="88">)<pos:position pos:line="62" pos:column="89"/></operator></expr></argument>)<pos:position pos:line="62" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="91"/></expr_stmt>
      <goto pos:line="63" pos:column="7">goto <name pos:line="63" pos:column="12">fail<pos:position pos:line="63" pos:column="16"/></name>;<pos:position pos:line="63" pos:column="17"/></goto>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>

    <do pos:line="66" pos:column="5">do
    <block pos:line="67" pos:column="5">{
      <expr_stmt><expr><name pos:line="68" pos:column="7">saslrc<pos:position pos:line="68" pos:column="13"/></name> <operator pos:line="68" pos:column="14">=<pos:position pos:line="68" pos:column="15"/></operator> <call><name pos:line="68" pos:column="16">sasl_client_step<pos:position pos:line="68" pos:column="32"/></name> <argument_list pos:line="68" pos:column="33">(<argument><expr><name pos:line="68" pos:column="34">saslconn<pos:position pos:line="68" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="44">buf<pos:position pos:line="68" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="49">len<pos:position pos:line="68" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="54">&amp;<pos:position pos:line="68" pos:column="59"/></operator><name pos:line="68" pos:column="55">interaction<pos:position pos:line="68" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="68">&amp;<pos:position pos:line="68" pos:column="73"/></operator><name pos:line="68" pos:column="69">data<pos:position pos:line="68" pos:column="73"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="75">&amp;<pos:position pos:line="68" pos:column="80"/></operator><name pos:line="68" pos:column="76">len<pos:position pos:line="68" pos:column="79"/></name></expr></argument>)<pos:position pos:line="68" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="81"/></expr_stmt>
      <if pos:line="69" pos:column="7">if <condition pos:line="69" pos:column="10">(<expr><name pos:line="69" pos:column="11">saslrc<pos:position pos:line="69" pos:column="17"/></name> <operator pos:line="69" pos:column="18">==<pos:position pos:line="69" pos:column="20"/></operator> <name pos:line="69" pos:column="21">SASL_INTERACT<pos:position pos:line="69" pos:column="34"/></name></expr>)<pos:position pos:line="69" pos:column="35"/></condition><then pos:line="69" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="9">mutt_sasl_interact<pos:position pos:line="70" pos:column="27"/></name> <argument_list pos:line="70" pos:column="28">(<argument><expr><name pos:line="70" pos:column="29">interaction<pos:position pos:line="70" pos:column="40"/></name></expr></argument>)<pos:position pos:line="70" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="42"/></expr_stmt></block></then></if>
    }<pos:position pos:line="71" pos:column="6"/></block>
    while <condition pos:line="72" pos:column="11">(<expr><name pos:line="72" pos:column="12">saslrc<pos:position pos:line="72" pos:column="18"/></name> <operator pos:line="72" pos:column="19">==<pos:position pos:line="72" pos:column="21"/></operator> <name pos:line="72" pos:column="22">SASL_INTERACT<pos:position pos:line="72" pos:column="35"/></name></expr>)<pos:position pos:line="72" pos:column="36"/></condition>;<pos:position pos:line="72" pos:column="37"/></do>

    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><name pos:line="74" pos:column="9">len<pos:position pos:line="74" pos:column="12"/></name></expr>)<pos:position pos:line="74" pos:column="13"/></condition><then pos:line="74" pos:column="13">
    <block pos:line="75" pos:column="5">{
      <if pos:line="76" pos:column="7">if <condition pos:line="76" pos:column="10">(<expr><operator pos:line="76" pos:column="11">(<pos:position pos:line="76" pos:column="12"/></operator><name pos:line="76" pos:column="12">len<pos:position pos:line="76" pos:column="15"/></name> <operator pos:line="76" pos:column="16">*<pos:position pos:line="76" pos:column="17"/></operator> <literal type="number" pos:line="76" pos:column="18">2<pos:position pos:line="76" pos:column="19"/></literal><operator pos:line="76" pos:column="19">)<pos:position pos:line="76" pos:column="20"/></operator> <operator pos:line="76" pos:column="21">&gt;<pos:position pos:line="76" pos:column="25"/></operator> <name pos:line="76" pos:column="23">bufsize<pos:position pos:line="76" pos:column="30"/></name></expr>)<pos:position pos:line="76" pos:column="31"/></condition><then pos:line="76" pos:column="31">
      <block pos:line="77" pos:column="7">{
        <expr_stmt><expr><name pos:line="78" pos:column="9">bufsize<pos:position pos:line="78" pos:column="16"/></name> <operator pos:line="78" pos:column="17">=<pos:position pos:line="78" pos:column="18"/></operator> <name pos:line="78" pos:column="19">len<pos:position pos:line="78" pos:column="22"/></name> <operator pos:line="78" pos:column="23">*<pos:position pos:line="78" pos:column="24"/></operator> <literal type="number" pos:line="78" pos:column="25">2<pos:position pos:line="78" pos:column="26"/></literal></expr>;<pos:position pos:line="78" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="79" pos:column="9">safe_realloc<pos:position pos:line="79" pos:column="21"/></name> <argument_list pos:line="79" pos:column="22">(<argument><expr><operator pos:line="79" pos:column="23">&amp;<pos:position pos:line="79" pos:column="28"/></operator><name pos:line="79" pos:column="24">buf<pos:position pos:line="79" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="29">bufsize<pos:position pos:line="79" pos:column="36"/></name></expr></argument>)<pos:position pos:line="79" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="38"/></expr_stmt>
      }<pos:position pos:line="80" pos:column="8"/></block></then></if>
      <if pos:line="81" pos:column="7">if <condition pos:line="81" pos:column="10">(<expr><call><name pos:line="81" pos:column="11">sasl_encode64<pos:position pos:line="81" pos:column="24"/></name> <argument_list pos:line="81" pos:column="25">(<argument><expr><name pos:line="81" pos:column="26">data<pos:position pos:line="81" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="32">len<pos:position pos:line="81" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="37">buf<pos:position pos:line="81" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="42">bufsize<pos:position pos:line="81" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="81" pos:column="51">&amp;<pos:position pos:line="81" pos:column="56"/></operator><name pos:line="81" pos:column="52">len<pos:position pos:line="81" pos:column="55"/></name></expr></argument>)<pos:position pos:line="81" pos:column="56"/></argument_list></call> <operator pos:line="81" pos:column="57">!=<pos:position pos:line="81" pos:column="59"/></operator> <name pos:line="81" pos:column="60">SASL_OK<pos:position pos:line="81" pos:column="67"/></name></expr>)<pos:position pos:line="81" pos:column="68"/></condition><then pos:line="81" pos:column="68">
      <block pos:line="82" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="83" pos:column="9">dprint<pos:position pos:line="83" pos:column="15"/></name> <argument_list pos:line="83" pos:column="16">(<argument><expr><literal type="number" pos:line="83" pos:column="17">1<pos:position pos:line="83" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="83" pos:column="20">(<pos:position pos:line="83" pos:column="21"/></operator><name pos:line="83" pos:column="21">debugfile<pos:position pos:line="83" pos:column="30"/></name><operator pos:line="83" pos:column="30">,<pos:position pos:line="83" pos:column="31"/></operator> <literal type="string" pos:line="83" pos:column="32">"smtp_auth_sasl: error base64-encoding client response.\n"<pos:position pos:line="83" pos:column="90"/></literal><operator pos:line="83" pos:column="90">)<pos:position pos:line="83" pos:column="91"/></operator></expr></argument>)<pos:position pos:line="83" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="93"/></expr_stmt>
        <goto pos:line="84" pos:column="9">goto <name pos:line="84" pos:column="14">fail<pos:position pos:line="84" pos:column="18"/></name>;<pos:position pos:line="84" pos:column="19"/></goto>
      }<pos:position pos:line="85" pos:column="8"/></block></then></if>
    }<pos:position pos:line="86" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">strfcpy<pos:position pos:line="87" pos:column="12"/></name> <argument_list pos:line="87" pos:column="13">(<argument><expr><name pos:line="87" pos:column="14">buf<pos:position pos:line="87" pos:column="17"/></name> <operator pos:line="87" pos:column="18">+<pos:position pos:line="87" pos:column="19"/></operator> <name pos:line="87" pos:column="20">len<pos:position pos:line="87" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="25">"\r\n"<pos:position pos:line="87" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="87" pos:column="33">bufsize<pos:position pos:line="87" pos:column="40"/></name> <operator pos:line="87" pos:column="41">-<pos:position pos:line="87" pos:column="42"/></operator> <name pos:line="87" pos:column="43">len<pos:position pos:line="87" pos:column="46"/></name></expr></argument>)<pos:position pos:line="87" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="48"/></expr_stmt>
  }<pos:position pos:line="88" pos:column="4"/></block> while <condition pos:line="88" pos:column="11">(<expr><name pos:line="88" pos:column="12">rc<pos:position pos:line="88" pos:column="14"/></name> <operator pos:line="88" pos:column="15">==<pos:position pos:line="88" pos:column="17"/></operator> <name pos:line="88" pos:column="18">smtp_ready<pos:position pos:line="88" pos:column="28"/></name> <operator pos:line="88" pos:column="29">&amp;&amp;<pos:position pos:line="88" pos:column="39"/></operator> <name pos:line="88" pos:column="32">saslrc<pos:position pos:line="88" pos:column="38"/></name> <operator pos:line="88" pos:column="39">!=<pos:position pos:line="88" pos:column="41"/></operator> <name pos:line="88" pos:column="42">SASL_FAIL<pos:position pos:line="88" pos:column="51"/></name></expr>)<pos:position pos:line="88" pos:column="52"/></condition>;<pos:position pos:line="88" pos:column="53"/></do>

  <if pos:line="90" pos:column="3">if <condition pos:line="90" pos:column="6">(<expr><call><name pos:line="90" pos:column="7">smtp_success<pos:position pos:line="90" pos:column="19"/></name> <argument_list pos:line="90" pos:column="20">(<argument><expr><name pos:line="90" pos:column="21">rc<pos:position pos:line="90" pos:column="23"/></name></expr></argument>)<pos:position pos:line="90" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="25"/></condition><then pos:line="90" pos:column="25">
  <block pos:line="91" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="92" pos:column="5">mutt_sasl_setup_conn<pos:position pos:line="92" pos:column="25"/></name> <argument_list pos:line="92" pos:column="26">(<argument><expr><name pos:line="92" pos:column="27">conn<pos:position pos:line="92" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="33">saslconn<pos:position pos:line="92" pos:column="41"/></name></expr></argument>)<pos:position pos:line="92" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="93" pos:column="5">FREE<pos:position pos:line="93" pos:column="9"/></name> <argument_list pos:line="93" pos:column="10">(<argument><expr><operator pos:line="93" pos:column="11">&amp;<pos:position pos:line="93" pos:column="16"/></operator><name pos:line="93" pos:column="12">buf<pos:position pos:line="93" pos:column="15"/></name></expr></argument>)<pos:position pos:line="93" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="17"/></expr_stmt>
    <return pos:line="94" pos:column="5">return <expr><name pos:line="94" pos:column="12">SMTP_AUTH_SUCCESS<pos:position pos:line="94" pos:column="29"/></name></expr>;<pos:position pos:line="94" pos:column="30"/></return>
  }<pos:position pos:line="95" pos:column="4"/></block></then></if>

<label><name pos:line="97" pos:column="1">fail<pos:position pos:line="97" pos:column="5"/></name>:<pos:position pos:line="97" pos:column="6"/></label>
  <expr_stmt><expr><call><name pos:line="98" pos:column="3">sasl_dispose<pos:position pos:line="98" pos:column="15"/></name> <argument_list pos:line="98" pos:column="16">(<argument><expr><operator pos:line="98" pos:column="17">&amp;<pos:position pos:line="98" pos:column="22"/></operator><name pos:line="98" pos:column="18">saslconn<pos:position pos:line="98" pos:column="26"/></name></expr></argument>)<pos:position pos:line="98" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="99" pos:column="3">FREE<pos:position pos:line="99" pos:column="7"/></name> <argument_list pos:line="99" pos:column="8">(<argument><expr><operator pos:line="99" pos:column="9">&amp;<pos:position pos:line="99" pos:column="14"/></operator><name pos:line="99" pos:column="10">buf<pos:position pos:line="99" pos:column="13"/></name></expr></argument>)<pos:position pos:line="99" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="15"/></expr_stmt>
  <return pos:line="100" pos:column="3">return <expr><name pos:line="100" pos:column="10">SMTP_AUTH_FAIL<pos:position pos:line="100" pos:column="24"/></name></expr>;<pos:position pos:line="100" pos:column="25"/></return>
}<pos:position pos:line="101" pos:column="2"/></block></function></unit>

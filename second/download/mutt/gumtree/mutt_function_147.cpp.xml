<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_function_147.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">find_keys<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">ADDRESS<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">adrlist<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">unsigned<pos:position pos:line="1" pos:column="51"/></name> <name pos:line="1" pos:column="52">int<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">app<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">int<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">oppenc_mode<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">LIST<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">crypt_hook_list<pos:position pos:line="3" pos:column="24"/></name></decl>, <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="27">crypt_hook<pos:position pos:line="3" pos:column="37"/></name> <init pos:line="3" pos:column="38">= <expr><name pos:line="3" pos:column="40">NULL<pos:position pos:line="3" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">crypt_hook_val<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><name pos:line="4" pos:column="26">NULL<pos:position pos:line="4" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">keyID<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name pos:line="5" pos:column="23">NULL<pos:position pos:line="5" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">keylist<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><name pos:line="6" pos:column="19">NULL<pos:position pos:line="6" pos:column="23"/></name></expr></init></decl>, <modifier pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="26">t<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">keylist_size<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><literal type="number" pos:line="7" pos:column="25">0<pos:position pos:line="7" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">keylist_used<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><literal type="number" pos:line="8" pos:column="25">0<pos:position pos:line="8" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">ADDRESS<pos:position pos:line="9" pos:column="10"/></name> <modifier pos:line="9" pos:column="11">*<pos:position pos:line="9" pos:column="12"/></modifier></type><name pos:line="9" pos:column="12">addr<pos:position pos:line="9" pos:column="16"/></name> <init pos:line="9" pos:column="17">= <expr><name pos:line="9" pos:column="19">NULL<pos:position pos:line="9" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">ADDRESS<pos:position pos:line="10" pos:column="10"/></name> <modifier pos:line="10" pos:column="11">*<pos:position pos:line="10" pos:column="12"/></modifier></type><name pos:line="10" pos:column="12">p<pos:position pos:line="10" pos:column="13"/></name></decl>, <modifier pos:line="10" pos:column="15">*<pos:position pos:line="10" pos:column="16"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="16">q<pos:position pos:line="10" pos:column="17"/></name></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">crypt_key_t<pos:position pos:line="11" pos:column="14"/></name> <modifier pos:line="11" pos:column="15">*<pos:position pos:line="11" pos:column="16"/></modifier></type><name pos:line="11" pos:column="16">k_info<pos:position pos:line="11" pos:column="22"/></name></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="12" pos:column="3">const<pos:position pos:line="12" pos:column="8"/></specifier> <name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">fqdn<pos:position pos:line="12" pos:column="19"/></name> <init pos:line="12" pos:column="20">= <expr><call><name pos:line="12" pos:column="22">mutt_fqdn<pos:position pos:line="12" pos:column="31"/></name> <argument_list pos:line="12" pos:column="32">(<argument><expr><literal type="number" pos:line="12" pos:column="33">1<pos:position pos:line="12" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name></type> <name><name pos:line="13" pos:column="8">buf<pos:position pos:line="13" pos:column="11"/></name><index pos:line="13" pos:column="11">[<expr><name pos:line="13" pos:column="12">LONG_STRING<pos:position pos:line="13" pos:column="23"/></name></expr>]<pos:position pos:line="13" pos:column="24"/></index></name></decl>;<pos:position pos:line="13" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">forced_valid<pos:position pos:line="14" pos:column="19"/></name></decl>;<pos:position pos:line="14" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type> <name pos:line="15" pos:column="7">r<pos:position pos:line="15" pos:column="8"/></name></decl>;<pos:position pos:line="15" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">int<pos:position pos:line="16" pos:column="6"/></name></type> <name pos:line="16" pos:column="7">key_selected<pos:position pos:line="16" pos:column="19"/></name></decl>;<pos:position pos:line="16" pos:column="20"/></decl_stmt>

<cpp:if pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">if<pos:position pos:line="18" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="18" pos:column="5">0<pos:position pos:line="18" pos:column="6"/></literal></expr></cpp:if>
  *r_application = APPLICATION_PGP|APPLICATION_SMIME;
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>

  <for pos:line="22" pos:column="3">for <control pos:line="22" pos:column="7">(<init><expr><name pos:line="22" pos:column="8">p<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <name pos:line="22" pos:column="12">adrlist<pos:position pos:line="22" pos:column="19"/></name></expr>;<pos:position pos:line="22" pos:column="20"/></init> <condition><expr><name pos:line="22" pos:column="21">p<pos:position pos:line="22" pos:column="22"/></name></expr> ;<pos:position pos:line="22" pos:column="24"/></condition> <incr><expr><name pos:line="22" pos:column="25">p<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">=<pos:position pos:line="22" pos:column="28"/></operator> <name><name pos:line="22" pos:column="29">p<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">-&gt;<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="32">next<pos:position pos:line="22" pos:column="36"/></name></name></expr></incr>)<pos:position pos:line="22" pos:column="37"/></control>
    <block pos:line="23" pos:column="5">{
      <expr_stmt><expr><name pos:line="24" pos:column="7">key_selected<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <literal type="number" pos:line="24" pos:column="22">0<pos:position pos:line="24" pos:column="23"/></literal></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name pos:line="25" pos:column="7">crypt_hook_list<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">=<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="25">crypt_hook<pos:position pos:line="25" pos:column="35"/></name> <operator pos:line="25" pos:column="36">=<pos:position pos:line="25" pos:column="37"/></operator> <call><name pos:line="25" pos:column="38">mutt_crypt_hook<pos:position pos:line="25" pos:column="53"/></name> <argument_list pos:line="25" pos:column="54">(<argument><expr><name pos:line="25" pos:column="55">p<pos:position pos:line="25" pos:column="56"/></name></expr></argument>)<pos:position pos:line="25" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="58"/></expr_stmt>
      <do pos:line="26" pos:column="7">do
      <block pos:line="27" pos:column="7">{
        <expr_stmt><expr><name pos:line="28" pos:column="9">q<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <name pos:line="28" pos:column="13">p<pos:position pos:line="28" pos:column="14"/></name></expr>;<pos:position pos:line="28" pos:column="15"/></expr_stmt>
        <expr_stmt><expr><name pos:line="29" pos:column="9">forced_valid<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">=<pos:position pos:line="29" pos:column="23"/></operator> <literal type="number" pos:line="29" pos:column="24">0<pos:position pos:line="29" pos:column="25"/></literal></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="30" pos:column="9">k_info<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <name pos:line="30" pos:column="18">NULL<pos:position pos:line="30" pos:column="22"/></name></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt>

        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">crypt_hook<pos:position pos:line="32" pos:column="23"/></name> <operator pos:line="32" pos:column="24">!=<pos:position pos:line="32" pos:column="26"/></operator> <name pos:line="32" pos:column="27">NULL<pos:position pos:line="32" pos:column="31"/></name></expr>)<pos:position pos:line="32" pos:column="32"/></condition><then pos:line="32" pos:column="32">
          <block pos:line="33" pos:column="11">{
            <expr_stmt><expr><name pos:line="34" pos:column="13">crypt_hook_val<pos:position pos:line="34" pos:column="27"/></name> <operator pos:line="34" pos:column="28">=<pos:position pos:line="34" pos:column="29"/></operator> <name><name pos:line="34" pos:column="30">crypt_hook<pos:position pos:line="34" pos:column="40"/></name><operator pos:line="34" pos:column="40">-&gt;<pos:position pos:line="34" pos:column="45"/></operator><name pos:line="34" pos:column="42">data<pos:position pos:line="34" pos:column="46"/></name></name></expr>;<pos:position pos:line="34" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name pos:line="35" pos:column="13">r<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">=<pos:position pos:line="35" pos:column="16"/></operator> <name pos:line="35" pos:column="17">M_YES<pos:position pos:line="35" pos:column="22"/></name></expr>;<pos:position pos:line="35" pos:column="23"/></expr_stmt>
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><operator pos:line="36" pos:column="17">!<pos:position pos:line="36" pos:column="18"/></operator> <name pos:line="36" pos:column="19">oppenc_mode<pos:position pos:line="36" pos:column="30"/></name> <operator pos:line="36" pos:column="31">&amp;&amp;<pos:position pos:line="36" pos:column="41"/></operator> <call><name pos:line="36" pos:column="34">option<pos:position pos:line="36" pos:column="40"/></name><argument_list pos:line="36" pos:column="40">(<argument><expr><name pos:line="36" pos:column="41">OPTCRYPTCONFIRMHOOK<pos:position pos:line="36" pos:column="60"/></name></expr></argument>)<pos:position pos:line="36" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="62"/></condition><then pos:line="36" pos:column="62">
              <block pos:line="37" pos:column="15">{
                <expr_stmt><expr><call><name pos:line="38" pos:column="17">snprintf<pos:position pos:line="38" pos:column="25"/></name> <argument_list pos:line="38" pos:column="26">(<argument><expr><name pos:line="38" pos:column="27">buf<pos:position pos:line="38" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="32">sizeof <argument_list pos:line="38" pos:column="39">(<argument><expr><name pos:line="38" pos:column="40">buf<pos:position pos:line="38" pos:column="43"/></name></expr></argument>)<pos:position pos:line="38" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="46">_<pos:position pos:line="38" pos:column="47"/></name><argument_list pos:line="38" pos:column="47">(<argument><expr><literal type="string" pos:line="38" pos:column="48">"Use keyID = \"%s\" for %s?"<pos:position pos:line="38" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="77"/></argument_list></call></expr></argument>,
                          <argument><expr><name pos:line="39" pos:column="27">crypt_hook_val<pos:position pos:line="39" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="43">p<pos:position pos:line="39" pos:column="44"/></name><operator pos:line="39" pos:column="44">-&gt;<pos:position pos:line="39" pos:column="49"/></operator><name pos:line="39" pos:column="46">mailbox<pos:position pos:line="39" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><name pos:line="40" pos:column="17">r<pos:position pos:line="40" pos:column="18"/></name> <operator pos:line="40" pos:column="19">=<pos:position pos:line="40" pos:column="20"/></operator> <call><name pos:line="40" pos:column="21">mutt_yesorno<pos:position pos:line="40" pos:column="33"/></name> <argument_list pos:line="40" pos:column="34">(<argument><expr><name pos:line="40" pos:column="35">buf<pos:position pos:line="40" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="40">M_YES<pos:position pos:line="40" pos:column="45"/></name></expr></argument>)<pos:position pos:line="40" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="47"/></expr_stmt>
              }<pos:position pos:line="41" pos:column="16"/></block></then></if>
            <if pos:line="42" pos:column="13">if <condition pos:line="42" pos:column="16">(<expr><name pos:line="42" pos:column="17">r<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">==<pos:position pos:line="42" pos:column="21"/></operator> <name pos:line="42" pos:column="22">M_YES<pos:position pos:line="42" pos:column="27"/></name></expr>)<pos:position pos:line="42" pos:column="28"/></condition><then pos:line="42" pos:column="28">
              <block pos:line="43" pos:column="15">{
                <if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><call><name pos:line="44" pos:column="21">crypt_is_numerical_keyid<pos:position pos:line="44" pos:column="45"/></name> <argument_list pos:line="44" pos:column="46">(<argument><expr><name pos:line="44" pos:column="47">crypt_hook_val<pos:position pos:line="44" pos:column="61"/></name></expr></argument>)<pos:position pos:line="44" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="63"/></condition><then pos:line="44" pos:column="63">
                  <block pos:line="45" pos:column="19">{
                    <expr_stmt><expr><name pos:line="46" pos:column="21">keyID<pos:position pos:line="46" pos:column="26"/></name> <operator pos:line="46" pos:column="27">=<pos:position pos:line="46" pos:column="28"/></operator> <name pos:line="46" pos:column="29">crypt_hook_val<pos:position pos:line="46" pos:column="43"/></name></expr>;<pos:position pos:line="46" pos:column="44"/></expr_stmt>
                    <if pos:line="47" pos:column="21">if <condition pos:line="47" pos:column="24">(<expr><call><name pos:line="47" pos:column="25">strncmp<pos:position pos:line="47" pos:column="32"/></name> <argument_list pos:line="47" pos:column="33">(<argument><expr><name pos:line="47" pos:column="34">keyID<pos:position pos:line="47" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="41">"0x"<pos:position pos:line="47" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="47">2<pos:position pos:line="47" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="49"/></argument_list></call> <operator pos:line="47" pos:column="50">==<pos:position pos:line="47" pos:column="52"/></operator> <literal type="number" pos:line="47" pos:column="53">0<pos:position pos:line="47" pos:column="54"/></literal></expr>)<pos:position pos:line="47" pos:column="55"/></condition><then pos:line="47" pos:column="55">
                      <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="23">keyID<pos:position pos:line="48" pos:column="28"/></name> <operator pos:line="48" pos:column="29">+=<pos:position pos:line="48" pos:column="31"/></operator> <literal type="number" pos:line="48" pos:column="32">2<pos:position pos:line="48" pos:column="33"/></literal></expr>;<pos:position pos:line="48" pos:column="34"/></expr_stmt></block></then></if>
                    <goto pos:line="49" pos:column="21">goto <name pos:line="49" pos:column="26">bypass_selection<pos:position pos:line="49" pos:column="42"/></name>;<pos:position pos:line="49" pos:column="43"/></goto>                <comment type="block" pos:line="49" pos:column="59">/* you don't see this. */</comment>
                  }<pos:position pos:line="50" pos:column="20"/></block></then></if>

                <comment type="block" pos:line="52" pos:column="17">/* check for e-mail address */</comment>
                <if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><operator pos:line="53" pos:column="21">(<pos:position pos:line="53" pos:column="22"/></operator><name pos:line="53" pos:column="22">t<pos:position pos:line="53" pos:column="23"/></name> <operator pos:line="53" pos:column="24">=<pos:position pos:line="53" pos:column="25"/></operator> <call><name pos:line="53" pos:column="26">strchr<pos:position pos:line="53" pos:column="32"/></name> <argument_list pos:line="53" pos:column="33">(<argument><expr><name pos:line="53" pos:column="34">crypt_hook_val<pos:position pos:line="53" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="53" pos:column="50">'@'<pos:position pos:line="53" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="54"/></argument_list></call><operator pos:line="53" pos:column="54">)<pos:position pos:line="53" pos:column="55"/></operator> <operator pos:line="53" pos:column="56">&amp;&amp;<pos:position pos:line="53" pos:column="66"/></operator> 
                    <operator pos:line="54" pos:column="21">(<pos:position pos:line="54" pos:column="22"/></operator><name pos:line="54" pos:column="22">addr<pos:position pos:line="54" pos:column="26"/></name> <operator pos:line="54" pos:column="27">=<pos:position pos:line="54" pos:column="28"/></operator> <call><name pos:line="54" pos:column="29">rfc822_parse_adrlist<pos:position pos:line="54" pos:column="49"/></name> <argument_list pos:line="54" pos:column="50">(<argument><expr><name pos:line="54" pos:column="51">NULL<pos:position pos:line="54" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="57">crypt_hook_val<pos:position pos:line="54" pos:column="71"/></name></expr></argument>)<pos:position pos:line="54" pos:column="72"/></argument_list></call><operator pos:line="54" pos:column="72">)<pos:position pos:line="54" pos:column="73"/></operator></expr>)<pos:position pos:line="54" pos:column="74"/></condition><then pos:line="54" pos:column="74">
                  <block pos:line="55" pos:column="19">{
                    <if pos:line="56" pos:column="21">if <condition pos:line="56" pos:column="24">(<expr><name pos:line="56" pos:column="25">fqdn<pos:position pos:line="56" pos:column="29"/></name></expr>)<pos:position pos:line="56" pos:column="30"/></condition><then pos:line="56" pos:column="30">
                      <block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="23">rfc822_qualify<pos:position pos:line="57" pos:column="37"/></name> <argument_list pos:line="57" pos:column="38">(<argument><expr><name pos:line="57" pos:column="39">addr<pos:position pos:line="57" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="45">fqdn<pos:position pos:line="57" pos:column="49"/></name></expr></argument>)<pos:position pos:line="57" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="51"/></expr_stmt></block></then></if>
                    <expr_stmt><expr><name pos:line="58" pos:column="21">q<pos:position pos:line="58" pos:column="22"/></name> <operator pos:line="58" pos:column="23">=<pos:position pos:line="58" pos:column="24"/></operator> <name pos:line="58" pos:column="25">addr<pos:position pos:line="58" pos:column="29"/></name></expr>;<pos:position pos:line="58" pos:column="30"/></expr_stmt>
                  }<pos:position pos:line="59" pos:column="20"/></block></then>
                <elseif pos:line="60" pos:column="17">else <if pos:line="60" pos:column="22">if <condition pos:line="60" pos:column="25">(<expr><operator pos:line="60" pos:column="26">!<pos:position pos:line="60" pos:column="27"/></operator> <name pos:line="60" pos:column="28">oppenc_mode<pos:position pos:line="60" pos:column="39"/></name></expr>)<pos:position pos:line="60" pos:column="40"/></condition><then pos:line="60" pos:column="40">
                  <block pos:line="61" pos:column="19">{
<cpp:if pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">if<pos:position pos:line="62" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="62" pos:column="5">0<pos:position pos:line="62" pos:column="6"/></literal></expr></cpp:if>		  
                    k_info = crypt_getkeybystr (crypt_hook_val, KEYFLAG_CANENCRYPT, 
                                                *r_application, &amp;forced_valid);
<cpp:else pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">else<pos:position pos:line="65" pos:column="6"/></cpp:directive></cpp:else>
                    <expr_stmt><expr><name pos:line="66" pos:column="21">k_info<pos:position pos:line="66" pos:column="27"/></name> <operator pos:line="66" pos:column="28">=<pos:position pos:line="66" pos:column="29"/></operator> <call><name pos:line="66" pos:column="30">crypt_getkeybystr<pos:position pos:line="66" pos:column="47"/></name> <argument_list pos:line="66" pos:column="48">(<argument><expr><name pos:line="66" pos:column="49">crypt_hook_val<pos:position pos:line="66" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="65">KEYFLAG_CANENCRYPT<pos:position pos:line="66" pos:column="83"/></name></expr></argument>, 
                                                <argument><expr><name pos:line="67" pos:column="49">app<pos:position pos:line="67" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="54">&amp;<pos:position pos:line="67" pos:column="59"/></operator><name pos:line="67" pos:column="55">forced_valid<pos:position pos:line="67" pos:column="67"/></name></expr></argument>)<pos:position pos:line="67" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="69"/></expr_stmt>
<cpp:endif pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">endif<pos:position pos:line="68" pos:column="7"/></cpp:directive></cpp:endif>
                  }<pos:position pos:line="69" pos:column="20"/></block></then></if></elseif></if>
              }<pos:position pos:line="70" pos:column="16"/></block></then>
            <elseif pos:line="71" pos:column="13">else <if pos:line="71" pos:column="18">if <condition pos:line="71" pos:column="21">(<expr><name pos:line="71" pos:column="22">r<pos:position pos:line="71" pos:column="23"/></name> <operator pos:line="71" pos:column="24">==<pos:position pos:line="71" pos:column="26"/></operator> <name pos:line="71" pos:column="27">M_NO<pos:position pos:line="71" pos:column="31"/></name></expr>)<pos:position pos:line="71" pos:column="32"/></condition><then pos:line="71" pos:column="32">
              <block pos:line="72" pos:column="15">{
                <if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><name pos:line="73" pos:column="21">key_selected<pos:position pos:line="73" pos:column="33"/></name> <operator pos:line="73" pos:column="34">||<pos:position pos:line="73" pos:column="36"/></operator> <operator pos:line="73" pos:column="37">(<pos:position pos:line="73" pos:column="38"/></operator><name><name pos:line="73" pos:column="38">crypt_hook<pos:position pos:line="73" pos:column="48"/></name><operator pos:line="73" pos:column="48">-&gt;<pos:position pos:line="73" pos:column="53"/></operator><name pos:line="73" pos:column="50">next<pos:position pos:line="73" pos:column="54"/></name></name> <operator pos:line="73" pos:column="55">!=<pos:position pos:line="73" pos:column="57"/></operator> <name pos:line="73" pos:column="58">NULL<pos:position pos:line="73" pos:column="62"/></name><operator pos:line="73" pos:column="62">)<pos:position pos:line="73" pos:column="63"/></operator></expr>)<pos:position pos:line="73" pos:column="64"/></condition><then pos:line="73" pos:column="64">
                  <block pos:line="74" pos:column="19">{
                    <expr_stmt><expr><name pos:line="75" pos:column="21">crypt_hook<pos:position pos:line="75" pos:column="31"/></name> <operator pos:line="75" pos:column="32">=<pos:position pos:line="75" pos:column="33"/></operator> <name><name pos:line="75" pos:column="34">crypt_hook<pos:position pos:line="75" pos:column="44"/></name><operator pos:line="75" pos:column="44">-&gt;<pos:position pos:line="75" pos:column="49"/></operator><name pos:line="75" pos:column="46">next<pos:position pos:line="75" pos:column="50"/></name></name></expr>;<pos:position pos:line="75" pos:column="51"/></expr_stmt>
                    <continue pos:line="76" pos:column="21">continue;<pos:position pos:line="76" pos:column="30"/></continue>
                  }<pos:position pos:line="77" pos:column="20"/></block></then></if>
              }<pos:position pos:line="78" pos:column="16"/></block></then></if></elseif>
            <elseif pos:line="79" pos:column="13">else <if pos:line="79" pos:column="18">if <condition pos:line="79" pos:column="21">(<expr><name pos:line="79" pos:column="22">r<pos:position pos:line="79" pos:column="23"/></name> <operator pos:line="79" pos:column="24">==<pos:position pos:line="79" pos:column="26"/></operator> <operator pos:line="79" pos:column="27">-<pos:position pos:line="79" pos:column="28"/></operator><literal type="number" pos:line="79" pos:column="28">1<pos:position pos:line="79" pos:column="29"/></literal></expr>)<pos:position pos:line="79" pos:column="30"/></condition><then pos:line="79" pos:column="30">
              <block pos:line="80" pos:column="15">{
                <expr_stmt><expr><call><name pos:line="81" pos:column="17">FREE<pos:position pos:line="81" pos:column="21"/></name> <argument_list pos:line="81" pos:column="22">(<argument><expr><operator pos:line="81" pos:column="23">&amp;<pos:position pos:line="81" pos:column="28"/></operator><name pos:line="81" pos:column="24">keylist<pos:position pos:line="81" pos:column="31"/></name></expr></argument>)<pos:position pos:line="81" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="82" pos:column="17">rfc822_free_address<pos:position pos:line="82" pos:column="36"/></name> <argument_list pos:line="82" pos:column="37">(<argument><expr><operator pos:line="82" pos:column="38">&amp;<pos:position pos:line="82" pos:column="43"/></operator><name pos:line="82" pos:column="39">addr<pos:position pos:line="82" pos:column="43"/></name></expr></argument>)<pos:position pos:line="82" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="83" pos:column="17">mutt_free_list<pos:position pos:line="83" pos:column="31"/></name> <argument_list pos:line="83" pos:column="32">(<argument><expr><operator pos:line="83" pos:column="33">&amp;<pos:position pos:line="83" pos:column="38"/></operator><name pos:line="83" pos:column="34">crypt_hook_list<pos:position pos:line="83" pos:column="49"/></name></expr></argument>)<pos:position pos:line="83" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="51"/></expr_stmt>
                <return pos:line="84" pos:column="17">return <expr><name pos:line="84" pos:column="24">NULL<pos:position pos:line="84" pos:column="28"/></name></expr>;<pos:position pos:line="84" pos:column="29"/></return>
              }<pos:position pos:line="85" pos:column="16"/></block></then></if></elseif></if>
          }<pos:position pos:line="86" pos:column="12"/></block></then></if>

        <if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><name pos:line="88" pos:column="13">k_info<pos:position pos:line="88" pos:column="19"/></name> <operator pos:line="88" pos:column="20">==<pos:position pos:line="88" pos:column="22"/></operator> <name pos:line="88" pos:column="23">NULL<pos:position pos:line="88" pos:column="27"/></name></expr>)<pos:position pos:line="88" pos:column="28"/></condition><then pos:line="88" pos:column="28">
          <block pos:line="89" pos:column="11">{
            <expr_stmt><expr><name pos:line="90" pos:column="13">k_info<pos:position pos:line="90" pos:column="19"/></name> <operator pos:line="90" pos:column="20">=<pos:position pos:line="90" pos:column="21"/></operator> <call><name pos:line="90" pos:column="22">crypt_getkeybyaddr<pos:position pos:line="90" pos:column="40"/></name> <argument_list pos:line="90" pos:column="41">(<argument><expr><name pos:line="90" pos:column="42">q<pos:position pos:line="90" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="45">KEYFLAG_CANENCRYPT<pos:position pos:line="90" pos:column="63"/></name></expr></argument>,
                                        <argument><expr><name pos:line="91" pos:column="41">app<pos:position pos:line="91" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="46">&amp;<pos:position pos:line="91" pos:column="51"/></operator><name pos:line="91" pos:column="47">forced_valid<pos:position pos:line="91" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="61">oppenc_mode<pos:position pos:line="91" pos:column="72"/></name></expr></argument>)<pos:position pos:line="91" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="74"/></expr_stmt>
          }<pos:position pos:line="92" pos:column="12"/></block></then></if>

        <if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><operator pos:line="94" pos:column="13">(<pos:position pos:line="94" pos:column="14"/></operator><name pos:line="94" pos:column="14">k_info<pos:position pos:line="94" pos:column="20"/></name> <operator pos:line="94" pos:column="21">==<pos:position pos:line="94" pos:column="23"/></operator> <name pos:line="94" pos:column="24">NULL<pos:position pos:line="94" pos:column="28"/></name><operator pos:line="94" pos:column="28">)<pos:position pos:line="94" pos:column="29"/></operator> <operator pos:line="94" pos:column="30">&amp;&amp;<pos:position pos:line="94" pos:column="40"/></operator> <operator pos:line="94" pos:column="33">(<pos:position pos:line="94" pos:column="34"/></operator><operator pos:line="94" pos:column="34">!<pos:position pos:line="94" pos:column="35"/></operator> <name pos:line="94" pos:column="36">oppenc_mode<pos:position pos:line="94" pos:column="47"/></name><operator pos:line="94" pos:column="47">)<pos:position pos:line="94" pos:column="48"/></operator></expr>)<pos:position pos:line="94" pos:column="49"/></condition><then pos:line="94" pos:column="49">
          <block pos:line="95" pos:column="11">{
            <expr_stmt><expr><call><name pos:line="96" pos:column="13">snprintf<pos:position pos:line="96" pos:column="21"/></name> <argument_list pos:line="96" pos:column="22">(<argument><expr><name pos:line="96" pos:column="23">buf<pos:position pos:line="96" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="96" pos:column="28">sizeof <argument_list pos:line="96" pos:column="35">(<argument><expr><name pos:line="96" pos:column="36">buf<pos:position pos:line="96" pos:column="39"/></name></expr></argument>)<pos:position pos:line="96" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="96" pos:column="42">_<pos:position pos:line="96" pos:column="43"/></name><argument_list pos:line="96" pos:column="43">(<argument><expr><literal type="string" pos:line="96" pos:column="44">"Enter keyID for %s: "<pos:position pos:line="96" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="69">q<pos:position pos:line="96" pos:column="70"/></name><operator pos:line="96" pos:column="70">-&gt;<pos:position pos:line="96" pos:column="75"/></operator><name pos:line="96" pos:column="72">mailbox<pos:position pos:line="96" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="81"/></expr_stmt>
            
            <expr_stmt><expr><name pos:line="98" pos:column="13">k_info<pos:position pos:line="98" pos:column="19"/></name> <operator pos:line="98" pos:column="20">=<pos:position pos:line="98" pos:column="21"/></operator> <call><name pos:line="98" pos:column="22">crypt_ask_for_key<pos:position pos:line="98" pos:column="39"/></name> <argument_list pos:line="98" pos:column="40">(<argument><expr><name pos:line="98" pos:column="41">buf<pos:position pos:line="98" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="46">q<pos:position pos:line="98" pos:column="47"/></name><operator pos:line="98" pos:column="47">-&gt;<pos:position pos:line="98" pos:column="52"/></operator><name pos:line="98" pos:column="49">mailbox<pos:position pos:line="98" pos:column="56"/></name></name></expr></argument>,
                                        <argument><expr><name pos:line="99" pos:column="41">KEYFLAG_CANENCRYPT<pos:position pos:line="99" pos:column="59"/></name></expr></argument>,
<cpp:if pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">if<pos:position pos:line="100" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="100" pos:column="5">0<pos:position pos:line="100" pos:column="6"/></literal></expr></cpp:if>
                                        *r_application,
<cpp:else pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">else<pos:position pos:line="102" pos:column="6"/></cpp:directive></cpp:else>
                                        <argument><expr><name pos:line="103" pos:column="41">app<pos:position pos:line="103" pos:column="44"/></name></expr></argument>,
<cpp:endif pos:line="104" pos:column="1">#<cpp:directive pos:line="104" pos:column="2">endif<pos:position pos:line="104" pos:column="7"/></cpp:directive></cpp:endif>
                                        <argument><expr><operator pos:line="105" pos:column="41">&amp;<pos:position pos:line="105" pos:column="46"/></operator><name pos:line="105" pos:column="42">forced_valid<pos:position pos:line="105" pos:column="54"/></name></expr></argument>)<pos:position pos:line="105" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="56"/></expr_stmt>
          }<pos:position pos:line="106" pos:column="12"/></block></then></if>

        <if pos:line="108" pos:column="9">if <condition pos:line="108" pos:column="12">(<expr><name pos:line="108" pos:column="13">k_info<pos:position pos:line="108" pos:column="19"/></name> <operator pos:line="108" pos:column="20">==<pos:position pos:line="108" pos:column="22"/></operator> <name pos:line="108" pos:column="23">NULL<pos:position pos:line="108" pos:column="27"/></name></expr>)<pos:position pos:line="108" pos:column="28"/></condition><then pos:line="108" pos:column="28">
          <block pos:line="109" pos:column="11">{
            <expr_stmt><expr><call><name pos:line="110" pos:column="13">FREE<pos:position pos:line="110" pos:column="17"/></name> <argument_list pos:line="110" pos:column="18">(<argument><expr><operator pos:line="110" pos:column="19">&amp;<pos:position pos:line="110" pos:column="24"/></operator><name pos:line="110" pos:column="20">keylist<pos:position pos:line="110" pos:column="27"/></name></expr></argument>)<pos:position pos:line="110" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="111" pos:column="13">rfc822_free_address<pos:position pos:line="111" pos:column="32"/></name> <argument_list pos:line="111" pos:column="33">(<argument><expr><operator pos:line="111" pos:column="34">&amp;<pos:position pos:line="111" pos:column="39"/></operator><name pos:line="111" pos:column="35">addr<pos:position pos:line="111" pos:column="39"/></name></expr></argument>)<pos:position pos:line="111" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="112" pos:column="13">mutt_free_list<pos:position pos:line="112" pos:column="27"/></name> <argument_list pos:line="112" pos:column="28">(<argument><expr><operator pos:line="112" pos:column="29">&amp;<pos:position pos:line="112" pos:column="34"/></operator><name pos:line="112" pos:column="30">crypt_hook_list<pos:position pos:line="112" pos:column="45"/></name></expr></argument>)<pos:position pos:line="112" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="47"/></expr_stmt>
            <return pos:line="113" pos:column="13">return <expr><name pos:line="113" pos:column="20">NULL<pos:position pos:line="113" pos:column="24"/></name></expr>;<pos:position pos:line="113" pos:column="25"/></return>
          }<pos:position pos:line="114" pos:column="12"/></block></then></if>


        <expr_stmt><expr><name pos:line="117" pos:column="9">keyID<pos:position pos:line="117" pos:column="14"/></name> <operator pos:line="117" pos:column="15">=<pos:position pos:line="117" pos:column="16"/></operator> <call><name pos:line="117" pos:column="17">crypt_fpr_or_lkeyid<pos:position pos:line="117" pos:column="36"/></name> <argument_list pos:line="117" pos:column="37">(<argument><expr><name pos:line="117" pos:column="38">k_info<pos:position pos:line="117" pos:column="44"/></name></expr></argument>)<pos:position pos:line="117" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="46"/></expr_stmt>

<cpp:if pos:line="119" pos:column="1">#<cpp:directive pos:line="119" pos:column="2">if<pos:position pos:line="119" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="119" pos:column="5">0<pos:position pos:line="119" pos:column="6"/></literal></expr></cpp:if>
        if (k_info-&gt;flags &amp; KEYFLAG_ISX509)
          *r_application &amp;= ~APPLICATION_PGP;
        if (!(k_info-&gt;flags &amp; KEYFLAG_ISX509))
          *r_application &amp;= ~APPLICATION_SMIME;
<cpp:endif pos:line="124" pos:column="1">#<cpp:directive pos:line="124" pos:column="2">endif<pos:position pos:line="124" pos:column="7"/></cpp:directive></cpp:endif>
        
    <label><name pos:line="126" pos:column="5">bypass_selection<pos:position pos:line="126" pos:column="21"/></name>:<pos:position pos:line="126" pos:column="22"/></label>
        <expr_stmt><expr><name pos:line="127" pos:column="9">keylist_size<pos:position pos:line="127" pos:column="21"/></name> <operator pos:line="127" pos:column="22">+=<pos:position pos:line="127" pos:column="24"/></operator> <call><name pos:line="127" pos:column="25">mutt_strlen<pos:position pos:line="127" pos:column="36"/></name> <argument_list pos:line="127" pos:column="37">(<argument><expr><name pos:line="127" pos:column="38">keyID<pos:position pos:line="127" pos:column="43"/></name></expr></argument>)<pos:position pos:line="127" pos:column="44"/></argument_list></call> <operator pos:line="127" pos:column="45">+<pos:position pos:line="127" pos:column="46"/></operator> <literal type="number" pos:line="127" pos:column="47">4<pos:position pos:line="127" pos:column="48"/></literal> <operator pos:line="127" pos:column="49">+<pos:position pos:line="127" pos:column="50"/></operator> <literal type="number" pos:line="127" pos:column="51">1<pos:position pos:line="127" pos:column="52"/></literal></expr>;<pos:position pos:line="127" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="128" pos:column="9">safe_realloc<pos:position pos:line="128" pos:column="21"/></name> <argument_list pos:line="128" pos:column="22">(<argument><expr><operator pos:line="128" pos:column="23">&amp;<pos:position pos:line="128" pos:column="28"/></operator><name pos:line="128" pos:column="24">keylist<pos:position pos:line="128" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="33">keylist_size<pos:position pos:line="128" pos:column="45"/></name></expr></argument>)<pos:position pos:line="128" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="129" pos:column="9">sprintf<pos:position pos:line="129" pos:column="16"/></name> <argument_list pos:line="129" pos:column="17">(<argument><expr><name pos:line="129" pos:column="18">keylist<pos:position pos:line="129" pos:column="25"/></name> <operator pos:line="129" pos:column="26">+<pos:position pos:line="129" pos:column="27"/></operator> <name pos:line="129" pos:column="28">keylist_used<pos:position pos:line="129" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="129" pos:column="42">"%s0x%s%s"<pos:position pos:line="129" pos:column="52"/></literal></expr></argument>, <comment type="block" pos:line="129" pos:column="54">/* __SPRINTF_CHECKED__ */</comment>
                <argument><expr><ternary><condition><expr><name pos:line="130" pos:column="17">keylist_used<pos:position pos:line="130" pos:column="29"/></name></expr> ?<pos:position pos:line="130" pos:column="31"/></condition><then pos:line="130" pos:column="31"> <expr><literal type="string" pos:line="130" pos:column="32">" "<pos:position pos:line="130" pos:column="35"/></literal></expr> <pos:position pos:line="130" pos:column="36"/></then><else pos:line="130" pos:column="36">: <expr><literal type="string" pos:line="130" pos:column="38">""<pos:position pos:line="130" pos:column="40"/></literal></expr></else></ternary></expr></argument>,  <argument><expr><name pos:line="130" pos:column="43">keyID<pos:position pos:line="130" pos:column="48"/></name></expr></argument>,
                <argument><expr><ternary><condition><expr><name pos:line="131" pos:column="17">forced_valid<pos:position pos:line="131" pos:column="29"/></name></expr>?<pos:position pos:line="131" pos:column="30"/></condition><then pos:line="131" pos:column="30"> <expr><literal type="string" pos:line="131" pos:column="31">"!"<pos:position pos:line="131" pos:column="34"/></literal></expr></then><else pos:line="131" pos:column="34">:<expr><literal type="string" pos:line="131" pos:column="35">""<pos:position pos:line="131" pos:column="37"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="131" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name pos:line="132" pos:column="9">keylist_used<pos:position pos:line="132" pos:column="21"/></name> <operator pos:line="132" pos:column="22">=<pos:position pos:line="132" pos:column="23"/></operator> <call><name pos:line="132" pos:column="24">mutt_strlen<pos:position pos:line="132" pos:column="35"/></name> <argument_list pos:line="132" pos:column="36">(<argument><expr><name pos:line="132" pos:column="37">keylist<pos:position pos:line="132" pos:column="44"/></name></expr></argument>)<pos:position pos:line="132" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="46"/></expr_stmt>

        <expr_stmt><expr><name pos:line="134" pos:column="9">key_selected<pos:position pos:line="134" pos:column="21"/></name> <operator pos:line="134" pos:column="22">=<pos:position pos:line="134" pos:column="23"/></operator> <literal type="number" pos:line="134" pos:column="24">1<pos:position pos:line="134" pos:column="25"/></literal></expr>;<pos:position pos:line="134" pos:column="26"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="136" pos:column="9">crypt_free_key<pos:position pos:line="136" pos:column="23"/></name> <argument_list pos:line="136" pos:column="24">(<argument><expr><operator pos:line="136" pos:column="25">&amp;<pos:position pos:line="136" pos:column="30"/></operator><name pos:line="136" pos:column="26">k_info<pos:position pos:line="136" pos:column="32"/></name></expr></argument>)<pos:position pos:line="136" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="137" pos:column="9">rfc822_free_address<pos:position pos:line="137" pos:column="28"/></name> <argument_list pos:line="137" pos:column="29">(<argument><expr><operator pos:line="137" pos:column="30">&amp;<pos:position pos:line="137" pos:column="35"/></operator><name pos:line="137" pos:column="31">addr<pos:position pos:line="137" pos:column="35"/></name></expr></argument>)<pos:position pos:line="137" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="37"/></expr_stmt>

        <if pos:line="139" pos:column="9">if <condition pos:line="139" pos:column="12">(<expr><name pos:line="139" pos:column="13">crypt_hook<pos:position pos:line="139" pos:column="23"/></name> <operator pos:line="139" pos:column="24">!=<pos:position pos:line="139" pos:column="26"/></operator> <name pos:line="139" pos:column="27">NULL<pos:position pos:line="139" pos:column="31"/></name></expr>)<pos:position pos:line="139" pos:column="32"/></condition><then pos:line="139" pos:column="32">
          <block type="pseudo"><expr_stmt><expr><name pos:line="140" pos:column="11">crypt_hook<pos:position pos:line="140" pos:column="21"/></name> <operator pos:line="140" pos:column="22">=<pos:position pos:line="140" pos:column="23"/></operator> <name><name pos:line="140" pos:column="24">crypt_hook<pos:position pos:line="140" pos:column="34"/></name><operator pos:line="140" pos:column="34">-&gt;<pos:position pos:line="140" pos:column="39"/></operator><name pos:line="140" pos:column="36">next<pos:position pos:line="140" pos:column="40"/></name></name></expr>;<pos:position pos:line="140" pos:column="41"/></expr_stmt></block></then></if>

      }<pos:position pos:line="142" pos:column="8"/></block> while <condition pos:line="142" pos:column="15">(<expr><name pos:line="142" pos:column="16">crypt_hook<pos:position pos:line="142" pos:column="26"/></name> <operator pos:line="142" pos:column="27">!=<pos:position pos:line="142" pos:column="29"/></operator> <name pos:line="142" pos:column="30">NULL<pos:position pos:line="142" pos:column="34"/></name></expr>)<pos:position pos:line="142" pos:column="35"/></condition>;<pos:position pos:line="142" pos:column="36"/></do>

      <expr_stmt><expr><call><name pos:line="144" pos:column="7">mutt_free_list<pos:position pos:line="144" pos:column="21"/></name> <argument_list pos:line="144" pos:column="22">(<argument><expr><operator pos:line="144" pos:column="23">&amp;<pos:position pos:line="144" pos:column="28"/></operator><name pos:line="144" pos:column="24">crypt_hook_list<pos:position pos:line="144" pos:column="39"/></name></expr></argument>)<pos:position pos:line="144" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="145" pos:column="6"/></block></for>
  <return pos:line="146" pos:column="3">return <expr><operator pos:line="146" pos:column="10">(<pos:position pos:line="146" pos:column="11"/></operator><name pos:line="146" pos:column="11">keylist<pos:position pos:line="146" pos:column="18"/></name><operator pos:line="146" pos:column="18">)<pos:position pos:line="146" pos:column="19"/></operator></expr>;<pos:position pos:line="146" pos:column="20"/></return>
}<pos:position pos:line="147" pos:column="2"/></block></function></unit>

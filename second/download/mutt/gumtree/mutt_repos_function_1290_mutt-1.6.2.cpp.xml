<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1290_mutt-1.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">attach_collapse<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">BODY<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">b<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">short<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">collapse<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">short<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">init<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">short<pos:position pos:line="1" pos:column="72"/></name></type> <name pos:line="1" pos:column="73">just_one<pos:position pos:line="1" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="82"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">short<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">i<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <for pos:line="4" pos:column="3">for <control pos:line="4" pos:column="7">(<init pos:line="4" pos:column="8">;<pos:position pos:line="4" pos:column="9"/></init> <condition><expr><name pos:line="4" pos:column="10">b<pos:position pos:line="4" pos:column="11"/></name></expr>;<pos:position pos:line="4" pos:column="12"/></condition> <incr><expr><name pos:line="4" pos:column="13">b<pos:position pos:line="4" pos:column="14"/></name> <operator pos:line="4" pos:column="15">=<pos:position pos:line="4" pos:column="16"/></operator> <name><name pos:line="4" pos:column="17">b<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">-&gt;<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="20">next<pos:position pos:line="4" pos:column="24"/></name></name></expr></incr>)<pos:position pos:line="4" pos:column="25"/></control>
  <block pos:line="5" pos:column="3">{
    <expr_stmt><expr><name pos:line="6" pos:column="5">i<pos:position pos:line="6" pos:column="6"/></name> <operator pos:line="6" pos:column="7">=<pos:position pos:line="6" pos:column="8"/></operator> <name pos:line="6" pos:column="9">init<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">||<pos:position pos:line="6" pos:column="16"/></operator> <name><name pos:line="6" pos:column="17">b<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">-&gt;<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="20">collapsed<pos:position pos:line="6" pos:column="29"/></name></name></expr>;<pos:position pos:line="6" pos:column="30"/></expr_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">&amp;&amp;<pos:position pos:line="7" pos:column="21"/></operator> <call><name pos:line="7" pos:column="14">option<pos:position pos:line="7" pos:column="20"/></name> <argument_list pos:line="7" pos:column="21">(<argument><expr><name pos:line="7" pos:column="22">OPTDIGESTCOLLAPSE<pos:position pos:line="7" pos:column="39"/></name></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></call> <operator pos:line="7" pos:column="41">&amp;&amp;<pos:position pos:line="7" pos:column="51"/></operator> <name><name pos:line="7" pos:column="44">b<pos:position pos:line="7" pos:column="45"/></name><operator pos:line="7" pos:column="45">-&gt;<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="47">type<pos:position pos:line="7" pos:column="51"/></name></name> <operator pos:line="7" pos:column="52">==<pos:position pos:line="7" pos:column="54"/></operator> <name pos:line="7" pos:column="55">TYPEMULTIPART<pos:position pos:line="7" pos:column="68"/></name>
	<operator pos:line="8" pos:column="9">&amp;&amp;<pos:position pos:line="8" pos:column="19"/></operator> <operator pos:line="8" pos:column="12">!<pos:position pos:line="8" pos:column="13"/></operator><call><name pos:line="8" pos:column="13">ascii_strcasecmp<pos:position pos:line="8" pos:column="29"/></name> <argument_list pos:line="8" pos:column="30">(<argument><expr><name><name pos:line="8" pos:column="31">b<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">subtype<pos:position pos:line="8" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="43">"digest"<pos:position pos:line="8" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="53"/></condition><then pos:line="8" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="7">attach_collapse<pos:position pos:line="9" pos:column="22"/></name> <argument_list pos:line="9" pos:column="23">(<argument><expr><name><name pos:line="9" pos:column="24">b<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">parts<pos:position pos:line="9" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="34">1<pos:position pos:line="9" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="37">1<pos:position pos:line="9" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="40">0<pos:position pos:line="9" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="43"/></expr_stmt></block></then>
    <elseif pos:line="10" pos:column="5">else <if pos:line="10" pos:column="10">if <condition pos:line="10" pos:column="13">(<expr><name><name pos:line="10" pos:column="14">b<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">type<pos:position pos:line="10" pos:column="21"/></name></name> <operator pos:line="10" pos:column="22">==<pos:position pos:line="10" pos:column="24"/></operator> <name pos:line="10" pos:column="25">TYPEMULTIPART<pos:position pos:line="10" pos:column="38"/></name> <operator pos:line="10" pos:column="39">||<pos:position pos:line="10" pos:column="41"/></operator> <call><name pos:line="10" pos:column="42">mutt_is_message_type<pos:position pos:line="10" pos:column="62"/></name> <argument_list pos:line="10" pos:column="63">(<argument><expr><name><name pos:line="10" pos:column="64">b<pos:position pos:line="10" pos:column="65"/></name><operator pos:line="10" pos:column="65">-&gt;<pos:position pos:line="10" pos:column="70"/></operator><name pos:line="10" pos:column="67">type<pos:position pos:line="10" pos:column="71"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="73">b<pos:position pos:line="10" pos:column="74"/></name><operator pos:line="10" pos:column="74">-&gt;<pos:position pos:line="10" pos:column="79"/></operator><name pos:line="10" pos:column="76">subtype<pos:position pos:line="10" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="84"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="85"/></condition><then pos:line="10" pos:column="85">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="7">attach_collapse<pos:position pos:line="11" pos:column="22"/></name> <argument_list pos:line="11" pos:column="23">(<argument><expr><name><name pos:line="11" pos:column="24">b<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">parts<pos:position pos:line="11" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="34">collapse<pos:position pos:line="11" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="44">i<pos:position pos:line="11" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="47">0<pos:position pos:line="11" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="50"/></expr_stmt></block></then></if></elseif></if>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">b<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">-&gt;<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="8">collapsed<pos:position pos:line="12" pos:column="17"/></name></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="20">collapse<pos:position pos:line="12" pos:column="28"/></name></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">just_one<pos:position pos:line="13" pos:column="17"/></name></expr>)<pos:position pos:line="13" pos:column="18"/></condition><then pos:line="13" pos:column="18">
      <block type="pseudo"><return pos:line="14" pos:column="7">return;<pos:position pos:line="14" pos:column="14"/></return></block></then></if>
  }<pos:position pos:line="15" pos:column="4"/></block></for>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

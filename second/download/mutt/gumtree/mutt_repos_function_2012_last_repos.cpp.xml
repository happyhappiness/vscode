<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2012_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">msg_parse_fetch<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">IMAP_HEADER<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">h<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">s<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">tmp<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">SHORT_STRING<pos:position pos:line="3" pos:column="24"/></name></expr>]<pos:position pos:line="3" pos:column="25"/></index></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">ptmp<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">!<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">s<pos:position pos:line="6" pos:column="9"/></name></expr>)<pos:position pos:line="6" pos:column="10"/></condition><then pos:line="6" pos:column="10">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">-<pos:position pos:line="7" pos:column="13"/></operator><literal type="number" pos:line="7" pos:column="13">1<pos:position pos:line="7" pos:column="14"/></literal></expr>;<pos:position pos:line="7" pos:column="15"/></return></block></then></if>

  <while pos:line="9" pos:column="3">while <condition pos:line="9" pos:column="9">(<expr><operator pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="11">s<pos:position pos:line="9" pos:column="12"/></name></expr>)<pos:position pos:line="9" pos:column="13"/></condition>
  <block pos:line="10" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">SKIPWS<pos:position pos:line="11" pos:column="11"/></name> <argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">s<pos:position pos:line="11" pos:column="14"/></name></expr></argument>)<pos:position pos:line="11" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="16"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">ascii_strncasecmp<pos:position pos:line="13" pos:column="26"/></name> <argument_list pos:line="13" pos:column="27">(<argument><expr><literal type="string" pos:line="13" pos:column="28">"FLAGS"<pos:position pos:line="13" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="37">s<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="40">5<pos:position pos:line="13" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call> <operator pos:line="13" pos:column="43">==<pos:position pos:line="13" pos:column="45"/></operator> <literal type="number" pos:line="13" pos:column="46">0<pos:position pos:line="13" pos:column="47"/></literal></expr>)<pos:position pos:line="13" pos:column="48"/></condition><then pos:line="13" pos:column="48">
    <block pos:line="14" pos:column="5">{
      <if pos:line="15" pos:column="7">if <condition pos:line="15" pos:column="10">(<expr><operator pos:line="15" pos:column="11">(<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">s<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <call><name pos:line="15" pos:column="16">msg_parse_flags<pos:position pos:line="15" pos:column="31"/></name> <argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">h<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="36">s<pos:position pos:line="15" pos:column="37"/></name></expr></argument>)<pos:position pos:line="15" pos:column="38"/></argument_list></call><operator pos:line="15" pos:column="38">)<pos:position pos:line="15" pos:column="39"/></operator> <operator pos:line="15" pos:column="40">==<pos:position pos:line="15" pos:column="42"/></operator> <name pos:line="15" pos:column="43">NULL<pos:position pos:line="15" pos:column="47"/></name></expr>)<pos:position pos:line="15" pos:column="48"/></condition><then pos:line="15" pos:column="48">
        <block type="pseudo"><return pos:line="16" pos:column="9">return <expr><operator pos:line="16" pos:column="16">-<pos:position pos:line="16" pos:column="17"/></operator><literal type="number" pos:line="16" pos:column="17">1<pos:position pos:line="16" pos:column="18"/></literal></expr>;<pos:position pos:line="16" pos:column="19"/></return></block></then></if>
    }<pos:position pos:line="17" pos:column="6"/></block></then>
    <elseif pos:line="18" pos:column="5">else <if pos:line="18" pos:column="10">if <condition pos:line="18" pos:column="13">(<expr><call><name pos:line="18" pos:column="14">ascii_strncasecmp<pos:position pos:line="18" pos:column="31"/></name> <argument_list pos:line="18" pos:column="32">(<argument><expr><literal type="string" pos:line="18" pos:column="33">"UID"<pos:position pos:line="18" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="40">s<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="43">3<pos:position pos:line="18" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call> <operator pos:line="18" pos:column="46">==<pos:position pos:line="18" pos:column="48"/></operator> <literal type="number" pos:line="18" pos:column="49">0<pos:position pos:line="18" pos:column="50"/></literal></expr>)<pos:position pos:line="18" pos:column="51"/></condition><then pos:line="18" pos:column="51">
    <block pos:line="19" pos:column="5">{
      <expr_stmt><expr><name pos:line="20" pos:column="7">s<pos:position pos:line="20" pos:column="8"/></name> <operator pos:line="20" pos:column="9">+=<pos:position pos:line="20" pos:column="11"/></operator> <literal type="number" pos:line="20" pos:column="12">3<pos:position pos:line="20" pos:column="13"/></literal></expr>;<pos:position pos:line="20" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">SKIPWS<pos:position pos:line="21" pos:column="13"/></name> <argument_list pos:line="21" pos:column="14">(<argument><expr><name pos:line="21" pos:column="15">s<pos:position pos:line="21" pos:column="16"/></name></expr></argument>)<pos:position pos:line="21" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="22" pos:column="7">h<pos:position pos:line="22" pos:column="8"/></name><operator pos:line="22" pos:column="8">-&gt;<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="10">data<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">-&gt;<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="16">uid<pos:position pos:line="22" pos:column="19"/></name></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <operator pos:line="22" pos:column="22">(<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="23">unsigned<pos:position pos:line="22" pos:column="31"/></name> <name pos:line="22" pos:column="32">int<pos:position pos:line="22" pos:column="35"/></name><operator pos:line="22" pos:column="35">)<pos:position pos:line="22" pos:column="36"/></operator> <call><name pos:line="22" pos:column="37">atoi<pos:position pos:line="22" pos:column="41"/></name> <argument_list pos:line="22" pos:column="42">(<argument><expr><name pos:line="22" pos:column="43">s<pos:position pos:line="22" pos:column="44"/></name></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="46"/></expr_stmt>

      <expr_stmt><expr><name pos:line="24" pos:column="7">s<pos:position pos:line="24" pos:column="8"/></name> <operator pos:line="24" pos:column="9">=<pos:position pos:line="24" pos:column="10"/></operator> <call><name pos:line="24" pos:column="11">imap_next_word<pos:position pos:line="24" pos:column="25"/></name> <argument_list pos:line="24" pos:column="26">(<argument><expr><name pos:line="24" pos:column="27">s<pos:position pos:line="24" pos:column="28"/></name></expr></argument>)<pos:position pos:line="24" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="26" pos:column="5">else <if pos:line="26" pos:column="10">if <condition pos:line="26" pos:column="13">(<expr><call><name pos:line="26" pos:column="14">ascii_strncasecmp<pos:position pos:line="26" pos:column="31"/></name> <argument_list pos:line="26" pos:column="32">(<argument><expr><literal type="string" pos:line="26" pos:column="33">"INTERNALDATE"<pos:position pos:line="26" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="49">s<pos:position pos:line="26" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="52">12<pos:position pos:line="26" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="55"/></argument_list></call> <operator pos:line="26" pos:column="56">==<pos:position pos:line="26" pos:column="58"/></operator> <literal type="number" pos:line="26" pos:column="59">0<pos:position pos:line="26" pos:column="60"/></literal></expr>)<pos:position pos:line="26" pos:column="61"/></condition><then pos:line="26" pos:column="61">
    <block pos:line="27" pos:column="5">{
      <expr_stmt><expr><name pos:line="28" pos:column="7">s<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">+=<pos:position pos:line="28" pos:column="11"/></operator> <literal type="number" pos:line="28" pos:column="12">12<pos:position pos:line="28" pos:column="14"/></literal></expr>;<pos:position pos:line="28" pos:column="15"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">SKIPWS<pos:position pos:line="29" pos:column="13"/></name> <argument_list pos:line="29" pos:column="14">(<argument><expr><name pos:line="29" pos:column="15">s<pos:position pos:line="29" pos:column="16"/></name></expr></argument>)<pos:position pos:line="29" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="18"/></expr_stmt>
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><operator pos:line="30" pos:column="11">*<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="12">s<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">!=<pos:position pos:line="30" pos:column="16"/></operator> <literal type="char" pos:line="30" pos:column="17">'\"'<pos:position pos:line="30" pos:column="21"/></literal></expr>)<pos:position pos:line="30" pos:column="22"/></condition><then pos:line="30" pos:column="22">
      <block pos:line="31" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">dprint<pos:position pos:line="32" pos:column="15"/></name> <argument_list pos:line="32" pos:column="16">(<argument><expr><literal type="number" pos:line="32" pos:column="17">1<pos:position pos:line="32" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="32" pos:column="20">(<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="21">debugfile<pos:position pos:line="32" pos:column="30"/></name><operator pos:line="32" pos:column="30">,<pos:position pos:line="32" pos:column="31"/></operator> <literal type="string" pos:line="32" pos:column="32">"msg_parse_fetch(): bogus INTERNALDATE entry: %s\n"<pos:position pos:line="32" pos:column="83"/></literal><operator pos:line="32" pos:column="83">,<pos:position pos:line="32" pos:column="84"/></operator> <name pos:line="32" pos:column="85">s<pos:position pos:line="32" pos:column="86"/></name><operator pos:line="32" pos:column="86">)<pos:position pos:line="32" pos:column="87"/></operator></expr></argument>)<pos:position pos:line="32" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="89"/></expr_stmt>
        <return pos:line="33" pos:column="9">return <expr><operator pos:line="33" pos:column="16">-<pos:position pos:line="33" pos:column="17"/></operator><literal type="number" pos:line="33" pos:column="17">1<pos:position pos:line="33" pos:column="18"/></literal></expr>;<pos:position pos:line="33" pos:column="19"/></return>
      }<pos:position pos:line="34" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="35" pos:column="7">s<pos:position pos:line="35" pos:column="8"/></name><operator pos:line="35" pos:column="8">++<pos:position pos:line="35" pos:column="10"/></operator></expr>;<pos:position pos:line="35" pos:column="11"/></expr_stmt>
      <expr_stmt><expr><name pos:line="36" pos:column="7">ptmp<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <name pos:line="36" pos:column="14">tmp<pos:position pos:line="36" pos:column="17"/></name></expr>;<pos:position pos:line="36" pos:column="18"/></expr_stmt>
      <while pos:line="37" pos:column="7">while <condition pos:line="37" pos:column="13">(<expr><operator pos:line="37" pos:column="14">*<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="15">s<pos:position pos:line="37" pos:column="16"/></name> <operator pos:line="37" pos:column="17">&amp;&amp;<pos:position pos:line="37" pos:column="27"/></operator> <operator pos:line="37" pos:column="20">*<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="21">s<pos:position pos:line="37" pos:column="22"/></name> <operator pos:line="37" pos:column="23">!=<pos:position pos:line="37" pos:column="25"/></operator> <literal type="char" pos:line="37" pos:column="26">'\"'<pos:position pos:line="37" pos:column="30"/></literal></expr>)<pos:position pos:line="37" pos:column="31"/></condition>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="38" pos:column="9">*<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="10">ptmp<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">++<pos:position pos:line="38" pos:column="16"/></operator> <operator pos:line="38" pos:column="17">=<pos:position pos:line="38" pos:column="18"/></operator> <operator pos:line="38" pos:column="19">*<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="20">s<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">++<pos:position pos:line="38" pos:column="23"/></operator></expr>;<pos:position pos:line="38" pos:column="24"/></expr_stmt></block></while>
      <if pos:line="39" pos:column="7">if <condition pos:line="39" pos:column="10">(<expr><operator pos:line="39" pos:column="11">*<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="12">s<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">!=<pos:position pos:line="39" pos:column="16"/></operator> <literal type="char" pos:line="39" pos:column="17">'\"'<pos:position pos:line="39" pos:column="21"/></literal></expr>)<pos:position pos:line="39" pos:column="22"/></condition><then pos:line="39" pos:column="22">
        <block type="pseudo"><return pos:line="40" pos:column="9">return <expr><operator pos:line="40" pos:column="16">-<pos:position pos:line="40" pos:column="17"/></operator><literal type="number" pos:line="40" pos:column="17">1<pos:position pos:line="40" pos:column="18"/></literal></expr>;<pos:position pos:line="40" pos:column="19"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="41" pos:column="7">s<pos:position pos:line="41" pos:column="8"/></name><operator pos:line="41" pos:column="8">++<pos:position pos:line="41" pos:column="10"/></operator></expr>;<pos:position pos:line="41" pos:column="11"/></expr_stmt> <comment type="block" pos:line="41" pos:column="12">/* skip past the trailing " */</comment>
      <expr_stmt><expr><operator pos:line="42" pos:column="7">*<pos:position pos:line="42" pos:column="8"/></operator><name pos:line="42" pos:column="8">ptmp<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">=<pos:position pos:line="42" pos:column="14"/></operator> <literal type="number" pos:line="42" pos:column="15">0<pos:position pos:line="42" pos:column="16"/></literal></expr>;<pos:position pos:line="42" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="43" pos:column="7">h<pos:position pos:line="43" pos:column="8"/></name><operator pos:line="43" pos:column="8">-&gt;<pos:position pos:line="43" pos:column="13"/></operator><name pos:line="43" pos:column="10">received<pos:position pos:line="43" pos:column="18"/></name></name> <operator pos:line="43" pos:column="19">=<pos:position pos:line="43" pos:column="20"/></operator> <call><name pos:line="43" pos:column="21">imap_parse_date<pos:position pos:line="43" pos:column="36"/></name> <argument_list pos:line="43" pos:column="37">(<argument><expr><name pos:line="43" pos:column="38">tmp<pos:position pos:line="43" pos:column="41"/></name></expr></argument>)<pos:position pos:line="43" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="45" pos:column="5">else <if pos:line="45" pos:column="10">if <condition pos:line="45" pos:column="13">(<expr><call><name pos:line="45" pos:column="14">ascii_strncasecmp<pos:position pos:line="45" pos:column="31"/></name> <argument_list pos:line="45" pos:column="32">(<argument><expr><literal type="string" pos:line="45" pos:column="33">"RFC822.SIZE"<pos:position pos:line="45" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="48">s<pos:position pos:line="45" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="51">11<pos:position pos:line="45" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="54"/></argument_list></call> <operator pos:line="45" pos:column="55">==<pos:position pos:line="45" pos:column="57"/></operator> <literal type="number" pos:line="45" pos:column="58">0<pos:position pos:line="45" pos:column="59"/></literal></expr>)<pos:position pos:line="45" pos:column="60"/></condition><then pos:line="45" pos:column="60">
    <block pos:line="46" pos:column="5">{
      <expr_stmt><expr><name pos:line="47" pos:column="7">s<pos:position pos:line="47" pos:column="8"/></name> <operator pos:line="47" pos:column="9">+=<pos:position pos:line="47" pos:column="11"/></operator> <literal type="number" pos:line="47" pos:column="12">11<pos:position pos:line="47" pos:column="14"/></literal></expr>;<pos:position pos:line="47" pos:column="15"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="48" pos:column="7">SKIPWS<pos:position pos:line="48" pos:column="13"/></name> <argument_list pos:line="48" pos:column="14">(<argument><expr><name pos:line="48" pos:column="15">s<pos:position pos:line="48" pos:column="16"/></name></expr></argument>)<pos:position pos:line="48" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name pos:line="49" pos:column="7">ptmp<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">=<pos:position pos:line="49" pos:column="13"/></operator> <name pos:line="49" pos:column="14">tmp<pos:position pos:line="49" pos:column="17"/></name></expr>;<pos:position pos:line="49" pos:column="18"/></expr_stmt>
      <while pos:line="50" pos:column="7">while <condition pos:line="50" pos:column="13">(<expr><call><name pos:line="50" pos:column="14">isdigit<pos:position pos:line="50" pos:column="21"/></name> <argument_list pos:line="50" pos:column="22">(<argument><expr><operator pos:line="50" pos:column="23">(<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="24">unsigned<pos:position pos:line="50" pos:column="32"/></name> <name pos:line="50" pos:column="33">char<pos:position pos:line="50" pos:column="37"/></name><operator pos:line="50" pos:column="37">)<pos:position pos:line="50" pos:column="38"/></operator> <operator pos:line="50" pos:column="39">*<pos:position pos:line="50" pos:column="40"/></operator><name pos:line="50" pos:column="40">s<pos:position pos:line="50" pos:column="41"/></name></expr></argument>)<pos:position pos:line="50" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="43"/></condition>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="51" pos:column="9">*<pos:position pos:line="51" pos:column="10"/></operator><name pos:line="51" pos:column="10">ptmp<pos:position pos:line="51" pos:column="14"/></name><operator pos:line="51" pos:column="14">++<pos:position pos:line="51" pos:column="16"/></operator> <operator pos:line="51" pos:column="17">=<pos:position pos:line="51" pos:column="18"/></operator> <operator pos:line="51" pos:column="19">*<pos:position pos:line="51" pos:column="20"/></operator><name pos:line="51" pos:column="20">s<pos:position pos:line="51" pos:column="21"/></name><operator pos:line="51" pos:column="21">++<pos:position pos:line="51" pos:column="23"/></operator></expr>;<pos:position pos:line="51" pos:column="24"/></expr_stmt></block></while>
      <expr_stmt><expr><operator pos:line="52" pos:column="7">*<pos:position pos:line="52" pos:column="8"/></operator><name pos:line="52" pos:column="8">ptmp<pos:position pos:line="52" pos:column="12"/></name> <operator pos:line="52" pos:column="13">=<pos:position pos:line="52" pos:column="14"/></operator> <literal type="number" pos:line="52" pos:column="15">0<pos:position pos:line="52" pos:column="16"/></literal></expr>;<pos:position pos:line="52" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="53" pos:column="7">h<pos:position pos:line="53" pos:column="8"/></name><operator pos:line="53" pos:column="8">-&gt;<pos:position pos:line="53" pos:column="13"/></operator><name pos:line="53" pos:column="10">content_length<pos:position pos:line="53" pos:column="24"/></name></name> <operator pos:line="53" pos:column="25">=<pos:position pos:line="53" pos:column="26"/></operator> <call><name pos:line="53" pos:column="27">atoi<pos:position pos:line="53" pos:column="31"/></name> <argument_list pos:line="53" pos:column="32">(<argument><expr><name pos:line="53" pos:column="33">tmp<pos:position pos:line="53" pos:column="36"/></name></expr></argument>)<pos:position pos:line="53" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="55" pos:column="5">else <if pos:line="55" pos:column="10">if <condition pos:line="55" pos:column="13">(<expr><operator pos:line="55" pos:column="14">!<pos:position pos:line="55" pos:column="15"/></operator><call><name pos:line="55" pos:column="15">ascii_strncasecmp<pos:position pos:line="55" pos:column="32"/></name> <argument_list pos:line="55" pos:column="33">(<argument><expr><literal type="string" pos:line="55" pos:column="34">"BODY"<pos:position pos:line="55" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="42">s<pos:position pos:line="55" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="45">4<pos:position pos:line="55" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="47"/></argument_list></call> <operator pos:line="55" pos:column="48">||<pos:position pos:line="55" pos:column="50"/></operator>
      <operator pos:line="56" pos:column="7">!<pos:position pos:line="56" pos:column="8"/></operator><call><name pos:line="56" pos:column="8">ascii_strncasecmp<pos:position pos:line="56" pos:column="25"/></name> <argument_list pos:line="56" pos:column="26">(<argument><expr><literal type="string" pos:line="56" pos:column="27">"RFC822.HEADER"<pos:position pos:line="56" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="44">s<pos:position pos:line="56" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="47">13<pos:position pos:line="56" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="51"/></condition><then pos:line="56" pos:column="51">
    <block pos:line="57" pos:column="5">{
      <comment type="block" pos:line="58" pos:column="7">/* handle above, in msg_fetch_header */</comment>
      <return pos:line="59" pos:column="7">return <expr><operator pos:line="59" pos:column="14">-<pos:position pos:line="59" pos:column="15"/></operator><literal type="number" pos:line="59" pos:column="15">2<pos:position pos:line="59" pos:column="16"/></literal></expr>;<pos:position pos:line="59" pos:column="17"/></return>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="61" pos:column="5">else <if pos:line="61" pos:column="10">if <condition pos:line="61" pos:column="13">(<expr><operator pos:line="61" pos:column="14">*<pos:position pos:line="61" pos:column="15"/></operator><name pos:line="61" pos:column="15">s<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">==<pos:position pos:line="61" pos:column="19"/></operator> <literal type="char" pos:line="61" pos:column="20">')'<pos:position pos:line="61" pos:column="23"/></literal></expr>)<pos:position pos:line="61" pos:column="24"/></condition><then pos:line="61" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="7">s<pos:position pos:line="62" pos:column="8"/></name><operator pos:line="62" pos:column="8">++<pos:position pos:line="62" pos:column="10"/></operator></expr>;<pos:position pos:line="62" pos:column="11"/></expr_stmt></block></then></if></elseif> <comment type="block" pos:line="62" pos:column="12">/* end of request */</comment>
    <elseif pos:line="63" pos:column="5">else <if pos:line="63" pos:column="10">if <condition pos:line="63" pos:column="13">(<expr><operator pos:line="63" pos:column="14">*<pos:position pos:line="63" pos:column="15"/></operator><name pos:line="63" pos:column="15">s<pos:position pos:line="63" pos:column="16"/></name></expr>)<pos:position pos:line="63" pos:column="17"/></condition><then pos:line="63" pos:column="17">
    <block pos:line="64" pos:column="5">{
      <comment type="block" pos:line="65" pos:column="7">/* got something i don't understand */</comment>
      <expr_stmt><expr><call><name pos:line="66" pos:column="7">imap_error<pos:position pos:line="66" pos:column="17"/></name> <argument_list pos:line="66" pos:column="18">(<argument><expr><literal type="string" pos:line="66" pos:column="19">"msg_parse_fetch"<pos:position pos:line="66" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="38">s<pos:position pos:line="66" pos:column="39"/></name></expr></argument>)<pos:position pos:line="66" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="41"/></expr_stmt>
      <return pos:line="67" pos:column="7">return <expr><operator pos:line="67" pos:column="14">-<pos:position pos:line="67" pos:column="15"/></operator><literal type="number" pos:line="67" pos:column="15">1<pos:position pos:line="67" pos:column="16"/></literal></expr>;<pos:position pos:line="67" pos:column="17"/></return>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="69" pos:column="4"/></block></while>

  <return pos:line="71" pos:column="3">return <expr><literal type="number" pos:line="71" pos:column="10">0<pos:position pos:line="71" pos:column="11"/></literal></expr>;<pos:position pos:line="71" pos:column="12"/></return>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1297_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">my_width<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">str<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">int<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">col<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">int<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">flags<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">wchar_t<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">wc<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">l<pos:position pos:line="4" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="10">w<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><literal type="number" pos:line="4" pos:column="14">0<pos:position pos:line="4" pos:column="15"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="17">nl<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">p<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><name pos:line="5" pos:column="19">str<pos:position pos:line="5" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>

  <while pos:line="7" pos:column="3">while <condition pos:line="7" pos:column="9">(<expr><name pos:line="7" pos:column="10">p<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">&amp;&amp;<pos:position pos:line="7" pos:column="22"/></operator> <operator pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">p<pos:position pos:line="7" pos:column="17"/></name></expr>)<pos:position pos:line="7" pos:column="18"/></condition>
  <block pos:line="8" pos:column="3">{
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">mbtowc<pos:position pos:line="9" pos:column="15"/></name> <argument_list pos:line="9" pos:column="16">(<argument><expr><operator pos:line="9" pos:column="17">&amp;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="18">wc<pos:position pos:line="9" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="22">p<pos:position pos:line="9" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="25">MB_CUR_MAX<pos:position pos:line="9" pos:column="35"/></name></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call> <operator pos:line="9" pos:column="37">&gt;=<pos:position pos:line="9" pos:column="42"/></operator> <literal type="number" pos:line="9" pos:column="40">0<pos:position pos:line="9" pos:column="41"/></literal></expr>)<pos:position pos:line="9" pos:column="42"/></condition><then pos:line="9" pos:column="42">
    <block pos:line="10" pos:column="5">{
      <expr_stmt><expr><name pos:line="11" pos:column="7">l<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <call><name pos:line="11" pos:column="11">wcwidth<pos:position pos:line="11" pos:column="18"/></name> <argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">wc<pos:position pos:line="11" pos:column="22"/></name></expr></argument>)<pos:position pos:line="11" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt>
      <if pos:line="12" pos:column="7">if <condition pos:line="12" pos:column="10">(<expr><name pos:line="12" pos:column="11">l<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">&lt;<pos:position pos:line="12" pos:column="17"/></operator> <literal type="number" pos:line="12" pos:column="15">0<pos:position pos:line="12" pos:column="16"/></literal></expr>)<pos:position pos:line="12" pos:column="17"/></condition><then pos:line="12" pos:column="17">
	<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="9">l<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <literal type="number" pos:line="13" pos:column="13">1<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></expr_stmt></block></then></if>
      <comment type="block" pos:line="14" pos:column="7">/* correctly calc tab stop, even for sending as the
       * line should look pretty on the receiving end */</comment>
      <if pos:line="16" pos:column="7">if <condition pos:line="16" pos:column="10">(<expr><name pos:line="16" pos:column="11">wc<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">==<pos:position pos:line="16" pos:column="16"/></operator> <literal type="string" pos:line="16" pos:column="17">L'<pos:position pos:line="16" pos:column="19"/></literal>\t' <operator pos:line="16" pos:column="23">||<pos:position pos:line="16" pos:column="25"/></operator> <operator pos:line="16" pos:column="26">(<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="27">nl<pos:position pos:line="16" pos:column="29"/></name> <operator pos:line="16" pos:column="30">&amp;&amp;<pos:position pos:line="16" pos:column="40"/></operator> <name pos:line="16" pos:column="33">wc<pos:position pos:line="16" pos:column="35"/></name> <operator pos:line="16" pos:column="36">==<pos:position pos:line="16" pos:column="38"/></operator> <literal type="string" pos:line="16" pos:column="39">L'<pos:position pos:line="16" pos:column="41"/></literal> '<operator pos:line="16" pos:column="43">)<pos:position pos:line="16" pos:column="44"/></operator></expr>)<pos:position pos:line="16" pos:column="45"/></condition><then pos:line="16" pos:column="45">
      <block pos:line="17" pos:column="7">{
	<expr_stmt><expr><name pos:line="18" pos:column="9">nl<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <literal type="number" pos:line="18" pos:column="14">0<pos:position pos:line="18" pos:column="15"/></literal></expr>;<pos:position pos:line="18" pos:column="16"/></expr_stmt>
	<expr_stmt><expr><name pos:line="19" pos:column="9">l<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <literal type="number" pos:line="19" pos:column="13">8<pos:position pos:line="19" pos:column="14"/></literal> <operator pos:line="19" pos:column="15">-<pos:position pos:line="19" pos:column="16"/></operator> <operator pos:line="19" pos:column="17">(<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">col<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">%<pos:position pos:line="19" pos:column="23"/></operator> <literal type="number" pos:line="19" pos:column="24">8<pos:position pos:line="19" pos:column="25"/></literal><operator pos:line="19" pos:column="25">)<pos:position pos:line="19" pos:column="26"/></operator></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
      }<pos:position pos:line="20" pos:column="8"/></block></then>
      <comment type="block" pos:line="21" pos:column="7">/* track newlines for display-case: if we have a space
       * after a newline, assume 8 spaces as for display we
       * always tab-fold */</comment>
      <elseif pos:line="24" pos:column="7">else <if pos:line="24" pos:column="12">if <condition pos:line="24" pos:column="15">(<expr><operator pos:line="24" pos:column="16">(<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="17">flags<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">&amp;<pos:position pos:line="24" pos:column="28"/></operator> <name pos:line="24" pos:column="25">CH_DISPLAY<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">)<pos:position pos:line="24" pos:column="36"/></operator> <operator pos:line="24" pos:column="37">&amp;&amp;<pos:position pos:line="24" pos:column="47"/></operator> <name pos:line="24" pos:column="40">wc<pos:position pos:line="24" pos:column="42"/></name> <operator pos:line="24" pos:column="43">==<pos:position pos:line="24" pos:column="45"/></operator> <literal type="char" pos:line="24" pos:column="46">'\n'<pos:position pos:line="24" pos:column="50"/></literal></expr>)<pos:position pos:line="24" pos:column="51"/></condition><then pos:line="24" pos:column="51">
	<block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="9">nl<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <literal type="number" pos:line="25" pos:column="14">1<pos:position pos:line="25" pos:column="15"/></literal></expr>;<pos:position pos:line="25" pos:column="16"/></expr_stmt></block></then></if></elseif></if>
    }<pos:position pos:line="26" pos:column="6"/></block></then>
    <else pos:line="27" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="7">l<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">=<pos:position pos:line="28" pos:column="10"/></operator> <literal type="number" pos:line="28" pos:column="11">1<pos:position pos:line="28" pos:column="12"/></literal></expr>;<pos:position pos:line="28" pos:column="13"/></expr_stmt></block></else></if>
    <expr_stmt><expr><name pos:line="29" pos:column="5">w<pos:position pos:line="29" pos:column="6"/></name> <operator pos:line="29" pos:column="7">+=<pos:position pos:line="29" pos:column="9"/></operator> <name pos:line="29" pos:column="10">l<pos:position pos:line="29" pos:column="11"/></name></expr>;<pos:position pos:line="29" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><name pos:line="30" pos:column="5">p<pos:position pos:line="30" pos:column="6"/></name><operator pos:line="30" pos:column="6">++<pos:position pos:line="30" pos:column="8"/></operator></expr>;<pos:position pos:line="30" pos:column="9"/></expr_stmt>
  }<pos:position pos:line="31" pos:column="4"/></block></while>
  <return pos:line="32" pos:column="3">return <expr><name pos:line="32" pos:column="10">w<pos:position pos:line="32" pos:column="11"/></name></expr>;<pos:position pos:line="32" pos:column="12"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

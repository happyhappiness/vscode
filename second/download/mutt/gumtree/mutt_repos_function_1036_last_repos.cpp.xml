<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1036_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">is_mmnoask<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">buf<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">tmp<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">LONG_STRING<pos:position pos:line="3" pos:column="23"/></name></expr>]<pos:position pos:line="3" pos:column="24"/></index></name></decl>, <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="27">p<pos:position pos:line="3" pos:column="28"/></name></decl>, <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="31">q<pos:position pos:line="3" pos:column="32"/></name></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">lng<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">p<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <call><name pos:line="6" pos:column="12">getenv<pos:position pos:line="6" pos:column="18"/></name> <argument_list pos:line="6" pos:column="19">(<argument><expr><literal type="string" pos:line="6" pos:column="20">"MM_NOASK"<pos:position pos:line="6" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="31"/></argument_list></call><operator pos:line="6" pos:column="31">)<pos:position pos:line="6" pos:column="32"/></operator> <operator pos:line="6" pos:column="33">!=<pos:position pos:line="6" pos:column="35"/></operator> <name pos:line="6" pos:column="36">NULL<pos:position pos:line="6" pos:column="40"/></name> <operator pos:line="6" pos:column="41">&amp;&amp;<pos:position pos:line="6" pos:column="51"/></operator> <operator pos:line="6" pos:column="44">*<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="45">p<pos:position pos:line="6" pos:column="46"/></name></expr>)<pos:position pos:line="6" pos:column="47"/></condition><then pos:line="6" pos:column="47">
  <block pos:line="7" pos:column="3">{
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name pos:line="8" pos:column="9">mutt_strcmp<pos:position pos:line="8" pos:column="20"/></name> <argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">p<pos:position pos:line="8" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="25">"1"<pos:position pos:line="8" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="29"/></argument_list></call> <operator pos:line="8" pos:column="30">==<pos:position pos:line="8" pos:column="32"/></operator> <literal type="number" pos:line="8" pos:column="33">0<pos:position pos:line="8" pos:column="34"/></literal></expr>)<pos:position pos:line="8" pos:column="35"/></condition><then pos:line="8" pos:column="35">
      <block type="pseudo"><return pos:line="9" pos:column="7">return <expr><operator pos:line="9" pos:column="14">(<pos:position pos:line="9" pos:column="15"/></operator><literal type="number" pos:line="9" pos:column="15">1<pos:position pos:line="9" pos:column="16"/></literal><operator pos:line="9" pos:column="16">)<pos:position pos:line="9" pos:column="17"/></operator></expr>;<pos:position pos:line="9" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">strfcpy<pos:position pos:line="11" pos:column="12"/></name> <argument_list pos:line="11" pos:column="13">(<argument><expr><name pos:line="11" pos:column="14">tmp<pos:position pos:line="11" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="19">p<pos:position pos:line="11" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="22">sizeof <argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">tmp<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">p<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <name pos:line="12" pos:column="9">tmp<pos:position pos:line="12" pos:column="12"/></name></expr>;<pos:position pos:line="12" pos:column="13"/></expr_stmt>

    <while pos:line="14" pos:column="5">while <condition pos:line="14" pos:column="11">(<expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">p<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <call><name pos:line="14" pos:column="17">strtok<pos:position pos:line="14" pos:column="23"/></name> <argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">p<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="28">","<pos:position pos:line="14" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call><operator pos:line="14" pos:column="32">)<pos:position pos:line="14" pos:column="33"/></operator> <operator pos:line="14" pos:column="34">!=<pos:position pos:line="14" pos:column="36"/></operator> <name pos:line="14" pos:column="37">NULL<pos:position pos:line="14" pos:column="41"/></name></expr>)<pos:position pos:line="14" pos:column="42"/></condition>
    <block pos:line="15" pos:column="5">{
      <if pos:line="16" pos:column="7">if <condition pos:line="16" pos:column="10">(<expr><operator pos:line="16" pos:column="11">(<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">q<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <call><name pos:line="16" pos:column="16">strrchr<pos:position pos:line="16" pos:column="23"/></name> <argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">p<pos:position pos:line="16" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="16" pos:column="28">'/'<pos:position pos:line="16" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></call><operator pos:line="16" pos:column="32">)<pos:position pos:line="16" pos:column="33"/></operator> <operator pos:line="16" pos:column="34">!=<pos:position pos:line="16" pos:column="36"/></operator> <name pos:line="16" pos:column="37">NULL<pos:position pos:line="16" pos:column="41"/></name></expr>)<pos:position pos:line="16" pos:column="42"/></condition><then pos:line="16" pos:column="42">
      <block pos:line="17" pos:column="7">{
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">*<pos:position pos:line="18" pos:column="14"/></operator><operator pos:line="18" pos:column="14">(<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">q<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">+<pos:position pos:line="18" pos:column="17"/></operator><literal type="number" pos:line="18" pos:column="17">1<pos:position pos:line="18" pos:column="18"/></literal><operator pos:line="18" pos:column="18">)<pos:position pos:line="18" pos:column="19"/></operator> <operator pos:line="18" pos:column="20">==<pos:position pos:line="18" pos:column="22"/></operator> <literal type="char" pos:line="18" pos:column="23">'*'<pos:position pos:line="18" pos:column="26"/></literal></expr>)<pos:position pos:line="18" pos:column="27"/></condition><then pos:line="18" pos:column="27">
	<block pos:line="19" pos:column="9">{
	  <if pos:line="20" pos:column="11">if <condition pos:line="20" pos:column="14">(<expr><call><name pos:line="20" pos:column="15">ascii_strncasecmp<pos:position pos:line="20" pos:column="32"/></name> <argument_list pos:line="20" pos:column="33">(<argument><expr><name pos:line="20" pos:column="34">buf<pos:position pos:line="20" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="39">p<pos:position pos:line="20" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="42">q<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">-<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="44">p<pos:position pos:line="20" pos:column="45"/></name></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call> <operator pos:line="20" pos:column="47">==<pos:position pos:line="20" pos:column="49"/></operator> <literal type="number" pos:line="20" pos:column="50">0<pos:position pos:line="20" pos:column="51"/></literal></expr>)<pos:position pos:line="20" pos:column="52"/></condition><then pos:line="20" pos:column="52">
	    <block type="pseudo"><return pos:line="21" pos:column="13">return <expr><operator pos:line="21" pos:column="20">(<pos:position pos:line="21" pos:column="21"/></operator><literal type="number" pos:line="21" pos:column="21">1<pos:position pos:line="21" pos:column="22"/></literal><operator pos:line="21" pos:column="22">)<pos:position pos:line="21" pos:column="23"/></operator></expr>;<pos:position pos:line="21" pos:column="24"/></return></block></then></if>
	}<pos:position pos:line="22" pos:column="10"/></block></then>
	<else pos:line="23" pos:column="9">else
	<block pos:line="24" pos:column="9">{
	  <if pos:line="25" pos:column="11">if <condition pos:line="25" pos:column="14">(<expr><call><name pos:line="25" pos:column="15">ascii_strcasecmp<pos:position pos:line="25" pos:column="31"/></name> <argument_list pos:line="25" pos:column="32">(<argument><expr><name pos:line="25" pos:column="33">buf<pos:position pos:line="25" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="38">p<pos:position pos:line="25" pos:column="39"/></name></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call> <operator pos:line="25" pos:column="41">==<pos:position pos:line="25" pos:column="43"/></operator> <literal type="number" pos:line="25" pos:column="44">0<pos:position pos:line="25" pos:column="45"/></literal></expr>)<pos:position pos:line="25" pos:column="46"/></condition><then pos:line="25" pos:column="46">
	    <block type="pseudo"><return pos:line="26" pos:column="13">return <expr><operator pos:line="26" pos:column="20">(<pos:position pos:line="26" pos:column="21"/></operator><literal type="number" pos:line="26" pos:column="21">1<pos:position pos:line="26" pos:column="22"/></literal><operator pos:line="26" pos:column="22">)<pos:position pos:line="26" pos:column="23"/></operator></expr>;<pos:position pos:line="26" pos:column="24"/></return></block></then></if>
	}<pos:position pos:line="27" pos:column="10"/></block></else></if>
      }<pos:position pos:line="28" pos:column="8"/></block></then>
      <else pos:line="29" pos:column="7">else
      <block pos:line="30" pos:column="7">{
	<expr_stmt><expr><name pos:line="31" pos:column="9">lng<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">=<pos:position pos:line="31" pos:column="14"/></operator> <call><name pos:line="31" pos:column="15">mutt_strlen<pos:position pos:line="31" pos:column="26"/></name> <argument_list pos:line="31" pos:column="27">(<argument><expr><name pos:line="31" pos:column="28">p<pos:position pos:line="31" pos:column="29"/></name></expr></argument>)<pos:position pos:line="31" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name><name pos:line="32" pos:column="13">buf<pos:position pos:line="32" pos:column="16"/></name><index pos:line="32" pos:column="16">[<expr><name pos:line="32" pos:column="17">lng<pos:position pos:line="32" pos:column="20"/></name></expr>]<pos:position pos:line="32" pos:column="21"/></index></name> <operator pos:line="32" pos:column="22">==<pos:position pos:line="32" pos:column="24"/></operator> <literal type="char" pos:line="32" pos:column="25">'/'<pos:position pos:line="32" pos:column="28"/></literal> <operator pos:line="32" pos:column="29">&amp;&amp;<pos:position pos:line="32" pos:column="39"/></operator> <call><name pos:line="32" pos:column="32">mutt_strncasecmp<pos:position pos:line="32" pos:column="48"/></name> <argument_list pos:line="32" pos:column="49">(<argument><expr><name pos:line="32" pos:column="50">buf<pos:position pos:line="32" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="55">p<pos:position pos:line="32" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="58">lng<pos:position pos:line="32" pos:column="61"/></name></expr></argument>)<pos:position pos:line="32" pos:column="62"/></argument_list></call> <operator pos:line="32" pos:column="63">==<pos:position pos:line="32" pos:column="65"/></operator> <literal type="number" pos:line="32" pos:column="66">0<pos:position pos:line="32" pos:column="67"/></literal></expr>)<pos:position pos:line="32" pos:column="68"/></condition><then pos:line="32" pos:column="68">
	  <block type="pseudo"><return pos:line="33" pos:column="11">return <expr><operator pos:line="33" pos:column="18">(<pos:position pos:line="33" pos:column="19"/></operator><literal type="number" pos:line="33" pos:column="19">1<pos:position pos:line="33" pos:column="20"/></literal><operator pos:line="33" pos:column="20">)<pos:position pos:line="33" pos:column="21"/></operator></expr>;<pos:position pos:line="33" pos:column="22"/></return></block></then></if>
      }<pos:position pos:line="34" pos:column="8"/></block></else></if>

      <expr_stmt><expr><name pos:line="36" pos:column="7">p<pos:position pos:line="36" pos:column="8"/></name> <operator pos:line="36" pos:column="9">=<pos:position pos:line="36" pos:column="10"/></operator> <name pos:line="36" pos:column="11">NULL<pos:position pos:line="36" pos:column="15"/></name></expr>;<pos:position pos:line="36" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></while>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>

  <return pos:line="40" pos:column="3">return <expr><operator pos:line="40" pos:column="10">(<pos:position pos:line="40" pos:column="11"/></operator><literal type="number" pos:line="40" pos:column="11">0<pos:position pos:line="40" pos:column="12"/></literal><operator pos:line="40" pos:column="12">)<pos:position pos:line="40" pos:column="13"/></operator></expr>;<pos:position pos:line="40" pos:column="14"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_623_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_decode_quoted<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">STATE<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">s<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">long<pos:position pos:line="1" pos:column="40"/></name></type> <name pos:line="1" pos:column="41">len<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">int<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">istext<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">iconv_t<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">cd<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">line<pos:position pos:line="3" pos:column="12"/></name><index pos:line="3" pos:column="12">[<expr><name pos:line="3" pos:column="13">STRING<pos:position pos:line="3" pos:column="19"/></name></expr>]<pos:position pos:line="3" pos:column="20"/></index></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">decline<pos:position pos:line="4" pos:column="15"/></name><index pos:line="4" pos:column="15">[<expr><literal type="number" pos:line="4" pos:column="16">2<pos:position pos:line="4" pos:column="17"/></literal><operator pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">STRING<pos:position pos:line="4" pos:column="24"/></name></expr>]<pos:position pos:line="4" pos:column="25"/></index></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">l<pos:position pos:line="5" pos:column="11"/></name> <init pos:line="5" pos:column="12">= <expr><literal type="number" pos:line="5" pos:column="14">0<pos:position pos:line="5" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">l2<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">l3<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>
  
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">last<pos:position pos:line="9" pos:column="11"/></name></decl>;<pos:position pos:line="9" pos:column="12"/></decl_stmt>
  
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">istext<pos:position pos:line="11" pos:column="13"/></name></expr>)<pos:position pos:line="11" pos:column="14"/></condition><then pos:line="11" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="5">state_set_prefix<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name pos:line="12" pos:column="22">s<pos:position pos:line="12" pos:column="23"/></name></expr></argument>)<pos:position pos:line="12" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt></block></then></if>

  <while pos:line="14" pos:column="3">while <condition pos:line="14" pos:column="9">(<expr><name pos:line="14" pos:column="10">len<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">&gt;<pos:position pos:line="14" pos:column="18"/></operator> <literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal></expr>)<pos:position pos:line="14" pos:column="18"/></condition>
  <block pos:line="15" pos:column="3">{
    <expr_stmt><expr><name pos:line="16" pos:column="5">last<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <literal type="number" pos:line="16" pos:column="12">0<pos:position pos:line="16" pos:column="13"/></literal></expr>;<pos:position pos:line="16" pos:column="14"/></expr_stmt>
    
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name pos:line="18" pos:column="9">fgets<pos:position pos:line="18" pos:column="14"/></name> <argument_list pos:line="18" pos:column="15">(<argument><expr><name pos:line="18" pos:column="16">line<pos:position pos:line="18" pos:column="20"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="22">MIN<pos:position pos:line="18" pos:column="25"/></name> <argument_list pos:line="18" pos:column="26">(<argument><expr><sizeof pos:line="18" pos:column="27">sizeof <argument_list pos:line="18" pos:column="34">(<argument><expr><name pos:line="18" pos:column="35">line<pos:position pos:line="18" pos:column="39"/></name></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="18" pos:column="42">len<pos:position pos:line="18" pos:column="45"/></name> <operator pos:line="18" pos:column="46">+<pos:position pos:line="18" pos:column="47"/></operator> <literal type="number" pos:line="18" pos:column="48">1<pos:position pos:line="18" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="52">s<pos:position pos:line="18" pos:column="53"/></name><operator pos:line="18" pos:column="53">-&gt;<pos:position pos:line="18" pos:column="58"/></operator><name pos:line="18" pos:column="55">fpin<pos:position pos:line="18" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call> <operator pos:line="18" pos:column="61">==<pos:position pos:line="18" pos:column="63"/></operator> <name pos:line="18" pos:column="64">NULL<pos:position pos:line="18" pos:column="68"/></name></expr>)<pos:position pos:line="18" pos:column="69"/></condition><then pos:line="18" pos:column="69">
      <block type="pseudo"><break pos:line="19" pos:column="7">break;<pos:position pos:line="19" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name pos:line="21" pos:column="5">len<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">-=<pos:position pos:line="21" pos:column="11"/></operator> <operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">l2<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <call><name pos:line="21" pos:column="18">strlen<pos:position pos:line="21" pos:column="24"/></name> <argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">line<pos:position pos:line="21" pos:column="30"/></name></expr></argument>)<pos:position pos:line="21" pos:column="31"/></argument_list></call><operator pos:line="21" pos:column="31">)<pos:position pos:line="21" pos:column="32"/></operator></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>

    <comment type="block" pos:line="23" pos:column="5">/* 
     * Skip over pending input data until end of line - at this
     * point, the only thing we may see is trailing whitespace,
     * i.e. garbage.
     */</comment>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">l2<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">&amp;&amp;<pos:position pos:line="29" pos:column="22"/></operator> <operator pos:line="29" pos:column="15">(<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="16">last<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <name><name pos:line="29" pos:column="23">line<pos:position pos:line="29" pos:column="27"/></name><index pos:line="29" pos:column="27">[<expr><name pos:line="29" pos:column="28">l2<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">-<pos:position pos:line="29" pos:column="32"/></operator> <literal type="number" pos:line="29" pos:column="33">1<pos:position pos:line="29" pos:column="34"/></literal></expr>]<pos:position pos:line="29" pos:column="35"/></index></name><operator pos:line="29" pos:column="35">)<pos:position pos:line="29" pos:column="36"/></operator> <operator pos:line="29" pos:column="37">!=<pos:position pos:line="29" pos:column="39"/></operator> <literal type="char" pos:line="29" pos:column="40">'\n'<pos:position pos:line="29" pos:column="44"/></literal></expr>)<pos:position pos:line="29" pos:column="45"/></condition><then pos:line="29" pos:column="45">
      <block type="pseudo"><while pos:line="30" pos:column="7">while <condition pos:line="30" pos:column="13">(<expr><name pos:line="30" pos:column="14">len<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">&gt;<pos:position pos:line="30" pos:column="22"/></operator> <literal type="number" pos:line="30" pos:column="20">0<pos:position pos:line="30" pos:column="21"/></literal> <operator pos:line="30" pos:column="22">&amp;&amp;<pos:position pos:line="30" pos:column="32"/></operator> <operator pos:line="30" pos:column="25">(<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="26">last<pos:position pos:line="30" pos:column="30"/></name> <operator pos:line="30" pos:column="31">=<pos:position pos:line="30" pos:column="32"/></operator> <call><name pos:line="30" pos:column="33">fgetc<pos:position pos:line="30" pos:column="38"/></name> <argument_list pos:line="30" pos:column="39">(<argument><expr><name><name pos:line="30" pos:column="40">s<pos:position pos:line="30" pos:column="41"/></name><operator pos:line="30" pos:column="41">-&gt;<pos:position pos:line="30" pos:column="46"/></operator><name pos:line="30" pos:column="43">fpin<pos:position pos:line="30" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="48"/></argument_list></call><operator pos:line="30" pos:column="48">)<pos:position pos:line="30" pos:column="49"/></operator> <operator pos:line="30" pos:column="50">!=<pos:position pos:line="30" pos:column="52"/></operator> <literal type="char" pos:line="30" pos:column="53">'\n'<pos:position pos:line="30" pos:column="57"/></literal></expr>)<pos:position pos:line="30" pos:column="58"/></condition>
	<block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="9">len<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">--<pos:position pos:line="31" pos:column="14"/></operator></expr>;<pos:position pos:line="31" pos:column="15"/></expr_stmt></block></while></block></then></if>

    <comment type="block" pos:line="33" pos:column="5">/* 
     * decode and do character set conversion
     */</comment>
    
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">qp_decode_line<pos:position pos:line="37" pos:column="19"/></name> <argument_list pos:line="37" pos:column="20">(<argument><expr><name pos:line="37" pos:column="21">decline<pos:position pos:line="37" pos:column="28"/></name> <operator pos:line="37" pos:column="29">+<pos:position pos:line="37" pos:column="30"/></operator> <name pos:line="37" pos:column="31">l<pos:position pos:line="37" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="34">line<pos:position pos:line="37" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="40">&amp;<pos:position pos:line="37" pos:column="45"/></operator><name pos:line="37" pos:column="41">l3<pos:position pos:line="37" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="45">last<pos:position pos:line="37" pos:column="49"/></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="38" pos:column="5">l<pos:position pos:line="38" pos:column="6"/></name> <operator pos:line="38" pos:column="7">+=<pos:position pos:line="38" pos:column="9"/></operator> <name pos:line="38" pos:column="10">l3<pos:position pos:line="38" pos:column="12"/></name></expr>;<pos:position pos:line="38" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">convert_to_state<pos:position pos:line="39" pos:column="21"/></name> <argument_list pos:line="39" pos:column="22">(<argument><expr><name pos:line="39" pos:column="23">cd<pos:position pos:line="39" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="27">decline<pos:position pos:line="39" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="36">&amp;<pos:position pos:line="39" pos:column="41"/></operator><name pos:line="39" pos:column="37">l<pos:position pos:line="39" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="40">s<pos:position pos:line="39" pos:column="41"/></name></expr></argument>)<pos:position pos:line="39" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="40" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="42" pos:column="3">convert_to_state<pos:position pos:line="42" pos:column="19"/></name> <argument_list pos:line="42" pos:column="20">(<argument><expr><name pos:line="42" pos:column="21">cd<pos:position pos:line="42" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="25">0<pos:position pos:line="42" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="28">0<pos:position pos:line="42" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="31">s<pos:position pos:line="42" pos:column="32"/></name></expr></argument>)<pos:position pos:line="42" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="43" pos:column="3">state_reset_prefix<pos:position pos:line="43" pos:column="21"/></name><argument_list pos:line="43" pos:column="21">(<argument><expr><name pos:line="43" pos:column="22">s<pos:position pos:line="43" pos:column="23"/></name></expr></argument>)<pos:position pos:line="43" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="25"/></expr_stmt>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

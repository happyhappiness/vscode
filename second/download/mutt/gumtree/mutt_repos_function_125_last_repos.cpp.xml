<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_125_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">strtok_r<pos:position pos:line="2" pos:column="9"/></name> <parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">char<pos:position pos:line="2" pos:column="15"/></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type><name pos:line="2" pos:column="17">s<pos:position pos:line="2" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">delim<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier><modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">save_ptr<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">token<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">s<pos:position pos:line="6" pos:column="8"/></name> <operator pos:line="6" pos:column="9">==<pos:position pos:line="6" pos:column="11"/></operator> <name pos:line="6" pos:column="12">NULL<pos:position pos:line="6" pos:column="16"/></name></expr>)<pos:position pos:line="6" pos:column="17"/></condition><then pos:line="6" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="5">s<pos:position pos:line="7" pos:column="6"/></name> <operator pos:line="7" pos:column="7">=<pos:position pos:line="7" pos:column="8"/></operator> <operator pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">save_ptr<pos:position pos:line="7" pos:column="18"/></name></expr>;<pos:position pos:line="7" pos:column="19"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="9" pos:column="3">/* Scan leading delimiters.  */</comment>
  <expr_stmt><expr><name pos:line="10" pos:column="3">s<pos:position pos:line="10" pos:column="4"/></name> <operator pos:line="10" pos:column="5">+=<pos:position pos:line="10" pos:column="7"/></operator> <call><name pos:line="10" pos:column="8">strspn<pos:position pos:line="10" pos:column="14"/></name> <argument_list pos:line="10" pos:column="15">(<argument><expr><name pos:line="10" pos:column="16">s<pos:position pos:line="10" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="19">delim<pos:position pos:line="10" pos:column="24"/></name></expr></argument>)<pos:position pos:line="10" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">*<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">s<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">==<pos:position pos:line="11" pos:column="12"/></operator> <literal type="char" pos:line="11" pos:column="13">'\0'<pos:position pos:line="11" pos:column="17"/></literal></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18">
    <block pos:line="12" pos:column="5">{
      <expr_stmt><expr><operator pos:line="13" pos:column="7">*<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">save_ptr<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">s<pos:position pos:line="13" pos:column="20"/></name></expr>;<pos:position pos:line="13" pos:column="21"/></expr_stmt>
      <return pos:line="14" pos:column="7">return <expr><name pos:line="14" pos:column="14">NULL<pos:position pos:line="14" pos:column="18"/></name></expr>;<pos:position pos:line="14" pos:column="19"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="17" pos:column="3">/* Find the end of the token.  */</comment>
  <expr_stmt><expr><name pos:line="18" pos:column="3">token<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <name pos:line="18" pos:column="11">s<pos:position pos:line="18" pos:column="12"/></name></expr>;<pos:position pos:line="18" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><name pos:line="19" pos:column="3">s<pos:position pos:line="19" pos:column="4"/></name> <operator pos:line="19" pos:column="5">=<pos:position pos:line="19" pos:column="6"/></operator> <call><name pos:line="19" pos:column="7">strpbrk<pos:position pos:line="19" pos:column="14"/></name> <argument_list pos:line="19" pos:column="15">(<argument><expr><name pos:line="19" pos:column="16">token<pos:position pos:line="19" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="23">delim<pos:position pos:line="19" pos:column="28"/></name></expr></argument>)<pos:position pos:line="19" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">s<pos:position pos:line="20" pos:column="8"/></name> <operator pos:line="20" pos:column="9">==<pos:position pos:line="20" pos:column="11"/></operator> <name pos:line="20" pos:column="12">NULL<pos:position pos:line="20" pos:column="16"/></name></expr>)<pos:position pos:line="20" pos:column="17"/></condition><then pos:line="20" pos:column="17">
    <comment type="block" pos:line="21" pos:column="5">/* This token finishes the string.  */</comment>
    <block type="pseudo"><expr_stmt><expr><operator pos:line="22" pos:column="5">*<pos:position pos:line="22" pos:column="6"/></operator><name pos:line="22" pos:column="6">save_ptr<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <call><name pos:line="22" pos:column="17">strchr<pos:position pos:line="22" pos:column="23"/></name> <argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">token<pos:position pos:line="22" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="22" pos:column="32">'\0'<pos:position pos:line="22" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt></block></then>
  <else pos:line="23" pos:column="3">else
    <block pos:line="24" pos:column="5">{
      <comment type="block" pos:line="25" pos:column="7">/* Terminate the token and make *SAVE_PTR point past it.  */</comment>
      <expr_stmt><expr><operator pos:line="26" pos:column="7">*<pos:position pos:line="26" pos:column="8"/></operator><name pos:line="26" pos:column="8">s<pos:position pos:line="26" pos:column="9"/></name> <operator pos:line="26" pos:column="10">=<pos:position pos:line="26" pos:column="11"/></operator> <literal type="char" pos:line="26" pos:column="12">'\0'<pos:position pos:line="26" pos:column="16"/></literal></expr>;<pos:position pos:line="26" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="27" pos:column="7">*<pos:position pos:line="27" pos:column="8"/></operator><name pos:line="27" pos:column="8">save_ptr<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <name pos:line="27" pos:column="19">s<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">+<pos:position pos:line="27" pos:column="22"/></operator> <literal type="number" pos:line="27" pos:column="23">1<pos:position pos:line="27" pos:column="24"/></literal></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></else></if>
  <return pos:line="29" pos:column="3">return <expr><name pos:line="29" pos:column="10">token<pos:position pos:line="29" pos:column="15"/></name></expr>;<pos:position pos:line="29" pos:column="16"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

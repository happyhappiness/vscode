<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_206_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">mutt_group_remove<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">group_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">g<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><operator pos:line="3" pos:column="7">!<pos:position pos:line="3" pos:column="8"/></operator><name pos:line="3" pos:column="8">g<pos:position pos:line="3" pos:column="9"/></name></expr>)<pos:position pos:line="3" pos:column="10"/></condition><then pos:line="3" pos:column="10">
    <block type="pseudo"><return pos:line="4" pos:column="5">return;<pos:position pos:line="4" pos:column="12"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">hash_delete<pos:position pos:line="5" pos:column="14"/></name> <argument_list pos:line="5" pos:column="15">(<argument><expr><name pos:line="5" pos:column="16">Groups<pos:position pos:line="5" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="24">g<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">-&gt;<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="27">name<pos:position pos:line="5" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="33">g<pos:position pos:line="5" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="36">NULL<pos:position pos:line="5" pos:column="40"/></name></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">rfc822_free_address<pos:position pos:line="6" pos:column="22"/></name> <argument_list pos:line="6" pos:column="23">(<argument><expr><operator pos:line="6" pos:column="24">&amp;<pos:position pos:line="6" pos:column="29"/></operator><name><name pos:line="6" pos:column="25">g<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">-&gt;<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="28">as<pos:position pos:line="6" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">mutt_free_rx_list<pos:position pos:line="7" pos:column="20"/></name> <argument_list pos:line="7" pos:column="21">(<argument><expr><operator pos:line="7" pos:column="22">&amp;<pos:position pos:line="7" pos:column="27"/></operator><name><name pos:line="7" pos:column="23">g<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">-&gt;<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="26">rs<pos:position pos:line="7" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">FREE<pos:position pos:line="8" pos:column="7"/></name><argument_list pos:line="8" pos:column="7">(<argument><expr><operator pos:line="8" pos:column="8">&amp;<pos:position pos:line="8" pos:column="13"/></operator><name><name pos:line="8" pos:column="9">g<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">name<pos:position pos:line="8" pos:column="16"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">FREE<pos:position pos:line="9" pos:column="7"/></name><argument_list pos:line="9" pos:column="7">(<argument><expr><operator pos:line="9" pos:column="8">&amp;<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="9">g<pos:position pos:line="9" pos:column="10"/></name></expr></argument>)<pos:position pos:line="9" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="12"/></expr_stmt>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

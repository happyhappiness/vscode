<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1293_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">imap_expunge_mailbox<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">IMAP_DATA<pos:position pos:line="1" pos:column="37"/></name><modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type> <name pos:line="1" pos:column="39">idata<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">HEADER<pos:position pos:line="3" pos:column="9"/></name><modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type> <name pos:line="3" pos:column="11">h<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="10">cacheno<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

  <for pos:line="6" pos:column="3">for <control pos:line="6" pos:column="7">(<init><expr><name pos:line="6" pos:column="8">i<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <literal type="number" pos:line="6" pos:column="12">0<pos:position pos:line="6" pos:column="13"/></literal></expr>;<pos:position pos:line="6" pos:column="14"/></init> <condition><expr><name pos:line="6" pos:column="15">i<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">&lt;<pos:position pos:line="6" pos:column="21"/></operator> <name><name pos:line="6" pos:column="19">idata<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">-&gt;<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="26">ctx<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">msgcount<pos:position pos:line="6" pos:column="39"/></name></name></expr>;<pos:position pos:line="6" pos:column="40"/></condition> <incr><expr><name pos:line="6" pos:column="41">i<pos:position pos:line="6" pos:column="42"/></name><operator pos:line="6" pos:column="42">++<pos:position pos:line="6" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="45"/></control>
  <block pos:line="7" pos:column="3">{
    <expr_stmt><expr><name pos:line="8" pos:column="5">h<pos:position pos:line="8" pos:column="6"/></name> <operator pos:line="8" pos:column="7">=<pos:position pos:line="8" pos:column="8"/></operator> <name><name pos:line="8" pos:column="9">idata<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">ctx<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">-&gt;<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="21">hdrs<pos:position pos:line="8" pos:column="25"/></name><index pos:line="8" pos:column="25">[<expr><name pos:line="8" pos:column="26">i<pos:position pos:line="8" pos:column="27"/></name></expr>]<pos:position pos:line="8" pos:column="28"/></index></name></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">h<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">index<pos:position pos:line="10" pos:column="17"/></name></name> <operator pos:line="10" pos:column="18">==<pos:position pos:line="10" pos:column="20"/></operator> <operator pos:line="10" pos:column="21">-<pos:position pos:line="10" pos:column="22"/></operator><literal type="number" pos:line="10" pos:column="22">1<pos:position pos:line="10" pos:column="23"/></literal></expr>)<pos:position pos:line="10" pos:column="24"/></condition><then pos:line="10" pos:column="24">
    <block pos:line="11" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">dprint<pos:position pos:line="12" pos:column="13"/></name> <argument_list pos:line="12" pos:column="14">(<argument><expr><literal type="number" pos:line="12" pos:column="15">2<pos:position pos:line="12" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="18">(<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">debugfile<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">,<pos:position pos:line="12" pos:column="29"/></operator> <literal type="string" pos:line="12" pos:column="30">"Expunging message UID %d.\n"<pos:position pos:line="12" pos:column="59"/></literal><operator pos:line="12" pos:column="59">,<pos:position pos:line="12" pos:column="60"/></operator> <call><name pos:line="12" pos:column="61">HEADER_DATA<pos:position pos:line="12" pos:column="72"/></name> <argument_list pos:line="12" pos:column="73">(<argument><expr><name pos:line="12" pos:column="74">h<pos:position pos:line="12" pos:column="75"/></name></expr></argument>)<pos:position pos:line="12" pos:column="76"/></argument_list></call><operator pos:line="12" pos:column="76">-&gt;<pos:position pos:line="12" pos:column="81"/></operator><name pos:line="12" pos:column="78">uid<pos:position pos:line="12" pos:column="81"/></name><operator pos:line="12" pos:column="81">)<pos:position pos:line="12" pos:column="82"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="84"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="14" pos:column="7">h<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">-&gt;<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="10">active<pos:position pos:line="14" pos:column="16"/></name></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <literal type="number" pos:line="14" pos:column="19">0<pos:position pos:line="14" pos:column="20"/></literal></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>

      <comment type="block" pos:line="16" pos:column="7">/* free cached body from disk, if neccessary */</comment>
      <expr_stmt><expr><name pos:line="17" pos:column="7">cacheno<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <call><name pos:line="17" pos:column="17">HEADER_DATA<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><name pos:line="17" pos:column="29">h<pos:position pos:line="17" pos:column="30"/></name></expr></argument>)<pos:position pos:line="17" pos:column="31"/></argument_list></call><operator pos:line="17" pos:column="31">-&gt;<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="33">uid<pos:position pos:line="17" pos:column="36"/></name> <operator pos:line="17" pos:column="37">%<pos:position pos:line="17" pos:column="38"/></operator> <name pos:line="17" pos:column="39">IMAP_CACHE_LEN<pos:position pos:line="17" pos:column="53"/></name></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt>
      <if pos:line="18" pos:column="7">if <condition pos:line="18" pos:column="10">(<expr><name><name pos:line="18" pos:column="11">idata<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">-&gt;<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="18">cache<pos:position pos:line="18" pos:column="23"/></name><index pos:line="18" pos:column="23">[<expr><name pos:line="18" pos:column="24">cacheno<pos:position pos:line="18" pos:column="31"/></name></expr>]<pos:position pos:line="18" pos:column="32"/></index></name><operator pos:line="18" pos:column="32">.<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="33">uid<pos:position pos:line="18" pos:column="36"/></name> <operator pos:line="18" pos:column="37">==<pos:position pos:line="18" pos:column="39"/></operator> <call><name pos:line="18" pos:column="40">HEADER_DATA<pos:position pos:line="18" pos:column="51"/></name><argument_list pos:line="18" pos:column="51">(<argument><expr><name pos:line="18" pos:column="52">h<pos:position pos:line="18" pos:column="53"/></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call><operator pos:line="18" pos:column="54">-&gt;<pos:position pos:line="18" pos:column="59"/></operator><name pos:line="18" pos:column="56">uid<pos:position pos:line="18" pos:column="59"/></name> <operator pos:line="18" pos:column="60">&amp;&amp;<pos:position pos:line="18" pos:column="70"/></operator>
	  <name><name pos:line="19" pos:column="11">idata<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">-&gt;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="18">cache<pos:position pos:line="19" pos:column="23"/></name><index pos:line="19" pos:column="23">[<expr><name pos:line="19" pos:column="24">cacheno<pos:position pos:line="19" pos:column="31"/></name></expr>]<pos:position pos:line="19" pos:column="32"/></index></name><operator pos:line="19" pos:column="32">.<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="33">path<pos:position pos:line="19" pos:column="37"/></name></expr>)<pos:position pos:line="19" pos:column="38"/></condition><then pos:line="19" pos:column="38">
      <block pos:line="20" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">unlink<pos:position pos:line="21" pos:column="15"/></name> <argument_list pos:line="21" pos:column="16">(<argument><expr><name><name pos:line="21" pos:column="17">idata<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">-&gt;<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="24">cache<pos:position pos:line="21" pos:column="29"/></name><index pos:line="21" pos:column="29">[<expr><name pos:line="21" pos:column="30">cacheno<pos:position pos:line="21" pos:column="37"/></name></expr>]<pos:position pos:line="21" pos:column="38"/></index></name><operator pos:line="21" pos:column="38">.<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="39">path<pos:position pos:line="21" pos:column="43"/></name></expr></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">FREE<pos:position pos:line="22" pos:column="13"/></name> <argument_list pos:line="22" pos:column="14">(<argument><expr><operator pos:line="22" pos:column="15">&amp;<pos:position pos:line="22" pos:column="20"/></operator><name><name pos:line="22" pos:column="16">idata<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">-&gt;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="23">cache<pos:position pos:line="22" pos:column="28"/></name><index pos:line="22" pos:column="28">[<expr><name pos:line="22" pos:column="29">cacheno<pos:position pos:line="22" pos:column="36"/></name></expr>]<pos:position pos:line="22" pos:column="37"/></index></name><operator pos:line="22" pos:column="37">.<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="38">path<pos:position pos:line="22" pos:column="42"/></name></expr></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt>
      }<pos:position pos:line="23" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="25" pos:column="7">imap_free_header_data<pos:position pos:line="25" pos:column="28"/></name> <argument_list pos:line="25" pos:column="29">(<argument><expr><operator pos:line="25" pos:column="30">&amp;<pos:position pos:line="25" pos:column="35"/></operator><name><name pos:line="25" pos:column="31">h<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">-&gt;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="34">data<pos:position pos:line="25" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
  }<pos:position pos:line="27" pos:column="4"/></block></for>

  <comment type="block" pos:line="29" pos:column="3">/* We may be called on to expunge at any time. We can't rely on the caller
   * to always know to rethread */</comment>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">mx_update_tables<pos:position pos:line="31" pos:column="19"/></name> <argument_list pos:line="31" pos:column="20">(<argument><expr><name><name pos:line="31" pos:column="21">idata<pos:position pos:line="31" pos:column="26"/></name><operator pos:line="31" pos:column="26">-&gt;<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="28">ctx<pos:position pos:line="31" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="33">0<pos:position pos:line="31" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">mutt_sort_headers<pos:position pos:line="32" pos:column="20"/></name> <argument_list pos:line="32" pos:column="21">(<argument><expr><name><name pos:line="32" pos:column="22">idata<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">-&gt;<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="29">ctx<pos:position pos:line="32" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="34">1<pos:position pos:line="32" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

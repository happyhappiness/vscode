<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_176_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">safe_rename<pos:position pos:line="1" pos:column="16"/></name> <parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><specifier pos:line="1" pos:column="18">const<pos:position pos:line="1" pos:column="23"/></specifier> <name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">src<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">target<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">stat<pos:position pos:line="3" pos:column="14"/></name></name></type> <name pos:line="3" pos:column="15">ssb<pos:position pos:line="3" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="20">tsb<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">!<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">src<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">||<pos:position pos:line="5" pos:column="14"/></operator> <operator pos:line="5" pos:column="15">!<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="16">target<pos:position pos:line="5" pos:column="22"/></name></expr>)<pos:position pos:line="5" pos:column="23"/></condition><then pos:line="5" pos:column="23">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">-<pos:position pos:line="6" pos:column="13"/></operator><literal type="number" pos:line="6" pos:column="13">1<pos:position pos:line="6" pos:column="14"/></literal></expr>;<pos:position pos:line="6" pos:column="15"/></return></block></then></if>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><call><name pos:line="8" pos:column="7">link<pos:position pos:line="8" pos:column="11"/></name> <argument_list pos:line="8" pos:column="12">(<argument><expr><name pos:line="8" pos:column="13">src<pos:position pos:line="8" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="18">target<pos:position pos:line="8" pos:column="24"/></name></expr></argument>)<pos:position pos:line="8" pos:column="25"/></argument_list></call> <operator pos:line="8" pos:column="26">!=<pos:position pos:line="8" pos:column="28"/></operator> <literal type="number" pos:line="8" pos:column="29">0<pos:position pos:line="8" pos:column="30"/></literal></expr>)<pos:position pos:line="8" pos:column="31"/></condition><then pos:line="8" pos:column="31">
  <block pos:line="9" pos:column="3">{

    <comment type="block" pos:line="11" pos:column="5">/*
     * Coda does not allow cross-directory links, but tells
     * us it's a cross-filesystem linking attempt.
     * 
     * However, the Coda rename call is allegedly safe to use.
     * 
     * With other file systems, rename should just fail when 
     * the files reside on different file systems, so it's safe
     * to try it here.
     *
     */</comment>
    
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">dprint<pos:position pos:line="23" pos:column="11"/></name> <argument_list pos:line="23" pos:column="12">(<argument><expr><literal type="number" pos:line="23" pos:column="13">1<pos:position pos:line="23" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">debugfile<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">,<pos:position pos:line="23" pos:column="27"/></operator> <literal type="string" pos:line="23" pos:column="28">"safe_rename: link (%s, %s) failed: %s (%d)\n"<pos:position pos:line="23" pos:column="74"/></literal><operator pos:line="23" pos:column="74">,<pos:position pos:line="23" pos:column="75"/></operator> <name pos:line="23" pos:column="76">src<pos:position pos:line="23" pos:column="79"/></name><operator pos:line="23" pos:column="79">,<pos:position pos:line="23" pos:column="80"/></operator> <name pos:line="23" pos:column="81">target<pos:position pos:line="23" pos:column="87"/></name><operator pos:line="23" pos:column="87">,<pos:position pos:line="23" pos:column="88"/></operator> <call><name pos:line="23" pos:column="89">strerror<pos:position pos:line="23" pos:column="97"/></name> <argument_list pos:line="23" pos:column="98">(<argument><expr><name pos:line="23" pos:column="99">errno<pos:position pos:line="23" pos:column="104"/></name></expr></argument>)<pos:position pos:line="23" pos:column="105"/></argument_list></call><operator pos:line="23" pos:column="105">,<pos:position pos:line="23" pos:column="106"/></operator> <name pos:line="23" pos:column="107">errno<pos:position pos:line="23" pos:column="112"/></name><operator pos:line="23" pos:column="112">)<pos:position pos:line="23" pos:column="113"/></operator></expr></argument>)<pos:position pos:line="23" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="115"/></expr_stmt>

    <comment type="block" pos:line="25" pos:column="5">/*
     * FUSE may return ENOSYS. VFAT may return EPERM. FreeBSD's
     * msdosfs may return EOPNOTSUPP.  ENOTSUP can also appear.
     */</comment>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">errno<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">==<pos:position pos:line="29" pos:column="17"/></operator> <name pos:line="29" pos:column="18">EXDEV<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">||<pos:position pos:line="29" pos:column="26"/></operator> <name pos:line="29" pos:column="27">errno<pos:position pos:line="29" pos:column="32"/></name> <operator pos:line="29" pos:column="33">==<pos:position pos:line="29" pos:column="35"/></operator> <name pos:line="29" pos:column="36">ENOSYS<pos:position pos:line="29" pos:column="42"/></name> <operator pos:line="29" pos:column="43">||<pos:position pos:line="29" pos:column="45"/></operator> <name pos:line="29" pos:column="46">errno<pos:position pos:line="29" pos:column="51"/></name> <operator pos:line="29" pos:column="52">==<pos:position pos:line="29" pos:column="54"/></operator> <name pos:line="29" pos:column="55">EPERM<pos:position pos:line="29" pos:column="60"/></name>
<cpp:ifdef pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">ifdef<pos:position pos:line="30" pos:column="7"/></cpp:directive> <name pos:line="30" pos:column="8">ENOTSUP<pos:position pos:line="30" pos:column="15"/></name></cpp:ifdef>
	<operator pos:line="31" pos:column="9">||<pos:position pos:line="31" pos:column="11"/></operator> <name pos:line="31" pos:column="12">errno<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">==<pos:position pos:line="31" pos:column="20"/></operator> <name pos:line="31" pos:column="21">ENOTSUP<pos:position pos:line="31" pos:column="28"/></name>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifdef<pos:position pos:line="33" pos:column="7"/></cpp:directive> <name pos:line="33" pos:column="8">EOPNOTSUPP<pos:position pos:line="33" pos:column="18"/></name></cpp:ifdef>
	<operator pos:line="34" pos:column="9">||<pos:position pos:line="34" pos:column="11"/></operator> <name pos:line="34" pos:column="12">errno<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">==<pos:position pos:line="34" pos:column="20"/></operator> <name pos:line="34" pos:column="21">EOPNOTSUPP<pos:position pos:line="34" pos:column="31"/></name></expr>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif>
	)<pos:position pos:line="36" pos:column="10"/></condition><then pos:line="36" pos:column="10">
    <block pos:line="37" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="38" pos:column="7">dprint<pos:position pos:line="38" pos:column="13"/></name> <argument_list pos:line="38" pos:column="14">(<argument><expr><literal type="number" pos:line="38" pos:column="15">1<pos:position pos:line="38" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="38" pos:column="18">(<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="19">debugfile<pos:position pos:line="38" pos:column="28"/></name><operator pos:line="38" pos:column="28">,<pos:position pos:line="38" pos:column="29"/></operator> <literal type="string" pos:line="38" pos:column="30">"safe_rename: trying rename...\n"<pos:position pos:line="38" pos:column="63"/></literal><operator pos:line="38" pos:column="63">)<pos:position pos:line="38" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="38" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="66"/></expr_stmt>
      <if pos:line="39" pos:column="7">if <condition pos:line="39" pos:column="10">(<expr><call><name pos:line="39" pos:column="11">rename<pos:position pos:line="39" pos:column="17"/></name> <argument_list pos:line="39" pos:column="18">(<argument><expr><name pos:line="39" pos:column="19">src<pos:position pos:line="39" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="24">target<pos:position pos:line="39" pos:column="30"/></name></expr></argument>)<pos:position pos:line="39" pos:column="31"/></argument_list></call> <operator pos:line="39" pos:column="32">==<pos:position pos:line="39" pos:column="34"/></operator> <operator pos:line="39" pos:column="35">-<pos:position pos:line="39" pos:column="36"/></operator><literal type="number" pos:line="39" pos:column="36">1<pos:position pos:line="39" pos:column="37"/></literal></expr>)<pos:position pos:line="39" pos:column="38"/></condition><then pos:line="39" pos:column="38"> 
      <block pos:line="40" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">dprint<pos:position pos:line="41" pos:column="15"/></name> <argument_list pos:line="41" pos:column="16">(<argument><expr><literal type="number" pos:line="41" pos:column="17">1<pos:position pos:line="41" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="41" pos:column="20">(<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="21">debugfile<pos:position pos:line="41" pos:column="30"/></name><operator pos:line="41" pos:column="30">,<pos:position pos:line="41" pos:column="31"/></operator> <literal type="string" pos:line="41" pos:column="32">"safe_rename: rename (%s, %s) failed: %s (%d)\n"<pos:position pos:line="41" pos:column="80"/></literal><operator pos:line="41" pos:column="80">,<pos:position pos:line="41" pos:column="81"/></operator> <name pos:line="41" pos:column="82">src<pos:position pos:line="41" pos:column="85"/></name><operator pos:line="41" pos:column="85">,<pos:position pos:line="41" pos:column="86"/></operator> <name pos:line="41" pos:column="87">target<pos:position pos:line="41" pos:column="93"/></name><operator pos:line="41" pos:column="93">,<pos:position pos:line="41" pos:column="94"/></operator> <call><name pos:line="41" pos:column="95">strerror<pos:position pos:line="41" pos:column="103"/></name> <argument_list pos:line="41" pos:column="104">(<argument><expr><name pos:line="41" pos:column="105">errno<pos:position pos:line="41" pos:column="110"/></name></expr></argument>)<pos:position pos:line="41" pos:column="111"/></argument_list></call><operator pos:line="41" pos:column="111">,<pos:position pos:line="41" pos:column="112"/></operator> <name pos:line="41" pos:column="113">errno<pos:position pos:line="41" pos:column="118"/></name><operator pos:line="41" pos:column="118">)<pos:position pos:line="41" pos:column="119"/></operator></expr></argument>)<pos:position pos:line="41" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="121"/></expr_stmt>
	<return pos:line="42" pos:column="9">return <expr><operator pos:line="42" pos:column="16">-<pos:position pos:line="42" pos:column="17"/></operator><literal type="number" pos:line="42" pos:column="17">1<pos:position pos:line="42" pos:column="18"/></literal></expr>;<pos:position pos:line="42" pos:column="19"/></return>
      }<pos:position pos:line="43" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="44" pos:column="7">dprint<pos:position pos:line="44" pos:column="13"/></name> <argument_list pos:line="44" pos:column="14">(<argument><expr><literal type="number" pos:line="44" pos:column="15">1<pos:position pos:line="44" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="44" pos:column="18">(<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="19">debugfile<pos:position pos:line="44" pos:column="28"/></name><operator pos:line="44" pos:column="28">,<pos:position pos:line="44" pos:column="29"/></operator> <literal type="string" pos:line="44" pos:column="30">"safe_rename: rename succeeded.\n"<pos:position pos:line="44" pos:column="64"/></literal><operator pos:line="44" pos:column="64">)<pos:position pos:line="44" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="44" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="67"/></expr_stmt>
    
      <return pos:line="46" pos:column="7">return <expr><literal type="number" pos:line="46" pos:column="14">0<pos:position pos:line="46" pos:column="15"/></literal></expr>;<pos:position pos:line="46" pos:column="16"/></return>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

    <return pos:line="49" pos:column="5">return <expr><operator pos:line="49" pos:column="12">-<pos:position pos:line="49" pos:column="13"/></operator><literal type="number" pos:line="49" pos:column="13">1<pos:position pos:line="49" pos:column="14"/></literal></expr>;<pos:position pos:line="49" pos:column="15"/></return>
  }<pos:position pos:line="50" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="52" pos:column="3">/*
   * Stat both links and check if they are equal.
   */</comment>
  
  <if pos:line="56" pos:column="3">if <condition pos:line="56" pos:column="6">(<expr><call><name pos:line="56" pos:column="7">lstat<pos:position pos:line="56" pos:column="12"/></name> <argument_list pos:line="56" pos:column="13">(<argument><expr><name pos:line="56" pos:column="14">src<pos:position pos:line="56" pos:column="17"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="19">&amp;<pos:position pos:line="56" pos:column="24"/></operator><name pos:line="56" pos:column="20">ssb<pos:position pos:line="56" pos:column="23"/></name></expr></argument>)<pos:position pos:line="56" pos:column="24"/></argument_list></call> <operator pos:line="56" pos:column="25">==<pos:position pos:line="56" pos:column="27"/></operator> <operator pos:line="56" pos:column="28">-<pos:position pos:line="56" pos:column="29"/></operator><literal type="number" pos:line="56" pos:column="29">1<pos:position pos:line="56" pos:column="30"/></literal></expr>)<pos:position pos:line="56" pos:column="31"/></condition><then pos:line="56" pos:column="31">
  <block pos:line="57" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">dprint<pos:position pos:line="58" pos:column="11"/></name> <argument_list pos:line="58" pos:column="12">(<argument><expr><literal type="number" pos:line="58" pos:column="13">1<pos:position pos:line="58" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="58" pos:column="16">(<pos:position pos:line="58" pos:column="17"/></operator><name pos:line="58" pos:column="17">debugfile<pos:position pos:line="58" pos:column="26"/></name><operator pos:line="58" pos:column="26">,<pos:position pos:line="58" pos:column="27"/></operator> <literal type="string" pos:line="58" pos:column="28">"safe_rename: can't stat %s: %s (%d)\n"<pos:position pos:line="58" pos:column="67"/></literal><operator pos:line="58" pos:column="67">,<pos:position pos:line="58" pos:column="68"/></operator>
		<name pos:line="59" pos:column="17">src<pos:position pos:line="59" pos:column="20"/></name><operator pos:line="59" pos:column="20">,<pos:position pos:line="59" pos:column="21"/></operator> <call><name pos:line="59" pos:column="22">strerror<pos:position pos:line="59" pos:column="30"/></name> <argument_list pos:line="59" pos:column="31">(<argument><expr><name pos:line="59" pos:column="32">errno<pos:position pos:line="59" pos:column="37"/></name></expr></argument>)<pos:position pos:line="59" pos:column="38"/></argument_list></call><operator pos:line="59" pos:column="38">,<pos:position pos:line="59" pos:column="39"/></operator> <name pos:line="59" pos:column="40">errno<pos:position pos:line="59" pos:column="45"/></name><operator pos:line="59" pos:column="45">)<pos:position pos:line="59" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="59" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="48"/></expr_stmt>
    <return pos:line="60" pos:column="5">return <expr><operator pos:line="60" pos:column="12">-<pos:position pos:line="60" pos:column="13"/></operator><literal type="number" pos:line="60" pos:column="13">1<pos:position pos:line="60" pos:column="14"/></literal></expr>;<pos:position pos:line="60" pos:column="15"/></return>
  }<pos:position pos:line="61" pos:column="4"/></block></then></if>
  
  <if pos:line="63" pos:column="3">if <condition pos:line="63" pos:column="6">(<expr><call><name pos:line="63" pos:column="7">lstat<pos:position pos:line="63" pos:column="12"/></name> <argument_list pos:line="63" pos:column="13">(<argument><expr><name pos:line="63" pos:column="14">target<pos:position pos:line="63" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="22">&amp;<pos:position pos:line="63" pos:column="27"/></operator><name pos:line="63" pos:column="23">tsb<pos:position pos:line="63" pos:column="26"/></name></expr></argument>)<pos:position pos:line="63" pos:column="27"/></argument_list></call> <operator pos:line="63" pos:column="28">==<pos:position pos:line="63" pos:column="30"/></operator> <operator pos:line="63" pos:column="31">-<pos:position pos:line="63" pos:column="32"/></operator><literal type="number" pos:line="63" pos:column="32">1<pos:position pos:line="63" pos:column="33"/></literal></expr>)<pos:position pos:line="63" pos:column="34"/></condition><then pos:line="63" pos:column="34">
  <block pos:line="64" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">dprint<pos:position pos:line="65" pos:column="11"/></name> <argument_list pos:line="65" pos:column="12">(<argument><expr><literal type="number" pos:line="65" pos:column="13">1<pos:position pos:line="65" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="65" pos:column="16">(<pos:position pos:line="65" pos:column="17"/></operator><name pos:line="65" pos:column="17">debugfile<pos:position pos:line="65" pos:column="26"/></name><operator pos:line="65" pos:column="26">,<pos:position pos:line="65" pos:column="27"/></operator> <literal type="string" pos:line="65" pos:column="28">"safe_rename: can't stat %s: %s (%d)\n"<pos:position pos:line="65" pos:column="67"/></literal><operator pos:line="65" pos:column="67">,<pos:position pos:line="65" pos:column="68"/></operator>
		<name pos:line="66" pos:column="17">src<pos:position pos:line="66" pos:column="20"/></name><operator pos:line="66" pos:column="20">,<pos:position pos:line="66" pos:column="21"/></operator> <call><name pos:line="66" pos:column="22">strerror<pos:position pos:line="66" pos:column="30"/></name> <argument_list pos:line="66" pos:column="31">(<argument><expr><name pos:line="66" pos:column="32">errno<pos:position pos:line="66" pos:column="37"/></name></expr></argument>)<pos:position pos:line="66" pos:column="38"/></argument_list></call><operator pos:line="66" pos:column="38">,<pos:position pos:line="66" pos:column="39"/></operator> <name pos:line="66" pos:column="40">errno<pos:position pos:line="66" pos:column="45"/></name><operator pos:line="66" pos:column="45">)<pos:position pos:line="66" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="66" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="48"/></expr_stmt>
    <return pos:line="67" pos:column="5">return <expr><operator pos:line="67" pos:column="12">-<pos:position pos:line="67" pos:column="13"/></operator><literal type="number" pos:line="67" pos:column="13">1<pos:position pos:line="67" pos:column="14"/></literal></expr>;<pos:position pos:line="67" pos:column="15"/></return>
  }<pos:position pos:line="68" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="70" pos:column="3">/* 
   * pretend that the link failed because the target file
   * did already exist.
   */</comment>

  <if pos:line="75" pos:column="3">if <condition pos:line="75" pos:column="6">(<expr><call><name pos:line="75" pos:column="7">compare_stat<pos:position pos:line="75" pos:column="19"/></name> <argument_list pos:line="75" pos:column="20">(<argument><expr><operator pos:line="75" pos:column="21">&amp;<pos:position pos:line="75" pos:column="26"/></operator><name pos:line="75" pos:column="22">ssb<pos:position pos:line="75" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="27">&amp;<pos:position pos:line="75" pos:column="32"/></operator><name pos:line="75" pos:column="28">tsb<pos:position pos:line="75" pos:column="31"/></name></expr></argument>)<pos:position pos:line="75" pos:column="32"/></argument_list></call> <operator pos:line="75" pos:column="33">==<pos:position pos:line="75" pos:column="35"/></operator> <operator pos:line="75" pos:column="36">-<pos:position pos:line="75" pos:column="37"/></operator><literal type="number" pos:line="75" pos:column="37">1<pos:position pos:line="75" pos:column="38"/></literal></expr>)<pos:position pos:line="75" pos:column="39"/></condition><then pos:line="75" pos:column="39">
  <block pos:line="76" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="77" pos:column="5">dprint<pos:position pos:line="77" pos:column="11"/></name> <argument_list pos:line="77" pos:column="12">(<argument><expr><literal type="number" pos:line="77" pos:column="13">1<pos:position pos:line="77" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="77" pos:column="16">(<pos:position pos:line="77" pos:column="17"/></operator><name pos:line="77" pos:column="17">debugfile<pos:position pos:line="77" pos:column="26"/></name><operator pos:line="77" pos:column="26">,<pos:position pos:line="77" pos:column="27"/></operator> <literal type="string" pos:line="77" pos:column="28">"safe_rename: stat blocks for %s and %s diverge; pretending EEXIST.\n"<pos:position pos:line="77" pos:column="98"/></literal><operator pos:line="77" pos:column="98">,<pos:position pos:line="77" pos:column="99"/></operator> <name pos:line="77" pos:column="100">src<pos:position pos:line="77" pos:column="103"/></name><operator pos:line="77" pos:column="103">,<pos:position pos:line="77" pos:column="104"/></operator> <name pos:line="77" pos:column="105">target<pos:position pos:line="77" pos:column="111"/></name><operator pos:line="77" pos:column="111">)<pos:position pos:line="77" pos:column="112"/></operator></expr></argument>)<pos:position pos:line="77" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="114"/></expr_stmt>
    <expr_stmt><expr><name pos:line="78" pos:column="5">errno<pos:position pos:line="78" pos:column="10"/></name> <operator pos:line="78" pos:column="11">=<pos:position pos:line="78" pos:column="12"/></operator> <name pos:line="78" pos:column="13">EEXIST<pos:position pos:line="78" pos:column="19"/></name></expr>;<pos:position pos:line="78" pos:column="20"/></expr_stmt>
    <return pos:line="79" pos:column="5">return <expr><operator pos:line="79" pos:column="12">-<pos:position pos:line="79" pos:column="13"/></operator><literal type="number" pos:line="79" pos:column="13">1<pos:position pos:line="79" pos:column="14"/></literal></expr>;<pos:position pos:line="79" pos:column="15"/></return>
  }<pos:position pos:line="80" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="82" pos:column="3">/*
   * Unlink the original link.  Should we really ignore the return
   * value here? XXX
   */</comment>

  <if pos:line="87" pos:column="3">if <condition pos:line="87" pos:column="6">(<expr><call><name pos:line="87" pos:column="7">unlink<pos:position pos:line="87" pos:column="13"/></name> <argument_list pos:line="87" pos:column="14">(<argument><expr><name pos:line="87" pos:column="15">src<pos:position pos:line="87" pos:column="18"/></name></expr></argument>)<pos:position pos:line="87" pos:column="19"/></argument_list></call> <operator pos:line="87" pos:column="20">==<pos:position pos:line="87" pos:column="22"/></operator> <operator pos:line="87" pos:column="23">-<pos:position pos:line="87" pos:column="24"/></operator><literal type="number" pos:line="87" pos:column="24">1<pos:position pos:line="87" pos:column="25"/></literal></expr>)<pos:position pos:line="87" pos:column="26"/></condition><then pos:line="87" pos:column="26"> 
  <block pos:line="88" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="89" pos:column="5">dprint<pos:position pos:line="89" pos:column="11"/></name> <argument_list pos:line="89" pos:column="12">(<argument><expr><literal type="number" pos:line="89" pos:column="13">1<pos:position pos:line="89" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="89" pos:column="16">(<pos:position pos:line="89" pos:column="17"/></operator><name pos:line="89" pos:column="17">debugfile<pos:position pos:line="89" pos:column="26"/></name><operator pos:line="89" pos:column="26">,<pos:position pos:line="89" pos:column="27"/></operator> <literal type="string" pos:line="89" pos:column="28">"safe_rename: unlink (%s) failed: %s (%d)\n"<pos:position pos:line="89" pos:column="72"/></literal><operator pos:line="89" pos:column="72">,<pos:position pos:line="89" pos:column="73"/></operator>
		<name pos:line="90" pos:column="17">src<pos:position pos:line="90" pos:column="20"/></name><operator pos:line="90" pos:column="20">,<pos:position pos:line="90" pos:column="21"/></operator> <call><name pos:line="90" pos:column="22">strerror<pos:position pos:line="90" pos:column="30"/></name> <argument_list pos:line="90" pos:column="31">(<argument><expr><name pos:line="90" pos:column="32">errno<pos:position pos:line="90" pos:column="37"/></name></expr></argument>)<pos:position pos:line="90" pos:column="38"/></argument_list></call><operator pos:line="90" pos:column="38">,<pos:position pos:line="90" pos:column="39"/></operator> <name pos:line="90" pos:column="40">errno<pos:position pos:line="90" pos:column="45"/></name><operator pos:line="90" pos:column="45">)<pos:position pos:line="90" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="90" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="48"/></expr_stmt>
  }<pos:position pos:line="91" pos:column="4"/></block></then></if>
  

  <return pos:line="94" pos:column="3">return <expr><literal type="number" pos:line="94" pos:column="10">0<pos:position pos:line="94" pos:column="11"/></literal></expr>;<pos:position pos:line="94" pos:column="12"/></return>
}<pos:position pos:line="95" pos:column="2"/></block></function></unit>

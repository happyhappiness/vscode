<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1654_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_is_application_pgp<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">BODY<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">m<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">t<pos:position pos:line="3" pos:column="8"/></name> <init pos:line="3" pos:column="9">= <expr><literal type="number" pos:line="3" pos:column="11">0<pos:position pos:line="3" pos:column="12"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">p<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name><name pos:line="6" pos:column="7">m<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">-&gt;<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="10">type<pos:position pos:line="6" pos:column="14"/></name></name> <operator pos:line="6" pos:column="15">==<pos:position pos:line="6" pos:column="17"/></operator> <name pos:line="6" pos:column="18">TYPEAPPLICATION<pos:position pos:line="6" pos:column="33"/></name></expr>)<pos:position pos:line="6" pos:column="34"/></condition><then pos:line="6" pos:column="34">
  <block pos:line="7" pos:column="3">{
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><call><name pos:line="8" pos:column="10">ascii_strcasecmp<pos:position pos:line="8" pos:column="26"/></name> <argument_list pos:line="8" pos:column="27">(<argument><expr><name><name pos:line="8" pos:column="28">m<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">-&gt;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="31">subtype<pos:position pos:line="8" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="40">"pgp"<pos:position pos:line="8" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call> <operator pos:line="8" pos:column="47">||<pos:position pos:line="8" pos:column="49"/></operator> <operator pos:line="8" pos:column="50">!<pos:position pos:line="8" pos:column="51"/></operator><call><name pos:line="8" pos:column="51">ascii_strcasecmp<pos:position pos:line="8" pos:column="67"/></name> <argument_list pos:line="8" pos:column="68">(<argument><expr><name><name pos:line="8" pos:column="69">m<pos:position pos:line="8" pos:column="70"/></name><operator pos:line="8" pos:column="70">-&gt;<pos:position pos:line="8" pos:column="75"/></operator><name pos:line="8" pos:column="72">subtype<pos:position pos:line="8" pos:column="79"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="81">"x-pgp-message"<pos:position pos:line="8" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="97"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="98"/></condition><then pos:line="8" pos:column="98">
    <block pos:line="9" pos:column="5">{
      <if pos:line="10" pos:column="7">if <condition pos:line="10" pos:column="10">(<expr><operator pos:line="10" pos:column="11">(<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="12">p<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <call><name pos:line="10" pos:column="16">mutt_get_parameter<pos:position pos:line="10" pos:column="34"/></name> <argument_list pos:line="10" pos:column="35">(<argument><expr><literal type="string" pos:line="10" pos:column="36">"x-action"<pos:position pos:line="10" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="48">m<pos:position pos:line="10" pos:column="49"/></name><operator pos:line="10" pos:column="49">-&gt;<pos:position pos:line="10" pos:column="54"/></operator><name pos:line="10" pos:column="51">parameter<pos:position pos:line="10" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call><operator pos:line="10" pos:column="61">)<pos:position pos:line="10" pos:column="62"/></operator>
	  <operator pos:line="11" pos:column="11">&amp;&amp;<pos:position pos:line="11" pos:column="21"/></operator> <operator pos:line="11" pos:column="14">(<pos:position pos:line="11" pos:column="15"/></operator><operator pos:line="11" pos:column="15">!<pos:position pos:line="11" pos:column="16"/></operator><call><name pos:line="11" pos:column="16">ascii_strcasecmp<pos:position pos:line="11" pos:column="32"/></name> <argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">p<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="37">"sign"<pos:position pos:line="11" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call> <operator pos:line="11" pos:column="45">||<pos:position pos:line="11" pos:column="47"/></operator> <operator pos:line="11" pos:column="48">!<pos:position pos:line="11" pos:column="49"/></operator><call><name pos:line="11" pos:column="49">ascii_strcasecmp<pos:position pos:line="11" pos:column="65"/></name> <argument_list pos:line="11" pos:column="66">(<argument><expr><name pos:line="11" pos:column="67">p<pos:position pos:line="11" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="70">"signclear"<pos:position pos:line="11" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="82"/></argument_list></call><operator pos:line="11" pos:column="82">)<pos:position pos:line="11" pos:column="83"/></operator></expr>)<pos:position pos:line="11" pos:column="84"/></condition><then pos:line="11" pos:column="84">
	<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="9">t<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">|=<pos:position pos:line="12" pos:column="13"/></operator> <name pos:line="12" pos:column="14">PGPSIGN<pos:position pos:line="12" pos:column="21"/></name></expr>;<pos:position pos:line="12" pos:column="22"/></expr_stmt></block></then></if>

      <if pos:line="14" pos:column="7">if <condition pos:line="14" pos:column="10">(<expr><operator pos:line="14" pos:column="11">(<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="12">p<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <call><name pos:line="14" pos:column="16">mutt_get_parameter<pos:position pos:line="14" pos:column="34"/></name> <argument_list pos:line="14" pos:column="35">(<argument><expr><literal type="string" pos:line="14" pos:column="36">"format"<pos:position pos:line="14" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="46">m<pos:position pos:line="14" pos:column="47"/></name><operator pos:line="14" pos:column="47">-&gt;<pos:position pos:line="14" pos:column="52"/></operator><name pos:line="14" pos:column="49">parameter<pos:position pos:line="14" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call><operator pos:line="14" pos:column="59">)<pos:position pos:line="14" pos:column="60"/></operator> <operator pos:line="14" pos:column="61">&amp;&amp;<pos:position pos:line="14" pos:column="71"/></operator> 
	  <operator pos:line="15" pos:column="11">!<pos:position pos:line="15" pos:column="12"/></operator><call><name pos:line="15" pos:column="12">ascii_strcasecmp<pos:position pos:line="15" pos:column="28"/></name> <argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">p<pos:position pos:line="15" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="33">"keys-only"<pos:position pos:line="15" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="46"/></condition><then pos:line="15" pos:column="46">
	<block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="9">t<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">|=<pos:position pos:line="16" pos:column="13"/></operator> <name pos:line="16" pos:column="14">PGPKEY<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt></block></then></if>

      <if pos:line="18" pos:column="7">if<condition pos:line="18" pos:column="9">(<expr><operator pos:line="18" pos:column="10">!<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">t<pos:position pos:line="18" pos:column="12"/></name></expr>)<pos:position pos:line="18" pos:column="13"/></condition><then pos:line="18" pos:column="13"> <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="14">t<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">|=<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="19">PGPENCRYPT<pos:position pos:line="18" pos:column="29"/></name></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt></block></then></if>  <comment type="block" pos:line="18" pos:column="32">/* not necessarily correct, but... */</comment>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">!<pos:position pos:line="21" pos:column="10"/></operator><call><name pos:line="21" pos:column="10">ascii_strcasecmp<pos:position pos:line="21" pos:column="26"/></name> <argument_list pos:line="21" pos:column="27">(<argument><expr><name><name pos:line="21" pos:column="28">m<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">-&gt;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="31">subtype<pos:position pos:line="21" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="40">"pgp-signed"<pos:position pos:line="21" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="54"/></condition><then pos:line="21" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="7">t<pos:position pos:line="22" pos:column="8"/></name> <operator pos:line="22" pos:column="9">|=<pos:position pos:line="22" pos:column="11"/></operator> <name pos:line="22" pos:column="12">PGPSIGN<pos:position pos:line="22" pos:column="19"/></name></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt></block></then></if>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">!<pos:position pos:line="24" pos:column="10"/></operator><call><name pos:line="24" pos:column="10">ascii_strcasecmp<pos:position pos:line="24" pos:column="26"/></name> <argument_list pos:line="24" pos:column="27">(<argument><expr><name><name pos:line="24" pos:column="28">m<pos:position pos:line="24" pos:column="29"/></name><operator pos:line="24" pos:column="29">-&gt;<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="31">subtype<pos:position pos:line="24" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="40">"pgp-keys"<pos:position pos:line="24" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="52"/></condition><then pos:line="24" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="7">t<pos:position pos:line="25" pos:column="8"/></name> <operator pos:line="25" pos:column="9">|=<pos:position pos:line="25" pos:column="11"/></operator> <name pos:line="25" pos:column="12">PGPKEY<pos:position pos:line="25" pos:column="18"/></name></expr>;<pos:position pos:line="25" pos:column="19"/></expr_stmt></block></then></if>
  }<pos:position pos:line="26" pos:column="4"/></block></then>
  <elseif pos:line="27" pos:column="3">else <if pos:line="27" pos:column="8">if <condition pos:line="27" pos:column="11">(<expr><name><name pos:line="27" pos:column="12">m<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">-&gt;<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="15">type<pos:position pos:line="27" pos:column="19"/></name></name> <operator pos:line="27" pos:column="20">==<pos:position pos:line="27" pos:column="22"/></operator> <name pos:line="27" pos:column="23">TYPETEXT<pos:position pos:line="27" pos:column="31"/></name> <operator pos:line="27" pos:column="32">&amp;&amp;<pos:position pos:line="27" pos:column="42"/></operator> <call><name pos:line="27" pos:column="35">ascii_strcasecmp<pos:position pos:line="27" pos:column="51"/></name> <argument_list pos:line="27" pos:column="52">(<argument><expr><literal type="string" pos:line="27" pos:column="53">"plain"<pos:position pos:line="27" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="62">m<pos:position pos:line="27" pos:column="63"/></name><operator pos:line="27" pos:column="63">-&gt;<pos:position pos:line="27" pos:column="68"/></operator><name pos:line="27" pos:column="65">subtype<pos:position pos:line="27" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="73"/></argument_list></call> <operator pos:line="27" pos:column="74">==<pos:position pos:line="27" pos:column="76"/></operator> <literal type="number" pos:line="27" pos:column="77">0<pos:position pos:line="27" pos:column="78"/></literal></expr>)<pos:position pos:line="27" pos:column="79"/></condition><then pos:line="27" pos:column="79">
  <block pos:line="28" pos:column="3">{
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">(<pos:position pos:line="29" pos:column="10"/></operator><operator pos:line="29" pos:column="10">(<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="11">p<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <call><name pos:line="29" pos:column="15">mutt_get_parameter<pos:position pos:line="29" pos:column="33"/></name> <argument_list pos:line="29" pos:column="34">(<argument><expr><literal type="string" pos:line="29" pos:column="35">"x-mutt-action"<pos:position pos:line="29" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="52">m<pos:position pos:line="29" pos:column="53"/></name><operator pos:line="29" pos:column="53">-&gt;<pos:position pos:line="29" pos:column="58"/></operator><name pos:line="29" pos:column="55">parameter<pos:position pos:line="29" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="65"/></argument_list></call><operator pos:line="29" pos:column="65">)<pos:position pos:line="29" pos:column="66"/></operator>
	 <operator pos:line="30" pos:column="10">||<pos:position pos:line="30" pos:column="12"/></operator> <operator pos:line="30" pos:column="13">(<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">p<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <call><name pos:line="30" pos:column="18">mutt_get_parameter<pos:position pos:line="30" pos:column="36"/></name> <argument_list pos:line="30" pos:column="37">(<argument><expr><literal type="string" pos:line="30" pos:column="38">"x-action"<pos:position pos:line="30" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="50">m<pos:position pos:line="30" pos:column="51"/></name><operator pos:line="30" pos:column="51">-&gt;<pos:position pos:line="30" pos:column="56"/></operator><name pos:line="30" pos:column="53">parameter<pos:position pos:line="30" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="63"/></argument_list></call><operator pos:line="30" pos:column="63">)<pos:position pos:line="30" pos:column="64"/></operator> 
	 <operator pos:line="31" pos:column="10">||<pos:position pos:line="31" pos:column="12"/></operator> <operator pos:line="31" pos:column="13">(<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">p<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <call><name pos:line="31" pos:column="18">mutt_get_parameter<pos:position pos:line="31" pos:column="36"/></name> <argument_list pos:line="31" pos:column="37">(<argument><expr><literal type="string" pos:line="31" pos:column="38">"action"<pos:position pos:line="31" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="48">m<pos:position pos:line="31" pos:column="49"/></name><operator pos:line="31" pos:column="49">-&gt;<pos:position pos:line="31" pos:column="54"/></operator><name pos:line="31" pos:column="51">parameter<pos:position pos:line="31" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="61"/></argument_list></call><operator pos:line="31" pos:column="61">)<pos:position pos:line="31" pos:column="62"/></operator><operator pos:line="31" pos:column="62">)<pos:position pos:line="31" pos:column="63"/></operator>
	 <operator pos:line="32" pos:column="10">&amp;&amp;<pos:position pos:line="32" pos:column="20"/></operator> <operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><call><name pos:line="32" pos:column="14">ascii_strncasecmp<pos:position pos:line="32" pos:column="31"/></name> <argument_list pos:line="32" pos:column="32">(<argument><expr><literal type="string" pos:line="32" pos:column="33">"pgp-sign"<pos:position pos:line="32" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="45">p<pos:position pos:line="32" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="48">8<pos:position pos:line="32" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="51"/></condition><then pos:line="32" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="7">t<pos:position pos:line="33" pos:column="8"/></name> <operator pos:line="33" pos:column="9">|=<pos:position pos:line="33" pos:column="11"/></operator> <name pos:line="33" pos:column="12">PGPSIGN<pos:position pos:line="33" pos:column="19"/></name></expr>;<pos:position pos:line="33" pos:column="20"/></expr_stmt></block></then>
    <elseif pos:line="34" pos:column="5">else <if pos:line="34" pos:column="10">if <condition pos:line="34" pos:column="13">(<expr><name pos:line="34" pos:column="14">p<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">&amp;&amp;<pos:position pos:line="34" pos:column="26"/></operator> <operator pos:line="34" pos:column="19">!<pos:position pos:line="34" pos:column="20"/></operator><call><name pos:line="34" pos:column="20">ascii_strncasecmp<pos:position pos:line="34" pos:column="37"/></name> <argument_list pos:line="34" pos:column="38">(<argument><expr><literal type="string" pos:line="34" pos:column="39">"pgp-encrypt"<pos:position pos:line="34" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="54">p<pos:position pos:line="34" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="57">11<pos:position pos:line="34" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="61"/></condition><then pos:line="34" pos:column="61">
      <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="7">t<pos:position pos:line="35" pos:column="8"/></name> <operator pos:line="35" pos:column="9">|=<pos:position pos:line="35" pos:column="11"/></operator> <name pos:line="35" pos:column="12">PGPENCRYPT<pos:position pos:line="35" pos:column="22"/></name></expr>;<pos:position pos:line="35" pos:column="23"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="36" pos:column="5">else <if pos:line="36" pos:column="10">if <condition pos:line="36" pos:column="13">(<expr><name pos:line="36" pos:column="14">p<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">&amp;&amp;<pos:position pos:line="36" pos:column="26"/></operator> <operator pos:line="36" pos:column="19">!<pos:position pos:line="36" pos:column="20"/></operator><call><name pos:line="36" pos:column="20">ascii_strncasecmp<pos:position pos:line="36" pos:column="37"/></name> <argument_list pos:line="36" pos:column="38">(<argument><expr><literal type="string" pos:line="36" pos:column="39">"pgp-keys"<pos:position pos:line="36" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="51">p<pos:position pos:line="36" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="54">7<pos:position pos:line="36" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="57"/></condition><then pos:line="36" pos:column="57">
      <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="7">t<pos:position pos:line="37" pos:column="8"/></name> <operator pos:line="37" pos:column="9">|=<pos:position pos:line="37" pos:column="11"/></operator> <name pos:line="37" pos:column="12">PGPKEY<pos:position pos:line="37" pos:column="18"/></name></expr>;<pos:position pos:line="37" pos:column="19"/></expr_stmt></block></then></if></elseif></if>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if></elseif></if>
  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><name pos:line="39" pos:column="7">t<pos:position pos:line="39" pos:column="8"/></name></expr>)<pos:position pos:line="39" pos:column="9"/></condition><then pos:line="39" pos:column="9">
    <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="5">t<pos:position pos:line="40" pos:column="6"/></name> <operator pos:line="40" pos:column="7">|=<pos:position pos:line="40" pos:column="9"/></operator> <name pos:line="40" pos:column="10">PGPINLINE<pos:position pos:line="40" pos:column="19"/></name></expr>;<pos:position pos:line="40" pos:column="20"/></expr_stmt></block></then></if>

  <return pos:line="42" pos:column="3">return <expr><name pos:line="42" pos:column="10">t<pos:position pos:line="42" pos:column="11"/></name></expr>;<pos:position pos:line="42" pos:column="12"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_518_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">mutt_extract_message_id<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">s<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier><modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">saveptr<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">o<pos:position pos:line="3" pos:column="16"/></name></decl>, <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="19">onull<pos:position pos:line="3" pos:column="24"/></name></decl>, <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="27">p<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">ret<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name pos:line="4" pos:column="15">NULL<pos:position pos:line="4" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">s<pos:position pos:line="6" pos:column="8"/></name></expr>)<pos:position pos:line="6" pos:column="9"/></condition><then pos:line="6" pos:column="9">
    <block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="5">p<pos:position pos:line="7" pos:column="6"/></name> <operator pos:line="7" pos:column="7">=<pos:position pos:line="7" pos:column="8"/></operator> <name pos:line="7" pos:column="9">s<pos:position pos:line="7" pos:column="10"/></name></expr>;<pos:position pos:line="7" pos:column="11"/></expr_stmt></block></then>
  <elseif pos:line="8" pos:column="3">else <if pos:line="8" pos:column="8">if <condition pos:line="8" pos:column="11">(<expr><name pos:line="8" pos:column="12">saveptr<pos:position pos:line="8" pos:column="19"/></name></expr>)<pos:position pos:line="8" pos:column="20"/></condition><then pos:line="8" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="5">p<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator> <operator pos:line="9" pos:column="9">*<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">saveptr<pos:position pos:line="9" pos:column="17"/></name></expr>;<pos:position pos:line="9" pos:column="18"/></expr_stmt></block></then></if></elseif>
  <else pos:line="10" pos:column="3">else
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">NULL<pos:position pos:line="11" pos:column="16"/></name></expr>;<pos:position pos:line="11" pos:column="17"/></return></block></else></if>

  <for pos:line="13" pos:column="3">for <control pos:line="13" pos:column="7">(<init><expr><name pos:line="13" pos:column="8">s<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <name pos:line="13" pos:column="12">NULL<pos:position pos:line="13" pos:column="16"/></name></expr><operator pos:line="13" pos:column="16">,<pos:position pos:line="13" pos:column="17"/></operator> <expr><name pos:line="13" pos:column="18">o<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="22">NULL<pos:position pos:line="13" pos:column="26"/></name></expr><operator pos:line="13" pos:column="26">,<pos:position pos:line="13" pos:column="27"/></operator> <expr><name pos:line="13" pos:column="28">onull<pos:position pos:line="13" pos:column="33"/></name> <operator pos:line="13" pos:column="34">=<pos:position pos:line="13" pos:column="35"/></operator> <name pos:line="13" pos:column="36">NULL<pos:position pos:line="13" pos:column="40"/></name></expr>;<pos:position pos:line="13" pos:column="41"/></init>
       <condition><expr><operator pos:line="14" pos:column="8">(<pos:position pos:line="14" pos:column="9"/></operator><name pos:line="14" pos:column="9">p<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <call><name pos:line="14" pos:column="13">strpbrk<pos:position pos:line="14" pos:column="20"/></name> <argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">p<pos:position pos:line="14" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="25">"&lt;&gt; \t;"<pos:position pos:line="14" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call><operator pos:line="14" pos:column="34">)<pos:position pos:line="14" pos:column="35"/></operator> <operator pos:line="14" pos:column="36">!=<pos:position pos:line="14" pos:column="38"/></operator> <name pos:line="14" pos:column="39">NULL<pos:position pos:line="14" pos:column="43"/></name></expr>;<pos:position pos:line="14" pos:column="44"/></condition> <incr><expr><operator pos:line="14" pos:column="45">++<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="47">p<pos:position pos:line="14" pos:column="48"/></name></expr></incr>)<pos:position pos:line="14" pos:column="49"/></control>
  <block pos:line="15" pos:column="3">{
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">*<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">p<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">==<pos:position pos:line="16" pos:column="14"/></operator> <literal type="char" pos:line="16" pos:column="15">'&lt;'<pos:position pos:line="16" pos:column="21"/></literal></expr>)<pos:position pos:line="16" pos:column="19"/></condition><then pos:line="16" pos:column="19">
    <block pos:line="17" pos:column="5">{
      <expr_stmt><expr><name pos:line="18" pos:column="7">s<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <name pos:line="18" pos:column="11">p<pos:position pos:line="18" pos:column="12"/></name></expr>;<pos:position pos:line="18" pos:column="13"/></expr_stmt> 
      <expr_stmt><expr><name pos:line="19" pos:column="7">o<pos:position pos:line="19" pos:column="8"/></name> <operator pos:line="19" pos:column="9">=<pos:position pos:line="19" pos:column="10"/></operator> <name pos:line="19" pos:column="11">onull<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <name pos:line="19" pos:column="19">NULL<pos:position pos:line="19" pos:column="23"/></name></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
      <continue pos:line="20" pos:column="7">continue;<pos:position pos:line="20" pos:column="16"/></continue>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">!<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">s<pos:position pos:line="23" pos:column="11"/></name></expr>)<pos:position pos:line="23" pos:column="12"/></condition><then pos:line="23" pos:column="12">
      <block type="pseudo"><continue pos:line="24" pos:column="7">continue;<pos:position pos:line="24" pos:column="16"/></continue></block></then></if>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">*<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">p<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">==<pos:position pos:line="26" pos:column="14"/></operator> <literal type="char" pos:line="26" pos:column="15">'&gt;'<pos:position pos:line="26" pos:column="21"/></literal></expr>)<pos:position pos:line="26" pos:column="19"/></condition><then pos:line="26" pos:column="19">
    <block pos:line="27" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="28" pos:column="7">size_t<pos:position pos:line="28" pos:column="13"/></name></type> <name pos:line="28" pos:column="14">olen<pos:position pos:line="28" pos:column="18"/></name> <init pos:line="28" pos:column="19">= <expr><name pos:line="28" pos:column="21">onull<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">-<pos:position pos:line="28" pos:column="28"/></operator> <name pos:line="28" pos:column="29">o<pos:position pos:line="28" pos:column="30"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="28" pos:column="32">slen<pos:position pos:line="28" pos:column="36"/></name> <init pos:line="28" pos:column="37">= <expr><name pos:line="28" pos:column="39">p<pos:position pos:line="28" pos:column="40"/></name> <operator pos:line="28" pos:column="41">-<pos:position pos:line="28" pos:column="42"/></operator> <name pos:line="28" pos:column="43">s<pos:position pos:line="28" pos:column="44"/></name> <operator pos:line="28" pos:column="45">+<pos:position pos:line="28" pos:column="46"/></operator> <literal type="number" pos:line="28" pos:column="47">1<pos:position pos:line="28" pos:column="48"/></literal></expr></init></decl>;<pos:position pos:line="28" pos:column="49"/></decl_stmt>
      <expr_stmt><expr><name pos:line="29" pos:column="7">ret<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">=<pos:position pos:line="29" pos:column="12"/></operator> <call><name pos:line="29" pos:column="13">safe_malloc<pos:position pos:line="29" pos:column="24"/></name> <argument_list pos:line="29" pos:column="25">(<argument><expr><name pos:line="29" pos:column="26">olen<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">+<pos:position pos:line="29" pos:column="32"/></operator> <name pos:line="29" pos:column="33">slen<pos:position pos:line="29" pos:column="37"/></name> <operator pos:line="29" pos:column="38">+<pos:position pos:line="29" pos:column="39"/></operator> <literal type="number" pos:line="29" pos:column="40">1<pos:position pos:line="29" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="43"/></expr_stmt>
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><name pos:line="30" pos:column="11">o<pos:position pos:line="30" pos:column="12"/></name></expr>)<pos:position pos:line="30" pos:column="13"/></condition><then pos:line="30" pos:column="13">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="9">memcpy<pos:position pos:line="31" pos:column="15"/></name> <argument_list pos:line="31" pos:column="16">(<argument><expr><name pos:line="31" pos:column="17">ret<pos:position pos:line="31" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="22">o<pos:position pos:line="31" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="25">olen<pos:position pos:line="31" pos:column="29"/></name></expr></argument>)<pos:position pos:line="31" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">memcpy<pos:position pos:line="32" pos:column="13"/></name> <argument_list pos:line="32" pos:column="14">(<argument><expr><name pos:line="32" pos:column="15">ret<pos:position pos:line="32" pos:column="18"/></name> <operator pos:line="32" pos:column="19">+<pos:position pos:line="32" pos:column="20"/></operator> <name pos:line="32" pos:column="21">olen<pos:position pos:line="32" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="27">s<pos:position pos:line="32" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="30">slen<pos:position pos:line="32" pos:column="34"/></name></expr></argument>)<pos:position pos:line="32" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="33" pos:column="7">ret<pos:position pos:line="33" pos:column="10"/></name><index pos:line="33" pos:column="10">[<expr><name pos:line="33" pos:column="11">olen<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">+<pos:position pos:line="33" pos:column="17"/></operator> <name pos:line="33" pos:column="18">slen<pos:position pos:line="33" pos:column="22"/></name></expr>]<pos:position pos:line="33" pos:column="23"/></index></name> <operator pos:line="33" pos:column="24">=<pos:position pos:line="33" pos:column="25"/></operator> <literal type="char" pos:line="33" pos:column="26">'\0'<pos:position pos:line="33" pos:column="30"/></literal></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
      <if pos:line="34" pos:column="7">if <condition pos:line="34" pos:column="10">(<expr><name pos:line="34" pos:column="11">saveptr<pos:position pos:line="34" pos:column="18"/></name></expr>)<pos:position pos:line="34" pos:column="19"/></condition><then pos:line="34" pos:column="19">
	<block type="pseudo"><expr_stmt><expr><operator pos:line="35" pos:column="9">*<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">saveptr<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <name pos:line="35" pos:column="20">p<pos:position pos:line="35" pos:column="21"/></name> <operator pos:line="35" pos:column="22">+<pos:position pos:line="35" pos:column="23"/></operator> <literal type="number" pos:line="35" pos:column="24">1<pos:position pos:line="35" pos:column="25"/></literal></expr>;<pos:position pos:line="35" pos:column="26"/></expr_stmt></block></then></if> <comment type="block" pos:line="35" pos:column="27">/* next call starts after '&gt;' */</comment>
      <return pos:line="36" pos:column="7">return <expr><name pos:line="36" pos:column="14">ret<pos:position pos:line="36" pos:column="17"/></name></expr>;<pos:position pos:line="36" pos:column="18"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="39" pos:column="5">/* some idiotic clients break their message-ids between lines */</comment>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">s<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">==<pos:position pos:line="40" pos:column="13"/></operator> <name pos:line="40" pos:column="14">p<pos:position pos:line="40" pos:column="15"/></name></expr>)<pos:position pos:line="40" pos:column="16"/></condition><then pos:line="40" pos:column="16"> 
      <comment type="block" pos:line="41" pos:column="7">/* step past another whitespace */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="7">s<pos:position pos:line="42" pos:column="8"/></name> <operator pos:line="42" pos:column="9">=<pos:position pos:line="42" pos:column="10"/></operator> <name pos:line="42" pos:column="11">p<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">+<pos:position pos:line="42" pos:column="14"/></operator> <literal type="number" pos:line="42" pos:column="15">1<pos:position pos:line="42" pos:column="16"/></literal></expr>;<pos:position pos:line="42" pos:column="17"/></expr_stmt></block></then>
    <elseif pos:line="43" pos:column="5">else <if pos:line="43" pos:column="10">if <condition pos:line="43" pos:column="13">(<expr><name pos:line="43" pos:column="14">o<pos:position pos:line="43" pos:column="15"/></name></expr>)<pos:position pos:line="43" pos:column="16"/></condition><then pos:line="43" pos:column="16">
      <comment type="block" pos:line="44" pos:column="7">/* more than two lines, give up */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="7">s<pos:position pos:line="45" pos:column="8"/></name> <operator pos:line="45" pos:column="9">=<pos:position pos:line="45" pos:column="10"/></operator> <name pos:line="45" pos:column="11">o<pos:position pos:line="45" pos:column="12"/></name> <operator pos:line="45" pos:column="13">=<pos:position pos:line="45" pos:column="14"/></operator> <name pos:line="45" pos:column="15">onull<pos:position pos:line="45" pos:column="20"/></name> <operator pos:line="45" pos:column="21">=<pos:position pos:line="45" pos:column="22"/></operator> <name pos:line="45" pos:column="23">NULL<pos:position pos:line="45" pos:column="27"/></name></expr>;<pos:position pos:line="45" pos:column="28"/></expr_stmt></block></then></if></elseif>
    <else pos:line="46" pos:column="5">else
    <block pos:line="47" pos:column="5">{
      <comment type="block" pos:line="48" pos:column="7">/* remember the first line, start looking for the second */</comment>
      <expr_stmt><expr><name pos:line="49" pos:column="7">o<pos:position pos:line="49" pos:column="8"/></name> <operator pos:line="49" pos:column="9">=<pos:position pos:line="49" pos:column="10"/></operator> <name pos:line="49" pos:column="11">s<pos:position pos:line="49" pos:column="12"/></name></expr>;<pos:position pos:line="49" pos:column="13"/></expr_stmt>
      <expr_stmt><expr><name pos:line="50" pos:column="7">onull<pos:position pos:line="50" pos:column="12"/></name> <operator pos:line="50" pos:column="13">=<pos:position pos:line="50" pos:column="14"/></operator> <name pos:line="50" pos:column="15">p<pos:position pos:line="50" pos:column="16"/></name></expr>;<pos:position pos:line="50" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name pos:line="51" pos:column="7">s<pos:position pos:line="51" pos:column="8"/></name> <operator pos:line="51" pos:column="9">=<pos:position pos:line="51" pos:column="10"/></operator> <name pos:line="51" pos:column="11">p<pos:position pos:line="51" pos:column="12"/></name> <operator pos:line="51" pos:column="13">+<pos:position pos:line="51" pos:column="14"/></operator> <literal type="number" pos:line="51" pos:column="15">1<pos:position pos:line="51" pos:column="16"/></literal></expr>;<pos:position pos:line="51" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></else></if>
  }<pos:position pos:line="53" pos:column="4"/></block></for>

  <return pos:line="55" pos:column="3">return <expr><name pos:line="55" pos:column="10">NULL<pos:position pos:line="55" pos:column="14"/></name></expr>;<pos:position pos:line="55" pos:column="15"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

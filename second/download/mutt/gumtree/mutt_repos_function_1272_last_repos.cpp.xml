<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1272_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_write_mime_header<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">BODY<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">a<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">FILE<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">f<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">PARAMETER<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">p<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buffer<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><name pos:line="4" pos:column="15">STRING<pos:position pos:line="4" pos:column="21"/></name></expr>]<pos:position pos:line="4" pos:column="22"/></index></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">t<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">fn<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">len<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">tmplen<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">encode<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">fprintf<pos:position pos:line="11" pos:column="10"/></name> <argument_list pos:line="11" pos:column="11">(<argument><expr><name pos:line="11" pos:column="12">f<pos:position pos:line="11" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="15">"Content-Type: %s/%s"<pos:position pos:line="11" pos:column="36"/></literal></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="38">TYPE<pos:position pos:line="11" pos:column="42"/></name> <argument_list pos:line="11" pos:column="43">(<argument><expr><name pos:line="11" pos:column="44">a<pos:position pos:line="11" pos:column="45"/></name></expr></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="48">a<pos:position pos:line="11" pos:column="49"/></name><operator pos:line="11" pos:column="49">-&gt;<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="51">subtype<pos:position pos:line="11" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="60"/></expr_stmt>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name><name pos:line="13" pos:column="7">a<pos:position pos:line="13" pos:column="8"/></name><operator pos:line="13" pos:column="8">-&gt;<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="10">parameter<pos:position pos:line="13" pos:column="19"/></name></name></expr>)<pos:position pos:line="13" pos:column="20"/></condition><then pos:line="13" pos:column="20">
  <block pos:line="14" pos:column="3">{
    <expr_stmt><expr><name pos:line="15" pos:column="5">len<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <literal type="number" pos:line="15" pos:column="11">25<pos:position pos:line="15" pos:column="13"/></literal> <operator pos:line="15" pos:column="14">+<pos:position pos:line="15" pos:column="15"/></operator> <call><name pos:line="15" pos:column="16">mutt_strlen<pos:position pos:line="15" pos:column="27"/></name> <argument_list pos:line="15" pos:column="28">(<argument><expr><name><name pos:line="15" pos:column="29">a<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">-&gt;<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="32">subtype<pos:position pos:line="15" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt> <comment type="block" pos:line="15" pos:column="42">/* approximate len. of content-type */</comment>

    <for pos:line="17" pos:column="5">for<control pos:line="17" pos:column="8">(<init><expr><name pos:line="17" pos:column="9">p<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <name><name pos:line="17" pos:column="13">a<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">parameter<pos:position pos:line="17" pos:column="25"/></name></name></expr>;<pos:position pos:line="17" pos:column="26"/></init> <condition><expr><name pos:line="17" pos:column="27">p<pos:position pos:line="17" pos:column="28"/></name></expr>;<pos:position pos:line="17" pos:column="29"/></condition> <incr><expr><name pos:line="17" pos:column="30">p<pos:position pos:line="17" pos:column="31"/></name> <operator pos:line="17" pos:column="32">=<pos:position pos:line="17" pos:column="33"/></operator> <name><name pos:line="17" pos:column="34">p<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">-&gt;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="37">next<pos:position pos:line="17" pos:column="41"/></name></name></expr></incr>)<pos:position pos:line="17" pos:column="42"/></control>
    <block pos:line="18" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="19" pos:column="7">char<pos:position pos:line="19" pos:column="11"/></name> <modifier pos:line="19" pos:column="12">*<pos:position pos:line="19" pos:column="13"/></modifier></type><name pos:line="19" pos:column="13">tmp<pos:position pos:line="19" pos:column="16"/></name></decl>;<pos:position pos:line="19" pos:column="17"/></decl_stmt>

      <if pos:line="21" pos:column="7">if<condition pos:line="21" pos:column="9">(<expr><operator pos:line="21" pos:column="10">!<pos:position pos:line="21" pos:column="11"/></operator><name><name pos:line="21" pos:column="11">p<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">-&gt;<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="14">value<pos:position pos:line="21" pos:column="19"/></name></name></expr>)<pos:position pos:line="21" pos:column="20"/></condition><then pos:line="21" pos:column="20">
	<block type="pseudo"><continue pos:line="22" pos:column="9">continue;<pos:position pos:line="22" pos:column="18"/></continue></block></then></if>

      <expr_stmt><expr><call><name pos:line="24" pos:column="7">fputc<pos:position pos:line="24" pos:column="12"/></name> <argument_list pos:line="24" pos:column="13">(<argument><expr><literal type="char" pos:line="24" pos:column="14">';'<pos:position pos:line="24" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="19">f<pos:position pos:line="24" pos:column="20"/></name></expr></argument>)<pos:position pos:line="24" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="22"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="26" pos:column="7">buffer<pos:position pos:line="26" pos:column="13"/></name><index pos:line="26" pos:column="13">[<expr><literal type="number" pos:line="26" pos:column="14">0<pos:position pos:line="26" pos:column="15"/></literal></expr>]<pos:position pos:line="26" pos:column="16"/></index></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <literal type="number" pos:line="26" pos:column="19">0<pos:position pos:line="26" pos:column="20"/></literal></expr>;<pos:position pos:line="26" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name pos:line="27" pos:column="7">tmp<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">=<pos:position pos:line="27" pos:column="12"/></operator> <call><name pos:line="27" pos:column="13">safe_strdup<pos:position pos:line="27" pos:column="24"/></name> <argument_list pos:line="27" pos:column="25">(<argument><expr><name><name pos:line="27" pos:column="26">p<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">-&gt;<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="29">value<pos:position pos:line="27" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name pos:line="28" pos:column="7">encode<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <call><name pos:line="28" pos:column="16">rfc2231_encode_string<pos:position pos:line="28" pos:column="37"/></name> <argument_list pos:line="28" pos:column="38">(<argument><expr><operator pos:line="28" pos:column="39">&amp;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="40">tmp<pos:position pos:line="28" pos:column="43"/></name></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">rfc822_cat<pos:position pos:line="29" pos:column="17"/></name> <argument_list pos:line="29" pos:column="18">(<argument><expr><name pos:line="29" pos:column="19">buffer<pos:position pos:line="29" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="27">sizeof <argument_list pos:line="29" pos:column="34">(<argument><expr><name pos:line="29" pos:column="35">buffer<pos:position pos:line="29" pos:column="41"/></name></expr></argument>)<pos:position pos:line="29" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="29" pos:column="44">tmp<pos:position pos:line="29" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="49">MimeSpecials<pos:position pos:line="29" pos:column="61"/></name></expr></argument>)<pos:position pos:line="29" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="63"/></expr_stmt>

      <comment type="block" pos:line="31" pos:column="7">/* Dirty hack to make messages readable by Outlook Express
       * for the Mac: force quotes around the boundary parameter
       * even when they aren't needed.
       */</comment>

      <if pos:line="36" pos:column="7">if <condition pos:line="36" pos:column="10">(<expr><operator pos:line="36" pos:column="11">!<pos:position pos:line="36" pos:column="12"/></operator><call><name pos:line="36" pos:column="12">ascii_strcasecmp<pos:position pos:line="36" pos:column="28"/></name> <argument_list pos:line="36" pos:column="29">(<argument><expr><name><name pos:line="36" pos:column="30">p<pos:position pos:line="36" pos:column="31"/></name><operator pos:line="36" pos:column="31">-&gt;<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="33">attribute<pos:position pos:line="36" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="44">"boundary"<pos:position pos:line="36" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="55"/></argument_list></call> <operator pos:line="36" pos:column="56">&amp;&amp;<pos:position pos:line="36" pos:column="66"/></operator> <operator pos:line="36" pos:column="59">!<pos:position pos:line="36" pos:column="60"/></operator><call><name pos:line="36" pos:column="60">strcmp<pos:position pos:line="36" pos:column="66"/></name> <argument_list pos:line="36" pos:column="67">(<argument><expr><name pos:line="36" pos:column="68">buffer<pos:position pos:line="36" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="76">tmp<pos:position pos:line="36" pos:column="79"/></name></expr></argument>)<pos:position pos:line="36" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="81"/></condition><then pos:line="36" pos:column="81">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="9">snprintf<pos:position pos:line="37" pos:column="17"/></name> <argument_list pos:line="37" pos:column="18">(<argument><expr><name pos:line="37" pos:column="19">buffer<pos:position pos:line="37" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="27">sizeof <argument_list pos:line="37" pos:column="34">(<argument><expr><name pos:line="37" pos:column="35">buffer<pos:position pos:line="37" pos:column="41"/></name></expr></argument>)<pos:position pos:line="37" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="44">"\"%s\""<pos:position pos:line="37" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="54">tmp<pos:position pos:line="37" pos:column="57"/></name></expr></argument>)<pos:position pos:line="37" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="59"/></expr_stmt></block></then></if>

      <expr_stmt><expr><call><name pos:line="39" pos:column="7">FREE<pos:position pos:line="39" pos:column="11"/></name> <argument_list pos:line="39" pos:column="12">(<argument><expr><operator pos:line="39" pos:column="13">&amp;<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="14">tmp<pos:position pos:line="39" pos:column="17"/></name></expr></argument>)<pos:position pos:line="39" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="19"/></expr_stmt>

      <expr_stmt><expr><name pos:line="41" pos:column="7">tmplen<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <call><name pos:line="41" pos:column="16">mutt_strlen<pos:position pos:line="41" pos:column="27"/></name> <argument_list pos:line="41" pos:column="28">(<argument><expr><name pos:line="41" pos:column="29">buffer<pos:position pos:line="41" pos:column="35"/></name></expr></argument>)<pos:position pos:line="41" pos:column="36"/></argument_list></call> <operator pos:line="41" pos:column="37">+<pos:position pos:line="41" pos:column="38"/></operator> <call><name pos:line="41" pos:column="39">mutt_strlen<pos:position pos:line="41" pos:column="50"/></name> <argument_list pos:line="41" pos:column="51">(<argument><expr><name><name pos:line="41" pos:column="52">p<pos:position pos:line="41" pos:column="53"/></name><operator pos:line="41" pos:column="53">-&gt;<pos:position pos:line="41" pos:column="58"/></operator><name pos:line="41" pos:column="55">attribute<pos:position pos:line="41" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="65"/></argument_list></call> <operator pos:line="41" pos:column="66">+<pos:position pos:line="41" pos:column="67"/></operator> <literal type="number" pos:line="41" pos:column="68">1<pos:position pos:line="41" pos:column="69"/></literal></expr>;<pos:position pos:line="41" pos:column="70"/></expr_stmt>

      <if pos:line="43" pos:column="7">if <condition pos:line="43" pos:column="10">(<expr><name pos:line="43" pos:column="11">len<pos:position pos:line="43" pos:column="14"/></name> <operator pos:line="43" pos:column="15">+<pos:position pos:line="43" pos:column="16"/></operator> <name pos:line="43" pos:column="17">tmplen<pos:position pos:line="43" pos:column="23"/></name> <operator pos:line="43" pos:column="24">+<pos:position pos:line="43" pos:column="25"/></operator> <literal type="number" pos:line="43" pos:column="26">2<pos:position pos:line="43" pos:column="27"/></literal> <operator pos:line="43" pos:column="28">&gt;<pos:position pos:line="43" pos:column="32"/></operator> <literal type="number" pos:line="43" pos:column="30">76<pos:position pos:line="43" pos:column="32"/></literal></expr>)<pos:position pos:line="43" pos:column="33"/></condition><then pos:line="43" pos:column="33">
      <block pos:line="44" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="45" pos:column="9">fputs<pos:position pos:line="45" pos:column="14"/></name> <argument_list pos:line="45" pos:column="15">(<argument><expr><literal type="string" pos:line="45" pos:column="16">"\n\t"<pos:position pos:line="45" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="24">f<pos:position pos:line="45" pos:column="25"/></name></expr></argument>)<pos:position pos:line="45" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name pos:line="46" pos:column="9">len<pos:position pos:line="46" pos:column="12"/></name> <operator pos:line="46" pos:column="13">=<pos:position pos:line="46" pos:column="14"/></operator> <name pos:line="46" pos:column="15">tmplen<pos:position pos:line="46" pos:column="21"/></name> <operator pos:line="46" pos:column="22">+<pos:position pos:line="46" pos:column="23"/></operator> <literal type="number" pos:line="46" pos:column="24">8<pos:position pos:line="46" pos:column="25"/></literal></expr>;<pos:position pos:line="46" pos:column="26"/></expr_stmt>
      }<pos:position pos:line="47" pos:column="8"/></block></then>
      <else pos:line="48" pos:column="7">else
      <block pos:line="49" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="50" pos:column="9">fputc<pos:position pos:line="50" pos:column="14"/></name> <argument_list pos:line="50" pos:column="15">(<argument><expr><literal type="char" pos:line="50" pos:column="16">' '<pos:position pos:line="50" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="21">f<pos:position pos:line="50" pos:column="22"/></name></expr></argument>)<pos:position pos:line="50" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name pos:line="51" pos:column="9">len<pos:position pos:line="51" pos:column="12"/></name> <operator pos:line="51" pos:column="13">+=<pos:position pos:line="51" pos:column="15"/></operator> <name pos:line="51" pos:column="16">tmplen<pos:position pos:line="51" pos:column="22"/></name> <operator pos:line="51" pos:column="23">+<pos:position pos:line="51" pos:column="24"/></operator> <literal type="number" pos:line="51" pos:column="25">1<pos:position pos:line="51" pos:column="26"/></literal></expr>;<pos:position pos:line="51" pos:column="27"/></expr_stmt>
      }<pos:position pos:line="52" pos:column="8"/></block></else></if>

      <expr_stmt><expr><call><name pos:line="54" pos:column="7">fprintf<pos:position pos:line="54" pos:column="14"/></name> <argument_list pos:line="54" pos:column="15">(<argument><expr><name pos:line="54" pos:column="16">f<pos:position pos:line="54" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="19">"%s%s=%s"<pos:position pos:line="54" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="30">p<pos:position pos:line="54" pos:column="31"/></name><operator pos:line="54" pos:column="31">-&gt;<pos:position pos:line="54" pos:column="36"/></operator><name pos:line="54" pos:column="33">attribute<pos:position pos:line="54" pos:column="42"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="54" pos:column="44">encode<pos:position pos:line="54" pos:column="50"/></name></expr> ?<pos:position pos:line="54" pos:column="52"/></condition><then pos:line="54" pos:column="52"> <expr><literal type="string" pos:line="54" pos:column="53">"*"<pos:position pos:line="54" pos:column="56"/></literal></expr> <pos:position pos:line="54" pos:column="57"/></then><else pos:line="54" pos:column="57">: <expr><literal type="string" pos:line="54" pos:column="59">""<pos:position pos:line="54" pos:column="61"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="54" pos:column="63">buffer<pos:position pos:line="54" pos:column="69"/></name></expr></argument>)<pos:position pos:line="54" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="71"/></expr_stmt>

    }<pos:position pos:line="56" pos:column="6"/></block></for>
  }<pos:position pos:line="57" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="59" pos:column="3">fputc<pos:position pos:line="59" pos:column="8"/></name> <argument_list pos:line="59" pos:column="9">(<argument><expr><literal type="char" pos:line="59" pos:column="10">'\n'<pos:position pos:line="59" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="16">f<pos:position pos:line="59" pos:column="17"/></name></expr></argument>)<pos:position pos:line="59" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="19"/></expr_stmt>

  <if pos:line="61" pos:column="3">if <condition pos:line="61" pos:column="6">(<expr><name><name pos:line="61" pos:column="7">a<pos:position pos:line="61" pos:column="8"/></name><operator pos:line="61" pos:column="8">-&gt;<pos:position pos:line="61" pos:column="13"/></operator><name pos:line="61" pos:column="10">description<pos:position pos:line="61" pos:column="21"/></name></name></expr>)<pos:position pos:line="61" pos:column="22"/></condition><then pos:line="61" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="5">fprintf<pos:position pos:line="62" pos:column="12"/></name><argument_list pos:line="62" pos:column="12">(<argument><expr><name pos:line="62" pos:column="13">f<pos:position pos:line="62" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="16">"Content-Description: %s\n"<pos:position pos:line="62" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="45">a<pos:position pos:line="62" pos:column="46"/></name><operator pos:line="62" pos:column="46">-&gt;<pos:position pos:line="62" pos:column="51"/></operator><name pos:line="62" pos:column="48">description<pos:position pos:line="62" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="61"/></expr_stmt></block></then></if>

  <if pos:line="64" pos:column="3">if <condition pos:line="64" pos:column="6">(<expr><name><name pos:line="64" pos:column="7">a<pos:position pos:line="64" pos:column="8"/></name><operator pos:line="64" pos:column="8">-&gt;<pos:position pos:line="64" pos:column="13"/></operator><name pos:line="64" pos:column="10">disposition<pos:position pos:line="64" pos:column="21"/></name></name> <operator pos:line="64" pos:column="22">!=<pos:position pos:line="64" pos:column="24"/></operator> <name pos:line="64" pos:column="25">DISPNONE<pos:position pos:line="64" pos:column="33"/></name></expr>)<pos:position pos:line="64" pos:column="34"/></condition><then pos:line="64" pos:column="34">
  <block pos:line="65" pos:column="3">{
    <decl_stmt><decl><type><specifier pos:line="66" pos:column="5">const<pos:position pos:line="66" pos:column="10"/></specifier> <name pos:line="66" pos:column="11">char<pos:position pos:line="66" pos:column="15"/></name> <modifier pos:line="66" pos:column="16">*<pos:position pos:line="66" pos:column="17"/></modifier></type><name><name pos:line="66" pos:column="17">dispstr<pos:position pos:line="66" pos:column="24"/></name><index pos:line="66" pos:column="24">[]<pos:position pos:line="66" pos:column="26"/></index></name> <init pos:line="66" pos:column="27">= <expr><block pos:line="66" pos:column="29">{
      <expr><literal type="string" pos:line="67" pos:column="7">"inline"<pos:position pos:line="67" pos:column="15"/></literal></expr>,
      <expr><literal type="string" pos:line="68" pos:column="7">"attachment"<pos:position pos:line="68" pos:column="19"/></literal></expr>,
      <expr><literal type="string" pos:line="69" pos:column="7">"form-data"<pos:position pos:line="69" pos:column="18"/></literal></expr>
    }<pos:position pos:line="70" pos:column="6"/></block></expr></init></decl>;<pos:position pos:line="70" pos:column="7"/></decl_stmt>

    <if pos:line="72" pos:column="5">if <condition pos:line="72" pos:column="8">(<expr><name><name pos:line="72" pos:column="9">a<pos:position pos:line="72" pos:column="10"/></name><operator pos:line="72" pos:column="10">-&gt;<pos:position pos:line="72" pos:column="15"/></operator><name pos:line="72" pos:column="12">disposition<pos:position pos:line="72" pos:column="23"/></name></name> <operator pos:line="72" pos:column="24">&lt;<pos:position pos:line="72" pos:column="28"/></operator> <sizeof pos:line="72" pos:column="26">sizeof<argument_list pos:line="72" pos:column="32">(<argument><expr><name pos:line="72" pos:column="33">dispstr<pos:position pos:line="72" pos:column="40"/></name></expr></argument>)<pos:position pos:line="72" pos:column="41"/></argument_list></sizeof><operator pos:line="72" pos:column="41">/<pos:position pos:line="72" pos:column="42"/></operator><sizeof pos:line="72" pos:column="42">sizeof<argument_list pos:line="72" pos:column="48">(<argument><expr><name pos:line="72" pos:column="49">char<pos:position pos:line="72" pos:column="53"/></name><operator pos:line="72" pos:column="53">*<pos:position pos:line="72" pos:column="54"/></operator></expr></argument>)<pos:position pos:line="72" pos:column="55"/></argument_list></sizeof></expr>)<pos:position pos:line="72" pos:column="56"/></condition><then pos:line="72" pos:column="56">
    <block pos:line="73" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="74" pos:column="7">fprintf<pos:position pos:line="74" pos:column="14"/></name> <argument_list pos:line="74" pos:column="15">(<argument><expr><name pos:line="74" pos:column="16">f<pos:position pos:line="74" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="19">"Content-Disposition: %s"<pos:position pos:line="74" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="46">dispstr<pos:position pos:line="74" pos:column="53"/></name><index pos:line="74" pos:column="53">[<expr><name><name pos:line="74" pos:column="54">a<pos:position pos:line="74" pos:column="55"/></name><operator pos:line="74" pos:column="55">-&gt;<pos:position pos:line="74" pos:column="60"/></operator><name pos:line="74" pos:column="57">disposition<pos:position pos:line="74" pos:column="68"/></name></name></expr>]<pos:position pos:line="74" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="74" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="71"/></expr_stmt>

      <if pos:line="76" pos:column="7">if <condition pos:line="76" pos:column="10">(<expr><name><name pos:line="76" pos:column="11">a<pos:position pos:line="76" pos:column="12"/></name><operator pos:line="76" pos:column="12">-&gt;<pos:position pos:line="76" pos:column="17"/></operator><name pos:line="76" pos:column="14">use_disp<pos:position pos:line="76" pos:column="22"/></name></name></expr>)<pos:position pos:line="76" pos:column="23"/></condition><then pos:line="76" pos:column="23">
      <block pos:line="77" pos:column="7">{
	<if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><operator pos:line="78" pos:column="13">!<pos:position pos:line="78" pos:column="14"/></operator><operator pos:line="78" pos:column="14">(<pos:position pos:line="78" pos:column="15"/></operator><name pos:line="78" pos:column="15">fn<pos:position pos:line="78" pos:column="17"/></name> <operator pos:line="78" pos:column="18">=<pos:position pos:line="78" pos:column="19"/></operator> <name><name pos:line="78" pos:column="20">a<pos:position pos:line="78" pos:column="21"/></name><operator pos:line="78" pos:column="21">-&gt;<pos:position pos:line="78" pos:column="26"/></operator><name pos:line="78" pos:column="23">d_filename<pos:position pos:line="78" pos:column="33"/></name></name><operator pos:line="78" pos:column="33">)<pos:position pos:line="78" pos:column="34"/></operator></expr>)<pos:position pos:line="78" pos:column="35"/></condition><then pos:line="78" pos:column="35">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="79" pos:column="11">fn<pos:position pos:line="79" pos:column="13"/></name> <operator pos:line="79" pos:column="14">=<pos:position pos:line="79" pos:column="15"/></operator> <name><name pos:line="79" pos:column="16">a<pos:position pos:line="79" pos:column="17"/></name><operator pos:line="79" pos:column="17">-&gt;<pos:position pos:line="79" pos:column="22"/></operator><name pos:line="79" pos:column="19">filename<pos:position pos:line="79" pos:column="27"/></name></name></expr>;<pos:position pos:line="79" pos:column="28"/></expr_stmt></block></then></if>

	<if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><name pos:line="81" pos:column="13">fn<pos:position pos:line="81" pos:column="15"/></name></expr>)<pos:position pos:line="81" pos:column="16"/></condition><then pos:line="81" pos:column="16">
	<block pos:line="82" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="83" pos:column="11">char<pos:position pos:line="83" pos:column="15"/></name> <modifier pos:line="83" pos:column="16">*<pos:position pos:line="83" pos:column="17"/></modifier></type><name pos:line="83" pos:column="17">tmp<pos:position pos:line="83" pos:column="20"/></name></decl>;<pos:position pos:line="83" pos:column="21"/></decl_stmt>

	  <comment type="block" pos:line="85" pos:column="11">/* Strip off the leading path... */</comment>
	  <if pos:line="86" pos:column="11">if <condition pos:line="86" pos:column="14">(<expr><operator pos:line="86" pos:column="15">(<pos:position pos:line="86" pos:column="16"/></operator><name pos:line="86" pos:column="16">t<pos:position pos:line="86" pos:column="17"/></name> <operator pos:line="86" pos:column="18">=<pos:position pos:line="86" pos:column="19"/></operator> <call><name pos:line="86" pos:column="20">strrchr<pos:position pos:line="86" pos:column="27"/></name> <argument_list pos:line="86" pos:column="28">(<argument><expr><name pos:line="86" pos:column="29">fn<pos:position pos:line="86" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="86" pos:column="33">'/'<pos:position pos:line="86" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="37"/></argument_list></call><operator pos:line="86" pos:column="37">)<pos:position pos:line="86" pos:column="38"/></operator></expr>)<pos:position pos:line="86" pos:column="39"/></condition><then pos:line="86" pos:column="39">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="87" pos:column="13">t<pos:position pos:line="87" pos:column="14"/></name><operator pos:line="87" pos:column="14">++<pos:position pos:line="87" pos:column="16"/></operator></expr>;<pos:position pos:line="87" pos:column="17"/></expr_stmt></block></then>
	  <else pos:line="88" pos:column="11">else
	    <block type="pseudo"><expr_stmt><expr><name pos:line="89" pos:column="13">t<pos:position pos:line="89" pos:column="14"/></name> <operator pos:line="89" pos:column="15">=<pos:position pos:line="89" pos:column="16"/></operator> <name pos:line="89" pos:column="17">fn<pos:position pos:line="89" pos:column="19"/></name></expr>;<pos:position pos:line="89" pos:column="20"/></expr_stmt></block></else></if>

	  <expr_stmt><expr><name><name pos:line="91" pos:column="11">buffer<pos:position pos:line="91" pos:column="17"/></name><index pos:line="91" pos:column="17">[<expr><literal type="number" pos:line="91" pos:column="18">0<pos:position pos:line="91" pos:column="19"/></literal></expr>]<pos:position pos:line="91" pos:column="20"/></index></name> <operator pos:line="91" pos:column="21">=<pos:position pos:line="91" pos:column="22"/></operator> <literal type="number" pos:line="91" pos:column="23">0<pos:position pos:line="91" pos:column="24"/></literal></expr>;<pos:position pos:line="91" pos:column="25"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="92" pos:column="11">tmp<pos:position pos:line="92" pos:column="14"/></name> <operator pos:line="92" pos:column="15">=<pos:position pos:line="92" pos:column="16"/></operator> <call><name pos:line="92" pos:column="17">safe_strdup<pos:position pos:line="92" pos:column="28"/></name> <argument_list pos:line="92" pos:column="29">(<argument><expr><name pos:line="92" pos:column="30">t<pos:position pos:line="92" pos:column="31"/></name></expr></argument>)<pos:position pos:line="92" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="33"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="93" pos:column="11">encode<pos:position pos:line="93" pos:column="17"/></name> <operator pos:line="93" pos:column="18">=<pos:position pos:line="93" pos:column="19"/></operator> <call><name pos:line="93" pos:column="20">rfc2231_encode_string<pos:position pos:line="93" pos:column="41"/></name> <argument_list pos:line="93" pos:column="42">(<argument><expr><operator pos:line="93" pos:column="43">&amp;<pos:position pos:line="93" pos:column="48"/></operator><name pos:line="93" pos:column="44">tmp<pos:position pos:line="93" pos:column="47"/></name></expr></argument>)<pos:position pos:line="93" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="49"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="94" pos:column="11">rfc822_cat<pos:position pos:line="94" pos:column="21"/></name> <argument_list pos:line="94" pos:column="22">(<argument><expr><name pos:line="94" pos:column="23">buffer<pos:position pos:line="94" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="94" pos:column="31">sizeof <argument_list pos:line="94" pos:column="38">(<argument><expr><name pos:line="94" pos:column="39">buffer<pos:position pos:line="94" pos:column="45"/></name></expr></argument>)<pos:position pos:line="94" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="94" pos:column="48">tmp<pos:position pos:line="94" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="53">MimeSpecials<pos:position pos:line="94" pos:column="65"/></name></expr></argument>)<pos:position pos:line="94" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="67"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="95" pos:column="11">FREE<pos:position pos:line="95" pos:column="15"/></name> <argument_list pos:line="95" pos:column="16">(<argument><expr><operator pos:line="95" pos:column="17">&amp;<pos:position pos:line="95" pos:column="22"/></operator><name pos:line="95" pos:column="18">tmp<pos:position pos:line="95" pos:column="21"/></name></expr></argument>)<pos:position pos:line="95" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="23"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="96" pos:column="11">fprintf<pos:position pos:line="96" pos:column="18"/></name> <argument_list pos:line="96" pos:column="19">(<argument><expr><name pos:line="96" pos:column="20">f<pos:position pos:line="96" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="23">"; filename%s=%s"<pos:position pos:line="96" pos:column="40"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="96" pos:column="42">encode<pos:position pos:line="96" pos:column="48"/></name></expr> ?<pos:position pos:line="96" pos:column="50"/></condition><then pos:line="96" pos:column="50"> <expr><literal type="string" pos:line="96" pos:column="51">"*"<pos:position pos:line="96" pos:column="54"/></literal></expr> <pos:position pos:line="96" pos:column="55"/></then><else pos:line="96" pos:column="55">: <expr><literal type="string" pos:line="96" pos:column="57">""<pos:position pos:line="96" pos:column="59"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="96" pos:column="61">buffer<pos:position pos:line="96" pos:column="67"/></name></expr></argument>)<pos:position pos:line="96" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="69"/></expr_stmt>
	}<pos:position pos:line="97" pos:column="10"/></block></then></if>
      }<pos:position pos:line="98" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="100" pos:column="7">fputc<pos:position pos:line="100" pos:column="12"/></name> <argument_list pos:line="100" pos:column="13">(<argument><expr><literal type="char" pos:line="100" pos:column="14">'\n'<pos:position pos:line="100" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="100" pos:column="20">f<pos:position pos:line="100" pos:column="21"/></name></expr></argument>)<pos:position pos:line="100" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="101" pos:column="6"/></block></then>
    <else pos:line="102" pos:column="5">else
    <block pos:line="103" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="104" pos:column="7">dprint<pos:position pos:line="104" pos:column="13"/></name><argument_list pos:line="104" pos:column="13">(<argument><expr><literal type="number" pos:line="104" pos:column="14">1<pos:position pos:line="104" pos:column="15"/></literal></expr></argument>, <argument><expr><operator pos:line="104" pos:column="17">(<pos:position pos:line="104" pos:column="18"/></operator><name pos:line="104" pos:column="18">debugfile<pos:position pos:line="104" pos:column="27"/></name><operator pos:line="104" pos:column="27">,<pos:position pos:line="104" pos:column="28"/></operator> <literal type="string" pos:line="104" pos:column="29">"ERROR: invalid content-disposition %d\n"<pos:position pos:line="104" pos:column="70"/></literal><operator pos:line="104" pos:column="70">,<pos:position pos:line="104" pos:column="71"/></operator> <name><name pos:line="104" pos:column="72">a<pos:position pos:line="104" pos:column="73"/></name><operator pos:line="104" pos:column="73">-&gt;<pos:position pos:line="104" pos:column="78"/></operator><name pos:line="104" pos:column="75">disposition<pos:position pos:line="104" pos:column="86"/></name></name><operator pos:line="104" pos:column="86">)<pos:position pos:line="104" pos:column="87"/></operator></expr></argument>)<pos:position pos:line="104" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="89"/></expr_stmt>
    }<pos:position pos:line="105" pos:column="6"/></block></else></if>
  }<pos:position pos:line="106" pos:column="4"/></block></then></if>

  <if pos:line="108" pos:column="3">if <condition pos:line="108" pos:column="6">(<expr><name><name pos:line="108" pos:column="7">a<pos:position pos:line="108" pos:column="8"/></name><operator pos:line="108" pos:column="8">-&gt;<pos:position pos:line="108" pos:column="13"/></operator><name pos:line="108" pos:column="10">encoding<pos:position pos:line="108" pos:column="18"/></name></name> <operator pos:line="108" pos:column="19">!=<pos:position pos:line="108" pos:column="21"/></operator> <name pos:line="108" pos:column="22">ENC7BIT<pos:position pos:line="108" pos:column="29"/></name></expr>)<pos:position pos:line="108" pos:column="30"/></condition><then pos:line="108" pos:column="30">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="109" pos:column="5">fprintf<pos:position pos:line="109" pos:column="12"/></name><argument_list pos:line="109" pos:column="12">(<argument><expr><name pos:line="109" pos:column="13">f<pos:position pos:line="109" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="16">"Content-Transfer-Encoding: %s\n"<pos:position pos:line="109" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="109" pos:column="51">ENCODING<pos:position pos:line="109" pos:column="59"/></name> <argument_list pos:line="109" pos:column="60">(<argument><expr><name><name pos:line="109" pos:column="61">a<pos:position pos:line="109" pos:column="62"/></name><operator pos:line="109" pos:column="62">-&gt;<pos:position pos:line="109" pos:column="67"/></operator><name pos:line="109" pos:column="64">encoding<pos:position pos:line="109" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="109" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="75"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="111" pos:column="3">/* Do NOT add the terminator here!!! */</comment>
  <return pos:line="112" pos:column="3">return <expr><operator pos:line="112" pos:column="10">(<pos:position pos:line="112" pos:column="11"/></operator><ternary><condition><expr><call><name pos:line="112" pos:column="11">ferror<pos:position pos:line="112" pos:column="17"/></name> <argument_list pos:line="112" pos:column="18">(<argument><expr><name pos:line="112" pos:column="19">f<pos:position pos:line="112" pos:column="20"/></name></expr></argument>)<pos:position pos:line="112" pos:column="21"/></argument_list></call></expr> ?<pos:position pos:line="112" pos:column="23"/></condition><then pos:line="112" pos:column="23"> <expr><operator pos:line="112" pos:column="24">-<pos:position pos:line="112" pos:column="25"/></operator><literal type="number" pos:line="112" pos:column="25">1<pos:position pos:line="112" pos:column="26"/></literal></expr> <pos:position pos:line="112" pos:column="27"/></then><else pos:line="112" pos:column="27">: <expr><literal type="number" pos:line="112" pos:column="29">0<pos:position pos:line="112" pos:column="30"/></literal></expr></else></ternary><operator pos:line="112" pos:column="30">)<pos:position pos:line="112" pos:column="31"/></operator></expr>;<pos:position pos:line="112" pos:column="32"/></return>
}<pos:position pos:line="113" pos:column="2"/></block></function></unit>

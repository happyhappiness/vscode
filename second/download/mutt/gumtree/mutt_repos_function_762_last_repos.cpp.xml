<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_762_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">unsigned<pos:position pos:line="1" pos:column="22"/></name> <name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type>
<name pos:line="2" pos:column="1">parse_dn_part<pos:position pos:line="2" pos:column="14"/></name> <parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name><name pos:line="2" pos:column="16">struct<pos:position pos:line="2" pos:column="22"/></name> <name pos:line="2" pos:column="23">dn_array_s<pos:position pos:line="2" pos:column="33"/></name></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">array<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name pos:line="2" pos:column="48">unsigned<pos:position pos:line="2" pos:column="56"/></name> <name pos:line="2" pos:column="57">char<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">string<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">char<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">s<pos:position pos:line="4" pos:column="25"/></name></decl>, <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="28">s1<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">n<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">char<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">p<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* parse attributeType */</comment>
  <for pos:line="9" pos:column="3">for <control pos:line="9" pos:column="7">(<init><expr><name pos:line="9" pos:column="8">s<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <name pos:line="9" pos:column="12">string<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">+<pos:position pos:line="9" pos:column="19"/></operator><literal type="number" pos:line="9" pos:column="19">1<pos:position pos:line="9" pos:column="20"/></literal></expr>;<pos:position pos:line="9" pos:column="21"/></init> <condition><expr><operator pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">s<pos:position pos:line="9" pos:column="24"/></name> <operator pos:line="9" pos:column="25">&amp;&amp;<pos:position pos:line="9" pos:column="35"/></operator> <operator pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">s<pos:position pos:line="9" pos:column="30"/></name> <operator pos:line="9" pos:column="31">!=<pos:position pos:line="9" pos:column="33"/></operator> <literal type="char" pos:line="9" pos:column="34">'='<pos:position pos:line="9" pos:column="37"/></literal></expr>;<pos:position pos:line="9" pos:column="38"/></condition> <incr><expr><name pos:line="9" pos:column="39">s<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">++<pos:position pos:line="9" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="43"/></control>
    <block type="pseudo"><empty_stmt pos:line="10" pos:column="5">;<pos:position pos:line="10" pos:column="6"/></empty_stmt></block></for>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">!<pos:position pos:line="11" pos:column="8"/></operator><operator pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></operator><name pos:line="11" pos:column="9">s<pos:position pos:line="11" pos:column="10"/></name></expr>)<pos:position pos:line="11" pos:column="11"/></condition><then pos:line="11" pos:column="11">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">NULL<pos:position pos:line="12" pos:column="16"/></name></expr>;<pos:position pos:line="12" pos:column="17"/></return></block></then></if> <comment type="block" pos:line="12" pos:column="18">/* error */</comment>
  <expr_stmt><expr><name pos:line="13" pos:column="3">n<pos:position pos:line="13" pos:column="4"/></name> <operator pos:line="13" pos:column="5">=<pos:position pos:line="13" pos:column="6"/></operator> <name pos:line="13" pos:column="7">s<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">-<pos:position pos:line="13" pos:column="10"/></operator> <name pos:line="13" pos:column="11">string<pos:position pos:line="13" pos:column="17"/></name></expr>;<pos:position pos:line="13" pos:column="18"/></expr_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><operator pos:line="14" pos:column="7">!<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">n<pos:position pos:line="14" pos:column="9"/></name></expr>)<pos:position pos:line="14" pos:column="10"/></condition><then pos:line="14" pos:column="10">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">NULL<pos:position pos:line="15" pos:column="16"/></name></expr>;<pos:position pos:line="15" pos:column="17"/></return></block></then></if> <comment type="block" pos:line="15" pos:column="18">/* empty key */</comment>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">array<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">-&gt;<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="10">key<pos:position pos:line="16" pos:column="13"/></name></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <call><name pos:line="16" pos:column="16">safe_malloc<pos:position pos:line="16" pos:column="27"/></name> <argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">n<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">+<pos:position pos:line="16" pos:column="31"/></operator><literal type="number" pos:line="16" pos:column="31">1<pos:position pos:line="16" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name pos:line="17" pos:column="3">p<pos:position pos:line="17" pos:column="4"/></name> <operator pos:line="17" pos:column="5">=<pos:position pos:line="17" pos:column="6"/></operator> <operator pos:line="17" pos:column="7">(<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">unsigned<pos:position pos:line="17" pos:column="16"/></name> <name pos:line="17" pos:column="17">char<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">*<pos:position pos:line="17" pos:column="23"/></operator><operator pos:line="17" pos:column="23">)<pos:position pos:line="17" pos:column="24"/></operator><name><name pos:line="17" pos:column="24">array<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">-&gt;<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="31">key<pos:position pos:line="17" pos:column="34"/></name></name></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">memcpy<pos:position pos:line="18" pos:column="9"/></name> <argument_list pos:line="18" pos:column="10">(<argument><expr><name pos:line="18" pos:column="11">p<pos:position pos:line="18" pos:column="12"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="14">string<pos:position pos:line="18" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="22">n<pos:position pos:line="18" pos:column="23"/></name></expr></argument>)<pos:position pos:line="18" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt> <comment type="block" pos:line="18" pos:column="26">/* fixme: trim trailing spaces */</comment>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">p<pos:position pos:line="19" pos:column="4"/></name><index pos:line="19" pos:column="4">[<expr><name pos:line="19" pos:column="5">n<pos:position pos:line="19" pos:column="6"/></name></expr>]<pos:position pos:line="19" pos:column="7"/></index></name> <operator pos:line="19" pos:column="8">=<pos:position pos:line="19" pos:column="9"/></operator> <literal type="number" pos:line="19" pos:column="10">0<pos:position pos:line="19" pos:column="11"/></literal></expr>;<pos:position pos:line="19" pos:column="12"/></expr_stmt>
  <expr_stmt><expr><name pos:line="20" pos:column="3">string<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator> <name pos:line="20" pos:column="12">s<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">+<pos:position pos:line="20" pos:column="15"/></operator> <literal type="number" pos:line="20" pos:column="16">1<pos:position pos:line="20" pos:column="17"/></literal></expr>;<pos:position pos:line="20" pos:column="18"/></expr_stmt>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><operator pos:line="22" pos:column="7">*<pos:position pos:line="22" pos:column="8"/></operator><name pos:line="22" pos:column="8">string<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">==<pos:position pos:line="22" pos:column="17"/></operator> <literal type="char" pos:line="22" pos:column="18">'#'<pos:position pos:line="22" pos:column="21"/></literal></expr>)<pos:position pos:line="22" pos:column="22"/></condition><then pos:line="22" pos:column="22">
    <block pos:line="23" pos:column="5">{ <comment type="block" pos:line="23" pos:column="7">/* hexstring */</comment>
      <expr_stmt><expr><name pos:line="24" pos:column="7">string<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">++<pos:position pos:line="24" pos:column="15"/></operator></expr>;<pos:position pos:line="24" pos:column="16"/></expr_stmt>
      <for pos:line="25" pos:column="7">for <control pos:line="25" pos:column="11">(<init><expr><name pos:line="25" pos:column="12">s<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">=<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">string<pos:position pos:line="25" pos:column="20"/></name></expr>;<pos:position pos:line="25" pos:column="21"/></init> <condition><expr><call><name pos:line="25" pos:column="22">hexdigitp<pos:position pos:line="25" pos:column="31"/></name> <argument_list pos:line="25" pos:column="32">(<argument><expr><name pos:line="25" pos:column="33">s<pos:position pos:line="25" pos:column="34"/></name></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="36"/></condition> <incr><expr><name pos:line="25" pos:column="37">s<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">++<pos:position pos:line="25" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="41"/></control>
        <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="9">s<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">++<pos:position pos:line="26" pos:column="12"/></operator></expr>;<pos:position pos:line="26" pos:column="13"/></expr_stmt></block></for>
      <expr_stmt><expr><name pos:line="27" pos:column="7">n<pos:position pos:line="27" pos:column="8"/></name> <operator pos:line="27" pos:column="9">=<pos:position pos:line="27" pos:column="10"/></operator> <name pos:line="27" pos:column="11">s<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">-<pos:position pos:line="27" pos:column="14"/></operator> <name pos:line="27" pos:column="15">string<pos:position pos:line="27" pos:column="21"/></name></expr>;<pos:position pos:line="27" pos:column="22"/></expr_stmt>
      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><operator pos:line="28" pos:column="11">!<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="12">n<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">||<pos:position pos:line="28" pos:column="16"/></operator> <operator pos:line="28" pos:column="17">(<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="18">n<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">&amp;<pos:position pos:line="28" pos:column="25"/></operator> <literal type="number" pos:line="28" pos:column="22">1<pos:position pos:line="28" pos:column="23"/></literal><operator pos:line="28" pos:column="23">)<pos:position pos:line="28" pos:column="24"/></operator></expr>)<pos:position pos:line="28" pos:column="25"/></condition><then pos:line="28" pos:column="25">
        <block type="pseudo"><return pos:line="29" pos:column="9">return <expr><name pos:line="29" pos:column="16">NULL<pos:position pos:line="29" pos:column="20"/></name></expr>;<pos:position pos:line="29" pos:column="21"/></return></block></then></if> <comment type="block" pos:line="29" pos:column="22">/* empty or odd number of digits */</comment>
      <expr_stmt><expr><name pos:line="30" pos:column="7">n<pos:position pos:line="30" pos:column="8"/></name> <operator pos:line="30" pos:column="9">/=<pos:position pos:line="30" pos:column="11"/></operator> <literal type="number" pos:line="30" pos:column="12">2<pos:position pos:line="30" pos:column="13"/></literal></expr>;<pos:position pos:line="30" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><name pos:line="31" pos:column="7">p<pos:position pos:line="31" pos:column="8"/></name> <operator pos:line="31" pos:column="9">=<pos:position pos:line="31" pos:column="10"/></operator> <call><name pos:line="31" pos:column="11">safe_malloc<pos:position pos:line="31" pos:column="22"/></name> <argument_list pos:line="31" pos:column="23">(<argument><expr><name pos:line="31" pos:column="24">n<pos:position pos:line="31" pos:column="25"/></name><operator pos:line="31" pos:column="25">+<pos:position pos:line="31" pos:column="26"/></operator><literal type="number" pos:line="31" pos:column="26">1<pos:position pos:line="31" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="32" pos:column="7">array<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">-&gt;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="14">value<pos:position pos:line="32" pos:column="19"/></name></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <operator pos:line="32" pos:column="22">(<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="23">char<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">*<pos:position pos:line="32" pos:column="28"/></operator><operator pos:line="32" pos:column="28">)<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="29">p<pos:position pos:line="32" pos:column="30"/></name></expr>;<pos:position pos:line="32" pos:column="31"/></expr_stmt>
      <for pos:line="33" pos:column="7">for <control pos:line="33" pos:column="11">(<init><expr><name pos:line="33" pos:column="12">s1<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">string<pos:position pos:line="33" pos:column="21"/></name></expr>;<pos:position pos:line="33" pos:column="22"/></init> <condition><expr><name pos:line="33" pos:column="23">n<pos:position pos:line="33" pos:column="24"/></name></expr>;<pos:position pos:line="33" pos:column="25"/></condition> <incr><expr><name pos:line="33" pos:column="26">s1<pos:position pos:line="33" pos:column="28"/></name> <operator pos:line="33" pos:column="29">+=<pos:position pos:line="33" pos:column="31"/></operator> <literal type="number" pos:line="33" pos:column="32">2<pos:position pos:line="33" pos:column="33"/></literal></expr><operator pos:line="33" pos:column="33">,<pos:position pos:line="33" pos:column="34"/></operator> <expr><name pos:line="33" pos:column="35">n<pos:position pos:line="33" pos:column="36"/></name><operator pos:line="33" pos:column="36">--<pos:position pos:line="33" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="39"/></control>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="34" pos:column="9">*<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">p<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">++<pos:position pos:line="34" pos:column="13"/></operator> <operator pos:line="34" pos:column="14">=<pos:position pos:line="34" pos:column="15"/></operator> <call><name pos:line="34" pos:column="16">xtoi_2<pos:position pos:line="34" pos:column="22"/></name> <argument_list pos:line="34" pos:column="23">(<argument><expr><name pos:line="34" pos:column="24">s1<pos:position pos:line="34" pos:column="26"/></name></expr></argument>)<pos:position pos:line="34" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="28"/></expr_stmt></block></for>
      <expr_stmt><expr><operator pos:line="35" pos:column="7">*<pos:position pos:line="35" pos:column="8"/></operator><name pos:line="35" pos:column="8">p<pos:position pos:line="35" pos:column="9"/></name> <operator pos:line="35" pos:column="10">=<pos:position pos:line="35" pos:column="11"/></operator> <literal type="number" pos:line="35" pos:column="12">0<pos:position pos:line="35" pos:column="13"/></literal></expr>;<pos:position pos:line="35" pos:column="14"/></expr_stmt>
   }<pos:position pos:line="36" pos:column="5"/></block></then>
  <else pos:line="37" pos:column="3">else
    <block pos:line="38" pos:column="5">{ <comment type="block" pos:line="38" pos:column="7">/* regular v3 quoted string */</comment>
      <for pos:line="39" pos:column="7">for <control pos:line="39" pos:column="11">(<init><expr><name pos:line="39" pos:column="12">n<pos:position pos:line="39" pos:column="13"/></name><operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator><literal type="number" pos:line="39" pos:column="14">0<pos:position pos:line="39" pos:column="15"/></literal></expr><operator pos:line="39" pos:column="15">,<pos:position pos:line="39" pos:column="16"/></operator> <expr><name pos:line="39" pos:column="17">s<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">=<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="19">string<pos:position pos:line="39" pos:column="25"/></name></expr>;<pos:position pos:line="39" pos:column="26"/></init> <condition><expr><operator pos:line="39" pos:column="27">*<pos:position pos:line="39" pos:column="28"/></operator><name pos:line="39" pos:column="28">s<pos:position pos:line="39" pos:column="29"/></name></expr>;<pos:position pos:line="39" pos:column="30"/></condition> <incr><expr><name pos:line="39" pos:column="31">s<pos:position pos:line="39" pos:column="32"/></name><operator pos:line="39" pos:column="32">++<pos:position pos:line="39" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="39" pos:column="35"/></control>
        <block pos:line="40" pos:column="9">{
          <if pos:line="41" pos:column="11">if <condition pos:line="41" pos:column="14">(<expr><operator pos:line="41" pos:column="15">*<pos:position pos:line="41" pos:column="16"/></operator><name pos:line="41" pos:column="16">s<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">==<pos:position pos:line="41" pos:column="20"/></operator> <literal type="char" pos:line="41" pos:column="21">'\\'<pos:position pos:line="41" pos:column="25"/></literal></expr>)<pos:position pos:line="41" pos:column="26"/></condition><then pos:line="41" pos:column="26">
            <block pos:line="42" pos:column="13">{ <comment type="block" pos:line="42" pos:column="15">/* pair */</comment>
              <expr_stmt><expr><name pos:line="43" pos:column="15">s<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">++<pos:position pos:line="43" pos:column="18"/></operator></expr>;<pos:position pos:line="43" pos:column="19"/></expr_stmt>
              <if pos:line="44" pos:column="15">if <condition pos:line="44" pos:column="18">(<expr><operator pos:line="44" pos:column="19">*<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="20">s<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">==<pos:position pos:line="44" pos:column="24"/></operator> <literal type="char" pos:line="44" pos:column="25">','<pos:position pos:line="44" pos:column="28"/></literal> <operator pos:line="44" pos:column="29">||<pos:position pos:line="44" pos:column="31"/></operator> <operator pos:line="44" pos:column="32">*<pos:position pos:line="44" pos:column="33"/></operator><name pos:line="44" pos:column="33">s<pos:position pos:line="44" pos:column="34"/></name> <operator pos:line="44" pos:column="35">==<pos:position pos:line="44" pos:column="37"/></operator> <literal type="char" pos:line="44" pos:column="38">'='<pos:position pos:line="44" pos:column="41"/></literal> <operator pos:line="44" pos:column="42">||<pos:position pos:line="44" pos:column="44"/></operator> <operator pos:line="44" pos:column="45">*<pos:position pos:line="44" pos:column="46"/></operator><name pos:line="44" pos:column="46">s<pos:position pos:line="44" pos:column="47"/></name> <operator pos:line="44" pos:column="48">==<pos:position pos:line="44" pos:column="50"/></operator> <literal type="char" pos:line="44" pos:column="51">'+'<pos:position pos:line="44" pos:column="54"/></literal>
                  <operator pos:line="45" pos:column="19">||<pos:position pos:line="45" pos:column="21"/></operator> <operator pos:line="45" pos:column="22">*<pos:position pos:line="45" pos:column="23"/></operator><name pos:line="45" pos:column="23">s<pos:position pos:line="45" pos:column="24"/></name> <operator pos:line="45" pos:column="25">==<pos:position pos:line="45" pos:column="27"/></operator> <literal type="char" pos:line="45" pos:column="28">'&lt;'<pos:position pos:line="45" pos:column="34"/></literal> <operator pos:line="45" pos:column="32">||<pos:position pos:line="45" pos:column="34"/></operator> <operator pos:line="45" pos:column="35">*<pos:position pos:line="45" pos:column="36"/></operator><name pos:line="45" pos:column="36">s<pos:position pos:line="45" pos:column="37"/></name> <operator pos:line="45" pos:column="38">==<pos:position pos:line="45" pos:column="40"/></operator> <literal type="char" pos:line="45" pos:column="41">'&gt;'<pos:position pos:line="45" pos:column="47"/></literal> <operator pos:line="45" pos:column="45">||<pos:position pos:line="45" pos:column="47"/></operator> <operator pos:line="45" pos:column="48">*<pos:position pos:line="45" pos:column="49"/></operator><name pos:line="45" pos:column="49">s<pos:position pos:line="45" pos:column="50"/></name> <operator pos:line="45" pos:column="51">==<pos:position pos:line="45" pos:column="53"/></operator> <literal type="char" pos:line="45" pos:column="54">'#'<pos:position pos:line="45" pos:column="57"/></literal> <operator pos:line="45" pos:column="58">||<pos:position pos:line="45" pos:column="60"/></operator> <operator pos:line="45" pos:column="61">*<pos:position pos:line="45" pos:column="62"/></operator><name pos:line="45" pos:column="62">s<pos:position pos:line="45" pos:column="63"/></name> <operator pos:line="45" pos:column="64">==<pos:position pos:line="45" pos:column="66"/></operator> <literal type="char" pos:line="45" pos:column="67">';'<pos:position pos:line="45" pos:column="70"/></literal> 
                  <operator pos:line="46" pos:column="19">||<pos:position pos:line="46" pos:column="21"/></operator> <operator pos:line="46" pos:column="22">*<pos:position pos:line="46" pos:column="23"/></operator><name pos:line="46" pos:column="23">s<pos:position pos:line="46" pos:column="24"/></name> <operator pos:line="46" pos:column="25">==<pos:position pos:line="46" pos:column="27"/></operator> <literal type="char" pos:line="46" pos:column="28">'\\'<pos:position pos:line="46" pos:column="32"/></literal> <operator pos:line="46" pos:column="33">||<pos:position pos:line="46" pos:column="35"/></operator> <operator pos:line="46" pos:column="36">*<pos:position pos:line="46" pos:column="37"/></operator><name pos:line="46" pos:column="37">s<pos:position pos:line="46" pos:column="38"/></name> <operator pos:line="46" pos:column="39">==<pos:position pos:line="46" pos:column="41"/></operator> <literal type="char" pos:line="46" pos:column="42">'\"'<pos:position pos:line="46" pos:column="46"/></literal> <operator pos:line="46" pos:column="47">||<pos:position pos:line="46" pos:column="49"/></operator> <operator pos:line="46" pos:column="50">*<pos:position pos:line="46" pos:column="51"/></operator><name pos:line="46" pos:column="51">s<pos:position pos:line="46" pos:column="52"/></name> <operator pos:line="46" pos:column="53">==<pos:position pos:line="46" pos:column="55"/></operator> <literal type="char" pos:line="46" pos:column="56">' '<pos:position pos:line="46" pos:column="59"/></literal></expr>)<pos:position pos:line="46" pos:column="60"/></condition><then pos:line="46" pos:column="60">
                <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="17">n<pos:position pos:line="47" pos:column="18"/></name><operator pos:line="47" pos:column="18">++<pos:position pos:line="47" pos:column="20"/></operator></expr>;<pos:position pos:line="47" pos:column="21"/></expr_stmt></block></then>
              <elseif pos:line="48" pos:column="15">else <if pos:line="48" pos:column="20">if <condition pos:line="48" pos:column="23">(<expr><call><name pos:line="48" pos:column="24">hexdigitp<pos:position pos:line="48" pos:column="33"/></name> <argument_list pos:line="48" pos:column="34">(<argument><expr><name pos:line="48" pos:column="35">s<pos:position pos:line="48" pos:column="36"/></name></expr></argument>)<pos:position pos:line="48" pos:column="37"/></argument_list></call> <operator pos:line="48" pos:column="38">&amp;&amp;<pos:position pos:line="48" pos:column="48"/></operator> <call><name pos:line="48" pos:column="41">hexdigitp<pos:position pos:line="48" pos:column="50"/></name> <argument_list pos:line="48" pos:column="51">(<argument><expr><name pos:line="48" pos:column="52">s<pos:position pos:line="48" pos:column="53"/></name><operator pos:line="48" pos:column="53">+<pos:position pos:line="48" pos:column="54"/></operator><literal type="number" pos:line="48" pos:column="54">1<pos:position pos:line="48" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="57"/></condition><then pos:line="48" pos:column="57">
                <block pos:line="49" pos:column="17">{
                  <expr_stmt><expr><name pos:line="50" pos:column="19">s<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">++<pos:position pos:line="50" pos:column="22"/></operator></expr>;<pos:position pos:line="50" pos:column="23"/></expr_stmt>
                  <expr_stmt><expr><name pos:line="51" pos:column="19">n<pos:position pos:line="51" pos:column="20"/></name><operator pos:line="51" pos:column="20">++<pos:position pos:line="51" pos:column="22"/></operator></expr>;<pos:position pos:line="51" pos:column="23"/></expr_stmt>
                }<pos:position pos:line="52" pos:column="18"/></block></then></if></elseif>
              <else pos:line="53" pos:column="15">else
                <block type="pseudo"><return pos:line="54" pos:column="17">return <expr><name pos:line="54" pos:column="24">NULL<pos:position pos:line="54" pos:column="28"/></name></expr>;<pos:position pos:line="54" pos:column="29"/></return></block></else></if> <comment type="block" pos:line="54" pos:column="30">/* invalid escape sequence */</comment>
            }<pos:position pos:line="55" pos:column="14"/></block></then>
          <elseif pos:line="56" pos:column="11">else <if pos:line="56" pos:column="16">if <condition pos:line="56" pos:column="19">(<expr><operator pos:line="56" pos:column="20">*<pos:position pos:line="56" pos:column="21"/></operator><name pos:line="56" pos:column="21">s<pos:position pos:line="56" pos:column="22"/></name> <operator pos:line="56" pos:column="23">==<pos:position pos:line="56" pos:column="25"/></operator> <literal type="char" pos:line="56" pos:column="26">'\"'<pos:position pos:line="56" pos:column="30"/></literal></expr>)<pos:position pos:line="56" pos:column="31"/></condition><then pos:line="56" pos:column="31">
            <block type="pseudo"><return pos:line="57" pos:column="13">return <expr><name pos:line="57" pos:column="20">NULL<pos:position pos:line="57" pos:column="24"/></name></expr>;<pos:position pos:line="57" pos:column="25"/></return></block></then></if></elseif> <comment type="block" pos:line="57" pos:column="26">/* invalid encoding */</comment>
          <elseif pos:line="58" pos:column="11">else <if pos:line="58" pos:column="16">if <condition pos:line="58" pos:column="19">(<expr><operator pos:line="58" pos:column="20">*<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="21">s<pos:position pos:line="58" pos:column="22"/></name> <operator pos:line="58" pos:column="23">==<pos:position pos:line="58" pos:column="25"/></operator> <literal type="char" pos:line="58" pos:column="26">','<pos:position pos:line="58" pos:column="29"/></literal> <operator pos:line="58" pos:column="30">||<pos:position pos:line="58" pos:column="32"/></operator> <operator pos:line="58" pos:column="33">*<pos:position pos:line="58" pos:column="34"/></operator><name pos:line="58" pos:column="34">s<pos:position pos:line="58" pos:column="35"/></name> <operator pos:line="58" pos:column="36">==<pos:position pos:line="58" pos:column="38"/></operator> <literal type="char" pos:line="58" pos:column="39">'='<pos:position pos:line="58" pos:column="42"/></literal> <operator pos:line="58" pos:column="43">||<pos:position pos:line="58" pos:column="45"/></operator> <operator pos:line="58" pos:column="46">*<pos:position pos:line="58" pos:column="47"/></operator><name pos:line="58" pos:column="47">s<pos:position pos:line="58" pos:column="48"/></name> <operator pos:line="58" pos:column="49">==<pos:position pos:line="58" pos:column="51"/></operator> <literal type="char" pos:line="58" pos:column="52">'+'<pos:position pos:line="58" pos:column="55"/></literal>
                   <operator pos:line="59" pos:column="20">||<pos:position pos:line="59" pos:column="22"/></operator> <operator pos:line="59" pos:column="23">*<pos:position pos:line="59" pos:column="24"/></operator><name pos:line="59" pos:column="24">s<pos:position pos:line="59" pos:column="25"/></name> <operator pos:line="59" pos:column="26">==<pos:position pos:line="59" pos:column="28"/></operator> <literal type="char" pos:line="59" pos:column="29">'&lt;'<pos:position pos:line="59" pos:column="35"/></literal> <operator pos:line="59" pos:column="33">||<pos:position pos:line="59" pos:column="35"/></operator> <operator pos:line="59" pos:column="36">*<pos:position pos:line="59" pos:column="37"/></operator><name pos:line="59" pos:column="37">s<pos:position pos:line="59" pos:column="38"/></name> <operator pos:line="59" pos:column="39">==<pos:position pos:line="59" pos:column="41"/></operator> <literal type="char" pos:line="59" pos:column="42">'&gt;'<pos:position pos:line="59" pos:column="48"/></literal> <operator pos:line="59" pos:column="46">||<pos:position pos:line="59" pos:column="48"/></operator> <operator pos:line="59" pos:column="49">*<pos:position pos:line="59" pos:column="50"/></operator><name pos:line="59" pos:column="50">s<pos:position pos:line="59" pos:column="51"/></name> <operator pos:line="59" pos:column="52">==<pos:position pos:line="59" pos:column="54"/></operator> <literal type="char" pos:line="59" pos:column="55">'#'<pos:position pos:line="59" pos:column="58"/></literal> <operator pos:line="59" pos:column="59">||<pos:position pos:line="59" pos:column="61"/></operator> <operator pos:line="59" pos:column="62">*<pos:position pos:line="59" pos:column="63"/></operator><name pos:line="59" pos:column="63">s<pos:position pos:line="59" pos:column="64"/></name> <operator pos:line="59" pos:column="65">==<pos:position pos:line="59" pos:column="67"/></operator> <literal type="char" pos:line="59" pos:column="68">';'<pos:position pos:line="59" pos:column="71"/></literal></expr> )<pos:position pos:line="59" pos:column="73"/></condition><then pos:line="59" pos:column="73">
            <block type="pseudo"><break pos:line="60" pos:column="13">break;<pos:position pos:line="60" pos:column="19"/></break></block></then></if></elseif> 
          <else pos:line="61" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="13">n<pos:position pos:line="62" pos:column="14"/></name><operator pos:line="62" pos:column="14">++<pos:position pos:line="62" pos:column="16"/></operator></expr>;<pos:position pos:line="62" pos:column="17"/></expr_stmt></block></else></if>
        }<pos:position pos:line="63" pos:column="10"/></block></for>

      <expr_stmt><expr><name pos:line="65" pos:column="7">p<pos:position pos:line="65" pos:column="8"/></name> <operator pos:line="65" pos:column="9">=<pos:position pos:line="65" pos:column="10"/></operator> <call><name pos:line="65" pos:column="11">safe_malloc<pos:position pos:line="65" pos:column="22"/></name> <argument_list pos:line="65" pos:column="23">(<argument><expr><name pos:line="65" pos:column="24">n<pos:position pos:line="65" pos:column="25"/></name><operator pos:line="65" pos:column="25">+<pos:position pos:line="65" pos:column="26"/></operator><literal type="number" pos:line="65" pos:column="26">1<pos:position pos:line="65" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="66" pos:column="7">array<pos:position pos:line="66" pos:column="12"/></name><operator pos:line="66" pos:column="12">-&gt;<pos:position pos:line="66" pos:column="17"/></operator><name pos:line="66" pos:column="14">value<pos:position pos:line="66" pos:column="19"/></name></name> <operator pos:line="66" pos:column="20">=<pos:position pos:line="66" pos:column="21"/></operator> <operator pos:line="66" pos:column="22">(<pos:position pos:line="66" pos:column="23"/></operator><name pos:line="66" pos:column="23">char<pos:position pos:line="66" pos:column="27"/></name><operator pos:line="66" pos:column="27">*<pos:position pos:line="66" pos:column="28"/></operator><operator pos:line="66" pos:column="28">)<pos:position pos:line="66" pos:column="29"/></operator><name pos:line="66" pos:column="29">p<pos:position pos:line="66" pos:column="30"/></name></expr>;<pos:position pos:line="66" pos:column="31"/></expr_stmt>
      <for pos:line="67" pos:column="7">for <control pos:line="67" pos:column="11">(<init><expr><name pos:line="67" pos:column="12">s<pos:position pos:line="67" pos:column="13"/></name><operator pos:line="67" pos:column="13">=<pos:position pos:line="67" pos:column="14"/></operator><name pos:line="67" pos:column="14">string<pos:position pos:line="67" pos:column="20"/></name></expr>;<pos:position pos:line="67" pos:column="21"/></init> <condition><expr><name pos:line="67" pos:column="22">n<pos:position pos:line="67" pos:column="23"/></name></expr>;<pos:position pos:line="67" pos:column="24"/></condition> <incr><expr><name pos:line="67" pos:column="25">s<pos:position pos:line="67" pos:column="26"/></name><operator pos:line="67" pos:column="26">++<pos:position pos:line="67" pos:column="28"/></operator></expr><operator pos:line="67" pos:column="28">,<pos:position pos:line="67" pos:column="29"/></operator> <expr><name pos:line="67" pos:column="30">n<pos:position pos:line="67" pos:column="31"/></name><operator pos:line="67" pos:column="31">--<pos:position pos:line="67" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="67" pos:column="34"/></control>
        <block pos:line="68" pos:column="9">{
          <if pos:line="69" pos:column="11">if <condition pos:line="69" pos:column="14">(<expr><operator pos:line="69" pos:column="15">*<pos:position pos:line="69" pos:column="16"/></operator><name pos:line="69" pos:column="16">s<pos:position pos:line="69" pos:column="17"/></name> <operator pos:line="69" pos:column="18">==<pos:position pos:line="69" pos:column="20"/></operator> <literal type="char" pos:line="69" pos:column="21">'\\'<pos:position pos:line="69" pos:column="25"/></literal></expr>)<pos:position pos:line="69" pos:column="26"/></condition><then pos:line="69" pos:column="26">
            <block pos:line="70" pos:column="13">{ 
              <expr_stmt><expr><name pos:line="71" pos:column="15">s<pos:position pos:line="71" pos:column="16"/></name><operator pos:line="71" pos:column="16">++<pos:position pos:line="71" pos:column="18"/></operator></expr>;<pos:position pos:line="71" pos:column="19"/></expr_stmt>
              <if pos:line="72" pos:column="15">if <condition pos:line="72" pos:column="18">(<expr><call><name pos:line="72" pos:column="19">hexdigitp<pos:position pos:line="72" pos:column="28"/></name> <argument_list pos:line="72" pos:column="29">(<argument><expr><name pos:line="72" pos:column="30">s<pos:position pos:line="72" pos:column="31"/></name></expr></argument>)<pos:position pos:line="72" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="33"/></condition><then pos:line="72" pos:column="33">
                <block pos:line="73" pos:column="17">{
                  <expr_stmt><expr><operator pos:line="74" pos:column="19">*<pos:position pos:line="74" pos:column="20"/></operator><name pos:line="74" pos:column="20">p<pos:position pos:line="74" pos:column="21"/></name><operator pos:line="74" pos:column="21">++<pos:position pos:line="74" pos:column="23"/></operator> <operator pos:line="74" pos:column="24">=<pos:position pos:line="74" pos:column="25"/></operator> <call><name pos:line="74" pos:column="26">xtoi_2<pos:position pos:line="74" pos:column="32"/></name> <argument_list pos:line="74" pos:column="33">(<argument><expr><name pos:line="74" pos:column="34">s<pos:position pos:line="74" pos:column="35"/></name></expr></argument>)<pos:position pos:line="74" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="37"/></expr_stmt>
                  <expr_stmt><expr><name pos:line="75" pos:column="19">s<pos:position pos:line="75" pos:column="20"/></name><operator pos:line="75" pos:column="20">++<pos:position pos:line="75" pos:column="22"/></operator></expr>;<pos:position pos:line="75" pos:column="23"/></expr_stmt>
                }<pos:position pos:line="76" pos:column="18"/></block></then>
              <else pos:line="77" pos:column="15">else
                <block type="pseudo"><expr_stmt><expr><operator pos:line="78" pos:column="17">*<pos:position pos:line="78" pos:column="18"/></operator><name pos:line="78" pos:column="18">p<pos:position pos:line="78" pos:column="19"/></name><operator pos:line="78" pos:column="19">++<pos:position pos:line="78" pos:column="21"/></operator> <operator pos:line="78" pos:column="22">=<pos:position pos:line="78" pos:column="23"/></operator> <operator pos:line="78" pos:column="24">*<pos:position pos:line="78" pos:column="25"/></operator><name pos:line="78" pos:column="25">s<pos:position pos:line="78" pos:column="26"/></name></expr>;<pos:position pos:line="78" pos:column="27"/></expr_stmt></block></else></if>
            }<pos:position pos:line="79" pos:column="14"/></block></then>
          <else pos:line="80" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><operator pos:line="81" pos:column="13">*<pos:position pos:line="81" pos:column="14"/></operator><name pos:line="81" pos:column="14">p<pos:position pos:line="81" pos:column="15"/></name><operator pos:line="81" pos:column="15">++<pos:position pos:line="81" pos:column="17"/></operator> <operator pos:line="81" pos:column="18">=<pos:position pos:line="81" pos:column="19"/></operator> <operator pos:line="81" pos:column="20">*<pos:position pos:line="81" pos:column="21"/></operator><name pos:line="81" pos:column="21">s<pos:position pos:line="81" pos:column="22"/></name></expr>;<pos:position pos:line="81" pos:column="23"/></expr_stmt></block></else></if>
        }<pos:position pos:line="82" pos:column="10"/></block></for>
      <expr_stmt><expr><operator pos:line="83" pos:column="7">*<pos:position pos:line="83" pos:column="8"/></operator><name pos:line="83" pos:column="8">p<pos:position pos:line="83" pos:column="9"/></name> <operator pos:line="83" pos:column="10">=<pos:position pos:line="83" pos:column="11"/></operator> <literal type="number" pos:line="83" pos:column="12">0<pos:position pos:line="83" pos:column="13"/></literal></expr>;<pos:position pos:line="83" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="84" pos:column="6"/></block></else></if>
  <return pos:line="85" pos:column="3">return <expr><name pos:line="85" pos:column="10">s<pos:position pos:line="85" pos:column="11"/></name></expr>;<pos:position pos:line="85" pos:column="12"/></return>
}<pos:position pos:line="86" pos:column="2"/></block></function></unit>

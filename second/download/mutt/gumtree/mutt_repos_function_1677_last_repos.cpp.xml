<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1677_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">pop_reconnect<pos:position pos:line="1" pos:column="18"/></name> <parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">CONTEXT<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">ctx<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">ret<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">POP_DATA<pos:position pos:line="4" pos:column="11"/></name> <modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type><name pos:line="4" pos:column="13">pop_data<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><operator pos:line="4" pos:column="24">(<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="25">POP_DATA<pos:position pos:line="4" pos:column="33"/></name> <operator pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></operator><operator pos:line="4" pos:column="35">)<pos:position pos:line="4" pos:column="36"/></operator><name><name pos:line="4" pos:column="36">ctx<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">-&gt;<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="41">data<pos:position pos:line="4" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">progress_t<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">progressbar<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name><name pos:line="7" pos:column="7">pop_data<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">status<pos:position pos:line="7" pos:column="23"/></name></name> <operator pos:line="7" pos:column="24">==<pos:position pos:line="7" pos:column="26"/></operator> <name pos:line="7" pos:column="27">POP_CONNECTED<pos:position pos:line="7" pos:column="40"/></name></expr>)<pos:position pos:line="7" pos:column="41"/></condition><then pos:line="7" pos:column="41">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><literal type="number" pos:line="8" pos:column="12">0<pos:position pos:line="8" pos:column="13"/></literal></expr>;<pos:position pos:line="8" pos:column="14"/></return></block></then></if>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name><name pos:line="9" pos:column="7">pop_data<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">status<pos:position pos:line="9" pos:column="23"/></name></name> <operator pos:line="9" pos:column="24">==<pos:position pos:line="9" pos:column="26"/></operator> <name pos:line="9" pos:column="27">POP_BYE<pos:position pos:line="9" pos:column="34"/></name></expr>)<pos:position pos:line="9" pos:column="35"/></condition><then pos:line="9" pos:column="35">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">-<pos:position pos:line="10" pos:column="13"/></operator><literal type="number" pos:line="10" pos:column="13">1<pos:position pos:line="10" pos:column="14"/></literal></expr>;<pos:position pos:line="10" pos:column="15"/></return></block></then></if>

  <macro><name pos:line="12" pos:column="3">FOREVER<pos:position pos:line="12" pos:column="10"/></name></macro>
  <block pos:line="13" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">mutt_socket_close<pos:position pos:line="14" pos:column="22"/></name> <argument_list pos:line="14" pos:column="23">(<argument><expr><name><name pos:line="14" pos:column="24">pop_data<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">-&gt;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="34">conn<pos:position pos:line="14" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><name pos:line="16" pos:column="5">ret<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">=<pos:position pos:line="16" pos:column="10"/></operator> <call><name pos:line="16" pos:column="11">pop_open_connection<pos:position pos:line="16" pos:column="30"/></name> <argument_list pos:line="16" pos:column="31">(<argument><expr><name pos:line="16" pos:column="32">pop_data<pos:position pos:line="16" pos:column="40"/></name></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">ret<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">==<pos:position pos:line="17" pos:column="15"/></operator> <literal type="number" pos:line="17" pos:column="16">0<pos:position pos:line="17" pos:column="17"/></literal></expr>)<pos:position pos:line="17" pos:column="18"/></condition><then pos:line="17" pos:column="18">
    <block pos:line="18" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="19" pos:column="7">int<pos:position pos:line="19" pos:column="10"/></name></type> <name pos:line="19" pos:column="11">i<pos:position pos:line="19" pos:column="12"/></name></decl>;<pos:position pos:line="19" pos:column="13"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="21" pos:column="7">mutt_progress_init<pos:position pos:line="21" pos:column="25"/></name> <argument_list pos:line="21" pos:column="26">(<argument><expr><operator pos:line="21" pos:column="27">&amp;<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="28">progressbar<pos:position pos:line="21" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="41">_<pos:position pos:line="21" pos:column="42"/></name><argument_list pos:line="21" pos:column="42">(<argument><expr><literal type="string" pos:line="21" pos:column="43">"Verifying message indexes..."<pos:position pos:line="21" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="74"/></argument_list></call></expr></argument>,
			  <argument><expr><name pos:line="22" pos:column="27">MUTT_PROGRESS_SIZE<pos:position pos:line="22" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="47">NetInc<pos:position pos:line="22" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="55">0<pos:position pos:line="22" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="58"/></expr_stmt>

      <for pos:line="24" pos:column="7">for <control pos:line="24" pos:column="11">(<init><expr><name pos:line="24" pos:column="12">i<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <literal type="number" pos:line="24" pos:column="16">0<pos:position pos:line="24" pos:column="17"/></literal></expr>;<pos:position pos:line="24" pos:column="18"/></init> <condition><expr><name pos:line="24" pos:column="19">i<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">&lt;<pos:position pos:line="24" pos:column="25"/></operator> <name><name pos:line="24" pos:column="23">ctx<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">-&gt;<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="28">msgcount<pos:position pos:line="24" pos:column="36"/></name></name></expr>;<pos:position pos:line="24" pos:column="37"/></condition> <incr><expr><name pos:line="24" pos:column="38">i<pos:position pos:line="24" pos:column="39"/></name><operator pos:line="24" pos:column="39">++<pos:position pos:line="24" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="42"/></control>
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="25" pos:column="9">ctx<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">hdrs<pos:position pos:line="25" pos:column="18"/></name><index pos:line="25" pos:column="18">[<expr><name pos:line="25" pos:column="19">i<pos:position pos:line="25" pos:column="20"/></name></expr>]<pos:position pos:line="25" pos:column="21"/></index></name><operator pos:line="25" pos:column="21">-&gt;<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="23">refno<pos:position pos:line="25" pos:column="28"/></name> <operator pos:line="25" pos:column="29">=<pos:position pos:line="25" pos:column="30"/></operator> <operator pos:line="25" pos:column="31">-<pos:position pos:line="25" pos:column="32"/></operator><literal type="number" pos:line="25" pos:column="32">1<pos:position pos:line="25" pos:column="33"/></literal></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt></block></for>

      <expr_stmt><expr><name pos:line="27" pos:column="7">ret<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">=<pos:position pos:line="27" pos:column="12"/></operator> <call><name pos:line="27" pos:column="13">pop_fetch_data<pos:position pos:line="27" pos:column="27"/></name> <argument_list pos:line="27" pos:column="28">(<argument><expr><name pos:line="27" pos:column="29">pop_data<pos:position pos:line="27" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="39">"UIDL\r\n"<pos:position pos:line="27" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="51">&amp;<pos:position pos:line="27" pos:column="56"/></operator><name pos:line="27" pos:column="52">progressbar<pos:position pos:line="27" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="65">check_uidl<pos:position pos:line="27" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="77">ctx<pos:position pos:line="27" pos:column="80"/></name></expr></argument>)<pos:position pos:line="27" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="82"/></expr_stmt>
      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><name pos:line="28" pos:column="11">ret<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">==<pos:position pos:line="28" pos:column="17"/></operator> <operator pos:line="28" pos:column="18">-<pos:position pos:line="28" pos:column="19"/></operator><literal type="number" pos:line="28" pos:column="19">2<pos:position pos:line="28" pos:column="20"/></literal></expr>)<pos:position pos:line="28" pos:column="21"/></condition><then pos:line="28" pos:column="21">
      <block pos:line="29" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">mutt_error<pos:position pos:line="30" pos:column="19"/></name> <argument_list pos:line="30" pos:column="20">(<argument><expr><literal type="string" pos:line="30" pos:column="21">"%s"<pos:position pos:line="30" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="27">pop_data<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">-&gt;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="37">err_msg<pos:position pos:line="30" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">mutt_sleep<pos:position pos:line="31" pos:column="19"/></name> <argument_list pos:line="31" pos:column="20">(<argument><expr><literal type="number" pos:line="31" pos:column="21">2<pos:position pos:line="31" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt>
      }<pos:position pos:line="32" pos:column="8"/></block></then></if>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">ret<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">==<pos:position pos:line="34" pos:column="15"/></operator> <literal type="number" pos:line="34" pos:column="16">0<pos:position pos:line="34" pos:column="17"/></literal></expr>)<pos:position pos:line="34" pos:column="18"/></condition><then pos:line="34" pos:column="18">
      <block type="pseudo"><return pos:line="35" pos:column="7">return <expr><literal type="number" pos:line="35" pos:column="14">0<pos:position pos:line="35" pos:column="15"/></literal></expr>;<pos:position pos:line="35" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="37" pos:column="5">pop_logout<pos:position pos:line="37" pos:column="15"/></name> <argument_list pos:line="37" pos:column="16">(<argument><expr><name pos:line="37" pos:column="17">ctx<pos:position pos:line="37" pos:column="20"/></name></expr></argument>)<pos:position pos:line="37" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="22"/></expr_stmt>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">ret<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">&lt;<pos:position pos:line="39" pos:column="17"/></operator> <operator pos:line="39" pos:column="15">-<pos:position pos:line="39" pos:column="16"/></operator><literal type="number" pos:line="39" pos:column="16">1<pos:position pos:line="39" pos:column="17"/></literal></expr>)<pos:position pos:line="39" pos:column="18"/></condition><then pos:line="39" pos:column="18">
      <block type="pseudo"><return pos:line="40" pos:column="7">return <expr><operator pos:line="40" pos:column="14">-<pos:position pos:line="40" pos:column="15"/></operator><literal type="number" pos:line="40" pos:column="15">1<pos:position pos:line="40" pos:column="16"/></literal></expr>;<pos:position pos:line="40" pos:column="17"/></return></block></then></if>

    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><call><name pos:line="42" pos:column="9">query_quadoption<pos:position pos:line="42" pos:column="25"/></name> <argument_list pos:line="42" pos:column="26">(<argument><expr><name pos:line="42" pos:column="27">OPT_POPRECONNECT<pos:position pos:line="42" pos:column="43"/></name></expr></argument>,
		<argument><expr><call><name pos:line="43" pos:column="17">_<pos:position pos:line="43" pos:column="18"/></name><argument_list pos:line="43" pos:column="18">(<argument><expr><literal type="string" pos:line="43" pos:column="19">"Connection lost. Reconnect to POP server?"<pos:position pos:line="43" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="64"/></argument_list></call> <operator pos:line="43" pos:column="65">!=<pos:position pos:line="43" pos:column="67"/></operator> <name pos:line="43" pos:column="68">MUTT_YES<pos:position pos:line="43" pos:column="76"/></name></expr>)<pos:position pos:line="43" pos:column="77"/></condition><then pos:line="43" pos:column="77">
      <block type="pseudo"><return pos:line="44" pos:column="7">return <expr><operator pos:line="44" pos:column="14">-<pos:position pos:line="44" pos:column="15"/></operator><literal type="number" pos:line="44" pos:column="15">1<pos:position pos:line="44" pos:column="16"/></literal></expr>;<pos:position pos:line="44" pos:column="17"/></return></block></then></if>
  }<pos:position pos:line="45" pos:column="4"/></block>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

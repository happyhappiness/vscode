<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_function_159.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_save_confirm<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">s<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">stat<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">st<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">tmp<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">_POSIX_PATH_MAX<pos:position pos:line="3" pos:column="27"/></name></expr>]<pos:position pos:line="3" pos:column="28"/></index></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">ret<pos:position pos:line="4" pos:column="10"/></name> <init pos:line="4" pos:column="11">= <expr><literal type="number" pos:line="4" pos:column="13">0<pos:position pos:line="4" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">rc<pos:position pos:line="5" pos:column="9"/></name></decl>;<pos:position pos:line="5" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">magic<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><literal type="number" pos:line="6" pos:column="15">0<pos:position pos:line="6" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">magic<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <call><name pos:line="8" pos:column="11">mx_get_magic<pos:position pos:line="8" pos:column="23"/></name> <argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">s<pos:position pos:line="8" pos:column="26"/></name></expr></argument>)<pos:position pos:line="8" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt>

<cpp:ifdef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifdef<pos:position pos:line="10" pos:column="7"/></cpp:directive> <name pos:line="10" pos:column="8">USE_POP<pos:position pos:line="10" pos:column="15"/></name></cpp:ifdef>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">magic<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">==<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">M_POP<pos:position pos:line="11" pos:column="21"/></name></expr>)<pos:position pos:line="11" pos:column="22"/></condition><then pos:line="11" pos:column="22">
  <block pos:line="12" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">mutt_error<pos:position pos:line="13" pos:column="15"/></name></type> <name pos:line="13" pos:column="16">_<pos:position pos:line="13" pos:column="17"/></name><argument_list pos:line="13" pos:column="17">(<argument><expr><literal type="string" pos:line="13" pos:column="18">"Can't save message to POP mailbox."<pos:position pos:line="13" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></decl>;<pos:position pos:line="13" pos:column="56"/></decl_stmt>
    <return pos:line="14" pos:column="5">return <expr><literal type="number" pos:line="14" pos:column="12">1<pos:position pos:line="14" pos:column="13"/></literal></expr>;<pos:position pos:line="14" pos:column="14"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">magic<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">&gt;<pos:position pos:line="18" pos:column="17"/></operator> <literal type="number" pos:line="18" pos:column="15">0<pos:position pos:line="18" pos:column="16"/></literal> <operator pos:line="18" pos:column="17">&amp;&amp;<pos:position pos:line="18" pos:column="27"/></operator> <operator pos:line="18" pos:column="20">!<pos:position pos:line="18" pos:column="21"/></operator><call><name pos:line="18" pos:column="21">mx_access<pos:position pos:line="18" pos:column="30"/></name> <argument_list pos:line="18" pos:column="31">(<argument><expr><name pos:line="18" pos:column="32">s<pos:position pos:line="18" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="35">W_OK<pos:position pos:line="18" pos:column="39"/></name></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="41"/></condition><then pos:line="18" pos:column="41">
  <block pos:line="19" pos:column="3">{
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><call><name pos:line="20" pos:column="9">option<pos:position pos:line="20" pos:column="15"/></name> <argument_list pos:line="20" pos:column="16">(<argument><expr><name pos:line="20" pos:column="17">OPTCONFIRMAPPEND<pos:position pos:line="20" pos:column="33"/></name></expr></argument>)<pos:position pos:line="20" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="35"/></condition><then pos:line="20" pos:column="35">
    <block pos:line="21" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">snprintf<pos:position pos:line="22" pos:column="15"/></name> <argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">tmp<pos:position pos:line="22" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="22">sizeof <argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">tmp<pos:position pos:line="22" pos:column="33"/></name></expr></argument>)<pos:position pos:line="22" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="36">_<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><literal type="string" pos:line="22" pos:column="38">"Append messages to %s?"<pos:position pos:line="22" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="22" pos:column="65">s<pos:position pos:line="22" pos:column="66"/></name></expr></argument>)<pos:position pos:line="22" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="68"/></expr_stmt>
      <if pos:line="23" pos:column="7">if <condition pos:line="23" pos:column="10">(<expr><operator pos:line="23" pos:column="11">(<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="12">rc<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <call><name pos:line="23" pos:column="17">mutt_yesorno<pos:position pos:line="23" pos:column="29"/></name> <argument_list pos:line="23" pos:column="30">(<argument><expr><name pos:line="23" pos:column="31">tmp<pos:position pos:line="23" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="36">M_YES<pos:position pos:line="23" pos:column="41"/></name></expr></argument>)<pos:position pos:line="23" pos:column="42"/></argument_list></call><operator pos:line="23" pos:column="42">)<pos:position pos:line="23" pos:column="43"/></operator> <operator pos:line="23" pos:column="44">==<pos:position pos:line="23" pos:column="46"/></operator> <name pos:line="23" pos:column="47">M_NO<pos:position pos:line="23" pos:column="51"/></name></expr>)<pos:position pos:line="23" pos:column="52"/></condition><then pos:line="23" pos:column="52">
	<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="9">ret<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <literal type="number" pos:line="24" pos:column="15">1<pos:position pos:line="24" pos:column="16"/></literal></expr>;<pos:position pos:line="24" pos:column="17"/></expr_stmt></block></then>
      <elseif pos:line="25" pos:column="7">else <if pos:line="25" pos:column="12">if <condition pos:line="25" pos:column="15">(<expr><name pos:line="25" pos:column="16">rc<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">==<pos:position pos:line="25" pos:column="21"/></operator> <operator pos:line="25" pos:column="22">-<pos:position pos:line="25" pos:column="23"/></operator><literal type="number" pos:line="25" pos:column="23">1<pos:position pos:line="25" pos:column="24"/></literal></expr>)<pos:position pos:line="25" pos:column="25"/></condition><then pos:line="25" pos:column="25">
	<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="9">ret<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">=<pos:position pos:line="26" pos:column="14"/></operator> <operator pos:line="26" pos:column="15">-<pos:position pos:line="26" pos:column="16"/></operator><literal type="number" pos:line="26" pos:column="16">1<pos:position pos:line="26" pos:column="17"/></literal></expr>;<pos:position pos:line="26" pos:column="18"/></expr_stmt></block></then></if></elseif></if>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><call><name pos:line="30" pos:column="7">stat<pos:position pos:line="30" pos:column="11"/></name> <argument_list pos:line="30" pos:column="12">(<argument><expr><name pos:line="30" pos:column="13">s<pos:position pos:line="30" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="16">st<pos:position pos:line="30" pos:column="18"/></name></expr></argument>)<pos:position pos:line="30" pos:column="19"/></argument_list></call> <operator pos:line="30" pos:column="20">!=<pos:position pos:line="30" pos:column="22"/></operator> <operator pos:line="30" pos:column="23">-<pos:position pos:line="30" pos:column="24"/></operator><literal type="number" pos:line="30" pos:column="24">1<pos:position pos:line="30" pos:column="25"/></literal></expr>)<pos:position pos:line="30" pos:column="26"/></condition><then pos:line="30" pos:column="26">
  <block pos:line="31" pos:column="3">{
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">magic<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">==<pos:position pos:line="32" pos:column="17"/></operator> <operator pos:line="32" pos:column="18">-<pos:position pos:line="32" pos:column="19"/></operator><literal type="number" pos:line="32" pos:column="19">1<pos:position pos:line="32" pos:column="20"/></literal></expr>)<pos:position pos:line="32" pos:column="21"/></condition><then pos:line="32" pos:column="21">
    <block pos:line="33" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">mutt_error<pos:position pos:line="34" pos:column="17"/></name> <argument_list pos:line="34" pos:column="18">(<argument><expr><call><name pos:line="34" pos:column="19">_<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(<argument><expr><literal type="string" pos:line="34" pos:column="21">"%s is not a mailbox!"<pos:position pos:line="34" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="34" pos:column="46">s<pos:position pos:line="34" pos:column="47"/></name></expr></argument>)<pos:position pos:line="34" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="49"/></expr_stmt>
      <return pos:line="35" pos:column="7">return <expr><literal type="number" pos:line="35" pos:column="14">1<pos:position pos:line="35" pos:column="15"/></literal></expr>;<pos:position pos:line="35" pos:column="16"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>
  }<pos:position pos:line="37" pos:column="4"/></block></then>
  <elseif pos:line="38" pos:column="3">else <if pos:line="38" pos:column="8">if <condition pos:line="38" pos:column="11">(<expr><name pos:line="38" pos:column="12">magic<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">!=<pos:position pos:line="38" pos:column="20"/></operator> <name pos:line="38" pos:column="21">M_IMAP<pos:position pos:line="38" pos:column="27"/></name></expr>)<pos:position pos:line="38" pos:column="28"/></condition><then pos:line="38" pos:column="28">
  <block pos:line="39" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">st<pos:position pos:line="40" pos:column="7"/></name><operator pos:line="40" pos:column="7">-&gt;<pos:position pos:line="40" pos:column="12"/></operator><name pos:line="40" pos:column="9">st_mtime<pos:position pos:line="40" pos:column="17"/></name></name> <operator pos:line="40" pos:column="18">=<pos:position pos:line="40" pos:column="19"/></operator> <literal type="number" pos:line="40" pos:column="20">0<pos:position pos:line="40" pos:column="21"/></literal></expr>;<pos:position pos:line="40" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">st<pos:position pos:line="41" pos:column="7"/></name><operator pos:line="41" pos:column="7">-&gt;<pos:position pos:line="41" pos:column="12"/></operator><name pos:line="41" pos:column="9">st_atime<pos:position pos:line="41" pos:column="17"/></name></name> <operator pos:line="41" pos:column="18">=<pos:position pos:line="41" pos:column="19"/></operator> <literal type="number" pos:line="41" pos:column="20">0<pos:position pos:line="41" pos:column="21"/></literal></expr>;<pos:position pos:line="41" pos:column="22"/></expr_stmt>

    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">errno<pos:position pos:line="43" pos:column="14"/></name> <operator pos:line="43" pos:column="15">==<pos:position pos:line="43" pos:column="17"/></operator> <name pos:line="43" pos:column="18">ENOENT<pos:position pos:line="43" pos:column="24"/></name></expr>)<pos:position pos:line="43" pos:column="25"/></condition><then pos:line="43" pos:column="25">
    <block pos:line="44" pos:column="5">{
      <if pos:line="45" pos:column="7">if <condition pos:line="45" pos:column="10">(<expr><call><name pos:line="45" pos:column="11">option<pos:position pos:line="45" pos:column="17"/></name> <argument_list pos:line="45" pos:column="18">(<argument><expr><name pos:line="45" pos:column="19">OPTCONFIRMCREATE<pos:position pos:line="45" pos:column="35"/></name></expr></argument>)<pos:position pos:line="45" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="37"/></condition><then pos:line="45" pos:column="37">
      <block pos:line="46" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">snprintf<pos:position pos:line="47" pos:column="17"/></name> <argument_list pos:line="47" pos:column="18">(<argument><expr><name pos:line="47" pos:column="19">tmp<pos:position pos:line="47" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="24">sizeof <argument_list pos:line="47" pos:column="31">(<argument><expr><name pos:line="47" pos:column="32">tmp<pos:position pos:line="47" pos:column="35"/></name></expr></argument>)<pos:position pos:line="47" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="38">_<pos:position pos:line="47" pos:column="39"/></name><argument_list pos:line="47" pos:column="39">(<argument><expr><literal type="string" pos:line="47" pos:column="40">"Create %s?"<pos:position pos:line="47" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="47" pos:column="55">s<pos:position pos:line="47" pos:column="56"/></name></expr></argument>)<pos:position pos:line="47" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="58"/></expr_stmt>
	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><operator pos:line="48" pos:column="13">(<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="14">rc<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">=<pos:position pos:line="48" pos:column="18"/></operator> <call><name pos:line="48" pos:column="19">mutt_yesorno<pos:position pos:line="48" pos:column="31"/></name> <argument_list pos:line="48" pos:column="32">(<argument><expr><name pos:line="48" pos:column="33">tmp<pos:position pos:line="48" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="38">M_YES<pos:position pos:line="48" pos:column="43"/></name></expr></argument>)<pos:position pos:line="48" pos:column="44"/></argument_list></call><operator pos:line="48" pos:column="44">)<pos:position pos:line="48" pos:column="45"/></operator> <operator pos:line="48" pos:column="46">==<pos:position pos:line="48" pos:column="48"/></operator> <name pos:line="48" pos:column="49">M_NO<pos:position pos:line="48" pos:column="53"/></name></expr>)<pos:position pos:line="48" pos:column="54"/></condition><then pos:line="48" pos:column="54">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="11">ret<pos:position pos:line="49" pos:column="14"/></name> <operator pos:line="49" pos:column="15">=<pos:position pos:line="49" pos:column="16"/></operator> <literal type="number" pos:line="49" pos:column="17">1<pos:position pos:line="49" pos:column="18"/></literal></expr>;<pos:position pos:line="49" pos:column="19"/></expr_stmt></block></then>
	<elseif pos:line="50" pos:column="9">else <if pos:line="50" pos:column="14">if <condition pos:line="50" pos:column="17">(<expr><name pos:line="50" pos:column="18">rc<pos:position pos:line="50" pos:column="20"/></name> <operator pos:line="50" pos:column="21">==<pos:position pos:line="50" pos:column="23"/></operator> <operator pos:line="50" pos:column="24">-<pos:position pos:line="50" pos:column="25"/></operator><literal type="number" pos:line="50" pos:column="25">1<pos:position pos:line="50" pos:column="26"/></literal></expr>)<pos:position pos:line="50" pos:column="27"/></condition><then pos:line="50" pos:column="27">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="11">ret<pos:position pos:line="51" pos:column="14"/></name> <operator pos:line="51" pos:column="15">=<pos:position pos:line="51" pos:column="16"/></operator> <operator pos:line="51" pos:column="17">-<pos:position pos:line="51" pos:column="18"/></operator><literal type="number" pos:line="51" pos:column="18">1<pos:position pos:line="51" pos:column="19"/></literal></expr>;<pos:position pos:line="51" pos:column="20"/></expr_stmt></block></then></if></elseif></if>
      }<pos:position pos:line="52" pos:column="8"/></block></then></if>
    }<pos:position pos:line="53" pos:column="6"/></block></then>
    <else pos:line="54" pos:column="5">else
    <block pos:line="55" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="56" pos:column="7">mutt_perror<pos:position pos:line="56" pos:column="18"/></name> <argument_list pos:line="56" pos:column="19">(<argument><expr><name pos:line="56" pos:column="20">s<pos:position pos:line="56" pos:column="21"/></name></expr></argument>)<pos:position pos:line="56" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="23"/></expr_stmt>
      <return pos:line="57" pos:column="7">return <expr><literal type="number" pos:line="57" pos:column="14">1<pos:position pos:line="57" pos:column="15"/></literal></expr>;<pos:position pos:line="57" pos:column="16"/></return>
    }<pos:position pos:line="58" pos:column="6"/></block></else></if>
  }<pos:position pos:line="59" pos:column="4"/></block></then></if></elseif></if>

  <expr_stmt><expr><call><name pos:line="61" pos:column="3">CLEARLINE<pos:position pos:line="61" pos:column="12"/></name> <argument_list pos:line="61" pos:column="13">(<argument><expr><name pos:line="61" pos:column="14">LINES<pos:position pos:line="61" pos:column="19"/></name><operator pos:line="61" pos:column="19">-<pos:position pos:line="61" pos:column="20"/></operator><literal type="number" pos:line="61" pos:column="20">1<pos:position pos:line="61" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="23"/></expr_stmt>
  <return pos:line="62" pos:column="3">return <expr><operator pos:line="62" pos:column="10">(<pos:position pos:line="62" pos:column="11"/></operator><name pos:line="62" pos:column="11">ret<pos:position pos:line="62" pos:column="14"/></name><operator pos:line="62" pos:column="14">)<pos:position pos:line="62" pos:column="15"/></operator></expr>;<pos:position pos:line="62" pos:column="16"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

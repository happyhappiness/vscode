<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_226_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BODY<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">pgp_decrypt_part<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">BODY<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">a<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">STATE<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">s<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">FILE<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">fpout<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">BODY<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">p<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buf<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">LONG_STRING<pos:position pos:line="3" pos:column="23"/></name></expr>]<pos:position pos:line="3" pos:column="24"/></index></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">FILE<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">pgpin<pos:position pos:line="4" pos:column="14"/></name></decl>, <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="17">pgpout<pos:position pos:line="4" pos:column="23"/></name></decl>, <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="26">pgperr<pos:position pos:line="4" pos:column="32"/></name></decl>, <modifier pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="35">pgptmp<pos:position pos:line="4" pos:column="41"/></name></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">stat<pos:position pos:line="5" pos:column="14"/></name></name></type> <name pos:line="5" pos:column="15">info<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">BODY<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">tattach<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">len<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">pgperrfile<pos:position pos:line="8" pos:column="18"/></name><index pos:line="8" pos:column="18">[<expr><name pos:line="8" pos:column="19">_POSIX_PATH_MAX<pos:position pos:line="8" pos:column="34"/></name></expr>]<pos:position pos:line="8" pos:column="35"/></index></name></decl>;<pos:position pos:line="8" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name></type> <name><name pos:line="9" pos:column="8">pgptmpfile<pos:position pos:line="9" pos:column="18"/></name><index pos:line="9" pos:column="18">[<expr><name pos:line="9" pos:column="19">_POSIX_PATH_MAX<pos:position pos:line="9" pos:column="34"/></name></expr>]<pos:position pos:line="9" pos:column="35"/></index></name></decl>;<pos:position pos:line="9" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">pid_t<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">thepid<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>
  
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">mutt_mktemp<pos:position pos:line="12" pos:column="14"/></name> <argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">pgperrfile<pos:position pos:line="12" pos:column="26"/></name></expr></argument>)<pos:position pos:line="12" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><operator pos:line="13" pos:column="7">(<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">pgperr<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <call><name pos:line="13" pos:column="17">safe_fopen<pos:position pos:line="13" pos:column="27"/></name> <argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">pgperrfile<pos:position pos:line="13" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="41">"w+"<pos:position pos:line="13" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="46"/></argument_list></call><operator pos:line="13" pos:column="46">)<pos:position pos:line="13" pos:column="47"/></operator> <operator pos:line="13" pos:column="48">==<pos:position pos:line="13" pos:column="50"/></operator> <name pos:line="13" pos:column="51">NULL<pos:position pos:line="13" pos:column="55"/></name></expr>)<pos:position pos:line="13" pos:column="56"/></condition><then pos:line="13" pos:column="56">
  <block pos:line="14" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">mutt_perror<pos:position pos:line="15" pos:column="16"/></name> <argument_list pos:line="15" pos:column="17">(<argument><expr><name pos:line="15" pos:column="18">pgperrfile<pos:position pos:line="15" pos:column="28"/></name></expr></argument>)<pos:position pos:line="15" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">NULL<pos:position pos:line="16" pos:column="16"/></name></expr>;<pos:position pos:line="16" pos:column="17"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">unlink<pos:position pos:line="18" pos:column="9"/></name> <argument_list pos:line="18" pos:column="10">(<argument><expr><name pos:line="18" pos:column="11">pgperrfile<pos:position pos:line="18" pos:column="21"/></name></expr></argument>)<pos:position pos:line="18" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">mutt_mktemp<pos:position pos:line="20" pos:column="14"/></name> <argument_list pos:line="20" pos:column="15">(<argument><expr><name pos:line="20" pos:column="16">pgptmpfile<pos:position pos:line="20" pos:column="26"/></name></expr></argument>)<pos:position pos:line="20" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt>
  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><operator pos:line="21" pos:column="6">(<pos:position pos:line="21" pos:column="7"/></operator><name pos:line="21" pos:column="7">pgptmp<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <call><name pos:line="21" pos:column="16">safe_fopen<pos:position pos:line="21" pos:column="26"/></name> <argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">pgptmpfile<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="40">"w"<pos:position pos:line="21" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></call><operator pos:line="21" pos:column="44">)<pos:position pos:line="21" pos:column="45"/></operator> <operator pos:line="21" pos:column="46">==<pos:position pos:line="21" pos:column="48"/></operator> <name pos:line="21" pos:column="49">NULL<pos:position pos:line="21" pos:column="53"/></name></expr>)<pos:position pos:line="21" pos:column="54"/></condition><then pos:line="21" pos:column="54">
  <block pos:line="22" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">mutt_perror<pos:position pos:line="23" pos:column="16"/></name> <argument_list pos:line="23" pos:column="17">(<argument><expr><name pos:line="23" pos:column="18">pgptmpfile<pos:position pos:line="23" pos:column="28"/></name></expr></argument>)<pos:position pos:line="23" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">fclose<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><name pos:line="24" pos:column="12">pgperr<pos:position pos:line="24" pos:column="18"/></name></expr></argument>)<pos:position pos:line="24" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="20"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">NULL<pos:position pos:line="25" pos:column="16"/></name></expr>;<pos:position pos:line="25" pos:column="17"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="28" pos:column="3">/* Position the stream at the beginning of the body, and send the data to
   * the temporary file.
   */</comment>

  <expr_stmt><expr><call><name pos:line="32" pos:column="3">fseek<pos:position pos:line="32" pos:column="8"/></name> <argument_list pos:line="32" pos:column="9">(<argument><expr><name><name pos:line="32" pos:column="10">s<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">-&gt;<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="13">fpin<pos:position pos:line="32" pos:column="17"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="19">a<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="22">offset<pos:position pos:line="32" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="30">0<pos:position pos:line="32" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">mutt_copy_bytes<pos:position pos:line="33" pos:column="18"/></name> <argument_list pos:line="33" pos:column="19">(<argument><expr><name><name pos:line="33" pos:column="20">s<pos:position pos:line="33" pos:column="21"/></name><operator pos:line="33" pos:column="21">-&gt;<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="23">fpin<pos:position pos:line="33" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="29">pgptmp<pos:position pos:line="33" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="37">a<pos:position pos:line="33" pos:column="38"/></name><operator pos:line="33" pos:column="38">-&gt;<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="40">length<pos:position pos:line="33" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">fclose<pos:position pos:line="34" pos:column="9"/></name> <argument_list pos:line="34" pos:column="10">(<argument><expr><name pos:line="34" pos:column="11">pgptmp<pos:position pos:line="34" pos:column="17"/></name></expr></argument>)<pos:position pos:line="34" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="19"/></expr_stmt>

  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><operator pos:line="36" pos:column="7">(<pos:position pos:line="36" pos:column="8"/></operator><name pos:line="36" pos:column="8">thepid<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <call><name pos:line="36" pos:column="17">pgp_invoke_decrypt<pos:position pos:line="36" pos:column="35"/></name> <argument_list pos:line="36" pos:column="36">(<argument><expr><operator pos:line="36" pos:column="37">&amp;<pos:position pos:line="36" pos:column="42"/></operator><name pos:line="36" pos:column="38">pgpin<pos:position pos:line="36" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="45">&amp;<pos:position pos:line="36" pos:column="50"/></operator><name pos:line="36" pos:column="46">pgpout<pos:position pos:line="36" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="54">NULL<pos:position pos:line="36" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="60">-<pos:position pos:line="36" pos:column="61"/></operator><literal type="number" pos:line="36" pos:column="61">1<pos:position pos:line="36" pos:column="62"/></literal></expr></argument>, <argument><expr><operator pos:line="36" pos:column="64">-<pos:position pos:line="36" pos:column="65"/></operator><literal type="number" pos:line="36" pos:column="65">1<pos:position pos:line="36" pos:column="66"/></literal></expr></argument>,
				    <argument><expr><call><name pos:line="37" pos:column="37">fileno<pos:position pos:line="37" pos:column="43"/></name> <argument_list pos:line="37" pos:column="44">(<argument><expr><name pos:line="37" pos:column="45">pgperr<pos:position pos:line="37" pos:column="51"/></name></expr></argument>)<pos:position pos:line="37" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="37" pos:column="54">pgptmpfile<pos:position pos:line="37" pos:column="64"/></name></expr></argument>)<pos:position pos:line="37" pos:column="65"/></argument_list></call><operator pos:line="37" pos:column="65">)<pos:position pos:line="37" pos:column="66"/></operator> <operator pos:line="37" pos:column="67">==<pos:position pos:line="37" pos:column="69"/></operator> <operator pos:line="37" pos:column="70">-<pos:position pos:line="37" pos:column="71"/></operator><literal type="number" pos:line="37" pos:column="71">1<pos:position pos:line="37" pos:column="72"/></literal></expr>)<pos:position pos:line="37" pos:column="73"/></condition><then pos:line="37" pos:column="73">
  <block pos:line="38" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">fclose<pos:position pos:line="39" pos:column="11"/></name> <argument_list pos:line="39" pos:column="12">(<argument><expr><name pos:line="39" pos:column="13">pgperr<pos:position pos:line="39" pos:column="19"/></name></expr></argument>)<pos:position pos:line="39" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">unlink<pos:position pos:line="40" pos:column="11"/></name> <argument_list pos:line="40" pos:column="12">(<argument><expr><name pos:line="40" pos:column="13">pgptmpfile<pos:position pos:line="40" pos:column="23"/></name></expr></argument>)<pos:position pos:line="40" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name><name pos:line="41" pos:column="9">s<pos:position pos:line="41" pos:column="10"/></name><operator pos:line="41" pos:column="10">-&gt;<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="12">flags<pos:position pos:line="41" pos:column="17"/></name></name> <operator pos:line="41" pos:column="18">&amp;<pos:position pos:line="41" pos:column="23"/></operator> <name pos:line="41" pos:column="20">M_DISPLAY<pos:position pos:line="41" pos:column="29"/></name></expr>)<pos:position pos:line="41" pos:column="30"/></condition><then pos:line="41" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="7">state_attach_puts<pos:position pos:line="42" pos:column="24"/></name> <argument_list pos:line="42" pos:column="25">(<argument><expr><call><name pos:line="42" pos:column="26">_<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><literal type="string" pos:line="42" pos:column="28">"[-- Error: could not create a PGP subprocess! --]\n\n"<pos:position pos:line="42" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="84"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="42" pos:column="86">s<pos:position pos:line="42" pos:column="87"/></name></expr></argument>)<pos:position pos:line="42" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="89"/></expr_stmt></block></then></if>
    <return pos:line="43" pos:column="5">return <expr><operator pos:line="43" pos:column="12">(<pos:position pos:line="43" pos:column="13"/></operator><name pos:line="43" pos:column="13">NULL<pos:position pos:line="43" pos:column="17"/></name><operator pos:line="43" pos:column="17">)<pos:position pos:line="43" pos:column="18"/></operator></expr>;<pos:position pos:line="43" pos:column="19"/></return>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="46" pos:column="3">/* send the PGP passphrase to the subprocess */</comment>
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">fputs<pos:position pos:line="47" pos:column="8"/></name> <argument_list pos:line="47" pos:column="9">(<argument><expr><name pos:line="47" pos:column="10">PgpPass<pos:position pos:line="47" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="19">pgpin<pos:position pos:line="47" pos:column="24"/></name></expr></argument>)<pos:position pos:line="47" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="48" pos:column="3">fputc<pos:position pos:line="48" pos:column="8"/></name> <argument_list pos:line="48" pos:column="9">(<argument><expr><literal type="char" pos:line="48" pos:column="10">'\n'<pos:position pos:line="48" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="16">pgpin<pos:position pos:line="48" pos:column="21"/></name></expr></argument>)<pos:position pos:line="48" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="49" pos:column="3">fclose<pos:position pos:line="49" pos:column="9"/></name><argument_list pos:line="49" pos:column="9">(<argument><expr><name pos:line="49" pos:column="10">pgpin<pos:position pos:line="49" pos:column="15"/></name></expr></argument>)<pos:position pos:line="49" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="17"/></expr_stmt>
  
  <comment type="block" pos:line="51" pos:column="3">/* Read the output from PGP, and make sure to change CRLF to LF, otherwise
   * read_mime_header has a hard time parsing the message.
   */</comment>
  <while pos:line="54" pos:column="3">while <condition pos:line="54" pos:column="9">(<expr><call><name pos:line="54" pos:column="10">fgets<pos:position pos:line="54" pos:column="15"/></name> <argument_list pos:line="54" pos:column="16">(<argument><expr><name pos:line="54" pos:column="17">buf<pos:position pos:line="54" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="54" pos:column="22">sizeof <argument_list pos:line="54" pos:column="29">(<argument><expr><name pos:line="54" pos:column="30">buf<pos:position pos:line="54" pos:column="33"/></name></expr></argument>)<pos:position pos:line="54" pos:column="34"/></argument_list></sizeof> <operator pos:line="54" pos:column="35">-<pos:position pos:line="54" pos:column="36"/></operator> <literal type="number" pos:line="54" pos:column="37">1<pos:position pos:line="54" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="40">pgpout<pos:position pos:line="54" pos:column="46"/></name></expr></argument>)<pos:position pos:line="54" pos:column="47"/></argument_list></call> <operator pos:line="54" pos:column="48">!=<pos:position pos:line="54" pos:column="50"/></operator> <name pos:line="54" pos:column="51">NULL<pos:position pos:line="54" pos:column="55"/></name></expr>)<pos:position pos:line="54" pos:column="56"/></condition>
  <block pos:line="55" pos:column="3">{
    <expr_stmt><expr><name pos:line="56" pos:column="5">len<pos:position pos:line="56" pos:column="8"/></name> <operator pos:line="56" pos:column="9">=<pos:position pos:line="56" pos:column="10"/></operator> <call><name pos:line="56" pos:column="11">mutt_strlen<pos:position pos:line="56" pos:column="22"/></name> <argument_list pos:line="56" pos:column="23">(<argument><expr><name pos:line="56" pos:column="24">buf<pos:position pos:line="56" pos:column="27"/></name></expr></argument>)<pos:position pos:line="56" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="29"/></expr_stmt>
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><name pos:line="57" pos:column="9">len<pos:position pos:line="57" pos:column="12"/></name> <operator pos:line="57" pos:column="13">&gt;<pos:position pos:line="57" pos:column="17"/></operator> <literal type="number" pos:line="57" pos:column="15">1<pos:position pos:line="57" pos:column="16"/></literal> <operator pos:line="57" pos:column="17">&amp;&amp;<pos:position pos:line="57" pos:column="27"/></operator> <name><name pos:line="57" pos:column="20">buf<pos:position pos:line="57" pos:column="23"/></name><index pos:line="57" pos:column="23">[<expr><name pos:line="57" pos:column="24">len<pos:position pos:line="57" pos:column="27"/></name> <operator pos:line="57" pos:column="28">-<pos:position pos:line="57" pos:column="29"/></operator> <literal type="number" pos:line="57" pos:column="30">2<pos:position pos:line="57" pos:column="31"/></literal></expr>]<pos:position pos:line="57" pos:column="32"/></index></name> <operator pos:line="57" pos:column="33">==<pos:position pos:line="57" pos:column="35"/></operator> <literal type="char" pos:line="57" pos:column="36">'\r'<pos:position pos:line="57" pos:column="40"/></literal></expr>)<pos:position pos:line="57" pos:column="41"/></condition><then pos:line="57" pos:column="41">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="7">strcpy<pos:position pos:line="58" pos:column="13"/></name> <argument_list pos:line="58" pos:column="14">(<argument><expr><name pos:line="58" pos:column="15">buf<pos:position pos:line="58" pos:column="18"/></name> <operator pos:line="58" pos:column="19">+<pos:position pos:line="58" pos:column="20"/></operator> <name pos:line="58" pos:column="21">len<pos:position pos:line="58" pos:column="24"/></name> <operator pos:line="58" pos:column="25">-<pos:position pos:line="58" pos:column="26"/></operator> <literal type="number" pos:line="58" pos:column="27">2<pos:position pos:line="58" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="30">"\n"<pos:position pos:line="58" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="36"/></expr_stmt></block></then></if>	<comment type="block" pos:line="58" pos:column="41">/* __STRCPY_CHECKED__ */</comment>
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">fputs<pos:position pos:line="59" pos:column="10"/></name> <argument_list pos:line="59" pos:column="11">(<argument><expr><name pos:line="59" pos:column="12">buf<pos:position pos:line="59" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="17">fpout<pos:position pos:line="59" pos:column="22"/></name></expr></argument>)<pos:position pos:line="59" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="60" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="62" pos:column="3">fclose<pos:position pos:line="62" pos:column="9"/></name> <argument_list pos:line="62" pos:column="10">(<argument><expr><name pos:line="62" pos:column="11">pgpout<pos:position pos:line="62" pos:column="17"/></name></expr></argument>)<pos:position pos:line="62" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="63" pos:column="3">mutt_wait_filter<pos:position pos:line="63" pos:column="19"/></name> <argument_list pos:line="63" pos:column="20">(<argument><expr><name pos:line="63" pos:column="21">thepid<pos:position pos:line="63" pos:column="27"/></name></expr></argument>)<pos:position pos:line="63" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="64" pos:column="3">mutt_unlink<pos:position pos:line="64" pos:column="14"/></name><argument_list pos:line="64" pos:column="14">(<argument><expr><name pos:line="64" pos:column="15">pgptmpfile<pos:position pos:line="64" pos:column="25"/></name></expr></argument>)<pos:position pos:line="64" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="27"/></expr_stmt>
  
  <if pos:line="66" pos:column="3">if <condition pos:line="66" pos:column="6">(<expr><name><name pos:line="66" pos:column="7">s<pos:position pos:line="66" pos:column="8"/></name><operator pos:line="66" pos:column="8">-&gt;<pos:position pos:line="66" pos:column="13"/></operator><name pos:line="66" pos:column="10">flags<pos:position pos:line="66" pos:column="15"/></name></name> <operator pos:line="66" pos:column="16">&amp;<pos:position pos:line="66" pos:column="21"/></operator> <name pos:line="66" pos:column="18">M_DISPLAY<pos:position pos:line="66" pos:column="27"/></name></expr>)<pos:position pos:line="66" pos:column="28"/></condition><then pos:line="66" pos:column="28">
  <block pos:line="67" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">fflush<pos:position pos:line="68" pos:column="11"/></name> <argument_list pos:line="68" pos:column="12">(<argument><expr><name pos:line="68" pos:column="13">pgperr<pos:position pos:line="68" pos:column="19"/></name></expr></argument>)<pos:position pos:line="68" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="69" pos:column="5">rewind<pos:position pos:line="69" pos:column="11"/></name> <argument_list pos:line="69" pos:column="12">(<argument><expr><name pos:line="69" pos:column="13">pgperr<pos:position pos:line="69" pos:column="19"/></name></expr></argument>)<pos:position pos:line="69" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="21"/></expr_stmt>
    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><call><name pos:line="70" pos:column="9">pgp_copy_checksig<pos:position pos:line="70" pos:column="26"/></name> <argument_list pos:line="70" pos:column="27">(<argument><expr><name pos:line="70" pos:column="28">pgperr<pos:position pos:line="70" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="36">s<pos:position pos:line="70" pos:column="37"/></name><operator pos:line="70" pos:column="37">-&gt;<pos:position pos:line="70" pos:column="42"/></operator><name pos:line="70" pos:column="39">fpout<pos:position pos:line="70" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="45"/></argument_list></call> <operator pos:line="70" pos:column="46">==<pos:position pos:line="70" pos:column="48"/></operator> <literal type="number" pos:line="70" pos:column="49">0<pos:position pos:line="70" pos:column="50"/></literal> <operator pos:line="70" pos:column="51">&amp;&amp;<pos:position pos:line="70" pos:column="61"/></operator> <name pos:line="70" pos:column="54">p<pos:position pos:line="70" pos:column="55"/></name></expr>)<pos:position pos:line="70" pos:column="56"/></condition><then pos:line="70" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="71" pos:column="7">p<pos:position pos:line="71" pos:column="8"/></name><operator pos:line="71" pos:column="8">-&gt;<pos:position pos:line="71" pos:column="13"/></operator><name pos:line="71" pos:column="10">goodsig<pos:position pos:line="71" pos:column="17"/></name></name> <operator pos:line="71" pos:column="18">=<pos:position pos:line="71" pos:column="19"/></operator> <literal type="number" pos:line="71" pos:column="20">1<pos:position pos:line="71" pos:column="21"/></literal></expr>;<pos:position pos:line="71" pos:column="22"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">state_attach_puts<pos:position pos:line="72" pos:column="22"/></name> <argument_list pos:line="72" pos:column="23">(<argument><expr><call><name pos:line="72" pos:column="24">_<pos:position pos:line="72" pos:column="25"/></name><argument_list pos:line="72" pos:column="25">(<argument><expr><literal type="string" pos:line="72" pos:column="26">"[-- End of PGP output --]\n\n"<pos:position pos:line="72" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="72" pos:column="60">s<pos:position pos:line="72" pos:column="61"/></name></expr></argument>)<pos:position pos:line="72" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="63"/></expr_stmt>
  }<pos:position pos:line="73" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="74" pos:column="3">fclose<pos:position pos:line="74" pos:column="9"/></name> <argument_list pos:line="74" pos:column="10">(<argument><expr><name pos:line="74" pos:column="11">pgperr<pos:position pos:line="74" pos:column="17"/></name></expr></argument>)<pos:position pos:line="74" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="76" pos:column="3">fflush<pos:position pos:line="76" pos:column="9"/></name> <argument_list pos:line="76" pos:column="10">(<argument><expr><name pos:line="76" pos:column="11">fpout<pos:position pos:line="76" pos:column="16"/></name></expr></argument>)<pos:position pos:line="76" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="77" pos:column="3">rewind<pos:position pos:line="77" pos:column="9"/></name> <argument_list pos:line="77" pos:column="10">(<argument><expr><name pos:line="77" pos:column="11">fpout<pos:position pos:line="77" pos:column="16"/></name></expr></argument>)<pos:position pos:line="77" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="18"/></expr_stmt>
  <if pos:line="78" pos:column="3">if <condition pos:line="78" pos:column="6">(<expr><operator pos:line="78" pos:column="7">(<pos:position pos:line="78" pos:column="8"/></operator><name pos:line="78" pos:column="8">tattach<pos:position pos:line="78" pos:column="15"/></name> <operator pos:line="78" pos:column="16">=<pos:position pos:line="78" pos:column="17"/></operator> <call><name pos:line="78" pos:column="18">mutt_read_mime_header<pos:position pos:line="78" pos:column="39"/></name> <argument_list pos:line="78" pos:column="40">(<argument><expr><name pos:line="78" pos:column="41">fpout<pos:position pos:line="78" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="48">0<pos:position pos:line="78" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="50"/></argument_list></call><operator pos:line="78" pos:column="50">)<pos:position pos:line="78" pos:column="51"/></operator> <operator pos:line="78" pos:column="52">!=<pos:position pos:line="78" pos:column="54"/></operator> <name pos:line="78" pos:column="55">NULL<pos:position pos:line="78" pos:column="59"/></name></expr>)<pos:position pos:line="78" pos:column="60"/></condition><then pos:line="78" pos:column="60">
  <block pos:line="79" pos:column="3">{
    <comment type="block" pos:line="80" pos:column="5">/*
     * Need to set the length of this body part.
     */</comment>
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">fstat<pos:position pos:line="83" pos:column="10"/></name> <argument_list pos:line="83" pos:column="11">(<argument><expr><call><name pos:line="83" pos:column="12">fileno<pos:position pos:line="83" pos:column="18"/></name> <argument_list pos:line="83" pos:column="19">(<argument><expr><name pos:line="83" pos:column="20">fpout<pos:position pos:line="83" pos:column="25"/></name></expr></argument>)<pos:position pos:line="83" pos:column="26"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="83" pos:column="28">&amp;<pos:position pos:line="83" pos:column="33"/></operator><name pos:line="83" pos:column="29">info<pos:position pos:line="83" pos:column="33"/></name></expr></argument>)<pos:position pos:line="83" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="84" pos:column="5">tattach<pos:position pos:line="84" pos:column="12"/></name><operator pos:line="84" pos:column="12">-&gt;<pos:position pos:line="84" pos:column="17"/></operator><name pos:line="84" pos:column="14">length<pos:position pos:line="84" pos:column="20"/></name></name> <operator pos:line="84" pos:column="21">=<pos:position pos:line="84" pos:column="22"/></operator> <name><name pos:line="84" pos:column="23">info<pos:position pos:line="84" pos:column="27"/></name><operator pos:line="84" pos:column="27">.<pos:position pos:line="84" pos:column="28"/></operator><name pos:line="84" pos:column="28">st_size<pos:position pos:line="84" pos:column="35"/></name></name> <operator pos:line="84" pos:column="36">-<pos:position pos:line="84" pos:column="37"/></operator> <name><name pos:line="84" pos:column="38">tattach<pos:position pos:line="84" pos:column="45"/></name><operator pos:line="84" pos:column="45">-&gt;<pos:position pos:line="84" pos:column="50"/></operator><name pos:line="84" pos:column="47">offset<pos:position pos:line="84" pos:column="53"/></name></name></expr>;<pos:position pos:line="84" pos:column="54"/></expr_stmt>

    <comment type="block" pos:line="86" pos:column="5">/* See if we need to recurse on this MIME part.  */</comment>

    <expr_stmt><expr><call><name pos:line="88" pos:column="5">mutt_parse_part<pos:position pos:line="88" pos:column="20"/></name> <argument_list pos:line="88" pos:column="21">(<argument><expr><name pos:line="88" pos:column="22">fpout<pos:position pos:line="88" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="29">tattach<pos:position pos:line="88" pos:column="36"/></name></expr></argument>)<pos:position pos:line="88" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="89" pos:column="4"/></block></then></if>

  <return pos:line="91" pos:column="3">return <expr><operator pos:line="91" pos:column="10">(<pos:position pos:line="91" pos:column="11"/></operator><name pos:line="91" pos:column="11">tattach<pos:position pos:line="91" pos:column="18"/></name><operator pos:line="91" pos:column="18">)<pos:position pos:line="91" pos:column="19"/></operator></expr>;<pos:position pos:line="91" pos:column="20"/></return>
}<pos:position pos:line="92" pos:column="2"/></block></function></unit>

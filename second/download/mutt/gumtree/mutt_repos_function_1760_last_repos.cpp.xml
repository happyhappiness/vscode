<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1760_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_replace_list<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">BUFFER<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">buf<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">BUFFER<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">s<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">unsigned<pos:position pos:line="1" pos:column="64"/></name> <name pos:line="1" pos:column="65">long<pos:position pos:line="1" pos:column="69"/></name></type> <name pos:line="1" pos:column="70">data<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="76">BUFFER<pos:position pos:line="1" pos:column="82"/></name> <modifier pos:line="1" pos:column="83">*<pos:position pos:line="1" pos:column="84"/></modifier></type><name pos:line="1" pos:column="84">err<pos:position pos:line="1" pos:column="87"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="88"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">REPLACE_LIST<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier><modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">list<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><operator pos:line="3" pos:column="25">(<pos:position pos:line="3" pos:column="26"/></operator><name pos:line="3" pos:column="26">REPLACE_LIST<pos:position pos:line="3" pos:column="38"/></name> <operator pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></operator><operator pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></operator><operator pos:line="3" pos:column="41">)<pos:position pos:line="3" pos:column="42"/></operator><name pos:line="3" pos:column="42">data<pos:position pos:line="3" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="47"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">BUFFER<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">templ<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">memset<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><operator pos:line="6" pos:column="10">&amp;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="11">templ<pos:position pos:line="6" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="21">sizeof<argument_list pos:line="6" pos:column="27">(<argument><expr><name pos:line="6" pos:column="28">templ<pos:position pos:line="6" pos:column="33"/></name></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="36"/></expr_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* First token is a regexp. */</comment>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">!<pos:position pos:line="9" pos:column="8"/></operator><call><name pos:line="9" pos:column="8">MoreArgs<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">s<pos:position pos:line="9" pos:column="18"/></name></expr></argument>)<pos:position pos:line="9" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="20"/></condition><then pos:line="9" pos:column="20">
  <block pos:line="10" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">strfcpy<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><name><name pos:line="11" pos:column="13">err<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">-&gt;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="18">data<pos:position pos:line="11" pos:column="22"/></name></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="24">_<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><literal type="string" pos:line="11" pos:column="26">"not enough arguments"<pos:position pos:line="11" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="51">err<pos:position pos:line="11" pos:column="54"/></name><operator pos:line="11" pos:column="54">-&gt;<pos:position pos:line="11" pos:column="59"/></operator><name pos:line="11" pos:column="56">dsize<pos:position pos:line="11" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="63"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">-<pos:position pos:line="12" pos:column="13"/></operator><literal type="number" pos:line="12" pos:column="13">1<pos:position pos:line="12" pos:column="14"/></literal></expr>;<pos:position pos:line="12" pos:column="15"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">mutt_extract_token<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">buf<pos:position pos:line="14" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="27">s<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="30">0<pos:position pos:line="14" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>

  <comment type="block" pos:line="16" pos:column="3">/* Second token is a replacement template */</comment>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">!<pos:position pos:line="17" pos:column="8"/></operator><call><name pos:line="17" pos:column="8">MoreArgs<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">s<pos:position pos:line="17" pos:column="18"/></name></expr></argument>)<pos:position pos:line="17" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="20"/></condition><then pos:line="17" pos:column="20">
  <block pos:line="18" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">strfcpy<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name><name pos:line="19" pos:column="13">err<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">-&gt;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="18">data<pos:position pos:line="19" pos:column="22"/></name></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="24">_<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><literal type="string" pos:line="19" pos:column="26">"not enough arguments"<pos:position pos:line="19" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="51">err<pos:position pos:line="19" pos:column="54"/></name><operator pos:line="19" pos:column="54">-&gt;<pos:position pos:line="19" pos:column="59"/></operator><name pos:line="19" pos:column="56">dsize<pos:position pos:line="19" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="63"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">-<pos:position pos:line="20" pos:column="13"/></operator><literal type="number" pos:line="20" pos:column="13">1<pos:position pos:line="20" pos:column="14"/></literal></expr>;<pos:position pos:line="20" pos:column="15"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">mutt_extract_token<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><operator pos:line="22" pos:column="22">&amp;<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="23">templ<pos:position pos:line="22" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="30">s<pos:position pos:line="22" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="33">0<pos:position pos:line="22" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>

  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><call><name pos:line="24" pos:column="7">add_to_replace_list<pos:position pos:line="24" pos:column="26"/></name><argument_list pos:line="24" pos:column="26">(<argument><expr><name pos:line="24" pos:column="27">list<pos:position pos:line="24" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="33">buf<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">-&gt;<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="38">data<pos:position pos:line="24" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="44">templ<pos:position pos:line="24" pos:column="49"/></name><operator pos:line="24" pos:column="49">.<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="50">data<pos:position pos:line="24" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="56">err<pos:position pos:line="24" pos:column="59"/></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call> <operator pos:line="24" pos:column="61">!=<pos:position pos:line="24" pos:column="63"/></operator> <literal type="number" pos:line="24" pos:column="64">0<pos:position pos:line="24" pos:column="65"/></literal></expr>)<pos:position pos:line="24" pos:column="66"/></condition><then pos:line="24" pos:column="66"> <block pos:line="24" pos:column="67">{
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">FREE<pos:position pos:line="25" pos:column="9"/></name><argument_list pos:line="25" pos:column="9">(<argument><expr><operator pos:line="25" pos:column="10">&amp;<pos:position pos:line="25" pos:column="15"/></operator><name><name pos:line="25" pos:column="11">templ<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">.<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">data<pos:position pos:line="25" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
    <return pos:line="26" pos:column="5">return <expr><operator pos:line="26" pos:column="12">-<pos:position pos:line="26" pos:column="13"/></operator><literal type="number" pos:line="26" pos:column="13">1<pos:position pos:line="26" pos:column="14"/></literal></expr>;<pos:position pos:line="26" pos:column="15"/></return>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">FREE<pos:position pos:line="28" pos:column="7"/></name><argument_list pos:line="28" pos:column="7">(<argument><expr><operator pos:line="28" pos:column="8">&amp;<pos:position pos:line="28" pos:column="13"/></operator><name><name pos:line="28" pos:column="9">templ<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">.<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="15">data<pos:position pos:line="28" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt>

  <return pos:line="30" pos:column="3">return <expr><literal type="number" pos:line="30" pos:column="10">0<pos:position pos:line="30" pos:column="11"/></literal></expr>;<pos:position pos:line="30" pos:column="12"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

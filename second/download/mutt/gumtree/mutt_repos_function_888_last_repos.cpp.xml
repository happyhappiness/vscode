<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_888_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">add_entropy<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">file<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">stat<pos:position pos:line="3" pos:column="14"/></name></name></type> <name pos:line="3" pos:column="15">st<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">n<pos:position pos:line="4" pos:column="8"/></name> <init pos:line="4" pos:column="9">= <expr><operator pos:line="4" pos:column="11">-<pos:position pos:line="4" pos:column="12"/></operator><literal type="number" pos:line="4" pos:column="12">1<pos:position pos:line="4" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">!<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">file<pos:position pos:line="6" pos:column="12"/></name></expr>)<pos:position pos:line="6" pos:column="13"/></condition><then pos:line="6" pos:column="13"> <block type="pseudo"><return pos:line="6" pos:column="14">return <expr><literal type="number" pos:line="6" pos:column="21">0<pos:position pos:line="6" pos:column="22"/></literal></expr>;<pos:position pos:line="6" pos:column="23"/></return></block></then></if>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><call><name pos:line="8" pos:column="7">stat<pos:position pos:line="8" pos:column="11"/></name> <argument_list pos:line="8" pos:column="12">(<argument><expr><name pos:line="8" pos:column="13">file<pos:position pos:line="8" pos:column="17"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="19">&amp;<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="20">st<pos:position pos:line="8" pos:column="22"/></name></expr></argument>)<pos:position pos:line="8" pos:column="23"/></argument_list></call> <operator pos:line="8" pos:column="24">==<pos:position pos:line="8" pos:column="26"/></operator> <operator pos:line="8" pos:column="27">-<pos:position pos:line="8" pos:column="28"/></operator><literal type="number" pos:line="8" pos:column="28">1<pos:position pos:line="8" pos:column="29"/></literal></expr>)<pos:position pos:line="8" pos:column="30"/></condition><then pos:line="8" pos:column="30">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><ternary><condition><expr><name pos:line="9" pos:column="12">errno<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">==<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">ENOENT<pos:position pos:line="9" pos:column="27"/></name></expr> ?<pos:position pos:line="9" pos:column="29"/></condition><then pos:line="9" pos:column="29"> <expr><literal type="number" pos:line="9" pos:column="30">0<pos:position pos:line="9" pos:column="31"/></literal></expr> <pos:position pos:line="9" pos:column="32"/></then><else pos:line="9" pos:column="32">: <expr><operator pos:line="9" pos:column="34">-<pos:position pos:line="9" pos:column="35"/></operator><literal type="number" pos:line="9" pos:column="35">1<pos:position pos:line="9" pos:column="36"/></literal></expr></else></ternary></expr>;<pos:position pos:line="9" pos:column="37"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">mutt_message<pos:position pos:line="11" pos:column="15"/></name> <argument_list pos:line="11" pos:column="16">(<argument><expr><call><name pos:line="11" pos:column="17">_<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><literal type="string" pos:line="11" pos:column="19">"Filling entropy pool: %s...\n"<pos:position pos:line="11" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr></argument>,
		<argument><expr><name pos:line="12" pos:column="17">file<pos:position pos:line="12" pos:column="21"/></name></expr></argument>)<pos:position pos:line="12" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>

  <comment type="block" pos:line="14" pos:column="3">/* check that the file permissions are secure */</comment>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name><name pos:line="15" pos:column="7">st<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">.<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">st_uid<pos:position pos:line="15" pos:column="16"/></name></name> <operator pos:line="15" pos:column="17">!=<pos:position pos:line="15" pos:column="19"/></operator> <call><name pos:line="15" pos:column="20">getuid<pos:position pos:line="15" pos:column="26"/></name> <argument_list pos:line="15" pos:column="27">()<pos:position pos:line="15" pos:column="29"/></argument_list></call> <operator pos:line="15" pos:column="30">||<pos:position pos:line="15" pos:column="32"/></operator>
      <operator pos:line="16" pos:column="7">(<pos:position pos:line="16" pos:column="8"/></operator><operator pos:line="16" pos:column="8">(<pos:position pos:line="16" pos:column="9"/></operator><name><name pos:line="16" pos:column="9">st<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">.<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">st_mode<pos:position pos:line="16" pos:column="19"/></name></name> <operator pos:line="16" pos:column="20">&amp;<pos:position pos:line="16" pos:column="25"/></operator> <operator pos:line="16" pos:column="22">(<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="23">S_IWGRP<pos:position pos:line="16" pos:column="30"/></name> <operator pos:line="16" pos:column="31">|<pos:position pos:line="16" pos:column="32"/></operator> <name pos:line="16" pos:column="33">S_IRGRP<pos:position pos:line="16" pos:column="40"/></name><operator pos:line="16" pos:column="40">)<pos:position pos:line="16" pos:column="41"/></operator><operator pos:line="16" pos:column="41">)<pos:position pos:line="16" pos:column="42"/></operator> <operator pos:line="16" pos:column="43">!=<pos:position pos:line="16" pos:column="45"/></operator> <literal type="number" pos:line="16" pos:column="46">0<pos:position pos:line="16" pos:column="47"/></literal><operator pos:line="16" pos:column="47">)<pos:position pos:line="16" pos:column="48"/></operator> <operator pos:line="16" pos:column="49">||<pos:position pos:line="16" pos:column="51"/></operator>
      <operator pos:line="17" pos:column="7">(<pos:position pos:line="17" pos:column="8"/></operator><operator pos:line="17" pos:column="8">(<pos:position pos:line="17" pos:column="9"/></operator><name><name pos:line="17" pos:column="9">st<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">.<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="12">st_mode<pos:position pos:line="17" pos:column="19"/></name></name> <operator pos:line="17" pos:column="20">&amp;<pos:position pos:line="17" pos:column="25"/></operator> <operator pos:line="17" pos:column="22">(<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="23">S_IWOTH<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">|<pos:position pos:line="17" pos:column="32"/></operator> <name pos:line="17" pos:column="33">S_IROTH<pos:position pos:line="17" pos:column="40"/></name><operator pos:line="17" pos:column="40">)<pos:position pos:line="17" pos:column="41"/></operator><operator pos:line="17" pos:column="41">)<pos:position pos:line="17" pos:column="42"/></operator> <operator pos:line="17" pos:column="43">!=<pos:position pos:line="17" pos:column="45"/></operator> <literal type="number" pos:line="17" pos:column="46">0<pos:position pos:line="17" pos:column="47"/></literal><operator pos:line="17" pos:column="47">)<pos:position pos:line="17" pos:column="48"/></operator></expr>)<pos:position pos:line="17" pos:column="49"/></condition><then pos:line="17" pos:column="49">
  <block pos:line="18" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">mutt_error<pos:position pos:line="19" pos:column="15"/></name> <argument_list pos:line="19" pos:column="16">(<argument><expr><call><name pos:line="19" pos:column="17">_<pos:position pos:line="19" pos:column="18"/></name><argument_list pos:line="19" pos:column="18">(<argument><expr><literal type="string" pos:line="19" pos:column="19">"%s has insecure permissions!"<pos:position pos:line="19" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="19" pos:column="52">file<pos:position pos:line="19" pos:column="56"/></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">mutt_sleep<pos:position pos:line="20" pos:column="15"/></name> <argument_list pos:line="20" pos:column="16">(<argument><expr><literal type="number" pos:line="20" pos:column="17">2<pos:position pos:line="20" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="20"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">-<pos:position pos:line="21" pos:column="13"/></operator><literal type="number" pos:line="21" pos:column="13">1<pos:position pos:line="21" pos:column="14"/></literal></expr>;<pos:position pos:line="21" pos:column="15"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">ifdef<pos:position pos:line="24" pos:column="7"/></cpp:directive> <name pos:line="24" pos:column="8">HAVE_RAND_EGD<pos:position pos:line="24" pos:column="21"/></name></cpp:ifdef>
  <expr_stmt><expr><name pos:line="25" pos:column="3">n<pos:position pos:line="25" pos:column="4"/></name> <operator pos:line="25" pos:column="5">=<pos:position pos:line="25" pos:column="6"/></operator> <call><name pos:line="25" pos:column="7">RAND_egd<pos:position pos:line="25" pos:column="15"/></name> <argument_list pos:line="25" pos:column="16">(<argument><expr><name pos:line="25" pos:column="17">file<pos:position pos:line="25" pos:column="21"/></name></expr></argument>)<pos:position pos:line="25" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">n<pos:position pos:line="27" pos:column="8"/></name> <operator pos:line="27" pos:column="9">&lt;=<pos:position pos:line="27" pos:column="14"/></operator> <literal type="number" pos:line="27" pos:column="12">0<pos:position pos:line="27" pos:column="13"/></literal></expr>)<pos:position pos:line="27" pos:column="14"/></condition><then pos:line="27" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="5">n<pos:position pos:line="28" pos:column="6"/></name> <operator pos:line="28" pos:column="7">=<pos:position pos:line="28" pos:column="8"/></operator> <call><name pos:line="28" pos:column="9">RAND_load_file<pos:position pos:line="28" pos:column="23"/></name> <argument_list pos:line="28" pos:column="24">(<argument><expr><name pos:line="28" pos:column="25">file<pos:position pos:line="28" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="31">-<pos:position pos:line="28" pos:column="32"/></operator><literal type="number" pos:line="28" pos:column="32">1<pos:position pos:line="28" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt></block></then></if>

<cpp:ifndef pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">ifndef<pos:position pos:line="30" pos:column="8"/></cpp:directive> <name pos:line="30" pos:column="9">HAVE_RAND_STATUS<pos:position pos:line="30" pos:column="25"/></name></cpp:ifndef>
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name pos:line="31" pos:column="7">n<pos:position pos:line="31" pos:column="8"/></name> <operator pos:line="31" pos:column="9">&gt;<pos:position pos:line="31" pos:column="13"/></operator> <literal type="number" pos:line="31" pos:column="11">0<pos:position pos:line="31" pos:column="12"/></literal></expr>)<pos:position pos:line="31" pos:column="13"/></condition><then pos:line="31" pos:column="13"> <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="14">entropy_byte_count<pos:position pos:line="31" pos:column="32"/></name> <operator pos:line="31" pos:column="33">+=<pos:position pos:line="31" pos:column="35"/></operator> <name pos:line="31" pos:column="36">n<pos:position pos:line="31" pos:column="37"/></name></expr>;<pos:position pos:line="31" pos:column="38"/></expr_stmt></block></then></if>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif>
  <return pos:line="33" pos:column="3">return <expr><name pos:line="33" pos:column="10">n<pos:position pos:line="33" pos:column="11"/></name></expr>;<pos:position pos:line="33" pos:column="12"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

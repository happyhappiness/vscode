<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1669_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fetch_auth<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">line<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">void<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">data<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">POP_DATA<pos:position pos:line="3" pos:column="11"/></name> <modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type><name pos:line="3" pos:column="13">pop_data<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><operator pos:line="3" pos:column="24">(<pos:position pos:line="3" pos:column="25"/></operator><name pos:line="3" pos:column="25">POP_DATA<pos:position pos:line="3" pos:column="33"/></name> <operator pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></operator><operator pos:line="3" pos:column="35">)<pos:position pos:line="3" pos:column="36"/></operator><name pos:line="3" pos:column="36">data<pos:position pos:line="3" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">!<pos:position pos:line="5" pos:column="8"/></operator><name><name pos:line="5" pos:column="8">pop_data<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">-&gt;<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="18">auth_list<pos:position pos:line="5" pos:column="27"/></name></name></expr>)<pos:position pos:line="5" pos:column="28"/></condition><then pos:line="5" pos:column="28">
  <block pos:line="6" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">pop_data<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">auth_list<pos:position pos:line="7" pos:column="24"/></name></name> <operator pos:line="7" pos:column="25">=<pos:position pos:line="7" pos:column="26"/></operator> <call><name pos:line="7" pos:column="27">safe_malloc<pos:position pos:line="7" pos:column="38"/></name> <argument_list pos:line="7" pos:column="39">(<argument><expr><call><name pos:line="7" pos:column="40">strlen<pos:position pos:line="7" pos:column="46"/></name> <argument_list pos:line="7" pos:column="47">(<argument><expr><name pos:line="7" pos:column="48">line<pos:position pos:line="7" pos:column="52"/></name></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call> <operator pos:line="7" pos:column="54">+<pos:position pos:line="7" pos:column="55"/></operator> <literal type="number" pos:line="7" pos:column="56">1<pos:position pos:line="7" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="8" pos:column="5">*<pos:position pos:line="8" pos:column="6"/></operator><name><name pos:line="8" pos:column="6">pop_data<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">auth_list<pos:position pos:line="8" pos:column="25"/></name></name> <operator pos:line="8" pos:column="26">=<pos:position pos:line="8" pos:column="27"/></operator> <literal type="char" pos:line="8" pos:column="28">'\0'<pos:position pos:line="8" pos:column="32"/></literal></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="9" pos:column="4"/></block></then>
  <else pos:line="10" pos:column="3">else
  <block pos:line="11" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">safe_realloc<pos:position pos:line="12" pos:column="17"/></name> <argument_list pos:line="12" pos:column="18">(<argument><expr><operator pos:line="12" pos:column="19">&amp;<pos:position pos:line="12" pos:column="24"/></operator><name><name pos:line="12" pos:column="20">pop_data<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">-&gt;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="30">auth_list<pos:position pos:line="12" pos:column="39"/></name></name></expr></argument>,
	    <argument><expr><call><name pos:line="13" pos:column="13">strlen<pos:position pos:line="13" pos:column="19"/></name> <argument_list pos:line="13" pos:column="20">(<argument><expr><name><name pos:line="13" pos:column="21">pop_data<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">-&gt;<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="31">auth_list<pos:position pos:line="13" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call> <operator pos:line="13" pos:column="42">+<pos:position pos:line="13" pos:column="43"/></operator> <call><name pos:line="13" pos:column="44">strlen<pos:position pos:line="13" pos:column="50"/></name> <argument_list pos:line="13" pos:column="51">(<argument><expr><name pos:line="13" pos:column="52">line<pos:position pos:line="13" pos:column="56"/></name></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call> <operator pos:line="13" pos:column="58">+<pos:position pos:line="13" pos:column="59"/></operator> <literal type="number" pos:line="13" pos:column="60">2<pos:position pos:line="13" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">strcat<pos:position pos:line="14" pos:column="11"/></name> <argument_list pos:line="14" pos:column="12">(<argument><expr><name><name pos:line="14" pos:column="13">pop_data<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">-&gt;<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="23">auth_list<pos:position pos:line="14" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="34">" "<pos:position pos:line="14" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>	<comment type="block" pos:line="14" pos:column="41">/* __STRCAT_CHECKED__ */</comment>
  }<pos:position pos:line="15" pos:column="4"/></block></else></if>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">strcat<pos:position pos:line="16" pos:column="9"/></name> <argument_list pos:line="16" pos:column="10">(<argument><expr><name><name pos:line="16" pos:column="11">pop_data<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">-&gt;<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="21">auth_list<pos:position pos:line="16" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="32">line<pos:position pos:line="16" pos:column="36"/></name></expr></argument>)<pos:position pos:line="16" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="38"/></expr_stmt>	<comment type="block" pos:line="16" pos:column="41">/* __STRCAT_CHECKED__ */</comment>

  <return pos:line="18" pos:column="3">return <expr><literal type="number" pos:line="18" pos:column="10">0<pos:position pos:line="18" pos:column="11"/></literal></expr>;<pos:position pos:line="18" pos:column="12"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

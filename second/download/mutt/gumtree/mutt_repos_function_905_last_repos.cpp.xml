<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_905_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_certificate_file<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">X509<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">peercert<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">unsigned<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">char<pos:position pos:line="3" pos:column="16"/></name></type> <name><name pos:line="3" pos:column="17">peermd<pos:position pos:line="3" pos:column="23"/></name><index pos:line="3" pos:column="23">[<expr><name pos:line="3" pos:column="24">EVP_MAX_MD_SIZE<pos:position pos:line="3" pos:column="39"/></name></expr>]<pos:position pos:line="3" pos:column="40"/></index></name></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">unsigned<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">int<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">peermdlen<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">X509<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">cert<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><name pos:line="5" pos:column="16">NULL<pos:position pos:line="5" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">pass<pos:position pos:line="6" pos:column="11"/></name> <init pos:line="6" pos:column="12">= <expr><literal type="number" pos:line="6" pos:column="14">0<pos:position pos:line="6" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">FILE<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">fp<pos:position pos:line="7" pos:column="11"/></name></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">!<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">SslCertFile<pos:position pos:line="9" pos:column="19"/></name></expr>)<pos:position pos:line="9" pos:column="20"/></condition><then pos:line="9" pos:column="20">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><literal type="number" pos:line="10" pos:column="12">0<pos:position pos:line="10" pos:column="13"/></literal></expr>;<pos:position pos:line="10" pos:column="14"/></return></block></then></if>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">(<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">fp<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <call><name pos:line="12" pos:column="13">fopen<pos:position pos:line="12" pos:column="18"/></name> <argument_list pos:line="12" pos:column="19">(<argument><expr><name pos:line="12" pos:column="20">SslCertFile<pos:position pos:line="12" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="33">"rt"<pos:position pos:line="12" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="38"/></argument_list></call><operator pos:line="12" pos:column="38">)<pos:position pos:line="12" pos:column="39"/></operator> <operator pos:line="12" pos:column="40">==<pos:position pos:line="12" pos:column="42"/></operator> <name pos:line="12" pos:column="43">NULL<pos:position pos:line="12" pos:column="47"/></name></expr>)<pos:position pos:line="12" pos:column="48"/></condition><then pos:line="12" pos:column="48">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><literal type="number" pos:line="13" pos:column="12">0<pos:position pos:line="13" pos:column="13"/></literal></expr>;<pos:position pos:line="13" pos:column="14"/></return></block></then></if>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><operator pos:line="15" pos:column="7">!<pos:position pos:line="15" pos:column="8"/></operator><call><name pos:line="15" pos:column="8">X509_digest<pos:position pos:line="15" pos:column="19"/></name> <argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">peercert<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="31">EVP_sha256<pos:position pos:line="15" pos:column="41"/></name><argument_list pos:line="15" pos:column="41">()<pos:position pos:line="15" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="15" pos:column="45">peermd<pos:position pos:line="15" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="53">&amp;<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="54">peermdlen<pos:position pos:line="15" pos:column="63"/></name></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="65"/></condition><then pos:line="15" pos:column="65">
  <block pos:line="16" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">safe_fclose<pos:position pos:line="17" pos:column="16"/></name> <argument_list pos:line="17" pos:column="17">(<argument><expr><operator pos:line="17" pos:column="18">&amp;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="19">fp<pos:position pos:line="17" pos:column="21"/></name></expr></argument>)<pos:position pos:line="17" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><literal type="number" pos:line="18" pos:column="12">0<pos:position pos:line="18" pos:column="13"/></literal></expr>;<pos:position pos:line="18" pos:column="14"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <while pos:line="21" pos:column="3">while <condition pos:line="21" pos:column="9">(<expr><call><name pos:line="21" pos:column="10">PEM_read_X509<pos:position pos:line="21" pos:column="23"/></name> <argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">fp<pos:position pos:line="21" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="29">&amp;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="30">cert<pos:position pos:line="21" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="36">NULL<pos:position pos:line="21" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="42">NULL<pos:position pos:line="21" pos:column="46"/></name></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call> <operator pos:line="21" pos:column="48">!=<pos:position pos:line="21" pos:column="50"/></operator> <name pos:line="21" pos:column="51">NULL<pos:position pos:line="21" pos:column="55"/></name></expr>)<pos:position pos:line="21" pos:column="56"/></condition>
  <block pos:line="22" pos:column="3">{
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">(<pos:position pos:line="23" pos:column="10"/></operator><call><name pos:line="23" pos:column="10">compare_certificates<pos:position pos:line="23" pos:column="30"/></name> <argument_list pos:line="23" pos:column="31">(<argument><expr><name pos:line="23" pos:column="32">cert<pos:position pos:line="23" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="38">peercert<pos:position pos:line="23" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="48">peermd<pos:position pos:line="23" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="56">peermdlen<pos:position pos:line="23" pos:column="65"/></name></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></call> <operator pos:line="23" pos:column="67">==<pos:position pos:line="23" pos:column="69"/></operator> <literal type="number" pos:line="23" pos:column="70">0<pos:position pos:line="23" pos:column="71"/></literal><operator pos:line="23" pos:column="71">)<pos:position pos:line="23" pos:column="72"/></operator> <operator pos:line="23" pos:column="73">&amp;&amp;<pos:position pos:line="23" pos:column="83"/></operator>
        <call><name pos:line="24" pos:column="9">check_certificate_expiration<pos:position pos:line="24" pos:column="37"/></name> <argument_list pos:line="24" pos:column="38">(<argument><expr><name pos:line="24" pos:column="39">cert<pos:position pos:line="24" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="45">1<pos:position pos:line="24" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="48"/></condition><then pos:line="24" pos:column="48">
    <block pos:line="25" pos:column="5">{
      <expr_stmt><expr><name pos:line="26" pos:column="7">pass<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <literal type="number" pos:line="26" pos:column="14">1<pos:position pos:line="26" pos:column="15"/></literal></expr>;<pos:position pos:line="26" pos:column="16"/></expr_stmt>
      <break pos:line="27" pos:column="7">break;<pos:position pos:line="27" pos:column="13"/></break>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
  }<pos:position pos:line="29" pos:column="4"/></block></while>
  <comment type="block" pos:line="30" pos:column="3">/* PEM_read_X509 sets an error on eof */</comment>
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><operator pos:line="31" pos:column="7">!<pos:position pos:line="31" pos:column="8"/></operator><name pos:line="31" pos:column="8">pass<pos:position pos:line="31" pos:column="12"/></name></expr>)<pos:position pos:line="31" pos:column="13"/></condition><then pos:line="31" pos:column="13">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="5">ERR_clear_error<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">()<pos:position pos:line="32" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="23"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">X509_free<pos:position pos:line="33" pos:column="12"/></name> <argument_list pos:line="33" pos:column="13">(<argument><expr><name pos:line="33" pos:column="14">cert<pos:position pos:line="33" pos:column="18"/></name></expr></argument>)<pos:position pos:line="33" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">safe_fclose<pos:position pos:line="34" pos:column="14"/></name> <argument_list pos:line="34" pos:column="15">(<argument><expr><operator pos:line="34" pos:column="16">&amp;<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="17">fp<pos:position pos:line="34" pos:column="19"/></name></expr></argument>)<pos:position pos:line="34" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="21"/></expr_stmt>

  <return pos:line="36" pos:column="3">return <expr><name pos:line="36" pos:column="10">pass<pos:position pos:line="36" pos:column="14"/></name></expr>;<pos:position pos:line="36" pos:column="15"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

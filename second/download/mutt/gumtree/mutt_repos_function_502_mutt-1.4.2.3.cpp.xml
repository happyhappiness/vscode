<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_502_mutt-1.4.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">parse_object<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">BUFFER<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">buf<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="27">BUFFER<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">s<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">int<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">o<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">int<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">ql<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">BUFFER<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">err<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">q_level<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><literal type="number" pos:line="4" pos:column="17">0<pos:position pos:line="4" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">eptr<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  
  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><operator pos:line="7" pos:column="6">!<pos:position pos:line="7" pos:column="7"/></operator><call><name pos:line="7" pos:column="7">MoreArgs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name pos:line="7" pos:column="16">s<pos:position pos:line="7" pos:column="17"/></name></expr></argument>)<pos:position pos:line="7" pos:column="18"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="19"/></condition><then pos:line="7" pos:column="19">
  <block pos:line="8" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">strfcpy<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><name><name pos:line="9" pos:column="13">err<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">data<pos:position pos:line="9" pos:column="22"/></name></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="24">_<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><literal type="string" pos:line="9" pos:column="26">"Missing arguments."<pos:position pos:line="9" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="49">err<pos:position pos:line="9" pos:column="52"/></name><operator pos:line="9" pos:column="52">-&gt;<pos:position pos:line="9" pos:column="57"/></operator><name pos:line="9" pos:column="54">dsize<pos:position pos:line="9" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="61"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">-<pos:position pos:line="10" pos:column="13"/></operator><literal type="number" pos:line="10" pos:column="13">1<pos:position pos:line="10" pos:column="14"/></literal></expr>;<pos:position pos:line="10" pos:column="15"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>
  
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">mutt_extract_token<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><name pos:line="13" pos:column="22">buf<pos:position pos:line="13" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="27">s<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="30">0<pos:position pos:line="13" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><operator pos:line="14" pos:column="6">!<pos:position pos:line="14" pos:column="7"/></operator><call><name pos:line="14" pos:column="7">mutt_strncmp<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><name><name pos:line="14" pos:column="20">buf<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">-&gt;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="25">data<pos:position pos:line="14" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="31">"quoted"<pos:position pos:line="14" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="41">6<pos:position pos:line="14" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="44"/></condition><then pos:line="14" pos:column="44">
  <block pos:line="15" pos:column="3">{
    <if pos:line="16" pos:column="5">if<condition pos:line="16" pos:column="7">(<expr><name><name pos:line="16" pos:column="8">buf<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">data<pos:position pos:line="16" pos:column="17"/></name><index pos:line="16" pos:column="17">[<expr><literal type="number" pos:line="16" pos:column="18">6<pos:position pos:line="16" pos:column="19"/></literal></expr>]<pos:position pos:line="16" pos:column="20"/></index></name></expr>)<pos:position pos:line="16" pos:column="21"/></condition><then pos:line="16" pos:column="21">
    <block pos:line="17" pos:column="5">{
      <expr_stmt><expr><operator pos:line="18" pos:column="7">*<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">ql<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <call><name pos:line="18" pos:column="13">strtol<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><name><name pos:line="18" pos:column="20">buf<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">-&gt;<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="25">data<pos:position pos:line="18" pos:column="29"/></name></name> <operator pos:line="18" pos:column="30">+<pos:position pos:line="18" pos:column="31"/></operator> <literal type="number" pos:line="18" pos:column="32">6<pos:position pos:line="18" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="35">&amp;<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="36">eptr<pos:position pos:line="18" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="42">10<pos:position pos:line="18" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>
      <if pos:line="19" pos:column="7">if<condition pos:line="19" pos:column="9">(<expr><operator pos:line="19" pos:column="10">*<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="11">eptr<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">||<pos:position pos:line="19" pos:column="18"/></operator> <name pos:line="19" pos:column="19">q_level<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">&lt;<pos:position pos:line="19" pos:column="31"/></operator> <literal type="number" pos:line="19" pos:column="29">0<pos:position pos:line="19" pos:column="30"/></literal></expr>)<pos:position pos:line="19" pos:column="31"/></condition><then pos:line="19" pos:column="31">
      <block pos:line="20" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">snprintf<pos:position pos:line="21" pos:column="17"/></name><argument_list pos:line="21" pos:column="17">(<argument><expr><name><name pos:line="21" pos:column="18">err<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">-&gt;<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="23">data<pos:position pos:line="21" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="29">err<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">-&gt;<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="34">dsize<pos:position pos:line="21" pos:column="39"/></name></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="41">_<pos:position pos:line="21" pos:column="42"/></name><argument_list pos:line="21" pos:column="42">(<argument><expr><literal type="string" pos:line="21" pos:column="43">"%s: no such object"<pos:position pos:line="21" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="66">buf<pos:position pos:line="21" pos:column="69"/></name><operator pos:line="21" pos:column="69">-&gt;<pos:position pos:line="21" pos:column="74"/></operator><name pos:line="21" pos:column="71">data<pos:position pos:line="21" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="77"/></expr_stmt>
	<return pos:line="22" pos:column="9">return <expr><operator pos:line="22" pos:column="16">-<pos:position pos:line="22" pos:column="17"/></operator><literal type="number" pos:line="22" pos:column="17">1<pos:position pos:line="22" pos:column="18"/></literal></expr>;<pos:position pos:line="22" pos:column="19"/></return>
      }<pos:position pos:line="23" pos:column="8"/></block></then></if>
    }<pos:position pos:line="24" pos:column="6"/></block></then>
    <else pos:line="25" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><operator pos:line="26" pos:column="7">*<pos:position pos:line="26" pos:column="8"/></operator><name pos:line="26" pos:column="8">ql<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator> <literal type="number" pos:line="26" pos:column="13">0<pos:position pos:line="26" pos:column="14"/></literal></expr>;<pos:position pos:line="26" pos:column="15"/></expr_stmt></block></else></if>
    
    <expr_stmt><expr><operator pos:line="28" pos:column="5">*<pos:position pos:line="28" pos:column="6"/></operator><name pos:line="28" pos:column="6">o<pos:position pos:line="28" pos:column="7"/></name> <operator pos:line="28" pos:column="8">=<pos:position pos:line="28" pos:column="9"/></operator> <name pos:line="28" pos:column="10">MT_COLOR_QUOTED<pos:position pos:line="28" pos:column="25"/></name></expr>;<pos:position pos:line="28" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></then>
  <elseif pos:line="30" pos:column="3">else <if pos:line="30" pos:column="8">if <condition pos:line="30" pos:column="11">(<expr><operator pos:line="30" pos:column="12">(<pos:position pos:line="30" pos:column="13"/></operator><operator pos:line="30" pos:column="13">*<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">o<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <call><name pos:line="30" pos:column="18">mutt_getvaluebyname<pos:position pos:line="30" pos:column="37"/></name> <argument_list pos:line="30" pos:column="38">(<argument><expr><name><name pos:line="30" pos:column="39">buf<pos:position pos:line="30" pos:column="42"/></name><operator pos:line="30" pos:column="42">-&gt;<pos:position pos:line="30" pos:column="47"/></operator><name pos:line="30" pos:column="44">data<pos:position pos:line="30" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="50">Fields<pos:position pos:line="30" pos:column="56"/></name></expr></argument>)<pos:position pos:line="30" pos:column="57"/></argument_list></call><operator pos:line="30" pos:column="57">)<pos:position pos:line="30" pos:column="58"/></operator> <operator pos:line="30" pos:column="59">==<pos:position pos:line="30" pos:column="61"/></operator> <operator pos:line="30" pos:column="62">-<pos:position pos:line="30" pos:column="63"/></operator><literal type="number" pos:line="30" pos:column="63">1<pos:position pos:line="30" pos:column="64"/></literal></expr>)<pos:position pos:line="30" pos:column="65"/></condition><then pos:line="30" pos:column="65">
  <block pos:line="31" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">snprintf<pos:position pos:line="32" pos:column="13"/></name> <argument_list pos:line="32" pos:column="14">(<argument><expr><name><name pos:line="32" pos:column="15">err<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">-&gt;<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="20">data<pos:position pos:line="32" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="26">err<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">-&gt;<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="31">dsize<pos:position pos:line="32" pos:column="36"/></name></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="38">_<pos:position pos:line="32" pos:column="39"/></name><argument_list pos:line="32" pos:column="39">(<argument><expr><literal type="string" pos:line="32" pos:column="40">"%s: no such object"<pos:position pos:line="32" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="63">buf<pos:position pos:line="32" pos:column="66"/></name><operator pos:line="32" pos:column="66">-&gt;<pos:position pos:line="32" pos:column="71"/></operator><name pos:line="32" pos:column="68">data<pos:position pos:line="32" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="74"/></expr_stmt>
    <return pos:line="33" pos:column="5">return <expr><operator pos:line="33" pos:column="12">(<pos:position pos:line="33" pos:column="13"/></operator><operator pos:line="33" pos:column="13">-<pos:position pos:line="33" pos:column="14"/></operator><literal type="number" pos:line="33" pos:column="14">1<pos:position pos:line="33" pos:column="15"/></literal><operator pos:line="33" pos:column="15">)<pos:position pos:line="33" pos:column="16"/></operator></expr>;<pos:position pos:line="33" pos:column="17"/></return>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if></elseif></if>

  <return pos:line="36" pos:column="3">return <expr><literal type="number" pos:line="36" pos:column="10">0<pos:position pos:line="36" pos:column="11"/></literal></expr>;<pos:position pos:line="36" pos:column="12"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

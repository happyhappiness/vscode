<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1803_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_dump_variables<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>
  
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">command<pos:position pos:line="5" pos:column="15"/></name><index pos:line="5" pos:column="15">[<expr><name pos:line="5" pos:column="16">STRING<pos:position pos:line="5" pos:column="22"/></name></expr>]<pos:position pos:line="5" pos:column="23"/></index></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">BUFFER<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">err<pos:position pos:line="7" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="15">token<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">mutt_buffer_init<pos:position pos:line="9" pos:column="19"/></name> <argument_list pos:line="9" pos:column="20">(<argument><expr><operator pos:line="9" pos:column="21">&amp;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="22">err<pos:position pos:line="9" pos:column="25"/></name></expr></argument>)<pos:position pos:line="9" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">mutt_buffer_init<pos:position pos:line="10" pos:column="19"/></name> <argument_list pos:line="10" pos:column="20">(<argument><expr><operator pos:line="10" pos:column="21">&amp;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="22">token<pos:position pos:line="10" pos:column="27"/></name></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="12" pos:column="3">err<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">.<pos:position pos:line="12" pos:column="7"/></operator><name pos:line="12" pos:column="7">dsize<pos:position pos:line="12" pos:column="12"/></name></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">STRING<pos:position pos:line="12" pos:column="21"/></name></expr>;<pos:position pos:line="12" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">err<pos:position pos:line="13" pos:column="6"/></name><operator pos:line="13" pos:column="6">.<pos:position pos:line="13" pos:column="7"/></operator><name pos:line="13" pos:column="7">data<pos:position pos:line="13" pos:column="11"/></name></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">safe_malloc<pos:position pos:line="13" pos:column="25"/></name> <argument_list pos:line="13" pos:column="26">(<argument><expr><name><name pos:line="13" pos:column="27">err<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">.<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="31">dsize<pos:position pos:line="13" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
  
  <for pos:line="15" pos:column="3">for <control pos:line="15" pos:column="7">(<init><expr><name pos:line="15" pos:column="8">i<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <literal type="number" pos:line="15" pos:column="12">0<pos:position pos:line="15" pos:column="13"/></literal></expr>;<pos:position pos:line="15" pos:column="14"/></init> <condition><expr><name><name pos:line="15" pos:column="15">MuttVars<pos:position pos:line="15" pos:column="23"/></name><index pos:line="15" pos:column="23">[<expr><name pos:line="15" pos:column="24">i<pos:position pos:line="15" pos:column="25"/></name></expr>]<pos:position pos:line="15" pos:column="26"/></index></name><operator pos:line="15" pos:column="26">.<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="27">option<pos:position pos:line="15" pos:column="33"/></name></expr>;<pos:position pos:line="15" pos:column="34"/></condition> <incr><expr><name pos:line="15" pos:column="35">i<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">++<pos:position pos:line="15" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="39"/></control>
  <block pos:line="16" pos:column="3">{
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name><name pos:line="17" pos:column="9">MuttVars<pos:position pos:line="17" pos:column="17"/></name><index pos:line="17" pos:column="17">[<expr><name pos:line="17" pos:column="18">i<pos:position pos:line="17" pos:column="19"/></name></expr>]<pos:position pos:line="17" pos:column="20"/></index></name><operator pos:line="17" pos:column="20">.<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="21">type<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">==<pos:position pos:line="17" pos:column="28"/></operator> <name pos:line="17" pos:column="29">DT_SYN<pos:position pos:line="17" pos:column="35"/></name></expr>)<pos:position pos:line="17" pos:column="36"/></condition><then pos:line="17" pos:column="36">
      <block type="pseudo"><continue pos:line="18" pos:column="7">continue;<pos:position pos:line="18" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">snprintf<pos:position pos:line="20" pos:column="13"/></name> <argument_list pos:line="20" pos:column="14">(<argument><expr><name pos:line="20" pos:column="15">command<pos:position pos:line="20" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="24">sizeof <argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">command<pos:position pos:line="20" pos:column="39"/></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="42">"set ?%s\n"<pos:position pos:line="20" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="55">MuttVars<pos:position pos:line="20" pos:column="63"/></name><index pos:line="20" pos:column="63">[<expr><name pos:line="20" pos:column="64">i<pos:position pos:line="20" pos:column="65"/></name></expr>]<pos:position pos:line="20" pos:column="66"/></index></name><operator pos:line="20" pos:column="66">.<pos:position pos:line="20" pos:column="67"/></operator><name pos:line="20" pos:column="67">option<pos:position pos:line="20" pos:column="73"/></name></expr></argument>)<pos:position pos:line="20" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="75"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><call><name pos:line="21" pos:column="9">mutt_parse_rc_line<pos:position pos:line="21" pos:column="27"/></name> <argument_list pos:line="21" pos:column="28">(<argument><expr><name pos:line="21" pos:column="29">command<pos:position pos:line="21" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="38">&amp;<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="39">token<pos:position pos:line="21" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="46">&amp;<pos:position pos:line="21" pos:column="51"/></operator><name pos:line="21" pos:column="47">err<pos:position pos:line="21" pos:column="50"/></name></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call> <operator pos:line="21" pos:column="52">==<pos:position pos:line="21" pos:column="54"/></operator> <operator pos:line="21" pos:column="55">-<pos:position pos:line="21" pos:column="56"/></operator><literal type="number" pos:line="21" pos:column="56">1<pos:position pos:line="21" pos:column="57"/></literal></expr>)<pos:position pos:line="21" pos:column="58"/></condition><then pos:line="21" pos:column="58">
    <block pos:line="22" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">fprintf<pos:position pos:line="23" pos:column="14"/></name> <argument_list pos:line="23" pos:column="15">(<argument><expr><name pos:line="23" pos:column="16">stderr<pos:position pos:line="23" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="24">"%s\n"<pos:position pos:line="23" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="32">err<pos:position pos:line="23" pos:column="35"/></name><operator pos:line="23" pos:column="35">.<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="36">data<pos:position pos:line="23" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">FREE<pos:position pos:line="24" pos:column="11"/></name> <argument_list pos:line="24" pos:column="12">(<argument><expr><operator pos:line="24" pos:column="13">&amp;<pos:position pos:line="24" pos:column="18"/></operator><name><name pos:line="24" pos:column="14">token<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">.<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="20">data<pos:position pos:line="24" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">FREE<pos:position pos:line="25" pos:column="11"/></name> <argument_list pos:line="25" pos:column="12">(<argument><expr><operator pos:line="25" pos:column="13">&amp;<pos:position pos:line="25" pos:column="18"/></operator><name><name pos:line="25" pos:column="14">err<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">.<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="18">data<pos:position pos:line="25" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="24"/></expr_stmt>

      <return pos:line="27" pos:column="7">return <expr><literal type="number" pos:line="27" pos:column="14">1<pos:position pos:line="27" pos:column="15"/></literal></expr>;<pos:position pos:line="27" pos:column="16"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">printf<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><literal type="string" pos:line="29" pos:column="12">"%s\n"<pos:position pos:line="29" pos:column="18"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="20">err<pos:position pos:line="29" pos:column="23"/></name><operator pos:line="29" pos:column="23">.<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="24">data<pos:position pos:line="29" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></for>
  
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">FREE<pos:position pos:line="32" pos:column="7"/></name> <argument_list pos:line="32" pos:column="8">(<argument><expr><operator pos:line="32" pos:column="9">&amp;<pos:position pos:line="32" pos:column="14"/></operator><name><name pos:line="32" pos:column="10">token<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">.<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="16">data<pos:position pos:line="32" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">FREE<pos:position pos:line="33" pos:column="7"/></name> <argument_list pos:line="33" pos:column="8">(<argument><expr><operator pos:line="33" pos:column="9">&amp;<pos:position pos:line="33" pos:column="14"/></operator><name><name pos:line="33" pos:column="10">err<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">.<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">data<pos:position pos:line="33" pos:column="18"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="20"/></expr_stmt>

  <return pos:line="35" pos:column="3">return <expr><literal type="number" pos:line="35" pos:column="10">0<pos:position pos:line="35" pos:column="11"/></literal></expr>;<pos:position pos:line="35" pos:column="12"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

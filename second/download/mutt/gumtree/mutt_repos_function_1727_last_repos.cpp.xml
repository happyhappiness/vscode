<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1727_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_check_lookup_list<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">BODY<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">b<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">type<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">int<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">len<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">LIST<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">t<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><name pos:line="3" pos:column="13">MimeLookupList<pos:position pos:line="3" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>

  <for pos:line="6" pos:column="3">for <control pos:line="6" pos:column="7">(<init pos:line="6" pos:column="8">;<pos:position pos:line="6" pos:column="9"/></init> <condition><expr><name pos:line="6" pos:column="10">t<pos:position pos:line="6" pos:column="11"/></name></expr>;<pos:position pos:line="6" pos:column="12"/></condition> <incr><expr><name pos:line="6" pos:column="13">t<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">=<pos:position pos:line="6" pos:column="16"/></operator> <name><name pos:line="6" pos:column="17">t<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">-&gt;<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="20">next<pos:position pos:line="6" pos:column="24"/></name></name></expr></incr>)<pos:position pos:line="6" pos:column="25"/></control> <block pos:line="6" pos:column="26">{
    <expr_stmt><expr><name pos:line="7" pos:column="5">i<pos:position pos:line="7" pos:column="6"/></name> <operator pos:line="7" pos:column="7">=<pos:position pos:line="7" pos:column="8"/></operator> <call><name pos:line="7" pos:column="9">mutt_strlen<pos:position pos:line="7" pos:column="20"/></name> <argument_list pos:line="7" pos:column="21">(<argument><expr><name><name pos:line="7" pos:column="22">t<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">-&gt;<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="25">data<pos:position pos:line="7" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></call> <operator pos:line="7" pos:column="31">-<pos:position pos:line="7" pos:column="32"/></operator> <literal type="number" pos:line="7" pos:column="33">1<pos:position pos:line="7" pos:column="34"/></literal></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">i<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">&gt;<pos:position pos:line="8" pos:column="16"/></operator> <literal type="number" pos:line="8" pos:column="14">0<pos:position pos:line="8" pos:column="15"/></literal> <operator pos:line="8" pos:column="16">&amp;&amp;<pos:position pos:line="8" pos:column="26"/></operator> <name><name pos:line="8" pos:column="19">t<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">-&gt;<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="22">data<pos:position pos:line="8" pos:column="26"/></name><index pos:line="8" pos:column="26">[<expr><name pos:line="8" pos:column="27">i<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">-<pos:position pos:line="8" pos:column="29"/></operator><literal type="number" pos:line="8" pos:column="29">1<pos:position pos:line="8" pos:column="30"/></literal></expr>]<pos:position pos:line="8" pos:column="31"/></index></name> <operator pos:line="8" pos:column="32">==<pos:position pos:line="8" pos:column="34"/></operator> <literal type="char" pos:line="8" pos:column="35">'/'<pos:position pos:line="8" pos:column="38"/></literal> <operator pos:line="8" pos:column="39">&amp;&amp;<pos:position pos:line="8" pos:column="49"/></operator> <name><name pos:line="8" pos:column="42">t<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">-&gt;<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="45">data<pos:position pos:line="8" pos:column="49"/></name><index pos:line="8" pos:column="49">[<expr><name pos:line="8" pos:column="50">i<pos:position pos:line="8" pos:column="51"/></name></expr>]<pos:position pos:line="8" pos:column="52"/></index></name> <operator pos:line="8" pos:column="53">==<pos:position pos:line="8" pos:column="55"/></operator> <literal type="char" pos:line="8" pos:column="56">'*'<pos:position pos:line="8" pos:column="59"/></literal> <operator pos:line="8" pos:column="60">&amp;&amp;<pos:position pos:line="8" pos:column="70"/></operator> 
	 <call><name pos:line="9" pos:column="10">ascii_strncasecmp<pos:position pos:line="9" pos:column="27"/></name> <argument_list pos:line="9" pos:column="28">(<argument><expr><name pos:line="9" pos:column="29">type<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="35">t<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">-&gt;<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="38">data<pos:position pos:line="9" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="44">i<pos:position pos:line="9" pos:column="45"/></name></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></call> <operator pos:line="9" pos:column="47">==<pos:position pos:line="9" pos:column="49"/></operator> <literal type="number" pos:line="9" pos:column="50">0<pos:position pos:line="9" pos:column="51"/></literal><operator pos:line="9" pos:column="51">)<pos:position pos:line="9" pos:column="52"/></operator> <operator pos:line="9" pos:column="53">||<pos:position pos:line="9" pos:column="55"/></operator>
	<call><name pos:line="10" pos:column="9">ascii_strcasecmp<pos:position pos:line="10" pos:column="25"/></name> <argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">type<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="33">t<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">-&gt;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="36">data<pos:position pos:line="10" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></call> <operator pos:line="10" pos:column="42">==<pos:position pos:line="10" pos:column="44"/></operator> <literal type="number" pos:line="10" pos:column="45">0<pos:position pos:line="10" pos:column="46"/></literal></expr>)<pos:position pos:line="10" pos:column="47"/></condition><then pos:line="10" pos:column="47"> <block pos:line="10" pos:column="48">{

    <decl_stmt><decl><type><name pos:line="12" pos:column="5">BODY<pos:position pos:line="12" pos:column="9"/></name></type> <name pos:line="12" pos:column="10">tmp<pos:position pos:line="12" pos:column="13"/></name> <init pos:line="12" pos:column="14">= <expr><block pos:line="12" pos:column="16">{<expr><literal type="number" pos:line="12" pos:column="17">0<pos:position pos:line="12" pos:column="18"/></literal></expr>}<pos:position pos:line="12" pos:column="19"/></block></expr></init></decl>;<pos:position pos:line="12" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">n<pos:position pos:line="13" pos:column="10"/></name></decl>;<pos:position pos:line="13" pos:column="11"/></decl_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">n<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">mutt_lookup_mime_type<pos:position pos:line="14" pos:column="35"/></name> <argument_list pos:line="14" pos:column="36">(<argument><expr><operator pos:line="14" pos:column="37">&amp;<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="38">tmp<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="43">b<pos:position pos:line="14" pos:column="44"/></name><operator pos:line="14" pos:column="44">-&gt;<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="46">filename<pos:position pos:line="14" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call><operator pos:line="14" pos:column="55">)<pos:position pos:line="14" pos:column="56"/></operator> <operator pos:line="14" pos:column="57">!=<pos:position pos:line="14" pos:column="59"/></operator> <name pos:line="14" pos:column="60">TYPEOTHER<pos:position pos:line="14" pos:column="69"/></name></expr>)<pos:position pos:line="14" pos:column="70"/></condition><then pos:line="14" pos:column="70"> <block pos:line="14" pos:column="71">{
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">snprintf<pos:position pos:line="15" pos:column="15"/></name> <argument_list pos:line="15" pos:column="16">(<argument><expr><name pos:line="15" pos:column="17">type<pos:position pos:line="15" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="23">len<pos:position pos:line="15" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="28">"%s/%s"<pos:position pos:line="15" pos:column="35"/></literal></expr></argument>,
                <argument><expr><ternary><condition><expr><name pos:line="16" pos:column="17">n<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">==<pos:position pos:line="16" pos:column="21"/></operator> <name pos:line="16" pos:column="22">TYPEAUDIO<pos:position pos:line="16" pos:column="31"/></name></expr> ?<pos:position pos:line="16" pos:column="33"/></condition><then pos:line="16" pos:column="33"> <expr><literal type="string" pos:line="16" pos:column="34">"audio"<pos:position pos:line="16" pos:column="41"/></literal></expr> <pos:position pos:line="16" pos:column="42"/></then><else pos:line="16" pos:column="42">:
                <expr><ternary><condition><expr><name pos:line="17" pos:column="17">n<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">==<pos:position pos:line="17" pos:column="21"/></operator> <name pos:line="17" pos:column="22">TYPEAPPLICATION<pos:position pos:line="17" pos:column="37"/></name></expr> ?<pos:position pos:line="17" pos:column="39"/></condition><then pos:line="17" pos:column="39"> <expr><literal type="string" pos:line="17" pos:column="40">"application"<pos:position pos:line="17" pos:column="53"/></literal></expr> <pos:position pos:line="17" pos:column="54"/></then><else pos:line="17" pos:column="54">:
                <expr><ternary><condition><expr><name pos:line="18" pos:column="17">n<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">==<pos:position pos:line="18" pos:column="21"/></operator> <name pos:line="18" pos:column="22">TYPEIMAGE<pos:position pos:line="18" pos:column="31"/></name></expr> ?<pos:position pos:line="18" pos:column="33"/></condition><then pos:line="18" pos:column="33"> <expr><literal type="string" pos:line="18" pos:column="34">"image"<pos:position pos:line="18" pos:column="41"/></literal></expr> <pos:position pos:line="18" pos:column="42"/></then><else pos:line="18" pos:column="42">:
                <expr><ternary><condition><expr><name pos:line="19" pos:column="17">n<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">==<pos:position pos:line="19" pos:column="21"/></operator> <name pos:line="19" pos:column="22">TYPEMESSAGE<pos:position pos:line="19" pos:column="33"/></name></expr> ?<pos:position pos:line="19" pos:column="35"/></condition><then pos:line="19" pos:column="35"> <expr><literal type="string" pos:line="19" pos:column="36">"message"<pos:position pos:line="19" pos:column="45"/></literal></expr> <pos:position pos:line="19" pos:column="46"/></then><else pos:line="19" pos:column="46">:
                <expr><ternary><condition><expr><name pos:line="20" pos:column="17">n<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">==<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="22">TYPEMODEL<pos:position pos:line="20" pos:column="31"/></name></expr> ?<pos:position pos:line="20" pos:column="33"/></condition><then pos:line="20" pos:column="33"> <expr><literal type="string" pos:line="20" pos:column="34">"model"<pos:position pos:line="20" pos:column="41"/></literal></expr> <pos:position pos:line="20" pos:column="42"/></then><else pos:line="20" pos:column="42">:
                <expr><ternary><condition><expr><name pos:line="21" pos:column="17">n<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">==<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="22">TYPEMULTIPART<pos:position pos:line="21" pos:column="35"/></name></expr> ?<pos:position pos:line="21" pos:column="37"/></condition><then pos:line="21" pos:column="37"> <expr><literal type="string" pos:line="21" pos:column="38">"multipart"<pos:position pos:line="21" pos:column="49"/></literal></expr> <pos:position pos:line="21" pos:column="50"/></then><else pos:line="21" pos:column="50">:
                <expr><ternary><condition><expr><name pos:line="22" pos:column="17">n<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">==<pos:position pos:line="22" pos:column="21"/></operator> <name pos:line="22" pos:column="22">TYPETEXT<pos:position pos:line="22" pos:column="30"/></name></expr> ?<pos:position pos:line="22" pos:column="32"/></condition><then pos:line="22" pos:column="32"> <expr><literal type="string" pos:line="22" pos:column="33">"text"<pos:position pos:line="22" pos:column="39"/></literal></expr> <pos:position pos:line="22" pos:column="40"/></then><else pos:line="22" pos:column="40">:
                <expr><ternary><condition><expr><name pos:line="23" pos:column="17">n<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">==<pos:position pos:line="23" pos:column="21"/></operator> <name pos:line="23" pos:column="22">TYPEVIDEO<pos:position pos:line="23" pos:column="31"/></name></expr> ?<pos:position pos:line="23" pos:column="33"/></condition><then pos:line="23" pos:column="33"> <expr><literal type="string" pos:line="23" pos:column="34">"video"<pos:position pos:line="23" pos:column="41"/></literal></expr> <pos:position pos:line="23" pos:column="42"/></then><else pos:line="23" pos:column="42">: <expr><literal type="string" pos:line="23" pos:column="44">"other"<pos:position pos:line="23" pos:column="51"/></literal></expr></else></ternary></expr></else></ternary></expr></else></ternary></expr></else></ternary></expr></else></ternary></expr></else></ternary></expr></else></ternary></expr></else></ternary></expr></argument>,
                <argument><expr><name><name pos:line="24" pos:column="17">tmp<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">.<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="21">subtype<pos:position pos:line="24" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">dprint<pos:position pos:line="25" pos:column="13"/></name><argument_list pos:line="25" pos:column="13">(<argument><expr><literal type="number" pos:line="25" pos:column="14">1<pos:position pos:line="25" pos:column="15"/></literal></expr></argument>, <argument><expr><operator pos:line="25" pos:column="17">(<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="18">debugfile<pos:position pos:line="25" pos:column="27"/></name><operator pos:line="25" pos:column="27">,<pos:position pos:line="25" pos:column="28"/></operator> <literal type="string" pos:line="25" pos:column="29">"mutt_check_lookup_list: \"%s\" -&gt; %s\n"<pos:position pos:line="25" pos:column="72"/></literal><operator pos:line="25" pos:column="69">,<pos:position pos:line="25" pos:column="70"/></operator> 
        <name><name pos:line="26" pos:column="9">b<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">-&gt;<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="12">filename<pos:position pos:line="26" pos:column="20"/></name></name><operator pos:line="26" pos:column="20">,<pos:position pos:line="26" pos:column="21"/></operator> <name pos:line="26" pos:column="22">type<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">)<pos:position pos:line="26" pos:column="27"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name><name pos:line="28" pos:column="9">tmp<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">.<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="13">subtype<pos:position pos:line="28" pos:column="20"/></name></name></expr>)<pos:position pos:line="28" pos:column="21"/></condition><then pos:line="28" pos:column="21"> 
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="7">FREE<pos:position pos:line="29" pos:column="11"/></name> <argument_list pos:line="29" pos:column="12">(<argument><expr><operator pos:line="29" pos:column="13">&amp;<pos:position pos:line="29" pos:column="18"/></operator><name><name pos:line="29" pos:column="14">tmp<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">.<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">subtype<pos:position pos:line="29" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt></block></then></if>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name><name pos:line="30" pos:column="9">tmp<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">.<pos:position pos:line="30" pos:column="13"/></operator><name pos:line="30" pos:column="13">xtype<pos:position pos:line="30" pos:column="18"/></name></name></expr>)<pos:position pos:line="30" pos:column="19"/></condition><then pos:line="30" pos:column="19"> 
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="7">FREE<pos:position pos:line="31" pos:column="11"/></name> <argument_list pos:line="31" pos:column="12">(<argument><expr><operator pos:line="31" pos:column="13">&amp;<pos:position pos:line="31" pos:column="18"/></operator><name><name pos:line="31" pos:column="14">tmp<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">.<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="18">xtype<pos:position pos:line="31" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="25"/></expr_stmt></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
  }<pos:position pos:line="33" pos:column="4"/></block></for>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

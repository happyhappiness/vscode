<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_270_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_parse_pgp_hdr<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">p<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">set_signas<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">pgp<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><literal type="number" pos:line="3" pos:column="13">0<pos:position pos:line="3" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">pgp_sign_as<pos:position pos:line="4" pos:column="19"/></name><index pos:line="4" pos:column="19">[<expr><name pos:line="4" pos:column="20">LONG_STRING<pos:position pos:line="4" pos:column="31"/></name></expr>]<pos:position pos:line="4" pos:column="32"/></index></name> <init pos:line="4" pos:column="33">= <expr><literal type="string" pos:line="4" pos:column="35">"\0"<pos:position pos:line="4" pos:column="39"/></literal></expr></init></decl>, <modifier pos:line="4" pos:column="41">*<pos:position pos:line="4" pos:column="42"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="42">q<pos:position pos:line="4" pos:column="43"/></name></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>
   
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">SKIPWS<pos:position pos:line="6" pos:column="9"/></name> <argument_list pos:line="6" pos:column="10">(<argument><expr><name pos:line="6" pos:column="11">p<pos:position pos:line="6" pos:column="12"/></name></expr></argument>)<pos:position pos:line="6" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="14"/></expr_stmt>
  <for pos:line="7" pos:column="3">for <control pos:line="7" pos:column="7">(<init pos:line="7" pos:column="8">;<pos:position pos:line="7" pos:column="9"/></init> <condition><expr><operator pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></operator><name pos:line="7" pos:column="11">p<pos:position pos:line="7" pos:column="12"/></name></expr>;<pos:position pos:line="7" pos:column="13"/></condition> <incr><expr><name pos:line="7" pos:column="14">p<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">++<pos:position pos:line="7" pos:column="17"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="18"/></control>
  <block pos:line="8" pos:column="3">{    
     
    <switch pos:line="10" pos:column="5">switch <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">*<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">p<pos:position pos:line="10" pos:column="15"/></name></expr>)<pos:position pos:line="10" pos:column="16"/></condition>
    <block pos:line="11" pos:column="5">{
      <case pos:line="12" pos:column="7">case <expr><literal type="char" pos:line="12" pos:column="12">'e'<pos:position pos:line="12" pos:column="15"/></literal></expr>:<pos:position pos:line="12" pos:column="16"/></case>
      <case pos:line="13" pos:column="7">case <expr><literal type="char" pos:line="13" pos:column="12">'E'<pos:position pos:line="13" pos:column="15"/></literal></expr>:<pos:position pos:line="13" pos:column="16"/></case>
        <expr_stmt><expr><name pos:line="14" pos:column="9">pgp<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">|=<pos:position pos:line="14" pos:column="15"/></operator> <name pos:line="14" pos:column="16">PGPENCRYPT<pos:position pos:line="14" pos:column="26"/></name></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
        <break pos:line="15" pos:column="9">break;<pos:position pos:line="15" pos:column="15"/></break>

      <case pos:line="17" pos:column="7">case <expr><literal type="char" pos:line="17" pos:column="12">'s'<pos:position pos:line="17" pos:column="15"/></literal></expr>:<pos:position pos:line="17" pos:column="16"/></case>    
      <case pos:line="18" pos:column="7">case <expr><literal type="char" pos:line="18" pos:column="12">'S'<pos:position pos:line="18" pos:column="15"/></literal></expr>:<pos:position pos:line="18" pos:column="16"/></case>
        <expr_stmt><expr><name pos:line="19" pos:column="9">pgp<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">|=<pos:position pos:line="19" pos:column="15"/></operator> <name pos:line="19" pos:column="16">PGPSIGN<pos:position pos:line="19" pos:column="23"/></name></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">q<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <name pos:line="20" pos:column="13">pgp_sign_as<pos:position pos:line="20" pos:column="24"/></name></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>
      
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">*<pos:position pos:line="22" pos:column="14"/></operator><operator pos:line="22" pos:column="14">(<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">p<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">+<pos:position pos:line="22" pos:column="17"/></operator><literal type="number" pos:line="22" pos:column="17">1<pos:position pos:line="22" pos:column="18"/></literal><operator pos:line="22" pos:column="18">)<pos:position pos:line="22" pos:column="19"/></operator> <operator pos:line="22" pos:column="20">==<pos:position pos:line="22" pos:column="22"/></operator> <literal type="char" pos:line="22" pos:column="23">'&lt;'<pos:position pos:line="22" pos:column="29"/></literal></expr>)<pos:position pos:line="22" pos:column="27"/></condition><then pos:line="22" pos:column="27">
        <block pos:line="23" pos:column="9">{
          <for pos:line="24" pos:column="11">for <control pos:line="24" pos:column="15">(<init><expr><name pos:line="24" pos:column="16">p<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">+=<pos:position pos:line="24" pos:column="20"/></operator> <literal type="number" pos:line="24" pos:column="21">2<pos:position pos:line="24" pos:column="22"/></literal></expr>;<pos:position pos:line="24" pos:column="23"/></init> 
	       <condition><expr><operator pos:line="25" pos:column="16">*<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">p<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">&amp;&amp;<pos:position pos:line="25" pos:column="29"/></operator> <operator pos:line="25" pos:column="22">*<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="23">p<pos:position pos:line="25" pos:column="24"/></name> <operator pos:line="25" pos:column="25">!=<pos:position pos:line="25" pos:column="27"/></operator> <literal type="char" pos:line="25" pos:column="28">'&gt;'<pos:position pos:line="25" pos:column="34"/></literal> <operator pos:line="25" pos:column="32">&amp;&amp;<pos:position pos:line="25" pos:column="42"/></operator> <name pos:line="25" pos:column="35">q<pos:position pos:line="25" pos:column="36"/></name> <operator pos:line="25" pos:column="37">&lt;<pos:position pos:line="25" pos:column="41"/></operator> <name pos:line="25" pos:column="39">pgp_sign_as<pos:position pos:line="25" pos:column="50"/></name> <operator pos:line="25" pos:column="51">+<pos:position pos:line="25" pos:column="52"/></operator> <sizeof pos:line="25" pos:column="53">sizeof <argument_list pos:line="25" pos:column="60">(<argument><expr><name pos:line="25" pos:column="61">pgp_sign_as<pos:position pos:line="25" pos:column="72"/></name></expr></argument>)<pos:position pos:line="25" pos:column="73"/></argument_list></sizeof> <operator pos:line="25" pos:column="74">-<pos:position pos:line="25" pos:column="75"/></operator> <literal type="number" pos:line="25" pos:column="76">1<pos:position pos:line="25" pos:column="77"/></literal></expr>;<pos:position pos:line="25" pos:column="78"/></condition>
               <incr><expr><operator pos:line="26" pos:column="16">*<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">q<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">++<pos:position pos:line="26" pos:column="20"/></operator> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <operator pos:line="26" pos:column="23">*<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="24">p<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">++<pos:position pos:line="26" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="28"/></control>
	    <block type="pseudo"><empty_stmt pos:line="27" pos:column="13">;<pos:position pos:line="27" pos:column="14"/></empty_stmt></block></for>

          <if pos:line="29" pos:column="11">if <condition pos:line="29" pos:column="14">(<expr><operator pos:line="29" pos:column="15">*<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="16">p<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">!=<pos:position pos:line="29" pos:column="19"/></operator><literal type="char" pos:line="29" pos:column="19">'&gt;'<pos:position pos:line="29" pos:column="25"/></literal></expr>)<pos:position pos:line="29" pos:column="23"/></condition><then pos:line="29" pos:column="23">
          <block pos:line="30" pos:column="11">{
            <decl_stmt><decl><type><name pos:line="31" pos:column="13">mutt_error<pos:position pos:line="31" pos:column="23"/></name></type> <name pos:line="31" pos:column="24">_<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><literal type="string" pos:line="31" pos:column="26">"Illegal PGP header"<pos:position pos:line="31" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="47"/></argument_list></decl>;<pos:position pos:line="31" pos:column="48"/></decl_stmt>
            <return pos:line="32" pos:column="13">return <expr><literal type="number" pos:line="32" pos:column="20">0<pos:position pos:line="32" pos:column="21"/></literal></expr>;<pos:position pos:line="32" pos:column="22"/></return>
          }<pos:position pos:line="33" pos:column="12"/></block></then></if>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>
       
        <expr_stmt><expr><operator pos:line="36" pos:column="9">*<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">q<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <literal type="char" pos:line="36" pos:column="14">'\0'<pos:position pos:line="36" pos:column="18"/></literal></expr>;<pos:position pos:line="36" pos:column="19"/></expr_stmt>
        <break pos:line="37" pos:column="9">break;<pos:position pos:line="37" pos:column="15"/></break>

      <comment type="block" pos:line="39" pos:column="7">/* This used to be the micalg parameter.
       * 
       * It's no longer needed, so we just skip the parameter in order
       * to be able to recall old messages.
       */</comment>
      <case pos:line="44" pos:column="7">case <expr><literal type="char" pos:line="44" pos:column="12">'m'<pos:position pos:line="44" pos:column="15"/></literal></expr>:<pos:position pos:line="44" pos:column="16"/></case>
      <case pos:line="45" pos:column="7">case <expr><literal type="char" pos:line="45" pos:column="12">'M'<pos:position pos:line="45" pos:column="15"/></literal></expr>:<pos:position pos:line="45" pos:column="16"/></case>
        <if pos:line="46" pos:column="9">if<condition pos:line="46" pos:column="11">(<expr><operator pos:line="46" pos:column="12">*<pos:position pos:line="46" pos:column="13"/></operator><operator pos:line="46" pos:column="13">(<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">p<pos:position pos:line="46" pos:column="15"/></name><operator pos:line="46" pos:column="15">+<pos:position pos:line="46" pos:column="16"/></operator><literal type="number" pos:line="46" pos:column="16">1<pos:position pos:line="46" pos:column="17"/></literal><operator pos:line="46" pos:column="17">)<pos:position pos:line="46" pos:column="18"/></operator> <operator pos:line="46" pos:column="19">==<pos:position pos:line="46" pos:column="21"/></operator> <literal type="char" pos:line="46" pos:column="22">'&lt;'<pos:position pos:line="46" pos:column="28"/></literal></expr>)<pos:position pos:line="46" pos:column="26"/></condition><then pos:line="46" pos:column="26">
        <block pos:line="47" pos:column="9">{
	  <for pos:line="48" pos:column="11">for <control pos:line="48" pos:column="15">(<init><expr><name pos:line="48" pos:column="16">p<pos:position pos:line="48" pos:column="17"/></name> <operator pos:line="48" pos:column="18">+=<pos:position pos:line="48" pos:column="20"/></operator> <literal type="number" pos:line="48" pos:column="21">2<pos:position pos:line="48" pos:column="22"/></literal></expr>;<pos:position pos:line="48" pos:column="23"/></init> <condition><expr><operator pos:line="48" pos:column="24">*<pos:position pos:line="48" pos:column="25"/></operator><name pos:line="48" pos:column="25">p<pos:position pos:line="48" pos:column="26"/></name> <operator pos:line="48" pos:column="27">&amp;&amp;<pos:position pos:line="48" pos:column="37"/></operator> <operator pos:line="48" pos:column="30">*<pos:position pos:line="48" pos:column="31"/></operator><name pos:line="48" pos:column="31">p<pos:position pos:line="48" pos:column="32"/></name> <operator pos:line="48" pos:column="33">!=<pos:position pos:line="48" pos:column="35"/></operator> <literal type="char" pos:line="48" pos:column="36">'&gt;'<pos:position pos:line="48" pos:column="42"/></literal></expr>;<pos:position pos:line="48" pos:column="40"/></condition> <incr><expr><name pos:line="48" pos:column="41">p<pos:position pos:line="48" pos:column="42"/></name><operator pos:line="48" pos:column="42">++<pos:position pos:line="48" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="48" pos:column="45"/></control>
	    <block type="pseudo"><empty_stmt pos:line="49" pos:column="13">;<pos:position pos:line="49" pos:column="14"/></empty_stmt></block></for>
	  <if pos:line="50" pos:column="11">if<condition pos:line="50" pos:column="13">(<expr><operator pos:line="50" pos:column="14">*<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="15">p<pos:position pos:line="50" pos:column="16"/></name> <operator pos:line="50" pos:column="17">!=<pos:position pos:line="50" pos:column="19"/></operator> <literal type="char" pos:line="50" pos:column="20">'&gt;'<pos:position pos:line="50" pos:column="26"/></literal></expr>)<pos:position pos:line="50" pos:column="24"/></condition><then pos:line="50" pos:column="24">
	  <block pos:line="51" pos:column="11">{
	    <decl_stmt><decl><type><name pos:line="52" pos:column="13">mutt_error<pos:position pos:line="52" pos:column="23"/></name></type> <name pos:line="52" pos:column="24">_<pos:position pos:line="52" pos:column="25"/></name><argument_list pos:line="52" pos:column="25">(<argument><expr><literal type="string" pos:line="52" pos:column="26">"Illegal PGP header"<pos:position pos:line="52" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="47"/></argument_list></decl>;<pos:position pos:line="52" pos:column="48"/></decl_stmt>
	    <return pos:line="53" pos:column="13">return <expr><literal type="number" pos:line="53" pos:column="20">0<pos:position pos:line="53" pos:column="21"/></literal></expr>;<pos:position pos:line="53" pos:column="22"/></return>
	  }<pos:position pos:line="54" pos:column="12"/></block></then></if>
	}<pos:position pos:line="55" pos:column="10"/></block></then></if>

	<break pos:line="57" pos:column="9">break;<pos:position pos:line="57" pos:column="15"/></break>
	  
      <default pos:line="59" pos:column="7">default:<pos:position pos:line="59" pos:column="15"/></default>
        <decl_stmt><decl><type><name pos:line="60" pos:column="9">mutt_error<pos:position pos:line="60" pos:column="19"/></name></type> <name pos:line="60" pos:column="20">_<pos:position pos:line="60" pos:column="21"/></name><argument_list pos:line="60" pos:column="21">(<argument><expr><literal type="string" pos:line="60" pos:column="22">"Illegal PGP header"<pos:position pos:line="60" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="43"/></argument_list></decl>;<pos:position pos:line="60" pos:column="44"/></decl_stmt>
        <return pos:line="61" pos:column="9">return <expr><literal type="number" pos:line="61" pos:column="16">0<pos:position pos:line="61" pos:column="17"/></literal></expr>;<pos:position pos:line="61" pos:column="18"/></return>
    }<pos:position pos:line="62" pos:column="6"/></block></switch>
     
  }<pos:position pos:line="64" pos:column="4"/></block></for>
 
  <if pos:line="66" pos:column="3">if <condition pos:line="66" pos:column="6">(<expr><name pos:line="66" pos:column="7">set_signas<pos:position pos:line="66" pos:column="17"/></name> <operator pos:line="66" pos:column="18">||<pos:position pos:line="66" pos:column="20"/></operator> <operator pos:line="66" pos:column="21">*<pos:position pos:line="66" pos:column="22"/></operator><name pos:line="66" pos:column="22">pgp_sign_as<pos:position pos:line="66" pos:column="33"/></name></expr>)<pos:position pos:line="66" pos:column="34"/></condition><then pos:line="66" pos:column="34">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="5">mutt_str_replace<pos:position pos:line="67" pos:column="21"/></name> <argument_list pos:line="67" pos:column="22">(<argument><expr><operator pos:line="67" pos:column="23">&amp;<pos:position pos:line="67" pos:column="28"/></operator><name pos:line="67" pos:column="24">PgpSignAs<pos:position pos:line="67" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="35">pgp_sign_as<pos:position pos:line="67" pos:column="46"/></name></expr></argument>)<pos:position pos:line="67" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="48"/></expr_stmt></block></then></if>

  <return pos:line="69" pos:column="3">return <expr><name pos:line="69" pos:column="10">pgp<pos:position pos:line="69" pos:column="13"/></name></expr>;<pos:position pos:line="69" pos:column="14"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_925_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">replace_part<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">ENTER_STATE<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">state<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">size_t<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">from<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">buf<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* Save the suffix */</comment>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">savelen<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><name><name pos:line="4" pos:column="20">state<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">-&gt;<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="27">lastchar<pos:position pos:line="4" pos:column="35"/></name></name> <operator pos:line="4" pos:column="36">-<pos:position pos:line="4" pos:column="37"/></operator> <name><name pos:line="4" pos:column="38">state<pos:position pos:line="4" pos:column="43"/></name><operator pos:line="4" pos:column="43">-&gt;<pos:position pos:line="4" pos:column="48"/></operator><name pos:line="4" pos:column="45">curpos<pos:position pos:line="4" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="52"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">wchar_t<pos:position pos:line="5" pos:column="10"/></name> <modifier pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></modifier></type><name pos:line="5" pos:column="12">savebuf<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name pos:line="5" pos:column="22">NULL<pos:position pos:line="5" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">savelen<pos:position pos:line="7" pos:column="14"/></name></expr>)<pos:position pos:line="7" pos:column="15"/></condition><then pos:line="7" pos:column="15">
  <block pos:line="8" pos:column="3">{
    <expr_stmt><expr><name pos:line="9" pos:column="5">savebuf<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <call><name pos:line="9" pos:column="15">safe_calloc<pos:position pos:line="9" pos:column="26"/></name> <argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">savelen<pos:position pos:line="9" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="37">sizeof <argument_list pos:line="9" pos:column="44">(<argument><expr><name pos:line="9" pos:column="45">wchar_t<pos:position pos:line="9" pos:column="52"/></name></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">memcpy<pos:position pos:line="10" pos:column="11"/></name> <argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">savebuf<pos:position pos:line="10" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="22">state<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">-&gt;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="29">wbuf<pos:position pos:line="10" pos:column="33"/></name></name> <operator pos:line="10" pos:column="34">+<pos:position pos:line="10" pos:column="35"/></operator> <name><name pos:line="10" pos:column="36">state<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">-&gt;<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="43">curpos<pos:position pos:line="10" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="51">savelen<pos:position pos:line="10" pos:column="58"/></name> <operator pos:line="10" pos:column="59">*<pos:position pos:line="10" pos:column="60"/></operator> <sizeof pos:line="10" pos:column="61">sizeof <argument_list pos:line="10" pos:column="68">(<argument><expr><name pos:line="10" pos:column="69">wchar_t<pos:position pos:line="10" pos:column="76"/></name></expr></argument>)<pos:position pos:line="10" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="79"/></expr_stmt>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="13" pos:column="3">/* Convert to wide characters */</comment>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">state<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">-&gt;<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="10">curpos<pos:position pos:line="14" pos:column="16"/></name></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <call><name pos:line="14" pos:column="19">my_mbstowcs<pos:position pos:line="14" pos:column="30"/></name> <argument_list pos:line="14" pos:column="31">(<argument><expr><operator pos:line="14" pos:column="32">&amp;<pos:position pos:line="14" pos:column="37"/></operator><name><name pos:line="14" pos:column="33">state<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">-&gt;<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="40">wbuf<pos:position pos:line="14" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="46">&amp;<pos:position pos:line="14" pos:column="51"/></operator><name><name pos:line="14" pos:column="47">state<pos:position pos:line="14" pos:column="52"/></name><operator pos:line="14" pos:column="52">-&gt;<pos:position pos:line="14" pos:column="57"/></operator><name pos:line="14" pos:column="54">wbuflen<pos:position pos:line="14" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="63">from<pos:position pos:line="14" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="69">buf<pos:position pos:line="14" pos:column="72"/></name></expr></argument>)<pos:position pos:line="14" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="74"/></expr_stmt>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">savelen<pos:position pos:line="16" pos:column="14"/></name></expr>)<pos:position pos:line="16" pos:column="15"/></condition><then pos:line="16" pos:column="15">
  <block pos:line="17" pos:column="3">{
    <comment type="block" pos:line="18" pos:column="5">/* Make space for suffix */</comment>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name><name pos:line="19" pos:column="9">state<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">-&gt;<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="16">curpos<pos:position pos:line="19" pos:column="22"/></name></name> <operator pos:line="19" pos:column="23">+<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="25">savelen<pos:position pos:line="19" pos:column="32"/></name> <operator pos:line="19" pos:column="33">&gt;<pos:position pos:line="19" pos:column="37"/></operator> <name><name pos:line="19" pos:column="35">state<pos:position pos:line="19" pos:column="40"/></name><operator pos:line="19" pos:column="40">-&gt;<pos:position pos:line="19" pos:column="45"/></operator><name pos:line="19" pos:column="42">wbuflen<pos:position pos:line="19" pos:column="49"/></name></name></expr>)<pos:position pos:line="19" pos:column="50"/></condition><then pos:line="19" pos:column="50">
    <block pos:line="20" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="21" pos:column="7">state<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">-&gt;<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="14">wbuflen<pos:position pos:line="21" pos:column="21"/></name></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <name><name pos:line="21" pos:column="24">state<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">-&gt;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="31">curpos<pos:position pos:line="21" pos:column="37"/></name></name> <operator pos:line="21" pos:column="38">+<pos:position pos:line="21" pos:column="39"/></operator> <name pos:line="21" pos:column="40">savelen<pos:position pos:line="21" pos:column="47"/></name></expr>;<pos:position pos:line="21" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">safe_realloc<pos:position pos:line="22" pos:column="19"/></name> <argument_list pos:line="22" pos:column="20">(<argument><expr><operator pos:line="22" pos:column="21">&amp;<pos:position pos:line="22" pos:column="26"/></operator><name><name pos:line="22" pos:column="22">state<pos:position pos:line="22" pos:column="27"/></name><operator pos:line="22" pos:column="27">-&gt;<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="29">wbuf<pos:position pos:line="22" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="35">state<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">-&gt;<pos:position pos:line="22" pos:column="45"/></operator><name pos:line="22" pos:column="42">wbuflen<pos:position pos:line="22" pos:column="49"/></name></name> <operator pos:line="22" pos:column="50">*<pos:position pos:line="22" pos:column="51"/></operator> <sizeof pos:line="22" pos:column="52">sizeof <argument_list pos:line="22" pos:column="59">(<argument><expr><name pos:line="22" pos:column="60">wchar_t<pos:position pos:line="22" pos:column="67"/></name></expr></argument>)<pos:position pos:line="22" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="70"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="25" pos:column="5">/* Restore suffix */</comment>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">memcpy<pos:position pos:line="26" pos:column="11"/></name> <argument_list pos:line="26" pos:column="12">(<argument><expr><name><name pos:line="26" pos:column="13">state<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">-&gt;<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="20">wbuf<pos:position pos:line="26" pos:column="24"/></name></name> <operator pos:line="26" pos:column="25">+<pos:position pos:line="26" pos:column="26"/></operator> <name><name pos:line="26" pos:column="27">state<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">-&gt;<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="34">curpos<pos:position pos:line="26" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="42">savebuf<pos:position pos:line="26" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="51">savelen<pos:position pos:line="26" pos:column="58"/></name> <operator pos:line="26" pos:column="59">*<pos:position pos:line="26" pos:column="60"/></operator> <sizeof pos:line="26" pos:column="61">sizeof <argument_list pos:line="26" pos:column="68">(<argument><expr><name pos:line="26" pos:column="69">wchar_t<pos:position pos:line="26" pos:column="76"/></name></expr></argument>)<pos:position pos:line="26" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="79"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">FREE<pos:position pos:line="27" pos:column="9"/></name> <argument_list pos:line="27" pos:column="10">(<argument><expr><operator pos:line="27" pos:column="11">&amp;<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="12">savebuf<pos:position pos:line="27" pos:column="19"/></name></expr></argument>)<pos:position pos:line="27" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="30" pos:column="3">state<pos:position pos:line="30" pos:column="8"/></name><operator pos:line="30" pos:column="8">-&gt;<pos:position pos:line="30" pos:column="13"/></operator><name pos:line="30" pos:column="10">lastchar<pos:position pos:line="30" pos:column="18"/></name></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <name><name pos:line="30" pos:column="21">state<pos:position pos:line="30" pos:column="26"/></name><operator pos:line="30" pos:column="26">-&gt;<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="28">curpos<pos:position pos:line="30" pos:column="34"/></name></name> <operator pos:line="30" pos:column="35">+<pos:position pos:line="30" pos:column="36"/></operator> <name pos:line="30" pos:column="37">savelen<pos:position pos:line="30" pos:column="44"/></name></expr>;<pos:position pos:line="30" pos:column="45"/></expr_stmt>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_999_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">tls_check_certificate<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">CONNECTION<pos:position pos:line="1" pos:column="45"/></name><modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type> <name pos:line="1" pos:column="47">conn<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">tlssockdata<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">data<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><name><name pos:line="3" pos:column="23">conn<pos:position pos:line="3" pos:column="27"/></name><operator pos:line="3" pos:column="27">-&gt;<pos:position pos:line="3" pos:column="32"/></operator><name pos:line="3" pos:column="29">sockdata<pos:position pos:line="3" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">gnutls_session_t<pos:position pos:line="4" pos:column="19"/></name></type> <name pos:line="4" pos:column="20">state<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name><name pos:line="4" pos:column="28">data<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">state<pos:position pos:line="4" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">gnutls_datum_t<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">cert_list<pos:position pos:line="5" pos:column="34"/></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">int<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">cert_list_size<pos:position pos:line="6" pos:column="30"/></name> <init pos:line="6" pos:column="31">= <expr><literal type="number" pos:line="6" pos:column="33">0<pos:position pos:line="6" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">gnutls_certificate_status_t<pos:position pos:line="7" pos:column="30"/></name></type> <name pos:line="7" pos:column="31">certstat<pos:position pos:line="7" pos:column="39"/></name></decl>;<pos:position pos:line="7" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">certerr<pos:position pos:line="8" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="16">i<pos:position pos:line="8" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="19">preauthrc<pos:position pos:line="8" pos:column="28"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="30">savedcert<pos:position pos:line="8" pos:column="39"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="41">rc<pos:position pos:line="8" pos:column="43"/></name> <init pos:line="8" pos:column="44">= <expr><literal type="number" pos:line="8" pos:column="46">0<pos:position pos:line="8" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">rcpeer<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><operator pos:line="9" pos:column="16">-<pos:position pos:line="9" pos:column="17"/></operator><literal type="number" pos:line="9" pos:column="17">1<pos:position pos:line="9" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt> <comment type="block" pos:line="9" pos:column="20">/* the result of tls_check_preauth() on the peer's EE cert */</comment>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><call><name pos:line="11" pos:column="7">gnutls_auth_get_type<pos:position pos:line="11" pos:column="27"/></name> <argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">state<pos:position pos:line="11" pos:column="34"/></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call> <operator pos:line="11" pos:column="36">!=<pos:position pos:line="11" pos:column="38"/></operator> <name pos:line="11" pos:column="39">GNUTLS_CRD_CERTIFICATE<pos:position pos:line="11" pos:column="61"/></name></expr>)<pos:position pos:line="11" pos:column="62"/></condition><then pos:line="11" pos:column="62">
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">mutt_error<pos:position pos:line="13" pos:column="15"/></name> <argument_list pos:line="13" pos:column="16">(<argument><expr><call><name pos:line="13" pos:column="17">_<pos:position pos:line="13" pos:column="18"/></name><argument_list pos:line="13" pos:column="18">(<argument><expr><literal type="string" pos:line="13" pos:column="19">"Unable to get certificate from peer"<pos:position pos:line="13" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">mutt_sleep<pos:position pos:line="14" pos:column="15"/></name> <argument_list pos:line="14" pos:column="16">(<argument><expr><literal type="number" pos:line="14" pos:column="17">2<pos:position pos:line="14" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="20"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><literal type="number" pos:line="15" pos:column="12">0<pos:position pos:line="15" pos:column="13"/></literal></expr>;<pos:position pos:line="15" pos:column="14"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="18" pos:column="3">certstat<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">tls_verify_peers<pos:position pos:line="18" pos:column="30"/></name> <argument_list pos:line="18" pos:column="31">(<argument><expr><name pos:line="18" pos:column="32">state<pos:position pos:line="18" pos:column="37"/></name></expr></argument>)<pos:position pos:line="18" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>

  <expr_stmt><expr><name pos:line="20" pos:column="3">cert_list<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <call><name pos:line="20" pos:column="15">gnutls_certificate_get_peers<pos:position pos:line="20" pos:column="43"/></name> <argument_list pos:line="20" pos:column="44">(<argument><expr><name pos:line="20" pos:column="45">state<pos:position pos:line="20" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="52">&amp;<pos:position pos:line="20" pos:column="57"/></operator><name pos:line="20" pos:column="53">cert_list_size<pos:position pos:line="20" pos:column="67"/></name></expr></argument>)<pos:position pos:line="20" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="69"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><operator pos:line="21" pos:column="7">!<pos:position pos:line="21" pos:column="8"/></operator><name pos:line="21" pos:column="8">cert_list<pos:position pos:line="21" pos:column="17"/></name></expr>)<pos:position pos:line="21" pos:column="18"/></condition><then pos:line="21" pos:column="18">
  <block pos:line="22" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">mutt_error<pos:position pos:line="23" pos:column="15"/></name> <argument_list pos:line="23" pos:column="16">(<argument><expr><call><name pos:line="23" pos:column="17">_<pos:position pos:line="23" pos:column="18"/></name><argument_list pos:line="23" pos:column="18">(<argument><expr><literal type="string" pos:line="23" pos:column="19">"Unable to get certificate from peer"<pos:position pos:line="23" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">mutt_sleep<pos:position pos:line="24" pos:column="15"/></name> <argument_list pos:line="24" pos:column="16">(<argument><expr><literal type="number" pos:line="24" pos:column="17">2<pos:position pos:line="24" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="20"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><literal type="number" pos:line="25" pos:column="12">0<pos:position pos:line="25" pos:column="13"/></literal></expr>;<pos:position pos:line="25" pos:column="14"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="28" pos:column="3">/* tls_verify_peers doesn't check hostname or expiration, so walk
   * from most specific to least checking these. If we see a saved certificate,
   * its status short-circuits the remaining checks. */</comment>
  <expr_stmt><expr><name pos:line="31" pos:column="3">preauthrc<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">=<pos:position pos:line="31" pos:column="14"/></operator> <literal type="number" pos:line="31" pos:column="15">0<pos:position pos:line="31" pos:column="16"/></literal></expr>;<pos:position pos:line="31" pos:column="17"/></expr_stmt>
  <for pos:line="32" pos:column="3">for <control pos:line="32" pos:column="7">(<init><expr><name pos:line="32" pos:column="8">i<pos:position pos:line="32" pos:column="9"/></name> <operator pos:line="32" pos:column="10">=<pos:position pos:line="32" pos:column="11"/></operator> <literal type="number" pos:line="32" pos:column="12">0<pos:position pos:line="32" pos:column="13"/></literal></expr>;<pos:position pos:line="32" pos:column="14"/></init> <condition><expr><name pos:line="32" pos:column="15">i<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">&lt;<pos:position pos:line="32" pos:column="21"/></operator> <name pos:line="32" pos:column="19">cert_list_size<pos:position pos:line="32" pos:column="33"/></name></expr>;<pos:position pos:line="32" pos:column="34"/></condition> <incr><expr><name pos:line="32" pos:column="35">i<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">++<pos:position pos:line="32" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="32" pos:column="39"/></control> <block pos:line="32" pos:column="40">{
    <expr_stmt><expr><name pos:line="33" pos:column="5">rc<pos:position pos:line="33" pos:column="7"/></name> <operator pos:line="33" pos:column="8">=<pos:position pos:line="33" pos:column="9"/></operator> <call><name pos:line="33" pos:column="10">tls_check_preauth<pos:position pos:line="33" pos:column="27"/></name><argument_list pos:line="33" pos:column="27">(<argument><expr><operator pos:line="33" pos:column="28">&amp;<pos:position pos:line="33" pos:column="33"/></operator><name><name pos:line="33" pos:column="29">cert_list<pos:position pos:line="33" pos:column="38"/></name><index pos:line="33" pos:column="38">[<expr><name pos:line="33" pos:column="39">i<pos:position pos:line="33" pos:column="40"/></name></expr>]<pos:position pos:line="33" pos:column="41"/></index></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="43">certstat<pos:position pos:line="33" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="53">conn<pos:position pos:line="33" pos:column="57"/></name><operator pos:line="33" pos:column="57">-&gt;<pos:position pos:line="33" pos:column="62"/></operator><name pos:line="33" pos:column="59">account<pos:position pos:line="33" pos:column="66"/></name><operator pos:line="33" pos:column="66">.<pos:position pos:line="33" pos:column="67"/></operator><name pos:line="33" pos:column="67">host<pos:position pos:line="33" pos:column="71"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="73">i<pos:position pos:line="33" pos:column="74"/></name></expr></argument>,
                           <argument><expr><operator pos:line="34" pos:column="28">&amp;<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="29">certerr<pos:position pos:line="34" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="38">&amp;<pos:position pos:line="34" pos:column="43"/></operator><name pos:line="34" pos:column="39">savedcert<pos:position pos:line="34" pos:column="48"/></name></expr></argument>)<pos:position pos:line="34" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name pos:line="35" pos:column="5">preauthrc<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">+=<pos:position pos:line="35" pos:column="17"/></operator> <name pos:line="35" pos:column="18">rc<pos:position pos:line="35" pos:column="20"/></name></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">i<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">==<pos:position pos:line="36" pos:column="13"/></operator> <literal type="number" pos:line="36" pos:column="14">0<pos:position pos:line="36" pos:column="15"/></literal></expr>)<pos:position pos:line="36" pos:column="16"/></condition><then pos:line="36" pos:column="16">
    <block pos:line="37" pos:column="5">{
      <comment type="block" pos:line="38" pos:column="7">/* This is the peer's end-entity X.509 certificate.  Stash the result
       * to check later in this function.
       */</comment>
      <expr_stmt><expr><name pos:line="41" pos:column="7">rcpeer<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <name pos:line="41" pos:column="16">rc<pos:position pos:line="41" pos:column="18"/></name></expr>;<pos:position pos:line="41" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">savedcert<pos:position pos:line="44" pos:column="18"/></name></expr>)<pos:position pos:line="44" pos:column="19"/></condition><then pos:line="44" pos:column="19">
    <block pos:line="45" pos:column="5">{
      <if pos:line="46" pos:column="7">if <condition pos:line="46" pos:column="10">(<expr><operator pos:line="46" pos:column="11">!<pos:position pos:line="46" pos:column="12"/></operator><name pos:line="46" pos:column="12">preauthrc<pos:position pos:line="46" pos:column="21"/></name></expr>)<pos:position pos:line="46" pos:column="22"/></condition><then pos:line="46" pos:column="22">
        <block type="pseudo"><return pos:line="47" pos:column="9">return <expr><literal type="number" pos:line="47" pos:column="16">1<pos:position pos:line="47" pos:column="17"/></literal></expr>;<pos:position pos:line="47" pos:column="18"/></return></block></then>
      <else pos:line="48" pos:column="7">else
        <block type="pseudo"><break pos:line="49" pos:column="9">break;<pos:position pos:line="49" pos:column="15"/></break></block></else></if>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>
  }<pos:position pos:line="51" pos:column="4"/></block></for>

  <comment type="block" pos:line="53" pos:column="3">/* then check interactively, starting from chain root */</comment>
  <for pos:line="54" pos:column="3">for <control pos:line="54" pos:column="7">(<init><expr><name pos:line="54" pos:column="8">i<pos:position pos:line="54" pos:column="9"/></name> <operator pos:line="54" pos:column="10">=<pos:position pos:line="54" pos:column="11"/></operator> <name pos:line="54" pos:column="12">cert_list_size<pos:position pos:line="54" pos:column="26"/></name> <operator pos:line="54" pos:column="27">-<pos:position pos:line="54" pos:column="28"/></operator> <literal type="number" pos:line="54" pos:column="29">1<pos:position pos:line="54" pos:column="30"/></literal></expr>;<pos:position pos:line="54" pos:column="31"/></init> <condition><expr><name pos:line="54" pos:column="32">i<pos:position pos:line="54" pos:column="33"/></name> <operator pos:line="54" pos:column="34">&gt;=<pos:position pos:line="54" pos:column="39"/></operator> <literal type="number" pos:line="54" pos:column="37">0<pos:position pos:line="54" pos:column="38"/></literal></expr>;<pos:position pos:line="54" pos:column="39"/></condition> <incr><expr><name pos:line="54" pos:column="40">i<pos:position pos:line="54" pos:column="41"/></name><operator pos:line="54" pos:column="41">--<pos:position pos:line="54" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="54" pos:column="44"/></control>
  <block pos:line="55" pos:column="3">{
    <expr_stmt><expr><name pos:line="56" pos:column="5">rc<pos:position pos:line="56" pos:column="7"/></name> <operator pos:line="56" pos:column="8">=<pos:position pos:line="56" pos:column="9"/></operator> <call><name pos:line="56" pos:column="10">tls_check_one_certificate<pos:position pos:line="56" pos:column="35"/></name> <argument_list pos:line="56" pos:column="36">(<argument><expr><operator pos:line="56" pos:column="37">&amp;<pos:position pos:line="56" pos:column="42"/></operator><name><name pos:line="56" pos:column="38">cert_list<pos:position pos:line="56" pos:column="47"/></name><index pos:line="56" pos:column="47">[<expr><name pos:line="56" pos:column="48">i<pos:position pos:line="56" pos:column="49"/></name></expr>]<pos:position pos:line="56" pos:column="50"/></index></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="52">certstat<pos:position pos:line="56" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="62">conn<pos:position pos:line="56" pos:column="66"/></name><operator pos:line="56" pos:column="66">-&gt;<pos:position pos:line="56" pos:column="71"/></operator><name pos:line="56" pos:column="68">account<pos:position pos:line="56" pos:column="75"/></name><operator pos:line="56" pos:column="75">.<pos:position pos:line="56" pos:column="76"/></operator><name pos:line="56" pos:column="76">host<pos:position pos:line="56" pos:column="80"/></name></name></expr></argument>,
                                    <argument><expr><name pos:line="57" pos:column="37">i<pos:position pos:line="57" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="40">cert_list_size<pos:position pos:line="57" pos:column="54"/></name></expr></argument>)<pos:position pos:line="57" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="56"/></expr_stmt>

    <comment type="block" pos:line="59" pos:column="5">/* add signers to trust set, then reverify */</comment>
    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><name pos:line="60" pos:column="9">i<pos:position pos:line="60" pos:column="10"/></name> <operator pos:line="60" pos:column="11">&amp;&amp;<pos:position pos:line="60" pos:column="21"/></operator> <name pos:line="60" pos:column="14">rc<pos:position pos:line="60" pos:column="16"/></name></expr>)<pos:position pos:line="60" pos:column="17"/></condition><then pos:line="60" pos:column="17"> <block pos:line="60" pos:column="18">{
      <expr_stmt><expr><name pos:line="61" pos:column="7">rc<pos:position pos:line="61" pos:column="9"/></name> <operator pos:line="61" pos:column="10">=<pos:position pos:line="61" pos:column="11"/></operator> <call><name pos:line="61" pos:column="12">gnutls_certificate_set_x509_trust_mem<pos:position pos:line="61" pos:column="49"/></name> <argument_list pos:line="61" pos:column="50">(<argument><expr><name><name pos:line="61" pos:column="51">data<pos:position pos:line="61" pos:column="55"/></name><operator pos:line="61" pos:column="55">-&gt;<pos:position pos:line="61" pos:column="60"/></operator><name pos:line="61" pos:column="57">xcred<pos:position pos:line="61" pos:column="62"/></name></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="64">&amp;<pos:position pos:line="61" pos:column="69"/></operator><name><name pos:line="61" pos:column="65">cert_list<pos:position pos:line="61" pos:column="74"/></name><index pos:line="61" pos:column="74">[<expr><name pos:line="61" pos:column="75">i<pos:position pos:line="61" pos:column="76"/></name></expr>]<pos:position pos:line="61" pos:column="77"/></index></name></expr></argument>,
                                                  <argument><expr><name pos:line="62" pos:column="51">GNUTLS_X509_FMT_DER<pos:position pos:line="62" pos:column="70"/></name></expr></argument>)<pos:position pos:line="62" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="72"/></expr_stmt>
      <if pos:line="63" pos:column="7">if <condition pos:line="63" pos:column="10">(<expr><name pos:line="63" pos:column="11">rc<pos:position pos:line="63" pos:column="13"/></name> <operator pos:line="63" pos:column="14">!=<pos:position pos:line="63" pos:column="16"/></operator> <literal type="number" pos:line="63" pos:column="17">1<pos:position pos:line="63" pos:column="18"/></literal></expr>)<pos:position pos:line="63" pos:column="19"/></condition><then pos:line="63" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="9">dprint<pos:position pos:line="64" pos:column="15"/></name> <argument_list pos:line="64" pos:column="16">(<argument><expr><literal type="number" pos:line="64" pos:column="17">1<pos:position pos:line="64" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="64" pos:column="20">(<pos:position pos:line="64" pos:column="21"/></operator><name pos:line="64" pos:column="21">debugfile<pos:position pos:line="64" pos:column="30"/></name><operator pos:line="64" pos:column="30">,<pos:position pos:line="64" pos:column="31"/></operator> <literal type="string" pos:line="64" pos:column="32">"error trusting certificate %d: %d\n"<pos:position pos:line="64" pos:column="69"/></literal><operator pos:line="64" pos:column="69">,<pos:position pos:line="64" pos:column="70"/></operator> <name pos:line="64" pos:column="71">i<pos:position pos:line="64" pos:column="72"/></name><operator pos:line="64" pos:column="72">,<pos:position pos:line="64" pos:column="73"/></operator> <name pos:line="64" pos:column="74">rc<pos:position pos:line="64" pos:column="76"/></name><operator pos:line="64" pos:column="76">)<pos:position pos:line="64" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="64" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="79"/></expr_stmt></block></then></if>

      <expr_stmt><expr><name pos:line="66" pos:column="7">certstat<pos:position pos:line="66" pos:column="15"/></name> <operator pos:line="66" pos:column="16">=<pos:position pos:line="66" pos:column="17"/></operator> <call><name pos:line="66" pos:column="18">tls_verify_peers<pos:position pos:line="66" pos:column="34"/></name> <argument_list pos:line="66" pos:column="35">(<argument><expr><name pos:line="66" pos:column="36">state<pos:position pos:line="66" pos:column="41"/></name></expr></argument>)<pos:position pos:line="66" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="43"/></expr_stmt>
      <comment type="block" pos:line="67" pos:column="7">/* If the cert chain now verifies, and the peer's cert was otherwise
       * valid (rcpeer==0), we are done.
       */</comment>
      <if pos:line="70" pos:column="7">if <condition pos:line="70" pos:column="10">(<expr><operator pos:line="70" pos:column="11">!<pos:position pos:line="70" pos:column="12"/></operator><name pos:line="70" pos:column="12">certstat<pos:position pos:line="70" pos:column="20"/></name> <operator pos:line="70" pos:column="21">&amp;&amp;<pos:position pos:line="70" pos:column="31"/></operator> <operator pos:line="70" pos:column="24">!<pos:position pos:line="70" pos:column="25"/></operator><name pos:line="70" pos:column="25">rcpeer<pos:position pos:line="70" pos:column="31"/></name></expr>)<pos:position pos:line="70" pos:column="32"/></condition><then pos:line="70" pos:column="32">
        <block type="pseudo"><return pos:line="71" pos:column="9">return <expr><literal type="number" pos:line="71" pos:column="16">1<pos:position pos:line="71" pos:column="17"/></literal></expr>;<pos:position pos:line="71" pos:column="18"/></return></block></then></if>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if>
  }<pos:position pos:line="73" pos:column="4"/></block></for>

  <return pos:line="75" pos:column="3">return <expr><name pos:line="75" pos:column="10">rc<pos:position pos:line="75" pos:column="12"/></name></expr>;<pos:position pos:line="75" pos:column="13"/></return>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

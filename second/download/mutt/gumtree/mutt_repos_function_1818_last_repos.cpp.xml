<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1818_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">cb_format_str<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">dest<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">size_t<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">destlen<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">size_t<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">col<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="74">int<pos:position pos:line="1" pos:column="77"/></name></type> <name pos:line="1" pos:column="78">cols<pos:position pos:line="1" pos:column="82"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="84">char<pos:position pos:line="1" pos:column="88"/></name></type> <name pos:line="1" pos:column="89">op<pos:position pos:line="1" pos:column="91"/></name></decl></parameter>,
                                 <parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name pos:line="2" pos:column="40">char<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">src<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="51">const<pos:position pos:line="2" pos:column="56"/></specifier> <name pos:line="2" pos:column="57">char<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">prefix<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="71">const<pos:position pos:line="2" pos:column="76"/></specifier> <name pos:line="2" pos:column="77">char<pos:position pos:line="2" pos:column="81"/></name> <modifier pos:line="2" pos:column="82">*<pos:position pos:line="2" pos:column="83"/></modifier></type><name pos:line="2" pos:column="83">ifstring<pos:position pos:line="2" pos:column="91"/></name></decl></parameter>,
                                 <parameter><decl><type><specifier pos:line="3" pos:column="34">const<pos:position pos:line="3" pos:column="39"/></specifier> <name pos:line="3" pos:column="40">char<pos:position pos:line="3" pos:column="44"/></name> <modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier></type><name pos:line="3" pos:column="46">elsestring<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="58">unsigned<pos:position pos:line="3" pos:column="66"/></name> <name pos:line="3" pos:column="67">long<pos:position pos:line="3" pos:column="71"/></name></type> <name pos:line="3" pos:column="72">data<pos:position pos:line="3" pos:column="76"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="78">format_flag<pos:position pos:line="3" pos:column="89"/></name></type> <name pos:line="3" pos:column="90">flags<pos:position pos:line="3" pos:column="95"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="96"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">SBENTRY<pos:position pos:line="5" pos:column="10"/></name> <modifier pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></modifier></type><name pos:line="5" pos:column="12">sbe<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><operator pos:line="5" pos:column="18">(<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">SBENTRY<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></operator><operator pos:line="5" pos:column="28">)<pos:position pos:line="5" pos:column="29"/></operator> <name pos:line="5" pos:column="30">data<pos:position pos:line="5" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">int<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">optional<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">fmt<pos:position pos:line="7" pos:column="11"/></name><index pos:line="7" pos:column="11">[<expr><name pos:line="7" pos:column="12">STRING<pos:position pos:line="7" pos:column="18"/></name></expr>]<pos:position pos:line="7" pos:column="19"/></index></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">!<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">sbe<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">||<pos:position pos:line="9" pos:column="14"/></operator> <operator pos:line="9" pos:column="15">!<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">dest<pos:position pos:line="9" pos:column="20"/></name></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">src<pos:position pos:line="10" pos:column="15"/></name></expr>;<pos:position pos:line="10" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="12" pos:column="3">dest<pos:position pos:line="12" pos:column="7"/></name><index pos:line="12" pos:column="7">[<expr><literal type="number" pos:line="12" pos:column="8">0<pos:position pos:line="12" pos:column="9"/></literal></expr>]<pos:position pos:line="12" pos:column="10"/></index></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <literal type="number" pos:line="12" pos:column="13">0<pos:position pos:line="12" pos:column="14"/></literal></expr>;<pos:position pos:line="12" pos:column="15"/></expr_stmt>	<comment type="block" pos:line="12" pos:column="17">/* Just in case there's nothing to do */</comment>

  <decl_stmt><decl><type><name pos:line="14" pos:column="3">BUFFY<pos:position pos:line="14" pos:column="8"/></name> <modifier pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></modifier></type><name pos:line="14" pos:column="10">b<pos:position pos:line="14" pos:column="11"/></name> <init pos:line="14" pos:column="12">= <expr><name><name pos:line="14" pos:column="14">sbe<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">-&gt;<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="19">buffy<pos:position pos:line="14" pos:column="24"/></name></name></expr></init></decl>;<pos:position pos:line="14" pos:column="25"/></decl_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><operator pos:line="15" pos:column="7">!<pos:position pos:line="15" pos:column="8"/></operator><name pos:line="15" pos:column="8">b<pos:position pos:line="15" pos:column="9"/></name></expr>)<pos:position pos:line="15" pos:column="10"/></condition><then pos:line="15" pos:column="10">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">src<pos:position pos:line="16" pos:column="15"/></name></expr>;<pos:position pos:line="16" pos:column="16"/></return></block></then></if>

  <decl_stmt><decl><type><name pos:line="18" pos:column="3">int<pos:position pos:line="18" pos:column="6"/></name></type> <name pos:line="18" pos:column="7">c<pos:position pos:line="18" pos:column="8"/></name> <init pos:line="18" pos:column="9">= <expr><name pos:line="18" pos:column="11">Context<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">&amp;&amp;<pos:position pos:line="18" pos:column="29"/></operator> <operator pos:line="18" pos:column="22">(<pos:position pos:line="18" pos:column="23"/></operator><call><name pos:line="18" pos:column="23">mutt_strcmp<pos:position pos:line="18" pos:column="34"/></name> <argument_list pos:line="18" pos:column="35">(<argument><expr><name><name pos:line="18" pos:column="36">Context<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">-&gt;<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="45">realpath<pos:position pos:line="18" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="55">b<pos:position pos:line="18" pos:column="56"/></name><operator pos:line="18" pos:column="56">-&gt;<pos:position pos:line="18" pos:column="61"/></operator><name pos:line="18" pos:column="58">realpath<pos:position pos:line="18" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="67"/></argument_list></call> <operator pos:line="18" pos:column="68">==<pos:position pos:line="18" pos:column="70"/></operator> <literal type="number" pos:line="18" pos:column="71">0<pos:position pos:line="18" pos:column="72"/></literal><operator pos:line="18" pos:column="72">)<pos:position pos:line="18" pos:column="73"/></operator></expr></init></decl>;<pos:position pos:line="18" pos:column="74"/></decl_stmt>

  <expr_stmt><expr><name pos:line="20" pos:column="3">optional<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <name pos:line="20" pos:column="14">flags<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">&amp;<pos:position pos:line="20" pos:column="25"/></operator> <name pos:line="20" pos:column="22">MUTT_FORMAT_OPTIONAL<pos:position pos:line="20" pos:column="42"/></name></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>

  <switch pos:line="22" pos:column="3">switch <condition pos:line="22" pos:column="10">(<expr><name pos:line="22" pos:column="11">op<pos:position pos:line="22" pos:column="13"/></name></expr>)<pos:position pos:line="22" pos:column="14"/></condition>
  <block pos:line="23" pos:column="3">{
    <case pos:line="24" pos:column="5">case <expr><literal type="char" pos:line="24" pos:column="10">'B'<pos:position pos:line="24" pos:column="13"/></literal></expr>:<pos:position pos:line="24" pos:column="14"/></case>
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">mutt_format_s<pos:position pos:line="25" pos:column="20"/></name> <argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">dest<pos:position pos:line="25" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="28">destlen<pos:position pos:line="25" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="37">prefix<pos:position pos:line="25" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="45">sbe<pos:position pos:line="25" pos:column="48"/></name><operator pos:line="25" pos:column="48">-&gt;<pos:position pos:line="25" pos:column="53"/></operator><name pos:line="25" pos:column="50">box<pos:position pos:line="25" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="55"/></expr_stmt>
      <break pos:line="26" pos:column="7">break;<pos:position pos:line="26" pos:column="13"/></break>

    <case pos:line="28" pos:column="5">case <expr><literal type="char" pos:line="28" pos:column="10">'d'<pos:position pos:line="28" pos:column="13"/></literal></expr>:<pos:position pos:line="28" pos:column="14"/></case>
      <if pos:line="29" pos:column="7">if <condition pos:line="29" pos:column="10">(<expr><operator pos:line="29" pos:column="11">!<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="12">optional<pos:position pos:line="29" pos:column="20"/></name></expr>)<pos:position pos:line="29" pos:column="21"/></condition><then pos:line="29" pos:column="21">
      <block pos:line="30" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">snprintf<pos:position pos:line="31" pos:column="17"/></name> <argument_list pos:line="31" pos:column="18">(<argument><expr><name pos:line="31" pos:column="19">fmt<pos:position pos:line="31" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="24">sizeof <argument_list pos:line="31" pos:column="31">(<argument><expr><name pos:line="31" pos:column="32">fmt<pos:position pos:line="31" pos:column="35"/></name></expr></argument>)<pos:position pos:line="31" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="38">"%%%sd"<pos:position pos:line="31" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="47">prefix<pos:position pos:line="31" pos:column="53"/></name></expr></argument>)<pos:position pos:line="31" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">snprintf<pos:position pos:line="32" pos:column="17"/></name> <argument_list pos:line="32" pos:column="18">(<argument><expr><name pos:line="32" pos:column="19">dest<pos:position pos:line="32" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="25">destlen<pos:position pos:line="32" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="34">fmt<pos:position pos:line="32" pos:column="37"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="32" pos:column="39">c<pos:position pos:line="32" pos:column="40"/></name></expr> ?<pos:position pos:line="32" pos:column="42"/></condition><then pos:line="32" pos:column="42"> <expr><name><name pos:line="32" pos:column="43">Context<pos:position pos:line="32" pos:column="50"/></name><operator pos:line="32" pos:column="50">-&gt;<pos:position pos:line="32" pos:column="55"/></operator><name pos:line="32" pos:column="52">deleted<pos:position pos:line="32" pos:column="59"/></name></name></expr> <pos:position pos:line="32" pos:column="60"/></then><else pos:line="32" pos:column="60">: <expr><literal type="number" pos:line="32" pos:column="62">0<pos:position pos:line="32" pos:column="63"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="32" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="65"/></expr_stmt>
      }<pos:position pos:line="33" pos:column="8"/></block></then>
      <elseif pos:line="34" pos:column="7">else <if pos:line="34" pos:column="12">if <condition pos:line="34" pos:column="15">(<expr><operator pos:line="34" pos:column="16">(<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="17">c<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">&amp;&amp;<pos:position pos:line="34" pos:column="29"/></operator> <name><name pos:line="34" pos:column="22">Context<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">-&gt;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="31">deleted<pos:position pos:line="34" pos:column="38"/></name></name> <operator pos:line="34" pos:column="39">==<pos:position pos:line="34" pos:column="41"/></operator> <literal type="number" pos:line="34" pos:column="42">0<pos:position pos:line="34" pos:column="43"/></literal><operator pos:line="34" pos:column="43">)<pos:position pos:line="34" pos:column="44"/></operator> <operator pos:line="34" pos:column="45">||<pos:position pos:line="34" pos:column="47"/></operator> <operator pos:line="34" pos:column="48">!<pos:position pos:line="34" pos:column="49"/></operator><name pos:line="34" pos:column="49">c<pos:position pos:line="34" pos:column="50"/></name></expr>)<pos:position pos:line="34" pos:column="51"/></condition><then pos:line="34" pos:column="51">
        <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="9">optional<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <literal type="number" pos:line="35" pos:column="20">0<pos:position pos:line="35" pos:column="21"/></literal></expr>;<pos:position pos:line="35" pos:column="22"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="36" pos:column="7">break;<pos:position pos:line="36" pos:column="13"/></break>

    <case pos:line="38" pos:column="5">case <expr><literal type="char" pos:line="38" pos:column="10">'F'<pos:position pos:line="38" pos:column="13"/></literal></expr>:<pos:position pos:line="38" pos:column="14"/></case>
      <if pos:line="39" pos:column="7">if <condition pos:line="39" pos:column="10">(<expr><operator pos:line="39" pos:column="11">!<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="12">optional<pos:position pos:line="39" pos:column="20"/></name></expr>)<pos:position pos:line="39" pos:column="21"/></condition><then pos:line="39" pos:column="21">
      <block pos:line="40" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">snprintf<pos:position pos:line="41" pos:column="17"/></name> <argument_list pos:line="41" pos:column="18">(<argument><expr><name pos:line="41" pos:column="19">fmt<pos:position pos:line="41" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="24">sizeof <argument_list pos:line="41" pos:column="31">(<argument><expr><name pos:line="41" pos:column="32">fmt<pos:position pos:line="41" pos:column="35"/></name></expr></argument>)<pos:position pos:line="41" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="38">"%%%sd"<pos:position pos:line="41" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="47">prefix<pos:position pos:line="41" pos:column="53"/></name></expr></argument>)<pos:position pos:line="41" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">snprintf<pos:position pos:line="42" pos:column="17"/></name> <argument_list pos:line="42" pos:column="18">(<argument><expr><name pos:line="42" pos:column="19">dest<pos:position pos:line="42" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="25">destlen<pos:position pos:line="42" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="34">fmt<pos:position pos:line="42" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="39">b<pos:position pos:line="42" pos:column="40"/></name><operator pos:line="42" pos:column="40">-&gt;<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="42">msg_flagged<pos:position pos:line="42" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="55"/></expr_stmt>
      }<pos:position pos:line="43" pos:column="8"/></block></then>
      <elseif pos:line="44" pos:column="7">else <if pos:line="44" pos:column="12">if <condition pos:line="44" pos:column="15">(<expr><name><name pos:line="44" pos:column="16">b<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">-&gt;<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="19">msg_flagged<pos:position pos:line="44" pos:column="30"/></name></name> <operator pos:line="44" pos:column="31">==<pos:position pos:line="44" pos:column="33"/></operator> <literal type="number" pos:line="44" pos:column="34">0<pos:position pos:line="44" pos:column="35"/></literal></expr>)<pos:position pos:line="44" pos:column="36"/></condition><then pos:line="44" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="9">optional<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">=<pos:position pos:line="45" pos:column="19"/></operator> <literal type="number" pos:line="45" pos:column="20">0<pos:position pos:line="45" pos:column="21"/></literal></expr>;<pos:position pos:line="45" pos:column="22"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="46" pos:column="7">break;<pos:position pos:line="46" pos:column="13"/></break>

    <case pos:line="48" pos:column="5">case <expr><literal type="char" pos:line="48" pos:column="10">'L'<pos:position pos:line="48" pos:column="13"/></literal></expr>:<pos:position pos:line="48" pos:column="14"/></case>
      <if pos:line="49" pos:column="7">if <condition pos:line="49" pos:column="10">(<expr><operator pos:line="49" pos:column="11">!<pos:position pos:line="49" pos:column="12"/></operator><name pos:line="49" pos:column="12">optional<pos:position pos:line="49" pos:column="20"/></name></expr>)<pos:position pos:line="49" pos:column="21"/></condition><then pos:line="49" pos:column="21">
      <block pos:line="50" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">snprintf<pos:position pos:line="51" pos:column="17"/></name> <argument_list pos:line="51" pos:column="18">(<argument><expr><name pos:line="51" pos:column="19">fmt<pos:position pos:line="51" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="24">sizeof <argument_list pos:line="51" pos:column="31">(<argument><expr><name pos:line="51" pos:column="32">fmt<pos:position pos:line="51" pos:column="35"/></name></expr></argument>)<pos:position pos:line="51" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="38">"%%%sd"<pos:position pos:line="51" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="47">prefix<pos:position pos:line="51" pos:column="53"/></name></expr></argument>)<pos:position pos:line="51" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">snprintf<pos:position pos:line="52" pos:column="17"/></name> <argument_list pos:line="52" pos:column="18">(<argument><expr><name pos:line="52" pos:column="19">dest<pos:position pos:line="52" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="25">destlen<pos:position pos:line="52" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="34">fmt<pos:position pos:line="52" pos:column="37"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="52" pos:column="39">c<pos:position pos:line="52" pos:column="40"/></name></expr> ?<pos:position pos:line="52" pos:column="42"/></condition><then pos:line="52" pos:column="42"> <expr><name><name pos:line="52" pos:column="43">Context<pos:position pos:line="52" pos:column="50"/></name><operator pos:line="52" pos:column="50">-&gt;<pos:position pos:line="52" pos:column="55"/></operator><name pos:line="52" pos:column="52">vcount<pos:position pos:line="52" pos:column="58"/></name></name></expr> <pos:position pos:line="52" pos:column="59"/></then><else pos:line="52" pos:column="59">: <expr><name><name pos:line="52" pos:column="61">b<pos:position pos:line="52" pos:column="62"/></name><operator pos:line="52" pos:column="62">-&gt;<pos:position pos:line="52" pos:column="67"/></operator><name pos:line="52" pos:column="64">msg_count<pos:position pos:line="52" pos:column="73"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="52" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="75"/></expr_stmt>
      }<pos:position pos:line="53" pos:column="8"/></block></then>
      <elseif pos:line="54" pos:column="7">else <if pos:line="54" pos:column="12">if <condition pos:line="54" pos:column="15">(<expr><operator pos:line="54" pos:column="16">(<pos:position pos:line="54" pos:column="17"/></operator><name pos:line="54" pos:column="17">c<pos:position pos:line="54" pos:column="18"/></name> <operator pos:line="54" pos:column="19">&amp;&amp;<pos:position pos:line="54" pos:column="29"/></operator> <name><name pos:line="54" pos:column="22">Context<pos:position pos:line="54" pos:column="29"/></name><operator pos:line="54" pos:column="29">-&gt;<pos:position pos:line="54" pos:column="34"/></operator><name pos:line="54" pos:column="31">vcount<pos:position pos:line="54" pos:column="37"/></name></name> <operator pos:line="54" pos:column="38">==<pos:position pos:line="54" pos:column="40"/></operator> <name><name pos:line="54" pos:column="41">b<pos:position pos:line="54" pos:column="42"/></name><operator pos:line="54" pos:column="42">-&gt;<pos:position pos:line="54" pos:column="47"/></operator><name pos:line="54" pos:column="44">msg_count<pos:position pos:line="54" pos:column="53"/></name></name><operator pos:line="54" pos:column="53">)<pos:position pos:line="54" pos:column="54"/></operator> <operator pos:line="54" pos:column="55">||<pos:position pos:line="54" pos:column="57"/></operator> <operator pos:line="54" pos:column="58">!<pos:position pos:line="54" pos:column="59"/></operator><name pos:line="54" pos:column="59">c<pos:position pos:line="54" pos:column="60"/></name></expr>)<pos:position pos:line="54" pos:column="61"/></condition><then pos:line="54" pos:column="61">
        <block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="9">optional<pos:position pos:line="55" pos:column="17"/></name> <operator pos:line="55" pos:column="18">=<pos:position pos:line="55" pos:column="19"/></operator> <literal type="number" pos:line="55" pos:column="20">0<pos:position pos:line="55" pos:column="21"/></literal></expr>;<pos:position pos:line="55" pos:column="22"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="56" pos:column="7">break;<pos:position pos:line="56" pos:column="13"/></break>

    <case pos:line="58" pos:column="5">case <expr><literal type="char" pos:line="58" pos:column="10">'N'<pos:position pos:line="58" pos:column="13"/></literal></expr>:<pos:position pos:line="58" pos:column="14"/></case>
      <if pos:line="59" pos:column="7">if <condition pos:line="59" pos:column="10">(<expr><operator pos:line="59" pos:column="11">!<pos:position pos:line="59" pos:column="12"/></operator><name pos:line="59" pos:column="12">optional<pos:position pos:line="59" pos:column="20"/></name></expr>)<pos:position pos:line="59" pos:column="21"/></condition><then pos:line="59" pos:column="21">
      <block pos:line="60" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">snprintf<pos:position pos:line="61" pos:column="17"/></name> <argument_list pos:line="61" pos:column="18">(<argument><expr><name pos:line="61" pos:column="19">fmt<pos:position pos:line="61" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="24">sizeof <argument_list pos:line="61" pos:column="31">(<argument><expr><name pos:line="61" pos:column="32">fmt<pos:position pos:line="61" pos:column="35"/></name></expr></argument>)<pos:position pos:line="61" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="38">"%%%sd"<pos:position pos:line="61" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="47">prefix<pos:position pos:line="61" pos:column="53"/></name></expr></argument>)<pos:position pos:line="61" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">snprintf<pos:position pos:line="62" pos:column="17"/></name> <argument_list pos:line="62" pos:column="18">(<argument><expr><name pos:line="62" pos:column="19">dest<pos:position pos:line="62" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="25">destlen<pos:position pos:line="62" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="34">fmt<pos:position pos:line="62" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="39">b<pos:position pos:line="62" pos:column="40"/></name><operator pos:line="62" pos:column="40">-&gt;<pos:position pos:line="62" pos:column="45"/></operator><name pos:line="62" pos:column="42">msg_unread<pos:position pos:line="62" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="54"/></expr_stmt>
      }<pos:position pos:line="63" pos:column="8"/></block></then>
      <elseif pos:line="64" pos:column="7">else <if pos:line="64" pos:column="12">if <condition pos:line="64" pos:column="15">(<expr><name><name pos:line="64" pos:column="16">b<pos:position pos:line="64" pos:column="17"/></name><operator pos:line="64" pos:column="17">-&gt;<pos:position pos:line="64" pos:column="22"/></operator><name pos:line="64" pos:column="19">msg_unread<pos:position pos:line="64" pos:column="29"/></name></name> <operator pos:line="64" pos:column="30">==<pos:position pos:line="64" pos:column="32"/></operator> <literal type="number" pos:line="64" pos:column="33">0<pos:position pos:line="64" pos:column="34"/></literal></expr>)<pos:position pos:line="64" pos:column="35"/></condition><then pos:line="64" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="9">optional<pos:position pos:line="65" pos:column="17"/></name> <operator pos:line="65" pos:column="18">=<pos:position pos:line="65" pos:column="19"/></operator> <literal type="number" pos:line="65" pos:column="20">0<pos:position pos:line="65" pos:column="21"/></literal></expr>;<pos:position pos:line="65" pos:column="22"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="66" pos:column="7">break;<pos:position pos:line="66" pos:column="13"/></break>

    <case pos:line="68" pos:column="5">case <expr><literal type="char" pos:line="68" pos:column="10">'n'<pos:position pos:line="68" pos:column="13"/></literal></expr>:<pos:position pos:line="68" pos:column="14"/></case>
      <if pos:line="69" pos:column="7">if <condition pos:line="69" pos:column="10">(<expr><operator pos:line="69" pos:column="11">!<pos:position pos:line="69" pos:column="12"/></operator><name pos:line="69" pos:column="12">optional<pos:position pos:line="69" pos:column="20"/></name></expr>)<pos:position pos:line="69" pos:column="21"/></condition><then pos:line="69" pos:column="21">
      <block pos:line="70" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">snprintf<pos:position pos:line="71" pos:column="17"/></name> <argument_list pos:line="71" pos:column="18">(<argument><expr><name pos:line="71" pos:column="19">fmt<pos:position pos:line="71" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="71" pos:column="24">sizeof <argument_list pos:line="71" pos:column="31">(<argument><expr><name pos:line="71" pos:column="32">fmt<pos:position pos:line="71" pos:column="35"/></name></expr></argument>)<pos:position pos:line="71" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="38">"%%%sc"<pos:position pos:line="71" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="47">prefix<pos:position pos:line="71" pos:column="53"/></name></expr></argument>)<pos:position pos:line="71" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">snprintf<pos:position pos:line="72" pos:column="17"/></name> <argument_list pos:line="72" pos:column="18">(<argument><expr><name pos:line="72" pos:column="19">dest<pos:position pos:line="72" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="25">destlen<pos:position pos:line="72" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="34">fmt<pos:position pos:line="72" pos:column="37"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="72" pos:column="39">b<pos:position pos:line="72" pos:column="40"/></name><operator pos:line="72" pos:column="40">-&gt;<pos:position pos:line="72" pos:column="45"/></operator></name><operator pos:line="72" pos:column="42">new<pos:position pos:line="72" pos:column="45"/></operator></expr> ?<pos:position pos:line="72" pos:column="47"/></condition><then pos:line="72" pos:column="47"> <expr><literal type="char" pos:line="72" pos:column="48">'N'<pos:position pos:line="72" pos:column="51"/></literal></expr> <pos:position pos:line="72" pos:column="52"/></then><else pos:line="72" pos:column="52">: <expr><literal type="char" pos:line="72" pos:column="54">' '<pos:position pos:line="72" pos:column="57"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="72" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="59"/></expr_stmt>
      }<pos:position pos:line="73" pos:column="8"/></block></then>
      <elseif pos:line="74" pos:column="7">else <if pos:line="74" pos:column="12">if <condition pos:line="74" pos:column="15">(<expr><name><name pos:line="74" pos:column="16">b<pos:position pos:line="74" pos:column="17"/></name><operator pos:line="74" pos:column="17">-&gt;<pos:position pos:line="74" pos:column="22"/></operator></name><operator pos:line="74" pos:column="19">new<pos:position pos:line="74" pos:column="22"/></operator> <operator pos:line="74" pos:column="23">==<pos:position pos:line="74" pos:column="25"/></operator> <literal type="number" pos:line="74" pos:column="26">0<pos:position pos:line="74" pos:column="27"/></literal></expr>)<pos:position pos:line="74" pos:column="28"/></condition><then pos:line="74" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><name pos:line="75" pos:column="9">optional<pos:position pos:line="75" pos:column="17"/></name> <operator pos:line="75" pos:column="18">=<pos:position pos:line="75" pos:column="19"/></operator> <literal type="number" pos:line="75" pos:column="20">0<pos:position pos:line="75" pos:column="21"/></literal></expr>;<pos:position pos:line="75" pos:column="22"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="76" pos:column="7">break;<pos:position pos:line="76" pos:column="13"/></break>

    <case pos:line="78" pos:column="5">case <expr><literal type="char" pos:line="78" pos:column="10">'S'<pos:position pos:line="78" pos:column="13"/></literal></expr>:<pos:position pos:line="78" pos:column="14"/></case>
      <if pos:line="79" pos:column="7">if <condition pos:line="79" pos:column="10">(<expr><operator pos:line="79" pos:column="11">!<pos:position pos:line="79" pos:column="12"/></operator><name pos:line="79" pos:column="12">optional<pos:position pos:line="79" pos:column="20"/></name></expr>)<pos:position pos:line="79" pos:column="21"/></condition><then pos:line="79" pos:column="21">
      <block pos:line="80" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="81" pos:column="9">snprintf<pos:position pos:line="81" pos:column="17"/></name> <argument_list pos:line="81" pos:column="18">(<argument><expr><name pos:line="81" pos:column="19">fmt<pos:position pos:line="81" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="81" pos:column="24">sizeof <argument_list pos:line="81" pos:column="31">(<argument><expr><name pos:line="81" pos:column="32">fmt<pos:position pos:line="81" pos:column="35"/></name></expr></argument>)<pos:position pos:line="81" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="38">"%%%sd"<pos:position pos:line="81" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="47">prefix<pos:position pos:line="81" pos:column="53"/></name></expr></argument>)<pos:position pos:line="81" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="82" pos:column="9">snprintf<pos:position pos:line="82" pos:column="17"/></name> <argument_list pos:line="82" pos:column="18">(<argument><expr><name pos:line="82" pos:column="19">dest<pos:position pos:line="82" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="25">destlen<pos:position pos:line="82" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="34">fmt<pos:position pos:line="82" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="39">b<pos:position pos:line="82" pos:column="40"/></name><operator pos:line="82" pos:column="40">-&gt;<pos:position pos:line="82" pos:column="45"/></operator><name pos:line="82" pos:column="42">msg_count<pos:position pos:line="82" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="53"/></expr_stmt>
      }<pos:position pos:line="83" pos:column="8"/></block></then>
      <elseif pos:line="84" pos:column="7">else <if pos:line="84" pos:column="12">if <condition pos:line="84" pos:column="15">(<expr><name><name pos:line="84" pos:column="16">b<pos:position pos:line="84" pos:column="17"/></name><operator pos:line="84" pos:column="17">-&gt;<pos:position pos:line="84" pos:column="22"/></operator><name pos:line="84" pos:column="19">msg_count<pos:position pos:line="84" pos:column="28"/></name></name> <operator pos:line="84" pos:column="29">==<pos:position pos:line="84" pos:column="31"/></operator> <literal type="number" pos:line="84" pos:column="32">0<pos:position pos:line="84" pos:column="33"/></literal></expr>)<pos:position pos:line="84" pos:column="34"/></condition><then pos:line="84" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><name pos:line="85" pos:column="9">optional<pos:position pos:line="85" pos:column="17"/></name> <operator pos:line="85" pos:column="18">=<pos:position pos:line="85" pos:column="19"/></operator> <literal type="number" pos:line="85" pos:column="20">0<pos:position pos:line="85" pos:column="21"/></literal></expr>;<pos:position pos:line="85" pos:column="22"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="86" pos:column="7">break;<pos:position pos:line="86" pos:column="13"/></break>

    <case pos:line="88" pos:column="5">case <expr><literal type="char" pos:line="88" pos:column="10">'t'<pos:position pos:line="88" pos:column="13"/></literal></expr>:<pos:position pos:line="88" pos:column="14"/></case>
      <if pos:line="89" pos:column="7">if <condition pos:line="89" pos:column="10">(<expr><operator pos:line="89" pos:column="11">!<pos:position pos:line="89" pos:column="12"/></operator><name pos:line="89" pos:column="12">optional<pos:position pos:line="89" pos:column="20"/></name></expr>)<pos:position pos:line="89" pos:column="21"/></condition><then pos:line="89" pos:column="21">
      <block pos:line="90" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="91" pos:column="9">snprintf<pos:position pos:line="91" pos:column="17"/></name> <argument_list pos:line="91" pos:column="18">(<argument><expr><name pos:line="91" pos:column="19">fmt<pos:position pos:line="91" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="91" pos:column="24">sizeof <argument_list pos:line="91" pos:column="31">(<argument><expr><name pos:line="91" pos:column="32">fmt<pos:position pos:line="91" pos:column="35"/></name></expr></argument>)<pos:position pos:line="91" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="38">"%%%sd"<pos:position pos:line="91" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="91" pos:column="47">prefix<pos:position pos:line="91" pos:column="53"/></name></expr></argument>)<pos:position pos:line="91" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="92" pos:column="9">snprintf<pos:position pos:line="92" pos:column="17"/></name> <argument_list pos:line="92" pos:column="18">(<argument><expr><name pos:line="92" pos:column="19">dest<pos:position pos:line="92" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="25">destlen<pos:position pos:line="92" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="34">fmt<pos:position pos:line="92" pos:column="37"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="92" pos:column="39">c<pos:position pos:line="92" pos:column="40"/></name></expr> ?<pos:position pos:line="92" pos:column="42"/></condition><then pos:line="92" pos:column="42"> <expr><name><name pos:line="92" pos:column="43">Context<pos:position pos:line="92" pos:column="50"/></name><operator pos:line="92" pos:column="50">-&gt;<pos:position pos:line="92" pos:column="55"/></operator><name pos:line="92" pos:column="52">tagged<pos:position pos:line="92" pos:column="58"/></name></name></expr> <pos:position pos:line="92" pos:column="59"/></then><else pos:line="92" pos:column="59">: <expr><literal type="number" pos:line="92" pos:column="61">0<pos:position pos:line="92" pos:column="62"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="92" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="64"/></expr_stmt>
      }<pos:position pos:line="93" pos:column="8"/></block></then>
      <elseif pos:line="94" pos:column="7">else <if pos:line="94" pos:column="12">if <condition pos:line="94" pos:column="15">(<expr><operator pos:line="94" pos:column="16">(<pos:position pos:line="94" pos:column="17"/></operator><name pos:line="94" pos:column="17">c<pos:position pos:line="94" pos:column="18"/></name> <operator pos:line="94" pos:column="19">&amp;&amp;<pos:position pos:line="94" pos:column="29"/></operator> <name><name pos:line="94" pos:column="22">Context<pos:position pos:line="94" pos:column="29"/></name><operator pos:line="94" pos:column="29">-&gt;<pos:position pos:line="94" pos:column="34"/></operator><name pos:line="94" pos:column="31">tagged<pos:position pos:line="94" pos:column="37"/></name></name> <operator pos:line="94" pos:column="38">==<pos:position pos:line="94" pos:column="40"/></operator> <literal type="number" pos:line="94" pos:column="41">0<pos:position pos:line="94" pos:column="42"/></literal><operator pos:line="94" pos:column="42">)<pos:position pos:line="94" pos:column="43"/></operator> <operator pos:line="94" pos:column="44">||<pos:position pos:line="94" pos:column="46"/></operator> <operator pos:line="94" pos:column="47">!<pos:position pos:line="94" pos:column="48"/></operator><name pos:line="94" pos:column="48">c<pos:position pos:line="94" pos:column="49"/></name></expr>)<pos:position pos:line="94" pos:column="50"/></condition><then pos:line="94" pos:column="50">
        <block type="pseudo"><expr_stmt><expr><name pos:line="95" pos:column="9">optional<pos:position pos:line="95" pos:column="17"/></name> <operator pos:line="95" pos:column="18">=<pos:position pos:line="95" pos:column="19"/></operator> <literal type="number" pos:line="95" pos:column="20">0<pos:position pos:line="95" pos:column="21"/></literal></expr>;<pos:position pos:line="95" pos:column="22"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="96" pos:column="7">break;<pos:position pos:line="96" pos:column="13"/></break>

    <case pos:line="98" pos:column="5">case <expr><literal type="char" pos:line="98" pos:column="10">'!'<pos:position pos:line="98" pos:column="13"/></literal></expr>:<pos:position pos:line="98" pos:column="14"/></case>
      <if pos:line="99" pos:column="7">if <condition pos:line="99" pos:column="10">(<expr><name><name pos:line="99" pos:column="11">b<pos:position pos:line="99" pos:column="12"/></name><operator pos:line="99" pos:column="12">-&gt;<pos:position pos:line="99" pos:column="17"/></operator><name pos:line="99" pos:column="14">msg_flagged<pos:position pos:line="99" pos:column="25"/></name></name> <operator pos:line="99" pos:column="26">==<pos:position pos:line="99" pos:column="28"/></operator> <literal type="number" pos:line="99" pos:column="29">0<pos:position pos:line="99" pos:column="30"/></literal></expr>)<pos:position pos:line="99" pos:column="31"/></condition><then pos:line="99" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="100" pos:column="9">mutt_format_s<pos:position pos:line="100" pos:column="22"/></name> <argument_list pos:line="100" pos:column="23">(<argument><expr><name pos:line="100" pos:column="24">dest<pos:position pos:line="100" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="30">destlen<pos:position pos:line="100" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="39">prefix<pos:position pos:line="100" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="47">""<pos:position pos:line="100" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="51"/></expr_stmt></block></then>
      <elseif pos:line="101" pos:column="7">else <if pos:line="101" pos:column="12">if <condition pos:line="101" pos:column="15">(<expr><name><name pos:line="101" pos:column="16">b<pos:position pos:line="101" pos:column="17"/></name><operator pos:line="101" pos:column="17">-&gt;<pos:position pos:line="101" pos:column="22"/></operator><name pos:line="101" pos:column="19">msg_flagged<pos:position pos:line="101" pos:column="30"/></name></name> <operator pos:line="101" pos:column="31">==<pos:position pos:line="101" pos:column="33"/></operator> <literal type="number" pos:line="101" pos:column="34">1<pos:position pos:line="101" pos:column="35"/></literal></expr>)<pos:position pos:line="101" pos:column="36"/></condition><then pos:line="101" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="102" pos:column="9">mutt_format_s<pos:position pos:line="102" pos:column="22"/></name> <argument_list pos:line="102" pos:column="23">(<argument><expr><name pos:line="102" pos:column="24">dest<pos:position pos:line="102" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="30">destlen<pos:position pos:line="102" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="39">prefix<pos:position pos:line="102" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="47">"!"<pos:position pos:line="102" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="52"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="103" pos:column="7">else <if pos:line="103" pos:column="12">if <condition pos:line="103" pos:column="15">(<expr><name><name pos:line="103" pos:column="16">b<pos:position pos:line="103" pos:column="17"/></name><operator pos:line="103" pos:column="17">-&gt;<pos:position pos:line="103" pos:column="22"/></operator><name pos:line="103" pos:column="19">msg_flagged<pos:position pos:line="103" pos:column="30"/></name></name> <operator pos:line="103" pos:column="31">==<pos:position pos:line="103" pos:column="33"/></operator> <literal type="number" pos:line="103" pos:column="34">2<pos:position pos:line="103" pos:column="35"/></literal></expr>)<pos:position pos:line="103" pos:column="36"/></condition><then pos:line="103" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="104" pos:column="9">mutt_format_s<pos:position pos:line="104" pos:column="22"/></name> <argument_list pos:line="104" pos:column="23">(<argument><expr><name pos:line="104" pos:column="24">dest<pos:position pos:line="104" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="30">destlen<pos:position pos:line="104" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="39">prefix<pos:position pos:line="104" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="47">"!!"<pos:position pos:line="104" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="53"/></expr_stmt></block></then></if></elseif>
      <else pos:line="105" pos:column="7">else
      <block pos:line="106" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="107" pos:column="9">snprintf<pos:position pos:line="107" pos:column="17"/></name> <argument_list pos:line="107" pos:column="18">(<argument><expr><name pos:line="107" pos:column="19">fmt<pos:position pos:line="107" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="107" pos:column="24">sizeof <argument_list pos:line="107" pos:column="31">(<argument><expr><name pos:line="107" pos:column="32">fmt<pos:position pos:line="107" pos:column="35"/></name></expr></argument>)<pos:position pos:line="107" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="38">"%d!"<pos:position pos:line="107" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="45">b<pos:position pos:line="107" pos:column="46"/></name><operator pos:line="107" pos:column="46">-&gt;<pos:position pos:line="107" pos:column="51"/></operator><name pos:line="107" pos:column="48">msg_flagged<pos:position pos:line="107" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="108" pos:column="9">mutt_format_s<pos:position pos:line="108" pos:column="22"/></name> <argument_list pos:line="108" pos:column="23">(<argument><expr><name pos:line="108" pos:column="24">dest<pos:position pos:line="108" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="30">destlen<pos:position pos:line="108" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="39">prefix<pos:position pos:line="108" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="47">fmt<pos:position pos:line="108" pos:column="50"/></name></expr></argument>)<pos:position pos:line="108" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="52"/></expr_stmt>
      }<pos:position pos:line="109" pos:column="8"/></block></else></if>
      <break pos:line="110" pos:column="7">break;<pos:position pos:line="110" pos:column="13"/></break>
  }<pos:position pos:line="111" pos:column="4"/></block></switch>

  <if pos:line="113" pos:column="3">if <condition pos:line="113" pos:column="6">(<expr><name pos:line="113" pos:column="7">optional<pos:position pos:line="113" pos:column="15"/></name></expr>)<pos:position pos:line="113" pos:column="16"/></condition><then pos:line="113" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="114" pos:column="5">mutt_FormatString<pos:position pos:line="114" pos:column="22"/></name> <argument_list pos:line="114" pos:column="23">(<argument><expr><name pos:line="114" pos:column="24">dest<pos:position pos:line="114" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="30">destlen<pos:position pos:line="114" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="39">col<pos:position pos:line="114" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="44">SidebarWidth<pos:position pos:line="114" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="58">ifstring<pos:position pos:line="114" pos:column="66"/></name></expr></argument>,   <argument><expr><name pos:line="114" pos:column="70">cb_format_str<pos:position pos:line="114" pos:column="83"/></name></expr></argument>, <argument><expr><operator pos:line="114" pos:column="85">(<pos:position pos:line="114" pos:column="86"/></operator><name pos:line="114" pos:column="86">unsigned<pos:position pos:line="114" pos:column="94"/></name> <name pos:line="114" pos:column="95">long<pos:position pos:line="114" pos:column="99"/></name><operator pos:line="114" pos:column="99">)<pos:position pos:line="114" pos:column="100"/></operator> <name pos:line="114" pos:column="101">sbe<pos:position pos:line="114" pos:column="104"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="106">flags<pos:position pos:line="114" pos:column="111"/></name></expr></argument>)<pos:position pos:line="114" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="113"/></expr_stmt></block></then>
  <elseif pos:line="115" pos:column="3">else <if pos:line="115" pos:column="8">if <condition pos:line="115" pos:column="11">(<expr><name pos:line="115" pos:column="12">flags<pos:position pos:line="115" pos:column="17"/></name> <operator pos:line="115" pos:column="18">&amp;<pos:position pos:line="115" pos:column="23"/></operator> <name pos:line="115" pos:column="20">MUTT_FORMAT_OPTIONAL<pos:position pos:line="115" pos:column="40"/></name></expr>)<pos:position pos:line="115" pos:column="41"/></condition><then pos:line="115" pos:column="41">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="116" pos:column="5">mutt_FormatString<pos:position pos:line="116" pos:column="22"/></name> <argument_list pos:line="116" pos:column="23">(<argument><expr><name pos:line="116" pos:column="24">dest<pos:position pos:line="116" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="30">destlen<pos:position pos:line="116" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="39">col<pos:position pos:line="116" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="44">SidebarWidth<pos:position pos:line="116" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="58">elsestring<pos:position pos:line="116" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="70">cb_format_str<pos:position pos:line="116" pos:column="83"/></name></expr></argument>, <argument><expr><operator pos:line="116" pos:column="85">(<pos:position pos:line="116" pos:column="86"/></operator><name pos:line="116" pos:column="86">unsigned<pos:position pos:line="116" pos:column="94"/></name> <name pos:line="116" pos:column="95">long<pos:position pos:line="116" pos:column="99"/></name><operator pos:line="116" pos:column="99">)<pos:position pos:line="116" pos:column="100"/></operator> <name pos:line="116" pos:column="101">sbe<pos:position pos:line="116" pos:column="104"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="106">flags<pos:position pos:line="116" pos:column="111"/></name></expr></argument>)<pos:position pos:line="116" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="113"/></expr_stmt></block></then></if></elseif></if>

  <comment type="block" pos:line="118" pos:column="3">/* We return the format string, unchanged */</comment>
  <return pos:line="119" pos:column="3">return <expr><name pos:line="119" pos:column="10">src<pos:position pos:line="119" pos:column="13"/></name></expr>;<pos:position pos:line="119" pos:column="14"/></return>
}<pos:position pos:line="120" pos:column="2"/></block></function></unit>

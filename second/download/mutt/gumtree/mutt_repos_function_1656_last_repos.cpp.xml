<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1656_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">crypt_query<pos:position pos:line="1" pos:column="16"/></name> <parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">BODY<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type><name pos:line="1" pos:column="24">m<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">t<pos:position pos:line="3" pos:column="8"/></name> <init pos:line="3" pos:column="9">= <expr><literal type="number" pos:line="3" pos:column="11">0<pos:position pos:line="3" pos:column="12"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">!<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">WithCrypto<pos:position pos:line="5" pos:column="18"/></name></expr>)<pos:position pos:line="5" pos:column="19"/></condition><then pos:line="5" pos:column="19">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><literal type="number" pos:line="6" pos:column="12">0<pos:position pos:line="6" pos:column="13"/></literal></expr>;<pos:position pos:line="6" pos:column="14"/></return></block></then></if>
  
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">m<pos:position pos:line="8" pos:column="9"/></name></expr>)<pos:position pos:line="8" pos:column="10"/></condition><then pos:line="8" pos:column="10">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></return></block></then></if>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name><name pos:line="11" pos:column="7">m<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">-&gt;<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="10">type<pos:position pos:line="11" pos:column="14"/></name></name> <operator pos:line="11" pos:column="15">==<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">TYPEAPPLICATION<pos:position pos:line="11" pos:column="33"/></name></expr>)<pos:position pos:line="11" pos:column="34"/></condition><then pos:line="11" pos:column="34">
  <block pos:line="12" pos:column="3">{
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">(<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">WithCrypto<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">&amp;<pos:position pos:line="13" pos:column="26"/></operator> <name pos:line="13" pos:column="23">APPLICATION_PGP<pos:position pos:line="13" pos:column="38"/></name><operator pos:line="13" pos:column="38">)<pos:position pos:line="13" pos:column="39"/></operator></expr>)<pos:position pos:line="13" pos:column="40"/></condition><then pos:line="13" pos:column="40">
      <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="7">t<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">|=<pos:position pos:line="14" pos:column="11"/></operator> <call><name pos:line="14" pos:column="12">mutt_is_application_pgp<pos:position pos:line="14" pos:column="35"/></name><argument_list pos:line="14" pos:column="35">(<argument><expr><name pos:line="14" pos:column="36">m<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt></block></then></if>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">WithCrypto<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">&amp;<pos:position pos:line="16" pos:column="26"/></operator> <name pos:line="16" pos:column="23">APPLICATION_SMIME<pos:position pos:line="16" pos:column="40"/></name><operator pos:line="16" pos:column="40">)<pos:position pos:line="16" pos:column="41"/></operator></expr>)<pos:position pos:line="16" pos:column="42"/></condition><then pos:line="16" pos:column="42">
    <block pos:line="17" pos:column="5">{
      <expr_stmt><expr><name pos:line="18" pos:column="7">t<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">|=<pos:position pos:line="18" pos:column="11"/></operator> <call><name pos:line="18" pos:column="12">mutt_is_application_smime<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><name pos:line="18" pos:column="38">m<pos:position pos:line="18" pos:column="39"/></name></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="41"/></expr_stmt>
      <if pos:line="19" pos:column="7">if <condition pos:line="19" pos:column="10">(<expr><name pos:line="19" pos:column="11">t<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">&amp;&amp;<pos:position pos:line="19" pos:column="23"/></operator> <name><name pos:line="19" pos:column="16">m<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">-&gt;<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="19">goodsig<pos:position pos:line="19" pos:column="26"/></name></name></expr>)<pos:position pos:line="19" pos:column="27"/></condition><then pos:line="19" pos:column="27"> <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="28">t<pos:position pos:line="19" pos:column="29"/></name> <operator pos:line="19" pos:column="30">|=<pos:position pos:line="19" pos:column="32"/></operator> <name pos:line="19" pos:column="33">GOODSIGN<pos:position pos:line="19" pos:column="41"/></name></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt></block></then></if>
      <if pos:line="20" pos:column="7">if <condition pos:line="20" pos:column="10">(<expr><name pos:line="20" pos:column="11">t<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">&amp;&amp;<pos:position pos:line="20" pos:column="23"/></operator> <name><name pos:line="20" pos:column="16">m<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-&gt;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="19">badsig<pos:position pos:line="20" pos:column="25"/></name></name></expr>)<pos:position pos:line="20" pos:column="26"/></condition><then pos:line="20" pos:column="26"> <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="27">t<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">|=<pos:position pos:line="20" pos:column="31"/></operator> <name pos:line="20" pos:column="32">BADSIGN<pos:position pos:line="20" pos:column="39"/></name></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt></block></then></if>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
  }<pos:position pos:line="22" pos:column="4"/></block></then>
  <elseif pos:line="23" pos:column="3">else <if pos:line="23" pos:column="8">if <condition pos:line="23" pos:column="11">(<expr><operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">WithCrypto<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">&amp;<pos:position pos:line="23" pos:column="29"/></operator> <name pos:line="23" pos:column="26">APPLICATION_PGP<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">)<pos:position pos:line="23" pos:column="42"/></operator> <operator pos:line="23" pos:column="43">&amp;&amp;<pos:position pos:line="23" pos:column="53"/></operator> <name><name pos:line="23" pos:column="46">m<pos:position pos:line="23" pos:column="47"/></name><operator pos:line="23" pos:column="47">-&gt;<pos:position pos:line="23" pos:column="52"/></operator><name pos:line="23" pos:column="49">type<pos:position pos:line="23" pos:column="53"/></name></name> <operator pos:line="23" pos:column="54">==<pos:position pos:line="23" pos:column="56"/></operator> <name pos:line="23" pos:column="57">TYPETEXT<pos:position pos:line="23" pos:column="65"/></name></expr>)<pos:position pos:line="23" pos:column="66"/></condition><then pos:line="23" pos:column="66">
  <block pos:line="24" pos:column="3">{
    <expr_stmt><expr><name pos:line="25" pos:column="5">t<pos:position pos:line="25" pos:column="6"/></name> <operator pos:line="25" pos:column="7">|=<pos:position pos:line="25" pos:column="9"/></operator> <call><name pos:line="25" pos:column="10">mutt_is_application_pgp<pos:position pos:line="25" pos:column="33"/></name> <argument_list pos:line="25" pos:column="34">(<argument><expr><name pos:line="25" pos:column="35">m<pos:position pos:line="25" pos:column="36"/></name></expr></argument>)<pos:position pos:line="25" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">t<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">&amp;&amp;<pos:position pos:line="26" pos:column="21"/></operator> <name><name pos:line="26" pos:column="14">m<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">-&gt;<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="17">goodsig<pos:position pos:line="26" pos:column="24"/></name></name></expr>)<pos:position pos:line="26" pos:column="25"/></condition><then pos:line="26" pos:column="25">
      <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="7">t<pos:position pos:line="27" pos:column="8"/></name> <operator pos:line="27" pos:column="9">|=<pos:position pos:line="27" pos:column="11"/></operator> <name pos:line="27" pos:column="12">GOODSIGN<pos:position pos:line="27" pos:column="20"/></name></expr>;<pos:position pos:line="27" pos:column="21"/></expr_stmt></block></then></if>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if></elseif></if>
  
  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name><name pos:line="30" pos:column="7">m<pos:position pos:line="30" pos:column="8"/></name><operator pos:line="30" pos:column="8">-&gt;<pos:position pos:line="30" pos:column="13"/></operator><name pos:line="30" pos:column="10">type<pos:position pos:line="30" pos:column="14"/></name></name> <operator pos:line="30" pos:column="15">==<pos:position pos:line="30" pos:column="17"/></operator> <name pos:line="30" pos:column="18">TYPEMULTIPART<pos:position pos:line="30" pos:column="31"/></name></expr>)<pos:position pos:line="30" pos:column="32"/></condition><then pos:line="30" pos:column="32">
  <block pos:line="31" pos:column="3">{
    <expr_stmt><expr><name pos:line="32" pos:column="5">t<pos:position pos:line="32" pos:column="6"/></name> <operator pos:line="32" pos:column="7">|=<pos:position pos:line="32" pos:column="9"/></operator> <call><name pos:line="32" pos:column="10">mutt_is_multipart_encrypted<pos:position pos:line="32" pos:column="37"/></name><argument_list pos:line="32" pos:column="37">(<argument><expr><name pos:line="32" pos:column="38">m<pos:position pos:line="32" pos:column="39"/></name></expr></argument>)<pos:position pos:line="32" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">t<pos:position pos:line="33" pos:column="6"/></name> <operator pos:line="33" pos:column="7">|=<pos:position pos:line="33" pos:column="9"/></operator> <call><name pos:line="33" pos:column="10">mutt_is_multipart_signed<pos:position pos:line="33" pos:column="34"/></name> <argument_list pos:line="33" pos:column="35">(<argument><expr><name pos:line="33" pos:column="36">m<pos:position pos:line="33" pos:column="37"/></name></expr></argument>)<pos:position pos:line="33" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="34" pos:column="5">t<pos:position pos:line="34" pos:column="6"/></name> <operator pos:line="34" pos:column="7">|=<pos:position pos:line="34" pos:column="9"/></operator> <call><name pos:line="34" pos:column="10">mutt_is_malformed_multipart_pgp_encrypted<pos:position pos:line="34" pos:column="51"/></name> <argument_list pos:line="34" pos:column="52">(<argument><expr><name pos:line="34" pos:column="53">m<pos:position pos:line="34" pos:column="54"/></name></expr></argument>)<pos:position pos:line="34" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="56"/></expr_stmt>

    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">t<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">&amp;&amp;<pos:position pos:line="36" pos:column="21"/></operator> <name><name pos:line="36" pos:column="14">m<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">-&gt;<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="17">goodsig<pos:position pos:line="36" pos:column="24"/></name></name></expr>)<pos:position pos:line="36" pos:column="25"/></condition><then pos:line="36" pos:column="25"> 
      <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="7">t<pos:position pos:line="37" pos:column="8"/></name> <operator pos:line="37" pos:column="9">|=<pos:position pos:line="37" pos:column="11"/></operator> <name pos:line="37" pos:column="12">GOODSIGN<pos:position pos:line="37" pos:column="20"/></name></expr>;<pos:position pos:line="37" pos:column="21"/></expr_stmt></block></then></if>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>

  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><name><name pos:line="40" pos:column="7">m<pos:position pos:line="40" pos:column="8"/></name><operator pos:line="40" pos:column="8">-&gt;<pos:position pos:line="40" pos:column="13"/></operator><name pos:line="40" pos:column="10">type<pos:position pos:line="40" pos:column="14"/></name></name> <operator pos:line="40" pos:column="15">==<pos:position pos:line="40" pos:column="17"/></operator> <name pos:line="40" pos:column="18">TYPEMULTIPART<pos:position pos:line="40" pos:column="31"/></name> <operator pos:line="40" pos:column="32">||<pos:position pos:line="40" pos:column="34"/></operator> <name><name pos:line="40" pos:column="35">m<pos:position pos:line="40" pos:column="36"/></name><operator pos:line="40" pos:column="36">-&gt;<pos:position pos:line="40" pos:column="41"/></operator><name pos:line="40" pos:column="38">type<pos:position pos:line="40" pos:column="42"/></name></name> <operator pos:line="40" pos:column="43">==<pos:position pos:line="40" pos:column="45"/></operator> <name pos:line="40" pos:column="46">TYPEMESSAGE<pos:position pos:line="40" pos:column="57"/></name></expr>)<pos:position pos:line="40" pos:column="58"/></condition><then pos:line="40" pos:column="58">
  <block pos:line="41" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="42" pos:column="5">BODY<pos:position pos:line="42" pos:column="9"/></name> <modifier pos:line="42" pos:column="10">*<pos:position pos:line="42" pos:column="11"/></modifier></type><name pos:line="42" pos:column="11">p<pos:position pos:line="42" pos:column="12"/></name></decl>;<pos:position pos:line="42" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="43" pos:column="5">int<pos:position pos:line="43" pos:column="8"/></name></type> <name pos:line="43" pos:column="9">u<pos:position pos:line="43" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="43" pos:column="12">v<pos:position pos:line="43" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="43" pos:column="15">w<pos:position pos:line="43" pos:column="16"/></name></decl>;<pos:position pos:line="43" pos:column="17"/></decl_stmt>
    
    <expr_stmt><expr><name pos:line="45" pos:column="5">u<pos:position pos:line="45" pos:column="6"/></name> <operator pos:line="45" pos:column="7">=<pos:position pos:line="45" pos:column="8"/></operator> <ternary><condition><expr><name><name pos:line="45" pos:column="9">m<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">-&gt;<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="12">parts<pos:position pos:line="45" pos:column="17"/></name></name></expr> ?<pos:position pos:line="45" pos:column="19"/></condition><then pos:line="45" pos:column="19"> <expr><literal type="number" pos:line="45" pos:column="20">0xffffffff<pos:position pos:line="45" pos:column="30"/></literal></expr> <pos:position pos:line="45" pos:column="31"/></then><else pos:line="45" pos:column="31">: <expr><literal type="number" pos:line="45" pos:column="33">0<pos:position pos:line="45" pos:column="34"/></literal></expr></else></ternary></expr>;<pos:position pos:line="45" pos:column="35"/></expr_stmt>	<comment type="block" pos:line="45" pos:column="41">/* Bits set in all parts */</comment>
    <expr_stmt><expr><name pos:line="46" pos:column="5">w<pos:position pos:line="46" pos:column="6"/></name> <operator pos:line="46" pos:column="7">=<pos:position pos:line="46" pos:column="8"/></operator> <literal type="number" pos:line="46" pos:column="9">0<pos:position pos:line="46" pos:column="10"/></literal></expr>;<pos:position pos:line="46" pos:column="11"/></expr_stmt>				<comment type="block" pos:line="46" pos:column="41">/* Bits set in any part  */</comment>
 
    <for pos:line="48" pos:column="5">for <control pos:line="48" pos:column="9">(<init><expr><name pos:line="48" pos:column="10">p<pos:position pos:line="48" pos:column="11"/></name> <operator pos:line="48" pos:column="12">=<pos:position pos:line="48" pos:column="13"/></operator> <name><name pos:line="48" pos:column="14">m<pos:position pos:line="48" pos:column="15"/></name><operator pos:line="48" pos:column="15">-&gt;<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="17">parts<pos:position pos:line="48" pos:column="22"/></name></name></expr>;<pos:position pos:line="48" pos:column="23"/></init> <condition><expr><name pos:line="48" pos:column="24">p<pos:position pos:line="48" pos:column="25"/></name></expr>;<pos:position pos:line="48" pos:column="26"/></condition> <incr><expr><name pos:line="48" pos:column="27">p<pos:position pos:line="48" pos:column="28"/></name> <operator pos:line="48" pos:column="29">=<pos:position pos:line="48" pos:column="30"/></operator> <name><name pos:line="48" pos:column="31">p<pos:position pos:line="48" pos:column="32"/></name><operator pos:line="48" pos:column="32">-&gt;<pos:position pos:line="48" pos:column="37"/></operator><name pos:line="48" pos:column="34">next<pos:position pos:line="48" pos:column="38"/></name></name></expr></incr>)<pos:position pos:line="48" pos:column="39"/></control>
    <block pos:line="49" pos:column="5">{
      <expr_stmt><expr><name pos:line="50" pos:column="7">v<pos:position pos:line="50" pos:column="8"/></name>  <operator pos:line="50" pos:column="10">=<pos:position pos:line="50" pos:column="11"/></operator> <call><name pos:line="50" pos:column="12">crypt_query<pos:position pos:line="50" pos:column="23"/></name> <argument_list pos:line="50" pos:column="24">(<argument><expr><name pos:line="50" pos:column="25">p<pos:position pos:line="50" pos:column="26"/></name></expr></argument>)<pos:position pos:line="50" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name pos:line="51" pos:column="7">u<pos:position pos:line="51" pos:column="8"/></name> <operator pos:line="51" pos:column="9">&amp;=<pos:position pos:line="51" pos:column="15"/></operator> <name pos:line="51" pos:column="12">v<pos:position pos:line="51" pos:column="13"/></name></expr>;<pos:position pos:line="51" pos:column="14"/></expr_stmt> <expr_stmt><expr><name pos:line="51" pos:column="15">w<pos:position pos:line="51" pos:column="16"/></name> <operator pos:line="51" pos:column="17">|=<pos:position pos:line="51" pos:column="19"/></operator> <name pos:line="51" pos:column="20">v<pos:position pos:line="51" pos:column="21"/></name></expr>;<pos:position pos:line="51" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></for>
    <expr_stmt><expr><name pos:line="53" pos:column="5">t<pos:position pos:line="53" pos:column="6"/></name> <operator pos:line="53" pos:column="7">|=<pos:position pos:line="53" pos:column="9"/></operator> <name pos:line="53" pos:column="10">u<pos:position pos:line="53" pos:column="11"/></name> <operator pos:line="53" pos:column="12">|<pos:position pos:line="53" pos:column="13"/></operator> <operator pos:line="53" pos:column="14">(<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="15">w<pos:position pos:line="53" pos:column="16"/></name> <operator pos:line="53" pos:column="17">&amp;<pos:position pos:line="53" pos:column="22"/></operator> <operator pos:line="53" pos:column="19">~<pos:position pos:line="53" pos:column="20"/></operator><name pos:line="53" pos:column="20">GOODSIGN<pos:position pos:line="53" pos:column="28"/></name><operator pos:line="53" pos:column="28">)<pos:position pos:line="53" pos:column="29"/></operator></expr>;<pos:position pos:line="53" pos:column="30"/></expr_stmt>
    
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><operator pos:line="55" pos:column="9">(<pos:position pos:line="55" pos:column="10"/></operator><name pos:line="55" pos:column="10">w<pos:position pos:line="55" pos:column="11"/></name> <operator pos:line="55" pos:column="12">&amp;<pos:position pos:line="55" pos:column="17"/></operator> <name pos:line="55" pos:column="14">GOODSIGN<pos:position pos:line="55" pos:column="22"/></name><operator pos:line="55" pos:column="22">)<pos:position pos:line="55" pos:column="23"/></operator> <operator pos:line="55" pos:column="24">&amp;&amp;<pos:position pos:line="55" pos:column="34"/></operator> <operator pos:line="55" pos:column="27">!<pos:position pos:line="55" pos:column="28"/></operator><operator pos:line="55" pos:column="28">(<pos:position pos:line="55" pos:column="29"/></operator><name pos:line="55" pos:column="29">u<pos:position pos:line="55" pos:column="30"/></name> <operator pos:line="55" pos:column="31">&amp;<pos:position pos:line="55" pos:column="36"/></operator> <name pos:line="55" pos:column="33">GOODSIGN<pos:position pos:line="55" pos:column="41"/></name><operator pos:line="55" pos:column="41">)<pos:position pos:line="55" pos:column="42"/></operator></expr>)<pos:position pos:line="55" pos:column="43"/></condition><then pos:line="55" pos:column="43">
      <block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="7">t<pos:position pos:line="56" pos:column="8"/></name> <operator pos:line="56" pos:column="9">|=<pos:position pos:line="56" pos:column="11"/></operator> <name pos:line="56" pos:column="12">PARTSIGN<pos:position pos:line="56" pos:column="20"/></name></expr>;<pos:position pos:line="56" pos:column="21"/></expr_stmt></block></then></if>
  }<pos:position pos:line="57" pos:column="4"/></block></then></if>

  <return pos:line="59" pos:column="3">return <expr><name pos:line="59" pos:column="10">t<pos:position pos:line="59" pos:column="11"/></name></expr>;<pos:position pos:line="59" pos:column="12"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

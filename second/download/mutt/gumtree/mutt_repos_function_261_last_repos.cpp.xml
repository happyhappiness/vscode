<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_261_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mbox_check_mailbox<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">CONTEXT<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">ctx<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">int<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">index_hint<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">stat<pos:position pos:line="3" pos:column="14"/></name></name></type> <name pos:line="3" pos:column="15">st<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buffer<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><name pos:line="4" pos:column="15">LONG_STRING<pos:position pos:line="4" pos:column="26"/></name></expr>]<pos:position pos:line="4" pos:column="27"/></index></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">unlock<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">modified<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><call><name pos:line="8" pos:column="7">stat<pos:position pos:line="8" pos:column="11"/></name> <argument_list pos:line="8" pos:column="12">(<argument><expr><name><name pos:line="8" pos:column="13">ctx<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">path<pos:position pos:line="8" pos:column="22"/></name></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="24">&amp;<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="25">st<pos:position pos:line="8" pos:column="27"/></name></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></call> <operator pos:line="8" pos:column="29">==<pos:position pos:line="8" pos:column="31"/></operator> <literal type="number" pos:line="8" pos:column="32">0<pos:position pos:line="8" pos:column="33"/></literal></expr>)<pos:position pos:line="8" pos:column="34"/></condition><then pos:line="8" pos:column="34">
  <block pos:line="9" pos:column="3">{
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">st<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">.<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="12">st_mtime<pos:position pos:line="10" pos:column="20"/></name></name> <operator pos:line="10" pos:column="21">==<pos:position pos:line="10" pos:column="23"/></operator> <name><name pos:line="10" pos:column="24">ctx<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">-&gt;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="29">mtime<pos:position pos:line="10" pos:column="34"/></name></name> <operator pos:line="10" pos:column="35">&amp;&amp;<pos:position pos:line="10" pos:column="45"/></operator> <name><name pos:line="10" pos:column="38">st<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">.<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="41">st_size<pos:position pos:line="10" pos:column="48"/></name></name> <operator pos:line="10" pos:column="49">==<pos:position pos:line="10" pos:column="51"/></operator> <name><name pos:line="10" pos:column="52">ctx<pos:position pos:line="10" pos:column="55"/></name><operator pos:line="10" pos:column="55">-&gt;<pos:position pos:line="10" pos:column="60"/></operator><name pos:line="10" pos:column="57">size<pos:position pos:line="10" pos:column="61"/></name></name></expr>)<pos:position pos:line="10" pos:column="62"/></condition><then pos:line="10" pos:column="62">
      <block type="pseudo"><return pos:line="11" pos:column="7">return <expr><operator pos:line="11" pos:column="14">(<pos:position pos:line="11" pos:column="15"/></operator><literal type="number" pos:line="11" pos:column="15">0<pos:position pos:line="11" pos:column="16"/></literal><operator pos:line="11" pos:column="16">)<pos:position pos:line="11" pos:column="17"/></operator></expr>;<pos:position pos:line="11" pos:column="18"/></return></block></then></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">st<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">.<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="12">st_size<pos:position pos:line="13" pos:column="19"/></name></name> <operator pos:line="13" pos:column="20">==<pos:position pos:line="13" pos:column="22"/></operator> <name><name pos:line="13" pos:column="23">ctx<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">-&gt;<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="28">size<pos:position pos:line="13" pos:column="32"/></name></name></expr>)<pos:position pos:line="13" pos:column="33"/></condition><then pos:line="13" pos:column="33">
    <block pos:line="14" pos:column="5">{
      <comment type="block" pos:line="15" pos:column="7">/* the file was touched, but it is still the same length, so just exit */</comment>
      <expr_stmt><expr><name><name pos:line="16" pos:column="7">ctx<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">mtime<pos:position pos:line="16" pos:column="17"/></name></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <name><name pos:line="16" pos:column="20">st<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">.<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="23">st_mtime<pos:position pos:line="16" pos:column="31"/></name></name></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>
      <return pos:line="17" pos:column="7">return <expr><operator pos:line="17" pos:column="14">(<pos:position pos:line="17" pos:column="15"/></operator><literal type="number" pos:line="17" pos:column="15">0<pos:position pos:line="17" pos:column="16"/></literal><operator pos:line="17" pos:column="16">)<pos:position pos:line="17" pos:column="17"/></operator></expr>;<pos:position pos:line="17" pos:column="18"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name><name pos:line="20" pos:column="9">st<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">.<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="12">st_size<pos:position pos:line="20" pos:column="19"/></name></name> <operator pos:line="20" pos:column="20">&gt;<pos:position pos:line="20" pos:column="24"/></operator> <name><name pos:line="20" pos:column="22">ctx<pos:position pos:line="20" pos:column="25"/></name><operator pos:line="20" pos:column="25">-&gt;<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="27">size<pos:position pos:line="20" pos:column="31"/></name></name></expr>)<pos:position pos:line="20" pos:column="32"/></condition><then pos:line="20" pos:column="32">
    <block pos:line="21" pos:column="5">{
      <comment type="block" pos:line="22" pos:column="7">/* lock the file if it isn't already */</comment>
      <if pos:line="23" pos:column="7">if <condition pos:line="23" pos:column="10">(<expr><operator pos:line="23" pos:column="11">!<pos:position pos:line="23" pos:column="12"/></operator><name><name pos:line="23" pos:column="12">ctx<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">-&gt;<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="17">locked<pos:position pos:line="23" pos:column="23"/></name></name></expr>)<pos:position pos:line="23" pos:column="24"/></condition><then pos:line="23" pos:column="24">
      <block pos:line="24" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">mutt_block_signals<pos:position pos:line="25" pos:column="27"/></name> <argument_list pos:line="25" pos:column="28">()<pos:position pos:line="25" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="31"/></expr_stmt>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><call><name pos:line="26" pos:column="13">mbox_lock_mailbox<pos:position pos:line="26" pos:column="30"/></name> <argument_list pos:line="26" pos:column="31">(<argument><expr><name pos:line="26" pos:column="32">ctx<pos:position pos:line="26" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="37">0<pos:position pos:line="26" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="40">0<pos:position pos:line="26" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="42"/></argument_list></call> <operator pos:line="26" pos:column="43">==<pos:position pos:line="26" pos:column="45"/></operator> <operator pos:line="26" pos:column="46">-<pos:position pos:line="26" pos:column="47"/></operator><literal type="number" pos:line="26" pos:column="47">1<pos:position pos:line="26" pos:column="48"/></literal></expr>)<pos:position pos:line="26" pos:column="49"/></condition><then pos:line="26" pos:column="49">
	<block pos:line="27" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="28" pos:column="11">mutt_unblock_signals<pos:position pos:line="28" pos:column="31"/></name> <argument_list pos:line="28" pos:column="32">()<pos:position pos:line="28" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt>
	  <comment type="block" pos:line="29" pos:column="11">/* we couldn't lock the mailbox, but nothing serious happened:
	   * probably the new mail arrived: no reason to wait till we can
	   * parse it: we'll get it on the next pass
	   */</comment>
	  <return pos:line="33" pos:column="11">return <expr><operator pos:line="33" pos:column="18">(<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="19">MUTT_LOCKED<pos:position pos:line="33" pos:column="30"/></name><operator pos:line="33" pos:column="30">)<pos:position pos:line="33" pos:column="31"/></operator></expr>;<pos:position pos:line="33" pos:column="32"/></return>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="35" pos:column="9">unlock<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <literal type="number" pos:line="35" pos:column="18">1<pos:position pos:line="35" pos:column="19"/></literal></expr>;<pos:position pos:line="35" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="36" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="38" pos:column="7">/*
       * Check to make sure that the only change to the mailbox is that 
       * message(s) were appended to this file.  My heuristic is that we should
       * see the message separator at *exactly* what used to be the end of the
       * folder.
       */</comment>
      <if pos:line="44" pos:column="7">if <condition pos:line="44" pos:column="10">(<expr><call><name pos:line="44" pos:column="11">fseeko<pos:position pos:line="44" pos:column="17"/></name> <argument_list pos:line="44" pos:column="18">(<argument><expr><name><name pos:line="44" pos:column="19">ctx<pos:position pos:line="44" pos:column="22"/></name><operator pos:line="44" pos:column="22">-&gt;<pos:position pos:line="44" pos:column="27"/></operator><name pos:line="44" pos:column="24">fp<pos:position pos:line="44" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="28">ctx<pos:position pos:line="44" pos:column="31"/></name><operator pos:line="44" pos:column="31">-&gt;<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="33">size<pos:position pos:line="44" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="39">SEEK_SET<pos:position pos:line="44" pos:column="47"/></name></expr></argument>)<pos:position pos:line="44" pos:column="48"/></argument_list></call> <operator pos:line="44" pos:column="49">!=<pos:position pos:line="44" pos:column="51"/></operator> <literal type="number" pos:line="44" pos:column="52">0<pos:position pos:line="44" pos:column="53"/></literal></expr>)<pos:position pos:line="44" pos:column="54"/></condition><then pos:line="44" pos:column="54">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="9">dprint<pos:position pos:line="45" pos:column="15"/></name> <argument_list pos:line="45" pos:column="16">(<argument><expr><literal type="number" pos:line="45" pos:column="17">1<pos:position pos:line="45" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="45" pos:column="20">(<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="21">debugfile<pos:position pos:line="45" pos:column="30"/></name><operator pos:line="45" pos:column="30">,<pos:position pos:line="45" pos:column="31"/></operator> <literal type="string" pos:line="45" pos:column="32">"mbox_check_mailbox: fseek() failed\n"<pos:position pos:line="45" pos:column="70"/></literal><operator pos:line="45" pos:column="70">)<pos:position pos:line="45" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="45" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="73"/></expr_stmt></block></then></if>
      <if pos:line="46" pos:column="7">if <condition pos:line="46" pos:column="10">(<expr><call><name pos:line="46" pos:column="11">fgets<pos:position pos:line="46" pos:column="16"/></name> <argument_list pos:line="46" pos:column="17">(<argument><expr><name pos:line="46" pos:column="18">buffer<pos:position pos:line="46" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="26">sizeof <argument_list pos:line="46" pos:column="33">(<argument><expr><name pos:line="46" pos:column="34">buffer<pos:position pos:line="46" pos:column="40"/></name></expr></argument>)<pos:position pos:line="46" pos:column="41"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="43">ctx<pos:position pos:line="46" pos:column="46"/></name><operator pos:line="46" pos:column="46">-&gt;<pos:position pos:line="46" pos:column="51"/></operator><name pos:line="46" pos:column="48">fp<pos:position pos:line="46" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="51"/></argument_list></call> <operator pos:line="46" pos:column="52">!=<pos:position pos:line="46" pos:column="54"/></operator> <name pos:line="46" pos:column="55">NULL<pos:position pos:line="46" pos:column="59"/></name></expr>)<pos:position pos:line="46" pos:column="60"/></condition><then pos:line="46" pos:column="60">
      <block pos:line="47" pos:column="7">{
	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><operator pos:line="48" pos:column="13">(<pos:position pos:line="48" pos:column="14"/></operator><name><name pos:line="48" pos:column="14">ctx<pos:position pos:line="48" pos:column="17"/></name><operator pos:line="48" pos:column="17">-&gt;<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="19">magic<pos:position pos:line="48" pos:column="24"/></name></name> <operator pos:line="48" pos:column="25">==<pos:position pos:line="48" pos:column="27"/></operator> <name pos:line="48" pos:column="28">MUTT_MBOX<pos:position pos:line="48" pos:column="37"/></name> <operator pos:line="48" pos:column="38">&amp;&amp;<pos:position pos:line="48" pos:column="48"/></operator> <call><name pos:line="48" pos:column="41">mutt_strncmp<pos:position pos:line="48" pos:column="53"/></name> <argument_list pos:line="48" pos:column="54">(<argument><expr><literal type="string" pos:line="48" pos:column="55">"From "<pos:position pos:line="48" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="64">buffer<pos:position pos:line="48" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="72">5<pos:position pos:line="48" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="74"/></argument_list></call> <operator pos:line="48" pos:column="75">==<pos:position pos:line="48" pos:column="77"/></operator> <literal type="number" pos:line="48" pos:column="78">0<pos:position pos:line="48" pos:column="79"/></literal><operator pos:line="48" pos:column="79">)<pos:position pos:line="48" pos:column="80"/></operator> <operator pos:line="48" pos:column="81">||<pos:position pos:line="48" pos:column="83"/></operator>
	    <operator pos:line="49" pos:column="13">(<pos:position pos:line="49" pos:column="14"/></operator><name><name pos:line="49" pos:column="14">ctx<pos:position pos:line="49" pos:column="17"/></name><operator pos:line="49" pos:column="17">-&gt;<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="19">magic<pos:position pos:line="49" pos:column="24"/></name></name> <operator pos:line="49" pos:column="25">==<pos:position pos:line="49" pos:column="27"/></operator> <name pos:line="49" pos:column="28">MUTT_MMDF<pos:position pos:line="49" pos:column="37"/></name> <operator pos:line="49" pos:column="38">&amp;&amp;<pos:position pos:line="49" pos:column="48"/></operator> <call><name pos:line="49" pos:column="41">mutt_strcmp<pos:position pos:line="49" pos:column="52"/></name> <argument_list pos:line="49" pos:column="53">(<argument><expr><name pos:line="49" pos:column="54">MMDF_SEP<pos:position pos:line="49" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="64">buffer<pos:position pos:line="49" pos:column="70"/></name></expr></argument>)<pos:position pos:line="49" pos:column="71"/></argument_list></call> <operator pos:line="49" pos:column="72">==<pos:position pos:line="49" pos:column="74"/></operator> <literal type="number" pos:line="49" pos:column="75">0<pos:position pos:line="49" pos:column="76"/></literal><operator pos:line="49" pos:column="76">)<pos:position pos:line="49" pos:column="77"/></operator></expr>)<pos:position pos:line="49" pos:column="78"/></condition><then pos:line="49" pos:column="78">
	<block pos:line="50" pos:column="9">{
	  <if pos:line="51" pos:column="11">if <condition pos:line="51" pos:column="14">(<expr><call><name pos:line="51" pos:column="15">fseeko<pos:position pos:line="51" pos:column="21"/></name> <argument_list pos:line="51" pos:column="22">(<argument><expr><name><name pos:line="51" pos:column="23">ctx<pos:position pos:line="51" pos:column="26"/></name><operator pos:line="51" pos:column="26">-&gt;<pos:position pos:line="51" pos:column="31"/></operator><name pos:line="51" pos:column="28">fp<pos:position pos:line="51" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="32">ctx<pos:position pos:line="51" pos:column="35"/></name><operator pos:line="51" pos:column="35">-&gt;<pos:position pos:line="51" pos:column="40"/></operator><name pos:line="51" pos:column="37">size<pos:position pos:line="51" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="43">SEEK_SET<pos:position pos:line="51" pos:column="51"/></name></expr></argument>)<pos:position pos:line="51" pos:column="52"/></argument_list></call> <operator pos:line="51" pos:column="53">!=<pos:position pos:line="51" pos:column="55"/></operator> <literal type="number" pos:line="51" pos:column="56">0<pos:position pos:line="51" pos:column="57"/></literal></expr>)<pos:position pos:line="51" pos:column="58"/></condition><then pos:line="51" pos:column="58">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="13">dprint<pos:position pos:line="52" pos:column="19"/></name> <argument_list pos:line="52" pos:column="20">(<argument><expr><literal type="number" pos:line="52" pos:column="21">1<pos:position pos:line="52" pos:column="22"/></literal></expr></argument>, <argument><expr><operator pos:line="52" pos:column="24">(<pos:position pos:line="52" pos:column="25"/></operator><name pos:line="52" pos:column="25">debugfile<pos:position pos:line="52" pos:column="34"/></name><operator pos:line="52" pos:column="34">,<pos:position pos:line="52" pos:column="35"/></operator> <literal type="string" pos:line="52" pos:column="36">"mbox_check_mailbox: fseek() failed\n"<pos:position pos:line="52" pos:column="74"/></literal><operator pos:line="52" pos:column="74">)<pos:position pos:line="52" pos:column="75"/></operator></expr></argument>)<pos:position pos:line="52" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="77"/></expr_stmt></block></then></if>
	  <if pos:line="53" pos:column="11">if <condition pos:line="53" pos:column="14">(<expr><name><name pos:line="53" pos:column="15">ctx<pos:position pos:line="53" pos:column="18"/></name><operator pos:line="53" pos:column="18">-&gt;<pos:position pos:line="53" pos:column="23"/></operator><name pos:line="53" pos:column="20">magic<pos:position pos:line="53" pos:column="25"/></name></name> <operator pos:line="53" pos:column="26">==<pos:position pos:line="53" pos:column="28"/></operator> <name pos:line="53" pos:column="29">MUTT_MBOX<pos:position pos:line="53" pos:column="38"/></name></expr>)<pos:position pos:line="53" pos:column="39"/></condition><then pos:line="53" pos:column="39">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="13">mbox_parse_mailbox<pos:position pos:line="54" pos:column="31"/></name> <argument_list pos:line="54" pos:column="32">(<argument><expr><name pos:line="54" pos:column="33">ctx<pos:position pos:line="54" pos:column="36"/></name></expr></argument>)<pos:position pos:line="54" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="38"/></expr_stmt></block></then>
	  <else pos:line="55" pos:column="11">else
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="13">mmdf_parse_mailbox<pos:position pos:line="56" pos:column="31"/></name> <argument_list pos:line="56" pos:column="32">(<argument><expr><name pos:line="56" pos:column="33">ctx<pos:position pos:line="56" pos:column="36"/></name></expr></argument>)<pos:position pos:line="56" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="38"/></expr_stmt></block></else></if>

	  <comment type="block" pos:line="58" pos:column="11">/* Only unlock the folder if it was locked inside of this routine.
	   * It may have been locked elsewhere, like in
	   * mutt_checkpoint_mailbox().
	   */</comment>

	  <if pos:line="63" pos:column="11">if <condition pos:line="63" pos:column="14">(<expr><name pos:line="63" pos:column="15">unlock<pos:position pos:line="63" pos:column="21"/></name></expr>)<pos:position pos:line="63" pos:column="22"/></condition><then pos:line="63" pos:column="22">
	  <block pos:line="64" pos:column="11">{
	    <expr_stmt><expr><call><name pos:line="65" pos:column="13">mbox_unlock_mailbox<pos:position pos:line="65" pos:column="32"/></name> <argument_list pos:line="65" pos:column="33">(<argument><expr><name pos:line="65" pos:column="34">ctx<pos:position pos:line="65" pos:column="37"/></name></expr></argument>)<pos:position pos:line="65" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="39"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="66" pos:column="13">mutt_unblock_signals<pos:position pos:line="66" pos:column="33"/></name> <argument_list pos:line="66" pos:column="34">()<pos:position pos:line="66" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="37"/></expr_stmt>
	  }<pos:position pos:line="67" pos:column="12"/></block></then></if>

	  <return pos:line="69" pos:column="11">return <expr><operator pos:line="69" pos:column="18">(<pos:position pos:line="69" pos:column="19"/></operator><name pos:line="69" pos:column="19">MUTT_NEW_MAIL<pos:position pos:line="69" pos:column="32"/></name><operator pos:line="69" pos:column="32">)<pos:position pos:line="69" pos:column="33"/></operator></expr>;<pos:position pos:line="69" pos:column="34"/></return> <comment type="block" pos:line="69" pos:column="35">/* signal that new mail arrived */</comment>
	}<pos:position pos:line="70" pos:column="10"/></block></then>
	<else pos:line="71" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="11">modified<pos:position pos:line="72" pos:column="19"/></name> <operator pos:line="72" pos:column="20">=<pos:position pos:line="72" pos:column="21"/></operator> <literal type="number" pos:line="72" pos:column="22">1<pos:position pos:line="72" pos:column="23"/></literal></expr>;<pos:position pos:line="72" pos:column="24"/></expr_stmt></block></else></if>
      }<pos:position pos:line="73" pos:column="8"/></block></then>
      <else pos:line="74" pos:column="7">else
      <block pos:line="75" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="76" pos:column="9">dprint<pos:position pos:line="76" pos:column="15"/></name> <argument_list pos:line="76" pos:column="16">(<argument><expr><literal type="number" pos:line="76" pos:column="17">1<pos:position pos:line="76" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="76" pos:column="20">(<pos:position pos:line="76" pos:column="21"/></operator><name pos:line="76" pos:column="21">debugfile<pos:position pos:line="76" pos:column="30"/></name><operator pos:line="76" pos:column="30">,<pos:position pos:line="76" pos:column="31"/></operator> <literal type="string" pos:line="76" pos:column="32">"mbox_check_mailbox: fgets returned NULL.\n"<pos:position pos:line="76" pos:column="76"/></literal><operator pos:line="76" pos:column="76">)<pos:position pos:line="76" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="76" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="79"/></expr_stmt>
	<expr_stmt><expr><name pos:line="77" pos:column="9">modified<pos:position pos:line="77" pos:column="17"/></name> <operator pos:line="77" pos:column="18">=<pos:position pos:line="77" pos:column="19"/></operator> <literal type="number" pos:line="77" pos:column="20">1<pos:position pos:line="77" pos:column="21"/></literal></expr>;<pos:position pos:line="77" pos:column="22"/></expr_stmt>
      }<pos:position pos:line="78" pos:column="8"/></block></else></if>
    }<pos:position pos:line="79" pos:column="6"/></block></then>
    <else pos:line="80" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="81" pos:column="7">modified<pos:position pos:line="81" pos:column="15"/></name> <operator pos:line="81" pos:column="16">=<pos:position pos:line="81" pos:column="17"/></operator> <literal type="number" pos:line="81" pos:column="18">1<pos:position pos:line="81" pos:column="19"/></literal></expr>;<pos:position pos:line="81" pos:column="20"/></expr_stmt></block></else></if>
  }<pos:position pos:line="82" pos:column="4"/></block></then></if>

  <if pos:line="84" pos:column="3">if <condition pos:line="84" pos:column="6">(<expr><name pos:line="84" pos:column="7">modified<pos:position pos:line="84" pos:column="15"/></name></expr>)<pos:position pos:line="84" pos:column="16"/></condition><then pos:line="84" pos:column="16">
  <block pos:line="85" pos:column="3">{
    <if pos:line="86" pos:column="5">if <condition pos:line="86" pos:column="8">(<expr><call><name pos:line="86" pos:column="9">mutt_reopen_mailbox<pos:position pos:line="86" pos:column="28"/></name> <argument_list pos:line="86" pos:column="29">(<argument><expr><name pos:line="86" pos:column="30">ctx<pos:position pos:line="86" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="35">index_hint<pos:position pos:line="86" pos:column="45"/></name></expr></argument>)<pos:position pos:line="86" pos:column="46"/></argument_list></call> <operator pos:line="86" pos:column="47">!=<pos:position pos:line="86" pos:column="49"/></operator> <operator pos:line="86" pos:column="50">-<pos:position pos:line="86" pos:column="51"/></operator><literal type="number" pos:line="86" pos:column="51">1<pos:position pos:line="86" pos:column="52"/></literal></expr>)<pos:position pos:line="86" pos:column="53"/></condition><then pos:line="86" pos:column="53">
    <block pos:line="87" pos:column="5">{
      <if pos:line="88" pos:column="7">if <condition pos:line="88" pos:column="10">(<expr><name pos:line="88" pos:column="11">unlock<pos:position pos:line="88" pos:column="17"/></name></expr>)<pos:position pos:line="88" pos:column="18"/></condition><then pos:line="88" pos:column="18">
      <block pos:line="89" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="90" pos:column="9">mbox_unlock_mailbox<pos:position pos:line="90" pos:column="28"/></name> <argument_list pos:line="90" pos:column="29">(<argument><expr><name pos:line="90" pos:column="30">ctx<pos:position pos:line="90" pos:column="33"/></name></expr></argument>)<pos:position pos:line="90" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="91" pos:column="9">mutt_unblock_signals<pos:position pos:line="91" pos:column="29"/></name> <argument_list pos:line="91" pos:column="30">()<pos:position pos:line="91" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="33"/></expr_stmt>
      }<pos:position pos:line="92" pos:column="8"/></block></then></if>
      <return pos:line="93" pos:column="7">return <expr><operator pos:line="93" pos:column="14">(<pos:position pos:line="93" pos:column="15"/></operator><name pos:line="93" pos:column="15">MUTT_REOPENED<pos:position pos:line="93" pos:column="28"/></name><operator pos:line="93" pos:column="28">)<pos:position pos:line="93" pos:column="29"/></operator></expr>;<pos:position pos:line="93" pos:column="30"/></return>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if>
  }<pos:position pos:line="95" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="97" pos:column="3">/* fatal error */</comment>

  <expr_stmt><expr><call><name pos:line="99" pos:column="3">mbox_unlock_mailbox<pos:position pos:line="99" pos:column="22"/></name> <argument_list pos:line="99" pos:column="23">(<argument><expr><name pos:line="99" pos:column="24">ctx<pos:position pos:line="99" pos:column="27"/></name></expr></argument>)<pos:position pos:line="99" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="100" pos:column="3">mx_fastclose_mailbox<pos:position pos:line="100" pos:column="23"/></name> <argument_list pos:line="100" pos:column="24">(<argument><expr><name pos:line="100" pos:column="25">ctx<pos:position pos:line="100" pos:column="28"/></name></expr></argument>)<pos:position pos:line="100" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="101" pos:column="3">mutt_unblock_signals<pos:position pos:line="101" pos:column="23"/></name> <argument_list pos:line="101" pos:column="24">()<pos:position pos:line="101" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="27"/></expr_stmt>
  <decl_stmt><decl><type><name pos:line="102" pos:column="3">mutt_error<pos:position pos:line="102" pos:column="13"/></name></type> <name pos:line="102" pos:column="14">_<pos:position pos:line="102" pos:column="15"/></name><argument_list pos:line="102" pos:column="15">(<argument><expr><literal type="string" pos:line="102" pos:column="16">"Mailbox was corrupted!"<pos:position pos:line="102" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="41"/></argument_list></decl>;<pos:position pos:line="102" pos:column="42"/></decl_stmt>
  <return pos:line="103" pos:column="3">return <expr><operator pos:line="103" pos:column="10">(<pos:position pos:line="103" pos:column="11"/></operator><operator pos:line="103" pos:column="11">-<pos:position pos:line="103" pos:column="12"/></operator><literal type="number" pos:line="103" pos:column="12">1<pos:position pos:line="103" pos:column="13"/></literal><operator pos:line="103" pos:column="13">)<pos:position pos:line="103" pos:column="14"/></operator></expr>;<pos:position pos:line="103" pos:column="15"/></return>
}<pos:position pos:line="104" pos:column="2"/></block></function></unit>

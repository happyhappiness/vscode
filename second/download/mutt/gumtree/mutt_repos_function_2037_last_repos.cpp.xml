<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2037_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cmd_parse_enabled<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">IMAP_DATA<pos:position pos:line="1" pos:column="41"/></name><modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type> <name pos:line="1" pos:column="43">idata<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name><modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type> <name pos:line="1" pos:column="62">s<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">dprint<pos:position pos:line="3" pos:column="9"/></name> <argument_list pos:line="3" pos:column="10">(<argument><expr><literal type="number" pos:line="3" pos:column="11">2<pos:position pos:line="3" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="3" pos:column="14">(<pos:position pos:line="3" pos:column="15"/></operator><name pos:line="3" pos:column="15">debugfile<pos:position pos:line="3" pos:column="24"/></name><operator pos:line="3" pos:column="24">,<pos:position pos:line="3" pos:column="25"/></operator> <literal type="string" pos:line="3" pos:column="26">"Handling ENABLED\n"<pos:position pos:line="3" pos:column="46"/></literal><operator pos:line="3" pos:column="46">)<pos:position pos:line="3" pos:column="47"/></operator></expr></argument>)<pos:position pos:line="3" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="49"/></expr_stmt>

  <while pos:line="5" pos:column="3">while <condition pos:line="5" pos:column="9">(<expr><operator pos:line="5" pos:column="10">(<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">s<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">=<pos:position pos:line="5" pos:column="14"/></operator> <call><name pos:line="5" pos:column="15">imap_next_word<pos:position pos:line="5" pos:column="29"/></name> <argument_list pos:line="5" pos:column="30">(<argument><expr><operator pos:line="5" pos:column="31">(<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="32">char<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">*<pos:position pos:line="5" pos:column="37"/></operator><operator pos:line="5" pos:column="37">)<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="38">s<pos:position pos:line="5" pos:column="39"/></name></expr></argument>)<pos:position pos:line="5" pos:column="40"/></argument_list></call><operator pos:line="5" pos:column="40">)<pos:position pos:line="5" pos:column="41"/></operator> <operator pos:line="5" pos:column="42">&amp;&amp;<pos:position pos:line="5" pos:column="52"/></operator> <operator pos:line="5" pos:column="45">*<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="46">s<pos:position pos:line="5" pos:column="47"/></name> <operator pos:line="5" pos:column="48">!=<pos:position pos:line="5" pos:column="50"/></operator> <literal type="char" pos:line="5" pos:column="51">'\0'<pos:position pos:line="5" pos:column="55"/></literal></expr>)<pos:position pos:line="5" pos:column="56"/></condition>
  <block pos:line="6" pos:column="3">{
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">ascii_strncasecmp<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name pos:line="7" pos:column="27">s<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="30">"UTF8=ACCEPT"<pos:position pos:line="7" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="45">11<pos:position pos:line="7" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="48"/></argument_list></call> <operator pos:line="7" pos:column="49">==<pos:position pos:line="7" pos:column="51"/></operator> <literal type="number" pos:line="7" pos:column="52">0<pos:position pos:line="7" pos:column="53"/></literal> <operator pos:line="7" pos:column="54">||<pos:position pos:line="7" pos:column="56"/></operator>
        <call><name pos:line="8" pos:column="9">ascii_strncasecmp<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">s<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="30">"UTF8=ONLY"<pos:position pos:line="8" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="43">9<pos:position pos:line="8" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call> <operator pos:line="8" pos:column="46">==<pos:position pos:line="8" pos:column="48"/></operator> <literal type="number" pos:line="8" pos:column="49">0<pos:position pos:line="8" pos:column="50"/></literal></expr>)<pos:position pos:line="8" pos:column="51"/></condition><then pos:line="8" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="9" pos:column="7">idata<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">unicode<pos:position pos:line="9" pos:column="21"/></name></name> <operator pos:line="9" pos:column="22">=<pos:position pos:line="9" pos:column="23"/></operator> <literal type="number" pos:line="9" pos:column="24">1<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt></block></then></if>
  }<pos:position pos:line="10" pos:column="4"/></block></while>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

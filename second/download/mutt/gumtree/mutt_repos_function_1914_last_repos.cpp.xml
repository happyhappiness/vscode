<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1914_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">_nl_free_domain_conv<pos:position pos:line="3" pos:column="21"/></name> <argument_list pos:line="3" pos:column="22">(<argument><expr><name pos:line="3" pos:column="23">domain<pos:position pos:line="3" pos:column="29"/></name></expr></argument>)<pos:position pos:line="3" pos:column="30"/></argument_list>
     struct <name pos:line="4" pos:column="13">loaded_domain<pos:position pos:line="4" pos:column="26"/></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier><name pos:line="4" pos:column="28">domain<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
<block pos:line="5" pos:column="1">{
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name><name pos:line="6" pos:column="7">domain<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">-&gt;<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="15">conv_tab<pos:position pos:line="6" pos:column="23"/></name></name> <operator pos:line="6" pos:column="24">!=<pos:position pos:line="6" pos:column="26"/></operator> <name pos:line="6" pos:column="27">NULL<pos:position pos:line="6" pos:column="31"/></name> <operator pos:line="6" pos:column="32">&amp;&amp;<pos:position pos:line="6" pos:column="42"/></operator> <name><name pos:line="6" pos:column="35">domain<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">-&gt;<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="43">conv_tab<pos:position pos:line="6" pos:column="51"/></name></name> <operator pos:line="6" pos:column="52">!=<pos:position pos:line="6" pos:column="54"/></operator> <operator pos:line="6" pos:column="55">(<pos:position pos:line="6" pos:column="56"/></operator><name pos:line="6" pos:column="56">char<pos:position pos:line="6" pos:column="60"/></name> <operator pos:line="6" pos:column="61">*<pos:position pos:line="6" pos:column="62"/></operator><operator pos:line="6" pos:column="62">*<pos:position pos:line="6" pos:column="63"/></operator><operator pos:line="6" pos:column="63">)<pos:position pos:line="6" pos:column="64"/></operator> <operator pos:line="6" pos:column="65">-<pos:position pos:line="6" pos:column="66"/></operator><literal type="number" pos:line="6" pos:column="66">1<pos:position pos:line="6" pos:column="67"/></literal></expr>)<pos:position pos:line="6" pos:column="68"/></condition><then pos:line="6" pos:column="68">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="5">free<pos:position pos:line="7" pos:column="9"/></name> <argument_list pos:line="7" pos:column="10">(<argument><expr><name><name pos:line="7" pos:column="11">domain<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">conv_tab<pos:position pos:line="7" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="29"/></expr_stmt></block></then></if>

<cpp:ifdef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifdef<pos:position pos:line="9" pos:column="7"/></cpp:directive> <name pos:line="9" pos:column="8">_LIBC<pos:position pos:line="9" pos:column="13"/></name></cpp:ifdef>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name><name pos:line="10" pos:column="7">domain<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">conv<pos:position pos:line="10" pos:column="19"/></name></name> <operator pos:line="10" pos:column="20">!=<pos:position pos:line="10" pos:column="22"/></operator> <operator pos:line="10" pos:column="23">(<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="24">__gconv_t<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">)<pos:position pos:line="10" pos:column="34"/></operator> <operator pos:line="10" pos:column="35">-<pos:position pos:line="10" pos:column="36"/></operator><literal type="number" pos:line="10" pos:column="36">1<pos:position pos:line="10" pos:column="37"/></literal></expr>)<pos:position pos:line="10" pos:column="38"/></condition><then pos:line="10" pos:column="38">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="5">__gconv_close<pos:position pos:line="11" pos:column="18"/></name> <argument_list pos:line="11" pos:column="19">(<argument><expr><name><name pos:line="11" pos:column="20">domain<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">-&gt;<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="28">conv<pos:position pos:line="11" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt></block></then></if>
<cpp:else pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">else<pos:position pos:line="12" pos:column="6"/></cpp:directive></cpp:else>
<cpp:if pos:line="13" pos:column="1"># <cpp:directive pos:line="13" pos:column="3">if<pos:position pos:line="13" pos:column="5"/></cpp:directive> <expr><name pos:line="13" pos:column="6">HAVE_ICONV<pos:position pos:line="13" pos:column="16"/></name></expr></cpp:if>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name><name pos:line="14" pos:column="7">domain<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">conv<pos:position pos:line="14" pos:column="19"/></name></name> <operator pos:line="14" pos:column="20">!=<pos:position pos:line="14" pos:column="22"/></operator> <operator pos:line="14" pos:column="23">(<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="24">iconv_t<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">)<pos:position pos:line="14" pos:column="32"/></operator> <operator pos:line="14" pos:column="33">-<pos:position pos:line="14" pos:column="34"/></operator><literal type="number" pos:line="14" pos:column="34">1<pos:position pos:line="14" pos:column="35"/></literal></expr>)<pos:position pos:line="14" pos:column="36"/></condition><then pos:line="14" pos:column="36">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="5">iconv_close<pos:position pos:line="15" pos:column="16"/></name> <argument_list pos:line="15" pos:column="17">(<argument><expr><name><name pos:line="15" pos:column="18">domain<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="26">conv<pos:position pos:line="15" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt></block></then></if>
<cpp:endif pos:line="16" pos:column="1"># <cpp:directive pos:line="16" pos:column="3">endif<pos:position pos:line="16" pos:column="8"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">endif<pos:position pos:line="17" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="18" pos:column="2"/></block></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1347_mutt-1.4.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">browse_get_namespace<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">IMAP_DATA<pos:position pos:line="1" pos:column="43"/></name><modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type> <name pos:line="1" pos:column="45">idata<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name><modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type> <name pos:line="1" pos:column="58">nsbuf<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">int<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">nsblen<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
  <parameter><decl><type><name pos:line="2" pos:column="3">IMAP_NAMESPACE_INFO<pos:position pos:line="2" pos:column="22"/></name><modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type> <name pos:line="2" pos:column="24">nsi<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">int<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">nsilen<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">int<pos:position pos:line="2" pos:column="44"/></name><modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type> <name pos:line="2" pos:column="46">nns<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">s<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">n<pos:position pos:line="5" pos:column="8"/></name></decl>;<pos:position pos:line="5" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">ns<pos:position pos:line="6" pos:column="10"/></name><index pos:line="6" pos:column="10">[<expr><name pos:line="6" pos:column="11">LONG_STRING<pos:position pos:line="6" pos:column="22"/></name></expr>]<pos:position pos:line="6" pos:column="23"/></index></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name pos:line="7" pos:column="8">delim<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><literal type="char" pos:line="7" pos:column="16">'/'<pos:position pos:line="7" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">type<pos:position pos:line="8" pos:column="11"/></name></decl>;<pos:position pos:line="8" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">nsbused<pos:position pos:line="9" pos:column="14"/></name> <init pos:line="9" pos:column="15">= <expr><literal type="number" pos:line="9" pos:column="17">0<pos:position pos:line="9" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">rc<pos:position pos:line="10" pos:column="9"/></name></decl>;<pos:position pos:line="10" pos:column="10"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="12" pos:column="3">*<pos:position pos:line="12" pos:column="4"/></operator><name pos:line="12" pos:column="4">nns<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <literal type="number" pos:line="12" pos:column="10">0<pos:position pos:line="12" pos:column="11"/></literal></expr>;<pos:position pos:line="12" pos:column="12"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">nsbuf<pos:position pos:line="13" pos:column="8"/></name><index pos:line="13" pos:column="8">[<expr><name pos:line="13" pos:column="9">nsblen<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">-<pos:position pos:line="13" pos:column="16"/></operator><literal type="number" pos:line="13" pos:column="16">1<pos:position pos:line="13" pos:column="17"/></literal></expr>]<pos:position pos:line="13" pos:column="18"/></index></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <literal type="char" pos:line="13" pos:column="21">'\0'<pos:position pos:line="13" pos:column="25"/></literal></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">imap_cmd_start<pos:position pos:line="15" pos:column="17"/></name> <argument_list pos:line="15" pos:column="18">(<argument><expr><name pos:line="15" pos:column="19">idata<pos:position pos:line="15" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="26">"NAMESPACE"<pos:position pos:line="15" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="39"/></expr_stmt>
  
  <do pos:line="17" pos:column="3">do 
  <block pos:line="18" pos:column="3">{
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">rc<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <call><name pos:line="19" pos:column="15">imap_cmd_step<pos:position pos:line="19" pos:column="28"/></name> <argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">idata<pos:position pos:line="19" pos:column="35"/></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call><operator pos:line="19" pos:column="36">)<pos:position pos:line="19" pos:column="37"/></operator> <operator pos:line="19" pos:column="38">!=<pos:position pos:line="19" pos:column="40"/></operator> <name pos:line="19" pos:column="41">IMAP_CMD_CONTINUE<pos:position pos:line="19" pos:column="58"/></name></expr>)<pos:position pos:line="19" pos:column="59"/></condition><then pos:line="19" pos:column="59">
      <block type="pseudo"><break pos:line="20" pos:column="7">break;<pos:position pos:line="20" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name pos:line="22" pos:column="5">s<pos:position pos:line="22" pos:column="6"/></name> <operator pos:line="22" pos:column="7">=<pos:position pos:line="22" pos:column="8"/></operator> <call><name pos:line="22" pos:column="9">imap_next_word<pos:position pos:line="22" pos:column="23"/></name> <argument_list pos:line="22" pos:column="24">(<argument><expr><name><name pos:line="22" pos:column="25">idata<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">-&gt;<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="32">cmd<pos:position pos:line="22" pos:column="35"/></name><operator pos:line="22" pos:column="35">.<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="36">buf<pos:position pos:line="22" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><call><name pos:line="23" pos:column="9">ascii_strncasecmp<pos:position pos:line="23" pos:column="26"/></name> <argument_list pos:line="23" pos:column="27">(<argument><expr><literal type="string" pos:line="23" pos:column="28">"NAMESPACE"<pos:position pos:line="23" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="41">s<pos:position pos:line="23" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="44">9<pos:position pos:line="23" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="46"/></argument_list></call> <operator pos:line="23" pos:column="47">==<pos:position pos:line="23" pos:column="49"/></operator> <literal type="number" pos:line="23" pos:column="50">0<pos:position pos:line="23" pos:column="51"/></literal></expr>)<pos:position pos:line="23" pos:column="52"/></condition><then pos:line="23" pos:column="52">
    <block pos:line="24" pos:column="5">{
      <comment type="block" pos:line="25" pos:column="7">/* There are three sections to the response, User, Other, Shared,
       * and maybe more by extension */</comment>
      <for pos:line="27" pos:column="7">for <control pos:line="27" pos:column="11">(<init><expr><name pos:line="27" pos:column="12">type<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <name pos:line="27" pos:column="19">IMAP_NS_PERSONAL<pos:position pos:line="27" pos:column="35"/></name></expr>;<pos:position pos:line="27" pos:column="36"/></init> <condition><expr><operator pos:line="27" pos:column="37">*<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="38">s<pos:position pos:line="27" pos:column="39"/></name></expr>;<pos:position pos:line="27" pos:column="40"/></condition> <incr><expr><name pos:line="27" pos:column="41">type<pos:position pos:line="27" pos:column="45"/></name><operator pos:line="27" pos:column="45">++<pos:position pos:line="27" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="27" pos:column="48"/></control>
      <block pos:line="28" pos:column="7">{
	<expr_stmt><expr><name pos:line="29" pos:column="9">s<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">=<pos:position pos:line="29" pos:column="12"/></operator> <call><name pos:line="29" pos:column="13">imap_next_word<pos:position pos:line="29" pos:column="27"/></name> <argument_list pos:line="29" pos:column="28">(<argument><expr><name pos:line="29" pos:column="29">s<pos:position pos:line="29" pos:column="30"/></name></expr></argument>)<pos:position pos:line="29" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="32"/></expr_stmt>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">*<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">s<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">&amp;&amp;<pos:position pos:line="30" pos:column="26"/></operator> <call><name pos:line="30" pos:column="19">ascii_strncasecmp<pos:position pos:line="30" pos:column="36"/></name> <argument_list pos:line="30" pos:column="37">(<argument><expr><name pos:line="30" pos:column="38">s<pos:position pos:line="30" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="41">"NIL"<pos:position pos:line="30" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="48">3<pos:position pos:line="30" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="51"/></condition><then pos:line="30" pos:column="51">
	<block pos:line="31" pos:column="9">{
	  <expr_stmt><expr><name pos:line="32" pos:column="11">s<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">++<pos:position pos:line="32" pos:column="14"/></operator></expr>;<pos:position pos:line="32" pos:column="15"/></expr_stmt>
	  <while pos:line="33" pos:column="11">while <condition pos:line="33" pos:column="17">(<expr><operator pos:line="33" pos:column="18">*<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="19">s<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">&amp;&amp;<pos:position pos:line="33" pos:column="31"/></operator> <operator pos:line="33" pos:column="24">*<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="25">s<pos:position pos:line="33" pos:column="26"/></name> <operator pos:line="33" pos:column="27">!=<pos:position pos:line="33" pos:column="29"/></operator> <literal type="char" pos:line="33" pos:column="30">')'<pos:position pos:line="33" pos:column="33"/></literal></expr>)<pos:position pos:line="33" pos:column="34"/></condition>
	  <block pos:line="34" pos:column="11">{
	    <expr_stmt><expr><name pos:line="35" pos:column="13">s<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">++<pos:position pos:line="35" pos:column="16"/></operator></expr>;<pos:position pos:line="35" pos:column="17"/></expr_stmt> <comment type="block" pos:line="35" pos:column="18">/* skip ( */</comment>
	    <comment type="block" pos:line="36" pos:column="13">/* copy namespace */</comment>
	    <expr_stmt><expr><name pos:line="37" pos:column="13">n<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <literal type="number" pos:line="37" pos:column="17">0<pos:position pos:line="37" pos:column="18"/></literal></expr>;<pos:position pos:line="37" pos:column="19"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="38" pos:column="13">delim<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <literal type="char" pos:line="38" pos:column="21">'\0'<pos:position pos:line="38" pos:column="25"/></literal></expr>;<pos:position pos:line="38" pos:column="26"/></expr_stmt>

	    <if pos:line="40" pos:column="13">if <condition pos:line="40" pos:column="16">(<expr><operator pos:line="40" pos:column="17">*<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="18">s<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">==<pos:position pos:line="40" pos:column="22"/></operator> <literal type="char" pos:line="40" pos:column="23">'\"'<pos:position pos:line="40" pos:column="27"/></literal></expr>)<pos:position pos:line="40" pos:column="28"/></condition><then pos:line="40" pos:column="28">
	    <block pos:line="41" pos:column="13">{
	      <expr_stmt><expr><name pos:line="42" pos:column="15">s<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">++<pos:position pos:line="42" pos:column="18"/></operator></expr>;<pos:position pos:line="42" pos:column="19"/></expr_stmt>
	      <while pos:line="43" pos:column="15">while <condition pos:line="43" pos:column="21">(<expr><operator pos:line="43" pos:column="22">*<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="23">s<pos:position pos:line="43" pos:column="24"/></name> <operator pos:line="43" pos:column="25">&amp;&amp;<pos:position pos:line="43" pos:column="35"/></operator> <operator pos:line="43" pos:column="28">*<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="29">s<pos:position pos:line="43" pos:column="30"/></name> <operator pos:line="43" pos:column="31">!=<pos:position pos:line="43" pos:column="33"/></operator> <literal type="char" pos:line="43" pos:column="34">'\"'<pos:position pos:line="43" pos:column="38"/></literal> <operator pos:line="43" pos:column="39">&amp;&amp;<pos:position pos:line="43" pos:column="49"/></operator> <name pos:line="43" pos:column="42">n<pos:position pos:line="43" pos:column="43"/></name> <operator pos:line="43" pos:column="44">&lt;<pos:position pos:line="43" pos:column="48"/></operator> <sizeof pos:line="43" pos:column="46">sizeof <argument_list pos:line="43" pos:column="53">(<argument><expr><name pos:line="43" pos:column="54">ns<pos:position pos:line="43" pos:column="56"/></name></expr></argument>)<pos:position pos:line="43" pos:column="57"/></argument_list></sizeof> <operator pos:line="43" pos:column="58">-<pos:position pos:line="43" pos:column="59"/></operator> <literal type="number" pos:line="43" pos:column="60">1<pos:position pos:line="43" pos:column="61"/></literal></expr>)<pos:position pos:line="43" pos:column="62"/></condition> 
	      <block pos:line="44" pos:column="15">{
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><operator pos:line="45" pos:column="21">*<pos:position pos:line="45" pos:column="22"/></operator><name pos:line="45" pos:column="22">s<pos:position pos:line="45" pos:column="23"/></name> <operator pos:line="45" pos:column="24">==<pos:position pos:line="45" pos:column="26"/></operator> <literal type="char" pos:line="45" pos:column="27">'\\'<pos:position pos:line="45" pos:column="31"/></literal></expr>)<pos:position pos:line="45" pos:column="32"/></condition><then pos:line="45" pos:column="32">
		  <block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="19">s<pos:position pos:line="46" pos:column="20"/></name><operator pos:line="46" pos:column="20">++<pos:position pos:line="46" pos:column="22"/></operator></expr>;<pos:position pos:line="46" pos:column="23"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="47" pos:column="17">ns<pos:position pos:line="47" pos:column="19"/></name><index pos:line="47" pos:column="19">[<expr><name pos:line="47" pos:column="20">n<pos:position pos:line="47" pos:column="21"/></name><operator pos:line="47" pos:column="21">++<pos:position pos:line="47" pos:column="23"/></operator></expr>]<pos:position pos:line="47" pos:column="24"/></index></name> <operator pos:line="47" pos:column="25">=<pos:position pos:line="47" pos:column="26"/></operator> <operator pos:line="47" pos:column="27">*<pos:position pos:line="47" pos:column="28"/></operator><name pos:line="47" pos:column="28">s<pos:position pos:line="47" pos:column="29"/></name></expr>;<pos:position pos:line="47" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="48" pos:column="17">s<pos:position pos:line="48" pos:column="18"/></name><operator pos:line="48" pos:column="18">++<pos:position pos:line="48" pos:column="20"/></operator></expr>;<pos:position pos:line="48" pos:column="21"/></expr_stmt>
	      }<pos:position pos:line="49" pos:column="16"/></block></while>
	      <if pos:line="50" pos:column="15">if <condition pos:line="50" pos:column="18">(<expr><operator pos:line="50" pos:column="19">*<pos:position pos:line="50" pos:column="20"/></operator><name pos:line="50" pos:column="20">s<pos:position pos:line="50" pos:column="21"/></name></expr>)<pos:position pos:line="50" pos:column="22"/></condition><then pos:line="50" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="17">s<pos:position pos:line="51" pos:column="18"/></name><operator pos:line="51" pos:column="18">++<pos:position pos:line="51" pos:column="20"/></operator></expr>;<pos:position pos:line="51" pos:column="21"/></expr_stmt></block></then></if>
	    }<pos:position pos:line="52" pos:column="14"/></block></then>
	    <else pos:line="53" pos:column="13">else
	      <block type="pseudo"><while pos:line="54" pos:column="15">while <condition pos:line="54" pos:column="21">(<expr><operator pos:line="54" pos:column="22">*<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="23">s<pos:position pos:line="54" pos:column="24"/></name> <operator pos:line="54" pos:column="25">&amp;&amp;<pos:position pos:line="54" pos:column="35"/></operator> <operator pos:line="54" pos:column="28">!<pos:position pos:line="54" pos:column="29"/></operator><call><name pos:line="54" pos:column="29">ISSPACE<pos:position pos:line="54" pos:column="36"/></name> <argument_list pos:line="54" pos:column="37">(<argument><expr><operator pos:line="54" pos:column="38">*<pos:position pos:line="54" pos:column="39"/></operator><name pos:line="54" pos:column="39">s<pos:position pos:line="54" pos:column="40"/></name></expr></argument>)<pos:position pos:line="54" pos:column="41"/></argument_list></call> <operator pos:line="54" pos:column="42">&amp;&amp;<pos:position pos:line="54" pos:column="52"/></operator> <name pos:line="54" pos:column="45">n<pos:position pos:line="54" pos:column="46"/></name> <operator pos:line="54" pos:column="47">&lt;<pos:position pos:line="54" pos:column="51"/></operator> <sizeof pos:line="54" pos:column="49">sizeof <argument_list pos:line="54" pos:column="56">(<argument><expr><name pos:line="54" pos:column="57">ns<pos:position pos:line="54" pos:column="59"/></name></expr></argument>)<pos:position pos:line="54" pos:column="60"/></argument_list></sizeof> <operator pos:line="54" pos:column="61">-<pos:position pos:line="54" pos:column="62"/></operator> <literal type="number" pos:line="54" pos:column="63">1<pos:position pos:line="54" pos:column="64"/></literal></expr>)<pos:position pos:line="54" pos:column="65"/></condition>
	      <block pos:line="55" pos:column="15">{
		<expr_stmt><expr><name><name pos:line="56" pos:column="17">ns<pos:position pos:line="56" pos:column="19"/></name><index pos:line="56" pos:column="19">[<expr><name pos:line="56" pos:column="20">n<pos:position pos:line="56" pos:column="21"/></name><operator pos:line="56" pos:column="21">++<pos:position pos:line="56" pos:column="23"/></operator></expr>]<pos:position pos:line="56" pos:column="24"/></index></name> <operator pos:line="56" pos:column="25">=<pos:position pos:line="56" pos:column="26"/></operator> <operator pos:line="56" pos:column="27">*<pos:position pos:line="56" pos:column="28"/></operator><name pos:line="56" pos:column="28">s<pos:position pos:line="56" pos:column="29"/></name></expr>;<pos:position pos:line="56" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="57" pos:column="17">s<pos:position pos:line="57" pos:column="18"/></name><operator pos:line="57" pos:column="18">++<pos:position pos:line="57" pos:column="20"/></operator></expr>;<pos:position pos:line="57" pos:column="21"/></expr_stmt>
	      }<pos:position pos:line="58" pos:column="16"/></block></while></block></else></if>
	    <expr_stmt><expr><name><name pos:line="59" pos:column="13">ns<pos:position pos:line="59" pos:column="15"/></name><index pos:line="59" pos:column="15">[<expr><name pos:line="59" pos:column="16">n<pos:position pos:line="59" pos:column="17"/></name></expr>]<pos:position pos:line="59" pos:column="18"/></index></name> <operator pos:line="59" pos:column="19">=<pos:position pos:line="59" pos:column="20"/></operator> <literal type="char" pos:line="59" pos:column="21">'\0'<pos:position pos:line="59" pos:column="25"/></literal></expr>;<pos:position pos:line="59" pos:column="26"/></expr_stmt>
	    <if pos:line="60" pos:column="13">if <condition pos:line="60" pos:column="16">(<expr><name pos:line="60" pos:column="17">n<pos:position pos:line="60" pos:column="18"/></name> <operator pos:line="60" pos:column="19">==<pos:position pos:line="60" pos:column="21"/></operator> <sizeof pos:line="60" pos:column="22">sizeof <argument_list pos:line="60" pos:column="29">(<argument><expr><name pos:line="60" pos:column="30">ns<pos:position pos:line="60" pos:column="32"/></name></expr></argument>)<pos:position pos:line="60" pos:column="33"/></argument_list></sizeof> <operator pos:line="60" pos:column="34">-<pos:position pos:line="60" pos:column="35"/></operator> <literal type="number" pos:line="60" pos:column="36">1<pos:position pos:line="60" pos:column="37"/></literal></expr>)<pos:position pos:line="60" pos:column="38"/></condition><then pos:line="60" pos:column="38">
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="15">dprint<pos:position pos:line="61" pos:column="21"/></name> <argument_list pos:line="61" pos:column="22">(<argument><expr><literal type="number" pos:line="61" pos:column="23">1<pos:position pos:line="61" pos:column="24"/></literal></expr></argument>, <argument><expr><operator pos:line="61" pos:column="26">(<pos:position pos:line="61" pos:column="27"/></operator><name pos:line="61" pos:column="27">debugfile<pos:position pos:line="61" pos:column="36"/></name><operator pos:line="61" pos:column="36">,<pos:position pos:line="61" pos:column="37"/></operator> <literal type="string" pos:line="61" pos:column="38">"browse_get_namespace: too long: [%s]\n"<pos:position pos:line="61" pos:column="78"/></literal><operator pos:line="61" pos:column="78">,<pos:position pos:line="61" pos:column="79"/></operator> <name pos:line="61" pos:column="80">ns<pos:position pos:line="61" pos:column="82"/></name><operator pos:line="61" pos:column="82">)<pos:position pos:line="61" pos:column="83"/></operator></expr></argument>)<pos:position pos:line="61" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="85"/></expr_stmt></block></then></if>
	    <comment type="block" pos:line="62" pos:column="13">/* delim? */</comment>
	    <expr_stmt><expr><name pos:line="63" pos:column="13">s<pos:position pos:line="63" pos:column="14"/></name> <operator pos:line="63" pos:column="15">=<pos:position pos:line="63" pos:column="16"/></operator> <call><name pos:line="63" pos:column="17">imap_next_word<pos:position pos:line="63" pos:column="31"/></name> <argument_list pos:line="63" pos:column="32">(<argument><expr><name pos:line="63" pos:column="33">s<pos:position pos:line="63" pos:column="34"/></name></expr></argument>)<pos:position pos:line="63" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="36"/></expr_stmt>
	    <comment type="block" pos:line="64" pos:column="13">/* delimiter is meaningless if namespace is "". Why does
	     * Cyrus provide one?! */</comment>
	    <if pos:line="66" pos:column="13">if <condition pos:line="66" pos:column="16">(<expr><name pos:line="66" pos:column="17">n<pos:position pos:line="66" pos:column="18"/></name> <operator pos:line="66" pos:column="19">&amp;&amp;<pos:position pos:line="66" pos:column="29"/></operator> <operator pos:line="66" pos:column="22">*<pos:position pos:line="66" pos:column="23"/></operator><name pos:line="66" pos:column="23">s<pos:position pos:line="66" pos:column="24"/></name> <operator pos:line="66" pos:column="25">&amp;&amp;<pos:position pos:line="66" pos:column="35"/></operator> <operator pos:line="66" pos:column="28">*<pos:position pos:line="66" pos:column="29"/></operator><name pos:line="66" pos:column="29">s<pos:position pos:line="66" pos:column="30"/></name> <operator pos:line="66" pos:column="31">==<pos:position pos:line="66" pos:column="33"/></operator> <literal type="char" pos:line="66" pos:column="34">'\"'<pos:position pos:line="66" pos:column="38"/></literal></expr>)<pos:position pos:line="66" pos:column="39"/></condition><then pos:line="66" pos:column="39">
	    <block pos:line="67" pos:column="13">{
	      <if pos:line="68" pos:column="15">if <condition pos:line="68" pos:column="18">(<expr><name><name pos:line="68" pos:column="19">s<pos:position pos:line="68" pos:column="20"/></name><index pos:line="68" pos:column="20">[<expr><literal type="number" pos:line="68" pos:column="21">1<pos:position pos:line="68" pos:column="22"/></literal></expr>]<pos:position pos:line="68" pos:column="23"/></index></name> <operator pos:line="68" pos:column="24">&amp;&amp;<pos:position pos:line="68" pos:column="34"/></operator> <name><name pos:line="68" pos:column="27">s<pos:position pos:line="68" pos:column="28"/></name><index pos:line="68" pos:column="28">[<expr><literal type="number" pos:line="68" pos:column="29">2<pos:position pos:line="68" pos:column="30"/></literal></expr>]<pos:position pos:line="68" pos:column="31"/></index></name> <operator pos:line="68" pos:column="32">==<pos:position pos:line="68" pos:column="34"/></operator> <literal type="char" pos:line="68" pos:column="35">'\"'<pos:position pos:line="68" pos:column="39"/></literal></expr>)<pos:position pos:line="68" pos:column="40"/></condition><then pos:line="68" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="17">delim<pos:position pos:line="69" pos:column="22"/></name> <operator pos:line="69" pos:column="23">=<pos:position pos:line="69" pos:column="24"/></operator> <name><name pos:line="69" pos:column="25">s<pos:position pos:line="69" pos:column="26"/></name><index pos:line="69" pos:column="26">[<expr><literal type="number" pos:line="69" pos:column="27">1<pos:position pos:line="69" pos:column="28"/></literal></expr>]<pos:position pos:line="69" pos:column="29"/></index></name></expr>;<pos:position pos:line="69" pos:column="30"/></expr_stmt></block></then>
	      <elseif pos:line="70" pos:column="15">else <if pos:line="70" pos:column="20">if <condition pos:line="70" pos:column="23">(<expr><name><name pos:line="70" pos:column="24">s<pos:position pos:line="70" pos:column="25"/></name><index pos:line="70" pos:column="25">[<expr><literal type="number" pos:line="70" pos:column="26">1<pos:position pos:line="70" pos:column="27"/></literal></expr>]<pos:position pos:line="70" pos:column="28"/></index></name> <operator pos:line="70" pos:column="29">&amp;&amp;<pos:position pos:line="70" pos:column="39"/></operator> <name><name pos:line="70" pos:column="32">s<pos:position pos:line="70" pos:column="33"/></name><index pos:line="70" pos:column="33">[<expr><literal type="number" pos:line="70" pos:column="34">1<pos:position pos:line="70" pos:column="35"/></literal></expr>]<pos:position pos:line="70" pos:column="36"/></index></name> <operator pos:line="70" pos:column="37">==<pos:position pos:line="70" pos:column="39"/></operator> <literal type="char" pos:line="70" pos:column="40">'\\'<pos:position pos:line="70" pos:column="44"/></literal> <operator pos:line="70" pos:column="45">&amp;&amp;<pos:position pos:line="70" pos:column="55"/></operator> <name><name pos:line="70" pos:column="48">s<pos:position pos:line="70" pos:column="49"/></name><index pos:line="70" pos:column="49">[<expr><literal type="number" pos:line="70" pos:column="50">2<pos:position pos:line="70" pos:column="51"/></literal></expr>]<pos:position pos:line="70" pos:column="52"/></index></name> <operator pos:line="70" pos:column="53">&amp;&amp;<pos:position pos:line="70" pos:column="63"/></operator> <name><name pos:line="70" pos:column="56">s<pos:position pos:line="70" pos:column="57"/></name><index pos:line="70" pos:column="57">[<expr><literal type="number" pos:line="70" pos:column="58">3<pos:position pos:line="70" pos:column="59"/></literal></expr>]<pos:position pos:line="70" pos:column="60"/></index></name> <operator pos:line="70" pos:column="61">==<pos:position pos:line="70" pos:column="63"/></operator> <literal type="char" pos:line="70" pos:column="64">'\"'<pos:position pos:line="70" pos:column="68"/></literal></expr>)<pos:position pos:line="70" pos:column="69"/></condition><then pos:line="70" pos:column="69">
		<block type="pseudo"><expr_stmt><expr><name pos:line="71" pos:column="17">delim<pos:position pos:line="71" pos:column="22"/></name> <operator pos:line="71" pos:column="23">=<pos:position pos:line="71" pos:column="24"/></operator> <name><name pos:line="71" pos:column="25">s<pos:position pos:line="71" pos:column="26"/></name><index pos:line="71" pos:column="26">[<expr><literal type="number" pos:line="71" pos:column="27">2<pos:position pos:line="71" pos:column="28"/></literal></expr>]<pos:position pos:line="71" pos:column="29"/></index></name></expr>;<pos:position pos:line="71" pos:column="30"/></expr_stmt></block></then></if></elseif></if>
	    }<pos:position pos:line="72" pos:column="14"/></block></then></if>
	    <comment type="block" pos:line="73" pos:column="13">/* skip "" namespaces, they are already listed at the root */</comment>
	    <if pos:line="74" pos:column="13">if <condition pos:line="74" pos:column="16">(<expr><operator pos:line="74" pos:column="17">(<pos:position pos:line="74" pos:column="18"/></operator><name><name pos:line="74" pos:column="18">ns<pos:position pos:line="74" pos:column="20"/></name><index pos:line="74" pos:column="20">[<expr><literal type="number" pos:line="74" pos:column="21">0<pos:position pos:line="74" pos:column="22"/></literal></expr>]<pos:position pos:line="74" pos:column="23"/></index></name> <operator pos:line="74" pos:column="24">!=<pos:position pos:line="74" pos:column="26"/></operator> <literal type="char" pos:line="74" pos:column="27">'\0'<pos:position pos:line="74" pos:column="31"/></literal><operator pos:line="74" pos:column="31">)<pos:position pos:line="74" pos:column="32"/></operator> <operator pos:line="74" pos:column="33">&amp;&amp;<pos:position pos:line="74" pos:column="43"/></operator> <operator pos:line="74" pos:column="36">(<pos:position pos:line="74" pos:column="37"/></operator><name pos:line="74" pos:column="37">nsbused<pos:position pos:line="74" pos:column="44"/></name> <operator pos:line="74" pos:column="45">&lt;<pos:position pos:line="74" pos:column="49"/></operator> <name pos:line="74" pos:column="47">nsblen<pos:position pos:line="74" pos:column="53"/></name><operator pos:line="74" pos:column="53">)<pos:position pos:line="74" pos:column="54"/></operator> <operator pos:line="74" pos:column="55">&amp;&amp;<pos:position pos:line="74" pos:column="65"/></operator> <operator pos:line="74" pos:column="58">(<pos:position pos:line="74" pos:column="59"/></operator><operator pos:line="74" pos:column="59">*<pos:position pos:line="74" pos:column="60"/></operator><name pos:line="74" pos:column="60">nns<pos:position pos:line="74" pos:column="63"/></name> <operator pos:line="74" pos:column="64">&lt;<pos:position pos:line="74" pos:column="68"/></operator> <name pos:line="74" pos:column="66">nsilen<pos:position pos:line="74" pos:column="72"/></name><operator pos:line="74" pos:column="72">)<pos:position pos:line="74" pos:column="73"/></operator></expr>)<pos:position pos:line="74" pos:column="74"/></condition><then pos:line="74" pos:column="74">
	    <block pos:line="75" pos:column="13">{
	      <expr_stmt><expr><call><name pos:line="76" pos:column="15">dprint<pos:position pos:line="76" pos:column="21"/></name> <argument_list pos:line="76" pos:column="22">(<argument><expr><literal type="number" pos:line="76" pos:column="23">3<pos:position pos:line="76" pos:column="24"/></literal></expr></argument>, <argument><expr><operator pos:line="76" pos:column="26">(<pos:position pos:line="76" pos:column="27"/></operator><name pos:line="76" pos:column="27">debugfile<pos:position pos:line="76" pos:column="36"/></name><operator pos:line="76" pos:column="36">,<pos:position pos:line="76" pos:column="37"/></operator> <literal type="string" pos:line="76" pos:column="38">"browse_get_namespace: adding %s\n"<pos:position pos:line="76" pos:column="73"/></literal><operator pos:line="76" pos:column="73">,<pos:position pos:line="76" pos:column="74"/></operator> <name pos:line="76" pos:column="75">ns<pos:position pos:line="76" pos:column="77"/></name><operator pos:line="76" pos:column="77">)<pos:position pos:line="76" pos:column="78"/></operator></expr></argument>)<pos:position pos:line="76" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="80"/></expr_stmt>
	      <expr_stmt><expr><name><name pos:line="77" pos:column="15">nsi<pos:position pos:line="77" pos:column="18"/></name><operator pos:line="77" pos:column="18">-&gt;<pos:position pos:line="77" pos:column="23"/></operator><name pos:line="77" pos:column="20">type<pos:position pos:line="77" pos:column="24"/></name></name> <operator pos:line="77" pos:column="25">=<pos:position pos:line="77" pos:column="26"/></operator> <name pos:line="77" pos:column="27">type<pos:position pos:line="77" pos:column="31"/></name></expr>;<pos:position pos:line="77" pos:column="32"/></expr_stmt>
	      <comment type="block" pos:line="78" pos:column="15">/* Cyrus doesn't append the delimiter to the namespace,
	       * but UW-IMAP does. We'll strip it here and add it back
	       * as if it were a normal directory, from the browser */</comment>
	      <if pos:line="81" pos:column="15">if <condition pos:line="81" pos:column="18">(<expr><name pos:line="81" pos:column="19">n<pos:position pos:line="81" pos:column="20"/></name> <operator pos:line="81" pos:column="21">&amp;&amp;<pos:position pos:line="81" pos:column="31"/></operator> <operator pos:line="81" pos:column="24">(<pos:position pos:line="81" pos:column="25"/></operator><name><name pos:line="81" pos:column="25">ns<pos:position pos:line="81" pos:column="27"/></name><index pos:line="81" pos:column="27">[<expr><name pos:line="81" pos:column="28">n<pos:position pos:line="81" pos:column="29"/></name><operator pos:line="81" pos:column="29">-<pos:position pos:line="81" pos:column="30"/></operator><literal type="number" pos:line="81" pos:column="30">1<pos:position pos:line="81" pos:column="31"/></literal></expr>]<pos:position pos:line="81" pos:column="32"/></index></name> <operator pos:line="81" pos:column="33">==<pos:position pos:line="81" pos:column="35"/></operator> <name pos:line="81" pos:column="36">delim<pos:position pos:line="81" pos:column="41"/></name><operator pos:line="81" pos:column="41">)<pos:position pos:line="81" pos:column="42"/></operator></expr>)<pos:position pos:line="81" pos:column="43"/></condition><then pos:line="81" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="82" pos:column="17">ns<pos:position pos:line="82" pos:column="19"/></name><index pos:line="82" pos:column="19">[<expr><operator pos:line="82" pos:column="20">--<pos:position pos:line="82" pos:column="22"/></operator><name pos:line="82" pos:column="22">n<pos:position pos:line="82" pos:column="23"/></name></expr>]<pos:position pos:line="82" pos:column="24"/></index></name> <operator pos:line="82" pos:column="25">=<pos:position pos:line="82" pos:column="26"/></operator> <literal type="char" pos:line="82" pos:column="27">'\0'<pos:position pos:line="82" pos:column="31"/></literal></expr>;<pos:position pos:line="82" pos:column="32"/></expr_stmt></block></then></if>
	      <expr_stmt><expr><call><name pos:line="83" pos:column="15">strncpy<pos:position pos:line="83" pos:column="22"/></name> <argument_list pos:line="83" pos:column="23">(<argument><expr><name pos:line="83" pos:column="24">nsbuf<pos:position pos:line="83" pos:column="29"/></name><operator pos:line="83" pos:column="29">+<pos:position pos:line="83" pos:column="30"/></operator><name pos:line="83" pos:column="30">nsbused<pos:position pos:line="83" pos:column="37"/></name></expr></argument>,<argument><expr><name pos:line="83" pos:column="38">ns<pos:position pos:line="83" pos:column="40"/></name></expr></argument>,<argument><expr><name pos:line="83" pos:column="41">nsblen<pos:position pos:line="83" pos:column="47"/></name><operator pos:line="83" pos:column="47">-<pos:position pos:line="83" pos:column="48"/></operator><name pos:line="83" pos:column="48">nsbused<pos:position pos:line="83" pos:column="55"/></name><operator pos:line="83" pos:column="55">-<pos:position pos:line="83" pos:column="56"/></operator><literal type="number" pos:line="83" pos:column="56">1<pos:position pos:line="83" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="59"/></expr_stmt>
	      <expr_stmt><expr><name><name pos:line="84" pos:column="15">nsi<pos:position pos:line="84" pos:column="18"/></name><operator pos:line="84" pos:column="18">-&gt;<pos:position pos:line="84" pos:column="23"/></operator><name pos:line="84" pos:column="20">prefix<pos:position pos:line="84" pos:column="26"/></name></name> <operator pos:line="84" pos:column="27">=<pos:position pos:line="84" pos:column="28"/></operator> <name pos:line="84" pos:column="29">nsbuf<pos:position pos:line="84" pos:column="34"/></name><operator pos:line="84" pos:column="34">+<pos:position pos:line="84" pos:column="35"/></operator><name pos:line="84" pos:column="35">nsbused<pos:position pos:line="84" pos:column="42"/></name></expr>;<pos:position pos:line="84" pos:column="43"/></expr_stmt>
	      <expr_stmt><expr><name pos:line="85" pos:column="15">nsbused<pos:position pos:line="85" pos:column="22"/></name> <operator pos:line="85" pos:column="23">+=<pos:position pos:line="85" pos:column="25"/></operator> <name pos:line="85" pos:column="26">n<pos:position pos:line="85" pos:column="27"/></name><operator pos:line="85" pos:column="27">+<pos:position pos:line="85" pos:column="28"/></operator><literal type="number" pos:line="85" pos:column="28">1<pos:position pos:line="85" pos:column="29"/></literal></expr>;<pos:position pos:line="85" pos:column="30"/></expr_stmt>
	      <expr_stmt><expr><name><name pos:line="86" pos:column="15">nsi<pos:position pos:line="86" pos:column="18"/></name><operator pos:line="86" pos:column="18">-&gt;<pos:position pos:line="86" pos:column="23"/></operator><name pos:line="86" pos:column="20">delim<pos:position pos:line="86" pos:column="25"/></name></name> <operator pos:line="86" pos:column="26">=<pos:position pos:line="86" pos:column="27"/></operator> <name pos:line="86" pos:column="28">delim<pos:position pos:line="86" pos:column="33"/></name></expr>;<pos:position pos:line="86" pos:column="34"/></expr_stmt>
	      <expr_stmt><expr><name pos:line="87" pos:column="15">nsi<pos:position pos:line="87" pos:column="18"/></name><operator pos:line="87" pos:column="18">++<pos:position pos:line="87" pos:column="20"/></operator></expr>;<pos:position pos:line="87" pos:column="21"/></expr_stmt>
	      <expr_stmt><expr><operator pos:line="88" pos:column="15">(<pos:position pos:line="88" pos:column="16"/></operator><operator pos:line="88" pos:column="16">*<pos:position pos:line="88" pos:column="17"/></operator><name pos:line="88" pos:column="17">nns<pos:position pos:line="88" pos:column="20"/></name><operator pos:line="88" pos:column="20">)<pos:position pos:line="88" pos:column="21"/></operator><operator pos:line="88" pos:column="21">++<pos:position pos:line="88" pos:column="23"/></operator></expr>;<pos:position pos:line="88" pos:column="24"/></expr_stmt>
	    }<pos:position pos:line="89" pos:column="14"/></block></then></if>
	    <while pos:line="90" pos:column="13">while <condition pos:line="90" pos:column="19">(<expr><operator pos:line="90" pos:column="20">*<pos:position pos:line="90" pos:column="21"/></operator><name pos:line="90" pos:column="21">s<pos:position pos:line="90" pos:column="22"/></name> <operator pos:line="90" pos:column="23">&amp;&amp;<pos:position pos:line="90" pos:column="33"/></operator> <operator pos:line="90" pos:column="26">*<pos:position pos:line="90" pos:column="27"/></operator><name pos:line="90" pos:column="27">s<pos:position pos:line="90" pos:column="28"/></name> <operator pos:line="90" pos:column="29">!=<pos:position pos:line="90" pos:column="31"/></operator> <literal type="char" pos:line="90" pos:column="32">')'<pos:position pos:line="90" pos:column="35"/></literal></expr>)<pos:position pos:line="90" pos:column="36"/></condition> 
	      <block type="pseudo"><expr_stmt><expr><name pos:line="91" pos:column="15">s<pos:position pos:line="91" pos:column="16"/></name><operator pos:line="91" pos:column="16">++<pos:position pos:line="91" pos:column="18"/></operator></expr>;<pos:position pos:line="91" pos:column="19"/></expr_stmt></block></while>
	    <if pos:line="92" pos:column="13">if <condition pos:line="92" pos:column="16">(<expr><operator pos:line="92" pos:column="17">*<pos:position pos:line="92" pos:column="18"/></operator><name pos:line="92" pos:column="18">s<pos:position pos:line="92" pos:column="19"/></name></expr>)<pos:position pos:line="92" pos:column="20"/></condition><then pos:line="92" pos:column="20">
	      <block type="pseudo"><expr_stmt><expr><name pos:line="93" pos:column="15">s<pos:position pos:line="93" pos:column="16"/></name><operator pos:line="93" pos:column="16">++<pos:position pos:line="93" pos:column="18"/></operator></expr>;<pos:position pos:line="93" pos:column="19"/></expr_stmt></block></then></if>
	  }<pos:position pos:line="94" pos:column="12"/></block></while>
	}<pos:position pos:line="95" pos:column="10"/></block></then></if>
      }<pos:position pos:line="96" pos:column="8"/></block></for>
    }<pos:position pos:line="97" pos:column="6"/></block></then></if>
  }<pos:position pos:line="98" pos:column="4"/></block>
  while <condition pos:line="99" pos:column="9">(<expr><name pos:line="99" pos:column="10">rc<pos:position pos:line="99" pos:column="12"/></name> <operator pos:line="99" pos:column="13">==<pos:position pos:line="99" pos:column="15"/></operator> <name pos:line="99" pos:column="16">IMAP_CMD_CONTINUE<pos:position pos:line="99" pos:column="33"/></name></expr>)<pos:position pos:line="99" pos:column="34"/></condition>;<pos:position pos:line="99" pos:column="35"/></do>

  <if pos:line="101" pos:column="3">if <condition pos:line="101" pos:column="6">(<expr><name pos:line="101" pos:column="7">rc<pos:position pos:line="101" pos:column="9"/></name> <operator pos:line="101" pos:column="10">!=<pos:position pos:line="101" pos:column="12"/></operator> <name pos:line="101" pos:column="13">IMAP_CMD_OK<pos:position pos:line="101" pos:column="24"/></name></expr>)<pos:position pos:line="101" pos:column="25"/></condition><then pos:line="101" pos:column="25">
    <block type="pseudo"><return pos:line="102" pos:column="5">return <expr><operator pos:line="102" pos:column="12">-<pos:position pos:line="102" pos:column="13"/></operator><literal type="number" pos:line="102" pos:column="13">1<pos:position pos:line="102" pos:column="14"/></literal></expr>;<pos:position pos:line="102" pos:column="15"/></return></block></then></if>

  <return pos:line="104" pos:column="3">return <expr><literal type="number" pos:line="104" pos:column="10">0<pos:position pos:line="104" pos:column="11"/></literal></expr>;<pos:position pos:line="104" pos:column="12"/></return>
}<pos:position pos:line="105" pos:column="2"/></block></function></unit>

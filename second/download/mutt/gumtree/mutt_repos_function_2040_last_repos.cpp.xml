<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2040_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">imap_access<pos:position pos:line="1" pos:column="16"/></name> <parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><specifier pos:line="1" pos:column="18">const<pos:position pos:line="1" pos:column="23"/></specifier> <name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name><modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type> <name pos:line="1" pos:column="30">path<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">IMAP_DATA<pos:position pos:line="3" pos:column="12"/></name><modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type> <name pos:line="3" pos:column="14">idata<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">IMAP_MBOX<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">mx<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">buf<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><name pos:line="5" pos:column="12">LONG_STRING<pos:position pos:line="5" pos:column="23"/></name></expr>]<pos:position pos:line="5" pos:column="24"/></index></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">mailbox<pos:position pos:line="6" pos:column="15"/></name><index pos:line="6" pos:column="15">[<expr><name pos:line="6" pos:column="16">LONG_STRING<pos:position pos:line="6" pos:column="27"/></name></expr>]<pos:position pos:line="6" pos:column="28"/></index></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">mbox<pos:position pos:line="7" pos:column="12"/></name><index pos:line="7" pos:column="12">[<expr><name pos:line="7" pos:column="13">LONG_STRING<pos:position pos:line="7" pos:column="24"/></name></expr>]<pos:position pos:line="7" pos:column="25"/></index></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">rc<pos:position pos:line="8" pos:column="9"/></name></decl>;<pos:position pos:line="8" pos:column="10"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><call><name pos:line="10" pos:column="7">imap_parse_path<pos:position pos:line="10" pos:column="22"/></name> <argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">path<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="30">&amp;<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="31">mx<pos:position pos:line="10" pos:column="33"/></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="35"/></condition><then pos:line="10" pos:column="35">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">-<pos:position pos:line="11" pos:column="13"/></operator><literal type="number" pos:line="11" pos:column="13">1<pos:position pos:line="11" pos:column="14"/></literal></expr>;<pos:position pos:line="11" pos:column="15"/></return></block></then></if>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><operator pos:line="13" pos:column="7">!<pos:position pos:line="13" pos:column="8"/></operator><operator pos:line="13" pos:column="8">(<pos:position pos:line="13" pos:column="9"/></operator><name pos:line="13" pos:column="9">idata<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <call><name pos:line="13" pos:column="17">imap_conn_find<pos:position pos:line="13" pos:column="31"/></name> <argument_list pos:line="13" pos:column="32">(<argument><expr><operator pos:line="13" pos:column="33">&amp;<pos:position pos:line="13" pos:column="38"/></operator><name><name pos:line="13" pos:column="34">mx<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">.<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="37">account<pos:position pos:line="13" pos:column="44"/></name></name></expr></argument>,
    <argument><expr><ternary><condition><expr><call><name pos:line="14" pos:column="5">option<pos:position pos:line="14" pos:column="11"/></name> <argument_list pos:line="14" pos:column="12">(<argument><expr><name pos:line="14" pos:column="13">OPTIMAPPASSIVE<pos:position pos:line="14" pos:column="27"/></name></expr></argument>)<pos:position pos:line="14" pos:column="28"/></argument_list></call></expr> ?<pos:position pos:line="14" pos:column="30"/></condition><then pos:line="14" pos:column="30"> <expr><name pos:line="14" pos:column="31">MUTT_IMAP_CONN_NONEW<pos:position pos:line="14" pos:column="51"/></name></expr> <pos:position pos:line="14" pos:column="52"/></then><else pos:line="14" pos:column="52">: <expr><literal type="number" pos:line="14" pos:column="54">0<pos:position pos:line="14" pos:column="55"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call><operator pos:line="14" pos:column="56">)<pos:position pos:line="14" pos:column="57"/></operator></expr>)<pos:position pos:line="14" pos:column="58"/></condition><then pos:line="14" pos:column="58">
  <block pos:line="15" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">FREE<pos:position pos:line="16" pos:column="9"/></name> <argument_list pos:line="16" pos:column="10">(<argument><expr><operator pos:line="16" pos:column="11">&amp;<pos:position pos:line="16" pos:column="16"/></operator><name><name pos:line="16" pos:column="12">mx<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">.<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">mbox<pos:position pos:line="16" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">-<pos:position pos:line="17" pos:column="13"/></operator><literal type="number" pos:line="17" pos:column="13">1<pos:position pos:line="17" pos:column="14"/></literal></expr>;<pos:position pos:line="17" pos:column="15"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">imap_fix_path<pos:position pos:line="20" pos:column="16"/></name> <argument_list pos:line="20" pos:column="17">(<argument><expr><name pos:line="20" pos:column="18">idata<pos:position pos:line="20" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="25">mx<pos:position pos:line="20" pos:column="27"/></name><operator pos:line="20" pos:column="27">.<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="28">mbox<pos:position pos:line="20" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="34">mailbox<pos:position pos:line="20" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="43">sizeof <argument_list pos:line="20" pos:column="50">(<argument><expr><name pos:line="20" pos:column="51">mailbox<pos:position pos:line="20" pos:column="58"/></name></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="61"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><operator pos:line="21" pos:column="7">!<pos:position pos:line="21" pos:column="8"/></operator><operator pos:line="21" pos:column="8">*<pos:position pos:line="21" pos:column="9"/></operator><name pos:line="21" pos:column="9">mailbox<pos:position pos:line="21" pos:column="16"/></name></expr>)<pos:position pos:line="21" pos:column="17"/></condition><then pos:line="21" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="5">strfcpy<pos:position pos:line="22" pos:column="12"/></name> <argument_list pos:line="22" pos:column="13">(<argument><expr><name pos:line="22" pos:column="14">mailbox<pos:position pos:line="22" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="23">"INBOX"<pos:position pos:line="22" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="32">sizeof <argument_list pos:line="22" pos:column="39">(<argument><expr><name pos:line="22" pos:column="40">mailbox<pos:position pos:line="22" pos:column="47"/></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="50"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="24" pos:column="3">/* we may already be in the folder we're checking */</comment>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><operator pos:line="25" pos:column="7">!<pos:position pos:line="25" pos:column="8"/></operator><call><name pos:line="25" pos:column="8">ascii_strcmp<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name><name pos:line="25" pos:column="21">idata<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">mailbox<pos:position pos:line="25" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="37">mx<pos:position pos:line="25" pos:column="39"/></name><operator pos:line="25" pos:column="39">.<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="40">mbox<pos:position pos:line="25" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="46"/></condition><then pos:line="25" pos:column="46">
  <block pos:line="26" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">FREE<pos:position pos:line="27" pos:column="9"/></name> <argument_list pos:line="27" pos:column="10">(<argument><expr><operator pos:line="27" pos:column="11">&amp;<pos:position pos:line="27" pos:column="16"/></operator><name><name pos:line="27" pos:column="12">mx<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">.<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="15">mbox<pos:position pos:line="27" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="21"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><literal type="number" pos:line="28" pos:column="12">0<pos:position pos:line="28" pos:column="13"/></literal></expr>;<pos:position pos:line="28" pos:column="14"/></return>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">FREE<pos:position pos:line="30" pos:column="7"/></name> <argument_list pos:line="30" pos:column="8">(<argument><expr><operator pos:line="30" pos:column="9">&amp;<pos:position pos:line="30" pos:column="14"/></operator><name><name pos:line="30" pos:column="10">mx<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">.<pos:position pos:line="30" pos:column="13"/></operator><name pos:line="30" pos:column="13">mbox<pos:position pos:line="30" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="19"/></expr_stmt>

  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><call><name pos:line="32" pos:column="7">imap_mboxcache_get<pos:position pos:line="32" pos:column="25"/></name> <argument_list pos:line="32" pos:column="26">(<argument><expr><name pos:line="32" pos:column="27">idata<pos:position pos:line="32" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="34">mailbox<pos:position pos:line="32" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="43">0<pos:position pos:line="32" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="46"/></condition><then pos:line="32" pos:column="46">
  <block pos:line="33" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">dprint<pos:position pos:line="34" pos:column="11"/></name> <argument_list pos:line="34" pos:column="12">(<argument><expr><literal type="number" pos:line="34" pos:column="13">3<pos:position pos:line="34" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="34" pos:column="16">(<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="17">debugfile<pos:position pos:line="34" pos:column="26"/></name><operator pos:line="34" pos:column="26">,<pos:position pos:line="34" pos:column="27"/></operator> <literal type="string" pos:line="34" pos:column="28">"imap_access: found %s in cache\n"<pos:position pos:line="34" pos:column="62"/></literal><operator pos:line="34" pos:column="62">,<pos:position pos:line="34" pos:column="63"/></operator> <name pos:line="34" pos:column="64">mailbox<pos:position pos:line="34" pos:column="71"/></name><operator pos:line="34" pos:column="71">)<pos:position pos:line="34" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="34" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="74"/></expr_stmt>
    <return pos:line="35" pos:column="5">return <expr><literal type="number" pos:line="35" pos:column="12">0<pos:position pos:line="35" pos:column="13"/></literal></expr>;<pos:position pos:line="35" pos:column="14"/></return>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="38" pos:column="3">imap_munge_mbox_name<pos:position pos:line="38" pos:column="23"/></name> <argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">idata<pos:position pos:line="38" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="32">mbox<pos:position pos:line="38" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="38">sizeof <argument_list pos:line="38" pos:column="45">(<argument><expr><name pos:line="38" pos:column="46">mbox<pos:position pos:line="38" pos:column="50"/></name></expr></argument>)<pos:position pos:line="38" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="38" pos:column="53">mailbox<pos:position pos:line="38" pos:column="60"/></name></expr></argument>)<pos:position pos:line="38" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="62"/></expr_stmt>

  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><call><name pos:line="40" pos:column="7">mutt_bit_isset<pos:position pos:line="40" pos:column="21"/></name> <argument_list pos:line="40" pos:column="22">(<argument><expr><name><name pos:line="40" pos:column="23">idata<pos:position pos:line="40" pos:column="28"/></name><operator pos:line="40" pos:column="28">-&gt;<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="30">capabilities<pos:position pos:line="40" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="44">IMAP4REV1<pos:position pos:line="40" pos:column="53"/></name></expr></argument>)<pos:position pos:line="40" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="55"/></condition><then pos:line="40" pos:column="55">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="5">snprintf<pos:position pos:line="41" pos:column="13"/></name> <argument_list pos:line="41" pos:column="14">(<argument><expr><name pos:line="41" pos:column="15">buf<pos:position pos:line="41" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="20">sizeof <argument_list pos:line="41" pos:column="27">(<argument><expr><name pos:line="41" pos:column="28">buf<pos:position pos:line="41" pos:column="31"/></name></expr></argument>)<pos:position pos:line="41" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="34">"STATUS %s (UIDVALIDITY)"<pos:position pos:line="41" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="61">mbox<pos:position pos:line="41" pos:column="65"/></name></expr></argument>)<pos:position pos:line="41" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="67"/></expr_stmt></block></then>
  <elseif pos:line="42" pos:column="3">else <if pos:line="42" pos:column="8">if <condition pos:line="42" pos:column="11">(<expr><call><name pos:line="42" pos:column="12">mutt_bit_isset<pos:position pos:line="42" pos:column="26"/></name> <argument_list pos:line="42" pos:column="27">(<argument><expr><name><name pos:line="42" pos:column="28">idata<pos:position pos:line="42" pos:column="33"/></name><operator pos:line="42" pos:column="33">-&gt;<pos:position pos:line="42" pos:column="38"/></operator><name pos:line="42" pos:column="35">capabilities<pos:position pos:line="42" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="49">STATUS<pos:position pos:line="42" pos:column="55"/></name></expr></argument>)<pos:position pos:line="42" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="57"/></condition><then pos:line="42" pos:column="57">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="5">snprintf<pos:position pos:line="43" pos:column="13"/></name> <argument_list pos:line="43" pos:column="14">(<argument><expr><name pos:line="43" pos:column="15">buf<pos:position pos:line="43" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="20">sizeof <argument_list pos:line="43" pos:column="27">(<argument><expr><name pos:line="43" pos:column="28">buf<pos:position pos:line="43" pos:column="31"/></name></expr></argument>)<pos:position pos:line="43" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="34">"STATUS %s (UID-VALIDITY)"<pos:position pos:line="43" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="62">mbox<pos:position pos:line="43" pos:column="66"/></name></expr></argument>)<pos:position pos:line="43" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="68"/></expr_stmt></block></then></if></elseif>
  <else pos:line="44" pos:column="3">else
  <block pos:line="45" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">dprint<pos:position pos:line="46" pos:column="11"/></name> <argument_list pos:line="46" pos:column="12">(<argument><expr><literal type="number" pos:line="46" pos:column="13">2<pos:position pos:line="46" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="46" pos:column="16">(<pos:position pos:line="46" pos:column="17"/></operator><name pos:line="46" pos:column="17">debugfile<pos:position pos:line="46" pos:column="26"/></name><operator pos:line="46" pos:column="26">,<pos:position pos:line="46" pos:column="27"/></operator> <literal type="string" pos:line="46" pos:column="28">"imap_access: STATUS not supported?\n"<pos:position pos:line="46" pos:column="66"/></literal><operator pos:line="46" pos:column="66">)<pos:position pos:line="46" pos:column="67"/></operator></expr></argument>)<pos:position pos:line="46" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="69"/></expr_stmt>
    <return pos:line="47" pos:column="5">return <expr><operator pos:line="47" pos:column="12">-<pos:position pos:line="47" pos:column="13"/></operator><literal type="number" pos:line="47" pos:column="13">1<pos:position pos:line="47" pos:column="14"/></literal></expr>;<pos:position pos:line="47" pos:column="15"/></return>
  }<pos:position pos:line="48" pos:column="4"/></block></else></if>

  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><operator pos:line="50" pos:column="7">(<pos:position pos:line="50" pos:column="8"/></operator><name pos:line="50" pos:column="8">rc<pos:position pos:line="50" pos:column="10"/></name> <operator pos:line="50" pos:column="11">=<pos:position pos:line="50" pos:column="12"/></operator> <call><name pos:line="50" pos:column="13">imap_exec<pos:position pos:line="50" pos:column="22"/></name> <argument_list pos:line="50" pos:column="23">(<argument><expr><name pos:line="50" pos:column="24">idata<pos:position pos:line="50" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="31">buf<pos:position pos:line="50" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="36">IMAP_CMD_FAIL_OK<pos:position pos:line="50" pos:column="52"/></name></expr></argument>)<pos:position pos:line="50" pos:column="53"/></argument_list></call><operator pos:line="50" pos:column="53">)<pos:position pos:line="50" pos:column="54"/></operator> <operator pos:line="50" pos:column="55">&lt;<pos:position pos:line="50" pos:column="59"/></operator> <literal type="number" pos:line="50" pos:column="57">0<pos:position pos:line="50" pos:column="58"/></literal></expr>)<pos:position pos:line="50" pos:column="59"/></condition><then pos:line="50" pos:column="59">
  <block pos:line="51" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">dprint<pos:position pos:line="52" pos:column="11"/></name> <argument_list pos:line="52" pos:column="12">(<argument><expr><literal type="number" pos:line="52" pos:column="13">1<pos:position pos:line="52" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="52" pos:column="16">(<pos:position pos:line="52" pos:column="17"/></operator><name pos:line="52" pos:column="17">debugfile<pos:position pos:line="52" pos:column="26"/></name><operator pos:line="52" pos:column="26">,<pos:position pos:line="52" pos:column="27"/></operator> <literal type="string" pos:line="52" pos:column="28">"imap_access: Can't check STATUS of %s\n"<pos:position pos:line="52" pos:column="69"/></literal><operator pos:line="52" pos:column="69">,<pos:position pos:line="52" pos:column="70"/></operator> <name pos:line="52" pos:column="71">mbox<pos:position pos:line="52" pos:column="75"/></name><operator pos:line="52" pos:column="75">)<pos:position pos:line="52" pos:column="76"/></operator></expr></argument>)<pos:position pos:line="52" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="78"/></expr_stmt>
    <return pos:line="53" pos:column="5">return <expr><name pos:line="53" pos:column="12">rc<pos:position pos:line="53" pos:column="14"/></name></expr>;<pos:position pos:line="53" pos:column="15"/></return>
  }<pos:position pos:line="54" pos:column="4"/></block></then></if>

  <return pos:line="56" pos:column="3">return <expr><literal type="number" pos:line="56" pos:column="10">0<pos:position pos:line="56" pos:column="11"/></literal></expr>;<pos:position pos:line="56" pos:column="12"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

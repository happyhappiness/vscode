<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_978_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mix_check_message<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">HEADER<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">msg<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">fqdn<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">short<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">need_hostname<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><literal type="number" pos:line="4" pos:column="25">0<pos:position pos:line="4" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">ADDRESS<pos:position pos:line="5" pos:column="10"/></name> <modifier pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></modifier></type><name pos:line="5" pos:column="12">p<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name><name pos:line="7" pos:column="7">msg<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">env<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">cc<pos:position pos:line="7" pos:column="19"/></name></name> <operator pos:line="7" pos:column="20">||<pos:position pos:line="7" pos:column="22"/></operator> <name><name pos:line="7" pos:column="23">msg<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">env<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">-&gt;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="33">bcc<pos:position pos:line="7" pos:column="36"/></name></name></expr>)<pos:position pos:line="7" pos:column="37"/></condition><then pos:line="7" pos:column="37">
  <block pos:line="8" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">mutt_error<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">_<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">(<argument><expr><literal type="string" pos:line="9" pos:column="18">"Mixmaster doesn't accept Cc or Bcc headers."<pos:position pos:line="9" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="64"/></argument_list></decl>;<pos:position pos:line="9" pos:column="65"/></decl_stmt>
    <return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">-<pos:position pos:line="10" pos:column="13"/></operator><literal type="number" pos:line="10" pos:column="13">1<pos:position pos:line="10" pos:column="14"/></literal></expr>;<pos:position pos:line="10" pos:column="15"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="13" pos:column="3">/* When using mixmaster, we MUST qualify any addresses since
   * the message will be delivered through remote systems.
   * 
   * use_domain won't be respected at this point, hidden_host will.
   */</comment>

  <for pos:line="19" pos:column="3">for <control pos:line="19" pos:column="7">(<init><expr><name pos:line="19" pos:column="8">p<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <name><name pos:line="19" pos:column="12">msg<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">-&gt;<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="17">env<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">-&gt;<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="22">to<pos:position pos:line="19" pos:column="24"/></name></name></expr>;<pos:position pos:line="19" pos:column="25"/></init> <condition><expr><name pos:line="19" pos:column="26">p<pos:position pos:line="19" pos:column="27"/></name></expr>;<pos:position pos:line="19" pos:column="28"/></condition> <incr><expr><name pos:line="19" pos:column="29">p<pos:position pos:line="19" pos:column="30"/></name> <operator pos:line="19" pos:column="31">=<pos:position pos:line="19" pos:column="32"/></operator> <name><name pos:line="19" pos:column="33">p<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">-&gt;<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="36">next<pos:position pos:line="19" pos:column="40"/></name></name></expr></incr>)<pos:position pos:line="19" pos:column="41"/></control>
  <block pos:line="20" pos:column="3">{
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">!<pos:position pos:line="21" pos:column="10"/></operator><name><name pos:line="21" pos:column="10">p<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">group<pos:position pos:line="21" pos:column="18"/></name></name> <operator pos:line="21" pos:column="19">&amp;&amp;<pos:position pos:line="21" pos:column="29"/></operator> <call><name pos:line="21" pos:column="22">strchr<pos:position pos:line="21" pos:column="28"/></name> <argument_list pos:line="21" pos:column="29">(<argument><expr><name><name pos:line="21" pos:column="30">p<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">-&gt;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="33">mailbox<pos:position pos:line="21" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="21" pos:column="42">'@'<pos:position pos:line="21" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call> <operator pos:line="21" pos:column="47">==<pos:position pos:line="21" pos:column="49"/></operator> <name pos:line="21" pos:column="50">NULL<pos:position pos:line="21" pos:column="54"/></name></expr>)<pos:position pos:line="21" pos:column="55"/></condition><then pos:line="21" pos:column="55">
    <block pos:line="22" pos:column="5">{
      <expr_stmt><expr><name pos:line="23" pos:column="7">need_hostname<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <literal type="number" pos:line="23" pos:column="23">1<pos:position pos:line="23" pos:column="24"/></literal></expr>;<pos:position pos:line="23" pos:column="25"/></expr_stmt>
      <break pos:line="24" pos:column="7">break;<pos:position pos:line="24" pos:column="13"/></break>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
  }<pos:position pos:line="26" pos:column="4"/></block></for>
    
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">need_hostname<pos:position pos:line="28" pos:column="20"/></name></expr>)<pos:position pos:line="28" pos:column="21"/></condition><then pos:line="28" pos:column="21">
  <block pos:line="29" pos:column="3">{
    
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><operator pos:line="31" pos:column="9">!<pos:position pos:line="31" pos:column="10"/></operator><operator pos:line="31" pos:column="10">(<pos:position pos:line="31" pos:column="11"/></operator><name pos:line="31" pos:column="11">fqdn<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <call><name pos:line="31" pos:column="18">mutt_fqdn<pos:position pos:line="31" pos:column="27"/></name> <argument_list pos:line="31" pos:column="28">(<argument><expr><literal type="number" pos:line="31" pos:column="29">1<pos:position pos:line="31" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="31"/></argument_list></call><operator pos:line="31" pos:column="31">)<pos:position pos:line="31" pos:column="32"/></operator></expr>)<pos:position pos:line="31" pos:column="33"/></condition><then pos:line="31" pos:column="33">
    <block pos:line="32" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="33" pos:column="7">mutt_error<pos:position pos:line="33" pos:column="17"/></name></type> <name pos:line="33" pos:column="18">_<pos:position pos:line="33" pos:column="19"/></name><argument_list pos:line="33" pos:column="19">(<argument><expr><literal type="string" pos:line="33" pos:column="20">"Please set the hostname variable to a proper value when using mixmaster!"<pos:position pos:line="33" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="95"/></argument_list></decl>;<pos:position pos:line="33" pos:column="96"/></decl_stmt>
      <return pos:line="34" pos:column="7">return <expr><operator pos:line="34" pos:column="14">(<pos:position pos:line="34" pos:column="15"/></operator><operator pos:line="34" pos:column="15">-<pos:position pos:line="34" pos:column="16"/></operator><literal type="number" pos:line="34" pos:column="16">1<pos:position pos:line="34" pos:column="17"/></literal><operator pos:line="34" pos:column="17">)<pos:position pos:line="34" pos:column="18"/></operator></expr>;<pos:position pos:line="34" pos:column="19"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
  
    <comment type="block" pos:line="37" pos:column="5">/* Cc and Bcc are empty at this point. */</comment>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">rfc822_qualify<pos:position pos:line="38" pos:column="19"/></name> <argument_list pos:line="38" pos:column="20">(<argument><expr><name><name pos:line="38" pos:column="21">msg<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">-&gt;<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="26">env<pos:position pos:line="38" pos:column="29"/></name><operator pos:line="38" pos:column="29">-&gt;<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="31">to<pos:position pos:line="38" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="35">fqdn<pos:position pos:line="38" pos:column="39"/></name></expr></argument>)<pos:position pos:line="38" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">rfc822_qualify<pos:position pos:line="39" pos:column="19"/></name> <argument_list pos:line="39" pos:column="20">(<argument><expr><name><name pos:line="39" pos:column="21">msg<pos:position pos:line="39" pos:column="24"/></name><operator pos:line="39" pos:column="24">-&gt;<pos:position pos:line="39" pos:column="29"/></operator><name pos:line="39" pos:column="26">env<pos:position pos:line="39" pos:column="29"/></name><operator pos:line="39" pos:column="29">-&gt;<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="31">reply_to<pos:position pos:line="39" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="41">fqdn<pos:position pos:line="39" pos:column="45"/></name></expr></argument>)<pos:position pos:line="39" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">rfc822_qualify<pos:position pos:line="40" pos:column="19"/></name> <argument_list pos:line="40" pos:column="20">(<argument><expr><name><name pos:line="40" pos:column="21">msg<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">-&gt;<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="26">env<pos:position pos:line="40" pos:column="29"/></name><operator pos:line="40" pos:column="29">-&gt;<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="31">mail_followup_to<pos:position pos:line="40" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="49">fqdn<pos:position pos:line="40" pos:column="53"/></name></expr></argument>)<pos:position pos:line="40" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="55"/></expr_stmt>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>

  <return pos:line="43" pos:column="3">return <expr><literal type="number" pos:line="43" pos:column="10">0<pos:position pos:line="43" pos:column="11"/></literal></expr>;<pos:position pos:line="43" pos:column="12"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

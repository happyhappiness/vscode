<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1616_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">dotlock_unlock<pos:position pos:line="2" pos:column="15"/></name> <parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">realpath<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">lockfile<pos:position pos:line="4" pos:column="16"/></name><index pos:line="4" pos:column="16">[<expr><name pos:line="4" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="4" pos:column="32"/></name> <operator pos:line="4" pos:column="33">+<pos:position pos:line="4" pos:column="34"/></operator> <name pos:line="4" pos:column="35">LONG_STRING<pos:position pos:line="4" pos:column="46"/></name></expr>]<pos:position pos:line="4" pos:column="47"/></index></name></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name></decl>;<pos:position pos:line="5" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">snprintf<pos:position pos:line="7" pos:column="11"/></name> <argument_list pos:line="7" pos:column="12">(<argument><expr><name pos:line="7" pos:column="13">lockfile<pos:position pos:line="7" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="23">sizeof <argument_list pos:line="7" pos:column="30">(<argument><expr><name pos:line="7" pos:column="31">lockfile<pos:position pos:line="7" pos:column="39"/></name></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="42">"%s.lock"<pos:position pos:line="7" pos:column="51"/></literal></expr></argument>,
	   <argument><expr><name pos:line="8" pos:column="12">realpath<pos:position pos:line="8" pos:column="20"/></name></expr></argument>)<pos:position pos:line="8" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>
  
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">BEGIN_PRIVILEGED<pos:position pos:line="10" pos:column="19"/></name> <argument_list pos:line="10" pos:column="20">()<pos:position pos:line="10" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name pos:line="11" pos:column="3">i<pos:position pos:line="11" pos:column="4"/></name> <operator pos:line="11" pos:column="5">=<pos:position pos:line="11" pos:column="6"/></operator> <call><name pos:line="11" pos:column="7">unlink<pos:position pos:line="11" pos:column="13"/></name> <argument_list pos:line="11" pos:column="14">(<argument><expr><name pos:line="11" pos:column="15">lockfile<pos:position pos:line="11" pos:column="23"/></name></expr></argument>)<pos:position pos:line="11" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">END_PRIVILEGED<pos:position pos:line="12" pos:column="17"/></name> <argument_list pos:line="12" pos:column="18">()<pos:position pos:line="12" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>
  
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">i<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">==<pos:position pos:line="14" pos:column="11"/></operator> <operator pos:line="14" pos:column="12">-<pos:position pos:line="14" pos:column="13"/></operator><literal type="number" pos:line="14" pos:column="13">1<pos:position pos:line="14" pos:column="14"/></literal></expr>)<pos:position pos:line="14" pos:column="15"/></condition><then pos:line="14" pos:column="15">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">DL_EX_ERROR<pos:position pos:line="15" pos:column="23"/></name></expr>;<pos:position pos:line="15" pos:column="24"/></return></block></then></if>
  
  <return pos:line="17" pos:column="3">return <expr><name pos:line="17" pos:column="10">DL_EX_OK<pos:position pos:line="17" pos:column="18"/></name></expr>;<pos:position pos:line="17" pos:column="19"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1959_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">set_binding_values<pos:position pos:line="2" pos:column="19"/></name> <argument_list pos:line="2" pos:column="20">(<argument><expr><name pos:line="2" pos:column="21">domainname<pos:position pos:line="2" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="33">dirnamep<pos:position pos:line="2" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="43">codesetp<pos:position pos:line="2" pos:column="51"/></name></expr></argument>)<pos:position pos:line="2" pos:column="52"/></argument_list>
     const <name pos:line="3" pos:column="12">char<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier><name pos:line="3" pos:column="18">domainname<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="4" pos:column="6">const<pos:position pos:line="4" pos:column="11"/></specifier> <name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier><modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">dirnamep<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="5" pos:column="6">const<pos:position pos:line="5" pos:column="11"/></specifier> <name pos:line="5" pos:column="12">char<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier><modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">codesetp<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">binding<pos:position pos:line="7" pos:column="17"/></name></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">binding<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">modified<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* Some sanity checks.  */</comment>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">domainname<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">==<pos:position pos:line="11" pos:column="20"/></operator> <name pos:line="11" pos:column="21">NULL<pos:position pos:line="11" pos:column="25"/></name> <operator pos:line="11" pos:column="26">||<pos:position pos:line="11" pos:column="28"/></operator> <name><name pos:line="11" pos:column="29">domainname<pos:position pos:line="11" pos:column="39"/></name><index pos:line="11" pos:column="39">[<expr><literal type="number" pos:line="11" pos:column="40">0<pos:position pos:line="11" pos:column="41"/></literal></expr>]<pos:position pos:line="11" pos:column="42"/></index></name> <operator pos:line="11" pos:column="43">==<pos:position pos:line="11" pos:column="45"/></operator> <literal type="char" pos:line="11" pos:column="46">'\0'<pos:position pos:line="11" pos:column="50"/></literal></expr>)<pos:position pos:line="11" pos:column="51"/></condition><then pos:line="11" pos:column="51">
    <block pos:line="12" pos:column="5">{
      <if pos:line="13" pos:column="7">if <condition pos:line="13" pos:column="10">(<expr><name pos:line="13" pos:column="11">dirnamep<pos:position pos:line="13" pos:column="19"/></name></expr>)<pos:position pos:line="13" pos:column="20"/></condition><then pos:line="13" pos:column="20">
	<block type="pseudo"><expr_stmt><expr><operator pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">dirnamep<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <name pos:line="14" pos:column="21">NULL<pos:position pos:line="14" pos:column="25"/></name></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt></block></then></if>
      <if pos:line="15" pos:column="7">if <condition pos:line="15" pos:column="10">(<expr><name pos:line="15" pos:column="11">codesetp<pos:position pos:line="15" pos:column="19"/></name></expr>)<pos:position pos:line="15" pos:column="20"/></condition><then pos:line="15" pos:column="20">
	<block type="pseudo"><expr_stmt><expr><operator pos:line="16" pos:column="9">*<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">codesetp<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <name pos:line="16" pos:column="21">NULL<pos:position pos:line="16" pos:column="25"/></name></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt></block></then></if>
      <return pos:line="17" pos:column="7">return;<pos:position pos:line="17" pos:column="14"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">__libc_rwlock_wrlock<pos:position pos:line="20" pos:column="23"/></name> <argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">_nl_state_lock<pos:position pos:line="20" pos:column="39"/></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>

  <expr_stmt><expr><name pos:line="22" pos:column="3">modified<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <literal type="number" pos:line="22" pos:column="14">0<pos:position pos:line="22" pos:column="15"/></literal></expr>;<pos:position pos:line="22" pos:column="16"/></expr_stmt>

  <for pos:line="24" pos:column="3">for <control pos:line="24" pos:column="7">(<init><expr><name pos:line="24" pos:column="8">binding<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <name pos:line="24" pos:column="18">_nl_domain_bindings<pos:position pos:line="24" pos:column="37"/></name></expr>;<pos:position pos:line="24" pos:column="38"/></init> <condition><expr><name pos:line="24" pos:column="39">binding<pos:position pos:line="24" pos:column="46"/></name> <operator pos:line="24" pos:column="47">!=<pos:position pos:line="24" pos:column="49"/></operator> <name pos:line="24" pos:column="50">NULL<pos:position pos:line="24" pos:column="54"/></name></expr>;<pos:position pos:line="24" pos:column="55"/></condition> <incr><expr><name pos:line="24" pos:column="56">binding<pos:position pos:line="24" pos:column="63"/></name> <operator pos:line="24" pos:column="64">=<pos:position pos:line="24" pos:column="65"/></operator> <name><name pos:line="24" pos:column="66">binding<pos:position pos:line="24" pos:column="73"/></name><operator pos:line="24" pos:column="73">-&gt;<pos:position pos:line="24" pos:column="78"/></operator><name pos:line="24" pos:column="75">next<pos:position pos:line="24" pos:column="79"/></name></name></expr></incr>)<pos:position pos:line="24" pos:column="80"/></control>
    <block pos:line="25" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="26" pos:column="7">int<pos:position pos:line="26" pos:column="10"/></name></type> <name pos:line="26" pos:column="11">compare<pos:position pos:line="26" pos:column="18"/></name> <init pos:line="26" pos:column="19">= <expr><call><name pos:line="26" pos:column="21">strcmp<pos:position pos:line="26" pos:column="27"/></name> <argument_list pos:line="26" pos:column="28">(<argument><expr><name pos:line="26" pos:column="29">domainname<pos:position pos:line="26" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="41">binding<pos:position pos:line="26" pos:column="48"/></name><operator pos:line="26" pos:column="48">-&gt;<pos:position pos:line="26" pos:column="53"/></operator><name pos:line="26" pos:column="50">domainname<pos:position pos:line="26" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="62"/></decl_stmt>
      <if pos:line="27" pos:column="7">if <condition pos:line="27" pos:column="10">(<expr><name pos:line="27" pos:column="11">compare<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">==<pos:position pos:line="27" pos:column="21"/></operator> <literal type="number" pos:line="27" pos:column="22">0<pos:position pos:line="27" pos:column="23"/></literal></expr>)<pos:position pos:line="27" pos:column="24"/></condition><then pos:line="27" pos:column="24">
	<comment type="block" pos:line="28" pos:column="9">/* We found it!  */</comment>
	<block type="pseudo"><break pos:line="29" pos:column="9">break;<pos:position pos:line="29" pos:column="15"/></break></block></then></if>
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><name pos:line="30" pos:column="11">compare<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">&lt;<pos:position pos:line="30" pos:column="23"/></operator> <literal type="number" pos:line="30" pos:column="21">0<pos:position pos:line="30" pos:column="22"/></literal></expr>)<pos:position pos:line="30" pos:column="23"/></condition><then pos:line="30" pos:column="23">
	<block pos:line="31" pos:column="9">{
	  <comment type="block" pos:line="32" pos:column="11">/* It is not in the list.  */</comment>
	  <expr_stmt><expr><name pos:line="33" pos:column="11">binding<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">=<pos:position pos:line="33" pos:column="20"/></operator> <name pos:line="33" pos:column="21">NULL<pos:position pos:line="33" pos:column="25"/></name></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt>
	  <break pos:line="34" pos:column="11">break;<pos:position pos:line="34" pos:column="17"/></break>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if>
    }<pos:position pos:line="36" pos:column="6"/></block></for>

  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><name pos:line="38" pos:column="7">binding<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">!=<pos:position pos:line="38" pos:column="17"/></operator> <name pos:line="38" pos:column="18">NULL<pos:position pos:line="38" pos:column="22"/></name></expr>)<pos:position pos:line="38" pos:column="23"/></condition><then pos:line="38" pos:column="23">
    <block pos:line="39" pos:column="5">{
      <if pos:line="40" pos:column="7">if <condition pos:line="40" pos:column="10">(<expr><name pos:line="40" pos:column="11">dirnamep<pos:position pos:line="40" pos:column="19"/></name></expr>)<pos:position pos:line="40" pos:column="20"/></condition><then pos:line="40" pos:column="20">
	<block pos:line="41" pos:column="9">{
	  <decl_stmt><decl><type><specifier pos:line="42" pos:column="11">const<pos:position pos:line="42" pos:column="16"/></specifier> <name pos:line="42" pos:column="17">char<pos:position pos:line="42" pos:column="21"/></name> <modifier pos:line="42" pos:column="22">*<pos:position pos:line="42" pos:column="23"/></modifier></type><name pos:line="42" pos:column="23">dirname<pos:position pos:line="42" pos:column="30"/></name> <init pos:line="42" pos:column="31">= <expr><operator pos:line="42" pos:column="33">*<pos:position pos:line="42" pos:column="34"/></operator><name pos:line="42" pos:column="34">dirnamep<pos:position pos:line="42" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="42" pos:column="43"/></decl_stmt>

	  <if pos:line="44" pos:column="11">if <condition pos:line="44" pos:column="14">(<expr><name pos:line="44" pos:column="15">dirname<pos:position pos:line="44" pos:column="22"/></name> <operator pos:line="44" pos:column="23">==<pos:position pos:line="44" pos:column="25"/></operator> <name pos:line="44" pos:column="26">NULL<pos:position pos:line="44" pos:column="30"/></name></expr>)<pos:position pos:line="44" pos:column="31"/></condition><then pos:line="44" pos:column="31">
	    <comment type="block" pos:line="45" pos:column="13">/* The current binding has be to returned.  */</comment>
	    <block type="pseudo"><expr_stmt><expr><operator pos:line="46" pos:column="13">*<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">dirnamep<pos:position pos:line="46" pos:column="22"/></name> <operator pos:line="46" pos:column="23">=<pos:position pos:line="46" pos:column="24"/></operator> <name><name pos:line="46" pos:column="25">binding<pos:position pos:line="46" pos:column="32"/></name><operator pos:line="46" pos:column="32">-&gt;<pos:position pos:line="46" pos:column="37"/></operator><name pos:line="46" pos:column="34">dirname<pos:position pos:line="46" pos:column="41"/></name></name></expr>;<pos:position pos:line="46" pos:column="42"/></expr_stmt></block></then>
	  <else pos:line="47" pos:column="11">else
	    <block pos:line="48" pos:column="13">{
	      <comment type="block" pos:line="49" pos:column="15">/* The domain is already bound.  If the new value and the old
		 one are equal we simply do nothing.  Otherwise replace the
		 old binding.  */</comment>
	      <decl_stmt><decl><type><name pos:line="52" pos:column="15">char<pos:position pos:line="52" pos:column="19"/></name> <modifier pos:line="52" pos:column="20">*<pos:position pos:line="52" pos:column="21"/></modifier></type><name pos:line="52" pos:column="21">result<pos:position pos:line="52" pos:column="27"/></name> <init pos:line="52" pos:column="28">= <expr><name><name pos:line="52" pos:column="30">binding<pos:position pos:line="52" pos:column="37"/></name><operator pos:line="52" pos:column="37">-&gt;<pos:position pos:line="52" pos:column="42"/></operator><name pos:line="52" pos:column="39">dirname<pos:position pos:line="52" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="52" pos:column="47"/></decl_stmt>
	      <if pos:line="53" pos:column="15">if <condition pos:line="53" pos:column="18">(<expr><call><name pos:line="53" pos:column="19">strcmp<pos:position pos:line="53" pos:column="25"/></name> <argument_list pos:line="53" pos:column="26">(<argument><expr><name pos:line="53" pos:column="27">dirname<pos:position pos:line="53" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="36">result<pos:position pos:line="53" pos:column="42"/></name></expr></argument>)<pos:position pos:line="53" pos:column="43"/></argument_list></call> <operator pos:line="53" pos:column="44">!=<pos:position pos:line="53" pos:column="46"/></operator> <literal type="number" pos:line="53" pos:column="47">0<pos:position pos:line="53" pos:column="48"/></literal></expr>)<pos:position pos:line="53" pos:column="49"/></condition><then pos:line="53" pos:column="49">
		<block pos:line="54" pos:column="17">{
		  <if pos:line="55" pos:column="19">if <condition pos:line="55" pos:column="22">(<expr><call><name pos:line="55" pos:column="23">strcmp<pos:position pos:line="55" pos:column="29"/></name> <argument_list pos:line="55" pos:column="30">(<argument><expr><name pos:line="55" pos:column="31">dirname<pos:position pos:line="55" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="40">_nl_default_dirname<pos:position pos:line="55" pos:column="59"/></name></expr></argument>)<pos:position pos:line="55" pos:column="60"/></argument_list></call> <operator pos:line="55" pos:column="61">==<pos:position pos:line="55" pos:column="63"/></operator> <literal type="number" pos:line="55" pos:column="64">0<pos:position pos:line="55" pos:column="65"/></literal></expr>)<pos:position pos:line="55" pos:column="66"/></condition><then pos:line="55" pos:column="66">
		    <block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="21">result<pos:position pos:line="56" pos:column="27"/></name> <operator pos:line="56" pos:column="28">=<pos:position pos:line="56" pos:column="29"/></operator> <operator pos:line="56" pos:column="30">(<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="31">char<pos:position pos:line="56" pos:column="35"/></name> <operator pos:line="56" pos:column="36">*<pos:position pos:line="56" pos:column="37"/></operator><operator pos:line="56" pos:column="37">)<pos:position pos:line="56" pos:column="38"/></operator> <name pos:line="56" pos:column="39">_nl_default_dirname<pos:position pos:line="56" pos:column="58"/></name></expr>;<pos:position pos:line="56" pos:column="59"/></expr_stmt></block></then>
		  <else pos:line="57" pos:column="19">else
		    <block pos:line="58" pos:column="21">{
<cpp:if pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">if<pos:position pos:line="59" pos:column="4"/></cpp:directive> <expr><name pos:line="59" pos:column="5">defined<pos:position pos:line="59" pos:column="12"/></name> <name pos:line="59" pos:column="13">_LIBC<pos:position pos:line="59" pos:column="18"/></name> <operator pos:line="59" pos:column="19">||<pos:position pos:line="59" pos:column="21"/></operator> <name pos:line="59" pos:column="22">defined<pos:position pos:line="59" pos:column="29"/></name> <name pos:line="59" pos:column="30">HAVE_STRDUP<pos:position pos:line="59" pos:column="41"/></name></expr></cpp:if>
		      <expr_stmt><expr><name pos:line="60" pos:column="23">result<pos:position pos:line="60" pos:column="29"/></name> <operator pos:line="60" pos:column="30">=<pos:position pos:line="60" pos:column="31"/></operator> <call><name pos:line="60" pos:column="32">strdup<pos:position pos:line="60" pos:column="38"/></name> <argument_list pos:line="60" pos:column="39">(<argument><expr><name pos:line="60" pos:column="40">dirname<pos:position pos:line="60" pos:column="47"/></name></expr></argument>)<pos:position pos:line="60" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="49"/></expr_stmt>
<cpp:else pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">else<pos:position pos:line="61" pos:column="6"/></cpp:directive></cpp:else>
		      <decl_stmt><decl><type><name pos:line="62" pos:column="23">size_t<pos:position pos:line="62" pos:column="29"/></name></type> <name pos:line="62" pos:column="30">len<pos:position pos:line="62" pos:column="33"/></name> <init pos:line="62" pos:column="34">= <expr><call><name pos:line="62" pos:column="36">strlen<pos:position pos:line="62" pos:column="42"/></name> <argument_list pos:line="62" pos:column="43">(<argument><expr><name pos:line="62" pos:column="44">dirname<pos:position pos:line="62" pos:column="51"/></name></expr></argument>)<pos:position pos:line="62" pos:column="52"/></argument_list></call> <operator pos:line="62" pos:column="53">+<pos:position pos:line="62" pos:column="54"/></operator> <literal type="number" pos:line="62" pos:column="55">1<pos:position pos:line="62" pos:column="56"/></literal></expr></init></decl>;<pos:position pos:line="62" pos:column="57"/></decl_stmt>
		      <expr_stmt><expr><name pos:line="63" pos:column="23">result<pos:position pos:line="63" pos:column="29"/></name> <operator pos:line="63" pos:column="30">=<pos:position pos:line="63" pos:column="31"/></operator> <operator pos:line="63" pos:column="32">(<pos:position pos:line="63" pos:column="33"/></operator><name pos:line="63" pos:column="33">char<pos:position pos:line="63" pos:column="37"/></name> <operator pos:line="63" pos:column="38">*<pos:position pos:line="63" pos:column="39"/></operator><operator pos:line="63" pos:column="39">)<pos:position pos:line="63" pos:column="40"/></operator> <call><name pos:line="63" pos:column="41">malloc<pos:position pos:line="63" pos:column="47"/></name> <argument_list pos:line="63" pos:column="48">(<argument><expr><name pos:line="63" pos:column="49">len<pos:position pos:line="63" pos:column="52"/></name></expr></argument>)<pos:position pos:line="63" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="54"/></expr_stmt>
		      <if pos:line="64" pos:column="23">if <condition pos:line="64" pos:column="26">(<expr><call><name pos:line="64" pos:column="27">__builtin_expect<pos:position pos:line="64" pos:column="43"/></name> <argument_list pos:line="64" pos:column="44">(<argument><expr><name pos:line="64" pos:column="45">result<pos:position pos:line="64" pos:column="51"/></name> <operator pos:line="64" pos:column="52">!=<pos:position pos:line="64" pos:column="54"/></operator> <name pos:line="64" pos:column="55">NULL<pos:position pos:line="64" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="61">1<pos:position pos:line="64" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="64"/></condition><then pos:line="64" pos:column="64">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="25">memcpy<pos:position pos:line="65" pos:column="31"/></name> <argument_list pos:line="65" pos:column="32">(<argument><expr><name pos:line="65" pos:column="33">result<pos:position pos:line="65" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="41">dirname<pos:position pos:line="65" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="50">len<pos:position pos:line="65" pos:column="53"/></name></expr></argument>)<pos:position pos:line="65" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="55"/></expr_stmt></block></then></if>
<cpp:endif pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">endif<pos:position pos:line="66" pos:column="7"/></cpp:directive></cpp:endif>
		    }<pos:position pos:line="67" pos:column="22"/></block></else></if>

		  <if pos:line="69" pos:column="19">if <condition pos:line="69" pos:column="22">(<expr><call><name pos:line="69" pos:column="23">__builtin_expect<pos:position pos:line="69" pos:column="39"/></name> <argument_list pos:line="69" pos:column="40">(<argument><expr><name pos:line="69" pos:column="41">result<pos:position pos:line="69" pos:column="47"/></name> <operator pos:line="69" pos:column="48">!=<pos:position pos:line="69" pos:column="50"/></operator> <name pos:line="69" pos:column="51">NULL<pos:position pos:line="69" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="57">1<pos:position pos:line="69" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="60"/></condition><then pos:line="69" pos:column="60">
		    <block pos:line="70" pos:column="21">{
		      <if pos:line="71" pos:column="23">if <condition pos:line="71" pos:column="26">(<expr><name><name pos:line="71" pos:column="27">binding<pos:position pos:line="71" pos:column="34"/></name><operator pos:line="71" pos:column="34">-&gt;<pos:position pos:line="71" pos:column="39"/></operator><name pos:line="71" pos:column="36">dirname<pos:position pos:line="71" pos:column="43"/></name></name> <operator pos:line="71" pos:column="44">!=<pos:position pos:line="71" pos:column="46"/></operator> <name pos:line="71" pos:column="47">_nl_default_dirname<pos:position pos:line="71" pos:column="66"/></name></expr>)<pos:position pos:line="71" pos:column="67"/></condition><then pos:line="71" pos:column="67">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="72" pos:column="25">free<pos:position pos:line="72" pos:column="29"/></name> <argument_list pos:line="72" pos:column="30">(<argument><expr><name><name pos:line="72" pos:column="31">binding<pos:position pos:line="72" pos:column="38"/></name><operator pos:line="72" pos:column="38">-&gt;<pos:position pos:line="72" pos:column="43"/></operator><name pos:line="72" pos:column="40">dirname<pos:position pos:line="72" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="49"/></expr_stmt></block></then></if>

		      <expr_stmt><expr><name><name pos:line="74" pos:column="23">binding<pos:position pos:line="74" pos:column="30"/></name><operator pos:line="74" pos:column="30">-&gt;<pos:position pos:line="74" pos:column="35"/></operator><name pos:line="74" pos:column="32">dirname<pos:position pos:line="74" pos:column="39"/></name></name> <operator pos:line="74" pos:column="40">=<pos:position pos:line="74" pos:column="41"/></operator> <name pos:line="74" pos:column="42">result<pos:position pos:line="74" pos:column="48"/></name></expr>;<pos:position pos:line="74" pos:column="49"/></expr_stmt>
		      <expr_stmt><expr><name pos:line="75" pos:column="23">modified<pos:position pos:line="75" pos:column="31"/></name> <operator pos:line="75" pos:column="32">=<pos:position pos:line="75" pos:column="33"/></operator> <literal type="number" pos:line="75" pos:column="34">1<pos:position pos:line="75" pos:column="35"/></literal></expr>;<pos:position pos:line="75" pos:column="36"/></expr_stmt>
		    }<pos:position pos:line="76" pos:column="22"/></block></then></if>
		}<pos:position pos:line="77" pos:column="18"/></block></then></if>
	      <expr_stmt><expr><operator pos:line="78" pos:column="15">*<pos:position pos:line="78" pos:column="16"/></operator><name pos:line="78" pos:column="16">dirnamep<pos:position pos:line="78" pos:column="24"/></name> <operator pos:line="78" pos:column="25">=<pos:position pos:line="78" pos:column="26"/></operator> <name pos:line="78" pos:column="27">result<pos:position pos:line="78" pos:column="33"/></name></expr>;<pos:position pos:line="78" pos:column="34"/></expr_stmt>
	    }<pos:position pos:line="79" pos:column="14"/></block></else></if>
	}<pos:position pos:line="80" pos:column="10"/></block></then></if>

      <if pos:line="82" pos:column="7">if <condition pos:line="82" pos:column="10">(<expr><name pos:line="82" pos:column="11">codesetp<pos:position pos:line="82" pos:column="19"/></name></expr>)<pos:position pos:line="82" pos:column="20"/></condition><then pos:line="82" pos:column="20">
	<block pos:line="83" pos:column="9">{
	  <decl_stmt><decl><type><specifier pos:line="84" pos:column="11">const<pos:position pos:line="84" pos:column="16"/></specifier> <name pos:line="84" pos:column="17">char<pos:position pos:line="84" pos:column="21"/></name> <modifier pos:line="84" pos:column="22">*<pos:position pos:line="84" pos:column="23"/></modifier></type><name pos:line="84" pos:column="23">codeset<pos:position pos:line="84" pos:column="30"/></name> <init pos:line="84" pos:column="31">= <expr><operator pos:line="84" pos:column="33">*<pos:position pos:line="84" pos:column="34"/></operator><name pos:line="84" pos:column="34">codesetp<pos:position pos:line="84" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="84" pos:column="43"/></decl_stmt>

	  <if pos:line="86" pos:column="11">if <condition pos:line="86" pos:column="14">(<expr><name pos:line="86" pos:column="15">codeset<pos:position pos:line="86" pos:column="22"/></name> <operator pos:line="86" pos:column="23">==<pos:position pos:line="86" pos:column="25"/></operator> <name pos:line="86" pos:column="26">NULL<pos:position pos:line="86" pos:column="30"/></name></expr>)<pos:position pos:line="86" pos:column="31"/></condition><then pos:line="86" pos:column="31">
	    <comment type="block" pos:line="87" pos:column="13">/* The current binding has be to returned.  */</comment>
	    <block type="pseudo"><expr_stmt><expr><operator pos:line="88" pos:column="13">*<pos:position pos:line="88" pos:column="14"/></operator><name pos:line="88" pos:column="14">codesetp<pos:position pos:line="88" pos:column="22"/></name> <operator pos:line="88" pos:column="23">=<pos:position pos:line="88" pos:column="24"/></operator> <name><name pos:line="88" pos:column="25">binding<pos:position pos:line="88" pos:column="32"/></name><operator pos:line="88" pos:column="32">-&gt;<pos:position pos:line="88" pos:column="37"/></operator><name pos:line="88" pos:column="34">codeset<pos:position pos:line="88" pos:column="41"/></name></name></expr>;<pos:position pos:line="88" pos:column="42"/></expr_stmt></block></then>
	  <else pos:line="89" pos:column="11">else
	    <block pos:line="90" pos:column="13">{
	      <comment type="block" pos:line="91" pos:column="15">/* The domain is already bound.  If the new value and the old
		 one are equal we simply do nothing.  Otherwise replace the
		 old binding.  */</comment>
	      <decl_stmt><decl><type><name pos:line="94" pos:column="15">char<pos:position pos:line="94" pos:column="19"/></name> <modifier pos:line="94" pos:column="20">*<pos:position pos:line="94" pos:column="21"/></modifier></type><name pos:line="94" pos:column="21">result<pos:position pos:line="94" pos:column="27"/></name> <init pos:line="94" pos:column="28">= <expr><name><name pos:line="94" pos:column="30">binding<pos:position pos:line="94" pos:column="37"/></name><operator pos:line="94" pos:column="37">-&gt;<pos:position pos:line="94" pos:column="42"/></operator><name pos:line="94" pos:column="39">codeset<pos:position pos:line="94" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="94" pos:column="47"/></decl_stmt>
	      <if pos:line="95" pos:column="15">if <condition pos:line="95" pos:column="18">(<expr><name pos:line="95" pos:column="19">result<pos:position pos:line="95" pos:column="25"/></name> <operator pos:line="95" pos:column="26">==<pos:position pos:line="95" pos:column="28"/></operator> <name pos:line="95" pos:column="29">NULL<pos:position pos:line="95" pos:column="33"/></name> <operator pos:line="95" pos:column="34">||<pos:position pos:line="95" pos:column="36"/></operator> <call><name pos:line="95" pos:column="37">strcmp<pos:position pos:line="95" pos:column="43"/></name> <argument_list pos:line="95" pos:column="44">(<argument><expr><name pos:line="95" pos:column="45">codeset<pos:position pos:line="95" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="54">result<pos:position pos:line="95" pos:column="60"/></name></expr></argument>)<pos:position pos:line="95" pos:column="61"/></argument_list></call> <operator pos:line="95" pos:column="62">!=<pos:position pos:line="95" pos:column="64"/></operator> <literal type="number" pos:line="95" pos:column="65">0<pos:position pos:line="95" pos:column="66"/></literal></expr>)<pos:position pos:line="95" pos:column="67"/></condition><then pos:line="95" pos:column="67">
		<block pos:line="96" pos:column="17">{
<cpp:if pos:line="97" pos:column="1">#<cpp:directive pos:line="97" pos:column="2">if<pos:position pos:line="97" pos:column="4"/></cpp:directive> <expr><name pos:line="97" pos:column="5">defined<pos:position pos:line="97" pos:column="12"/></name> <name pos:line="97" pos:column="13">_LIBC<pos:position pos:line="97" pos:column="18"/></name> <operator pos:line="97" pos:column="19">||<pos:position pos:line="97" pos:column="21"/></operator> <name pos:line="97" pos:column="22">defined<pos:position pos:line="97" pos:column="29"/></name> <name pos:line="97" pos:column="30">HAVE_STRDUP<pos:position pos:line="97" pos:column="41"/></name></expr></cpp:if>
		  <expr_stmt><expr><name pos:line="98" pos:column="19">result<pos:position pos:line="98" pos:column="25"/></name> <operator pos:line="98" pos:column="26">=<pos:position pos:line="98" pos:column="27"/></operator> <call><name pos:line="98" pos:column="28">strdup<pos:position pos:line="98" pos:column="34"/></name> <argument_list pos:line="98" pos:column="35">(<argument><expr><name pos:line="98" pos:column="36">codeset<pos:position pos:line="98" pos:column="43"/></name></expr></argument>)<pos:position pos:line="98" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="45"/></expr_stmt>
<cpp:else pos:line="99" pos:column="1">#<cpp:directive pos:line="99" pos:column="2">else<pos:position pos:line="99" pos:column="6"/></cpp:directive></cpp:else>
		  <decl_stmt><decl><type><name pos:line="100" pos:column="19">size_t<pos:position pos:line="100" pos:column="25"/></name></type> <name pos:line="100" pos:column="26">len<pos:position pos:line="100" pos:column="29"/></name> <init pos:line="100" pos:column="30">= <expr><call><name pos:line="100" pos:column="32">strlen<pos:position pos:line="100" pos:column="38"/></name> <argument_list pos:line="100" pos:column="39">(<argument><expr><name pos:line="100" pos:column="40">codeset<pos:position pos:line="100" pos:column="47"/></name></expr></argument>)<pos:position pos:line="100" pos:column="48"/></argument_list></call> <operator pos:line="100" pos:column="49">+<pos:position pos:line="100" pos:column="50"/></operator> <literal type="number" pos:line="100" pos:column="51">1<pos:position pos:line="100" pos:column="52"/></literal></expr></init></decl>;<pos:position pos:line="100" pos:column="53"/></decl_stmt>
		  <expr_stmt><expr><name pos:line="101" pos:column="19">result<pos:position pos:line="101" pos:column="25"/></name> <operator pos:line="101" pos:column="26">=<pos:position pos:line="101" pos:column="27"/></operator> <operator pos:line="101" pos:column="28">(<pos:position pos:line="101" pos:column="29"/></operator><name pos:line="101" pos:column="29">char<pos:position pos:line="101" pos:column="33"/></name> <operator pos:line="101" pos:column="34">*<pos:position pos:line="101" pos:column="35"/></operator><operator pos:line="101" pos:column="35">)<pos:position pos:line="101" pos:column="36"/></operator> <call><name pos:line="101" pos:column="37">malloc<pos:position pos:line="101" pos:column="43"/></name> <argument_list pos:line="101" pos:column="44">(<argument><expr><name pos:line="101" pos:column="45">len<pos:position pos:line="101" pos:column="48"/></name></expr></argument>)<pos:position pos:line="101" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="50"/></expr_stmt>
		  <if pos:line="102" pos:column="19">if <condition pos:line="102" pos:column="22">(<expr><call><name pos:line="102" pos:column="23">__builtin_expect<pos:position pos:line="102" pos:column="39"/></name> <argument_list pos:line="102" pos:column="40">(<argument><expr><name pos:line="102" pos:column="41">result<pos:position pos:line="102" pos:column="47"/></name> <operator pos:line="102" pos:column="48">!=<pos:position pos:line="102" pos:column="50"/></operator> <name pos:line="102" pos:column="51">NULL<pos:position pos:line="102" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="102" pos:column="57">1<pos:position pos:line="102" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="102" pos:column="60"/></condition><then pos:line="102" pos:column="60">
		    <block type="pseudo"><expr_stmt><expr><call><name pos:line="103" pos:column="21">memcpy<pos:position pos:line="103" pos:column="27"/></name> <argument_list pos:line="103" pos:column="28">(<argument><expr><name pos:line="103" pos:column="29">result<pos:position pos:line="103" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="37">codeset<pos:position pos:line="103" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="46">len<pos:position pos:line="103" pos:column="49"/></name></expr></argument>)<pos:position pos:line="103" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="51"/></expr_stmt></block></then></if>
<cpp:endif pos:line="104" pos:column="1">#<cpp:directive pos:line="104" pos:column="2">endif<pos:position pos:line="104" pos:column="7"/></cpp:directive></cpp:endif>

		  <if pos:line="106" pos:column="19">if <condition pos:line="106" pos:column="22">(<expr><call><name pos:line="106" pos:column="23">__builtin_expect<pos:position pos:line="106" pos:column="39"/></name> <argument_list pos:line="106" pos:column="40">(<argument><expr><name pos:line="106" pos:column="41">result<pos:position pos:line="106" pos:column="47"/></name> <operator pos:line="106" pos:column="48">!=<pos:position pos:line="106" pos:column="50"/></operator> <name pos:line="106" pos:column="51">NULL<pos:position pos:line="106" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="106" pos:column="57">1<pos:position pos:line="106" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="106" pos:column="60"/></condition><then pos:line="106" pos:column="60">
		    <block pos:line="107" pos:column="21">{
		      <if pos:line="108" pos:column="23">if <condition pos:line="108" pos:column="26">(<expr><name><name pos:line="108" pos:column="27">binding<pos:position pos:line="108" pos:column="34"/></name><operator pos:line="108" pos:column="34">-&gt;<pos:position pos:line="108" pos:column="39"/></operator><name pos:line="108" pos:column="36">codeset<pos:position pos:line="108" pos:column="43"/></name></name> <operator pos:line="108" pos:column="44">!=<pos:position pos:line="108" pos:column="46"/></operator> <name pos:line="108" pos:column="47">NULL<pos:position pos:line="108" pos:column="51"/></name></expr>)<pos:position pos:line="108" pos:column="52"/></condition><then pos:line="108" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="109" pos:column="25">free<pos:position pos:line="109" pos:column="29"/></name> <argument_list pos:line="109" pos:column="30">(<argument><expr><name><name pos:line="109" pos:column="31">binding<pos:position pos:line="109" pos:column="38"/></name><operator pos:line="109" pos:column="38">-&gt;<pos:position pos:line="109" pos:column="43"/></operator><name pos:line="109" pos:column="40">codeset<pos:position pos:line="109" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="49"/></expr_stmt></block></then></if>

		      <expr_stmt><expr><name><name pos:line="111" pos:column="23">binding<pos:position pos:line="111" pos:column="30"/></name><operator pos:line="111" pos:column="30">-&gt;<pos:position pos:line="111" pos:column="35"/></operator><name pos:line="111" pos:column="32">codeset<pos:position pos:line="111" pos:column="39"/></name></name> <operator pos:line="111" pos:column="40">=<pos:position pos:line="111" pos:column="41"/></operator> <name pos:line="111" pos:column="42">result<pos:position pos:line="111" pos:column="48"/></name></expr>;<pos:position pos:line="111" pos:column="49"/></expr_stmt>
		      <expr_stmt><expr><name><name pos:line="112" pos:column="23">binding<pos:position pos:line="112" pos:column="30"/></name><operator pos:line="112" pos:column="30">-&gt;<pos:position pos:line="112" pos:column="35"/></operator><name pos:line="112" pos:column="32">codeset_cntr<pos:position pos:line="112" pos:column="44"/></name></name><operator pos:line="112" pos:column="44">++<pos:position pos:line="112" pos:column="46"/></operator></expr>;<pos:position pos:line="112" pos:column="47"/></expr_stmt>
		      <expr_stmt><expr><name pos:line="113" pos:column="23">modified<pos:position pos:line="113" pos:column="31"/></name> <operator pos:line="113" pos:column="32">=<pos:position pos:line="113" pos:column="33"/></operator> <literal type="number" pos:line="113" pos:column="34">1<pos:position pos:line="113" pos:column="35"/></literal></expr>;<pos:position pos:line="113" pos:column="36"/></expr_stmt>
		    }<pos:position pos:line="114" pos:column="22"/></block></then></if>
		}<pos:position pos:line="115" pos:column="18"/></block></then></if>
	      <expr_stmt><expr><operator pos:line="116" pos:column="15">*<pos:position pos:line="116" pos:column="16"/></operator><name pos:line="116" pos:column="16">codesetp<pos:position pos:line="116" pos:column="24"/></name> <operator pos:line="116" pos:column="25">=<pos:position pos:line="116" pos:column="26"/></operator> <name pos:line="116" pos:column="27">result<pos:position pos:line="116" pos:column="33"/></name></expr>;<pos:position pos:line="116" pos:column="34"/></expr_stmt>
	    }<pos:position pos:line="117" pos:column="14"/></block></else></if>
	}<pos:position pos:line="118" pos:column="10"/></block></then></if>
    }<pos:position pos:line="119" pos:column="6"/></block></then>
  <elseif pos:line="120" pos:column="3">else <if pos:line="120" pos:column="8">if <condition pos:line="120" pos:column="11">(<expr><operator pos:line="120" pos:column="12">(<pos:position pos:line="120" pos:column="13"/></operator><name pos:line="120" pos:column="13">dirnamep<pos:position pos:line="120" pos:column="21"/></name> <operator pos:line="120" pos:column="22">==<pos:position pos:line="120" pos:column="24"/></operator> <name pos:line="120" pos:column="25">NULL<pos:position pos:line="120" pos:column="29"/></name> <operator pos:line="120" pos:column="30">||<pos:position pos:line="120" pos:column="32"/></operator> <operator pos:line="120" pos:column="33">*<pos:position pos:line="120" pos:column="34"/></operator><name pos:line="120" pos:column="34">dirnamep<pos:position pos:line="120" pos:column="42"/></name> <operator pos:line="120" pos:column="43">==<pos:position pos:line="120" pos:column="45"/></operator> <name pos:line="120" pos:column="46">NULL<pos:position pos:line="120" pos:column="50"/></name><operator pos:line="120" pos:column="50">)<pos:position pos:line="120" pos:column="51"/></operator>
	   <operator pos:line="121" pos:column="12">&amp;&amp;<pos:position pos:line="121" pos:column="22"/></operator> <operator pos:line="121" pos:column="15">(<pos:position pos:line="121" pos:column="16"/></operator><name pos:line="121" pos:column="16">codesetp<pos:position pos:line="121" pos:column="24"/></name> <operator pos:line="121" pos:column="25">==<pos:position pos:line="121" pos:column="27"/></operator> <name pos:line="121" pos:column="28">NULL<pos:position pos:line="121" pos:column="32"/></name> <operator pos:line="121" pos:column="33">||<pos:position pos:line="121" pos:column="35"/></operator> <operator pos:line="121" pos:column="36">*<pos:position pos:line="121" pos:column="37"/></operator><name pos:line="121" pos:column="37">codesetp<pos:position pos:line="121" pos:column="45"/></name> <operator pos:line="121" pos:column="46">==<pos:position pos:line="121" pos:column="48"/></operator> <name pos:line="121" pos:column="49">NULL<pos:position pos:line="121" pos:column="53"/></name><operator pos:line="121" pos:column="53">)<pos:position pos:line="121" pos:column="54"/></operator></expr>)<pos:position pos:line="121" pos:column="55"/></condition><then pos:line="121" pos:column="55">
    <block pos:line="122" pos:column="5">{
      <comment type="block" pos:line="123" pos:column="7">/* Simply return the default values.  */</comment>
      <if pos:line="124" pos:column="7">if <condition pos:line="124" pos:column="10">(<expr><name pos:line="124" pos:column="11">dirnamep<pos:position pos:line="124" pos:column="19"/></name></expr>)<pos:position pos:line="124" pos:column="20"/></condition><then pos:line="124" pos:column="20">
	<block type="pseudo"><expr_stmt><expr><operator pos:line="125" pos:column="9">*<pos:position pos:line="125" pos:column="10"/></operator><name pos:line="125" pos:column="10">dirnamep<pos:position pos:line="125" pos:column="18"/></name> <operator pos:line="125" pos:column="19">=<pos:position pos:line="125" pos:column="20"/></operator> <name pos:line="125" pos:column="21">_nl_default_dirname<pos:position pos:line="125" pos:column="40"/></name></expr>;<pos:position pos:line="125" pos:column="41"/></expr_stmt></block></then></if>
      <if pos:line="126" pos:column="7">if <condition pos:line="126" pos:column="10">(<expr><name pos:line="126" pos:column="11">codesetp<pos:position pos:line="126" pos:column="19"/></name></expr>)<pos:position pos:line="126" pos:column="20"/></condition><then pos:line="126" pos:column="20">
	<block type="pseudo"><expr_stmt><expr><operator pos:line="127" pos:column="9">*<pos:position pos:line="127" pos:column="10"/></operator><name pos:line="127" pos:column="10">codesetp<pos:position pos:line="127" pos:column="18"/></name> <operator pos:line="127" pos:column="19">=<pos:position pos:line="127" pos:column="20"/></operator> <name pos:line="127" pos:column="21">NULL<pos:position pos:line="127" pos:column="25"/></name></expr>;<pos:position pos:line="127" pos:column="26"/></expr_stmt></block></then></if>
    }<pos:position pos:line="128" pos:column="6"/></block></then></if></elseif>
  <else pos:line="129" pos:column="3">else
    <block pos:line="130" pos:column="5">{
      <comment type="block" pos:line="131" pos:column="7">/* We have to create a new binding.  */</comment>
      <decl_stmt><decl><type><name pos:line="132" pos:column="7">size_t<pos:position pos:line="132" pos:column="13"/></name></type> <name pos:line="132" pos:column="14">len<pos:position pos:line="132" pos:column="17"/></name> <init pos:line="132" pos:column="18">= <expr><call><name pos:line="132" pos:column="20">strlen<pos:position pos:line="132" pos:column="26"/></name> <argument_list pos:line="132" pos:column="27">(<argument><expr><name pos:line="132" pos:column="28">domainname<pos:position pos:line="132" pos:column="38"/></name></expr></argument>)<pos:position pos:line="132" pos:column="39"/></argument_list></call> <operator pos:line="132" pos:column="40">+<pos:position pos:line="132" pos:column="41"/></operator> <literal type="number" pos:line="132" pos:column="42">1<pos:position pos:line="132" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="132" pos:column="44"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="133" pos:column="7">struct<pos:position pos:line="133" pos:column="13"/></name> <name pos:line="133" pos:column="14">binding<pos:position pos:line="133" pos:column="21"/></name></name> <modifier pos:line="133" pos:column="22">*<pos:position pos:line="133" pos:column="23"/></modifier></type><name pos:line="133" pos:column="23">new_binding<pos:position pos:line="133" pos:column="34"/></name> <init pos:line="133" pos:column="35">=
	<expr><operator pos:line="134" pos:column="9">(<pos:position pos:line="134" pos:column="10"/></operator>struct <name pos:line="134" pos:column="17">binding<pos:position pos:line="134" pos:column="24"/></name> <operator pos:line="134" pos:column="25">*<pos:position pos:line="134" pos:column="26"/></operator><operator pos:line="134" pos:column="26">)<pos:position pos:line="134" pos:column="27"/></operator> <call><name pos:line="134" pos:column="28">malloc<pos:position pos:line="134" pos:column="34"/></name> <argument_list pos:line="134" pos:column="35">(<argument><expr><call><name pos:line="134" pos:column="36">offsetof<pos:position pos:line="134" pos:column="44"/></name> <argument_list pos:line="134" pos:column="45">(<argument><expr pos:line="134" pos:column="46">struct <name pos:line="134" pos:column="53">binding<pos:position pos:line="134" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="62">domainname<pos:position pos:line="134" pos:column="72"/></name></expr></argument>)<pos:position pos:line="134" pos:column="73"/></argument_list></call> <operator pos:line="134" pos:column="74">+<pos:position pos:line="134" pos:column="75"/></operator> <name pos:line="134" pos:column="76">len<pos:position pos:line="134" pos:column="79"/></name></expr></argument>)<pos:position pos:line="134" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="134" pos:column="81"/></decl_stmt>

      <if pos:line="136" pos:column="7">if <condition pos:line="136" pos:column="10">(<expr><call><name pos:line="136" pos:column="11">__builtin_expect<pos:position pos:line="136" pos:column="27"/></name> <argument_list pos:line="136" pos:column="28">(<argument><expr><name pos:line="136" pos:column="29">new_binding<pos:position pos:line="136" pos:column="40"/></name> <operator pos:line="136" pos:column="41">==<pos:position pos:line="136" pos:column="43"/></operator> <name pos:line="136" pos:column="44">NULL<pos:position pos:line="136" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="136" pos:column="50">0<pos:position pos:line="136" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="136" pos:column="53"/></condition><then pos:line="136" pos:column="53">
	<block type="pseudo"><goto pos:line="137" pos:column="9">goto <name pos:line="137" pos:column="14">failed<pos:position pos:line="137" pos:column="20"/></name>;<pos:position pos:line="137" pos:column="21"/></goto></block></then></if>

      <expr_stmt><expr><call><name pos:line="139" pos:column="7">memcpy<pos:position pos:line="139" pos:column="13"/></name> <argument_list pos:line="139" pos:column="14">(<argument><expr><name><name pos:line="139" pos:column="15">new_binding<pos:position pos:line="139" pos:column="26"/></name><operator pos:line="139" pos:column="26">-&gt;<pos:position pos:line="139" pos:column="31"/></operator><name pos:line="139" pos:column="28">domainname<pos:position pos:line="139" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="40">domainname<pos:position pos:line="139" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="52">len<pos:position pos:line="139" pos:column="55"/></name></expr></argument>)<pos:position pos:line="139" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="57"/></expr_stmt>

      <if pos:line="141" pos:column="7">if <condition pos:line="141" pos:column="10">(<expr><name pos:line="141" pos:column="11">dirnamep<pos:position pos:line="141" pos:column="19"/></name></expr>)<pos:position pos:line="141" pos:column="20"/></condition><then pos:line="141" pos:column="20">
	<block pos:line="142" pos:column="9">{
	  <decl_stmt><decl><type><specifier pos:line="143" pos:column="11">const<pos:position pos:line="143" pos:column="16"/></specifier> <name pos:line="143" pos:column="17">char<pos:position pos:line="143" pos:column="21"/></name> <modifier pos:line="143" pos:column="22">*<pos:position pos:line="143" pos:column="23"/></modifier></type><name pos:line="143" pos:column="23">dirname<pos:position pos:line="143" pos:column="30"/></name> <init pos:line="143" pos:column="31">= <expr><operator pos:line="143" pos:column="33">*<pos:position pos:line="143" pos:column="34"/></operator><name pos:line="143" pos:column="34">dirnamep<pos:position pos:line="143" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="143" pos:column="43"/></decl_stmt>

	  <if pos:line="145" pos:column="11">if <condition pos:line="145" pos:column="14">(<expr><name pos:line="145" pos:column="15">dirname<pos:position pos:line="145" pos:column="22"/></name> <operator pos:line="145" pos:column="23">==<pos:position pos:line="145" pos:column="25"/></operator> <name pos:line="145" pos:column="26">NULL<pos:position pos:line="145" pos:column="30"/></name></expr>)<pos:position pos:line="145" pos:column="31"/></condition><then pos:line="145" pos:column="31">
	    <comment type="block" pos:line="146" pos:column="13">/* The default value.  */</comment>
	    <block type="pseudo"><expr_stmt><expr><name pos:line="147" pos:column="13">dirname<pos:position pos:line="147" pos:column="20"/></name> <operator pos:line="147" pos:column="21">=<pos:position pos:line="147" pos:column="22"/></operator> <name pos:line="147" pos:column="23">_nl_default_dirname<pos:position pos:line="147" pos:column="42"/></name></expr>;<pos:position pos:line="147" pos:column="43"/></expr_stmt></block></then>
	  <else pos:line="148" pos:column="11">else
	    <block pos:line="149" pos:column="13">{
	      <if pos:line="150" pos:column="15">if <condition pos:line="150" pos:column="18">(<expr><call><name pos:line="150" pos:column="19">strcmp<pos:position pos:line="150" pos:column="25"/></name> <argument_list pos:line="150" pos:column="26">(<argument><expr><name pos:line="150" pos:column="27">dirname<pos:position pos:line="150" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="36">_nl_default_dirname<pos:position pos:line="150" pos:column="55"/></name></expr></argument>)<pos:position pos:line="150" pos:column="56"/></argument_list></call> <operator pos:line="150" pos:column="57">==<pos:position pos:line="150" pos:column="59"/></operator> <literal type="number" pos:line="150" pos:column="60">0<pos:position pos:line="150" pos:column="61"/></literal></expr>)<pos:position pos:line="150" pos:column="62"/></condition><then pos:line="150" pos:column="62">
		<block type="pseudo"><expr_stmt><expr><name pos:line="151" pos:column="17">dirname<pos:position pos:line="151" pos:column="24"/></name> <operator pos:line="151" pos:column="25">=<pos:position pos:line="151" pos:column="26"/></operator> <name pos:line="151" pos:column="27">_nl_default_dirname<pos:position pos:line="151" pos:column="46"/></name></expr>;<pos:position pos:line="151" pos:column="47"/></expr_stmt></block></then>
	      <else pos:line="152" pos:column="15">else
		<block pos:line="153" pos:column="17">{
		  <decl_stmt><decl><type><name pos:line="154" pos:column="19">char<pos:position pos:line="154" pos:column="23"/></name> <modifier pos:line="154" pos:column="24">*<pos:position pos:line="154" pos:column="25"/></modifier></type><name pos:line="154" pos:column="25">result<pos:position pos:line="154" pos:column="31"/></name></decl>;<pos:position pos:line="154" pos:column="32"/></decl_stmt>
<cpp:if pos:line="155" pos:column="1">#<cpp:directive pos:line="155" pos:column="2">if<pos:position pos:line="155" pos:column="4"/></cpp:directive> <expr><name pos:line="155" pos:column="5">defined<pos:position pos:line="155" pos:column="12"/></name> <name pos:line="155" pos:column="13">_LIBC<pos:position pos:line="155" pos:column="18"/></name> <operator pos:line="155" pos:column="19">||<pos:position pos:line="155" pos:column="21"/></operator> <name pos:line="155" pos:column="22">defined<pos:position pos:line="155" pos:column="29"/></name> <name pos:line="155" pos:column="30">HAVE_STRDUP<pos:position pos:line="155" pos:column="41"/></name></expr></cpp:if>
		  <expr_stmt><expr><name pos:line="156" pos:column="19">result<pos:position pos:line="156" pos:column="25"/></name> <operator pos:line="156" pos:column="26">=<pos:position pos:line="156" pos:column="27"/></operator> <call><name pos:line="156" pos:column="28">strdup<pos:position pos:line="156" pos:column="34"/></name> <argument_list pos:line="156" pos:column="35">(<argument><expr><name pos:line="156" pos:column="36">dirname<pos:position pos:line="156" pos:column="43"/></name></expr></argument>)<pos:position pos:line="156" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="45"/></expr_stmt>
		  <if pos:line="157" pos:column="19">if <condition pos:line="157" pos:column="22">(<expr><call><name pos:line="157" pos:column="23">__builtin_expect<pos:position pos:line="157" pos:column="39"/></name> <argument_list pos:line="157" pos:column="40">(<argument><expr><name pos:line="157" pos:column="41">result<pos:position pos:line="157" pos:column="47"/></name> <operator pos:line="157" pos:column="48">==<pos:position pos:line="157" pos:column="50"/></operator> <name pos:line="157" pos:column="51">NULL<pos:position pos:line="157" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="157" pos:column="57">0<pos:position pos:line="157" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="157" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="157" pos:column="60"/></condition><then pos:line="157" pos:column="60">
		    <block type="pseudo"><goto pos:line="158" pos:column="21">goto <name pos:line="158" pos:column="26">failed_dirname<pos:position pos:line="158" pos:column="40"/></name>;<pos:position pos:line="158" pos:column="41"/></goto></block></then></if>
<cpp:else pos:line="159" pos:column="1">#<cpp:directive pos:line="159" pos:column="2">else<pos:position pos:line="159" pos:column="6"/></cpp:directive></cpp:else>
		  <decl_stmt><decl><type><name pos:line="160" pos:column="19">size_t<pos:position pos:line="160" pos:column="25"/></name></type> <name pos:line="160" pos:column="26">len<pos:position pos:line="160" pos:column="29"/></name> <init pos:line="160" pos:column="30">= <expr><call><name pos:line="160" pos:column="32">strlen<pos:position pos:line="160" pos:column="38"/></name> <argument_list pos:line="160" pos:column="39">(<argument><expr><name pos:line="160" pos:column="40">dirname<pos:position pos:line="160" pos:column="47"/></name></expr></argument>)<pos:position pos:line="160" pos:column="48"/></argument_list></call> <operator pos:line="160" pos:column="49">+<pos:position pos:line="160" pos:column="50"/></operator> <literal type="number" pos:line="160" pos:column="51">1<pos:position pos:line="160" pos:column="52"/></literal></expr></init></decl>;<pos:position pos:line="160" pos:column="53"/></decl_stmt>
		  <expr_stmt><expr><name pos:line="161" pos:column="19">result<pos:position pos:line="161" pos:column="25"/></name> <operator pos:line="161" pos:column="26">=<pos:position pos:line="161" pos:column="27"/></operator> <operator pos:line="161" pos:column="28">(<pos:position pos:line="161" pos:column="29"/></operator><name pos:line="161" pos:column="29">char<pos:position pos:line="161" pos:column="33"/></name> <operator pos:line="161" pos:column="34">*<pos:position pos:line="161" pos:column="35"/></operator><operator pos:line="161" pos:column="35">)<pos:position pos:line="161" pos:column="36"/></operator> <call><name pos:line="161" pos:column="37">malloc<pos:position pos:line="161" pos:column="43"/></name> <argument_list pos:line="161" pos:column="44">(<argument><expr><name pos:line="161" pos:column="45">len<pos:position pos:line="161" pos:column="48"/></name></expr></argument>)<pos:position pos:line="161" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="50"/></expr_stmt>
		  <if pos:line="162" pos:column="19">if <condition pos:line="162" pos:column="22">(<expr><call><name pos:line="162" pos:column="23">__builtin_expect<pos:position pos:line="162" pos:column="39"/></name> <argument_list pos:line="162" pos:column="40">(<argument><expr><name pos:line="162" pos:column="41">result<pos:position pos:line="162" pos:column="47"/></name> <operator pos:line="162" pos:column="48">==<pos:position pos:line="162" pos:column="50"/></operator> <name pos:line="162" pos:column="51">NULL<pos:position pos:line="162" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="162" pos:column="57">0<pos:position pos:line="162" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="162" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="162" pos:column="60"/></condition><then pos:line="162" pos:column="60">
		    <block type="pseudo"><goto pos:line="163" pos:column="21">goto <name pos:line="163" pos:column="26">failed_dirname<pos:position pos:line="163" pos:column="40"/></name>;<pos:position pos:line="163" pos:column="41"/></goto></block></then></if>
		  <expr_stmt><expr><call><name pos:line="164" pos:column="19">memcpy<pos:position pos:line="164" pos:column="25"/></name> <argument_list pos:line="164" pos:column="26">(<argument><expr><name pos:line="164" pos:column="27">result<pos:position pos:line="164" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="35">dirname<pos:position pos:line="164" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="44">len<pos:position pos:line="164" pos:column="47"/></name></expr></argument>)<pos:position pos:line="164" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="49"/></expr_stmt>
<cpp:endif pos:line="165" pos:column="1">#<cpp:directive pos:line="165" pos:column="2">endif<pos:position pos:line="165" pos:column="7"/></cpp:directive></cpp:endif>
		  <expr_stmt><expr><name pos:line="166" pos:column="19">dirname<pos:position pos:line="166" pos:column="26"/></name> <operator pos:line="166" pos:column="27">=<pos:position pos:line="166" pos:column="28"/></operator> <name pos:line="166" pos:column="29">result<pos:position pos:line="166" pos:column="35"/></name></expr>;<pos:position pos:line="166" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="167" pos:column="18"/></block></else></if>
	    }<pos:position pos:line="168" pos:column="14"/></block></else></if>
	  <expr_stmt><expr><operator pos:line="169" pos:column="11">*<pos:position pos:line="169" pos:column="12"/></operator><name pos:line="169" pos:column="12">dirnamep<pos:position pos:line="169" pos:column="20"/></name> <operator pos:line="169" pos:column="21">=<pos:position pos:line="169" pos:column="22"/></operator> <name pos:line="169" pos:column="23">dirname<pos:position pos:line="169" pos:column="30"/></name></expr>;<pos:position pos:line="169" pos:column="31"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="170" pos:column="11">new_binding<pos:position pos:line="170" pos:column="22"/></name><operator pos:line="170" pos:column="22">-&gt;<pos:position pos:line="170" pos:column="27"/></operator><name pos:line="170" pos:column="24">dirname<pos:position pos:line="170" pos:column="31"/></name></name> <operator pos:line="170" pos:column="32">=<pos:position pos:line="170" pos:column="33"/></operator> <operator pos:line="170" pos:column="34">(<pos:position pos:line="170" pos:column="35"/></operator><name pos:line="170" pos:column="35">char<pos:position pos:line="170" pos:column="39"/></name> <operator pos:line="170" pos:column="40">*<pos:position pos:line="170" pos:column="41"/></operator><operator pos:line="170" pos:column="41">)<pos:position pos:line="170" pos:column="42"/></operator> <name pos:line="170" pos:column="43">dirname<pos:position pos:line="170" pos:column="50"/></name></expr>;<pos:position pos:line="170" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="171" pos:column="10"/></block></then>
      <else pos:line="172" pos:column="7">else
	<comment type="block" pos:line="173" pos:column="9">/* The default value.  */</comment>
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="174" pos:column="9">new_binding<pos:position pos:line="174" pos:column="20"/></name><operator pos:line="174" pos:column="20">-&gt;<pos:position pos:line="174" pos:column="25"/></operator><name pos:line="174" pos:column="22">dirname<pos:position pos:line="174" pos:column="29"/></name></name> <operator pos:line="174" pos:column="30">=<pos:position pos:line="174" pos:column="31"/></operator> <operator pos:line="174" pos:column="32">(<pos:position pos:line="174" pos:column="33"/></operator><name pos:line="174" pos:column="33">char<pos:position pos:line="174" pos:column="37"/></name> <operator pos:line="174" pos:column="38">*<pos:position pos:line="174" pos:column="39"/></operator><operator pos:line="174" pos:column="39">)<pos:position pos:line="174" pos:column="40"/></operator> <name pos:line="174" pos:column="41">_nl_default_dirname<pos:position pos:line="174" pos:column="60"/></name></expr>;<pos:position pos:line="174" pos:column="61"/></expr_stmt></block></else></if>

      <expr_stmt><expr><name><name pos:line="176" pos:column="7">new_binding<pos:position pos:line="176" pos:column="18"/></name><operator pos:line="176" pos:column="18">-&gt;<pos:position pos:line="176" pos:column="23"/></operator><name pos:line="176" pos:column="20">codeset_cntr<pos:position pos:line="176" pos:column="32"/></name></name> <operator pos:line="176" pos:column="33">=<pos:position pos:line="176" pos:column="34"/></operator> <literal type="number" pos:line="176" pos:column="35">0<pos:position pos:line="176" pos:column="36"/></literal></expr>;<pos:position pos:line="176" pos:column="37"/></expr_stmt>

      <if pos:line="178" pos:column="7">if <condition pos:line="178" pos:column="10">(<expr><name pos:line="178" pos:column="11">codesetp<pos:position pos:line="178" pos:column="19"/></name></expr>)<pos:position pos:line="178" pos:column="20"/></condition><then pos:line="178" pos:column="20">
	<block pos:line="179" pos:column="9">{
	  <decl_stmt><decl><type><specifier pos:line="180" pos:column="11">const<pos:position pos:line="180" pos:column="16"/></specifier> <name pos:line="180" pos:column="17">char<pos:position pos:line="180" pos:column="21"/></name> <modifier pos:line="180" pos:column="22">*<pos:position pos:line="180" pos:column="23"/></modifier></type><name pos:line="180" pos:column="23">codeset<pos:position pos:line="180" pos:column="30"/></name> <init pos:line="180" pos:column="31">= <expr><operator pos:line="180" pos:column="33">*<pos:position pos:line="180" pos:column="34"/></operator><name pos:line="180" pos:column="34">codesetp<pos:position pos:line="180" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="180" pos:column="43"/></decl_stmt>

	  <if pos:line="182" pos:column="11">if <condition pos:line="182" pos:column="14">(<expr><name pos:line="182" pos:column="15">codeset<pos:position pos:line="182" pos:column="22"/></name> <operator pos:line="182" pos:column="23">!=<pos:position pos:line="182" pos:column="25"/></operator> <name pos:line="182" pos:column="26">NULL<pos:position pos:line="182" pos:column="30"/></name></expr>)<pos:position pos:line="182" pos:column="31"/></condition><then pos:line="182" pos:column="31">
	    <block pos:line="183" pos:column="13">{
	      <decl_stmt><decl><type><name pos:line="184" pos:column="15">char<pos:position pos:line="184" pos:column="19"/></name> <modifier pos:line="184" pos:column="20">*<pos:position pos:line="184" pos:column="21"/></modifier></type><name pos:line="184" pos:column="21">result<pos:position pos:line="184" pos:column="27"/></name></decl>;<pos:position pos:line="184" pos:column="28"/></decl_stmt>

<cpp:if pos:line="186" pos:column="1">#<cpp:directive pos:line="186" pos:column="2">if<pos:position pos:line="186" pos:column="4"/></cpp:directive> <expr><name pos:line="186" pos:column="5">defined<pos:position pos:line="186" pos:column="12"/></name> <name pos:line="186" pos:column="13">_LIBC<pos:position pos:line="186" pos:column="18"/></name> <operator pos:line="186" pos:column="19">||<pos:position pos:line="186" pos:column="21"/></operator> <name pos:line="186" pos:column="22">defined<pos:position pos:line="186" pos:column="29"/></name> <name pos:line="186" pos:column="30">HAVE_STRDUP<pos:position pos:line="186" pos:column="41"/></name></expr></cpp:if>
	      <expr_stmt><expr><name pos:line="187" pos:column="15">result<pos:position pos:line="187" pos:column="21"/></name> <operator pos:line="187" pos:column="22">=<pos:position pos:line="187" pos:column="23"/></operator> <call><name pos:line="187" pos:column="24">strdup<pos:position pos:line="187" pos:column="30"/></name> <argument_list pos:line="187" pos:column="31">(<argument><expr><name pos:line="187" pos:column="32">codeset<pos:position pos:line="187" pos:column="39"/></name></expr></argument>)<pos:position pos:line="187" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="41"/></expr_stmt>
	      <if pos:line="188" pos:column="15">if <condition pos:line="188" pos:column="18">(<expr><call><name pos:line="188" pos:column="19">__builtin_expect<pos:position pos:line="188" pos:column="35"/></name> <argument_list pos:line="188" pos:column="36">(<argument><expr><name pos:line="188" pos:column="37">result<pos:position pos:line="188" pos:column="43"/></name> <operator pos:line="188" pos:column="44">==<pos:position pos:line="188" pos:column="46"/></operator> <name pos:line="188" pos:column="47">NULL<pos:position pos:line="188" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="188" pos:column="53">0<pos:position pos:line="188" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="188" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="188" pos:column="56"/></condition><then pos:line="188" pos:column="56">
		<block type="pseudo"><goto pos:line="189" pos:column="17">goto <name pos:line="189" pos:column="22">failed_codeset<pos:position pos:line="189" pos:column="36"/></name>;<pos:position pos:line="189" pos:column="37"/></goto></block></then></if>
<cpp:else pos:line="190" pos:column="1">#<cpp:directive pos:line="190" pos:column="2">else<pos:position pos:line="190" pos:column="6"/></cpp:directive></cpp:else>
	      <decl_stmt><decl><type><name pos:line="191" pos:column="15">size_t<pos:position pos:line="191" pos:column="21"/></name></type> <name pos:line="191" pos:column="22">len<pos:position pos:line="191" pos:column="25"/></name> <init pos:line="191" pos:column="26">= <expr><call><name pos:line="191" pos:column="28">strlen<pos:position pos:line="191" pos:column="34"/></name> <argument_list pos:line="191" pos:column="35">(<argument><expr><name pos:line="191" pos:column="36">codeset<pos:position pos:line="191" pos:column="43"/></name></expr></argument>)<pos:position pos:line="191" pos:column="44"/></argument_list></call> <operator pos:line="191" pos:column="45">+<pos:position pos:line="191" pos:column="46"/></operator> <literal type="number" pos:line="191" pos:column="47">1<pos:position pos:line="191" pos:column="48"/></literal></expr></init></decl>;<pos:position pos:line="191" pos:column="49"/></decl_stmt>
	      <expr_stmt><expr><name pos:line="192" pos:column="15">result<pos:position pos:line="192" pos:column="21"/></name> <operator pos:line="192" pos:column="22">=<pos:position pos:line="192" pos:column="23"/></operator> <operator pos:line="192" pos:column="24">(<pos:position pos:line="192" pos:column="25"/></operator><name pos:line="192" pos:column="25">char<pos:position pos:line="192" pos:column="29"/></name> <operator pos:line="192" pos:column="30">*<pos:position pos:line="192" pos:column="31"/></operator><operator pos:line="192" pos:column="31">)<pos:position pos:line="192" pos:column="32"/></operator> <call><name pos:line="192" pos:column="33">malloc<pos:position pos:line="192" pos:column="39"/></name> <argument_list pos:line="192" pos:column="40">(<argument><expr><name pos:line="192" pos:column="41">len<pos:position pos:line="192" pos:column="44"/></name></expr></argument>)<pos:position pos:line="192" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="46"/></expr_stmt>
	      <if pos:line="193" pos:column="15">if <condition pos:line="193" pos:column="18">(<expr><call><name pos:line="193" pos:column="19">__builtin_expect<pos:position pos:line="193" pos:column="35"/></name> <argument_list pos:line="193" pos:column="36">(<argument><expr><name pos:line="193" pos:column="37">result<pos:position pos:line="193" pos:column="43"/></name> <operator pos:line="193" pos:column="44">==<pos:position pos:line="193" pos:column="46"/></operator> <name pos:line="193" pos:column="47">NULL<pos:position pos:line="193" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="193" pos:column="53">0<pos:position pos:line="193" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="193" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="193" pos:column="56"/></condition><then pos:line="193" pos:column="56">
		<block type="pseudo"><goto pos:line="194" pos:column="17">goto <name pos:line="194" pos:column="22">failed_codeset<pos:position pos:line="194" pos:column="36"/></name>;<pos:position pos:line="194" pos:column="37"/></goto></block></then></if>
	      <expr_stmt><expr><call><name pos:line="195" pos:column="15">memcpy<pos:position pos:line="195" pos:column="21"/></name> <argument_list pos:line="195" pos:column="22">(<argument><expr><name pos:line="195" pos:column="23">result<pos:position pos:line="195" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="195" pos:column="31">codeset<pos:position pos:line="195" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="195" pos:column="40">len<pos:position pos:line="195" pos:column="43"/></name></expr></argument>)<pos:position pos:line="195" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="45"/></expr_stmt>
<cpp:endif pos:line="196" pos:column="1">#<cpp:directive pos:line="196" pos:column="2">endif<pos:position pos:line="196" pos:column="7"/></cpp:directive></cpp:endif>
	      <expr_stmt><expr><name pos:line="197" pos:column="15">codeset<pos:position pos:line="197" pos:column="22"/></name> <operator pos:line="197" pos:column="23">=<pos:position pos:line="197" pos:column="24"/></operator> <name pos:line="197" pos:column="25">result<pos:position pos:line="197" pos:column="31"/></name></expr>;<pos:position pos:line="197" pos:column="32"/></expr_stmt>
	      <expr_stmt><expr><name><name pos:line="198" pos:column="15">new_binding<pos:position pos:line="198" pos:column="26"/></name><operator pos:line="198" pos:column="26">-&gt;<pos:position pos:line="198" pos:column="31"/></operator><name pos:line="198" pos:column="28">codeset_cntr<pos:position pos:line="198" pos:column="40"/></name></name><operator pos:line="198" pos:column="40">++<pos:position pos:line="198" pos:column="42"/></operator></expr>;<pos:position pos:line="198" pos:column="43"/></expr_stmt>
	    }<pos:position pos:line="199" pos:column="14"/></block></then></if>
	  <expr_stmt><expr><operator pos:line="200" pos:column="11">*<pos:position pos:line="200" pos:column="12"/></operator><name pos:line="200" pos:column="12">codesetp<pos:position pos:line="200" pos:column="20"/></name> <operator pos:line="200" pos:column="21">=<pos:position pos:line="200" pos:column="22"/></operator> <name pos:line="200" pos:column="23">codeset<pos:position pos:line="200" pos:column="30"/></name></expr>;<pos:position pos:line="200" pos:column="31"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="201" pos:column="11">new_binding<pos:position pos:line="201" pos:column="22"/></name><operator pos:line="201" pos:column="22">-&gt;<pos:position pos:line="201" pos:column="27"/></operator><name pos:line="201" pos:column="24">codeset<pos:position pos:line="201" pos:column="31"/></name></name> <operator pos:line="201" pos:column="32">=<pos:position pos:line="201" pos:column="33"/></operator> <operator pos:line="201" pos:column="34">(<pos:position pos:line="201" pos:column="35"/></operator><name pos:line="201" pos:column="35">char<pos:position pos:line="201" pos:column="39"/></name> <operator pos:line="201" pos:column="40">*<pos:position pos:line="201" pos:column="41"/></operator><operator pos:line="201" pos:column="41">)<pos:position pos:line="201" pos:column="42"/></operator> <name pos:line="201" pos:column="43">codeset<pos:position pos:line="201" pos:column="50"/></name></expr>;<pos:position pos:line="201" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="202" pos:column="10"/></block></then>
      <else pos:line="203" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="204" pos:column="9">new_binding<pos:position pos:line="204" pos:column="20"/></name><operator pos:line="204" pos:column="20">-&gt;<pos:position pos:line="204" pos:column="25"/></operator><name pos:line="204" pos:column="22">codeset<pos:position pos:line="204" pos:column="29"/></name></name> <operator pos:line="204" pos:column="30">=<pos:position pos:line="204" pos:column="31"/></operator> <name pos:line="204" pos:column="32">NULL<pos:position pos:line="204" pos:column="36"/></name></expr>;<pos:position pos:line="204" pos:column="37"/></expr_stmt></block></else></if>

      <comment type="block" pos:line="206" pos:column="7">/* Now enqueue it.  */</comment>
      <if pos:line="207" pos:column="7">if <condition pos:line="207" pos:column="10">(<expr><name pos:line="207" pos:column="11">_nl_domain_bindings<pos:position pos:line="207" pos:column="30"/></name> <operator pos:line="207" pos:column="31">==<pos:position pos:line="207" pos:column="33"/></operator> <name pos:line="207" pos:column="34">NULL<pos:position pos:line="207" pos:column="38"/></name>
	  <operator pos:line="208" pos:column="11">||<pos:position pos:line="208" pos:column="13"/></operator> <call><name pos:line="208" pos:column="14">strcmp<pos:position pos:line="208" pos:column="20"/></name> <argument_list pos:line="208" pos:column="21">(<argument><expr><name pos:line="208" pos:column="22">domainname<pos:position pos:line="208" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="208" pos:column="34">_nl_domain_bindings<pos:position pos:line="208" pos:column="53"/></name><operator pos:line="208" pos:column="53">-&gt;<pos:position pos:line="208" pos:column="58"/></operator><name pos:line="208" pos:column="55">domainname<pos:position pos:line="208" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="208" pos:column="66"/></argument_list></call> <operator pos:line="208" pos:column="67">&lt;<pos:position pos:line="208" pos:column="71"/></operator> <literal type="number" pos:line="208" pos:column="69">0<pos:position pos:line="208" pos:column="70"/></literal></expr>)<pos:position pos:line="208" pos:column="71"/></condition><then pos:line="208" pos:column="71">
	<block pos:line="209" pos:column="9">{
	  <expr_stmt><expr><name><name pos:line="210" pos:column="11">new_binding<pos:position pos:line="210" pos:column="22"/></name><operator pos:line="210" pos:column="22">-&gt;<pos:position pos:line="210" pos:column="27"/></operator><name pos:line="210" pos:column="24">next<pos:position pos:line="210" pos:column="28"/></name></name> <operator pos:line="210" pos:column="29">=<pos:position pos:line="210" pos:column="30"/></operator> <name pos:line="210" pos:column="31">_nl_domain_bindings<pos:position pos:line="210" pos:column="50"/></name></expr>;<pos:position pos:line="210" pos:column="51"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="211" pos:column="11">_nl_domain_bindings<pos:position pos:line="211" pos:column="30"/></name> <operator pos:line="211" pos:column="31">=<pos:position pos:line="211" pos:column="32"/></operator> <name pos:line="211" pos:column="33">new_binding<pos:position pos:line="211" pos:column="44"/></name></expr>;<pos:position pos:line="211" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="212" pos:column="10"/></block></then>
      <else pos:line="213" pos:column="7">else
	<block pos:line="214" pos:column="9">{
	  <expr_stmt><expr><name pos:line="215" pos:column="11">binding<pos:position pos:line="215" pos:column="18"/></name> <operator pos:line="215" pos:column="19">=<pos:position pos:line="215" pos:column="20"/></operator> <name pos:line="215" pos:column="21">_nl_domain_bindings<pos:position pos:line="215" pos:column="40"/></name></expr>;<pos:position pos:line="215" pos:column="41"/></expr_stmt>
	  <while pos:line="216" pos:column="11">while <condition pos:line="216" pos:column="17">(<expr><name><name pos:line="216" pos:column="18">binding<pos:position pos:line="216" pos:column="25"/></name><operator pos:line="216" pos:column="25">-&gt;<pos:position pos:line="216" pos:column="30"/></operator><name pos:line="216" pos:column="27">next<pos:position pos:line="216" pos:column="31"/></name></name> <operator pos:line="216" pos:column="32">!=<pos:position pos:line="216" pos:column="34"/></operator> <name pos:line="216" pos:column="35">NULL<pos:position pos:line="216" pos:column="39"/></name>
		 <operator pos:line="217" pos:column="18">&amp;&amp;<pos:position pos:line="217" pos:column="28"/></operator> <call><name pos:line="217" pos:column="21">strcmp<pos:position pos:line="217" pos:column="27"/></name> <argument_list pos:line="217" pos:column="28">(<argument><expr><name pos:line="217" pos:column="29">domainname<pos:position pos:line="217" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="217" pos:column="41">binding<pos:position pos:line="217" pos:column="48"/></name><operator pos:line="217" pos:column="48">-&gt;<pos:position pos:line="217" pos:column="53"/></operator><name pos:line="217" pos:column="50">next<pos:position pos:line="217" pos:column="54"/></name><operator pos:line="217" pos:column="54">-&gt;<pos:position pos:line="217" pos:column="59"/></operator><name pos:line="217" pos:column="56">domainname<pos:position pos:line="217" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="217" pos:column="67"/></argument_list></call> <operator pos:line="217" pos:column="68">&gt;<pos:position pos:line="217" pos:column="72"/></operator> <literal type="number" pos:line="217" pos:column="70">0<pos:position pos:line="217" pos:column="71"/></literal></expr>)<pos:position pos:line="217" pos:column="72"/></condition>
	    <block type="pseudo"><expr_stmt><expr><name pos:line="218" pos:column="13">binding<pos:position pos:line="218" pos:column="20"/></name> <operator pos:line="218" pos:column="21">=<pos:position pos:line="218" pos:column="22"/></operator> <name><name pos:line="218" pos:column="23">binding<pos:position pos:line="218" pos:column="30"/></name><operator pos:line="218" pos:column="30">-&gt;<pos:position pos:line="218" pos:column="35"/></operator><name pos:line="218" pos:column="32">next<pos:position pos:line="218" pos:column="36"/></name></name></expr>;<pos:position pos:line="218" pos:column="37"/></expr_stmt></block></while>

	  <expr_stmt><expr><name><name pos:line="220" pos:column="11">new_binding<pos:position pos:line="220" pos:column="22"/></name><operator pos:line="220" pos:column="22">-&gt;<pos:position pos:line="220" pos:column="27"/></operator><name pos:line="220" pos:column="24">next<pos:position pos:line="220" pos:column="28"/></name></name> <operator pos:line="220" pos:column="29">=<pos:position pos:line="220" pos:column="30"/></operator> <name><name pos:line="220" pos:column="31">binding<pos:position pos:line="220" pos:column="38"/></name><operator pos:line="220" pos:column="38">-&gt;<pos:position pos:line="220" pos:column="43"/></operator><name pos:line="220" pos:column="40">next<pos:position pos:line="220" pos:column="44"/></name></name></expr>;<pos:position pos:line="220" pos:column="45"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="221" pos:column="11">binding<pos:position pos:line="221" pos:column="18"/></name><operator pos:line="221" pos:column="18">-&gt;<pos:position pos:line="221" pos:column="23"/></operator><name pos:line="221" pos:column="20">next<pos:position pos:line="221" pos:column="24"/></name></name> <operator pos:line="221" pos:column="25">=<pos:position pos:line="221" pos:column="26"/></operator> <name pos:line="221" pos:column="27">new_binding<pos:position pos:line="221" pos:column="38"/></name></expr>;<pos:position pos:line="221" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="222" pos:column="10"/></block></else></if>

      <expr_stmt><expr><name pos:line="224" pos:column="7">modified<pos:position pos:line="224" pos:column="15"/></name> <operator pos:line="224" pos:column="16">=<pos:position pos:line="224" pos:column="17"/></operator> <literal type="number" pos:line="224" pos:column="18">1<pos:position pos:line="224" pos:column="19"/></literal></expr>;<pos:position pos:line="224" pos:column="20"/></expr_stmt>

      <comment type="block" pos:line="226" pos:column="7">/* Here we deal with memory allocation failures.  */</comment>
      <if pos:line="227" pos:column="7">if <condition pos:line="227" pos:column="10">(<expr><literal type="number" pos:line="227" pos:column="11">0<pos:position pos:line="227" pos:column="12"/></literal></expr>)<pos:position pos:line="227" pos:column="13"/></condition><then pos:line="227" pos:column="13">
	<block pos:line="228" pos:column="9">{
	<label><name pos:line="229" pos:column="9">failed_codeset<pos:position pos:line="229" pos:column="23"/></name>:<pos:position pos:line="229" pos:column="24"/></label>
	  <if pos:line="230" pos:column="11">if <condition pos:line="230" pos:column="14">(<expr><name><name pos:line="230" pos:column="15">new_binding<pos:position pos:line="230" pos:column="26"/></name><operator pos:line="230" pos:column="26">-&gt;<pos:position pos:line="230" pos:column="31"/></operator><name pos:line="230" pos:column="28">dirname<pos:position pos:line="230" pos:column="35"/></name></name> <operator pos:line="230" pos:column="36">!=<pos:position pos:line="230" pos:column="38"/></operator> <name pos:line="230" pos:column="39">_nl_default_dirname<pos:position pos:line="230" pos:column="58"/></name></expr>)<pos:position pos:line="230" pos:column="59"/></condition><then pos:line="230" pos:column="59">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="231" pos:column="13">free<pos:position pos:line="231" pos:column="17"/></name> <argument_list pos:line="231" pos:column="18">(<argument><expr><name><name pos:line="231" pos:column="19">new_binding<pos:position pos:line="231" pos:column="30"/></name><operator pos:line="231" pos:column="30">-&gt;<pos:position pos:line="231" pos:column="35"/></operator><name pos:line="231" pos:column="32">dirname<pos:position pos:line="231" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="231" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="41"/></expr_stmt></block></then></if>
	<label><name pos:line="232" pos:column="9">failed_dirname<pos:position pos:line="232" pos:column="23"/></name>:<pos:position pos:line="232" pos:column="24"/></label>
	  <expr_stmt><expr><call><name pos:line="233" pos:column="11">free<pos:position pos:line="233" pos:column="15"/></name> <argument_list pos:line="233" pos:column="16">(<argument><expr><name pos:line="233" pos:column="17">new_binding<pos:position pos:line="233" pos:column="28"/></name></expr></argument>)<pos:position pos:line="233" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="30"/></expr_stmt>
	<label><name pos:line="234" pos:column="9">failed<pos:position pos:line="234" pos:column="15"/></name>:<pos:position pos:line="234" pos:column="16"/></label>
	  <if pos:line="235" pos:column="11">if <condition pos:line="235" pos:column="14">(<expr><name pos:line="235" pos:column="15">dirnamep<pos:position pos:line="235" pos:column="23"/></name></expr>)<pos:position pos:line="235" pos:column="24"/></condition><then pos:line="235" pos:column="24">
	    <block type="pseudo"><expr_stmt><expr><operator pos:line="236" pos:column="13">*<pos:position pos:line="236" pos:column="14"/></operator><name pos:line="236" pos:column="14">dirnamep<pos:position pos:line="236" pos:column="22"/></name> <operator pos:line="236" pos:column="23">=<pos:position pos:line="236" pos:column="24"/></operator> <name pos:line="236" pos:column="25">NULL<pos:position pos:line="236" pos:column="29"/></name></expr>;<pos:position pos:line="236" pos:column="30"/></expr_stmt></block></then></if>
	  <if pos:line="237" pos:column="11">if <condition pos:line="237" pos:column="14">(<expr><name pos:line="237" pos:column="15">codesetp<pos:position pos:line="237" pos:column="23"/></name></expr>)<pos:position pos:line="237" pos:column="24"/></condition><then pos:line="237" pos:column="24">
	    <block type="pseudo"><expr_stmt><expr><operator pos:line="238" pos:column="13">*<pos:position pos:line="238" pos:column="14"/></operator><name pos:line="238" pos:column="14">codesetp<pos:position pos:line="238" pos:column="22"/></name> <operator pos:line="238" pos:column="23">=<pos:position pos:line="238" pos:column="24"/></operator> <name pos:line="238" pos:column="25">NULL<pos:position pos:line="238" pos:column="29"/></name></expr>;<pos:position pos:line="238" pos:column="30"/></expr_stmt></block></then></if>
	}<pos:position pos:line="239" pos:column="10"/></block></then></if>
    }<pos:position pos:line="240" pos:column="6"/></block></else></if>

  <comment type="block" pos:line="242" pos:column="3">/* If we modified any binding, we flush the caches.  */</comment>
  <if pos:line="243" pos:column="3">if <condition pos:line="243" pos:column="6">(<expr><name pos:line="243" pos:column="7">modified<pos:position pos:line="243" pos:column="15"/></name></expr>)<pos:position pos:line="243" pos:column="16"/></condition><then pos:line="243" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="244" pos:column="5">++<pos:position pos:line="244" pos:column="7"/></operator><name pos:line="244" pos:column="7">_nl_msg_cat_cntr<pos:position pos:line="244" pos:column="23"/></name></expr>;<pos:position pos:line="244" pos:column="24"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="246" pos:column="3">__libc_rwlock_unlock<pos:position pos:line="246" pos:column="23"/></name> <argument_list pos:line="246" pos:column="24">(<argument><expr><name pos:line="246" pos:column="25">_nl_state_lock<pos:position pos:line="246" pos:column="39"/></name></expr></argument>)<pos:position pos:line="246" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="41"/></expr_stmt>
}<pos:position pos:line="247" pos:column="2"/></block></unit>

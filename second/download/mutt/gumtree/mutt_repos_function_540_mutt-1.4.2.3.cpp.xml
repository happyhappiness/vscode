<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_540_mutt-1.4.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_certificate_by_digest<pos:position pos:line="1" pos:column="39"/></name> <parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">X509<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">peercert<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">unsigned<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">char<pos:position pos:line="3" pos:column="16"/></name></type> <name><name pos:line="3" pos:column="17">peermd<pos:position pos:line="3" pos:column="23"/></name><index pos:line="3" pos:column="23">[<expr><name pos:line="3" pos:column="24">EVP_MAX_MD_SIZE<pos:position pos:line="3" pos:column="39"/></name></expr>]<pos:position pos:line="3" pos:column="40"/></index></name></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">unsigned<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">int<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">peermdlen<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">X509<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">cert<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><name pos:line="5" pos:column="16">NULL<pos:position pos:line="5" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">pass<pos:position pos:line="6" pos:column="11"/></name> <init pos:line="6" pos:column="12">= <expr><literal type="number" pos:line="6" pos:column="14">0<pos:position pos:line="6" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">FILE<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">fp<pos:position pos:line="7" pos:column="11"/></name></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* expiration check */</comment>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><call><name pos:line="10" pos:column="7">X509_cmp_current_time<pos:position pos:line="10" pos:column="28"/></name> <argument_list pos:line="10" pos:column="29">(<argument><expr><call><name pos:line="10" pos:column="30">X509_get_notBefore<pos:position pos:line="10" pos:column="48"/></name> <argument_list pos:line="10" pos:column="49">(<argument><expr><name pos:line="10" pos:column="50">peercert<pos:position pos:line="10" pos:column="58"/></name></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call> <operator pos:line="10" pos:column="61">&gt;=<pos:position pos:line="10" pos:column="66"/></operator> <literal type="number" pos:line="10" pos:column="64">0<pos:position pos:line="10" pos:column="65"/></literal></expr>)<pos:position pos:line="10" pos:column="66"/></condition><then pos:line="10" pos:column="66">
  <block pos:line="11" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">dprint<pos:position pos:line="12" pos:column="11"/></name> <argument_list pos:line="12" pos:column="12">(<argument><expr><literal type="number" pos:line="12" pos:column="13">2<pos:position pos:line="12" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="16">(<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">debugfile<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">,<pos:position pos:line="12" pos:column="27"/></operator> <literal type="string" pos:line="12" pos:column="28">"Server certificate is not yet valid\n"<pos:position pos:line="12" pos:column="67"/></literal><operator pos:line="12" pos:column="67">)<pos:position pos:line="12" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">mutt_error<pos:position pos:line="13" pos:column="15"/></name> <argument_list pos:line="13" pos:column="16">(<argument><expr><call><name pos:line="13" pos:column="17">_<pos:position pos:line="13" pos:column="18"/></name><argument_list pos:line="13" pos:column="18">(<argument><expr><literal type="string" pos:line="13" pos:column="19">"Server certificate is not yet valid"<pos:position pos:line="13" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">mutt_sleep<pos:position pos:line="14" pos:column="15"/></name> <argument_list pos:line="14" pos:column="16">(<argument><expr><literal type="number" pos:line="14" pos:column="17">2<pos:position pos:line="14" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="20"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><literal type="number" pos:line="15" pos:column="12">0<pos:position pos:line="15" pos:column="13"/></literal></expr>;<pos:position pos:line="15" pos:column="14"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><call><name pos:line="17" pos:column="7">X509_cmp_current_time<pos:position pos:line="17" pos:column="28"/></name> <argument_list pos:line="17" pos:column="29">(<argument><expr><call><name pos:line="17" pos:column="30">X509_get_notAfter<pos:position pos:line="17" pos:column="47"/></name> <argument_list pos:line="17" pos:column="48">(<argument><expr><name pos:line="17" pos:column="49">peercert<pos:position pos:line="17" pos:column="57"/></name></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="59"/></argument_list></call> <operator pos:line="17" pos:column="60">&lt;=<pos:position pos:line="17" pos:column="65"/></operator> <literal type="number" pos:line="17" pos:column="63">0<pos:position pos:line="17" pos:column="64"/></literal></expr>)<pos:position pos:line="17" pos:column="65"/></condition><then pos:line="17" pos:column="65">
  <block pos:line="18" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">dprint<pos:position pos:line="19" pos:column="11"/></name> <argument_list pos:line="19" pos:column="12">(<argument><expr><literal type="number" pos:line="19" pos:column="13">2<pos:position pos:line="19" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="16">(<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">debugfile<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">,<pos:position pos:line="19" pos:column="27"/></operator> <literal type="string" pos:line="19" pos:column="28">"Server certificate has expired"<pos:position pos:line="19" pos:column="60"/></literal><operator pos:line="19" pos:column="60">)<pos:position pos:line="19" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="19" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">mutt_error<pos:position pos:line="20" pos:column="15"/></name> <argument_list pos:line="20" pos:column="16">(<argument><expr><call><name pos:line="20" pos:column="17">_<pos:position pos:line="20" pos:column="18"/></name><argument_list pos:line="20" pos:column="18">(<argument><expr><literal type="string" pos:line="20" pos:column="19">"Server certificate has expired"<pos:position pos:line="20" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">mutt_sleep<pos:position pos:line="21" pos:column="15"/></name> <argument_list pos:line="21" pos:column="16">(<argument><expr><literal type="number" pos:line="21" pos:column="17">2<pos:position pos:line="21" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="20"/></expr_stmt>
    <return pos:line="22" pos:column="5">return <expr><literal type="number" pos:line="22" pos:column="12">0<pos:position pos:line="22" pos:column="13"/></literal></expr>;<pos:position pos:line="22" pos:column="14"/></return>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><operator pos:line="25" pos:column="7">(<pos:position pos:line="25" pos:column="8"/></operator><name pos:line="25" pos:column="8">fp<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">=<pos:position pos:line="25" pos:column="12"/></operator> <call><name pos:line="25" pos:column="13">fopen<pos:position pos:line="25" pos:column="18"/></name> <argument_list pos:line="25" pos:column="19">(<argument><expr><name pos:line="25" pos:column="20">SslCertFile<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="33">"rt"<pos:position pos:line="25" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="38"/></argument_list></call><operator pos:line="25" pos:column="38">)<pos:position pos:line="25" pos:column="39"/></operator> <operator pos:line="25" pos:column="40">==<pos:position pos:line="25" pos:column="42"/></operator> <name pos:line="25" pos:column="43">NULL<pos:position pos:line="25" pos:column="47"/></name></expr>)<pos:position pos:line="25" pos:column="48"/></condition><then pos:line="25" pos:column="48">
    <block type="pseudo"><return pos:line="26" pos:column="5">return <expr><literal type="number" pos:line="26" pos:column="12">0<pos:position pos:line="26" pos:column="13"/></literal></expr>;<pos:position pos:line="26" pos:column="14"/></return></block></then></if>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><operator pos:line="28" pos:column="7">!<pos:position pos:line="28" pos:column="8"/></operator><call><name pos:line="28" pos:column="8">X509_digest<pos:position pos:line="28" pos:column="19"/></name> <argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">peercert<pos:position pos:line="28" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="31">EVP_sha1<pos:position pos:line="28" pos:column="39"/></name><argument_list pos:line="28" pos:column="39">()<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="28" pos:column="43">peermd<pos:position pos:line="28" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="51">&amp;<pos:position pos:line="28" pos:column="56"/></operator><name pos:line="28" pos:column="52">peermdlen<pos:position pos:line="28" pos:column="61"/></name></expr></argument>)<pos:position pos:line="28" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="63"/></condition><then pos:line="28" pos:column="63">
  <block pos:line="29" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">fclose<pos:position pos:line="30" pos:column="11"/></name> <argument_list pos:line="30" pos:column="12">(<argument><expr><name pos:line="30" pos:column="13">fp<pos:position pos:line="30" pos:column="15"/></name></expr></argument>)<pos:position pos:line="30" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="17"/></expr_stmt>
    <return pos:line="31" pos:column="5">return <expr><literal type="number" pos:line="31" pos:column="12">0<pos:position pos:line="31" pos:column="13"/></literal></expr>;<pos:position pos:line="31" pos:column="14"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>
  
  <while pos:line="34" pos:column="3">while <condition pos:line="34" pos:column="9">(<expr><operator pos:line="34" pos:column="10">(<pos:position pos:line="34" pos:column="11"/></operator><name pos:line="34" pos:column="11">cert<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <call><name pos:line="34" pos:column="18">READ_X509_KEY<pos:position pos:line="34" pos:column="31"/></name> <argument_list pos:line="34" pos:column="32">(<argument><expr><name pos:line="34" pos:column="33">fp<pos:position pos:line="34" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="37">&amp;<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="38">cert<pos:position pos:line="34" pos:column="42"/></name></expr></argument>)<pos:position pos:line="34" pos:column="43"/></argument_list></call><operator pos:line="34" pos:column="43">)<pos:position pos:line="34" pos:column="44"/></operator> <operator pos:line="34" pos:column="45">!=<pos:position pos:line="34" pos:column="47"/></operator> <name pos:line="34" pos:column="48">NULL<pos:position pos:line="34" pos:column="52"/></name></expr>)<pos:position pos:line="34" pos:column="53"/></condition>
  <block pos:line="35" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="36" pos:column="5">unsigned<pos:position pos:line="36" pos:column="13"/></name> <name pos:line="36" pos:column="14">char<pos:position pos:line="36" pos:column="18"/></name></type> <name><name pos:line="36" pos:column="19">md<pos:position pos:line="36" pos:column="21"/></name><index pos:line="36" pos:column="21">[<expr><name pos:line="36" pos:column="22">EVP_MAX_MD_SIZE<pos:position pos:line="36" pos:column="37"/></name></expr>]<pos:position pos:line="36" pos:column="38"/></index></name></decl>;<pos:position pos:line="36" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="37" pos:column="5">unsigned<pos:position pos:line="37" pos:column="13"/></name> <name pos:line="37" pos:column="14">int<pos:position pos:line="37" pos:column="17"/></name></type> <name pos:line="37" pos:column="18">mdlen<pos:position pos:line="37" pos:column="23"/></name></decl>;<pos:position pos:line="37" pos:column="24"/></decl_stmt>

    <comment type="block" pos:line="39" pos:column="5">/* Avoid CPU-intensive digest calculation if the certificates are
     * not even remotely equal.
     */</comment>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><call><name pos:line="42" pos:column="9">X509_subject_name_cmp<pos:position pos:line="42" pos:column="30"/></name> <argument_list pos:line="42" pos:column="31">(<argument><expr><name pos:line="42" pos:column="32">cert<pos:position pos:line="42" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="38">peercert<pos:position pos:line="42" pos:column="46"/></name></expr></argument>)<pos:position pos:line="42" pos:column="47"/></argument_list></call> <operator pos:line="42" pos:column="48">!=<pos:position pos:line="42" pos:column="50"/></operator> <literal type="number" pos:line="42" pos:column="51">0<pos:position pos:line="42" pos:column="52"/></literal> <operator pos:line="42" pos:column="53">||<pos:position pos:line="42" pos:column="55"/></operator>
	<call><name pos:line="43" pos:column="9">X509_issuer_name_cmp<pos:position pos:line="43" pos:column="29"/></name> <argument_list pos:line="43" pos:column="30">(<argument><expr><name pos:line="43" pos:column="31">cert<pos:position pos:line="43" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="37">peercert<pos:position pos:line="43" pos:column="45"/></name></expr></argument>)<pos:position pos:line="43" pos:column="46"/></argument_list></call> <operator pos:line="43" pos:column="47">!=<pos:position pos:line="43" pos:column="49"/></operator> <literal type="number" pos:line="43" pos:column="50">0<pos:position pos:line="43" pos:column="51"/></literal></expr>)<pos:position pos:line="43" pos:column="52"/></condition><then pos:line="43" pos:column="52">
      <block type="pseudo"><continue pos:line="44" pos:column="7">continue;<pos:position pos:line="44" pos:column="16"/></continue></block></then></if>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><operator pos:line="46" pos:column="9">!<pos:position pos:line="46" pos:column="10"/></operator><call><name pos:line="46" pos:column="10">X509_digest<pos:position pos:line="46" pos:column="21"/></name> <argument_list pos:line="46" pos:column="22">(<argument><expr><name pos:line="46" pos:column="23">cert<pos:position pos:line="46" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="29">EVP_sha1<pos:position pos:line="46" pos:column="37"/></name><argument_list pos:line="46" pos:column="37">()<pos:position pos:line="46" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="46" pos:column="41">md<pos:position pos:line="46" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="45">&amp;<pos:position pos:line="46" pos:column="50"/></operator><name pos:line="46" pos:column="46">mdlen<pos:position pos:line="46" pos:column="51"/></name></expr></argument>)<pos:position pos:line="46" pos:column="52"/></argument_list></call> <operator pos:line="46" pos:column="53">||<pos:position pos:line="46" pos:column="55"/></operator> <name pos:line="46" pos:column="56">peermdlen<pos:position pos:line="46" pos:column="65"/></name> <operator pos:line="46" pos:column="66">!=<pos:position pos:line="46" pos:column="68"/></operator> <name pos:line="46" pos:column="69">mdlen<pos:position pos:line="46" pos:column="74"/></name></expr>)<pos:position pos:line="46" pos:column="75"/></condition><then pos:line="46" pos:column="75">
      <block type="pseudo"><continue pos:line="47" pos:column="7">continue;<pos:position pos:line="47" pos:column="16"/></continue></block></then></if>
    
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><call><name pos:line="49" pos:column="9">memcmp<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><name pos:line="49" pos:column="16">peermd<pos:position pos:line="49" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="24">md<pos:position pos:line="49" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="28">mdlen<pos:position pos:line="49" pos:column="33"/></name></expr></argument>)<pos:position pos:line="49" pos:column="34"/></argument_list></call> <operator pos:line="49" pos:column="35">!=<pos:position pos:line="49" pos:column="37"/></operator> <literal type="number" pos:line="49" pos:column="38">0<pos:position pos:line="49" pos:column="39"/></literal></expr>)<pos:position pos:line="49" pos:column="40"/></condition><then pos:line="49" pos:column="40">
      <block type="pseudo"><continue pos:line="50" pos:column="7">continue;<pos:position pos:line="50" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="52" pos:column="5">pass<pos:position pos:line="52" pos:column="9"/></name> <operator pos:line="52" pos:column="10">=<pos:position pos:line="52" pos:column="11"/></operator> <literal type="number" pos:line="52" pos:column="12">1<pos:position pos:line="52" pos:column="13"/></literal></expr>;<pos:position pos:line="52" pos:column="14"/></expr_stmt>
    <break pos:line="53" pos:column="5">break;<pos:position pos:line="53" pos:column="11"/></break>
  }<pos:position pos:line="54" pos:column="4"/></block></while>
  <expr_stmt><expr><call><name pos:line="55" pos:column="3">X509_free<pos:position pos:line="55" pos:column="12"/></name> <argument_list pos:line="55" pos:column="13">(<argument><expr><name pos:line="55" pos:column="14">cert<pos:position pos:line="55" pos:column="18"/></name></expr></argument>)<pos:position pos:line="55" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="56" pos:column="3">fclose<pos:position pos:line="56" pos:column="9"/></name> <argument_list pos:line="56" pos:column="10">(<argument><expr><name pos:line="56" pos:column="11">fp<pos:position pos:line="56" pos:column="13"/></name></expr></argument>)<pos:position pos:line="56" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="15"/></expr_stmt>

  <return pos:line="58" pos:column="3">return <expr><name pos:line="58" pos:column="10">pass<pos:position pos:line="58" pos:column="14"/></name></expr>;<pos:position pos:line="58" pos:column="15"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

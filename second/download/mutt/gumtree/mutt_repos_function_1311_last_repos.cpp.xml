<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1311_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">mutt_invoke_sendmail<pos:position pos:line="2" pos:column="21"/></name> <parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">ADDRESS<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">from<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>,	<comment type="block" pos:line="2" pos:column="41">/* the sender */</comment>
		 <parameter><decl><type><name pos:line="3" pos:column="18">ADDRESS<pos:position pos:line="3" pos:column="25"/></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">to<pos:position pos:line="3" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="31">ADDRESS<pos:position pos:line="3" pos:column="38"/></name> <modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier></type><name pos:line="3" pos:column="40">cc<pos:position pos:line="3" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="44">ADDRESS<pos:position pos:line="3" pos:column="51"/></name> <modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier></type><name pos:line="3" pos:column="53">bcc<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>, <comment type="block" pos:line="3" pos:column="58">/* recips */</comment>
		 <parameter><decl><type><specifier pos:line="4" pos:column="18">const<pos:position pos:line="4" pos:column="23"/></specifier> <name pos:line="4" pos:column="24">char<pos:position pos:line="4" pos:column="28"/></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">msg<pos:position pos:line="4" pos:column="33"/></name></decl></parameter>, <comment type="block" pos:line="4" pos:column="35">/* file containing message */</comment>
		 <parameter><decl><type><name pos:line="5" pos:column="18">int<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">eightbit<pos:position pos:line="5" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="31"/></parameter_list> <comment type="block" pos:line="5" pos:column="32">/* message contains 8bit chars */</comment>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">ps<pos:position pos:line="7" pos:column="11"/></name> <init pos:line="7" pos:column="12">= <expr><name pos:line="7" pos:column="14">NULL<pos:position pos:line="7" pos:column="18"/></name></expr></init></decl>, <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="21">path<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><name pos:line="7" pos:column="28">NULL<pos:position pos:line="7" pos:column="32"/></name></expr></init></decl>, <modifier pos:line="7" pos:column="34">*<pos:position pos:line="7" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="35">s<pos:position pos:line="7" pos:column="36"/></name> <init pos:line="7" pos:column="37">= <expr><call><name pos:line="7" pos:column="39">safe_strdup<pos:position pos:line="7" pos:column="50"/></name> <argument_list pos:line="7" pos:column="51">(<argument><expr><name pos:line="7" pos:column="52">Sendmail<pos:position pos:line="7" pos:column="60"/></name></expr></argument>)<pos:position pos:line="7" pos:column="61"/></argument_list></call></expr></init></decl>, <modifier pos:line="7" pos:column="63">*<pos:position pos:line="7" pos:column="64"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="64">childout<pos:position pos:line="7" pos:column="72"/></name> <init pos:line="7" pos:column="73">= <expr><name pos:line="7" pos:column="75">NULL<pos:position pos:line="7" pos:column="79"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="80"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier><modifier pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></modifier></type><name pos:line="8" pos:column="10">args<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><name pos:line="8" pos:column="17">NULL<pos:position pos:line="8" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">argslen<pos:position pos:line="9" pos:column="17"/></name> <init pos:line="9" pos:column="18">= <expr><literal type="number" pos:line="9" pos:column="20">0<pos:position pos:line="9" pos:column="21"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="23">argsmax<pos:position pos:line="9" pos:column="30"/></name> <init pos:line="9" pos:column="31">= <expr><literal type="number" pos:line="9" pos:column="33">0<pos:position pos:line="9" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier><modifier pos:line="10" pos:column="9">*<pos:position pos:line="10" pos:column="10"/></modifier></type><name pos:line="10" pos:column="10">extra_args<pos:position pos:line="10" pos:column="20"/></name> <init pos:line="10" pos:column="21">= <expr><name pos:line="10" pos:column="23">NULL<pos:position pos:line="10" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">size_t<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">extra_argslen<pos:position pos:line="11" pos:column="23"/></name> <init pos:line="11" pos:column="24">= <expr><literal type="number" pos:line="11" pos:column="26">0<pos:position pos:line="11" pos:column="27"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="29">extra_argsmax<pos:position pos:line="11" pos:column="42"/></name> <init pos:line="11" pos:column="43">= <expr><literal type="number" pos:line="11" pos:column="45">0<pos:position pos:line="11" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="47"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">i<pos:position pos:line="12" pos:column="8"/></name></decl>;<pos:position pos:line="12" pos:column="9"/></decl_stmt>

  <comment type="block" pos:line="14" pos:column="3">/* ensure that $sendmail is set to avoid a crash. http://dev.mutt.org/trac/ticket/3548 */</comment>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><operator pos:line="15" pos:column="7">!<pos:position pos:line="15" pos:column="8"/></operator><name pos:line="15" pos:column="8">s<pos:position pos:line="15" pos:column="9"/></name></expr>)<pos:position pos:line="15" pos:column="10"/></condition><then pos:line="15" pos:column="10">
  <block pos:line="16" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">mutt_error<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><call><name pos:line="17" pos:column="16">_<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">(<argument><expr><literal type="string" pos:line="17" pos:column="18">"$sendmail must be set in order to send mail."<pos:position pos:line="17" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="67"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">-<pos:position pos:line="18" pos:column="13"/></operator><literal type="number" pos:line="18" pos:column="13">1<pos:position pos:line="18" pos:column="14"/></literal></expr>;<pos:position pos:line="18" pos:column="15"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="21" pos:column="3">ps<pos:position pos:line="21" pos:column="5"/></name> <operator pos:line="21" pos:column="6">=<pos:position pos:line="21" pos:column="7"/></operator> <name pos:line="21" pos:column="8">s<pos:position pos:line="21" pos:column="9"/></name></expr>;<pos:position pos:line="21" pos:column="10"/></expr_stmt>
  <expr_stmt><expr><name pos:line="22" pos:column="3">i<pos:position pos:line="22" pos:column="4"/></name> <operator pos:line="22" pos:column="5">=<pos:position pos:line="22" pos:column="6"/></operator> <literal type="number" pos:line="22" pos:column="7">0<pos:position pos:line="22" pos:column="8"/></literal></expr>;<pos:position pos:line="22" pos:column="9"/></expr_stmt>
  <while pos:line="23" pos:column="3">while <condition pos:line="23" pos:column="9">(<expr><operator pos:line="23" pos:column="10">(<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="11">ps<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <call><name pos:line="23" pos:column="16">strtok<pos:position pos:line="23" pos:column="22"/></name> <argument_list pos:line="23" pos:column="23">(<argument><expr><name pos:line="23" pos:column="24">ps<pos:position pos:line="23" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="28">" "<pos:position pos:line="23" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="32"/></argument_list></call><operator pos:line="23" pos:column="32">)<pos:position pos:line="23" pos:column="33"/></operator></expr>)<pos:position pos:line="23" pos:column="34"/></condition>
  <block pos:line="24" pos:column="3">{
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">argslen<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">==<pos:position pos:line="25" pos:column="19"/></operator> <name pos:line="25" pos:column="20">argsmax<pos:position pos:line="25" pos:column="27"/></name></expr>)<pos:position pos:line="25" pos:column="28"/></condition><then pos:line="25" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="7">safe_realloc<pos:position pos:line="26" pos:column="19"/></name> <argument_list pos:line="26" pos:column="20">(<argument><expr><operator pos:line="26" pos:column="21">&amp;<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="22">args<pos:position pos:line="26" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="28">sizeof <argument_list pos:line="26" pos:column="35">(<argument><expr><name pos:line="26" pos:column="36">char<pos:position pos:line="26" pos:column="40"/></name> <operator pos:line="26" pos:column="41">*<pos:position pos:line="26" pos:column="42"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="43"/></argument_list></sizeof> <operator pos:line="26" pos:column="44">*<pos:position pos:line="26" pos:column="45"/></operator> <operator pos:line="26" pos:column="46">(<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="47">argsmax<pos:position pos:line="26" pos:column="54"/></name> <operator pos:line="26" pos:column="55">+=<pos:position pos:line="26" pos:column="57"/></operator> <literal type="number" pos:line="26" pos:column="58">5<pos:position pos:line="26" pos:column="59"/></literal><operator pos:line="26" pos:column="59">)<pos:position pos:line="26" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="62"/></expr_stmt></block></then></if>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">i<pos:position pos:line="28" pos:column="10"/></name></expr>)<pos:position pos:line="28" pos:column="11"/></condition><then pos:line="28" pos:column="11">
    <block pos:line="29" pos:column="5">{
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><operator pos:line="30" pos:column="11">!<pos:position pos:line="30" pos:column="12"/></operator><call><name pos:line="30" pos:column="12">mutt_strcmp<pos:position pos:line="30" pos:column="23"/></name> <argument_list pos:line="30" pos:column="24">(<argument><expr><name pos:line="30" pos:column="25">ps<pos:position pos:line="30" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="29">"--"<pos:position pos:line="30" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="35"/></condition><then pos:line="30" pos:column="35">
        <block type="pseudo"><break pos:line="31" pos:column="9">break;<pos:position pos:line="31" pos:column="15"/></break></block></then></if>
      <expr_stmt><expr><name><name pos:line="32" pos:column="7">args<pos:position pos:line="32" pos:column="11"/></name><index pos:line="32" pos:column="11">[<expr><name pos:line="32" pos:column="12">argslen<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">++<pos:position pos:line="32" pos:column="21"/></operator></expr>]<pos:position pos:line="32" pos:column="22"/></index></name> <operator pos:line="32" pos:column="23">=<pos:position pos:line="32" pos:column="24"/></operator> <name pos:line="32" pos:column="25">ps<pos:position pos:line="32" pos:column="27"/></name></expr>;<pos:position pos:line="32" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then>
    <else pos:line="34" pos:column="5">else
    <block pos:line="35" pos:column="5">{
      <expr_stmt><expr><name pos:line="36" pos:column="7">path<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <call><name pos:line="36" pos:column="14">safe_strdup<pos:position pos:line="36" pos:column="25"/></name> <argument_list pos:line="36" pos:column="26">(<argument><expr><name pos:line="36" pos:column="27">ps<pos:position pos:line="36" pos:column="29"/></name></expr></argument>)<pos:position pos:line="36" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name pos:line="37" pos:column="7">ps<pos:position pos:line="37" pos:column="9"/></name> <operator pos:line="37" pos:column="10">=<pos:position pos:line="37" pos:column="11"/></operator> <call><name pos:line="37" pos:column="12">strrchr<pos:position pos:line="37" pos:column="19"/></name> <argument_list pos:line="37" pos:column="20">(<argument><expr><name pos:line="37" pos:column="21">ps<pos:position pos:line="37" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="37" pos:column="25">'/'<pos:position pos:line="37" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="30"/></expr_stmt>
      <if pos:line="38" pos:column="7">if <condition pos:line="38" pos:column="10">(<expr><name pos:line="38" pos:column="11">ps<pos:position pos:line="38" pos:column="13"/></name></expr>)<pos:position pos:line="38" pos:column="14"/></condition><then pos:line="38" pos:column="14">
	<block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="9">ps<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">++<pos:position pos:line="39" pos:column="13"/></operator></expr>;<pos:position pos:line="39" pos:column="14"/></expr_stmt></block></then>
      <else pos:line="40" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="9">ps<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">=<pos:position pos:line="41" pos:column="13"/></operator> <name pos:line="41" pos:column="14">path<pos:position pos:line="41" pos:column="18"/></name></expr>;<pos:position pos:line="41" pos:column="19"/></expr_stmt></block></else></if>
      <expr_stmt><expr><name><name pos:line="42" pos:column="7">args<pos:position pos:line="42" pos:column="11"/></name><index pos:line="42" pos:column="11">[<expr><name pos:line="42" pos:column="12">argslen<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">++<pos:position pos:line="42" pos:column="21"/></operator></expr>]<pos:position pos:line="42" pos:column="22"/></index></name> <operator pos:line="42" pos:column="23">=<pos:position pos:line="42" pos:column="24"/></operator> <name pos:line="42" pos:column="25">ps<pos:position pos:line="42" pos:column="27"/></name></expr>;<pos:position pos:line="42" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="44" pos:column="5">ps<pos:position pos:line="44" pos:column="7"/></name> <operator pos:line="44" pos:column="8">=<pos:position pos:line="44" pos:column="9"/></operator> <name pos:line="44" pos:column="10">NULL<pos:position pos:line="44" pos:column="14"/></name></expr>;<pos:position pos:line="44" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="45" pos:column="5">i<pos:position pos:line="45" pos:column="6"/></name><operator pos:line="45" pos:column="6">++<pos:position pos:line="45" pos:column="8"/></operator></expr>;<pos:position pos:line="45" pos:column="9"/></expr_stmt>
  }<pos:position pos:line="46" pos:column="4"/></block></while>

  <comment type="block" pos:line="48" pos:column="3">/* If Sendmail contained a "--", we save the recipients to append to
   * args after other possible options added below. */</comment>
  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><name pos:line="50" pos:column="7">ps<pos:position pos:line="50" pos:column="9"/></name></expr>)<pos:position pos:line="50" pos:column="10"/></condition><then pos:line="50" pos:column="10">
  <block pos:line="51" pos:column="3">{
    <expr_stmt><expr><name pos:line="52" pos:column="5">ps<pos:position pos:line="52" pos:column="7"/></name> <operator pos:line="52" pos:column="8">=<pos:position pos:line="52" pos:column="9"/></operator> <name pos:line="52" pos:column="10">NULL<pos:position pos:line="52" pos:column="14"/></name></expr>;<pos:position pos:line="52" pos:column="15"/></expr_stmt>
    <while pos:line="53" pos:column="5">while <condition pos:line="53" pos:column="11">(<expr><operator pos:line="53" pos:column="12">(<pos:position pos:line="53" pos:column="13"/></operator><name pos:line="53" pos:column="13">ps<pos:position pos:line="53" pos:column="15"/></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <call><name pos:line="53" pos:column="18">strtok<pos:position pos:line="53" pos:column="24"/></name> <argument_list pos:line="53" pos:column="25">(<argument><expr><name pos:line="53" pos:column="26">ps<pos:position pos:line="53" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="30">" "<pos:position pos:line="53" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="34"/></argument_list></call><operator pos:line="53" pos:column="34">)<pos:position pos:line="53" pos:column="35"/></operator></expr>)<pos:position pos:line="53" pos:column="36"/></condition>
    <block pos:line="54" pos:column="5">{
      <if pos:line="55" pos:column="7">if <condition pos:line="55" pos:column="10">(<expr><name pos:line="55" pos:column="11">extra_argslen<pos:position pos:line="55" pos:column="24"/></name> <operator pos:line="55" pos:column="25">==<pos:position pos:line="55" pos:column="27"/></operator> <name pos:line="55" pos:column="28">extra_argsmax<pos:position pos:line="55" pos:column="41"/></name></expr>)<pos:position pos:line="55" pos:column="42"/></condition><then pos:line="55" pos:column="42">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="9">safe_realloc<pos:position pos:line="56" pos:column="21"/></name> <argument_list pos:line="56" pos:column="22">(<argument><expr><operator pos:line="56" pos:column="23">&amp;<pos:position pos:line="56" pos:column="28"/></operator><name pos:line="56" pos:column="24">extra_args<pos:position pos:line="56" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="56" pos:column="36">sizeof <argument_list pos:line="56" pos:column="43">(<argument><expr><name pos:line="56" pos:column="44">char<pos:position pos:line="56" pos:column="48"/></name> <operator pos:line="56" pos:column="49">*<pos:position pos:line="56" pos:column="50"/></operator></expr></argument>)<pos:position pos:line="56" pos:column="51"/></argument_list></sizeof> <operator pos:line="56" pos:column="52">*<pos:position pos:line="56" pos:column="53"/></operator> <operator pos:line="56" pos:column="54">(<pos:position pos:line="56" pos:column="55"/></operator><name pos:line="56" pos:column="55">extra_argsmax<pos:position pos:line="56" pos:column="68"/></name> <operator pos:line="56" pos:column="69">+=<pos:position pos:line="56" pos:column="71"/></operator> <literal type="number" pos:line="56" pos:column="72">5<pos:position pos:line="56" pos:column="73"/></literal><operator pos:line="56" pos:column="73">)<pos:position pos:line="56" pos:column="74"/></operator></expr></argument>)<pos:position pos:line="56" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="76"/></expr_stmt></block></then></if>

      <expr_stmt><expr><name><name pos:line="58" pos:column="7">extra_args<pos:position pos:line="58" pos:column="17"/></name><index pos:line="58" pos:column="17">[<expr><name pos:line="58" pos:column="18">extra_argslen<pos:position pos:line="58" pos:column="31"/></name><operator pos:line="58" pos:column="31">++<pos:position pos:line="58" pos:column="33"/></operator></expr>]<pos:position pos:line="58" pos:column="34"/></index></name> <operator pos:line="58" pos:column="35">=<pos:position pos:line="58" pos:column="36"/></operator> <name pos:line="58" pos:column="37">ps<pos:position pos:line="58" pos:column="39"/></name></expr>;<pos:position pos:line="58" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name pos:line="59" pos:column="7">ps<pos:position pos:line="59" pos:column="9"/></name> <operator pos:line="59" pos:column="10">=<pos:position pos:line="59" pos:column="11"/></operator> <name pos:line="59" pos:column="12">NULL<pos:position pos:line="59" pos:column="16"/></name></expr>;<pos:position pos:line="59" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></while>
  }<pos:position pos:line="61" pos:column="4"/></block></then></if>

  <if pos:line="63" pos:column="3">if <condition pos:line="63" pos:column="6">(<expr><name pos:line="63" pos:column="7">eightbit<pos:position pos:line="63" pos:column="15"/></name> <operator pos:line="63" pos:column="16">&amp;&amp;<pos:position pos:line="63" pos:column="26"/></operator> <call><name pos:line="63" pos:column="19">option<pos:position pos:line="63" pos:column="25"/></name> <argument_list pos:line="63" pos:column="26">(<argument><expr><name pos:line="63" pos:column="27">OPTUSE8BITMIME<pos:position pos:line="63" pos:column="41"/></name></expr></argument>)<pos:position pos:line="63" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="43"/></condition><then pos:line="63" pos:column="43">
    <block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="5">args<pos:position pos:line="64" pos:column="9"/></name> <operator pos:line="64" pos:column="10">=<pos:position pos:line="64" pos:column="11"/></operator> <call><name pos:line="64" pos:column="12">add_option<pos:position pos:line="64" pos:column="22"/></name> <argument_list pos:line="64" pos:column="23">(<argument><expr><name pos:line="64" pos:column="24">args<pos:position pos:line="64" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="30">&amp;<pos:position pos:line="64" pos:column="35"/></operator><name pos:line="64" pos:column="31">argslen<pos:position pos:line="64" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="40">&amp;<pos:position pos:line="64" pos:column="45"/></operator><name pos:line="64" pos:column="41">argsmax<pos:position pos:line="64" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="50">"-B8BITMIME"<pos:position pos:line="64" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="64"/></expr_stmt></block></then></if>

  <if pos:line="66" pos:column="3">if <condition pos:line="66" pos:column="6">(<expr><call><name pos:line="66" pos:column="7">option<pos:position pos:line="66" pos:column="13"/></name> <argument_list pos:line="66" pos:column="14">(<argument><expr><name pos:line="66" pos:column="15">OPTENVFROM<pos:position pos:line="66" pos:column="25"/></name></expr></argument>)<pos:position pos:line="66" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="27"/></condition><then pos:line="66" pos:column="27">
  <block pos:line="67" pos:column="3">{
    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><name pos:line="68" pos:column="9">EnvFrom<pos:position pos:line="68" pos:column="16"/></name></expr>)<pos:position pos:line="68" pos:column="17"/></condition><then pos:line="68" pos:column="17">
    <block pos:line="69" pos:column="5">{
      <expr_stmt><expr><name pos:line="70" pos:column="7">args<pos:position pos:line="70" pos:column="11"/></name> <operator pos:line="70" pos:column="12">=<pos:position pos:line="70" pos:column="13"/></operator> <call><name pos:line="70" pos:column="14">add_option<pos:position pos:line="70" pos:column="24"/></name> <argument_list pos:line="70" pos:column="25">(<argument><expr><name pos:line="70" pos:column="26">args<pos:position pos:line="70" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="32">&amp;<pos:position pos:line="70" pos:column="37"/></operator><name pos:line="70" pos:column="33">argslen<pos:position pos:line="70" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="42">&amp;<pos:position pos:line="70" pos:column="47"/></operator><name pos:line="70" pos:column="43">argsmax<pos:position pos:line="70" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="52">"-f"<pos:position pos:line="70" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><name pos:line="71" pos:column="7">args<pos:position pos:line="71" pos:column="11"/></name> <operator pos:line="71" pos:column="12">=<pos:position pos:line="71" pos:column="13"/></operator> <call><name pos:line="71" pos:column="14">add_args<pos:position pos:line="71" pos:column="22"/></name>   <argument_list pos:line="71" pos:column="25">(<argument><expr><name pos:line="71" pos:column="26">args<pos:position pos:line="71" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="32">&amp;<pos:position pos:line="71" pos:column="37"/></operator><name pos:line="71" pos:column="33">argslen<pos:position pos:line="71" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="42">&amp;<pos:position pos:line="71" pos:column="47"/></operator><name pos:line="71" pos:column="43">argsmax<pos:position pos:line="71" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="52">EnvFrom<pos:position pos:line="71" pos:column="59"/></name></expr></argument>)<pos:position pos:line="71" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="72" pos:column="6"/></block></then>
    <elseif pos:line="73" pos:column="5">else <if pos:line="73" pos:column="10">if <condition pos:line="73" pos:column="13">(<expr><name pos:line="73" pos:column="14">from<pos:position pos:line="73" pos:column="18"/></name> <operator pos:line="73" pos:column="19">&amp;&amp;<pos:position pos:line="73" pos:column="29"/></operator> <operator pos:line="73" pos:column="22">!<pos:position pos:line="73" pos:column="23"/></operator><name><name pos:line="73" pos:column="23">from<pos:position pos:line="73" pos:column="27"/></name><operator pos:line="73" pos:column="27">-&gt;<pos:position pos:line="73" pos:column="32"/></operator><name pos:line="73" pos:column="29">next<pos:position pos:line="73" pos:column="33"/></name></name></expr>)<pos:position pos:line="73" pos:column="34"/></condition><then pos:line="73" pos:column="34">
    <block pos:line="74" pos:column="5">{
      <expr_stmt><expr><name pos:line="75" pos:column="7">args<pos:position pos:line="75" pos:column="11"/></name> <operator pos:line="75" pos:column="12">=<pos:position pos:line="75" pos:column="13"/></operator> <call><name pos:line="75" pos:column="14">add_option<pos:position pos:line="75" pos:column="24"/></name> <argument_list pos:line="75" pos:column="25">(<argument><expr><name pos:line="75" pos:column="26">args<pos:position pos:line="75" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="32">&amp;<pos:position pos:line="75" pos:column="37"/></operator><name pos:line="75" pos:column="33">argslen<pos:position pos:line="75" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="42">&amp;<pos:position pos:line="75" pos:column="47"/></operator><name pos:line="75" pos:column="43">argsmax<pos:position pos:line="75" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="52">"-f"<pos:position pos:line="75" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><name pos:line="76" pos:column="7">args<pos:position pos:line="76" pos:column="11"/></name> <operator pos:line="76" pos:column="12">=<pos:position pos:line="76" pos:column="13"/></operator> <call><name pos:line="76" pos:column="14">add_args<pos:position pos:line="76" pos:column="22"/></name>   <argument_list pos:line="76" pos:column="25">(<argument><expr><name pos:line="76" pos:column="26">args<pos:position pos:line="76" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="32">&amp;<pos:position pos:line="76" pos:column="37"/></operator><name pos:line="76" pos:column="33">argslen<pos:position pos:line="76" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="42">&amp;<pos:position pos:line="76" pos:column="47"/></operator><name pos:line="76" pos:column="43">argsmax<pos:position pos:line="76" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="52">from<pos:position pos:line="76" pos:column="56"/></name></expr></argument>)<pos:position pos:line="76" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="78" pos:column="4"/></block></then></if>

  <if pos:line="80" pos:column="3">if <condition pos:line="80" pos:column="6">(<expr><name pos:line="80" pos:column="7">DsnNotify<pos:position pos:line="80" pos:column="16"/></name></expr>)<pos:position pos:line="80" pos:column="17"/></condition><then pos:line="80" pos:column="17">
  <block pos:line="81" pos:column="3">{
    <expr_stmt><expr><name pos:line="82" pos:column="5">args<pos:position pos:line="82" pos:column="9"/></name> <operator pos:line="82" pos:column="10">=<pos:position pos:line="82" pos:column="11"/></operator> <call><name pos:line="82" pos:column="12">add_option<pos:position pos:line="82" pos:column="22"/></name> <argument_list pos:line="82" pos:column="23">(<argument><expr><name pos:line="82" pos:column="24">args<pos:position pos:line="82" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="30">&amp;<pos:position pos:line="82" pos:column="35"/></operator><name pos:line="82" pos:column="31">argslen<pos:position pos:line="82" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="40">&amp;<pos:position pos:line="82" pos:column="45"/></operator><name pos:line="82" pos:column="41">argsmax<pos:position pos:line="82" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="50">"-N"<pos:position pos:line="82" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name pos:line="83" pos:column="5">args<pos:position pos:line="83" pos:column="9"/></name> <operator pos:line="83" pos:column="10">=<pos:position pos:line="83" pos:column="11"/></operator> <call><name pos:line="83" pos:column="12">add_option<pos:position pos:line="83" pos:column="22"/></name> <argument_list pos:line="83" pos:column="23">(<argument><expr><name pos:line="83" pos:column="24">args<pos:position pos:line="83" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="30">&amp;<pos:position pos:line="83" pos:column="35"/></operator><name pos:line="83" pos:column="31">argslen<pos:position pos:line="83" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="40">&amp;<pos:position pos:line="83" pos:column="45"/></operator><name pos:line="83" pos:column="41">argsmax<pos:position pos:line="83" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="50">DsnNotify<pos:position pos:line="83" pos:column="59"/></name></expr></argument>)<pos:position pos:line="83" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="61"/></expr_stmt>
  }<pos:position pos:line="84" pos:column="4"/></block></then></if>
  <if pos:line="85" pos:column="3">if <condition pos:line="85" pos:column="6">(<expr><name pos:line="85" pos:column="7">DsnReturn<pos:position pos:line="85" pos:column="16"/></name></expr>)<pos:position pos:line="85" pos:column="17"/></condition><then pos:line="85" pos:column="17">
  <block pos:line="86" pos:column="3">{
    <expr_stmt><expr><name pos:line="87" pos:column="5">args<pos:position pos:line="87" pos:column="9"/></name> <operator pos:line="87" pos:column="10">=<pos:position pos:line="87" pos:column="11"/></operator> <call><name pos:line="87" pos:column="12">add_option<pos:position pos:line="87" pos:column="22"/></name> <argument_list pos:line="87" pos:column="23">(<argument><expr><name pos:line="87" pos:column="24">args<pos:position pos:line="87" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="87" pos:column="30">&amp;<pos:position pos:line="87" pos:column="35"/></operator><name pos:line="87" pos:column="31">argslen<pos:position pos:line="87" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="87" pos:column="40">&amp;<pos:position pos:line="87" pos:column="45"/></operator><name pos:line="87" pos:column="41">argsmax<pos:position pos:line="87" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="50">"-R"<pos:position pos:line="87" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name pos:line="88" pos:column="5">args<pos:position pos:line="88" pos:column="9"/></name> <operator pos:line="88" pos:column="10">=<pos:position pos:line="88" pos:column="11"/></operator> <call><name pos:line="88" pos:column="12">add_option<pos:position pos:line="88" pos:column="22"/></name> <argument_list pos:line="88" pos:column="23">(<argument><expr><name pos:line="88" pos:column="24">args<pos:position pos:line="88" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="30">&amp;<pos:position pos:line="88" pos:column="35"/></operator><name pos:line="88" pos:column="31">argslen<pos:position pos:line="88" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="40">&amp;<pos:position pos:line="88" pos:column="45"/></operator><name pos:line="88" pos:column="41">argsmax<pos:position pos:line="88" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="50">DsnReturn<pos:position pos:line="88" pos:column="59"/></name></expr></argument>)<pos:position pos:line="88" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="61"/></expr_stmt>
  }<pos:position pos:line="89" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="90" pos:column="3">args<pos:position pos:line="90" pos:column="7"/></name> <operator pos:line="90" pos:column="8">=<pos:position pos:line="90" pos:column="9"/></operator> <call><name pos:line="90" pos:column="10">add_option<pos:position pos:line="90" pos:column="20"/></name> <argument_list pos:line="90" pos:column="21">(<argument><expr><name pos:line="90" pos:column="22">args<pos:position pos:line="90" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="28">&amp;<pos:position pos:line="90" pos:column="33"/></operator><name pos:line="90" pos:column="29">argslen<pos:position pos:line="90" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="38">&amp;<pos:position pos:line="90" pos:column="43"/></operator><name pos:line="90" pos:column="39">argsmax<pos:position pos:line="90" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="48">"--"<pos:position pos:line="90" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="54"/></expr_stmt>
  <for pos:line="91" pos:column="3">for <control pos:line="91" pos:column="7">(<init><expr><name pos:line="91" pos:column="8">i<pos:position pos:line="91" pos:column="9"/></name> <operator pos:line="91" pos:column="10">=<pos:position pos:line="91" pos:column="11"/></operator> <literal type="number" pos:line="91" pos:column="12">0<pos:position pos:line="91" pos:column="13"/></literal></expr>;<pos:position pos:line="91" pos:column="14"/></init> <condition><expr><name pos:line="91" pos:column="15">i<pos:position pos:line="91" pos:column="16"/></name> <operator pos:line="91" pos:column="17">&lt;<pos:position pos:line="91" pos:column="21"/></operator> <name pos:line="91" pos:column="19">extra_argslen<pos:position pos:line="91" pos:column="32"/></name></expr>;<pos:position pos:line="91" pos:column="33"/></condition> <incr><expr><name pos:line="91" pos:column="34">i<pos:position pos:line="91" pos:column="35"/></name><operator pos:line="91" pos:column="35">++<pos:position pos:line="91" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="91" pos:column="38"/></control>
    <block type="pseudo"><expr_stmt><expr><name pos:line="92" pos:column="5">args<pos:position pos:line="92" pos:column="9"/></name> <operator pos:line="92" pos:column="10">=<pos:position pos:line="92" pos:column="11"/></operator> <call><name pos:line="92" pos:column="12">add_option<pos:position pos:line="92" pos:column="22"/></name> <argument_list pos:line="92" pos:column="23">(<argument><expr><name pos:line="92" pos:column="24">args<pos:position pos:line="92" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="92" pos:column="30">&amp;<pos:position pos:line="92" pos:column="35"/></operator><name pos:line="92" pos:column="31">argslen<pos:position pos:line="92" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="92" pos:column="40">&amp;<pos:position pos:line="92" pos:column="45"/></operator><name pos:line="92" pos:column="41">argsmax<pos:position pos:line="92" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="50">extra_args<pos:position pos:line="92" pos:column="60"/></name><index pos:line="92" pos:column="60">[<expr><name pos:line="92" pos:column="61">i<pos:position pos:line="92" pos:column="62"/></name></expr>]<pos:position pos:line="92" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="92" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="65"/></expr_stmt></block></for>
  <expr_stmt><expr><name pos:line="93" pos:column="3">args<pos:position pos:line="93" pos:column="7"/></name> <operator pos:line="93" pos:column="8">=<pos:position pos:line="93" pos:column="9"/></operator> <call><name pos:line="93" pos:column="10">add_args<pos:position pos:line="93" pos:column="18"/></name> <argument_list pos:line="93" pos:column="19">(<argument><expr><name pos:line="93" pos:column="20">args<pos:position pos:line="93" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="93" pos:column="26">&amp;<pos:position pos:line="93" pos:column="31"/></operator><name pos:line="93" pos:column="27">argslen<pos:position pos:line="93" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="93" pos:column="36">&amp;<pos:position pos:line="93" pos:column="41"/></operator><name pos:line="93" pos:column="37">argsmax<pos:position pos:line="93" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="46">to<pos:position pos:line="93" pos:column="48"/></name></expr></argument>)<pos:position pos:line="93" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><name pos:line="94" pos:column="3">args<pos:position pos:line="94" pos:column="7"/></name> <operator pos:line="94" pos:column="8">=<pos:position pos:line="94" pos:column="9"/></operator> <call><name pos:line="94" pos:column="10">add_args<pos:position pos:line="94" pos:column="18"/></name> <argument_list pos:line="94" pos:column="19">(<argument><expr><name pos:line="94" pos:column="20">args<pos:position pos:line="94" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="94" pos:column="26">&amp;<pos:position pos:line="94" pos:column="31"/></operator><name pos:line="94" pos:column="27">argslen<pos:position pos:line="94" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="94" pos:column="36">&amp;<pos:position pos:line="94" pos:column="41"/></operator><name pos:line="94" pos:column="37">argsmax<pos:position pos:line="94" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="46">cc<pos:position pos:line="94" pos:column="48"/></name></expr></argument>)<pos:position pos:line="94" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><name pos:line="95" pos:column="3">args<pos:position pos:line="95" pos:column="7"/></name> <operator pos:line="95" pos:column="8">=<pos:position pos:line="95" pos:column="9"/></operator> <call><name pos:line="95" pos:column="10">add_args<pos:position pos:line="95" pos:column="18"/></name> <argument_list pos:line="95" pos:column="19">(<argument><expr><name pos:line="95" pos:column="20">args<pos:position pos:line="95" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="95" pos:column="26">&amp;<pos:position pos:line="95" pos:column="31"/></operator><name pos:line="95" pos:column="27">argslen<pos:position pos:line="95" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="95" pos:column="36">&amp;<pos:position pos:line="95" pos:column="41"/></operator><name pos:line="95" pos:column="37">argsmax<pos:position pos:line="95" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="46">bcc<pos:position pos:line="95" pos:column="49"/></name></expr></argument>)<pos:position pos:line="95" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="51"/></expr_stmt>

  <if pos:line="97" pos:column="3">if <condition pos:line="97" pos:column="6">(<expr><name pos:line="97" pos:column="7">argslen<pos:position pos:line="97" pos:column="14"/></name> <operator pos:line="97" pos:column="15">==<pos:position pos:line="97" pos:column="17"/></operator> <name pos:line="97" pos:column="18">argsmax<pos:position pos:line="97" pos:column="25"/></name></expr>)<pos:position pos:line="97" pos:column="26"/></condition><then pos:line="97" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="98" pos:column="5">safe_realloc<pos:position pos:line="98" pos:column="17"/></name> <argument_list pos:line="98" pos:column="18">(<argument><expr><operator pos:line="98" pos:column="19">&amp;<pos:position pos:line="98" pos:column="24"/></operator><name pos:line="98" pos:column="20">args<pos:position pos:line="98" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="98" pos:column="26">sizeof <argument_list pos:line="98" pos:column="33">(<argument><expr><name pos:line="98" pos:column="34">char<pos:position pos:line="98" pos:column="38"/></name> <operator pos:line="98" pos:column="39">*<pos:position pos:line="98" pos:column="40"/></operator></expr></argument>)<pos:position pos:line="98" pos:column="41"/></argument_list></sizeof> <operator pos:line="98" pos:column="42">*<pos:position pos:line="98" pos:column="43"/></operator> <operator pos:line="98" pos:column="44">(<pos:position pos:line="98" pos:column="45"/></operator><operator pos:line="98" pos:column="45">++<pos:position pos:line="98" pos:column="47"/></operator><name pos:line="98" pos:column="47">argsmax<pos:position pos:line="98" pos:column="54"/></name><operator pos:line="98" pos:column="54">)<pos:position pos:line="98" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="98" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="57"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name><name pos:line="100" pos:column="3">args<pos:position pos:line="100" pos:column="7"/></name><index pos:line="100" pos:column="7">[<expr><name pos:line="100" pos:column="8">argslen<pos:position pos:line="100" pos:column="15"/></name><operator pos:line="100" pos:column="15">++<pos:position pos:line="100" pos:column="17"/></operator></expr>]<pos:position pos:line="100" pos:column="18"/></index></name> <operator pos:line="100" pos:column="19">=<pos:position pos:line="100" pos:column="20"/></operator> <name pos:line="100" pos:column="21">NULL<pos:position pos:line="100" pos:column="25"/></name></expr>;<pos:position pos:line="100" pos:column="26"/></expr_stmt>

  <comment type="block" pos:line="102" pos:column="3">/* Some user's $sendmail command uses gpg for password decryption,
   * and is set up to prompt using ncurses pinentry.  If we
   * mutt_endwin() it leaves other users staring at a blank screen.
   * So instead, just force a hard redraw on the next refresh. */</comment>
  <if pos:line="106" pos:column="3">if <condition pos:line="106" pos:column="6">(<expr><operator pos:line="106" pos:column="7">!<pos:position pos:line="106" pos:column="8"/></operator><call><name pos:line="106" pos:column="8">option<pos:position pos:line="106" pos:column="14"/></name> <argument_list pos:line="106" pos:column="15">(<argument><expr><name pos:line="106" pos:column="16">OPTNOCURSES<pos:position pos:line="106" pos:column="27"/></name></expr></argument>)<pos:position pos:line="106" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="106" pos:column="29"/></condition><then pos:line="106" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="107" pos:column="5">mutt_need_hard_redraw<pos:position pos:line="107" pos:column="26"/></name> <argument_list pos:line="107" pos:column="27">()<pos:position pos:line="107" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="30"/></expr_stmt></block></then></if>

  <if pos:line="109" pos:column="3">if <condition pos:line="109" pos:column="6">(<expr><operator pos:line="109" pos:column="7">(<pos:position pos:line="109" pos:column="8"/></operator><name pos:line="109" pos:column="8">i<pos:position pos:line="109" pos:column="9"/></name> <operator pos:line="109" pos:column="10">=<pos:position pos:line="109" pos:column="11"/></operator> <call><name pos:line="109" pos:column="12">send_msg<pos:position pos:line="109" pos:column="20"/></name> <argument_list pos:line="109" pos:column="21">(<argument><expr><name pos:line="109" pos:column="22">path<pos:position pos:line="109" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="28">args<pos:position pos:line="109" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="34">msg<pos:position pos:line="109" pos:column="37"/></name></expr></argument>, <argument><expr><ternary><condition><expr><call><name pos:line="109" pos:column="39">option<pos:position pos:line="109" pos:column="45"/></name><argument_list pos:line="109" pos:column="45">(<argument><expr><name pos:line="109" pos:column="46">OPTNOCURSES<pos:position pos:line="109" pos:column="57"/></name></expr></argument>)<pos:position pos:line="109" pos:column="58"/></argument_list></call></expr> ?<pos:position pos:line="109" pos:column="60"/></condition><then pos:line="109" pos:column="60"> <expr><name pos:line="109" pos:column="61">NULL<pos:position pos:line="109" pos:column="65"/></name></expr> <pos:position pos:line="109" pos:column="66"/></then><else pos:line="109" pos:column="66">: <expr><operator pos:line="109" pos:column="68">&amp;<pos:position pos:line="109" pos:column="73"/></operator><name pos:line="109" pos:column="69">childout<pos:position pos:line="109" pos:column="77"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="109" pos:column="78"/></argument_list></call><operator pos:line="109" pos:column="78">)<pos:position pos:line="109" pos:column="79"/></operator> <operator pos:line="109" pos:column="80">!=<pos:position pos:line="109" pos:column="82"/></operator> <operator pos:line="109" pos:column="83">(<pos:position pos:line="109" pos:column="84"/></operator><name pos:line="109" pos:column="84">EX_OK<pos:position pos:line="109" pos:column="89"/></name> <operator pos:line="109" pos:column="90">&amp;<pos:position pos:line="109" pos:column="95"/></operator> <literal type="number" pos:line="109" pos:column="92">0xff<pos:position pos:line="109" pos:column="96"/></literal><operator pos:line="109" pos:column="96">)<pos:position pos:line="109" pos:column="97"/></operator></expr>)<pos:position pos:line="109" pos:column="98"/></condition><then pos:line="109" pos:column="98">
  <block pos:line="110" pos:column="3">{
    <if pos:line="111" pos:column="5">if <condition pos:line="111" pos:column="8">(<expr><name pos:line="111" pos:column="9">i<pos:position pos:line="111" pos:column="10"/></name> <operator pos:line="111" pos:column="11">!=<pos:position pos:line="111" pos:column="13"/></operator> <name pos:line="111" pos:column="14">S_BKG<pos:position pos:line="111" pos:column="19"/></name></expr>)<pos:position pos:line="111" pos:column="20"/></condition><then pos:line="111" pos:column="20">
    <block pos:line="112" pos:column="5">{
      <decl_stmt><decl><type><specifier pos:line="113" pos:column="7">const<pos:position pos:line="113" pos:column="12"/></specifier> <name pos:line="113" pos:column="13">char<pos:position pos:line="113" pos:column="17"/></name> <modifier pos:line="113" pos:column="18">*<pos:position pos:line="113" pos:column="19"/></modifier></type><name pos:line="113" pos:column="19">e<pos:position pos:line="113" pos:column="20"/></name></decl>;<pos:position pos:line="113" pos:column="21"/></decl_stmt>

      <expr_stmt><expr><name pos:line="115" pos:column="7">e<pos:position pos:line="115" pos:column="8"/></name> <operator pos:line="115" pos:column="9">=<pos:position pos:line="115" pos:column="10"/></operator> <call><name pos:line="115" pos:column="11">mutt_strsysexit<pos:position pos:line="115" pos:column="26"/></name> <argument_list pos:line="115" pos:column="27">(<argument><expr><name pos:line="115" pos:column="28">i<pos:position pos:line="115" pos:column="29"/></name></expr></argument>)<pos:position pos:line="115" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="116" pos:column="7">mutt_error<pos:position pos:line="116" pos:column="17"/></name> <argument_list pos:line="116" pos:column="18">(<argument><expr><call><name pos:line="116" pos:column="19">_<pos:position pos:line="116" pos:column="20"/></name><argument_list pos:line="116" pos:column="20">(<argument><expr><literal type="string" pos:line="116" pos:column="21">"Error sending message, child exited %d (%s)."<pos:position pos:line="116" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="116" pos:column="70">i<pos:position pos:line="116" pos:column="71"/></name></expr></argument>, <argument><expr><call><name pos:line="116" pos:column="73">NONULL<pos:position pos:line="116" pos:column="79"/></name> <argument_list pos:line="116" pos:column="80">(<argument><expr><name pos:line="116" pos:column="81">e<pos:position pos:line="116" pos:column="82"/></name></expr></argument>)<pos:position pos:line="116" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="116" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="85"/></expr_stmt>
      <if pos:line="117" pos:column="7">if <condition pos:line="117" pos:column="10">(<expr><name pos:line="117" pos:column="11">childout<pos:position pos:line="117" pos:column="19"/></name></expr>)<pos:position pos:line="117" pos:column="20"/></condition><then pos:line="117" pos:column="20">
      <block pos:line="118" pos:column="7">{
	<decl_stmt><decl><type><name><name pos:line="119" pos:column="9">struct<pos:position pos:line="119" pos:column="15"/></name> <name pos:line="119" pos:column="16">stat<pos:position pos:line="119" pos:column="20"/></name></name></type> <name pos:line="119" pos:column="21">st<pos:position pos:line="119" pos:column="23"/></name></decl>;<pos:position pos:line="119" pos:column="24"/></decl_stmt>

	<if pos:line="121" pos:column="9">if <condition pos:line="121" pos:column="12">(<expr><call><name pos:line="121" pos:column="13">stat<pos:position pos:line="121" pos:column="17"/></name> <argument_list pos:line="121" pos:column="18">(<argument><expr><name pos:line="121" pos:column="19">childout<pos:position pos:line="121" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="121" pos:column="29">&amp;<pos:position pos:line="121" pos:column="34"/></operator><name pos:line="121" pos:column="30">st<pos:position pos:line="121" pos:column="32"/></name></expr></argument>)<pos:position pos:line="121" pos:column="33"/></argument_list></call> <operator pos:line="121" pos:column="34">==<pos:position pos:line="121" pos:column="36"/></operator> <literal type="number" pos:line="121" pos:column="37">0<pos:position pos:line="121" pos:column="38"/></literal> <operator pos:line="121" pos:column="39">&amp;&amp;<pos:position pos:line="121" pos:column="49"/></operator> <name><name pos:line="121" pos:column="42">st<pos:position pos:line="121" pos:column="44"/></name><operator pos:line="121" pos:column="44">.<pos:position pos:line="121" pos:column="45"/></operator><name pos:line="121" pos:column="45">st_size<pos:position pos:line="121" pos:column="52"/></name></name> <operator pos:line="121" pos:column="53">&gt;<pos:position pos:line="121" pos:column="57"/></operator> <literal type="number" pos:line="121" pos:column="55">0<pos:position pos:line="121" pos:column="56"/></literal></expr>)<pos:position pos:line="121" pos:column="57"/></condition><then pos:line="121" pos:column="57">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="122" pos:column="11">mutt_do_pager<pos:position pos:line="122" pos:column="24"/></name> <argument_list pos:line="122" pos:column="25">(<argument><expr><call><name pos:line="122" pos:column="26">_<pos:position pos:line="122" pos:column="27"/></name><argument_list pos:line="122" pos:column="27">(<argument><expr><literal type="string" pos:line="122" pos:column="28">"Output of the delivery process"<pos:position pos:line="122" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="122" pos:column="63">childout<pos:position pos:line="122" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="122" pos:column="73">0<pos:position pos:line="122" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="122" pos:column="76">NULL<pos:position pos:line="122" pos:column="80"/></name></expr></argument>)<pos:position pos:line="122" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="82"/></expr_stmt></block></then></if>
      }<pos:position pos:line="123" pos:column="8"/></block></then></if>
    }<pos:position pos:line="124" pos:column="6"/></block></then></if>
  }<pos:position pos:line="125" pos:column="4"/></block></then>
  <elseif pos:line="126" pos:column="3">else <if pos:line="126" pos:column="8">if <condition pos:line="126" pos:column="11">(<expr><name pos:line="126" pos:column="12">childout<pos:position pos:line="126" pos:column="20"/></name></expr>)<pos:position pos:line="126" pos:column="21"/></condition><then pos:line="126" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="127" pos:column="5">unlink<pos:position pos:line="127" pos:column="11"/></name> <argument_list pos:line="127" pos:column="12">(<argument><expr><name pos:line="127" pos:column="13">childout<pos:position pos:line="127" pos:column="21"/></name></expr></argument>)<pos:position pos:line="127" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="23"/></expr_stmt></block></then></if></elseif></if>

  <expr_stmt><expr><call><name pos:line="129" pos:column="3">FREE<pos:position pos:line="129" pos:column="7"/></name> <argument_list pos:line="129" pos:column="8">(<argument><expr><operator pos:line="129" pos:column="9">&amp;<pos:position pos:line="129" pos:column="14"/></operator><name pos:line="129" pos:column="10">childout<pos:position pos:line="129" pos:column="18"/></name></expr></argument>)<pos:position pos:line="129" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="130" pos:column="3">FREE<pos:position pos:line="130" pos:column="7"/></name> <argument_list pos:line="130" pos:column="8">(<argument><expr><operator pos:line="130" pos:column="9">&amp;<pos:position pos:line="130" pos:column="14"/></operator><name pos:line="130" pos:column="10">path<pos:position pos:line="130" pos:column="14"/></name></expr></argument>)<pos:position pos:line="130" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="131" pos:column="3">FREE<pos:position pos:line="131" pos:column="7"/></name> <argument_list pos:line="131" pos:column="8">(<argument><expr><operator pos:line="131" pos:column="9">&amp;<pos:position pos:line="131" pos:column="14"/></operator><name pos:line="131" pos:column="10">s<pos:position pos:line="131" pos:column="11"/></name></expr></argument>)<pos:position pos:line="131" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="132" pos:column="3">FREE<pos:position pos:line="132" pos:column="7"/></name> <argument_list pos:line="132" pos:column="8">(<argument><expr><operator pos:line="132" pos:column="9">&amp;<pos:position pos:line="132" pos:column="14"/></operator><name pos:line="132" pos:column="10">args<pos:position pos:line="132" pos:column="14"/></name></expr></argument>)<pos:position pos:line="132" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="133" pos:column="3">FREE<pos:position pos:line="133" pos:column="7"/></name> <argument_list pos:line="133" pos:column="8">(<argument><expr><operator pos:line="133" pos:column="9">&amp;<pos:position pos:line="133" pos:column="14"/></operator><name pos:line="133" pos:column="10">extra_args<pos:position pos:line="133" pos:column="20"/></name></expr></argument>)<pos:position pos:line="133" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="22"/></expr_stmt>

  <if pos:line="135" pos:column="3">if <condition pos:line="135" pos:column="6">(<expr><name pos:line="135" pos:column="7">i<pos:position pos:line="135" pos:column="8"/></name> <operator pos:line="135" pos:column="9">==<pos:position pos:line="135" pos:column="11"/></operator> <operator pos:line="135" pos:column="12">(<pos:position pos:line="135" pos:column="13"/></operator><name pos:line="135" pos:column="13">EX_OK<pos:position pos:line="135" pos:column="18"/></name> <operator pos:line="135" pos:column="19">&amp;<pos:position pos:line="135" pos:column="24"/></operator> <literal type="number" pos:line="135" pos:column="21">0xff<pos:position pos:line="135" pos:column="25"/></literal><operator pos:line="135" pos:column="25">)<pos:position pos:line="135" pos:column="26"/></operator></expr>)<pos:position pos:line="135" pos:column="27"/></condition><then pos:line="135" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name pos:line="136" pos:column="5">i<pos:position pos:line="136" pos:column="6"/></name> <operator pos:line="136" pos:column="7">=<pos:position pos:line="136" pos:column="8"/></operator> <literal type="number" pos:line="136" pos:column="9">0<pos:position pos:line="136" pos:column="10"/></literal></expr>;<pos:position pos:line="136" pos:column="11"/></expr_stmt></block></then>
  <elseif pos:line="137" pos:column="3">else <if pos:line="137" pos:column="8">if <condition pos:line="137" pos:column="11">(<expr><name pos:line="137" pos:column="12">i<pos:position pos:line="137" pos:column="13"/></name> <operator pos:line="137" pos:column="14">==<pos:position pos:line="137" pos:column="16"/></operator> <name pos:line="137" pos:column="17">S_BKG<pos:position pos:line="137" pos:column="22"/></name></expr>)<pos:position pos:line="137" pos:column="23"/></condition><then pos:line="137" pos:column="23">
    <block type="pseudo"><expr_stmt><expr><name pos:line="138" pos:column="5">i<pos:position pos:line="138" pos:column="6"/></name> <operator pos:line="138" pos:column="7">=<pos:position pos:line="138" pos:column="8"/></operator> <literal type="number" pos:line="138" pos:column="9">1<pos:position pos:line="138" pos:column="10"/></literal></expr>;<pos:position pos:line="138" pos:column="11"/></expr_stmt></block></then></if></elseif>
  <else pos:line="139" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="140" pos:column="5">i<pos:position pos:line="140" pos:column="6"/></name> <operator pos:line="140" pos:column="7">=<pos:position pos:line="140" pos:column="8"/></operator> <operator pos:line="140" pos:column="9">-<pos:position pos:line="140" pos:column="10"/></operator><literal type="number" pos:line="140" pos:column="10">1<pos:position pos:line="140" pos:column="11"/></literal></expr>;<pos:position pos:line="140" pos:column="12"/></expr_stmt></block></else></if>
  <return pos:line="141" pos:column="3">return <expr><operator pos:line="141" pos:column="10">(<pos:position pos:line="141" pos:column="11"/></operator><name pos:line="141" pos:column="11">i<pos:position pos:line="141" pos:column="12"/></name><operator pos:line="141" pos:column="12">)<pos:position pos:line="141" pos:column="13"/></operator></expr>;<pos:position pos:line="141" pos:column="14"/></return>
}<pos:position pos:line="142" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_280_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_parse_hook<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">BUFFER<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">buf<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">BUFFER<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">s<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">unsigned<pos:position pos:line="1" pos:column="54"/></name> <name pos:line="1" pos:column="55">long<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">data<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">BUFFER<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">err<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">HOOK<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">ptr<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">BUFFER<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">command<pos:position pos:line="4" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="19">pattern<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">rc<pos:position pos:line="5" pos:column="9"/></name></decl>, not <init pos:line="5" pos:column="15">= <expr><literal type="number" pos:line="5" pos:column="17">0<pos:position pos:line="5" pos:column="18"/></literal></expr></init>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">regex_t<pos:position pos:line="6" pos:column="10"/></name> <modifier pos:line="6" pos:column="11">*<pos:position pos:line="6" pos:column="12"/></modifier></type><name pos:line="6" pos:column="12">rx<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><name pos:line="6" pos:column="17">NULL<pos:position pos:line="6" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">pattern_t<pos:position pos:line="7" pos:column="12"/></name> <modifier pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></modifier></type><name pos:line="7" pos:column="14">pat<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><name pos:line="7" pos:column="20">NULL<pos:position pos:line="7" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">path<pos:position pos:line="8" pos:column="12"/></name><index pos:line="8" pos:column="12">[<expr><name pos:line="8" pos:column="13">_POSIX_PATH_MAX<pos:position pos:line="8" pos:column="28"/></name></expr>]<pos:position pos:line="8" pos:column="29"/></index></name></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">mutt_buffer_init<pos:position pos:line="10" pos:column="19"/></name> <argument_list pos:line="10" pos:column="20">(<argument><expr><operator pos:line="10" pos:column="21">&amp;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="22">pattern<pos:position pos:line="10" pos:column="29"/></name></expr></argument>)<pos:position pos:line="10" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">mutt_buffer_init<pos:position pos:line="11" pos:column="19"/></name> <argument_list pos:line="11" pos:column="20">(<argument><expr><operator pos:line="11" pos:column="21">&amp;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="22">command<pos:position pos:line="11" pos:column="29"/></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><operator pos:line="13" pos:column="7">*<pos:position pos:line="13" pos:column="8"/></operator><name><name pos:line="13" pos:column="8">s<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">-&gt;<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="11">dptr<pos:position pos:line="13" pos:column="15"/></name></name> <operator pos:line="13" pos:column="16">==<pos:position pos:line="13" pos:column="18"/></operator> <literal type="char" pos:line="13" pos:column="19">'!'<pos:position pos:line="13" pos:column="22"/></literal></expr>)<pos:position pos:line="13" pos:column="23"/></condition><then pos:line="13" pos:column="23">
  <block pos:line="14" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">s<pos:position pos:line="15" pos:column="6"/></name><operator pos:line="15" pos:column="6">-&gt;<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="8">dptr<pos:position pos:line="15" pos:column="12"/></name></name><operator pos:line="15" pos:column="12">++<pos:position pos:line="15" pos:column="14"/></operator></expr>;<pos:position pos:line="15" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">SKIPWS<pos:position pos:line="16" pos:column="11"/></name> <argument_list pos:line="16" pos:column="12">(<argument><expr><name><name pos:line="16" pos:column="13">s<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">-&gt;<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="16">dptr<pos:position pos:line="16" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="17" pos:column="5">not<pos:position pos:line="17" pos:column="8"/></operator> <operator pos:line="17" pos:column="9">=<pos:position pos:line="17" pos:column="10"/></operator> <literal type="number" pos:line="17" pos:column="11">1<pos:position pos:line="17" pos:column="12"/></literal></expr>;<pos:position pos:line="17" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">mutt_extract_token<pos:position pos:line="20" pos:column="21"/></name> <argument_list pos:line="20" pos:column="22">(<argument><expr><operator pos:line="20" pos:column="23">&amp;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="24">pattern<pos:position pos:line="20" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="33">s<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="36">0<pos:position pos:line="20" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><operator pos:line="22" pos:column="7">!<pos:position pos:line="22" pos:column="8"/></operator><call><name pos:line="22" pos:column="8">MoreArgs<pos:position pos:line="22" pos:column="16"/></name> <argument_list pos:line="22" pos:column="17">(<argument><expr><name pos:line="22" pos:column="18">s<pos:position pos:line="22" pos:column="19"/></name></expr></argument>)<pos:position pos:line="22" pos:column="20"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="21"/></condition><then pos:line="22" pos:column="21">
  <block pos:line="23" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">strfcpy<pos:position pos:line="24" pos:column="12"/></name> <argument_list pos:line="24" pos:column="13">(<argument><expr><name><name pos:line="24" pos:column="14">err<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">-&gt;<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="19">data<pos:position pos:line="24" pos:column="23"/></name></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="25">_<pos:position pos:line="24" pos:column="26"/></name><argument_list pos:line="24" pos:column="26">(<argument><expr><literal type="string" pos:line="24" pos:column="27">"too few arguments"<pos:position pos:line="24" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="49">err<pos:position pos:line="24" pos:column="52"/></name><operator pos:line="24" pos:column="52">-&gt;<pos:position pos:line="24" pos:column="57"/></operator><name pos:line="24" pos:column="54">dsize<pos:position pos:line="24" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="61"/></expr_stmt>
    <goto pos:line="25" pos:column="5">goto <name pos:line="25" pos:column="10">error<pos:position pos:line="25" pos:column="15"/></name>;<pos:position pos:line="25" pos:column="16"/></goto>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="28" pos:column="3">mutt_extract_token<pos:position pos:line="28" pos:column="21"/></name> <argument_list pos:line="28" pos:column="22">(<argument><expr><operator pos:line="28" pos:column="23">&amp;<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="24">command<pos:position pos:line="28" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="33">s<pos:position pos:line="28" pos:column="34"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="28" pos:column="36">(<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="37">data<pos:position pos:line="28" pos:column="41"/></name> <operator pos:line="28" pos:column="42">&amp;<pos:position pos:line="28" pos:column="47"/></operator> <operator pos:line="28" pos:column="44">(<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="45">MUTT_FOLDERHOOK<pos:position pos:line="28" pos:column="60"/></name> <operator pos:line="28" pos:column="61">|<pos:position pos:line="28" pos:column="62"/></operator> <name pos:line="28" pos:column="63">MUTT_SENDHOOK<pos:position pos:line="28" pos:column="76"/></name> <operator pos:line="28" pos:column="77">|<pos:position pos:line="28" pos:column="78"/></operator> <name pos:line="28" pos:column="79">MUTT_SEND2HOOK<pos:position pos:line="28" pos:column="93"/></name> <operator pos:line="28" pos:column="94">|<pos:position pos:line="28" pos:column="95"/></operator> <name pos:line="28" pos:column="96">MUTT_ACCOUNTHOOK<pos:position pos:line="28" pos:column="112"/></name> <operator pos:line="28" pos:column="113">|<pos:position pos:line="28" pos:column="114"/></operator> <name pos:line="28" pos:column="115">MUTT_REPLYHOOK<pos:position pos:line="28" pos:column="129"/></name><operator pos:line="28" pos:column="129">)<pos:position pos:line="28" pos:column="130"/></operator><operator pos:line="28" pos:column="130">)<pos:position pos:line="28" pos:column="131"/></operator></expr> ?<pos:position pos:line="28" pos:column="133"/></condition><then pos:line="28" pos:column="133">  <expr><name pos:line="28" pos:column="135">MUTT_TOKEN_SPACE<pos:position pos:line="28" pos:column="151"/></name></expr> <pos:position pos:line="28" pos:column="152"/></then><else pos:line="28" pos:column="152">: <expr><literal type="number" pos:line="28" pos:column="154">0<pos:position pos:line="28" pos:column="155"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="28" pos:column="156"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="157"/></expr_stmt>

  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><operator pos:line="30" pos:column="7">!<pos:position pos:line="30" pos:column="8"/></operator><name><name pos:line="30" pos:column="8">command<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">.<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="16">data<pos:position pos:line="30" pos:column="20"/></name></name></expr>)<pos:position pos:line="30" pos:column="21"/></condition><then pos:line="30" pos:column="21">
  <block pos:line="31" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">strfcpy<pos:position pos:line="32" pos:column="12"/></name> <argument_list pos:line="32" pos:column="13">(<argument><expr><name><name pos:line="32" pos:column="14">err<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">-&gt;<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="19">data<pos:position pos:line="32" pos:column="23"/></name></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="25">_<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><literal type="string" pos:line="32" pos:column="27">"too few arguments"<pos:position pos:line="32" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="49">err<pos:position pos:line="32" pos:column="52"/></name><operator pos:line="32" pos:column="52">-&gt;<pos:position pos:line="32" pos:column="57"/></operator><name pos:line="32" pos:column="54">dsize<pos:position pos:line="32" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="61"/></expr_stmt>
    <goto pos:line="33" pos:column="5">goto <name pos:line="33" pos:column="10">error<pos:position pos:line="33" pos:column="15"/></name>;<pos:position pos:line="33" pos:column="16"/></goto>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>

  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><call><name pos:line="36" pos:column="7">MoreArgs<pos:position pos:line="36" pos:column="15"/></name> <argument_list pos:line="36" pos:column="16">(<argument><expr><name pos:line="36" pos:column="17">s<pos:position pos:line="36" pos:column="18"/></name></expr></argument>)<pos:position pos:line="36" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="20"/></condition><then pos:line="36" pos:column="20">
  <block pos:line="37" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">strfcpy<pos:position pos:line="38" pos:column="12"/></name> <argument_list pos:line="38" pos:column="13">(<argument><expr><name><name pos:line="38" pos:column="14">err<pos:position pos:line="38" pos:column="17"/></name><operator pos:line="38" pos:column="17">-&gt;<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="19">data<pos:position pos:line="38" pos:column="23"/></name></name></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="25">_<pos:position pos:line="38" pos:column="26"/></name><argument_list pos:line="38" pos:column="26">(<argument><expr><literal type="string" pos:line="38" pos:column="27">"too many arguments"<pos:position pos:line="38" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="50">err<pos:position pos:line="38" pos:column="53"/></name><operator pos:line="38" pos:column="53">-&gt;<pos:position pos:line="38" pos:column="58"/></operator><name pos:line="38" pos:column="55">dsize<pos:position pos:line="38" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="62"/></expr_stmt>
    <goto pos:line="39" pos:column="5">goto <name pos:line="39" pos:column="10">error<pos:position pos:line="39" pos:column="15"/></name>;<pos:position pos:line="39" pos:column="16"/></goto>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>

  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><name pos:line="42" pos:column="7">data<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">&amp;<pos:position pos:line="42" pos:column="17"/></operator> <operator pos:line="42" pos:column="14">(<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="15">MUTT_FOLDERHOOK<pos:position pos:line="42" pos:column="30"/></name> <operator pos:line="42" pos:column="31">|<pos:position pos:line="42" pos:column="32"/></operator> <name pos:line="42" pos:column="33">MUTT_MBOXHOOK<pos:position pos:line="42" pos:column="46"/></name><operator pos:line="42" pos:column="46">)<pos:position pos:line="42" pos:column="47"/></operator></expr>)<pos:position pos:line="42" pos:column="48"/></condition><then pos:line="42" pos:column="48">
  <block pos:line="43" pos:column="3">{
    <comment type="block" pos:line="44" pos:column="5">/* Accidentally using the ^ mailbox shortcut in the .muttrc is a
     * common mistake */</comment>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><operator pos:line="46" pos:column="9">(<pos:position pos:line="46" pos:column="10"/></operator><operator pos:line="46" pos:column="10">*<pos:position pos:line="46" pos:column="11"/></operator><name><name pos:line="46" pos:column="11">pattern<pos:position pos:line="46" pos:column="18"/></name><operator pos:line="46" pos:column="18">.<pos:position pos:line="46" pos:column="19"/></operator><name pos:line="46" pos:column="19">data<pos:position pos:line="46" pos:column="23"/></name></name> <operator pos:line="46" pos:column="24">==<pos:position pos:line="46" pos:column="26"/></operator> <literal type="char" pos:line="46" pos:column="27">'^'<pos:position pos:line="46" pos:column="30"/></literal><operator pos:line="46" pos:column="30">)<pos:position pos:line="46" pos:column="31"/></operator> <operator pos:line="46" pos:column="32">&amp;&amp;<pos:position pos:line="46" pos:column="42"/></operator> <operator pos:line="46" pos:column="35">(<pos:position pos:line="46" pos:column="36"/></operator><operator pos:line="46" pos:column="36">!<pos:position pos:line="46" pos:column="37"/></operator> <name pos:line="46" pos:column="38">CurrentFolder<pos:position pos:line="46" pos:column="51"/></name><operator pos:line="46" pos:column="51">)<pos:position pos:line="46" pos:column="52"/></operator></expr>)<pos:position pos:line="46" pos:column="53"/></condition><then pos:line="46" pos:column="53">
    <block pos:line="47" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="48" pos:column="7">strfcpy<pos:position pos:line="48" pos:column="14"/></name> <argument_list pos:line="48" pos:column="15">(<argument><expr><name><name pos:line="48" pos:column="16">err<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">-&gt;<pos:position pos:line="48" pos:column="24"/></operator><name pos:line="48" pos:column="21">data<pos:position pos:line="48" pos:column="25"/></name></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="27">_<pos:position pos:line="48" pos:column="28"/></name><argument_list pos:line="48" pos:column="28">(<argument><expr><literal type="string" pos:line="48" pos:column="29">"current mailbox shortcut '^' is unset"<pos:position pos:line="48" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="71">err<pos:position pos:line="48" pos:column="74"/></name><operator pos:line="48" pos:column="74">-&gt;<pos:position pos:line="48" pos:column="79"/></operator><name pos:line="48" pos:column="76">dsize<pos:position pos:line="48" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="83"/></expr_stmt>
      <goto pos:line="49" pos:column="7">goto <name pos:line="49" pos:column="12">error<pos:position pos:line="49" pos:column="17"/></name>;<pos:position pos:line="49" pos:column="18"/></goto>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="52" pos:column="5">strfcpy<pos:position pos:line="52" pos:column="12"/></name> <argument_list pos:line="52" pos:column="13">(<argument><expr><name pos:line="52" pos:column="14">path<pos:position pos:line="52" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="20">pattern<pos:position pos:line="52" pos:column="27"/></name><operator pos:line="52" pos:column="27">.<pos:position pos:line="52" pos:column="28"/></operator><name pos:line="52" pos:column="28">data<pos:position pos:line="52" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="52" pos:column="34">sizeof <argument_list pos:line="52" pos:column="41">(<argument><expr><name pos:line="52" pos:column="42">path<pos:position pos:line="52" pos:column="46"/></name></expr></argument>)<pos:position pos:line="52" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="52" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">_mutt_expand_path<pos:position pos:line="53" pos:column="22"/></name> <argument_list pos:line="53" pos:column="23">(<argument><expr><name pos:line="53" pos:column="24">path<pos:position pos:line="53" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="53" pos:column="30">sizeof <argument_list pos:line="53" pos:column="37">(<argument><expr><name pos:line="53" pos:column="38">path<pos:position pos:line="53" pos:column="42"/></name></expr></argument>)<pos:position pos:line="53" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="45">1<pos:position pos:line="53" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="48"/></expr_stmt>

    <comment type="block" pos:line="55" pos:column="5">/* Check for other mailbox shortcuts that expand to the empty string.
     * This is likely a mistake too */</comment>
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><operator pos:line="57" pos:column="9">!<pos:position pos:line="57" pos:column="10"/></operator><operator pos:line="57" pos:column="10">*<pos:position pos:line="57" pos:column="11"/></operator><name pos:line="57" pos:column="11">path<pos:position pos:line="57" pos:column="15"/></name> <operator pos:line="57" pos:column="16">&amp;&amp;<pos:position pos:line="57" pos:column="26"/></operator> <operator pos:line="57" pos:column="19">*<pos:position pos:line="57" pos:column="20"/></operator><name><name pos:line="57" pos:column="20">pattern<pos:position pos:line="57" pos:column="27"/></name><operator pos:line="57" pos:column="27">.<pos:position pos:line="57" pos:column="28"/></operator><name pos:line="57" pos:column="28">data<pos:position pos:line="57" pos:column="32"/></name></name></expr>)<pos:position pos:line="57" pos:column="33"/></condition><then pos:line="57" pos:column="33">
    <block pos:line="58" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="59" pos:column="7">strfcpy<pos:position pos:line="59" pos:column="14"/></name> <argument_list pos:line="59" pos:column="15">(<argument><expr><name><name pos:line="59" pos:column="16">err<pos:position pos:line="59" pos:column="19"/></name><operator pos:line="59" pos:column="19">-&gt;<pos:position pos:line="59" pos:column="24"/></operator><name pos:line="59" pos:column="21">data<pos:position pos:line="59" pos:column="25"/></name></name></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="27">_<pos:position pos:line="59" pos:column="28"/></name><argument_list pos:line="59" pos:column="28">(<argument><expr><literal type="string" pos:line="59" pos:column="29">"mailbox shortcut expanded to empty regexp"<pos:position pos:line="59" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="73"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="75">err<pos:position pos:line="59" pos:column="78"/></name><operator pos:line="59" pos:column="78">-&gt;<pos:position pos:line="59" pos:column="83"/></operator><name pos:line="59" pos:column="80">dsize<pos:position pos:line="59" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="87"/></expr_stmt>
      <goto pos:line="60" pos:column="7">goto <name pos:line="60" pos:column="12">error<pos:position pos:line="60" pos:column="17"/></name>;<pos:position pos:line="60" pos:column="18"/></goto>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="63" pos:column="5">FREE<pos:position pos:line="63" pos:column="9"/></name> <argument_list pos:line="63" pos:column="10">(<argument><expr><operator pos:line="63" pos:column="11">&amp;<pos:position pos:line="63" pos:column="16"/></operator><name><name pos:line="63" pos:column="12">pattern<pos:position pos:line="63" pos:column="19"/></name><operator pos:line="63" pos:column="19">.<pos:position pos:line="63" pos:column="20"/></operator><name pos:line="63" pos:column="20">data<pos:position pos:line="63" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">memset<pos:position pos:line="64" pos:column="11"/></name> <argument_list pos:line="64" pos:column="12">(<argument><expr><operator pos:line="64" pos:column="13">&amp;<pos:position pos:line="64" pos:column="18"/></operator><name pos:line="64" pos:column="14">pattern<pos:position pos:line="64" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="23">0<pos:position pos:line="64" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="64" pos:column="26">sizeof <argument_list pos:line="64" pos:column="33">(<argument><expr><name pos:line="64" pos:column="34">pattern<pos:position pos:line="64" pos:column="41"/></name></expr></argument>)<pos:position pos:line="64" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="64" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="65" pos:column="5">pattern<pos:position pos:line="65" pos:column="12"/></name><operator pos:line="65" pos:column="12">.<pos:position pos:line="65" pos:column="13"/></operator><name pos:line="65" pos:column="13">data<pos:position pos:line="65" pos:column="17"/></name></name> <operator pos:line="65" pos:column="18">=<pos:position pos:line="65" pos:column="19"/></operator> <call><name pos:line="65" pos:column="20">safe_strdup<pos:position pos:line="65" pos:column="31"/></name> <argument_list pos:line="65" pos:column="32">(<argument><expr><name pos:line="65" pos:column="33">path<pos:position pos:line="65" pos:column="37"/></name></expr></argument>)<pos:position pos:line="65" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="66" pos:column="4"/></block></then>
<cpp:ifdef pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">ifdef<pos:position pos:line="67" pos:column="7"/></cpp:directive> <name pos:line="67" pos:column="8">USE_COMPRESSED<pos:position pos:line="67" pos:column="22"/></name></cpp:ifdef>
  <elseif pos:line="68" pos:column="3">else <if pos:line="68" pos:column="8">if <condition pos:line="68" pos:column="11">(<expr><name pos:line="68" pos:column="12">data<pos:position pos:line="68" pos:column="16"/></name> <operator pos:line="68" pos:column="17">&amp;<pos:position pos:line="68" pos:column="22"/></operator> <operator pos:line="68" pos:column="19">(<pos:position pos:line="68" pos:column="20"/></operator><name pos:line="68" pos:column="20">MUTT_APPENDHOOK<pos:position pos:line="68" pos:column="35"/></name> <operator pos:line="68" pos:column="36">|<pos:position pos:line="68" pos:column="37"/></operator> <name pos:line="68" pos:column="38">MUTT_OPENHOOK<pos:position pos:line="68" pos:column="51"/></name> <operator pos:line="68" pos:column="52">|<pos:position pos:line="68" pos:column="53"/></operator> <name pos:line="68" pos:column="54">MUTT_CLOSEHOOK<pos:position pos:line="68" pos:column="68"/></name><operator pos:line="68" pos:column="68">)<pos:position pos:line="68" pos:column="69"/></operator></expr>)<pos:position pos:line="68" pos:column="70"/></condition><then pos:line="68" pos:column="70"> <block pos:line="68" pos:column="71">{
    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><call><name pos:line="69" pos:column="9">mutt_comp_valid_command<pos:position pos:line="69" pos:column="32"/></name> <argument_list pos:line="69" pos:column="33">(<argument><expr><name><name pos:line="69" pos:column="34">command<pos:position pos:line="69" pos:column="41"/></name><operator pos:line="69" pos:column="41">.<pos:position pos:line="69" pos:column="42"/></operator><name pos:line="69" pos:column="42">data<pos:position pos:line="69" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="47"/></argument_list></call> <operator pos:line="69" pos:column="48">==<pos:position pos:line="69" pos:column="50"/></operator> <literal type="number" pos:line="69" pos:column="51">0<pos:position pos:line="69" pos:column="52"/></literal></expr>)<pos:position pos:line="69" pos:column="53"/></condition><then pos:line="69" pos:column="53"> <block pos:line="69" pos:column="54">{
      <expr_stmt><expr><call><name pos:line="70" pos:column="7">strfcpy<pos:position pos:line="70" pos:column="14"/></name> <argument_list pos:line="70" pos:column="15">(<argument><expr><name><name pos:line="70" pos:column="16">err<pos:position pos:line="70" pos:column="19"/></name><operator pos:line="70" pos:column="19">-&gt;<pos:position pos:line="70" pos:column="24"/></operator><name pos:line="70" pos:column="21">data<pos:position pos:line="70" pos:column="25"/></name></name></expr></argument>, <argument><expr><call><name pos:line="70" pos:column="27">_<pos:position pos:line="70" pos:column="28"/></name><argument_list pos:line="70" pos:column="28">(<argument><expr><literal type="string" pos:line="70" pos:column="29">"badly formatted command string"<pos:position pos:line="70" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="64">err<pos:position pos:line="70" pos:column="67"/></name><operator pos:line="70" pos:column="67">-&gt;<pos:position pos:line="70" pos:column="72"/></operator><name pos:line="70" pos:column="69">dsize<pos:position pos:line="70" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="76"/></expr_stmt>
      <return pos:line="71" pos:column="7">return <expr><operator pos:line="71" pos:column="14">-<pos:position pos:line="71" pos:column="15"/></operator><literal type="number" pos:line="71" pos:column="15">1<pos:position pos:line="71" pos:column="16"/></literal></expr>;<pos:position pos:line="71" pos:column="17"/></return>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if>
  }<pos:position pos:line="73" pos:column="4"/></block></then></if></elseif>
<cpp:endif pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">endif<pos:position pos:line="74" pos:column="7"/></cpp:directive></cpp:endif>
  <elseif pos:line="75" pos:column="3">else <if pos:line="75" pos:column="8">if <condition pos:line="75" pos:column="11">(<expr><name pos:line="75" pos:column="12">DefaultHook<pos:position pos:line="75" pos:column="23"/></name> <operator pos:line="75" pos:column="24">&amp;&amp;<pos:position pos:line="75" pos:column="34"/></operator> <operator pos:line="75" pos:column="27">!<pos:position pos:line="75" pos:column="28"/></operator><operator pos:line="75" pos:column="28">(<pos:position pos:line="75" pos:column="29"/></operator><name pos:line="75" pos:column="29">data<pos:position pos:line="75" pos:column="33"/></name> <operator pos:line="75" pos:column="34">&amp;<pos:position pos:line="75" pos:column="39"/></operator> <operator pos:line="75" pos:column="36">(<pos:position pos:line="75" pos:column="37"/></operator><name pos:line="75" pos:column="37">MUTT_CHARSETHOOK<pos:position pos:line="75" pos:column="53"/></name> <operator pos:line="75" pos:column="54">|<pos:position pos:line="75" pos:column="55"/></operator> <name pos:line="75" pos:column="56">MUTT_ICONVHOOK<pos:position pos:line="75" pos:column="70"/></name> <operator pos:line="75" pos:column="71">|<pos:position pos:line="75" pos:column="72"/></operator> <name pos:line="75" pos:column="73">MUTT_ACCOUNTHOOK<pos:position pos:line="75" pos:column="89"/></name><operator pos:line="75" pos:column="89">)<pos:position pos:line="75" pos:column="90"/></operator><operator pos:line="75" pos:column="90">)<pos:position pos:line="75" pos:column="91"/></operator>
           <operator pos:line="76" pos:column="12">&amp;&amp;<pos:position pos:line="76" pos:column="22"/></operator> <operator pos:line="76" pos:column="15">(<pos:position pos:line="76" pos:column="16"/></operator><operator pos:line="76" pos:column="16">!<pos:position pos:line="76" pos:column="17"/></operator><name pos:line="76" pos:column="17">WithCrypto<pos:position pos:line="76" pos:column="27"/></name> <operator pos:line="76" pos:column="28">||<pos:position pos:line="76" pos:column="30"/></operator> <operator pos:line="76" pos:column="31">!<pos:position pos:line="76" pos:column="32"/></operator><operator pos:line="76" pos:column="32">(<pos:position pos:line="76" pos:column="33"/></operator><name pos:line="76" pos:column="33">data<pos:position pos:line="76" pos:column="37"/></name> <operator pos:line="76" pos:column="38">&amp;<pos:position pos:line="76" pos:column="43"/></operator> <name pos:line="76" pos:column="40">MUTT_CRYPTHOOK<pos:position pos:line="76" pos:column="54"/></name><operator pos:line="76" pos:column="54">)<pos:position pos:line="76" pos:column="55"/></operator><operator pos:line="76" pos:column="55">)<pos:position pos:line="76" pos:column="56"/></operator></expr>
      )<pos:position pos:line="77" pos:column="8"/></condition><then pos:line="77" pos:column="8">
  <block pos:line="78" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="79" pos:column="5">char<pos:position pos:line="79" pos:column="9"/></name></type> <name><name pos:line="79" pos:column="10">tmp<pos:position pos:line="79" pos:column="13"/></name><index pos:line="79" pos:column="13">[<expr><name pos:line="79" pos:column="14">HUGE_STRING<pos:position pos:line="79" pos:column="25"/></name></expr>]<pos:position pos:line="79" pos:column="26"/></index></name></decl>;<pos:position pos:line="79" pos:column="27"/></decl_stmt>

    <comment type="block" pos:line="81" pos:column="5">/* At this stage remain only message-hooks, reply-hooks, send-hooks,
     * send2-hooks, save-hooks, and fcc-hooks: All those allowing full
     * patterns. If given a simple regexp, we expand $default_hook.
     */</comment>
    <expr_stmt><expr><call><name pos:line="85" pos:column="5">strfcpy<pos:position pos:line="85" pos:column="12"/></name> <argument_list pos:line="85" pos:column="13">(<argument><expr><name pos:line="85" pos:column="14">tmp<pos:position pos:line="85" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="19">pattern<pos:position pos:line="85" pos:column="26"/></name><operator pos:line="85" pos:column="26">.<pos:position pos:line="85" pos:column="27"/></operator><name pos:line="85" pos:column="27">data<pos:position pos:line="85" pos:column="31"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="85" pos:column="33">sizeof <argument_list pos:line="85" pos:column="40">(<argument><expr><name pos:line="85" pos:column="41">tmp<pos:position pos:line="85" pos:column="44"/></name></expr></argument>)<pos:position pos:line="85" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="85" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">mutt_check_simple<pos:position pos:line="86" pos:column="22"/></name> <argument_list pos:line="86" pos:column="23">(<argument><expr><name pos:line="86" pos:column="24">tmp<pos:position pos:line="86" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="86" pos:column="29">sizeof <argument_list pos:line="86" pos:column="36">(<argument><expr><name pos:line="86" pos:column="37">tmp<pos:position pos:line="86" pos:column="40"/></name></expr></argument>)<pos:position pos:line="86" pos:column="41"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="86" pos:column="43">DefaultHook<pos:position pos:line="86" pos:column="54"/></name></expr></argument>)<pos:position pos:line="86" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">FREE<pos:position pos:line="87" pos:column="9"/></name> <argument_list pos:line="87" pos:column="10">(<argument><expr><operator pos:line="87" pos:column="11">&amp;<pos:position pos:line="87" pos:column="16"/></operator><name><name pos:line="87" pos:column="12">pattern<pos:position pos:line="87" pos:column="19"/></name><operator pos:line="87" pos:column="19">.<pos:position pos:line="87" pos:column="20"/></operator><name pos:line="87" pos:column="20">data<pos:position pos:line="87" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="88" pos:column="5">memset<pos:position pos:line="88" pos:column="11"/></name> <argument_list pos:line="88" pos:column="12">(<argument><expr><operator pos:line="88" pos:column="13">&amp;<pos:position pos:line="88" pos:column="18"/></operator><name pos:line="88" pos:column="14">pattern<pos:position pos:line="88" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="88" pos:column="23">0<pos:position pos:line="88" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="88" pos:column="26">sizeof <argument_list pos:line="88" pos:column="33">(<argument><expr><name pos:line="88" pos:column="34">pattern<pos:position pos:line="88" pos:column="41"/></name></expr></argument>)<pos:position pos:line="88" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="88" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="89" pos:column="5">pattern<pos:position pos:line="89" pos:column="12"/></name><operator pos:line="89" pos:column="12">.<pos:position pos:line="89" pos:column="13"/></operator><name pos:line="89" pos:column="13">data<pos:position pos:line="89" pos:column="17"/></name></name> <operator pos:line="89" pos:column="18">=<pos:position pos:line="89" pos:column="19"/></operator> <call><name pos:line="89" pos:column="20">safe_strdup<pos:position pos:line="89" pos:column="31"/></name> <argument_list pos:line="89" pos:column="32">(<argument><expr><name pos:line="89" pos:column="33">tmp<pos:position pos:line="89" pos:column="36"/></name></expr></argument>)<pos:position pos:line="89" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="90" pos:column="4"/></block></then></if></elseif></if>

  <if pos:line="92" pos:column="3">if <condition pos:line="92" pos:column="6">(<expr><name pos:line="92" pos:column="7">data<pos:position pos:line="92" pos:column="11"/></name> <operator pos:line="92" pos:column="12">&amp;<pos:position pos:line="92" pos:column="17"/></operator> <operator pos:line="92" pos:column="14">(<pos:position pos:line="92" pos:column="15"/></operator><name pos:line="92" pos:column="15">MUTT_MBOXHOOK<pos:position pos:line="92" pos:column="28"/></name> <operator pos:line="92" pos:column="29">|<pos:position pos:line="92" pos:column="30"/></operator> <name pos:line="92" pos:column="31">MUTT_SAVEHOOK<pos:position pos:line="92" pos:column="44"/></name> <operator pos:line="92" pos:column="45">|<pos:position pos:line="92" pos:column="46"/></operator> <name pos:line="92" pos:column="47">MUTT_FCCHOOK<pos:position pos:line="92" pos:column="59"/></name><operator pos:line="92" pos:column="59">)<pos:position pos:line="92" pos:column="60"/></operator></expr>)<pos:position pos:line="92" pos:column="61"/></condition><then pos:line="92" pos:column="61">
  <block pos:line="93" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="94" pos:column="5">strfcpy<pos:position pos:line="94" pos:column="12"/></name> <argument_list pos:line="94" pos:column="13">(<argument><expr><name pos:line="94" pos:column="14">path<pos:position pos:line="94" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="20">command<pos:position pos:line="94" pos:column="27"/></name><operator pos:line="94" pos:column="27">.<pos:position pos:line="94" pos:column="28"/></operator><name pos:line="94" pos:column="28">data<pos:position pos:line="94" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="94" pos:column="34">sizeof <argument_list pos:line="94" pos:column="41">(<argument><expr><name pos:line="94" pos:column="42">path<pos:position pos:line="94" pos:column="46"/></name></expr></argument>)<pos:position pos:line="94" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="94" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="95" pos:column="5">mutt_expand_path<pos:position pos:line="95" pos:column="21"/></name> <argument_list pos:line="95" pos:column="22">(<argument><expr><name pos:line="95" pos:column="23">path<pos:position pos:line="95" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="95" pos:column="29">sizeof <argument_list pos:line="95" pos:column="36">(<argument><expr><name pos:line="95" pos:column="37">path<pos:position pos:line="95" pos:column="41"/></name></expr></argument>)<pos:position pos:line="95" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="95" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="96" pos:column="5">FREE<pos:position pos:line="96" pos:column="9"/></name> <argument_list pos:line="96" pos:column="10">(<argument><expr><operator pos:line="96" pos:column="11">&amp;<pos:position pos:line="96" pos:column="16"/></operator><name><name pos:line="96" pos:column="12">command<pos:position pos:line="96" pos:column="19"/></name><operator pos:line="96" pos:column="19">.<pos:position pos:line="96" pos:column="20"/></operator><name pos:line="96" pos:column="20">data<pos:position pos:line="96" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="97" pos:column="5">memset<pos:position pos:line="97" pos:column="11"/></name> <argument_list pos:line="97" pos:column="12">(<argument><expr><operator pos:line="97" pos:column="13">&amp;<pos:position pos:line="97" pos:column="18"/></operator><name pos:line="97" pos:column="14">command<pos:position pos:line="97" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="97" pos:column="23">0<pos:position pos:line="97" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="97" pos:column="26">sizeof <argument_list pos:line="97" pos:column="33">(<argument><expr><name pos:line="97" pos:column="34">command<pos:position pos:line="97" pos:column="41"/></name></expr></argument>)<pos:position pos:line="97" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="97" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="98" pos:column="5">command<pos:position pos:line="98" pos:column="12"/></name><operator pos:line="98" pos:column="12">.<pos:position pos:line="98" pos:column="13"/></operator><name pos:line="98" pos:column="13">data<pos:position pos:line="98" pos:column="17"/></name></name> <operator pos:line="98" pos:column="18">=<pos:position pos:line="98" pos:column="19"/></operator> <call><name pos:line="98" pos:column="20">safe_strdup<pos:position pos:line="98" pos:column="31"/></name> <argument_list pos:line="98" pos:column="32">(<argument><expr><name pos:line="98" pos:column="33">path<pos:position pos:line="98" pos:column="37"/></name></expr></argument>)<pos:position pos:line="98" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="99" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="101" pos:column="3">/* check to make sure that a matching hook doesn't already exist */</comment>
  <for pos:line="102" pos:column="3">for <control pos:line="102" pos:column="7">(<init><expr><name pos:line="102" pos:column="8">ptr<pos:position pos:line="102" pos:column="11"/></name> <operator pos:line="102" pos:column="12">=<pos:position pos:line="102" pos:column="13"/></operator> <name pos:line="102" pos:column="14">Hooks<pos:position pos:line="102" pos:column="19"/></name></expr>;<pos:position pos:line="102" pos:column="20"/></init> <condition><expr><name pos:line="102" pos:column="21">ptr<pos:position pos:line="102" pos:column="24"/></name></expr>;<pos:position pos:line="102" pos:column="25"/></condition> <incr><expr><name pos:line="102" pos:column="26">ptr<pos:position pos:line="102" pos:column="29"/></name> <operator pos:line="102" pos:column="30">=<pos:position pos:line="102" pos:column="31"/></operator> <name><name pos:line="102" pos:column="32">ptr<pos:position pos:line="102" pos:column="35"/></name><operator pos:line="102" pos:column="35">-&gt;<pos:position pos:line="102" pos:column="40"/></operator><name pos:line="102" pos:column="37">next<pos:position pos:line="102" pos:column="41"/></name></name></expr></incr>)<pos:position pos:line="102" pos:column="42"/></control>
  <block pos:line="103" pos:column="3">{
    <if pos:line="104" pos:column="5">if <condition pos:line="104" pos:column="8">(<expr><name><name pos:line="104" pos:column="9">ptr<pos:position pos:line="104" pos:column="12"/></name><operator pos:line="104" pos:column="12">-&gt;<pos:position pos:line="104" pos:column="17"/></operator><name pos:line="104" pos:column="14">type<pos:position pos:line="104" pos:column="18"/></name></name> <operator pos:line="104" pos:column="19">==<pos:position pos:line="104" pos:column="21"/></operator> <name pos:line="104" pos:column="22">data<pos:position pos:line="104" pos:column="26"/></name> <operator pos:line="104" pos:column="27">&amp;&amp;<pos:position pos:line="104" pos:column="37"/></operator>
	<name><name pos:line="105" pos:column="9">ptr<pos:position pos:line="105" pos:column="12"/></name><operator pos:line="105" pos:column="12">-&gt;<pos:position pos:line="105" pos:column="17"/></operator><name pos:line="105" pos:column="14">rx<pos:position pos:line="105" pos:column="16"/></name><operator pos:line="105" pos:column="16">.<pos:position pos:line="105" pos:column="17"/></operator></name><operator pos:line="105" pos:column="17">not<pos:position pos:line="105" pos:column="20"/></operator> <operator pos:line="105" pos:column="21">==<pos:position pos:line="105" pos:column="23"/></operator> <operator pos:line="105" pos:column="24">not<pos:position pos:line="105" pos:column="27"/></operator> <operator pos:line="105" pos:column="28">&amp;&amp;<pos:position pos:line="105" pos:column="38"/></operator>
	<operator pos:line="106" pos:column="9">!<pos:position pos:line="106" pos:column="10"/></operator><call><name pos:line="106" pos:column="10">mutt_strcmp<pos:position pos:line="106" pos:column="21"/></name> <argument_list pos:line="106" pos:column="22">(<argument><expr><name><name pos:line="106" pos:column="23">pattern<pos:position pos:line="106" pos:column="30"/></name><operator pos:line="106" pos:column="30">.<pos:position pos:line="106" pos:column="31"/></operator><name pos:line="106" pos:column="31">data<pos:position pos:line="106" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="37">ptr<pos:position pos:line="106" pos:column="40"/></name><operator pos:line="106" pos:column="40">-&gt;<pos:position pos:line="106" pos:column="45"/></operator><name pos:line="106" pos:column="42">rx<pos:position pos:line="106" pos:column="44"/></name><operator pos:line="106" pos:column="44">.<pos:position pos:line="106" pos:column="45"/></operator><name pos:line="106" pos:column="45">pattern<pos:position pos:line="106" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="106" pos:column="54"/></condition><then pos:line="106" pos:column="54">
    <block pos:line="107" pos:column="5">{
      <if pos:line="108" pos:column="7">if <condition pos:line="108" pos:column="10">(<expr><name pos:line="108" pos:column="11">data<pos:position pos:line="108" pos:column="15"/></name> <operator pos:line="108" pos:column="16">&amp;<pos:position pos:line="108" pos:column="21"/></operator> <operator pos:line="108" pos:column="18">(<pos:position pos:line="108" pos:column="19"/></operator><name pos:line="108" pos:column="19">MUTT_FOLDERHOOK<pos:position pos:line="108" pos:column="34"/></name> <operator pos:line="108" pos:column="35">|<pos:position pos:line="108" pos:column="36"/></operator> <name pos:line="108" pos:column="37">MUTT_SENDHOOK<pos:position pos:line="108" pos:column="50"/></name> <operator pos:line="108" pos:column="51">|<pos:position pos:line="108" pos:column="52"/></operator> <name pos:line="108" pos:column="53">MUTT_SEND2HOOK<pos:position pos:line="108" pos:column="67"/></name> <operator pos:line="108" pos:column="68">|<pos:position pos:line="108" pos:column="69"/></operator> <name pos:line="108" pos:column="70">MUTT_MESSAGEHOOK<pos:position pos:line="108" pos:column="86"/></name> <operator pos:line="108" pos:column="87">|<pos:position pos:line="108" pos:column="88"/></operator> <name pos:line="108" pos:column="89">MUTT_ACCOUNTHOOK<pos:position pos:line="108" pos:column="105"/></name> <operator pos:line="108" pos:column="106">|<pos:position pos:line="108" pos:column="107"/></operator> <name pos:line="108" pos:column="108">MUTT_REPLYHOOK<pos:position pos:line="108" pos:column="122"/></name> <operator pos:line="108" pos:column="123">|<pos:position pos:line="108" pos:column="124"/></operator> <name pos:line="108" pos:column="125">MUTT_CRYPTHOOK<pos:position pos:line="108" pos:column="139"/></name><operator pos:line="108" pos:column="139">)<pos:position pos:line="108" pos:column="140"/></operator></expr>)<pos:position pos:line="108" pos:column="141"/></condition><then pos:line="108" pos:column="141">
      <block pos:line="109" pos:column="7">{
	<comment type="block" pos:line="110" pos:column="9">/* these hooks allow multiple commands with the same
	 * pattern, so if we've already seen this pattern/command pair, just
	 * ignore it instead of creating a duplicate */</comment>
	<if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><operator pos:line="113" pos:column="13">!<pos:position pos:line="113" pos:column="14"/></operator><call><name pos:line="113" pos:column="14">mutt_strcmp<pos:position pos:line="113" pos:column="25"/></name> <argument_list pos:line="113" pos:column="26">(<argument><expr><name><name pos:line="113" pos:column="27">ptr<pos:position pos:line="113" pos:column="30"/></name><operator pos:line="113" pos:column="30">-&gt;<pos:position pos:line="113" pos:column="35"/></operator><name pos:line="113" pos:column="32">command<pos:position pos:line="113" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="113" pos:column="41">command<pos:position pos:line="113" pos:column="48"/></name><operator pos:line="113" pos:column="48">.<pos:position pos:line="113" pos:column="49"/></operator><name pos:line="113" pos:column="49">data<pos:position pos:line="113" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="113" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="113" pos:column="55"/></condition><then pos:line="113" pos:column="55">
	<block pos:line="114" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="115" pos:column="11">FREE<pos:position pos:line="115" pos:column="15"/></name> <argument_list pos:line="115" pos:column="16">(<argument><expr><operator pos:line="115" pos:column="17">&amp;<pos:position pos:line="115" pos:column="22"/></operator><name><name pos:line="115" pos:column="18">command<pos:position pos:line="115" pos:column="25"/></name><operator pos:line="115" pos:column="25">.<pos:position pos:line="115" pos:column="26"/></operator><name pos:line="115" pos:column="26">data<pos:position pos:line="115" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="32"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="116" pos:column="11">FREE<pos:position pos:line="116" pos:column="15"/></name> <argument_list pos:line="116" pos:column="16">(<argument><expr><operator pos:line="116" pos:column="17">&amp;<pos:position pos:line="116" pos:column="22"/></operator><name><name pos:line="116" pos:column="18">pattern<pos:position pos:line="116" pos:column="25"/></name><operator pos:line="116" pos:column="25">.<pos:position pos:line="116" pos:column="26"/></operator><name pos:line="116" pos:column="26">data<pos:position pos:line="116" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="116" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="32"/></expr_stmt>
	  <return pos:line="117" pos:column="11">return <expr><literal type="number" pos:line="117" pos:column="18">0<pos:position pos:line="117" pos:column="19"/></literal></expr>;<pos:position pos:line="117" pos:column="20"/></return>
	}<pos:position pos:line="118" pos:column="10"/></block></then></if>
      }<pos:position pos:line="119" pos:column="8"/></block></then>
      <else pos:line="120" pos:column="7">else
      <block pos:line="121" pos:column="7">{
	<comment type="block" pos:line="122" pos:column="9">/* other hooks only allow one command per pattern, so update the
	 * entry with the new command.  this currently does not change the
	 * order of execution of the hooks, which i think is desirable since
	 * a common action to perform is to change the default (.) entry
	 * based upon some other information. */</comment>
	<expr_stmt><expr><call><name pos:line="127" pos:column="9">FREE<pos:position pos:line="127" pos:column="13"/></name> <argument_list pos:line="127" pos:column="14">(<argument><expr><operator pos:line="127" pos:column="15">&amp;<pos:position pos:line="127" pos:column="20"/></operator><name><name pos:line="127" pos:column="16">ptr<pos:position pos:line="127" pos:column="19"/></name><operator pos:line="127" pos:column="19">-&gt;<pos:position pos:line="127" pos:column="24"/></operator><name pos:line="127" pos:column="21">command<pos:position pos:line="127" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="127" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="128" pos:column="9">ptr<pos:position pos:line="128" pos:column="12"/></name><operator pos:line="128" pos:column="12">-&gt;<pos:position pos:line="128" pos:column="17"/></operator><name pos:line="128" pos:column="14">command<pos:position pos:line="128" pos:column="21"/></name></name> <operator pos:line="128" pos:column="22">=<pos:position pos:line="128" pos:column="23"/></operator> <name><name pos:line="128" pos:column="24">command<pos:position pos:line="128" pos:column="31"/></name><operator pos:line="128" pos:column="31">.<pos:position pos:line="128" pos:column="32"/></operator><name pos:line="128" pos:column="32">data<pos:position pos:line="128" pos:column="36"/></name></name></expr>;<pos:position pos:line="128" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="129" pos:column="9">FREE<pos:position pos:line="129" pos:column="13"/></name> <argument_list pos:line="129" pos:column="14">(<argument><expr><operator pos:line="129" pos:column="15">&amp;<pos:position pos:line="129" pos:column="20"/></operator><name><name pos:line="129" pos:column="16">pattern<pos:position pos:line="129" pos:column="23"/></name><operator pos:line="129" pos:column="23">.<pos:position pos:line="129" pos:column="24"/></operator><name pos:line="129" pos:column="24">data<pos:position pos:line="129" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="129" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="30"/></expr_stmt>
	<return pos:line="130" pos:column="9">return <expr><literal type="number" pos:line="130" pos:column="16">0<pos:position pos:line="130" pos:column="17"/></literal></expr>;<pos:position pos:line="130" pos:column="18"/></return>
      }<pos:position pos:line="131" pos:column="8"/></block></else></if>
    }<pos:position pos:line="132" pos:column="6"/></block></then></if>
    <if pos:line="133" pos:column="5">if <condition pos:line="133" pos:column="8">(<expr><operator pos:line="133" pos:column="9">!<pos:position pos:line="133" pos:column="10"/></operator><name><name pos:line="133" pos:column="10">ptr<pos:position pos:line="133" pos:column="13"/></name><operator pos:line="133" pos:column="13">-&gt;<pos:position pos:line="133" pos:column="18"/></operator><name pos:line="133" pos:column="15">next<pos:position pos:line="133" pos:column="19"/></name></name></expr>)<pos:position pos:line="133" pos:column="20"/></condition><then pos:line="133" pos:column="20">
      <block type="pseudo"><break pos:line="134" pos:column="7">break;<pos:position pos:line="134" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="135" pos:column="4"/></block></for>

  <if pos:line="137" pos:column="3">if <condition pos:line="137" pos:column="6">(<expr><name pos:line="137" pos:column="7">data<pos:position pos:line="137" pos:column="11"/></name> <operator pos:line="137" pos:column="12">&amp;<pos:position pos:line="137" pos:column="17"/></operator> <operator pos:line="137" pos:column="14">(<pos:position pos:line="137" pos:column="15"/></operator><name pos:line="137" pos:column="15">MUTT_SENDHOOK<pos:position pos:line="137" pos:column="28"/></name> <operator pos:line="137" pos:column="29">|<pos:position pos:line="137" pos:column="30"/></operator> <name pos:line="137" pos:column="31">MUTT_SEND2HOOK<pos:position pos:line="137" pos:column="45"/></name> <operator pos:line="137" pos:column="46">|<pos:position pos:line="137" pos:column="47"/></operator> <name pos:line="137" pos:column="48">MUTT_SAVEHOOK<pos:position pos:line="137" pos:column="61"/></name> <operator pos:line="137" pos:column="62">|<pos:position pos:line="137" pos:column="63"/></operator> <name pos:line="137" pos:column="64">MUTT_FCCHOOK<pos:position pos:line="137" pos:column="76"/></name> <operator pos:line="137" pos:column="77">|<pos:position pos:line="137" pos:column="78"/></operator> <name pos:line="137" pos:column="79">MUTT_MESSAGEHOOK<pos:position pos:line="137" pos:column="95"/></name> <operator pos:line="137" pos:column="96">|<pos:position pos:line="137" pos:column="97"/></operator> <name pos:line="137" pos:column="98">MUTT_REPLYHOOK<pos:position pos:line="137" pos:column="112"/></name><operator pos:line="137" pos:column="112">)<pos:position pos:line="137" pos:column="113"/></operator></expr>)<pos:position pos:line="137" pos:column="114"/></condition><then pos:line="137" pos:column="114">
  <block pos:line="138" pos:column="3">{
    <if pos:line="139" pos:column="5">if <condition pos:line="139" pos:column="8">(<expr><operator pos:line="139" pos:column="9">(<pos:position pos:line="139" pos:column="10"/></operator><name pos:line="139" pos:column="10">pat<pos:position pos:line="139" pos:column="13"/></name> <operator pos:line="139" pos:column="14">=<pos:position pos:line="139" pos:column="15"/></operator> <call><name pos:line="139" pos:column="16">mutt_pattern_comp<pos:position pos:line="139" pos:column="33"/></name> <argument_list pos:line="139" pos:column="34">(<argument><expr><name><name pos:line="139" pos:column="35">pattern<pos:position pos:line="139" pos:column="42"/></name><operator pos:line="139" pos:column="42">.<pos:position pos:line="139" pos:column="43"/></operator><name pos:line="139" pos:column="43">data<pos:position pos:line="139" pos:column="47"/></name></name></expr></argument>,
	   <argument><expr><ternary><condition><expr><operator pos:line="140" pos:column="12">(<pos:position pos:line="140" pos:column="13"/></operator><name pos:line="140" pos:column="13">data<pos:position pos:line="140" pos:column="17"/></name> <operator pos:line="140" pos:column="18">&amp;<pos:position pos:line="140" pos:column="23"/></operator> <operator pos:line="140" pos:column="20">(<pos:position pos:line="140" pos:column="21"/></operator><name pos:line="140" pos:column="21">MUTT_SENDHOOK<pos:position pos:line="140" pos:column="34"/></name> <operator pos:line="140" pos:column="35">|<pos:position pos:line="140" pos:column="36"/></operator> <name pos:line="140" pos:column="37">MUTT_SEND2HOOK<pos:position pos:line="140" pos:column="51"/></name> <operator pos:line="140" pos:column="52">|<pos:position pos:line="140" pos:column="53"/></operator> <name pos:line="140" pos:column="54">MUTT_FCCHOOK<pos:position pos:line="140" pos:column="66"/></name><operator pos:line="140" pos:column="66">)<pos:position pos:line="140" pos:column="67"/></operator><operator pos:line="140" pos:column="67">)<pos:position pos:line="140" pos:column="68"/></operator></expr> ?<pos:position pos:line="140" pos:column="70"/></condition><then pos:line="140" pos:column="70"> <expr><literal type="number" pos:line="140" pos:column="71">0<pos:position pos:line="140" pos:column="72"/></literal></expr> <pos:position pos:line="140" pos:column="73"/></then><else pos:line="140" pos:column="73">: <expr><name pos:line="140" pos:column="75">MUTT_FULL_MSG<pos:position pos:line="140" pos:column="88"/></name></expr></else></ternary></expr></argument>,
				  <argument><expr><name pos:line="141" pos:column="35">err<pos:position pos:line="141" pos:column="38"/></name></expr></argument>)<pos:position pos:line="141" pos:column="39"/></argument_list></call><operator pos:line="141" pos:column="39">)<pos:position pos:line="141" pos:column="40"/></operator> <operator pos:line="141" pos:column="41">==<pos:position pos:line="141" pos:column="43"/></operator> <name pos:line="141" pos:column="44">NULL<pos:position pos:line="141" pos:column="48"/></name></expr>)<pos:position pos:line="141" pos:column="49"/></condition><then pos:line="141" pos:column="49">
      <block type="pseudo"><goto pos:line="142" pos:column="7">goto <name pos:line="142" pos:column="12">error<pos:position pos:line="142" pos:column="17"/></name>;<pos:position pos:line="142" pos:column="18"/></goto></block></then></if>
  }<pos:position pos:line="143" pos:column="4"/></block></then>
  <else pos:line="144" pos:column="3">else
  <block pos:line="145" pos:column="3">{
    <comment type="block" pos:line="146" pos:column="5">/* Hooks not allowing full patterns: Check syntax of regexp */</comment>
    <expr_stmt><expr><name pos:line="147" pos:column="5">rx<pos:position pos:line="147" pos:column="7"/></name> <operator pos:line="147" pos:column="8">=<pos:position pos:line="147" pos:column="9"/></operator> <call><name pos:line="147" pos:column="10">safe_malloc<pos:position pos:line="147" pos:column="21"/></name> <argument_list pos:line="147" pos:column="22">(<argument><expr><sizeof pos:line="147" pos:column="23">sizeof <argument_list pos:line="147" pos:column="30">(<argument><expr><name pos:line="147" pos:column="31">regex_t<pos:position pos:line="147" pos:column="38"/></name></expr></argument>)<pos:position pos:line="147" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="147" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="41"/></expr_stmt>
<cpp:ifdef pos:line="148" pos:column="1">#<cpp:directive pos:line="148" pos:column="2">ifdef<pos:position pos:line="148" pos:column="7"/></cpp:directive> <name pos:line="148" pos:column="8">MUTT_CRYPTHOOK<pos:position pos:line="148" pos:column="22"/></name></cpp:ifdef>
    <if pos:line="149" pos:column="5">if <condition pos:line="149" pos:column="8">(<expr><operator pos:line="149" pos:column="9">(<pos:position pos:line="149" pos:column="10"/></operator><name pos:line="149" pos:column="10">rc<pos:position pos:line="149" pos:column="12"/></name> <operator pos:line="149" pos:column="13">=<pos:position pos:line="149" pos:column="14"/></operator> <call><name pos:line="149" pos:column="15">REGCOMP<pos:position pos:line="149" pos:column="22"/></name> <argument_list pos:line="149" pos:column="23">(<argument><expr><name pos:line="149" pos:column="24">rx<pos:position pos:line="149" pos:column="26"/></name></expr></argument>, <argument><expr><call><name pos:line="149" pos:column="28">NONULL<pos:position pos:line="149" pos:column="34"/></name><argument_list pos:line="149" pos:column="34">(<argument><expr><name><name pos:line="149" pos:column="35">pattern<pos:position pos:line="149" pos:column="42"/></name><operator pos:line="149" pos:column="42">.<pos:position pos:line="149" pos:column="43"/></operator><name pos:line="149" pos:column="43">data<pos:position pos:line="149" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="149" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="149" pos:column="50">(<pos:position pos:line="149" pos:column="51"/></operator><ternary><condition><expr><operator pos:line="149" pos:column="51">(<pos:position pos:line="149" pos:column="52"/></operator><name pos:line="149" pos:column="52">data<pos:position pos:line="149" pos:column="56"/></name> <operator pos:line="149" pos:column="57">&amp;<pos:position pos:line="149" pos:column="62"/></operator> <operator pos:line="149" pos:column="59">(<pos:position pos:line="149" pos:column="60"/></operator><name pos:line="149" pos:column="60">MUTT_CRYPTHOOK<pos:position pos:line="149" pos:column="74"/></name><operator pos:line="149" pos:column="74">|<pos:position pos:line="149" pos:column="75"/></operator><name pos:line="149" pos:column="75">MUTT_CHARSETHOOK<pos:position pos:line="149" pos:column="91"/></name><operator pos:line="149" pos:column="91">|<pos:position pos:line="149" pos:column="92"/></operator><name pos:line="149" pos:column="92">MUTT_ICONVHOOK<pos:position pos:line="149" pos:column="106"/></name><operator pos:line="149" pos:column="106">)<pos:position pos:line="149" pos:column="107"/></operator><operator pos:line="149" pos:column="107">)<pos:position pos:line="149" pos:column="108"/></operator></expr> ?<pos:position pos:line="149" pos:column="110"/></condition><then pos:line="149" pos:column="110"> <expr><name pos:line="149" pos:column="111">REG_ICASE<pos:position pos:line="149" pos:column="120"/></name></expr> <pos:position pos:line="149" pos:column="121"/></then><else pos:line="149" pos:column="121">: <expr><literal type="number" pos:line="149" pos:column="123">0<pos:position pos:line="149" pos:column="124"/></literal></expr></else></ternary><operator pos:line="149" pos:column="124">)<pos:position pos:line="149" pos:column="125"/></operator></expr></argument>)<pos:position pos:line="149" pos:column="126"/></argument_list></call><operator pos:line="149" pos:column="126">)<pos:position pos:line="149" pos:column="127"/></operator> <operator pos:line="149" pos:column="128">!=<pos:position pos:line="149" pos:column="130"/></operator> <literal type="number" pos:line="149" pos:column="131">0<pos:position pos:line="149" pos:column="132"/></literal></expr>)<pos:position pos:line="149" pos:column="133"/></condition><then pos:line="149" pos:column="133">
<cpp:else pos:line="150" pos:column="1">#<cpp:directive pos:line="150" pos:column="2">else<pos:position pos:line="150" pos:column="6"/></cpp:directive></cpp:else>
    <block type="pseudo"><if pos:line="151" pos:column="5">if <condition pos:line="151" pos:column="8">(<expr><operator pos:line="151" pos:column="9">(<pos:position pos:line="151" pos:column="10"/></operator><name pos:line="151" pos:column="10">rc<pos:position pos:line="151" pos:column="12"/></name> <operator pos:line="151" pos:column="13">=<pos:position pos:line="151" pos:column="14"/></operator> <call><name pos:line="151" pos:column="15">REGCOMP<pos:position pos:line="151" pos:column="22"/></name> <argument_list pos:line="151" pos:column="23">(<argument><expr><name pos:line="151" pos:column="24">rx<pos:position pos:line="151" pos:column="26"/></name></expr></argument>, <argument><expr><call><name pos:line="151" pos:column="28">NONULL<pos:position pos:line="151" pos:column="34"/></name><argument_list pos:line="151" pos:column="34">(<argument><expr><name><name pos:line="151" pos:column="35">pattern<pos:position pos:line="151" pos:column="42"/></name><operator pos:line="151" pos:column="42">.<pos:position pos:line="151" pos:column="43"/></operator><name pos:line="151" pos:column="43">data<pos:position pos:line="151" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="151" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="151" pos:column="50">(<pos:position pos:line="151" pos:column="51"/></operator><name pos:line="151" pos:column="51">data<pos:position pos:line="151" pos:column="55"/></name> <operator pos:line="151" pos:column="56">&amp;<pos:position pos:line="151" pos:column="61"/></operator> <operator pos:line="151" pos:column="58">(<pos:position pos:line="151" pos:column="59"/></operator><name pos:line="151" pos:column="59">MUTT_CHARSETHOOK<pos:position pos:line="151" pos:column="75"/></name><operator pos:line="151" pos:column="75">|<pos:position pos:line="151" pos:column="76"/></operator><name pos:line="151" pos:column="76">MUTT_ICONVHOOK<pos:position pos:line="151" pos:column="90"/></name><operator pos:line="151" pos:column="90">)<pos:position pos:line="151" pos:column="91"/></operator><operator pos:line="151" pos:column="91">)<pos:position pos:line="151" pos:column="92"/></operator></expr> ?<pos:position pos:line="151" pos:column="94"/></condition><then pos:line="151" pos:column="94"> <expr><name pos:line="151" pos:column="95">REG_ICASE<pos:position pos:line="151" pos:column="104"/></name></expr> <pos:position pos:line="151" pos:column="105"/></then><else pos:line="151" pos:column="105">: <expr><literal type="number" pos:line="151" pos:column="107">0<pos:position pos:line="151" pos:column="108"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="151" pos:column="109"/></argument_list></call><operator pos:line="151" pos:column="109">)<pos:position pos:line="151" pos:column="110"/></operator> <operator pos:line="151" pos:column="111">!=<pos:position pos:line="151" pos:column="113"/></operator> <literal type="number" pos:line="151" pos:column="114">0<pos:position pos:line="151" pos:column="115"/></literal></expr>)<pos:position pos:line="151" pos:column="116"/></condition><then pos:line="151" pos:column="116">
<cpp:endif pos:line="152" pos:column="1">#<cpp:directive pos:line="152" pos:column="2">endif<pos:position pos:line="152" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="152" pos:column="8">/* MUTT_CRYPTHOOK */</comment>
    <block pos:line="153" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="154" pos:column="7">regerror<pos:position pos:line="154" pos:column="15"/></name> <argument_list pos:line="154" pos:column="16">(<argument><expr><name pos:line="154" pos:column="17">rc<pos:position pos:line="154" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="21">rx<pos:position pos:line="154" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="154" pos:column="25">err<pos:position pos:line="154" pos:column="28"/></name><operator pos:line="154" pos:column="28">-&gt;<pos:position pos:line="154" pos:column="33"/></operator><name pos:line="154" pos:column="30">data<pos:position pos:line="154" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="154" pos:column="36">err<pos:position pos:line="154" pos:column="39"/></name><operator pos:line="154" pos:column="39">-&gt;<pos:position pos:line="154" pos:column="44"/></operator><name pos:line="154" pos:column="41">dsize<pos:position pos:line="154" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="154" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="155" pos:column="7">FREE<pos:position pos:line="155" pos:column="11"/></name> <argument_list pos:line="155" pos:column="12">(<argument><expr><operator pos:line="155" pos:column="13">&amp;<pos:position pos:line="155" pos:column="18"/></operator><name pos:line="155" pos:column="14">rx<pos:position pos:line="155" pos:column="16"/></name></expr></argument>)<pos:position pos:line="155" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="18"/></expr_stmt>
      <goto pos:line="156" pos:column="7">goto <name pos:line="156" pos:column="12">error<pos:position pos:line="156" pos:column="17"/></name>;<pos:position pos:line="156" pos:column="18"/></goto>
    }<pos:position pos:line="157" pos:column="6"/></block></then></if></block></then></if>
  }<pos:position pos:line="158" pos:column="4"/></block></else></if>

  <if pos:line="160" pos:column="3">if <condition pos:line="160" pos:column="6">(<expr><name pos:line="160" pos:column="7">ptr<pos:position pos:line="160" pos:column="10"/></name></expr>)<pos:position pos:line="160" pos:column="11"/></condition><then pos:line="160" pos:column="11">
  <block pos:line="161" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="162" pos:column="5">ptr<pos:position pos:line="162" pos:column="8"/></name><operator pos:line="162" pos:column="8">-&gt;<pos:position pos:line="162" pos:column="13"/></operator><name pos:line="162" pos:column="10">next<pos:position pos:line="162" pos:column="14"/></name></name> <operator pos:line="162" pos:column="15">=<pos:position pos:line="162" pos:column="16"/></operator> <call><name pos:line="162" pos:column="17">safe_calloc<pos:position pos:line="162" pos:column="28"/></name> <argument_list pos:line="162" pos:column="29">(<argument><expr><literal type="number" pos:line="162" pos:column="30">1<pos:position pos:line="162" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="162" pos:column="33">sizeof <argument_list pos:line="162" pos:column="40">(<argument><expr><name pos:line="162" pos:column="41">HOOK<pos:position pos:line="162" pos:column="45"/></name></expr></argument>)<pos:position pos:line="162" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="162" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="163" pos:column="5">ptr<pos:position pos:line="163" pos:column="8"/></name> <operator pos:line="163" pos:column="9">=<pos:position pos:line="163" pos:column="10"/></operator> <name><name pos:line="163" pos:column="11">ptr<pos:position pos:line="163" pos:column="14"/></name><operator pos:line="163" pos:column="14">-&gt;<pos:position pos:line="163" pos:column="19"/></operator><name pos:line="163" pos:column="16">next<pos:position pos:line="163" pos:column="20"/></name></name></expr>;<pos:position pos:line="163" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="164" pos:column="4"/></block></then>
  <else pos:line="165" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="166" pos:column="5">Hooks<pos:position pos:line="166" pos:column="10"/></name> <operator pos:line="166" pos:column="11">=<pos:position pos:line="166" pos:column="12"/></operator> <name pos:line="166" pos:column="13">ptr<pos:position pos:line="166" pos:column="16"/></name> <operator pos:line="166" pos:column="17">=<pos:position pos:line="166" pos:column="18"/></operator> <call><name pos:line="166" pos:column="19">safe_calloc<pos:position pos:line="166" pos:column="30"/></name> <argument_list pos:line="166" pos:column="31">(<argument><expr><literal type="number" pos:line="166" pos:column="32">1<pos:position pos:line="166" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="166" pos:column="35">sizeof <argument_list pos:line="166" pos:column="42">(<argument><expr><name pos:line="166" pos:column="43">HOOK<pos:position pos:line="166" pos:column="47"/></name></expr></argument>)<pos:position pos:line="166" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="166" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="50"/></expr_stmt></block></else></if>
  <expr_stmt><expr><name><name pos:line="167" pos:column="3">ptr<pos:position pos:line="167" pos:column="6"/></name><operator pos:line="167" pos:column="6">-&gt;<pos:position pos:line="167" pos:column="11"/></operator><name pos:line="167" pos:column="8">type<pos:position pos:line="167" pos:column="12"/></name></name> <operator pos:line="167" pos:column="13">=<pos:position pos:line="167" pos:column="14"/></operator> <name pos:line="167" pos:column="15">data<pos:position pos:line="167" pos:column="19"/></name></expr>;<pos:position pos:line="167" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="168" pos:column="3">ptr<pos:position pos:line="168" pos:column="6"/></name><operator pos:line="168" pos:column="6">-&gt;<pos:position pos:line="168" pos:column="11"/></operator><name pos:line="168" pos:column="8">command<pos:position pos:line="168" pos:column="15"/></name></name> <operator pos:line="168" pos:column="16">=<pos:position pos:line="168" pos:column="17"/></operator> <name><name pos:line="168" pos:column="18">command<pos:position pos:line="168" pos:column="25"/></name><operator pos:line="168" pos:column="25">.<pos:position pos:line="168" pos:column="26"/></operator><name pos:line="168" pos:column="26">data<pos:position pos:line="168" pos:column="30"/></name></name></expr>;<pos:position pos:line="168" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="169" pos:column="3">ptr<pos:position pos:line="169" pos:column="6"/></name><operator pos:line="169" pos:column="6">-&gt;<pos:position pos:line="169" pos:column="11"/></operator><name pos:line="169" pos:column="8">pattern<pos:position pos:line="169" pos:column="15"/></name></name> <operator pos:line="169" pos:column="16">=<pos:position pos:line="169" pos:column="17"/></operator> <name pos:line="169" pos:column="18">pat<pos:position pos:line="169" pos:column="21"/></name></expr>;<pos:position pos:line="169" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="170" pos:column="3">ptr<pos:position pos:line="170" pos:column="6"/></name><operator pos:line="170" pos:column="6">-&gt;<pos:position pos:line="170" pos:column="11"/></operator><name pos:line="170" pos:column="8">rx<pos:position pos:line="170" pos:column="10"/></name><operator pos:line="170" pos:column="10">.<pos:position pos:line="170" pos:column="11"/></operator><name pos:line="170" pos:column="11">pattern<pos:position pos:line="170" pos:column="18"/></name></name> <operator pos:line="170" pos:column="19">=<pos:position pos:line="170" pos:column="20"/></operator> <name><name pos:line="170" pos:column="21">pattern<pos:position pos:line="170" pos:column="28"/></name><operator pos:line="170" pos:column="28">.<pos:position pos:line="170" pos:column="29"/></operator><name pos:line="170" pos:column="29">data<pos:position pos:line="170" pos:column="33"/></name></name></expr>;<pos:position pos:line="170" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="171" pos:column="3">ptr<pos:position pos:line="171" pos:column="6"/></name><operator pos:line="171" pos:column="6">-&gt;<pos:position pos:line="171" pos:column="11"/></operator><name pos:line="171" pos:column="8">rx<pos:position pos:line="171" pos:column="10"/></name><operator pos:line="171" pos:column="10">.<pos:position pos:line="171" pos:column="11"/></operator><name pos:line="171" pos:column="11">rx<pos:position pos:line="171" pos:column="13"/></name></name> <operator pos:line="171" pos:column="14">=<pos:position pos:line="171" pos:column="15"/></operator> <name pos:line="171" pos:column="16">rx<pos:position pos:line="171" pos:column="18"/></name></expr>;<pos:position pos:line="171" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="172" pos:column="3">ptr<pos:position pos:line="172" pos:column="6"/></name><operator pos:line="172" pos:column="6">-&gt;<pos:position pos:line="172" pos:column="11"/></operator><name pos:line="172" pos:column="8">rx<pos:position pos:line="172" pos:column="10"/></name><operator pos:line="172" pos:column="10">.<pos:position pos:line="172" pos:column="11"/></operator></name><operator pos:line="172" pos:column="11">not<pos:position pos:line="172" pos:column="14"/></operator> <operator pos:line="172" pos:column="15">=<pos:position pos:line="172" pos:column="16"/></operator> <operator pos:line="172" pos:column="17">not<pos:position pos:line="172" pos:column="20"/></operator></expr>;<pos:position pos:line="172" pos:column="21"/></expr_stmt>
  <return pos:line="173" pos:column="3">return <expr><literal type="number" pos:line="173" pos:column="10">0<pos:position pos:line="173" pos:column="11"/></literal></expr>;<pos:position pos:line="173" pos:column="12"/></return>

<label><name pos:line="175" pos:column="1">error<pos:position pos:line="175" pos:column="6"/></name>:<pos:position pos:line="175" pos:column="7"/></label>
  <expr_stmt><expr><call><name pos:line="176" pos:column="3">FREE<pos:position pos:line="176" pos:column="7"/></name> <argument_list pos:line="176" pos:column="8">(<argument><expr><operator pos:line="176" pos:column="9">&amp;<pos:position pos:line="176" pos:column="14"/></operator><name><name pos:line="176" pos:column="10">pattern<pos:position pos:line="176" pos:column="17"/></name><operator pos:line="176" pos:column="17">.<pos:position pos:line="176" pos:column="18"/></operator><name pos:line="176" pos:column="18">data<pos:position pos:line="176" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="176" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="177" pos:column="3">FREE<pos:position pos:line="177" pos:column="7"/></name> <argument_list pos:line="177" pos:column="8">(<argument><expr><operator pos:line="177" pos:column="9">&amp;<pos:position pos:line="177" pos:column="14"/></operator><name><name pos:line="177" pos:column="10">command<pos:position pos:line="177" pos:column="17"/></name><operator pos:line="177" pos:column="17">.<pos:position pos:line="177" pos:column="18"/></operator><name pos:line="177" pos:column="18">data<pos:position pos:line="177" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="177" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="24"/></expr_stmt>
  <return pos:line="178" pos:column="3">return <expr><operator pos:line="178" pos:column="10">(<pos:position pos:line="178" pos:column="11"/></operator><operator pos:line="178" pos:column="11">-<pos:position pos:line="178" pos:column="12"/></operator><literal type="number" pos:line="178" pos:column="12">1<pos:position pos:line="178" pos:column="13"/></literal><operator pos:line="178" pos:column="13">)<pos:position pos:line="178" pos:column="14"/></operator></expr>;<pos:position pos:line="178" pos:column="15"/></return>
}<pos:position pos:line="179" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2006_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">msg_cache_clean_cb<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name><modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type> <name pos:line="1" pos:column="44">id<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">body_cache_t<pos:position pos:line="1" pos:column="60"/></name><modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type> <name pos:line="1" pos:column="62">bcache<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="70">void<pos:position pos:line="1" pos:column="74"/></name><modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type> <name pos:line="1" pos:column="76">data<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">unsigned<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">int<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">uv<pos:position pos:line="3" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="20">uid<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">IMAP_DATA<pos:position pos:line="4" pos:column="12"/></name><modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type> <name pos:line="4" pos:column="14">idata<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><operator pos:line="4" pos:column="22">(<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">IMAP_DATA<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">*<pos:position pos:line="4" pos:column="33"/></operator><operator pos:line="4" pos:column="33">)<pos:position pos:line="4" pos:column="34"/></operator><name pos:line="4" pos:column="34">data<pos:position pos:line="4" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><call><name pos:line="6" pos:column="7">sscanf<pos:position pos:line="6" pos:column="13"/></name> <argument_list pos:line="6" pos:column="14">(<argument><expr><name pos:line="6" pos:column="15">id<pos:position pos:line="6" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="19">"%u-%u"<pos:position pos:line="6" pos:column="26"/></literal></expr></argument>, <argument><expr><operator pos:line="6" pos:column="28">&amp;<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="29">uv<pos:position pos:line="6" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="33">&amp;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="34">uid<pos:position pos:line="6" pos:column="37"/></name></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></call> <operator pos:line="6" pos:column="39">!=<pos:position pos:line="6" pos:column="41"/></operator> <literal type="number" pos:line="6" pos:column="42">2<pos:position pos:line="6" pos:column="43"/></literal></expr>)<pos:position pos:line="6" pos:column="44"/></condition><then pos:line="6" pos:column="44">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><literal type="number" pos:line="7" pos:column="12">0<pos:position pos:line="7" pos:column="13"/></literal></expr>;<pos:position pos:line="7" pos:column="14"/></return></block></then></if>

  <comment type="block" pos:line="9" pos:column="3">/* bad UID */</comment>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">uv<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">!=<pos:position pos:line="10" pos:column="12"/></operator> <name><name pos:line="10" pos:column="13">idata<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">uid_validity<pos:position pos:line="10" pos:column="32"/></name></name> <operator pos:line="10" pos:column="33">||<pos:position pos:line="10" pos:column="35"/></operator>
      <operator pos:line="11" pos:column="7">!<pos:position pos:line="11" pos:column="8"/></operator><call><name pos:line="11" pos:column="8">int_hash_find<pos:position pos:line="11" pos:column="21"/></name> <argument_list pos:line="11" pos:column="22">(<argument><expr><name><name pos:line="11" pos:column="23">idata<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">-&gt;<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="30">uid_hash<pos:position pos:line="11" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="40">uid<pos:position pos:line="11" pos:column="43"/></name></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="45"/></condition><then pos:line="11" pos:column="45">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="5">mutt_bcache_del<pos:position pos:line="12" pos:column="20"/></name> <argument_list pos:line="12" pos:column="21">(<argument><expr><name pos:line="12" pos:column="22">bcache<pos:position pos:line="12" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="30">id<pos:position pos:line="12" pos:column="32"/></name></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt></block></then></if>

  <return pos:line="14" pos:column="3">return <expr><literal type="number" pos:line="14" pos:column="10">0<pos:position pos:line="14" pos:column="11"/></literal></expr>;<pos:position pos:line="14" pos:column="12"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

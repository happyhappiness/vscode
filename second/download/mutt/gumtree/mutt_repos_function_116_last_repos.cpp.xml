<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_116_last_repos.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">mutt_get_name<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">ADDRESS<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">a<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">ADDRESS<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">ali<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">a<pos:position pos:line="5" pos:column="8"/></name></expr>)<pos:position pos:line="5" pos:column="9"/></condition><then pos:line="5" pos:column="9">
  <block pos:line="6" pos:column="3">{
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">option<pos:position pos:line="7" pos:column="15"/></name> <argument_list pos:line="7" pos:column="16">(<argument><expr><name pos:line="7" pos:column="17">OPTREVALIAS<pos:position pos:line="7" pos:column="28"/></name></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></call> <operator pos:line="7" pos:column="30">&amp;&amp;<pos:position pos:line="7" pos:column="40"/></operator> <operator pos:line="7" pos:column="33">(<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="34">ali<pos:position pos:line="7" pos:column="37"/></name> <operator pos:line="7" pos:column="38">=<pos:position pos:line="7" pos:column="39"/></operator> <call><name pos:line="7" pos:column="40">alias_reverse_lookup<pos:position pos:line="7" pos:column="60"/></name> <argument_list pos:line="7" pos:column="61">(<argument><expr><name pos:line="7" pos:column="62">a<pos:position pos:line="7" pos:column="63"/></name></expr></argument>)<pos:position pos:line="7" pos:column="64"/></argument_list></call><operator pos:line="7" pos:column="64">)<pos:position pos:line="7" pos:column="65"/></operator> <operator pos:line="7" pos:column="66">&amp;&amp;<pos:position pos:line="7" pos:column="76"/></operator> <name><name pos:line="7" pos:column="69">ali<pos:position pos:line="7" pos:column="72"/></name><operator pos:line="7" pos:column="72">-&gt;<pos:position pos:line="7" pos:column="77"/></operator><name pos:line="7" pos:column="74">personal<pos:position pos:line="7" pos:column="82"/></name></name></expr>)<pos:position pos:line="7" pos:column="83"/></condition><then pos:line="7" pos:column="83">
      <block type="pseudo"><return pos:line="8" pos:column="7">return <expr><name><name pos:line="8" pos:column="14">ali<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">personal<pos:position pos:line="8" pos:column="27"/></name></name></expr>;<pos:position pos:line="8" pos:column="28"/></return></block></then>
    <elseif pos:line="9" pos:column="5">else <if pos:line="9" pos:column="10">if <condition pos:line="9" pos:column="13">(<expr><name><name pos:line="9" pos:column="14">a<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">personal<pos:position pos:line="9" pos:column="25"/></name></name></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26">
      <block type="pseudo"><return pos:line="10" pos:column="7">return <expr><name><name pos:line="10" pos:column="14">a<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">personal<pos:position pos:line="10" pos:column="25"/></name></name></expr>;<pos:position pos:line="10" pos:column="26"/></return></block></then></if></elseif>
    <elseif pos:line="11" pos:column="5">else <if pos:line="11" pos:column="10">if <condition pos:line="11" pos:column="13">(<expr><name><name pos:line="11" pos:column="14">a<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">mailbox<pos:position pos:line="11" pos:column="24"/></name></name></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25">
      <block type="pseudo"><return pos:line="12" pos:column="7">return <expr><operator pos:line="12" pos:column="14">(<pos:position pos:line="12" pos:column="15"/></operator><call><name pos:line="12" pos:column="15">mutt_addr_for_display<pos:position pos:line="12" pos:column="36"/></name> <argument_list pos:line="12" pos:column="37">(<argument><expr><name pos:line="12" pos:column="38">a<pos:position pos:line="12" pos:column="39"/></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call><operator pos:line="12" pos:column="40">)<pos:position pos:line="12" pos:column="41"/></operator></expr>;<pos:position pos:line="12" pos:column="42"/></return></block></then></if></elseif></if>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="14" pos:column="3">/* don't return NULL to avoid segfault when printing/comparing */</comment>
  <return pos:line="15" pos:column="3">return <expr><operator pos:line="15" pos:column="10">(<pos:position pos:line="15" pos:column="11"/></operator><literal type="string" pos:line="15" pos:column="11">""<pos:position pos:line="15" pos:column="13"/></literal><operator pos:line="15" pos:column="13">)<pos:position pos:line="15" pos:column="14"/></operator></expr>;<pos:position pos:line="15" pos:column="15"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

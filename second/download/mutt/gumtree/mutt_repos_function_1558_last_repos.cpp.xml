<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1558_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">maildir_parse_dir<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">CONTEXT<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type> <name pos:line="1" pos:column="41">ctx<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="46">struct<pos:position pos:line="1" pos:column="52"/></name> <name pos:line="1" pos:column="53">maildir<pos:position pos:line="1" pos:column="60"/></name></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier><modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier><modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">last<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">subdir<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">int<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">count<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="3" pos:column="31">progress_t<pos:position pos:line="3" pos:column="41"/></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">progress<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="52"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">DIR<pos:position pos:line="5" pos:column="6"/></name> <modifier pos:line="5" pos:column="7">*<pos:position pos:line="5" pos:column="8"/></modifier></type><name pos:line="5" pos:column="8">dirp<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">dirent<pos:position pos:line="6" pos:column="16"/></name></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">de<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">buf<pos:position pos:line="7" pos:column="11"/></name><index pos:line="7" pos:column="11">[<expr><name pos:line="7" pos:column="12">_POSIX_PATH_MAX<pos:position pos:line="7" pos:column="27"/></name></expr>]<pos:position pos:line="7" pos:column="28"/></index></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">is_old<pos:position pos:line="8" pos:column="13"/></name> <init pos:line="8" pos:column="14">= <expr><literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">maildir<pos:position pos:line="9" pos:column="17"/></name></name> <modifier pos:line="9" pos:column="18">*<pos:position pos:line="9" pos:column="19"/></modifier></type><name pos:line="9" pos:column="19">entry<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">HEADER<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">h<pos:position pos:line="10" pos:column="12"/></name></decl>;<pos:position pos:line="10" pos:column="13"/></decl_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">subdir<pos:position pos:line="12" pos:column="13"/></name></expr>)<pos:position pos:line="12" pos:column="14"/></condition><then pos:line="12" pos:column="14">
  <block pos:line="13" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">snprintf<pos:position pos:line="14" pos:column="13"/></name> <argument_list pos:line="14" pos:column="14">(<argument><expr><name pos:line="14" pos:column="15">buf<pos:position pos:line="14" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="20">sizeof <argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">buf<pos:position pos:line="14" pos:column="31"/></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="34">"%s/%s"<pos:position pos:line="14" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="43">ctx<pos:position pos:line="14" pos:column="46"/></name><operator pos:line="14" pos:column="46">-&gt;<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="48">path<pos:position pos:line="14" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="54">subdir<pos:position pos:line="14" pos:column="60"/></name></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">is_old<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <operator pos:line="15" pos:column="14">(<pos:position pos:line="15" pos:column="15"/></operator><call><name pos:line="15" pos:column="15">mutt_strcmp<pos:position pos:line="15" pos:column="26"/></name> <argument_list pos:line="15" pos:column="27">(<argument><expr><literal type="string" pos:line="15" pos:column="28">"cur"<pos:position pos:line="15" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="35">subdir<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call> <operator pos:line="15" pos:column="43">==<pos:position pos:line="15" pos:column="45"/></operator> <literal type="number" pos:line="15" pos:column="46">0<pos:position pos:line="15" pos:column="47"/></literal><operator pos:line="15" pos:column="47">)<pos:position pos:line="15" pos:column="48"/></operator></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="16" pos:column="4"/></block></then>
  <else pos:line="17" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="5">strfcpy<pos:position pos:line="18" pos:column="12"/></name> <argument_list pos:line="18" pos:column="13">(<argument><expr><name pos:line="18" pos:column="14">buf<pos:position pos:line="18" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="19">ctx<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">-&gt;<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="24">path<pos:position pos:line="18" pos:column="28"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="30">sizeof <argument_list pos:line="18" pos:column="37">(<argument><expr><name pos:line="18" pos:column="38">buf<pos:position pos:line="18" pos:column="41"/></name></expr></argument>)<pos:position pos:line="18" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="44"/></expr_stmt></block></else></if>

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><operator pos:line="20" pos:column="7">(<pos:position pos:line="20" pos:column="8"/></operator><name pos:line="20" pos:column="8">dirp<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <call><name pos:line="20" pos:column="15">opendir<pos:position pos:line="20" pos:column="22"/></name> <argument_list pos:line="20" pos:column="23">(<argument><expr><name pos:line="20" pos:column="24">buf<pos:position pos:line="20" pos:column="27"/></name></expr></argument>)<pos:position pos:line="20" pos:column="28"/></argument_list></call><operator pos:line="20" pos:column="28">)<pos:position pos:line="20" pos:column="29"/></operator> <operator pos:line="20" pos:column="30">==<pos:position pos:line="20" pos:column="32"/></operator> <name pos:line="20" pos:column="33">NULL<pos:position pos:line="20" pos:column="37"/></name></expr>)<pos:position pos:line="20" pos:column="38"/></condition><then pos:line="20" pos:column="38">
    <block type="pseudo"><return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">-<pos:position pos:line="21" pos:column="13"/></operator><literal type="number" pos:line="21" pos:column="13">1<pos:position pos:line="21" pos:column="14"/></literal></expr>;<pos:position pos:line="21" pos:column="15"/></return></block></then></if>

  <while pos:line="23" pos:column="3">while <condition pos:line="23" pos:column="9">(<expr><operator pos:line="23" pos:column="10">(<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="11">de<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <call><name pos:line="23" pos:column="16">readdir<pos:position pos:line="23" pos:column="23"/></name> <argument_list pos:line="23" pos:column="24">(<argument><expr><name pos:line="23" pos:column="25">dirp<pos:position pos:line="23" pos:column="29"/></name></expr></argument>)<pos:position pos:line="23" pos:column="30"/></argument_list></call><operator pos:line="23" pos:column="30">)<pos:position pos:line="23" pos:column="31"/></operator> <operator pos:line="23" pos:column="32">!=<pos:position pos:line="23" pos:column="34"/></operator> <name pos:line="23" pos:column="35">NULL<pos:position pos:line="23" pos:column="39"/></name></expr>)<pos:position pos:line="23" pos:column="40"/></condition>
  <block pos:line="24" pos:column="3">{
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">(<pos:position pos:line="25" pos:column="10"/></operator><name><name pos:line="25" pos:column="10">ctx<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">-&gt;<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="15">magic<pos:position pos:line="25" pos:column="20"/></name></name> <operator pos:line="25" pos:column="21">==<pos:position pos:line="25" pos:column="23"/></operator> <name pos:line="25" pos:column="24">MUTT_MH<pos:position pos:line="25" pos:column="31"/></name> <operator pos:line="25" pos:column="32">&amp;&amp;<pos:position pos:line="25" pos:column="42"/></operator> <operator pos:line="25" pos:column="35">!<pos:position pos:line="25" pos:column="36"/></operator><call><name pos:line="25" pos:column="36">mh_valid_message<pos:position pos:line="25" pos:column="52"/></name> <argument_list pos:line="25" pos:column="53">(<argument><expr><name><name pos:line="25" pos:column="54">de<pos:position pos:line="25" pos:column="56"/></name><operator pos:line="25" pos:column="56">-&gt;<pos:position pos:line="25" pos:column="61"/></operator><name pos:line="25" pos:column="58">d_name<pos:position pos:line="25" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="65"/></argument_list></call><operator pos:line="25" pos:column="65">)<pos:position pos:line="25" pos:column="66"/></operator>
	<operator pos:line="26" pos:column="9">||<pos:position pos:line="26" pos:column="11"/></operator> <operator pos:line="26" pos:column="12">(<pos:position pos:line="26" pos:column="13"/></operator><name><name pos:line="26" pos:column="13">ctx<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">-&gt;<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="18">magic<pos:position pos:line="26" pos:column="23"/></name></name> <operator pos:line="26" pos:column="24">==<pos:position pos:line="26" pos:column="26"/></operator> <name pos:line="26" pos:column="27">MUTT_MAILDIR<pos:position pos:line="26" pos:column="39"/></name> <operator pos:line="26" pos:column="40">&amp;&amp;<pos:position pos:line="26" pos:column="50"/></operator> <operator pos:line="26" pos:column="43">*<pos:position pos:line="26" pos:column="44"/></operator><name><name pos:line="26" pos:column="44">de<pos:position pos:line="26" pos:column="46"/></name><operator pos:line="26" pos:column="46">-&gt;<pos:position pos:line="26" pos:column="51"/></operator><name pos:line="26" pos:column="48">d_name<pos:position pos:line="26" pos:column="54"/></name></name> <operator pos:line="26" pos:column="55">==<pos:position pos:line="26" pos:column="57"/></operator> <literal type="char" pos:line="26" pos:column="58">'.'<pos:position pos:line="26" pos:column="61"/></literal><operator pos:line="26" pos:column="61">)<pos:position pos:line="26" pos:column="62"/></operator></expr>)<pos:position pos:line="26" pos:column="63"/></condition><then pos:line="26" pos:column="63">
      <block type="pseudo"><continue pos:line="27" pos:column="7">continue;<pos:position pos:line="27" pos:column="16"/></continue></block></then></if>

    <comment type="block" pos:line="29" pos:column="5">/* FOO - really ignore the return value? */</comment>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">dprint<pos:position pos:line="30" pos:column="11"/></name> <argument_list pos:line="30" pos:column="12">(<argument><expr><literal type="number" pos:line="30" pos:column="13">2<pos:position pos:line="30" pos:column="14"/></literal></expr></argument>,
	    <argument><expr><operator pos:line="31" pos:column="13">(<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">debugfile<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">,<pos:position pos:line="31" pos:column="24"/></operator> <literal type="string" pos:line="31" pos:column="25">"%s:%d: queueing %s\n"<pos:position pos:line="31" pos:column="47"/></literal><operator pos:line="31" pos:column="47">,<pos:position pos:line="31" pos:column="48"/></operator> <name pos:line="31" pos:column="49">__FILE__<pos:position pos:line="31" pos:column="57"/></name><operator pos:line="31" pos:column="57">,<pos:position pos:line="31" pos:column="58"/></operator> <name pos:line="31" pos:column="59">__LINE__<pos:position pos:line="31" pos:column="67"/></name><operator pos:line="31" pos:column="67">,<pos:position pos:line="31" pos:column="68"/></operator>
	     <name><name pos:line="32" pos:column="14">de<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">-&gt;<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="18">d_name<pos:position pos:line="32" pos:column="24"/></name></name><operator pos:line="32" pos:column="24">)<pos:position pos:line="32" pos:column="25"/></operator></expr></argument>)<pos:position pos:line="32" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name pos:line="34" pos:column="5">h<pos:position pos:line="34" pos:column="6"/></name> <operator pos:line="34" pos:column="7">=<pos:position pos:line="34" pos:column="8"/></operator> <call><name pos:line="34" pos:column="9">mutt_new_header<pos:position pos:line="34" pos:column="24"/></name> <argument_list pos:line="34" pos:column="25">()<pos:position pos:line="34" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">h<pos:position pos:line="35" pos:column="6"/></name><operator pos:line="35" pos:column="6">-&gt;<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="8">old<pos:position pos:line="35" pos:column="11"/></name></name> <operator pos:line="35" pos:column="12">=<pos:position pos:line="35" pos:column="13"/></operator> <name pos:line="35" pos:column="14">is_old<pos:position pos:line="35" pos:column="20"/></name></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name><name pos:line="36" pos:column="9">ctx<pos:position pos:line="36" pos:column="12"/></name><operator pos:line="36" pos:column="12">-&gt;<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="14">magic<pos:position pos:line="36" pos:column="19"/></name></name> <operator pos:line="36" pos:column="20">==<pos:position pos:line="36" pos:column="22"/></operator> <name pos:line="36" pos:column="23">MUTT_MAILDIR<pos:position pos:line="36" pos:column="35"/></name></expr>)<pos:position pos:line="36" pos:column="36"/></condition><then pos:line="36" pos:column="36">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="7">maildir_parse_flags<pos:position pos:line="37" pos:column="26"/></name> <argument_list pos:line="37" pos:column="27">(<argument><expr><name pos:line="37" pos:column="28">h<pos:position pos:line="37" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="31">de<pos:position pos:line="37" pos:column="33"/></name><operator pos:line="37" pos:column="33">-&gt;<pos:position pos:line="37" pos:column="38"/></operator><name pos:line="37" pos:column="35">d_name<pos:position pos:line="37" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="43"/></expr_stmt></block></then></if>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">count<pos:position pos:line="39" pos:column="14"/></name></expr>)<pos:position pos:line="39" pos:column="15"/></condition><then pos:line="39" pos:column="15">
    <block pos:line="40" pos:column="5">{
      <expr_stmt><expr><operator pos:line="41" pos:column="7">(<pos:position pos:line="41" pos:column="8"/></operator><operator pos:line="41" pos:column="8">*<pos:position pos:line="41" pos:column="9"/></operator><name pos:line="41" pos:column="9">count<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">)<pos:position pos:line="41" pos:column="15"/></operator><operator pos:line="41" pos:column="15">++<pos:position pos:line="41" pos:column="17"/></operator></expr>;<pos:position pos:line="41" pos:column="18"/></expr_stmt>
      <if pos:line="42" pos:column="7">if <condition pos:line="42" pos:column="10">(<expr><operator pos:line="42" pos:column="11">!<pos:position pos:line="42" pos:column="12"/></operator><name><name pos:line="42" pos:column="12">ctx<pos:position pos:line="42" pos:column="15"/></name><operator pos:line="42" pos:column="15">-&gt;<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="17">quiet<pos:position pos:line="42" pos:column="22"/></name></name> <operator pos:line="42" pos:column="23">&amp;&amp;<pos:position pos:line="42" pos:column="33"/></operator> <name pos:line="42" pos:column="26">progress<pos:position pos:line="42" pos:column="34"/></name></expr>)<pos:position pos:line="42" pos:column="35"/></condition><then pos:line="42" pos:column="35">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="9">mutt_progress_update<pos:position pos:line="43" pos:column="29"/></name> <argument_list pos:line="43" pos:column="30">(<argument><expr><name pos:line="43" pos:column="31">progress<pos:position pos:line="43" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="41">*<pos:position pos:line="43" pos:column="42"/></operator><name pos:line="43" pos:column="42">count<pos:position pos:line="43" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="49">-<pos:position pos:line="43" pos:column="50"/></operator><literal type="number" pos:line="43" pos:column="50">1<pos:position pos:line="43" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="53"/></expr_stmt></block></then></if>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">subdir<pos:position pos:line="46" pos:column="15"/></name></expr>)<pos:position pos:line="46" pos:column="16"/></condition><then pos:line="46" pos:column="16">
    <block pos:line="47" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="48" pos:column="7">char<pos:position pos:line="48" pos:column="11"/></name></type> <name><name pos:line="48" pos:column="12">tmp<pos:position pos:line="48" pos:column="15"/></name><index pos:line="48" pos:column="15">[<expr><name pos:line="48" pos:column="16">_POSIX_PATH_MAX<pos:position pos:line="48" pos:column="31"/></name></expr>]<pos:position pos:line="48" pos:column="32"/></index></name></decl>;<pos:position pos:line="48" pos:column="33"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">snprintf<pos:position pos:line="49" pos:column="15"/></name> <argument_list pos:line="49" pos:column="16">(<argument><expr><name pos:line="49" pos:column="17">tmp<pos:position pos:line="49" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="22">sizeof <argument_list pos:line="49" pos:column="29">(<argument><expr><name pos:line="49" pos:column="30">tmp<pos:position pos:line="49" pos:column="33"/></name></expr></argument>)<pos:position pos:line="49" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="36">"%s/%s"<pos:position pos:line="49" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="45">subdir<pos:position pos:line="49" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="53">de<pos:position pos:line="49" pos:column="55"/></name><operator pos:line="49" pos:column="55">-&gt;<pos:position pos:line="49" pos:column="60"/></operator><name pos:line="49" pos:column="57">d_name<pos:position pos:line="49" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="65"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="50" pos:column="7">h<pos:position pos:line="50" pos:column="8"/></name><operator pos:line="50" pos:column="8">-&gt;<pos:position pos:line="50" pos:column="13"/></operator><name pos:line="50" pos:column="10">path<pos:position pos:line="50" pos:column="14"/></name></name> <operator pos:line="50" pos:column="15">=<pos:position pos:line="50" pos:column="16"/></operator> <call><name pos:line="50" pos:column="17">safe_strdup<pos:position pos:line="50" pos:column="28"/></name> <argument_list pos:line="50" pos:column="29">(<argument><expr><name pos:line="50" pos:column="30">tmp<pos:position pos:line="50" pos:column="33"/></name></expr></argument>)<pos:position pos:line="50" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="51" pos:column="6"/></block></then>
    <else pos:line="52" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="53" pos:column="7">h<pos:position pos:line="53" pos:column="8"/></name><operator pos:line="53" pos:column="8">-&gt;<pos:position pos:line="53" pos:column="13"/></operator><name pos:line="53" pos:column="10">path<pos:position pos:line="53" pos:column="14"/></name></name> <operator pos:line="53" pos:column="15">=<pos:position pos:line="53" pos:column="16"/></operator> <call><name pos:line="53" pos:column="17">safe_strdup<pos:position pos:line="53" pos:column="28"/></name> <argument_list pos:line="53" pos:column="29">(<argument><expr><name><name pos:line="53" pos:column="30">de<pos:position pos:line="53" pos:column="32"/></name><operator pos:line="53" pos:column="32">-&gt;<pos:position pos:line="53" pos:column="37"/></operator><name pos:line="53" pos:column="34">d_name<pos:position pos:line="53" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="42"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="55" pos:column="5">entry<pos:position pos:line="55" pos:column="10"/></name> <operator pos:line="55" pos:column="11">=<pos:position pos:line="55" pos:column="12"/></operator> <call><name pos:line="55" pos:column="13">safe_calloc<pos:position pos:line="55" pos:column="24"/></name> <argument_list pos:line="55" pos:column="25">(<argument><expr><sizeof pos:line="55" pos:column="26">sizeof <argument_list pos:line="55" pos:column="33">(<argument><expr pos:line="55" pos:column="34">struct <name pos:line="55" pos:column="41">maildir<pos:position pos:line="55" pos:column="48"/></name></expr></argument>)<pos:position pos:line="55" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="51">1<pos:position pos:line="55" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="56" pos:column="5">entry<pos:position pos:line="56" pos:column="10"/></name><operator pos:line="56" pos:column="10">-&gt;<pos:position pos:line="56" pos:column="15"/></operator><name pos:line="56" pos:column="12">h<pos:position pos:line="56" pos:column="13"/></name></name> <operator pos:line="56" pos:column="14">=<pos:position pos:line="56" pos:column="15"/></operator> <name pos:line="56" pos:column="16">h<pos:position pos:line="56" pos:column="17"/></name></expr>;<pos:position pos:line="56" pos:column="18"/></expr_stmt>
<cpp:ifdef pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">ifdef<pos:position pos:line="57" pos:column="7"/></cpp:directive> <name pos:line="57" pos:column="8">HAVE_DIRENT_D_INO<pos:position pos:line="57" pos:column="25"/></name></cpp:ifdef>
    <expr_stmt><expr><name><name pos:line="58" pos:column="5">entry<pos:position pos:line="58" pos:column="10"/></name><operator pos:line="58" pos:column="10">-&gt;<pos:position pos:line="58" pos:column="15"/></operator><name pos:line="58" pos:column="12">inode<pos:position pos:line="58" pos:column="17"/></name></name> <operator pos:line="58" pos:column="18">=<pos:position pos:line="58" pos:column="19"/></operator> <name><name pos:line="58" pos:column="20">de<pos:position pos:line="58" pos:column="22"/></name><operator pos:line="58" pos:column="22">-&gt;<pos:position pos:line="58" pos:column="27"/></operator><name pos:line="58" pos:column="24">d_ino<pos:position pos:line="58" pos:column="29"/></name></name></expr>;<pos:position pos:line="58" pos:column="30"/></expr_stmt>
<cpp:endif pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">endif<pos:position pos:line="59" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="59" pos:column="8">/* HAVE_DIRENT_D_INO */</comment>
    <expr_stmt><expr><operator pos:line="60" pos:column="5">*<pos:position pos:line="60" pos:column="6"/></operator><operator pos:line="60" pos:column="6">*<pos:position pos:line="60" pos:column="7"/></operator><name pos:line="60" pos:column="7">last<pos:position pos:line="60" pos:column="11"/></name> <operator pos:line="60" pos:column="12">=<pos:position pos:line="60" pos:column="13"/></operator> <name pos:line="60" pos:column="14">entry<pos:position pos:line="60" pos:column="19"/></name></expr>;<pos:position pos:line="60" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="61" pos:column="5">*<pos:position pos:line="61" pos:column="6"/></operator><name pos:line="61" pos:column="6">last<pos:position pos:line="61" pos:column="10"/></name> <operator pos:line="61" pos:column="11">=<pos:position pos:line="61" pos:column="12"/></operator> <operator pos:line="61" pos:column="13">&amp;<pos:position pos:line="61" pos:column="18"/></operator><name><name pos:line="61" pos:column="14">entry<pos:position pos:line="61" pos:column="19"/></name><operator pos:line="61" pos:column="19">-&gt;<pos:position pos:line="61" pos:column="24"/></operator><name pos:line="61" pos:column="21">next<pos:position pos:line="61" pos:column="25"/></name></name></expr>;<pos:position pos:line="61" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="62" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="64" pos:column="3">closedir<pos:position pos:line="64" pos:column="11"/></name> <argument_list pos:line="64" pos:column="12">(<argument><expr><name pos:line="64" pos:column="13">dirp<pos:position pos:line="64" pos:column="17"/></name></expr></argument>)<pos:position pos:line="64" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="19"/></expr_stmt>

  <return pos:line="66" pos:column="3">return <expr><literal type="number" pos:line="66" pos:column="10">0<pos:position pos:line="66" pos:column="11"/></literal></expr>;<pos:position pos:line="66" pos:column="12"/></return>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

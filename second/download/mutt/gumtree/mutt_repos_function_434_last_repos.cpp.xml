<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_434_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">BODY<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">smime_handle_entity<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">BODY<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">m<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">STATE<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">s<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">FILE<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">outFile<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">len<pos:position pos:line="3" pos:column="10"/></name><init pos:line="3" pos:column="10">=<expr><literal type="number" pos:line="3" pos:column="11">0<pos:position pos:line="3" pos:column="12"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">c<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">buf<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><name pos:line="5" pos:column="12">HUGE_STRING<pos:position pos:line="5" pos:column="23"/></name></expr>]<pos:position pos:line="5" pos:column="24"/></index></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">outfile<pos:position pos:line="6" pos:column="15"/></name><index pos:line="6" pos:column="15">[<expr><name pos:line="6" pos:column="16">_POSIX_PATH_MAX<pos:position pos:line="6" pos:column="31"/></name></expr>]<pos:position pos:line="6" pos:column="32"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="6" pos:column="34">errfile<pos:position pos:line="6" pos:column="41"/></name><index pos:line="6" pos:column="41">[<expr><name pos:line="6" pos:column="42">_POSIX_PATH_MAX<pos:position pos:line="6" pos:column="57"/></name></expr>]<pos:position pos:line="6" pos:column="58"/></index></name></decl>;<pos:position pos:line="6" pos:column="59"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">tmpfname<pos:position pos:line="7" pos:column="16"/></name><index pos:line="7" pos:column="16">[<expr><name pos:line="7" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="7" pos:column="32"/></name></expr>]<pos:position pos:line="7" pos:column="33"/></index></name></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">tmptmpfname<pos:position pos:line="8" pos:column="19"/></name><index pos:line="8" pos:column="19">[<expr><name pos:line="8" pos:column="20">_POSIX_PATH_MAX<pos:position pos:line="8" pos:column="35"/></name></expr>]<pos:position pos:line="8" pos:column="36"/></index></name></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">FILE<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">smimeout<pos:position pos:line="9" pos:column="17"/></name> <init pos:line="9" pos:column="18">= <expr><name pos:line="9" pos:column="20">NULL<pos:position pos:line="9" pos:column="24"/></name></expr></init></decl>, <modifier pos:line="9" pos:column="26">*<pos:position pos:line="9" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="27">smimein<pos:position pos:line="9" pos:column="34"/></name><init pos:line="9" pos:column="34">=<expr><name pos:line="9" pos:column="35">NULL<pos:position pos:line="9" pos:column="39"/></name></expr></init></decl>, <modifier pos:line="9" pos:column="41">*<pos:position pos:line="9" pos:column="42"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="42">smimeerr<pos:position pos:line="9" pos:column="50"/></name><init pos:line="9" pos:column="50">=<expr><name pos:line="9" pos:column="51">NULL<pos:position pos:line="9" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="56"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">FILE<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">tmpfp<pos:position pos:line="10" pos:column="14"/></name><init pos:line="10" pos:column="14">=<expr><name pos:line="10" pos:column="15">NULL<pos:position pos:line="10" pos:column="19"/></name></expr></init></decl>, <modifier pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="22">tmpfp_buffer<pos:position pos:line="10" pos:column="34"/></name><init pos:line="10" pos:column="34">=<expr><name pos:line="10" pos:column="35">NULL<pos:position pos:line="10" pos:column="39"/></name></expr></init></decl>, <modifier pos:line="10" pos:column="41">*<pos:position pos:line="10" pos:column="42"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="42">fpout<pos:position pos:line="10" pos:column="47"/></name><init pos:line="10" pos:column="47">=<expr><name pos:line="10" pos:column="48">NULL<pos:position pos:line="10" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="53"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="11" pos:column="3">struct<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">stat<pos:position pos:line="11" pos:column="14"/></name></name></type> <name pos:line="11" pos:column="15">info<pos:position pos:line="11" pos:column="19"/></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">BODY<pos:position pos:line="12" pos:column="7"/></name> <modifier pos:line="12" pos:column="8">*<pos:position pos:line="12" pos:column="9"/></modifier></type><name pos:line="12" pos:column="9">p<pos:position pos:line="12" pos:column="10"/></name><init pos:line="12" pos:column="10">=<expr><name pos:line="12" pos:column="11">NULL<pos:position pos:line="12" pos:column="15"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">pid_t<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">thepid<pos:position pos:line="13" pos:column="15"/></name><init pos:line="13" pos:column="15">=<expr><operator pos:line="13" pos:column="16">-<pos:position pos:line="13" pos:column="17"/></operator><literal type="number" pos:line="13" pos:column="17">1<pos:position pos:line="13" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">unsigned<pos:position pos:line="14" pos:column="11"/></name> <name pos:line="14" pos:column="12">int<pos:position pos:line="14" pos:column="15"/></name></type> <name pos:line="14" pos:column="16">type<pos:position pos:line="14" pos:column="20"/></name> <init pos:line="14" pos:column="21">= <expr><call><name pos:line="14" pos:column="23">mutt_is_application_smime<pos:position pos:line="14" pos:column="48"/></name> <argument_list pos:line="14" pos:column="49">(<argument><expr><name pos:line="14" pos:column="50">m<pos:position pos:line="14" pos:column="51"/></name></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="53"/></decl_stmt>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><operator pos:line="16" pos:column="7">!<pos:position pos:line="16" pos:column="8"/></operator><operator pos:line="16" pos:column="8">(<pos:position pos:line="16" pos:column="9"/></operator><name pos:line="16" pos:column="9">type<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">&amp;<pos:position pos:line="16" pos:column="19"/></operator> <name pos:line="16" pos:column="16">APPLICATION_SMIME<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">)<pos:position pos:line="16" pos:column="34"/></operator></expr>)<pos:position pos:line="16" pos:column="35"/></condition><then pos:line="16" pos:column="35"> <block type="pseudo"><return pos:line="16" pos:column="36">return <expr><name pos:line="16" pos:column="43">NULL<pos:position pos:line="16" pos:column="47"/></name></expr>;<pos:position pos:line="16" pos:column="48"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">mutt_mktemp<pos:position pos:line="18" pos:column="14"/></name> <argument_list pos:line="18" pos:column="15">(<argument><expr><name pos:line="18" pos:column="16">outfile<pos:position pos:line="18" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="25">sizeof <argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">outfile<pos:position pos:line="18" pos:column="40"/></name></expr></argument>)<pos:position pos:line="18" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="43"/></expr_stmt>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><operator pos:line="19" pos:column="7">(<pos:position pos:line="19" pos:column="8"/></operator><name pos:line="19" pos:column="8">smimeout<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <call><name pos:line="19" pos:column="19">safe_fopen<pos:position pos:line="19" pos:column="29"/></name> <argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">outfile<pos:position pos:line="19" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="40">"w+"<pos:position pos:line="19" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="45"/></argument_list></call><operator pos:line="19" pos:column="45">)<pos:position pos:line="19" pos:column="46"/></operator> <operator pos:line="19" pos:column="47">==<pos:position pos:line="19" pos:column="49"/></operator> <name pos:line="19" pos:column="50">NULL<pos:position pos:line="19" pos:column="54"/></name></expr>)<pos:position pos:line="19" pos:column="55"/></condition><then pos:line="19" pos:column="55">
  <block pos:line="20" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">mutt_perror<pos:position pos:line="21" pos:column="16"/></name> <argument_list pos:line="21" pos:column="17">(<argument><expr><name pos:line="21" pos:column="18">outfile<pos:position pos:line="21" pos:column="25"/></name></expr></argument>)<pos:position pos:line="21" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
    <return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">NULL<pos:position pos:line="22" pos:column="16"/></name></expr>;<pos:position pos:line="22" pos:column="17"/></return>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>
  
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">mutt_mktemp<pos:position pos:line="25" pos:column="14"/></name> <argument_list pos:line="25" pos:column="15">(<argument><expr><name pos:line="25" pos:column="16">errfile<pos:position pos:line="25" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="25">sizeof <argument_list pos:line="25" pos:column="32">(<argument><expr><name pos:line="25" pos:column="33">errfile<pos:position pos:line="25" pos:column="40"/></name></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><operator pos:line="26" pos:column="7">(<pos:position pos:line="26" pos:column="8"/></operator><name pos:line="26" pos:column="8">smimeerr<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <call><name pos:line="26" pos:column="19">safe_fopen<pos:position pos:line="26" pos:column="29"/></name> <argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">errfile<pos:position pos:line="26" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="40">"w+"<pos:position pos:line="26" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="45"/></argument_list></call><operator pos:line="26" pos:column="45">)<pos:position pos:line="26" pos:column="46"/></operator> <operator pos:line="26" pos:column="47">==<pos:position pos:line="26" pos:column="49"/></operator> <name pos:line="26" pos:column="50">NULL<pos:position pos:line="26" pos:column="54"/></name></expr>)<pos:position pos:line="26" pos:column="55"/></condition><then pos:line="26" pos:column="55">
  <block pos:line="27" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">mutt_perror<pos:position pos:line="28" pos:column="16"/></name> <argument_list pos:line="28" pos:column="17">(<argument><expr><name pos:line="28" pos:column="18">errfile<pos:position pos:line="28" pos:column="25"/></name></expr></argument>)<pos:position pos:line="28" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">safe_fclose<pos:position pos:line="29" pos:column="16"/></name> <argument_list pos:line="29" pos:column="17">(<argument><expr><operator pos:line="29" pos:column="18">&amp;<pos:position pos:line="29" pos:column="23"/></operator><name pos:line="29" pos:column="19">smimeout<pos:position pos:line="29" pos:column="27"/></name></expr></argument>)<pos:position pos:line="29" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt> <expr_stmt><expr><name pos:line="29" pos:column="30">smimeout<pos:position pos:line="29" pos:column="38"/></name> <operator pos:line="29" pos:column="39">=<pos:position pos:line="29" pos:column="40"/></operator> <name pos:line="29" pos:column="41">NULL<pos:position pos:line="29" pos:column="45"/></name></expr>;<pos:position pos:line="29" pos:column="46"/></expr_stmt>
    <return pos:line="30" pos:column="5">return <expr><name pos:line="30" pos:column="12">NULL<pos:position pos:line="30" pos:column="16"/></name></expr>;<pos:position pos:line="30" pos:column="17"/></return>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">mutt_unlink<pos:position pos:line="32" pos:column="14"/></name> <argument_list pos:line="32" pos:column="15">(<argument><expr><name pos:line="32" pos:column="16">errfile<pos:position pos:line="32" pos:column="23"/></name></expr></argument>)<pos:position pos:line="32" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="25"/></expr_stmt>

  
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">mutt_mktemp<pos:position pos:line="35" pos:column="14"/></name> <argument_list pos:line="35" pos:column="15">(<argument><expr><name pos:line="35" pos:column="16">tmpfname<pos:position pos:line="35" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="26">sizeof <argument_list pos:line="35" pos:column="33">(<argument><expr><name pos:line="35" pos:column="34">tmpfname<pos:position pos:line="35" pos:column="42"/></name></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="45"/></expr_stmt>
  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><operator pos:line="36" pos:column="7">(<pos:position pos:line="36" pos:column="8"/></operator><name pos:line="36" pos:column="8">tmpfp<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <call><name pos:line="36" pos:column="16">safe_fopen<pos:position pos:line="36" pos:column="26"/></name> <argument_list pos:line="36" pos:column="27">(<argument><expr><name pos:line="36" pos:column="28">tmpfname<pos:position pos:line="36" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="38">"w+"<pos:position pos:line="36" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="43"/></argument_list></call><operator pos:line="36" pos:column="43">)<pos:position pos:line="36" pos:column="44"/></operator> <operator pos:line="36" pos:column="45">==<pos:position pos:line="36" pos:column="47"/></operator> <name pos:line="36" pos:column="48">NULL<pos:position pos:line="36" pos:column="52"/></name></expr>)<pos:position pos:line="36" pos:column="53"/></condition><then pos:line="36" pos:column="53">
  <block pos:line="37" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">mutt_perror<pos:position pos:line="38" pos:column="16"/></name> <argument_list pos:line="38" pos:column="17">(<argument><expr><name pos:line="38" pos:column="18">tmpfname<pos:position pos:line="38" pos:column="26"/></name></expr></argument>)<pos:position pos:line="38" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">safe_fclose<pos:position pos:line="39" pos:column="16"/></name> <argument_list pos:line="39" pos:column="17">(<argument><expr><operator pos:line="39" pos:column="18">&amp;<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="19">smimeout<pos:position pos:line="39" pos:column="27"/></name></expr></argument>)<pos:position pos:line="39" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="29"/></expr_stmt> <expr_stmt><expr><name pos:line="39" pos:column="30">smimeout<pos:position pos:line="39" pos:column="38"/></name> <operator pos:line="39" pos:column="39">=<pos:position pos:line="39" pos:column="40"/></operator> <name pos:line="39" pos:column="41">NULL<pos:position pos:line="39" pos:column="45"/></name></expr>;<pos:position pos:line="39" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">safe_fclose<pos:position pos:line="40" pos:column="16"/></name> <argument_list pos:line="40" pos:column="17">(<argument><expr><operator pos:line="40" pos:column="18">&amp;<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="19">smimeerr<pos:position pos:line="40" pos:column="27"/></name></expr></argument>)<pos:position pos:line="40" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt> <expr_stmt><expr><name pos:line="40" pos:column="30">smimeerr<pos:position pos:line="40" pos:column="38"/></name> <operator pos:line="40" pos:column="39">=<pos:position pos:line="40" pos:column="40"/></operator> <name pos:line="40" pos:column="41">NULL<pos:position pos:line="40" pos:column="45"/></name></expr>;<pos:position pos:line="40" pos:column="46"/></expr_stmt>
    <return pos:line="41" pos:column="5">return <expr><name pos:line="41" pos:column="12">NULL<pos:position pos:line="41" pos:column="16"/></name></expr>;<pos:position pos:line="41" pos:column="17"/></return>
  }<pos:position pos:line="42" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="44" pos:column="3">fseeko<pos:position pos:line="44" pos:column="9"/></name> <argument_list pos:line="44" pos:column="10">(<argument><expr><name><name pos:line="44" pos:column="11">s<pos:position pos:line="44" pos:column="12"/></name><operator pos:line="44" pos:column="12">-&gt;<pos:position pos:line="44" pos:column="17"/></operator><name pos:line="44" pos:column="14">fpin<pos:position pos:line="44" pos:column="18"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="20">m<pos:position pos:line="44" pos:column="21"/></name><operator pos:line="44" pos:column="21">-&gt;<pos:position pos:line="44" pos:column="26"/></operator><name pos:line="44" pos:column="23">offset<pos:position pos:line="44" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="31">0<pos:position pos:line="44" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="46" pos:column="3">mutt_copy_bytes<pos:position pos:line="46" pos:column="18"/></name> <argument_list pos:line="46" pos:column="19">(<argument><expr><name><name pos:line="46" pos:column="20">s<pos:position pos:line="46" pos:column="21"/></name><operator pos:line="46" pos:column="21">-&gt;<pos:position pos:line="46" pos:column="26"/></operator><name pos:line="46" pos:column="23">fpin<pos:position pos:line="46" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="29">tmpfp<pos:position pos:line="46" pos:column="34"/></name></expr></argument>,  <argument><expr><name><name pos:line="46" pos:column="37">m<pos:position pos:line="46" pos:column="38"/></name><operator pos:line="46" pos:column="38">-&gt;<pos:position pos:line="46" pos:column="43"/></operator><name pos:line="46" pos:column="40">length<pos:position pos:line="46" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="48"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="48" pos:column="3">fflush<pos:position pos:line="48" pos:column="9"/></name> <argument_list pos:line="48" pos:column="10">(<argument><expr><name pos:line="48" pos:column="11">tmpfp<pos:position pos:line="48" pos:column="16"/></name></expr></argument>)<pos:position pos:line="48" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="49" pos:column="3">safe_fclose<pos:position pos:line="49" pos:column="14"/></name> <argument_list pos:line="49" pos:column="15">(<argument><expr><operator pos:line="49" pos:column="16">&amp;<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="17">tmpfp<pos:position pos:line="49" pos:column="22"/></name></expr></argument>)<pos:position pos:line="49" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="24"/></expr_stmt>

  <if pos:line="51" pos:column="3">if <condition pos:line="51" pos:column="6">(<expr><operator pos:line="51" pos:column="7">(<pos:position pos:line="51" pos:column="8"/></operator><name pos:line="51" pos:column="8">type<pos:position pos:line="51" pos:column="12"/></name> <operator pos:line="51" pos:column="13">&amp;<pos:position pos:line="51" pos:column="18"/></operator> <name pos:line="51" pos:column="15">ENCRYPT<pos:position pos:line="51" pos:column="22"/></name><operator pos:line="51" pos:column="22">)<pos:position pos:line="51" pos:column="23"/></operator> <operator pos:line="51" pos:column="24">&amp;&amp;<pos:position pos:line="51" pos:column="34"/></operator>
      <operator pos:line="52" pos:column="7">(<pos:position pos:line="52" pos:column="8"/></operator><name pos:line="52" pos:column="8">thepid<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">=<pos:position pos:line="52" pos:column="16"/></operator> <call><name pos:line="52" pos:column="17">smime_invoke_decrypt<pos:position pos:line="52" pos:column="37"/></name> <argument_list pos:line="52" pos:column="38">(<argument><expr><operator pos:line="52" pos:column="39">&amp;<pos:position pos:line="52" pos:column="44"/></operator><name pos:line="52" pos:column="40">smimein<pos:position pos:line="52" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="49">NULL<pos:position pos:line="52" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="55">NULL<pos:position pos:line="52" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="61">-<pos:position pos:line="52" pos:column="62"/></operator><literal type="number" pos:line="52" pos:column="62">1<pos:position pos:line="52" pos:column="63"/></literal></expr></argument>,
				      <argument><expr><call><name pos:line="53" pos:column="39">fileno<pos:position pos:line="53" pos:column="45"/></name> <argument_list pos:line="53" pos:column="46">(<argument><expr><name pos:line="53" pos:column="47">smimeout<pos:position pos:line="53" pos:column="55"/></name></expr></argument>)<pos:position pos:line="53" pos:column="56"/></argument_list></call></expr></argument>,  <argument><expr><call><name pos:line="53" pos:column="59">fileno<pos:position pos:line="53" pos:column="65"/></name> <argument_list pos:line="53" pos:column="66">(<argument><expr><name pos:line="53" pos:column="67">smimeerr<pos:position pos:line="53" pos:column="75"/></name></expr></argument>)<pos:position pos:line="53" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="53" pos:column="78">tmpfname<pos:position pos:line="53" pos:column="86"/></name></expr></argument>)<pos:position pos:line="53" pos:column="87"/></argument_list></call><operator pos:line="53" pos:column="87">)<pos:position pos:line="53" pos:column="88"/></operator> <operator pos:line="53" pos:column="89">==<pos:position pos:line="53" pos:column="91"/></operator> <operator pos:line="53" pos:column="92">-<pos:position pos:line="53" pos:column="93"/></operator><literal type="number" pos:line="53" pos:column="93">1<pos:position pos:line="53" pos:column="94"/></literal></expr>)<pos:position pos:line="53" pos:column="95"/></condition><then pos:line="53" pos:column="95">
  <block pos:line="54" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">safe_fclose<pos:position pos:line="55" pos:column="16"/></name> <argument_list pos:line="55" pos:column="17">(<argument><expr><operator pos:line="55" pos:column="18">&amp;<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="19">smimeout<pos:position pos:line="55" pos:column="27"/></name></expr></argument>)<pos:position pos:line="55" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="29"/></expr_stmt> <expr_stmt><expr><name pos:line="55" pos:column="30">smimeout<pos:position pos:line="55" pos:column="38"/></name> <operator pos:line="55" pos:column="39">=<pos:position pos:line="55" pos:column="40"/></operator> <name pos:line="55" pos:column="41">NULL<pos:position pos:line="55" pos:column="45"/></name></expr>;<pos:position pos:line="55" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">mutt_unlink<pos:position pos:line="56" pos:column="16"/></name> <argument_list pos:line="56" pos:column="17">(<argument><expr><name pos:line="56" pos:column="18">tmpfname<pos:position pos:line="56" pos:column="26"/></name></expr></argument>)<pos:position pos:line="56" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="28"/></expr_stmt>
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><name><name pos:line="57" pos:column="9">s<pos:position pos:line="57" pos:column="10"/></name><operator pos:line="57" pos:column="10">-&gt;<pos:position pos:line="57" pos:column="15"/></operator><name pos:line="57" pos:column="12">flags<pos:position pos:line="57" pos:column="17"/></name></name> <operator pos:line="57" pos:column="18">&amp;<pos:position pos:line="57" pos:column="23"/></operator> <name pos:line="57" pos:column="20">MUTT_DISPLAY<pos:position pos:line="57" pos:column="32"/></name></expr>)<pos:position pos:line="57" pos:column="33"/></condition><then pos:line="57" pos:column="33">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="7">state_attach_puts<pos:position pos:line="58" pos:column="24"/></name> <argument_list pos:line="58" pos:column="25">(<argument><expr><call><name pos:line="58" pos:column="26">_<pos:position pos:line="58" pos:column="27"/></name><argument_list pos:line="58" pos:column="27">(<argument><expr><literal type="string" pos:line="58" pos:column="28">"[-- Error: unable to create OpenSSL subprocess! --]\n"<pos:position pos:line="58" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="84"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="58" pos:column="86">s<pos:position pos:line="58" pos:column="87"/></name></expr></argument>)<pos:position pos:line="58" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="89"/></expr_stmt></block></then></if>
    <return pos:line="59" pos:column="5">return <expr><name pos:line="59" pos:column="12">NULL<pos:position pos:line="59" pos:column="16"/></name></expr>;<pos:position pos:line="59" pos:column="17"/></return>
  }<pos:position pos:line="60" pos:column="4"/></block></then>
  <elseif pos:line="61" pos:column="3">else <if pos:line="61" pos:column="8">if <condition pos:line="61" pos:column="11">(<expr><operator pos:line="61" pos:column="12">(<pos:position pos:line="61" pos:column="13"/></operator><name pos:line="61" pos:column="13">type<pos:position pos:line="61" pos:column="17"/></name> <operator pos:line="61" pos:column="18">&amp;<pos:position pos:line="61" pos:column="23"/></operator> <name pos:line="61" pos:column="20">SIGNOPAQUE<pos:position pos:line="61" pos:column="30"/></name><operator pos:line="61" pos:column="30">)<pos:position pos:line="61" pos:column="31"/></operator> <operator pos:line="61" pos:column="32">&amp;&amp;<pos:position pos:line="61" pos:column="42"/></operator>
	   <operator pos:line="62" pos:column="12">(<pos:position pos:line="62" pos:column="13"/></operator><name pos:line="62" pos:column="13">thepid<pos:position pos:line="62" pos:column="19"/></name> <operator pos:line="62" pos:column="20">=<pos:position pos:line="62" pos:column="21"/></operator> <call><name pos:line="62" pos:column="22">smime_invoke_verify<pos:position pos:line="62" pos:column="41"/></name> <argument_list pos:line="62" pos:column="42">(<argument><expr><operator pos:line="62" pos:column="43">&amp;<pos:position pos:line="62" pos:column="48"/></operator><name pos:line="62" pos:column="44">smimein<pos:position pos:line="62" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="53">NULL<pos:position pos:line="62" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="59">NULL<pos:position pos:line="62" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="65">-<pos:position pos:line="62" pos:column="66"/></operator><literal type="number" pos:line="62" pos:column="66">1<pos:position pos:line="62" pos:column="67"/></literal></expr></argument>,
					  <argument><expr><call><name pos:line="63" pos:column="43">fileno<pos:position pos:line="63" pos:column="49"/></name> <argument_list pos:line="63" pos:column="50">(<argument><expr><name pos:line="63" pos:column="51">smimeout<pos:position pos:line="63" pos:column="59"/></name></expr></argument>)<pos:position pos:line="63" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="62">fileno<pos:position pos:line="63" pos:column="68"/></name> <argument_list pos:line="63" pos:column="69">(<argument><expr><name pos:line="63" pos:column="70">smimeerr<pos:position pos:line="63" pos:column="78"/></name></expr></argument>)<pos:position pos:line="63" pos:column="79"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="63" pos:column="81">NULL<pos:position pos:line="63" pos:column="85"/></name></expr></argument>,
					  <argument><expr><name pos:line="64" pos:column="43">tmpfname<pos:position pos:line="64" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="53">SIGNOPAQUE<pos:position pos:line="64" pos:column="63"/></name></expr></argument>)<pos:position pos:line="64" pos:column="64"/></argument_list></call><operator pos:line="64" pos:column="64">)<pos:position pos:line="64" pos:column="65"/></operator> <operator pos:line="64" pos:column="66">==<pos:position pos:line="64" pos:column="68"/></operator> <operator pos:line="64" pos:column="69">-<pos:position pos:line="64" pos:column="70"/></operator><literal type="number" pos:line="64" pos:column="70">1<pos:position pos:line="64" pos:column="71"/></literal></expr>)<pos:position pos:line="64" pos:column="72"/></condition><then pos:line="64" pos:column="72">
  <block pos:line="65" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">safe_fclose<pos:position pos:line="66" pos:column="16"/></name> <argument_list pos:line="66" pos:column="17">(<argument><expr><operator pos:line="66" pos:column="18">&amp;<pos:position pos:line="66" pos:column="23"/></operator><name pos:line="66" pos:column="19">smimeout<pos:position pos:line="66" pos:column="27"/></name></expr></argument>)<pos:position pos:line="66" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="29"/></expr_stmt> <expr_stmt><expr><name pos:line="66" pos:column="30">smimeout<pos:position pos:line="66" pos:column="38"/></name> <operator pos:line="66" pos:column="39">=<pos:position pos:line="66" pos:column="40"/></operator> <name pos:line="66" pos:column="41">NULL<pos:position pos:line="66" pos:column="45"/></name></expr>;<pos:position pos:line="66" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">mutt_unlink<pos:position pos:line="67" pos:column="16"/></name> <argument_list pos:line="67" pos:column="17">(<argument><expr><name pos:line="67" pos:column="18">tmpfname<pos:position pos:line="67" pos:column="26"/></name></expr></argument>)<pos:position pos:line="67" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="28"/></expr_stmt>
    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><name><name pos:line="68" pos:column="9">s<pos:position pos:line="68" pos:column="10"/></name><operator pos:line="68" pos:column="10">-&gt;<pos:position pos:line="68" pos:column="15"/></operator><name pos:line="68" pos:column="12">flags<pos:position pos:line="68" pos:column="17"/></name></name> <operator pos:line="68" pos:column="18">&amp;<pos:position pos:line="68" pos:column="23"/></operator> <name pos:line="68" pos:column="20">MUTT_DISPLAY<pos:position pos:line="68" pos:column="32"/></name></expr>)<pos:position pos:line="68" pos:column="33"/></condition><then pos:line="68" pos:column="33">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="7">state_attach_puts<pos:position pos:line="69" pos:column="24"/></name> <argument_list pos:line="69" pos:column="25">(<argument><expr><call><name pos:line="69" pos:column="26">_<pos:position pos:line="69" pos:column="27"/></name><argument_list pos:line="69" pos:column="27">(<argument><expr><literal type="string" pos:line="69" pos:column="28">"[-- Error: unable to create OpenSSL subprocess! --]\n"<pos:position pos:line="69" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="84"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="69" pos:column="86">s<pos:position pos:line="69" pos:column="87"/></name></expr></argument>)<pos:position pos:line="69" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="89"/></expr_stmt></block></then></if>
    <return pos:line="70" pos:column="5">return <expr><name pos:line="70" pos:column="12">NULL<pos:position pos:line="70" pos:column="16"/></name></expr>;<pos:position pos:line="70" pos:column="17"/></return>
  }<pos:position pos:line="71" pos:column="4"/></block></then></if></elseif></if>

  
  <if pos:line="74" pos:column="3">if <condition pos:line="74" pos:column="6">(<expr><name pos:line="74" pos:column="7">type<pos:position pos:line="74" pos:column="11"/></name> <operator pos:line="74" pos:column="12">&amp;<pos:position pos:line="74" pos:column="17"/></operator> <name pos:line="74" pos:column="14">ENCRYPT<pos:position pos:line="74" pos:column="21"/></name></expr>)<pos:position pos:line="74" pos:column="22"/></condition><then pos:line="74" pos:column="22">
  <block pos:line="75" pos:column="3">{
    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><operator pos:line="76" pos:column="9">!<pos:position pos:line="76" pos:column="10"/></operator><call><name pos:line="76" pos:column="10">smime_valid_passphrase<pos:position pos:line="76" pos:column="32"/></name> <argument_list pos:line="76" pos:column="33">()<pos:position pos:line="76" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="76" pos:column="36"/></condition><then pos:line="76" pos:column="36">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="7">smime_void_passphrase<pos:position pos:line="77" pos:column="28"/></name> <argument_list pos:line="77" pos:column="29">()<pos:position pos:line="77" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="32"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="78" pos:column="5">fputs<pos:position pos:line="78" pos:column="10"/></name> <argument_list pos:line="78" pos:column="11">(<argument><expr><name pos:line="78" pos:column="12">SmimePass<pos:position pos:line="78" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="23">smimein<pos:position pos:line="78" pos:column="30"/></name></expr></argument>)<pos:position pos:line="78" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">fputc<pos:position pos:line="79" pos:column="10"/></name> <argument_list pos:line="79" pos:column="11">(<argument><expr><literal type="char" pos:line="79" pos:column="12">'\n'<pos:position pos:line="79" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="18">smimein<pos:position pos:line="79" pos:column="25"/></name></expr></argument>)<pos:position pos:line="79" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="80" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="82" pos:column="3">safe_fclose<pos:position pos:line="82" pos:column="14"/></name> <argument_list pos:line="82" pos:column="15">(<argument><expr><operator pos:line="82" pos:column="16">&amp;<pos:position pos:line="82" pos:column="21"/></operator><name pos:line="82" pos:column="17">smimein<pos:position pos:line="82" pos:column="24"/></name></expr></argument>)<pos:position pos:line="82" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="26"/></expr_stmt>
	
  <expr_stmt><expr><call><name pos:line="84" pos:column="3">mutt_wait_filter<pos:position pos:line="84" pos:column="19"/></name> <argument_list pos:line="84" pos:column="20">(<argument><expr><name pos:line="84" pos:column="21">thepid<pos:position pos:line="84" pos:column="27"/></name></expr></argument>)<pos:position pos:line="84" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="85" pos:column="3">mutt_unlink<pos:position pos:line="85" pos:column="14"/></name> <argument_list pos:line="85" pos:column="15">(<argument><expr><name pos:line="85" pos:column="16">tmpfname<pos:position pos:line="85" pos:column="24"/></name></expr></argument>)<pos:position pos:line="85" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="26"/></expr_stmt>
  

  <if pos:line="88" pos:column="3">if <condition pos:line="88" pos:column="6">(<expr><name><name pos:line="88" pos:column="7">s<pos:position pos:line="88" pos:column="8"/></name><operator pos:line="88" pos:column="8">-&gt;<pos:position pos:line="88" pos:column="13"/></operator><name pos:line="88" pos:column="10">flags<pos:position pos:line="88" pos:column="15"/></name></name> <operator pos:line="88" pos:column="16">&amp;<pos:position pos:line="88" pos:column="21"/></operator> <name pos:line="88" pos:column="18">MUTT_DISPLAY<pos:position pos:line="88" pos:column="30"/></name></expr>)<pos:position pos:line="88" pos:column="31"/></condition><then pos:line="88" pos:column="31">
  <block pos:line="89" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="90" pos:column="5">fflush<pos:position pos:line="90" pos:column="11"/></name> <argument_list pos:line="90" pos:column="12">(<argument><expr><name pos:line="90" pos:column="13">smimeerr<pos:position pos:line="90" pos:column="21"/></name></expr></argument>)<pos:position pos:line="90" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">rewind<pos:position pos:line="91" pos:column="11"/></name> <argument_list pos:line="91" pos:column="12">(<argument><expr><name pos:line="91" pos:column="13">smimeerr<pos:position pos:line="91" pos:column="21"/></name></expr></argument>)<pos:position pos:line="91" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="23"/></expr_stmt>
    
    <if pos:line="93" pos:column="5">if <condition pos:line="93" pos:column="8">(<expr><operator pos:line="93" pos:column="9">(<pos:position pos:line="93" pos:column="10"/></operator><name pos:line="93" pos:column="10">c<pos:position pos:line="93" pos:column="11"/></name> <operator pos:line="93" pos:column="12">=<pos:position pos:line="93" pos:column="13"/></operator> <call><name pos:line="93" pos:column="14">fgetc<pos:position pos:line="93" pos:column="19"/></name> <argument_list pos:line="93" pos:column="20">(<argument><expr><name pos:line="93" pos:column="21">smimeerr<pos:position pos:line="93" pos:column="29"/></name></expr></argument>)<pos:position pos:line="93" pos:column="30"/></argument_list></call><operator pos:line="93" pos:column="30">)<pos:position pos:line="93" pos:column="31"/></operator> <operator pos:line="93" pos:column="32">!=<pos:position pos:line="93" pos:column="34"/></operator> <name pos:line="93" pos:column="35">EOF<pos:position pos:line="93" pos:column="38"/></name></expr>)<pos:position pos:line="93" pos:column="39"/></condition><then pos:line="93" pos:column="39">
    <block pos:line="94" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="95" pos:column="7">ungetc<pos:position pos:line="95" pos:column="13"/></name> <argument_list pos:line="95" pos:column="14">(<argument><expr><name pos:line="95" pos:column="15">c<pos:position pos:line="95" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="18">smimeerr<pos:position pos:line="95" pos:column="26"/></name></expr></argument>)<pos:position pos:line="95" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="28"/></expr_stmt>
      
      <expr_stmt><expr><call><name pos:line="97" pos:column="7">crypt_current_time<pos:position pos:line="97" pos:column="25"/></name> <argument_list pos:line="97" pos:column="26">(<argument><expr><name pos:line="97" pos:column="27">s<pos:position pos:line="97" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="30">"OpenSSL"<pos:position pos:line="97" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="98" pos:column="7">mutt_copy_stream<pos:position pos:line="98" pos:column="23"/></name> <argument_list pos:line="98" pos:column="24">(<argument><expr><name pos:line="98" pos:column="25">smimeerr<pos:position pos:line="98" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="35">s<pos:position pos:line="98" pos:column="36"/></name><operator pos:line="98" pos:column="36">-&gt;<pos:position pos:line="98" pos:column="41"/></operator><name pos:line="98" pos:column="38">fpout<pos:position pos:line="98" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="99" pos:column="7">state_attach_puts<pos:position pos:line="99" pos:column="24"/></name> <argument_list pos:line="99" pos:column="25">(<argument><expr><call><name pos:line="99" pos:column="26">_<pos:position pos:line="99" pos:column="27"/></name><argument_list pos:line="99" pos:column="27">(<argument><expr><literal type="string" pos:line="99" pos:column="28">"[-- End of OpenSSL output --]\n\n"<pos:position pos:line="99" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="99" pos:column="66">s<pos:position pos:line="99" pos:column="67"/></name></expr></argument>)<pos:position pos:line="99" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if>
    
    <if pos:line="102" pos:column="5">if <condition pos:line="102" pos:column="8">(<expr><name pos:line="102" pos:column="9">type<pos:position pos:line="102" pos:column="13"/></name> <operator pos:line="102" pos:column="14">&amp;<pos:position pos:line="102" pos:column="19"/></operator> <name pos:line="102" pos:column="16">ENCRYPT<pos:position pos:line="102" pos:column="23"/></name></expr>)<pos:position pos:line="102" pos:column="24"/></condition><then pos:line="102" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="103" pos:column="7">state_attach_puts<pos:position pos:line="103" pos:column="24"/></name> <argument_list pos:line="103" pos:column="25">(<argument><expr><call><name pos:line="103" pos:column="26">_<pos:position pos:line="103" pos:column="27"/></name><argument_list pos:line="103" pos:column="27">(<argument><expr><literal type="string" pos:line="103" pos:column="28">"[-- The following data is S/MIME"<pos:position pos:line="103" pos:column="62"/></literal>
                           <literal type="string" pos:line="104" pos:column="28">" encrypted --]\n"<pos:position pos:line="104" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="104" pos:column="49">s<pos:position pos:line="104" pos:column="50"/></name></expr></argument>)<pos:position pos:line="104" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="52"/></expr_stmt></block></then>
    <else pos:line="105" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="106" pos:column="7">state_attach_puts<pos:position pos:line="106" pos:column="24"/></name> <argument_list pos:line="106" pos:column="25">(<argument><expr><call><name pos:line="106" pos:column="26">_<pos:position pos:line="106" pos:column="27"/></name><argument_list pos:line="106" pos:column="27">(<argument><expr><literal type="string" pos:line="106" pos:column="28">"[-- The following data is S/MIME signed --]\n"<pos:position pos:line="106" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="106" pos:column="78">s<pos:position pos:line="106" pos:column="79"/></name></expr></argument>)<pos:position pos:line="106" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="81"/></expr_stmt></block></else></if>
  }<pos:position pos:line="107" pos:column="4"/></block></then></if>

  <if pos:line="109" pos:column="3">if <condition pos:line="109" pos:column="6">(<expr><name pos:line="109" pos:column="7">smimeout<pos:position pos:line="109" pos:column="15"/></name></expr>)<pos:position pos:line="109" pos:column="16"/></condition><then pos:line="109" pos:column="16">
  <block pos:line="110" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="111" pos:column="5">fflush<pos:position pos:line="111" pos:column="11"/></name> <argument_list pos:line="111" pos:column="12">(<argument><expr><name pos:line="111" pos:column="13">smimeout<pos:position pos:line="111" pos:column="21"/></name></expr></argument>)<pos:position pos:line="111" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="112" pos:column="5">rewind<pos:position pos:line="112" pos:column="11"/></name> <argument_list pos:line="112" pos:column="12">(<argument><expr><name pos:line="112" pos:column="13">smimeout<pos:position pos:line="112" pos:column="21"/></name></expr></argument>)<pos:position pos:line="112" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="23"/></expr_stmt>
    
    <if pos:line="114" pos:column="5">if <condition pos:line="114" pos:column="8">(<expr><name pos:line="114" pos:column="9">outFile<pos:position pos:line="114" pos:column="16"/></name></expr>)<pos:position pos:line="114" pos:column="17"/></condition><then pos:line="114" pos:column="17"> <block type="pseudo"><expr_stmt><expr><name pos:line="114" pos:column="18">fpout<pos:position pos:line="114" pos:column="23"/></name> <operator pos:line="114" pos:column="24">=<pos:position pos:line="114" pos:column="25"/></operator> <name pos:line="114" pos:column="26">outFile<pos:position pos:line="114" pos:column="33"/></name></expr>;<pos:position pos:line="114" pos:column="34"/></expr_stmt></block></then>
    <else pos:line="115" pos:column="5">else
    <block pos:line="116" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="117" pos:column="7">mutt_mktemp<pos:position pos:line="117" pos:column="18"/></name> <argument_list pos:line="117" pos:column="19">(<argument><expr><name pos:line="117" pos:column="20">tmptmpfname<pos:position pos:line="117" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="117" pos:column="33">sizeof <argument_list pos:line="117" pos:column="40">(<argument><expr><name pos:line="117" pos:column="41">tmptmpfname<pos:position pos:line="117" pos:column="52"/></name></expr></argument>)<pos:position pos:line="117" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="117" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="55"/></expr_stmt>
      <if pos:line="118" pos:column="7">if <condition pos:line="118" pos:column="10">(<expr><operator pos:line="118" pos:column="11">(<pos:position pos:line="118" pos:column="12"/></operator><name pos:line="118" pos:column="12">fpout<pos:position pos:line="118" pos:column="17"/></name> <operator pos:line="118" pos:column="18">=<pos:position pos:line="118" pos:column="19"/></operator> <call><name pos:line="118" pos:column="20">safe_fopen<pos:position pos:line="118" pos:column="30"/></name> <argument_list pos:line="118" pos:column="31">(<argument><expr><name pos:line="118" pos:column="32">tmptmpfname<pos:position pos:line="118" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="45">"w+"<pos:position pos:line="118" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="50"/></argument_list></call><operator pos:line="118" pos:column="50">)<pos:position pos:line="118" pos:column="51"/></operator> <operator pos:line="118" pos:column="52">==<pos:position pos:line="118" pos:column="54"/></operator> <name pos:line="118" pos:column="55">NULL<pos:position pos:line="118" pos:column="59"/></name></expr>)<pos:position pos:line="118" pos:column="60"/></condition><then pos:line="118" pos:column="60">
      <block pos:line="119" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="120" pos:column="9">mutt_perror<pos:position pos:line="120" pos:column="20"/></name><argument_list pos:line="120" pos:column="20">(<argument><expr><name pos:line="120" pos:column="21">tmptmpfname<pos:position pos:line="120" pos:column="32"/></name></expr></argument>)<pos:position pos:line="120" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="121" pos:column="9">safe_fclose<pos:position pos:line="121" pos:column="20"/></name> <argument_list pos:line="121" pos:column="21">(<argument><expr><operator pos:line="121" pos:column="22">&amp;<pos:position pos:line="121" pos:column="27"/></operator><name pos:line="121" pos:column="23">smimeout<pos:position pos:line="121" pos:column="31"/></name></expr></argument>)<pos:position pos:line="121" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="33"/></expr_stmt> <expr_stmt><expr><name pos:line="121" pos:column="34">smimeout<pos:position pos:line="121" pos:column="42"/></name> <operator pos:line="121" pos:column="43">=<pos:position pos:line="121" pos:column="44"/></operator> <name pos:line="121" pos:column="45">NULL<pos:position pos:line="121" pos:column="49"/></name></expr>;<pos:position pos:line="121" pos:column="50"/></expr_stmt>
	<return pos:line="122" pos:column="9">return <expr><name pos:line="122" pos:column="16">NULL<pos:position pos:line="122" pos:column="20"/></name></expr>;<pos:position pos:line="122" pos:column="21"/></return>
      }<pos:position pos:line="123" pos:column="8"/></block></then></if>
    }<pos:position pos:line="124" pos:column="6"/></block></else></if>
    <while pos:line="125" pos:column="5">while <condition pos:line="125" pos:column="11">(<expr><call><name pos:line="125" pos:column="12">fgets<pos:position pos:line="125" pos:column="17"/></name> <argument_list pos:line="125" pos:column="18">(<argument><expr><name pos:line="125" pos:column="19">buf<pos:position pos:line="125" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="125" pos:column="24">sizeof <argument_list pos:line="125" pos:column="31">(<argument><expr><name pos:line="125" pos:column="32">buf<pos:position pos:line="125" pos:column="35"/></name></expr></argument>)<pos:position pos:line="125" pos:column="36"/></argument_list></sizeof> <operator pos:line="125" pos:column="37">-<pos:position pos:line="125" pos:column="38"/></operator> <literal type="number" pos:line="125" pos:column="39">1<pos:position pos:line="125" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="125" pos:column="42">smimeout<pos:position pos:line="125" pos:column="50"/></name></expr></argument>)<pos:position pos:line="125" pos:column="51"/></argument_list></call> <operator pos:line="125" pos:column="52">!=<pos:position pos:line="125" pos:column="54"/></operator> <name pos:line="125" pos:column="55">NULL<pos:position pos:line="125" pos:column="59"/></name></expr>)<pos:position pos:line="125" pos:column="60"/></condition>
    <block pos:line="126" pos:column="5">{
      <expr_stmt><expr><name pos:line="127" pos:column="7">len<pos:position pos:line="127" pos:column="10"/></name> <operator pos:line="127" pos:column="11">=<pos:position pos:line="127" pos:column="12"/></operator> <call><name pos:line="127" pos:column="13">mutt_strlen<pos:position pos:line="127" pos:column="24"/></name> <argument_list pos:line="127" pos:column="25">(<argument><expr><name pos:line="127" pos:column="26">buf<pos:position pos:line="127" pos:column="29"/></name></expr></argument>)<pos:position pos:line="127" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="31"/></expr_stmt>
      <if pos:line="128" pos:column="7">if <condition pos:line="128" pos:column="10">(<expr><name pos:line="128" pos:column="11">len<pos:position pos:line="128" pos:column="14"/></name> <operator pos:line="128" pos:column="15">&gt;<pos:position pos:line="128" pos:column="19"/></operator> <literal type="number" pos:line="128" pos:column="17">1<pos:position pos:line="128" pos:column="18"/></literal> <operator pos:line="128" pos:column="19">&amp;&amp;<pos:position pos:line="128" pos:column="29"/></operator> <name><name pos:line="128" pos:column="22">buf<pos:position pos:line="128" pos:column="25"/></name><index pos:line="128" pos:column="25">[<expr><name pos:line="128" pos:column="26">len<pos:position pos:line="128" pos:column="29"/></name> <operator pos:line="128" pos:column="30">-<pos:position pos:line="128" pos:column="31"/></operator> <literal type="number" pos:line="128" pos:column="32">2<pos:position pos:line="128" pos:column="33"/></literal></expr>]<pos:position pos:line="128" pos:column="34"/></index></name> <operator pos:line="128" pos:column="35">==<pos:position pos:line="128" pos:column="37"/></operator> <literal type="char" pos:line="128" pos:column="38">'\r'<pos:position pos:line="128" pos:column="42"/></literal></expr>)<pos:position pos:line="128" pos:column="43"/></condition><then pos:line="128" pos:column="43">
      <block pos:line="129" pos:column="7">{
	<expr_stmt><expr><name><name pos:line="130" pos:column="9">buf<pos:position pos:line="130" pos:column="12"/></name><index pos:line="130" pos:column="12">[<expr><name pos:line="130" pos:column="13">len<pos:position pos:line="130" pos:column="16"/></name><operator pos:line="130" pos:column="16">-<pos:position pos:line="130" pos:column="17"/></operator><literal type="number" pos:line="130" pos:column="17">2<pos:position pos:line="130" pos:column="18"/></literal></expr>]<pos:position pos:line="130" pos:column="19"/></index></name> <operator pos:line="130" pos:column="20">=<pos:position pos:line="130" pos:column="21"/></operator> <literal type="char" pos:line="130" pos:column="22">'\n'<pos:position pos:line="130" pos:column="26"/></literal></expr>;<pos:position pos:line="130" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="131" pos:column="9">buf<pos:position pos:line="131" pos:column="12"/></name><index pos:line="131" pos:column="12">[<expr><name pos:line="131" pos:column="13">len<pos:position pos:line="131" pos:column="16"/></name><operator pos:line="131" pos:column="16">-<pos:position pos:line="131" pos:column="17"/></operator><literal type="number" pos:line="131" pos:column="17">1<pos:position pos:line="131" pos:column="18"/></literal></expr>]<pos:position pos:line="131" pos:column="19"/></index></name> <operator pos:line="131" pos:column="20">=<pos:position pos:line="131" pos:column="21"/></operator> <literal type="char" pos:line="131" pos:column="22">'\0'<pos:position pos:line="131" pos:column="26"/></literal></expr>;<pos:position pos:line="131" pos:column="27"/></expr_stmt>
      }<pos:position pos:line="132" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="133" pos:column="7">fputs<pos:position pos:line="133" pos:column="12"/></name> <argument_list pos:line="133" pos:column="13">(<argument><expr><name pos:line="133" pos:column="14">buf<pos:position pos:line="133" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="19">fpout<pos:position pos:line="133" pos:column="24"/></name></expr></argument>)<pos:position pos:line="133" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="134" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="135" pos:column="5">fflush<pos:position pos:line="135" pos:column="11"/></name> <argument_list pos:line="135" pos:column="12">(<argument><expr><name pos:line="135" pos:column="13">fpout<pos:position pos:line="135" pos:column="18"/></name></expr></argument>)<pos:position pos:line="135" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="136" pos:column="5">rewind<pos:position pos:line="136" pos:column="11"/></name> <argument_list pos:line="136" pos:column="12">(<argument><expr><name pos:line="136" pos:column="13">fpout<pos:position pos:line="136" pos:column="18"/></name></expr></argument>)<pos:position pos:line="136" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="20"/></expr_stmt> 


    <if pos:line="139" pos:column="5">if <condition pos:line="139" pos:column="8">(<expr><operator pos:line="139" pos:column="9">(<pos:position pos:line="139" pos:column="10"/></operator><name pos:line="139" pos:column="10">p<pos:position pos:line="139" pos:column="11"/></name> <operator pos:line="139" pos:column="12">=<pos:position pos:line="139" pos:column="13"/></operator> <call><name pos:line="139" pos:column="14">mutt_read_mime_header<pos:position pos:line="139" pos:column="35"/></name> <argument_list pos:line="139" pos:column="36">(<argument><expr><name pos:line="139" pos:column="37">fpout<pos:position pos:line="139" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="139" pos:column="44">0<pos:position pos:line="139" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="46"/></argument_list></call><operator pos:line="139" pos:column="46">)<pos:position pos:line="139" pos:column="47"/></operator> <operator pos:line="139" pos:column="48">!=<pos:position pos:line="139" pos:column="50"/></operator> <name pos:line="139" pos:column="51">NULL<pos:position pos:line="139" pos:column="55"/></name></expr>)<pos:position pos:line="139" pos:column="56"/></condition><then pos:line="139" pos:column="56">
    <block pos:line="140" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="141" pos:column="7">fstat<pos:position pos:line="141" pos:column="12"/></name> <argument_list pos:line="141" pos:column="13">(<argument><expr><call><name pos:line="141" pos:column="14">fileno<pos:position pos:line="141" pos:column="20"/></name> <argument_list pos:line="141" pos:column="21">(<argument><expr><name pos:line="141" pos:column="22">fpout<pos:position pos:line="141" pos:column="27"/></name></expr></argument>)<pos:position pos:line="141" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="141" pos:column="30">&amp;<pos:position pos:line="141" pos:column="35"/></operator><name pos:line="141" pos:column="31">info<pos:position pos:line="141" pos:column="35"/></name></expr></argument>)<pos:position pos:line="141" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="142" pos:column="7">p<pos:position pos:line="142" pos:column="8"/></name><operator pos:line="142" pos:column="8">-&gt;<pos:position pos:line="142" pos:column="13"/></operator><name pos:line="142" pos:column="10">length<pos:position pos:line="142" pos:column="16"/></name></name> <operator pos:line="142" pos:column="17">=<pos:position pos:line="142" pos:column="18"/></operator> <name><name pos:line="142" pos:column="19">info<pos:position pos:line="142" pos:column="23"/></name><operator pos:line="142" pos:column="23">.<pos:position pos:line="142" pos:column="24"/></operator><name pos:line="142" pos:column="24">st_size<pos:position pos:line="142" pos:column="31"/></name></name> <operator pos:line="142" pos:column="32">-<pos:position pos:line="142" pos:column="33"/></operator> <name><name pos:line="142" pos:column="34">p<pos:position pos:line="142" pos:column="35"/></name><operator pos:line="142" pos:column="35">-&gt;<pos:position pos:line="142" pos:column="40"/></operator><name pos:line="142" pos:column="37">offset<pos:position pos:line="142" pos:column="43"/></name></name></expr>;<pos:position pos:line="142" pos:column="44"/></expr_stmt>
	  
      <expr_stmt><expr><call><name pos:line="144" pos:column="7">mutt_parse_part<pos:position pos:line="144" pos:column="22"/></name> <argument_list pos:line="144" pos:column="23">(<argument><expr><name pos:line="144" pos:column="24">fpout<pos:position pos:line="144" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="31">p<pos:position pos:line="144" pos:column="32"/></name></expr></argument>)<pos:position pos:line="144" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="34"/></expr_stmt>
      <if pos:line="145" pos:column="7">if <condition pos:line="145" pos:column="10">(<expr><name><name pos:line="145" pos:column="11">s<pos:position pos:line="145" pos:column="12"/></name><operator pos:line="145" pos:column="12">-&gt;<pos:position pos:line="145" pos:column="17"/></operator><name pos:line="145" pos:column="14">fpout<pos:position pos:line="145" pos:column="19"/></name></name></expr>)<pos:position pos:line="145" pos:column="20"/></condition><then pos:line="145" pos:column="20">
      <block pos:line="146" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="147" pos:column="9">rewind<pos:position pos:line="147" pos:column="15"/></name> <argument_list pos:line="147" pos:column="16">(<argument><expr><name pos:line="147" pos:column="17">fpout<pos:position pos:line="147" pos:column="22"/></name></expr></argument>)<pos:position pos:line="147" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name pos:line="148" pos:column="9">tmpfp_buffer<pos:position pos:line="148" pos:column="21"/></name> <operator pos:line="148" pos:column="22">=<pos:position pos:line="148" pos:column="23"/></operator> <name><name pos:line="148" pos:column="24">s<pos:position pos:line="148" pos:column="25"/></name><operator pos:line="148" pos:column="25">-&gt;<pos:position pos:line="148" pos:column="30"/></operator><name pos:line="148" pos:column="27">fpin<pos:position pos:line="148" pos:column="31"/></name></name></expr>;<pos:position pos:line="148" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="149" pos:column="9">s<pos:position pos:line="149" pos:column="10"/></name><operator pos:line="149" pos:column="10">-&gt;<pos:position pos:line="149" pos:column="15"/></operator><name pos:line="149" pos:column="12">fpin<pos:position pos:line="149" pos:column="16"/></name></name> <operator pos:line="149" pos:column="17">=<pos:position pos:line="149" pos:column="18"/></operator> <name pos:line="149" pos:column="19">fpout<pos:position pos:line="149" pos:column="24"/></name></expr>;<pos:position pos:line="149" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="150" pos:column="9">mutt_body_handler<pos:position pos:line="150" pos:column="26"/></name> <argument_list pos:line="150" pos:column="27">(<argument><expr><name pos:line="150" pos:column="28">p<pos:position pos:line="150" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="31">s<pos:position pos:line="150" pos:column="32"/></name></expr></argument>)<pos:position pos:line="150" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="151" pos:column="9">s<pos:position pos:line="151" pos:column="10"/></name><operator pos:line="151" pos:column="10">-&gt;<pos:position pos:line="151" pos:column="15"/></operator><name pos:line="151" pos:column="12">fpin<pos:position pos:line="151" pos:column="16"/></name></name> <operator pos:line="151" pos:column="17">=<pos:position pos:line="151" pos:column="18"/></operator> <name pos:line="151" pos:column="19">tmpfp_buffer<pos:position pos:line="151" pos:column="31"/></name></expr>;<pos:position pos:line="151" pos:column="32"/></expr_stmt>
      }<pos:position pos:line="152" pos:column="8"/></block></then></if>
      
    }<pos:position pos:line="154" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="155" pos:column="5">safe_fclose<pos:position pos:line="155" pos:column="16"/></name> <argument_list pos:line="155" pos:column="17">(<argument><expr><operator pos:line="155" pos:column="18">&amp;<pos:position pos:line="155" pos:column="23"/></operator><name pos:line="155" pos:column="19">smimeout<pos:position pos:line="155" pos:column="27"/></name></expr></argument>)<pos:position pos:line="155" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="156" pos:column="5">smimeout<pos:position pos:line="156" pos:column="13"/></name> <operator pos:line="156" pos:column="14">=<pos:position pos:line="156" pos:column="15"/></operator> <name pos:line="156" pos:column="16">NULL<pos:position pos:line="156" pos:column="20"/></name></expr>;<pos:position pos:line="156" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="157" pos:column="5">mutt_unlink<pos:position pos:line="157" pos:column="16"/></name> <argument_list pos:line="157" pos:column="17">(<argument><expr><name pos:line="157" pos:column="18">outfile<pos:position pos:line="157" pos:column="25"/></name></expr></argument>)<pos:position pos:line="157" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="27"/></expr_stmt>

    <if pos:line="159" pos:column="5">if <condition pos:line="159" pos:column="8">(<expr><operator pos:line="159" pos:column="9">!<pos:position pos:line="159" pos:column="10"/></operator><name pos:line="159" pos:column="10">outFile<pos:position pos:line="159" pos:column="17"/></name></expr>)<pos:position pos:line="159" pos:column="18"/></condition><then pos:line="159" pos:column="18">
    <block pos:line="160" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="161" pos:column="7">safe_fclose<pos:position pos:line="161" pos:column="18"/></name> <argument_list pos:line="161" pos:column="19">(<argument><expr><operator pos:line="161" pos:column="20">&amp;<pos:position pos:line="161" pos:column="25"/></operator><name pos:line="161" pos:column="21">fpout<pos:position pos:line="161" pos:column="26"/></name></expr></argument>)<pos:position pos:line="161" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="162" pos:column="7">mutt_unlink<pos:position pos:line="162" pos:column="18"/></name> <argument_list pos:line="162" pos:column="19">(<argument><expr><name pos:line="162" pos:column="20">tmptmpfname<pos:position pos:line="162" pos:column="31"/></name></expr></argument>)<pos:position pos:line="162" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="163" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="164" pos:column="5">fpout<pos:position pos:line="164" pos:column="10"/></name> <operator pos:line="164" pos:column="11">=<pos:position pos:line="164" pos:column="12"/></operator> <name pos:line="164" pos:column="13">NULL<pos:position pos:line="164" pos:column="17"/></name></expr>;<pos:position pos:line="164" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="165" pos:column="4"/></block></then></if>

  <if pos:line="167" pos:column="3">if <condition pos:line="167" pos:column="6">(<expr><name><name pos:line="167" pos:column="7">s<pos:position pos:line="167" pos:column="8"/></name><operator pos:line="167" pos:column="8">-&gt;<pos:position pos:line="167" pos:column="13"/></operator><name pos:line="167" pos:column="10">flags<pos:position pos:line="167" pos:column="15"/></name></name> <operator pos:line="167" pos:column="16">&amp;<pos:position pos:line="167" pos:column="21"/></operator> <name pos:line="167" pos:column="18">MUTT_DISPLAY<pos:position pos:line="167" pos:column="30"/></name></expr>)<pos:position pos:line="167" pos:column="31"/></condition><then pos:line="167" pos:column="31">
  <block pos:line="168" pos:column="3">{
    <if pos:line="169" pos:column="5">if <condition pos:line="169" pos:column="8">(<expr><name pos:line="169" pos:column="9">type<pos:position pos:line="169" pos:column="13"/></name> <operator pos:line="169" pos:column="14">&amp;<pos:position pos:line="169" pos:column="19"/></operator> <name pos:line="169" pos:column="16">ENCRYPT<pos:position pos:line="169" pos:column="23"/></name></expr>)<pos:position pos:line="169" pos:column="24"/></condition><then pos:line="169" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="170" pos:column="7">state_attach_puts<pos:position pos:line="170" pos:column="24"/></name> <argument_list pos:line="170" pos:column="25">(<argument><expr><call><name pos:line="170" pos:column="26">_<pos:position pos:line="170" pos:column="27"/></name><argument_list pos:line="170" pos:column="27">(<argument><expr><literal type="string" pos:line="170" pos:column="28">"\n[-- End of S/MIME encrypted data. --]\n"<pos:position pos:line="170" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="170" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="170" pos:column="74">s<pos:position pos:line="170" pos:column="75"/></name></expr></argument>)<pos:position pos:line="170" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="77"/></expr_stmt></block></then>
    <else pos:line="171" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="172" pos:column="7">state_attach_puts<pos:position pos:line="172" pos:column="24"/></name> <argument_list pos:line="172" pos:column="25">(<argument><expr><call><name pos:line="172" pos:column="26">_<pos:position pos:line="172" pos:column="27"/></name><argument_list pos:line="172" pos:column="27">(<argument><expr><literal type="string" pos:line="172" pos:column="28">"\n[-- End of S/MIME signed data. --]\n"<pos:position pos:line="172" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="172" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="172" pos:column="71">s<pos:position pos:line="172" pos:column="72"/></name></expr></argument>)<pos:position pos:line="172" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="74"/></expr_stmt></block></else></if>
  }<pos:position pos:line="173" pos:column="4"/></block></then></if>

  <if pos:line="175" pos:column="3">if <condition pos:line="175" pos:column="6">(<expr><name pos:line="175" pos:column="7">type<pos:position pos:line="175" pos:column="11"/></name> <operator pos:line="175" pos:column="12">&amp;<pos:position pos:line="175" pos:column="17"/></operator> <name pos:line="175" pos:column="14">SIGNOPAQUE<pos:position pos:line="175" pos:column="24"/></name></expr>)<pos:position pos:line="175" pos:column="25"/></condition><then pos:line="175" pos:column="25">
  <block pos:line="176" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="177" pos:column="5">char<pos:position pos:line="177" pos:column="9"/></name> <modifier pos:line="177" pos:column="10">*<pos:position pos:line="177" pos:column="11"/></modifier></type><name pos:line="177" pos:column="11">line<pos:position pos:line="177" pos:column="15"/></name> <init pos:line="177" pos:column="16">= <expr><name pos:line="177" pos:column="18">NULL<pos:position pos:line="177" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="177" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="178" pos:column="5">int<pos:position pos:line="178" pos:column="8"/></name></type> <name pos:line="178" pos:column="9">lineno<pos:position pos:line="178" pos:column="15"/></name> <init pos:line="178" pos:column="16">= <expr><literal type="number" pos:line="178" pos:column="18">0<pos:position pos:line="178" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="178" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="179" pos:column="5">size_t<pos:position pos:line="179" pos:column="11"/></name></type> <name pos:line="179" pos:column="12">linelen<pos:position pos:line="179" pos:column="19"/></name></decl>;<pos:position pos:line="179" pos:column="20"/></decl_stmt>
    
    <expr_stmt><expr><call><name pos:line="181" pos:column="5">rewind<pos:position pos:line="181" pos:column="11"/></name> <argument_list pos:line="181" pos:column="12">(<argument><expr><name pos:line="181" pos:column="13">smimeerr<pos:position pos:line="181" pos:column="21"/></name></expr></argument>)<pos:position pos:line="181" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="23"/></expr_stmt>
    
    <expr_stmt><expr><name pos:line="183" pos:column="5">line<pos:position pos:line="183" pos:column="9"/></name> <operator pos:line="183" pos:column="10">=<pos:position pos:line="183" pos:column="11"/></operator> <call><name pos:line="183" pos:column="12">mutt_read_line<pos:position pos:line="183" pos:column="26"/></name> <argument_list pos:line="183" pos:column="27">(<argument><expr><name pos:line="183" pos:column="28">line<pos:position pos:line="183" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="183" pos:column="34">&amp;<pos:position pos:line="183" pos:column="39"/></operator><name pos:line="183" pos:column="35">linelen<pos:position pos:line="183" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="183" pos:column="44">smimeerr<pos:position pos:line="183" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="183" pos:column="54">&amp;<pos:position pos:line="183" pos:column="59"/></operator><name pos:line="183" pos:column="55">lineno<pos:position pos:line="183" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="183" pos:column="63">0<pos:position pos:line="183" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="183" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="66"/></expr_stmt>
    <if pos:line="184" pos:column="5">if <condition pos:line="184" pos:column="8">(<expr><name pos:line="184" pos:column="9">linelen<pos:position pos:line="184" pos:column="16"/></name> <operator pos:line="184" pos:column="17">&amp;&amp;<pos:position pos:line="184" pos:column="27"/></operator> <operator pos:line="184" pos:column="20">!<pos:position pos:line="184" pos:column="21"/></operator><call><name pos:line="184" pos:column="21">ascii_strcasecmp<pos:position pos:line="184" pos:column="37"/></name> <argument_list pos:line="184" pos:column="38">(<argument><expr><name pos:line="184" pos:column="39">line<pos:position pos:line="184" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="184" pos:column="45">"verification successful"<pos:position pos:line="184" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="184" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="184" pos:column="72"/></condition><then pos:line="184" pos:column="72">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="185" pos:column="7">m<pos:position pos:line="185" pos:column="8"/></name><operator pos:line="185" pos:column="8">-&gt;<pos:position pos:line="185" pos:column="13"/></operator><name pos:line="185" pos:column="10">goodsig<pos:position pos:line="185" pos:column="17"/></name></name> <operator pos:line="185" pos:column="18">=<pos:position pos:line="185" pos:column="19"/></operator> <literal type="number" pos:line="185" pos:column="20">1<pos:position pos:line="185" pos:column="21"/></literal></expr>;<pos:position pos:line="185" pos:column="22"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="186" pos:column="5">FREE<pos:position pos:line="186" pos:column="9"/></name> <argument_list pos:line="186" pos:column="10">(<argument><expr><operator pos:line="186" pos:column="11">&amp;<pos:position pos:line="186" pos:column="16"/></operator><name pos:line="186" pos:column="12">line<pos:position pos:line="186" pos:column="16"/></name></expr></argument>)<pos:position pos:line="186" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="187" pos:column="4"/></block></then>
  <else pos:line="188" pos:column="3">else 
  <block pos:line="189" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="190" pos:column="5">m<pos:position pos:line="190" pos:column="6"/></name><operator pos:line="190" pos:column="6">-&gt;<pos:position pos:line="190" pos:column="11"/></operator><name pos:line="190" pos:column="8">goodsig<pos:position pos:line="190" pos:column="15"/></name></name> <operator pos:line="190" pos:column="16">=<pos:position pos:line="190" pos:column="17"/></operator> <name><name pos:line="190" pos:column="18">p<pos:position pos:line="190" pos:column="19"/></name><operator pos:line="190" pos:column="19">-&gt;<pos:position pos:line="190" pos:column="24"/></operator><name pos:line="190" pos:column="21">goodsig<pos:position pos:line="190" pos:column="28"/></name></name></expr>;<pos:position pos:line="190" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="191" pos:column="5">m<pos:position pos:line="191" pos:column="6"/></name><operator pos:line="191" pos:column="6">-&gt;<pos:position pos:line="191" pos:column="11"/></operator><name pos:line="191" pos:column="8">badsig<pos:position pos:line="191" pos:column="14"/></name></name>  <operator pos:line="191" pos:column="16">=<pos:position pos:line="191" pos:column="17"/></operator> <name><name pos:line="191" pos:column="18">p<pos:position pos:line="191" pos:column="19"/></name><operator pos:line="191" pos:column="19">-&gt;<pos:position pos:line="191" pos:column="24"/></operator><name pos:line="191" pos:column="21">badsig<pos:position pos:line="191" pos:column="27"/></name></name></expr>;<pos:position pos:line="191" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="192" pos:column="4"/></block></else></if>
  <expr_stmt><expr><call><name pos:line="193" pos:column="3">safe_fclose<pos:position pos:line="193" pos:column="14"/></name> <argument_list pos:line="193" pos:column="15">(<argument><expr><operator pos:line="193" pos:column="16">&amp;<pos:position pos:line="193" pos:column="21"/></operator><name pos:line="193" pos:column="17">smimeerr<pos:position pos:line="193" pos:column="25"/></name></expr></argument>)<pos:position pos:line="193" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="27"/></expr_stmt>

  <return pos:line="195" pos:column="3">return <expr><operator pos:line="195" pos:column="10">(<pos:position pos:line="195" pos:column="11"/></operator><name pos:line="195" pos:column="11">p<pos:position pos:line="195" pos:column="12"/></name><operator pos:line="195" pos:column="12">)<pos:position pos:line="195" pos:column="13"/></operator></expr>;<pos:position pos:line="195" pos:column="14"/></return>
}<pos:position pos:line="196" pos:column="2"/></block></function></unit>

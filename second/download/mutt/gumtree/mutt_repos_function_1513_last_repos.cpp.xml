<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1513_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">fix_uid<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">char<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">uid<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">s<pos:position pos:line="3" pos:column="10"/></name></decl>, <modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="13">d<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">iconv_t<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">cd<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <for pos:line="6" pos:column="3">for <control pos:line="6" pos:column="7">(<init><expr><name pos:line="6" pos:column="8">s<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <name pos:line="6" pos:column="12">d<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">=<pos:position pos:line="6" pos:column="15"/></operator> <name pos:line="6" pos:column="16">uid<pos:position pos:line="6" pos:column="19"/></name></expr>;<pos:position pos:line="6" pos:column="20"/></init> <condition><expr><operator pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="22">s<pos:position pos:line="6" pos:column="23"/></name></expr>;<pos:position pos:line="6" pos:column="24"/></condition><incr/>)<pos:position pos:line="6" pos:column="25"/></control>
  <block pos:line="7" pos:column="3">{
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">s<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">==<pos:position pos:line="8" pos:column="14"/></operator> <literal type="char" pos:line="8" pos:column="15">'\\'<pos:position pos:line="8" pos:column="19"/></literal> <operator pos:line="8" pos:column="20">&amp;&amp;<pos:position pos:line="8" pos:column="30"/></operator> <operator pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></operator><operator pos:line="8" pos:column="24">(<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">s<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">+<pos:position pos:line="8" pos:column="27"/></operator><literal type="number" pos:line="8" pos:column="27">1<pos:position pos:line="8" pos:column="28"/></literal><operator pos:line="8" pos:column="28">)<pos:position pos:line="8" pos:column="29"/></operator> <operator pos:line="8" pos:column="30">==<pos:position pos:line="8" pos:column="32"/></operator> <literal type="char" pos:line="8" pos:column="33">'x'<pos:position pos:line="8" pos:column="36"/></literal> <operator pos:line="8" pos:column="37">&amp;&amp;<pos:position pos:line="8" pos:column="47"/></operator> <call><name pos:line="8" pos:column="40">isxdigit<pos:position pos:line="8" pos:column="48"/></name> <argument_list pos:line="8" pos:column="49">(<argument><expr><operator pos:line="8" pos:column="50">(<pos:position pos:line="8" pos:column="51"/></operator><name pos:line="8" pos:column="51">unsigned<pos:position pos:line="8" pos:column="59"/></name> <name pos:line="8" pos:column="60">char<pos:position pos:line="8" pos:column="64"/></name><operator pos:line="8" pos:column="64">)<pos:position pos:line="8" pos:column="65"/></operator> <operator pos:line="8" pos:column="66">*<pos:position pos:line="8" pos:column="67"/></operator><operator pos:line="8" pos:column="67">(<pos:position pos:line="8" pos:column="68"/></operator><name pos:line="8" pos:column="68">s<pos:position pos:line="8" pos:column="69"/></name><operator pos:line="8" pos:column="69">+<pos:position pos:line="8" pos:column="70"/></operator><literal type="number" pos:line="8" pos:column="70">2<pos:position pos:line="8" pos:column="71"/></literal><operator pos:line="8" pos:column="71">)<pos:position pos:line="8" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="8" pos:column="73"/></argument_list></call> <operator pos:line="8" pos:column="74">&amp;&amp;<pos:position pos:line="8" pos:column="84"/></operator> <call><name pos:line="8" pos:column="77">isxdigit<pos:position pos:line="8" pos:column="85"/></name> <argument_list pos:line="8" pos:column="86">(<argument><expr><operator pos:line="8" pos:column="87">(<pos:position pos:line="8" pos:column="88"/></operator><name pos:line="8" pos:column="88">unsigned<pos:position pos:line="8" pos:column="96"/></name> <name pos:line="8" pos:column="97">char<pos:position pos:line="8" pos:column="101"/></name><operator pos:line="8" pos:column="101">)<pos:position pos:line="8" pos:column="102"/></operator> <operator pos:line="8" pos:column="103">*<pos:position pos:line="8" pos:column="104"/></operator><operator pos:line="8" pos:column="104">(<pos:position pos:line="8" pos:column="105"/></operator><name pos:line="8" pos:column="105">s<pos:position pos:line="8" pos:column="106"/></name><operator pos:line="8" pos:column="106">+<pos:position pos:line="8" pos:column="107"/></operator><literal type="number" pos:line="8" pos:column="107">3<pos:position pos:line="8" pos:column="108"/></literal><operator pos:line="8" pos:column="108">)<pos:position pos:line="8" pos:column="109"/></operator></expr></argument>)<pos:position pos:line="8" pos:column="110"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="111"/></condition><then pos:line="8" pos:column="111">
    <block pos:line="9" pos:column="5">{
      <expr_stmt><expr><operator pos:line="10" pos:column="7">*<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">d<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">++<pos:position pos:line="10" pos:column="11"/></operator> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <call><name pos:line="10" pos:column="14">hexval<pos:position pos:line="10" pos:column="20"/></name> <argument_list pos:line="10" pos:column="21">(<argument><expr><operator pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></operator><operator pos:line="10" pos:column="23">(<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="24">s<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">+<pos:position pos:line="10" pos:column="26"/></operator><literal type="number" pos:line="10" pos:column="26">2<pos:position pos:line="10" pos:column="27"/></literal><operator pos:line="10" pos:column="27">)<pos:position pos:line="10" pos:column="28"/></operator></expr></argument>)<pos:position pos:line="10" pos:column="29"/></argument_list></call> <operator pos:line="10" pos:column="30">&lt;&lt;<pos:position pos:line="10" pos:column="38"/></operator> <literal type="number" pos:line="10" pos:column="33">4<pos:position pos:line="10" pos:column="34"/></literal> <operator pos:line="10" pos:column="35">|<pos:position pos:line="10" pos:column="36"/></operator> <call><name pos:line="10" pos:column="37">hexval<pos:position pos:line="10" pos:column="43"/></name> <argument_list pos:line="10" pos:column="44">(<argument><expr><operator pos:line="10" pos:column="45">*<pos:position pos:line="10" pos:column="46"/></operator><operator pos:line="10" pos:column="46">(<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="47">s<pos:position pos:line="10" pos:column="48"/></name><operator pos:line="10" pos:column="48">+<pos:position pos:line="10" pos:column="49"/></operator><literal type="number" pos:line="10" pos:column="49">3<pos:position pos:line="10" pos:column="50"/></literal><operator pos:line="10" pos:column="50">)<pos:position pos:line="10" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><name pos:line="11" pos:column="7">s<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">+=<pos:position pos:line="11" pos:column="11"/></operator> <literal type="number" pos:line="11" pos:column="12">4<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then>
    <else pos:line="13" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><operator pos:line="14" pos:column="7">*<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">d<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">++<pos:position pos:line="14" pos:column="11"/></operator> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <operator pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">s<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">++<pos:position pos:line="14" pos:column="18"/></operator></expr>;<pos:position pos:line="14" pos:column="19"/></expr_stmt></block></else></if>
  }<pos:position pos:line="15" pos:column="4"/></block></for>
  <expr_stmt><expr><operator pos:line="16" pos:column="3">*<pos:position pos:line="16" pos:column="4"/></operator><name pos:line="16" pos:column="4">d<pos:position pos:line="16" pos:column="5"/></name> <operator pos:line="16" pos:column="6">=<pos:position pos:line="16" pos:column="7"/></operator> <literal type="char" pos:line="16" pos:column="8">'\0'<pos:position pos:line="16" pos:column="12"/></literal></expr>;<pos:position pos:line="16" pos:column="13"/></expr_stmt>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">_chs<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">&amp;&amp;<pos:position pos:line="18" pos:column="22"/></operator> <operator pos:line="18" pos:column="15">(<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="16">cd<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <call><name pos:line="18" pos:column="21">mutt_iconv_open<pos:position pos:line="18" pos:column="36"/></name> <argument_list pos:line="18" pos:column="37">(<argument><expr><name pos:line="18" pos:column="38">_chs<pos:position pos:line="18" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="44">"utf-8"<pos:position pos:line="18" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="53">0<pos:position pos:line="18" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call><operator pos:line="18" pos:column="55">)<pos:position pos:line="18" pos:column="56"/></operator> <operator pos:line="18" pos:column="57">!=<pos:position pos:line="18" pos:column="59"/></operator> <operator pos:line="18" pos:column="60">(<pos:position pos:line="18" pos:column="61"/></operator><name pos:line="18" pos:column="61">iconv_t<pos:position pos:line="18" pos:column="68"/></name><operator pos:line="18" pos:column="68">)<pos:position pos:line="18" pos:column="69"/></operator><operator pos:line="18" pos:column="69">-<pos:position pos:line="18" pos:column="70"/></operator><literal type="number" pos:line="18" pos:column="70">1<pos:position pos:line="18" pos:column="71"/></literal></expr>)<pos:position pos:line="18" pos:column="72"/></condition><then pos:line="18" pos:column="72">
  <block pos:line="19" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">int<pos:position pos:line="20" pos:column="8"/></name></type> <name pos:line="20" pos:column="9">n<pos:position pos:line="20" pos:column="10"/></name> <init pos:line="20" pos:column="11">= <expr><name pos:line="20" pos:column="13">s<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">-<pos:position pos:line="20" pos:column="16"/></operator> <name pos:line="20" pos:column="17">uid<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">+<pos:position pos:line="20" pos:column="22"/></operator> <literal type="number" pos:line="20" pos:column="23">1<pos:position pos:line="20" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="25"/></decl_stmt> <comment type="block" pos:line="20" pos:column="26">/* chars available in original buffer */</comment>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">char<pos:position pos:line="21" pos:column="9"/></name> <modifier pos:line="21" pos:column="10">*<pos:position pos:line="21" pos:column="11"/></modifier></type><name pos:line="21" pos:column="11">buf<pos:position pos:line="21" pos:column="14"/></name></decl>;<pos:position pos:line="21" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">ICONV_CONST<pos:position pos:line="22" pos:column="16"/></name> <name pos:line="22" pos:column="17">char<pos:position pos:line="22" pos:column="21"/></name> <modifier pos:line="22" pos:column="22">*<pos:position pos:line="22" pos:column="23"/></modifier></type><name pos:line="22" pos:column="23">ib<pos:position pos:line="22" pos:column="25"/></name></decl>;<pos:position pos:line="22" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">char<pos:position pos:line="23" pos:column="9"/></name> <modifier pos:line="23" pos:column="10">*<pos:position pos:line="23" pos:column="11"/></modifier></type><name pos:line="23" pos:column="11">ob<pos:position pos:line="23" pos:column="13"/></name></decl>;<pos:position pos:line="23" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">size_t<pos:position pos:line="24" pos:column="11"/></name></type> <name pos:line="24" pos:column="12">ibl<pos:position pos:line="24" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="24" pos:column="17">obl<pos:position pos:line="24" pos:column="20"/></name></decl>;<pos:position pos:line="24" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name pos:line="26" pos:column="5">buf<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator> <call><name pos:line="26" pos:column="11">safe_malloc<pos:position pos:line="26" pos:column="22"/></name> <argument_list pos:line="26" pos:column="23">(<argument><expr><name pos:line="26" pos:column="24">n<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">+<pos:position pos:line="26" pos:column="26"/></operator><literal type="number" pos:line="26" pos:column="26">1<pos:position pos:line="26" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="27" pos:column="5">ib<pos:position pos:line="27" pos:column="7"/></name> <operator pos:line="27" pos:column="8">=<pos:position pos:line="27" pos:column="9"/></operator> <name pos:line="27" pos:column="10">uid<pos:position pos:line="27" pos:column="13"/></name></expr><operator pos:line="27" pos:column="13">,<pos:position pos:line="27" pos:column="14"/></operator> <expr><name pos:line="27" pos:column="15">ibl<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <name pos:line="27" pos:column="21">d<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">-<pos:position pos:line="27" pos:column="24"/></operator> <name pos:line="27" pos:column="25">uid<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">+<pos:position pos:line="27" pos:column="30"/></operator> <literal type="number" pos:line="27" pos:column="31">1<pos:position pos:line="27" pos:column="32"/></literal></expr><operator pos:line="27" pos:column="32">,<pos:position pos:line="27" pos:column="33"/></operator> <expr><name pos:line="27" pos:column="34">ob<pos:position pos:line="27" pos:column="36"/></name> <operator pos:line="27" pos:column="37">=<pos:position pos:line="27" pos:column="38"/></operator> <name pos:line="27" pos:column="39">buf<pos:position pos:line="27" pos:column="42"/></name></expr><operator pos:line="27" pos:column="42">,<pos:position pos:line="27" pos:column="43"/></operator> <expr><name pos:line="27" pos:column="44">obl<pos:position pos:line="27" pos:column="47"/></name> <operator pos:line="27" pos:column="48">=<pos:position pos:line="27" pos:column="49"/></operator> <name pos:line="27" pos:column="50">n<pos:position pos:line="27" pos:column="51"/></name></expr>;<pos:position pos:line="27" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">iconv<pos:position pos:line="28" pos:column="10"/></name> <argument_list pos:line="28" pos:column="11">(<argument><expr><name pos:line="28" pos:column="12">cd<pos:position pos:line="28" pos:column="14"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="16">&amp;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="17">ib<pos:position pos:line="28" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="21">&amp;<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="22">ibl<pos:position pos:line="28" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="27">&amp;<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="28">ob<pos:position pos:line="28" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="32">&amp;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="33">obl<pos:position pos:line="28" pos:column="36"/></name></expr></argument>)<pos:position pos:line="28" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="38"/></expr_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">!<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">ibl<pos:position pos:line="29" pos:column="13"/></name></expr>)<pos:position pos:line="29" pos:column="14"/></condition><then pos:line="29" pos:column="14">
    <block pos:line="30" pos:column="5">{
      <if pos:line="31" pos:column="7">if <condition pos:line="31" pos:column="10">(<expr><name pos:line="31" pos:column="11">ob<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">-<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">buf<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">&lt;<pos:position pos:line="31" pos:column="22"/></operator> <name pos:line="31" pos:column="20">n<pos:position pos:line="31" pos:column="21"/></name></expr>)<pos:position pos:line="31" pos:column="22"/></condition><then pos:line="31" pos:column="22">
      <block pos:line="32" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="33" pos:column="9">memcpy<pos:position pos:line="33" pos:column="15"/></name> <argument_list pos:line="33" pos:column="16">(<argument><expr><name pos:line="33" pos:column="17">uid<pos:position pos:line="33" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="22">buf<pos:position pos:line="33" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="27">ob<pos:position pos:line="33" pos:column="29"/></name><operator pos:line="33" pos:column="29">-<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="30">buf<pos:position pos:line="33" pos:column="33"/></name></expr></argument>)<pos:position pos:line="33" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="34" pos:column="9">uid<pos:position pos:line="34" pos:column="12"/></name><index pos:line="34" pos:column="12">[<expr><name pos:line="34" pos:column="13">ob<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">-<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="16">buf<pos:position pos:line="34" pos:column="19"/></name></expr>]<pos:position pos:line="34" pos:column="20"/></index></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <literal type="char" pos:line="34" pos:column="23">'\0'<pos:position pos:line="34" pos:column="27"/></literal></expr>;<pos:position pos:line="34" pos:column="28"/></expr_stmt>
      }<pos:position pos:line="35" pos:column="8"/></block></then>
      <elseif pos:line="36" pos:column="7">else <if pos:line="36" pos:column="12">if <condition pos:line="36" pos:column="15">(<expr><name pos:line="36" pos:column="16">n<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">&gt;=<pos:position pos:line="36" pos:column="23"/></operator> <literal type="number" pos:line="36" pos:column="21">0<pos:position pos:line="36" pos:column="22"/></literal> <operator pos:line="36" pos:column="23">&amp;&amp;<pos:position pos:line="36" pos:column="33"/></operator> <name pos:line="36" pos:column="26">ob<pos:position pos:line="36" pos:column="28"/></name><operator pos:line="36" pos:column="28">-<pos:position pos:line="36" pos:column="29"/></operator><name pos:line="36" pos:column="29">buf<pos:position pos:line="36" pos:column="32"/></name> <operator pos:line="36" pos:column="33">==<pos:position pos:line="36" pos:column="35"/></operator> <name pos:line="36" pos:column="36">n<pos:position pos:line="36" pos:column="37"/></name> <operator pos:line="36" pos:column="38">&amp;&amp;<pos:position pos:line="36" pos:column="48"/></operator> <operator pos:line="36" pos:column="41">(<pos:position pos:line="36" pos:column="42"/></operator><name><name pos:line="36" pos:column="42">buf<pos:position pos:line="36" pos:column="45"/></name><index pos:line="36" pos:column="45">[<expr><name pos:line="36" pos:column="46">n<pos:position pos:line="36" pos:column="47"/></name></expr>]<pos:position pos:line="36" pos:column="48"/></index></name> <operator pos:line="36" pos:column="49">=<pos:position pos:line="36" pos:column="50"/></operator> <literal type="number" pos:line="36" pos:column="51">0<pos:position pos:line="36" pos:column="52"/></literal><operator pos:line="36" pos:column="52">,<pos:position pos:line="36" pos:column="53"/></operator> <call><name pos:line="36" pos:column="54">strlen<pos:position pos:line="36" pos:column="60"/></name> <argument_list pos:line="36" pos:column="61">(<argument><expr><name pos:line="36" pos:column="62">buf<pos:position pos:line="36" pos:column="65"/></name></expr></argument>)<pos:position pos:line="36" pos:column="66"/></argument_list></call> <operator pos:line="36" pos:column="67">&lt;<pos:position pos:line="36" pos:column="71"/></operator> <operator pos:line="36" pos:column="69">(<pos:position pos:line="36" pos:column="70"/></operator><name pos:line="36" pos:column="70">size_t<pos:position pos:line="36" pos:column="76"/></name><operator pos:line="36" pos:column="76">)<pos:position pos:line="36" pos:column="77"/></operator><name pos:line="36" pos:column="77">n<pos:position pos:line="36" pos:column="78"/></name><operator pos:line="36" pos:column="78">)<pos:position pos:line="36" pos:column="79"/></operator></expr>)<pos:position pos:line="36" pos:column="80"/></condition><then pos:line="36" pos:column="80">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="9">memcpy<pos:position pos:line="37" pos:column="15"/></name> <argument_list pos:line="37" pos:column="16">(<argument><expr><name pos:line="37" pos:column="17">uid<pos:position pos:line="37" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="22">buf<pos:position pos:line="37" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="27">n<pos:position pos:line="37" pos:column="28"/></name></expr></argument>)<pos:position pos:line="37" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="30"/></expr_stmt></block></then></if></elseif></if>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">FREE<pos:position pos:line="39" pos:column="9"/></name> <argument_list pos:line="39" pos:column="10">(<argument><expr><operator pos:line="39" pos:column="11">&amp;<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="12">buf<pos:position pos:line="39" pos:column="15"/></name></expr></argument>)<pos:position pos:line="39" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">iconv_close<pos:position pos:line="40" pos:column="16"/></name> <argument_list pos:line="40" pos:column="17">(<argument><expr><name pos:line="40" pos:column="18">cd<pos:position pos:line="40" pos:column="20"/></name></expr></argument>)<pos:position pos:line="40" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_524_mutt-1.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">MESSAGE<pos:position pos:line="1" pos:column="8"/></name> <modifier pos:line="1" pos:column="9">*<pos:position pos:line="1" pos:column="10"/></modifier></type><name pos:line="1" pos:column="10">mx_open_message<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">CONTEXT<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">ctx<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">int<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">msgno<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">MESSAGE<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">msg<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  
  <expr_stmt><expr><name pos:line="5" pos:column="3">msg<pos:position pos:line="5" pos:column="6"/></name> <operator pos:line="5" pos:column="7">=<pos:position pos:line="5" pos:column="8"/></operator> <call><name pos:line="5" pos:column="9">safe_calloc<pos:position pos:line="5" pos:column="20"/></name> <argument_list pos:line="5" pos:column="21">(<argument><expr><literal type="number" pos:line="5" pos:column="22">1<pos:position pos:line="5" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="25">sizeof <argument_list pos:line="5" pos:column="32">(<argument><expr><name pos:line="5" pos:column="33">MESSAGE<pos:position pos:line="5" pos:column="40"/></name></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="43"/></expr_stmt>
  <switch pos:line="6" pos:column="3">switch <condition pos:line="6" pos:column="10">(<expr><name><name pos:line="6" pos:column="11">msg<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">-&gt;<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="16">magic<pos:position pos:line="6" pos:column="21"/></name></name> <operator pos:line="6" pos:column="22">=<pos:position pos:line="6" pos:column="23"/></operator> <name><name pos:line="6" pos:column="24">ctx<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">-&gt;<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="29">magic<pos:position pos:line="6" pos:column="34"/></name></name></expr>)<pos:position pos:line="6" pos:column="35"/></condition>
  <block pos:line="7" pos:column="3">{
    <case pos:line="8" pos:column="5">case <expr><name pos:line="8" pos:column="10">M_MBOX<pos:position pos:line="8" pos:column="16"/></name></expr>:<pos:position pos:line="8" pos:column="17"/></case>
    <case pos:line="9" pos:column="5">case <expr><name pos:line="9" pos:column="10">M_MMDF<pos:position pos:line="9" pos:column="16"/></name></expr>:<pos:position pos:line="9" pos:column="17"/></case>
      <expr_stmt><expr><name><name pos:line="10" pos:column="7">msg<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">fp<pos:position pos:line="10" pos:column="14"/></name></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <name><name pos:line="10" pos:column="17">ctx<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">-&gt;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="22">fp<pos:position pos:line="10" pos:column="24"/></name></name></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt>
      <break pos:line="11" pos:column="7">break;<pos:position pos:line="11" pos:column="13"/></break>

    <case pos:line="13" pos:column="5">case <expr><name pos:line="13" pos:column="10">M_MH<pos:position pos:line="13" pos:column="14"/></name></expr>:<pos:position pos:line="13" pos:column="15"/></case>
    <case pos:line="14" pos:column="5">case <expr><name pos:line="14" pos:column="10">M_MAILDIR<pos:position pos:line="14" pos:column="19"/></name></expr>:<pos:position pos:line="14" pos:column="20"/></case>
    <block pos:line="15" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="16" pos:column="7">HEADER<pos:position pos:line="16" pos:column="13"/></name> <modifier pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></modifier></type><name pos:line="16" pos:column="15">cur<pos:position pos:line="16" pos:column="18"/></name> <init pos:line="16" pos:column="19">= <expr><name><name pos:line="16" pos:column="21">ctx<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">-&gt;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="26">hdrs<pos:position pos:line="16" pos:column="30"/></name><index pos:line="16" pos:column="30">[<expr><name pos:line="16" pos:column="31">msgno<pos:position pos:line="16" pos:column="36"/></name></expr>]<pos:position pos:line="16" pos:column="37"/></index></name></expr></init></decl>;<pos:position pos:line="16" pos:column="38"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="17" pos:column="7">char<pos:position pos:line="17" pos:column="11"/></name></type> <name><name pos:line="17" pos:column="12">path<pos:position pos:line="17" pos:column="16"/></name><index pos:line="17" pos:column="16">[<expr><name pos:line="17" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="17" pos:column="32"/></name></expr>]<pos:position pos:line="17" pos:column="33"/></index></name></decl>;<pos:position pos:line="17" pos:column="34"/></decl_stmt>
      
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">snprintf<pos:position pos:line="19" pos:column="15"/></name> <argument_list pos:line="19" pos:column="16">(<argument><expr><name pos:line="19" pos:column="17">path<pos:position pos:line="19" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="23">sizeof <argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">path<pos:position pos:line="19" pos:column="35"/></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="38">"%s/%s"<pos:position pos:line="19" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="47">ctx<pos:position pos:line="19" pos:column="50"/></name><operator pos:line="19" pos:column="50">-&gt;<pos:position pos:line="19" pos:column="55"/></operator><name pos:line="19" pos:column="52">path<pos:position pos:line="19" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="58">cur<pos:position pos:line="19" pos:column="61"/></name><operator pos:line="19" pos:column="61">-&gt;<pos:position pos:line="19" pos:column="66"/></operator><name pos:line="19" pos:column="63">path<pos:position pos:line="19" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="69"/></expr_stmt>
      
      <if pos:line="21" pos:column="7">if <condition pos:line="21" pos:column="10">(<expr><operator pos:line="21" pos:column="11">(<pos:position pos:line="21" pos:column="12"/></operator><name><name pos:line="21" pos:column="12">msg<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">-&gt;<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="17">fp<pos:position pos:line="21" pos:column="19"/></name></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <call><name pos:line="21" pos:column="22">fopen<pos:position pos:line="21" pos:column="27"/></name> <argument_list pos:line="21" pos:column="28">(<argument><expr><name pos:line="21" pos:column="29">path<pos:position pos:line="21" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="35">"r"<pos:position pos:line="21" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call><operator pos:line="21" pos:column="39">)<pos:position pos:line="21" pos:column="40"/></operator> <operator pos:line="21" pos:column="41">==<pos:position pos:line="21" pos:column="43"/></operator> <name pos:line="21" pos:column="44">NULL<pos:position pos:line="21" pos:column="48"/></name> <operator pos:line="21" pos:column="49">&amp;&amp;<pos:position pos:line="21" pos:column="59"/></operator> <name pos:line="21" pos:column="52">errno<pos:position pos:line="21" pos:column="57"/></name> <operator pos:line="21" pos:column="58">==<pos:position pos:line="21" pos:column="60"/></operator> <name pos:line="21" pos:column="61">ENOENT<pos:position pos:line="21" pos:column="67"/></name> <operator pos:line="21" pos:column="68">&amp;&amp;<pos:position pos:line="21" pos:column="78"/></operator>
	  <name><name pos:line="22" pos:column="11">ctx<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">-&gt;<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="16">magic<pos:position pos:line="22" pos:column="21"/></name></name> <operator pos:line="22" pos:column="22">==<pos:position pos:line="22" pos:column="24"/></operator> <name pos:line="22" pos:column="25">M_MAILDIR<pos:position pos:line="22" pos:column="34"/></name></expr>)<pos:position pos:line="22" pos:column="35"/></condition><then pos:line="22" pos:column="35">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="9">msg<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">fp<pos:position pos:line="23" pos:column="16"/></name></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <call><name pos:line="23" pos:column="19">maildir_open_find_message<pos:position pos:line="23" pos:column="44"/></name> <argument_list pos:line="23" pos:column="45">(<argument><expr><name><name pos:line="23" pos:column="46">ctx<pos:position pos:line="23" pos:column="49"/></name><operator pos:line="23" pos:column="49">-&gt;<pos:position pos:line="23" pos:column="54"/></operator><name pos:line="23" pos:column="51">path<pos:position pos:line="23" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="57">cur<pos:position pos:line="23" pos:column="60"/></name><operator pos:line="23" pos:column="60">-&gt;<pos:position pos:line="23" pos:column="65"/></operator><name pos:line="23" pos:column="62">path<pos:position pos:line="23" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="68"/></expr_stmt></block></then></if>
      
      <if pos:line="25" pos:column="7">if <condition pos:line="25" pos:column="10">(<expr><name><name pos:line="25" pos:column="11">msg<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">-&gt;<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="16">fp<pos:position pos:line="25" pos:column="18"/></name></name> <operator pos:line="25" pos:column="19">==<pos:position pos:line="25" pos:column="21"/></operator> <name pos:line="25" pos:column="22">NULL<pos:position pos:line="25" pos:column="26"/></name></expr>)<pos:position pos:line="25" pos:column="27"/></condition><then pos:line="25" pos:column="27">
      <block pos:line="26" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">mutt_perror<pos:position pos:line="27" pos:column="20"/></name> <argument_list pos:line="27" pos:column="21">(<argument><expr><name pos:line="27" pos:column="22">path<pos:position pos:line="27" pos:column="26"/></name></expr></argument>)<pos:position pos:line="27" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">dprint<pos:position pos:line="28" pos:column="15"/></name> <argument_list pos:line="28" pos:column="16">(<argument><expr><literal type="number" pos:line="28" pos:column="17">1<pos:position pos:line="28" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="28" pos:column="20">(<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="21">debugfile<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">,<pos:position pos:line="28" pos:column="31"/></operator> <literal type="string" pos:line="28" pos:column="32">"mx_open_message: fopen: %s: %s (errno %d).\n"<pos:position pos:line="28" pos:column="78"/></literal><operator pos:line="28" pos:column="78">,<pos:position pos:line="28" pos:column="79"/></operator>
		    <name pos:line="29" pos:column="21">path<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">,<pos:position pos:line="29" pos:column="26"/></operator> <call><name pos:line="29" pos:column="27">strerror<pos:position pos:line="29" pos:column="35"/></name> <argument_list pos:line="29" pos:column="36">(<argument><expr><name pos:line="29" pos:column="37">errno<pos:position pos:line="29" pos:column="42"/></name></expr></argument>)<pos:position pos:line="29" pos:column="43"/></argument_list></call><operator pos:line="29" pos:column="43">,<pos:position pos:line="29" pos:column="44"/></operator> <name pos:line="29" pos:column="45">errno<pos:position pos:line="29" pos:column="50"/></name><operator pos:line="29" pos:column="50">)<pos:position pos:line="29" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="29" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">FREE<pos:position pos:line="30" pos:column="13"/></name> <argument_list pos:line="30" pos:column="14">(<argument><expr><operator pos:line="30" pos:column="15">&amp;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="16">msg<pos:position pos:line="30" pos:column="19"/></name></expr></argument>)<pos:position pos:line="30" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="31" pos:column="8"/></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block>
    <break pos:line="33" pos:column="5">break;<pos:position pos:line="33" pos:column="11"/></break>
    
<cpp:ifdef pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">ifdef<pos:position pos:line="35" pos:column="7"/></cpp:directive> <name pos:line="35" pos:column="8">USE_IMAP<pos:position pos:line="35" pos:column="16"/></name></cpp:ifdef>
    <case pos:line="36" pos:column="5">case <expr><name pos:line="36" pos:column="10">M_IMAP<pos:position pos:line="36" pos:column="16"/></name></expr>:<pos:position pos:line="36" pos:column="17"/></case>
    <block pos:line="37" pos:column="5">{
      <if pos:line="38" pos:column="7">if <condition pos:line="38" pos:column="10">(<expr><call><name pos:line="38" pos:column="11">imap_fetch_message<pos:position pos:line="38" pos:column="29"/></name> <argument_list pos:line="38" pos:column="30">(<argument><expr><name pos:line="38" pos:column="31">msg<pos:position pos:line="38" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="36">ctx<pos:position pos:line="38" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="41">msgno<pos:position pos:line="38" pos:column="46"/></name></expr></argument>)<pos:position pos:line="38" pos:column="47"/></argument_list></call> <operator pos:line="38" pos:column="48">!=<pos:position pos:line="38" pos:column="50"/></operator> <literal type="number" pos:line="38" pos:column="51">0<pos:position pos:line="38" pos:column="52"/></literal></expr>)<pos:position pos:line="38" pos:column="53"/></condition><then pos:line="38" pos:column="53">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="9">FREE<pos:position pos:line="39" pos:column="13"/></name> <argument_list pos:line="39" pos:column="14">(<argument><expr><operator pos:line="39" pos:column="15">&amp;<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="16">msg<pos:position pos:line="39" pos:column="19"/></name></expr></argument>)<pos:position pos:line="39" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="21"/></expr_stmt></block></then></if>
      <break pos:line="40" pos:column="7">break;<pos:position pos:line="40" pos:column="13"/></break>
    }<pos:position pos:line="41" pos:column="6"/></block>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif<pos:position pos:line="42" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="42" pos:column="8">/* USE_IMAP */</comment>

<cpp:ifdef pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">ifdef<pos:position pos:line="44" pos:column="7"/></cpp:directive> <name pos:line="44" pos:column="8">USE_POP<pos:position pos:line="44" pos:column="15"/></name></cpp:ifdef>
    <case pos:line="45" pos:column="5">case <expr><name pos:line="45" pos:column="10">M_POP<pos:position pos:line="45" pos:column="15"/></name></expr>:<pos:position pos:line="45" pos:column="16"/></case>
    <block pos:line="46" pos:column="5">{
      <if pos:line="47" pos:column="7">if <condition pos:line="47" pos:column="10">(<expr><call><name pos:line="47" pos:column="11">pop_fetch_message<pos:position pos:line="47" pos:column="28"/></name> <argument_list pos:line="47" pos:column="29">(<argument><expr><name pos:line="47" pos:column="30">msg<pos:position pos:line="47" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="35">ctx<pos:position pos:line="47" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="40">msgno<pos:position pos:line="47" pos:column="45"/></name></expr></argument>)<pos:position pos:line="47" pos:column="46"/></argument_list></call> <operator pos:line="47" pos:column="47">!=<pos:position pos:line="47" pos:column="49"/></operator> <literal type="number" pos:line="47" pos:column="50">0<pos:position pos:line="47" pos:column="51"/></literal></expr>)<pos:position pos:line="47" pos:column="52"/></condition><then pos:line="47" pos:column="52">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="9">FREE<pos:position pos:line="48" pos:column="13"/></name> <argument_list pos:line="48" pos:column="14">(<argument><expr><operator pos:line="48" pos:column="15">&amp;<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="16">msg<pos:position pos:line="48" pos:column="19"/></name></expr></argument>)<pos:position pos:line="48" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="21"/></expr_stmt></block></then></if>
      <break pos:line="49" pos:column="7">break;<pos:position pos:line="49" pos:column="13"/></break>
    }<pos:position pos:line="50" pos:column="6"/></block>
<cpp:endif pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">endif<pos:position pos:line="51" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="51" pos:column="8">/* USE_POP */</comment>

    <default pos:line="53" pos:column="5">default:<pos:position pos:line="53" pos:column="13"/></default>
      <expr_stmt><expr><call><name pos:line="54" pos:column="7">dprint<pos:position pos:line="54" pos:column="13"/></name> <argument_list pos:line="54" pos:column="14">(<argument><expr><literal type="number" pos:line="54" pos:column="15">1<pos:position pos:line="54" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="54" pos:column="18">(<pos:position pos:line="54" pos:column="19"/></operator><name pos:line="54" pos:column="19">debugfile<pos:position pos:line="54" pos:column="28"/></name><operator pos:line="54" pos:column="28">,<pos:position pos:line="54" pos:column="29"/></operator> <literal type="string" pos:line="54" pos:column="30">"mx_open_message(): function not implemented for mailbox type %d.\n"<pos:position pos:line="54" pos:column="98"/></literal><operator pos:line="54" pos:column="98">,<pos:position pos:line="54" pos:column="99"/></operator> <name><name pos:line="54" pos:column="100">ctx<pos:position pos:line="54" pos:column="103"/></name><operator pos:line="54" pos:column="103">-&gt;<pos:position pos:line="54" pos:column="108"/></operator><name pos:line="54" pos:column="105">magic<pos:position pos:line="54" pos:column="110"/></name></name><operator pos:line="54" pos:column="110">)<pos:position pos:line="54" pos:column="111"/></operator></expr></argument>)<pos:position pos:line="54" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="113"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="55" pos:column="7">FREE<pos:position pos:line="55" pos:column="11"/></name> <argument_list pos:line="55" pos:column="12">(<argument><expr><operator pos:line="55" pos:column="13">&amp;<pos:position pos:line="55" pos:column="18"/></operator><name pos:line="55" pos:column="14">msg<pos:position pos:line="55" pos:column="17"/></name></expr></argument>)<pos:position pos:line="55" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="19"/></expr_stmt>
      <break pos:line="56" pos:column="7">break;<pos:position pos:line="56" pos:column="13"/></break>
  }<pos:position pos:line="57" pos:column="4"/></block></switch>
  <return pos:line="58" pos:column="3">return <expr><operator pos:line="58" pos:column="10">(<pos:position pos:line="58" pos:column="11"/></operator><name pos:line="58" pos:column="11">msg<pos:position pos:line="58" pos:column="14"/></name><operator pos:line="58" pos:column="14">)<pos:position pos:line="58" pos:column="15"/></operator></expr>;<pos:position pos:line="58" pos:column="16"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

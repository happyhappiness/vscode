<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_505_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">mutt_read_rfc822_line<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">FILE<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">f<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">line<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">size_t<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">linelen<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">buf<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><name pos:line="3" pos:column="15">line<pos:position pos:line="3" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">ch<pos:position pos:line="4" pos:column="9"/></name></decl>;<pos:position pos:line="4" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">offset<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">len<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>

  <macro><name pos:line="8" pos:column="3">FOREVER<pos:position pos:line="8" pos:column="10"/></name></macro>
  <block pos:line="9" pos:column="3">{
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">fgets<pos:position pos:line="10" pos:column="14"/></name> <argument_list pos:line="10" pos:column="15">(<argument><expr><name pos:line="10" pos:column="16">buf<pos:position pos:line="10" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">linelen<pos:position pos:line="10" pos:column="29"/></name> <operator pos:line="10" pos:column="30">-<pos:position pos:line="10" pos:column="31"/></operator> <name pos:line="10" pos:column="32">offset<pos:position pos:line="10" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="40">f<pos:position pos:line="10" pos:column="41"/></name></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call> <operator pos:line="10" pos:column="43">==<pos:position pos:line="10" pos:column="45"/></operator> <name pos:line="10" pos:column="46">NULL<pos:position pos:line="10" pos:column="50"/></name> <operator pos:line="10" pos:column="51">||<pos:position pos:line="10" pos:column="53"/></operator>	<comment type="block" pos:line="10" pos:column="57">/* end of file or */</comment>
	<operator pos:line="11" pos:column="9">(<pos:position pos:line="11" pos:column="10"/></operator><call><name pos:line="11" pos:column="10">ISSPACE<pos:position pos:line="11" pos:column="17"/></name> <argument_list pos:line="11" pos:column="18">(<argument><expr><operator pos:line="11" pos:column="19">*<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">line<pos:position pos:line="11" pos:column="24"/></name></expr></argument>)<pos:position pos:line="11" pos:column="25"/></argument_list></call> <operator pos:line="11" pos:column="26">&amp;&amp;<pos:position pos:line="11" pos:column="36"/></operator> <operator pos:line="11" pos:column="29">!<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="30">offset<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">)<pos:position pos:line="11" pos:column="37"/></operator></expr>)<pos:position pos:line="11" pos:column="38"/></condition><then pos:line="11" pos:column="38">			<comment type="block" pos:line="11" pos:column="57">/* end of headers */</comment> 
    <block pos:line="12" pos:column="5">{
      <expr_stmt><expr><operator pos:line="13" pos:column="7">*<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">line<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <literal type="number" pos:line="13" pos:column="15">0<pos:position pos:line="13" pos:column="16"/></literal></expr>;<pos:position pos:line="13" pos:column="17"/></expr_stmt>
      <return pos:line="14" pos:column="7">return <expr><operator pos:line="14" pos:column="14">(<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">line<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">)<pos:position pos:line="14" pos:column="20"/></operator></expr>;<pos:position pos:line="14" pos:column="21"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="17" pos:column="5">len<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">=<pos:position pos:line="17" pos:column="10"/></operator> <call><name pos:line="17" pos:column="11">mutt_strlen<pos:position pos:line="17" pos:column="22"/></name> <argument_list pos:line="17" pos:column="23">(<argument><expr><name pos:line="17" pos:column="24">buf<pos:position pos:line="17" pos:column="27"/></name></expr></argument>)<pos:position pos:line="17" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator> <name pos:line="18" pos:column="11">len<pos:position pos:line="18" pos:column="14"/></name></expr>)<pos:position pos:line="18" pos:column="15"/></condition><then pos:line="18" pos:column="15">
      <block type="pseudo"><return pos:line="19" pos:column="7">return <expr><operator pos:line="19" pos:column="14">(<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">line<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">)<pos:position pos:line="19" pos:column="20"/></operator></expr>;<pos:position pos:line="19" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="21" pos:column="5">buf<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">+=<pos:position pos:line="21" pos:column="11"/></operator> <name pos:line="21" pos:column="12">len<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">-<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="18">1<pos:position pos:line="21" pos:column="19"/></literal></expr>;<pos:position pos:line="21" pos:column="20"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">*<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">buf<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">==<pos:position pos:line="22" pos:column="16"/></operator> <literal type="char" pos:line="22" pos:column="17">'\n'<pos:position pos:line="22" pos:column="21"/></literal></expr>)<pos:position pos:line="22" pos:column="22"/></condition><then pos:line="22" pos:column="22">
    <block pos:line="23" pos:column="5">{
      <comment type="block" pos:line="24" pos:column="7">/* we did get a full line. remove trailing space */</comment>
      <while pos:line="25" pos:column="7">while <condition pos:line="25" pos:column="13">(<expr><call><name pos:line="25" pos:column="14">ISSPACE<pos:position pos:line="25" pos:column="21"/></name> <argument_list pos:line="25" pos:column="22">(<argument><expr><operator pos:line="25" pos:column="23">*<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="24">buf<pos:position pos:line="25" pos:column="27"/></name></expr></argument>)<pos:position pos:line="25" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="29"/></condition>
	<block type="pseudo"><expr_stmt><expr><operator pos:line="26" pos:column="9">*<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">buf<pos:position pos:line="26" pos:column="13"/></name><operator pos:line="26" pos:column="13">--<pos:position pos:line="26" pos:column="15"/></operator> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <literal type="number" pos:line="26" pos:column="18">0<pos:position pos:line="26" pos:column="19"/></literal></expr>;<pos:position pos:line="26" pos:column="20"/></expr_stmt></block></while>	<comment type="block" pos:line="26" pos:column="25">/* we cannot come beyond line's beginning because
			 * it begins with a non-space */</comment>

      <comment type="block" pos:line="29" pos:column="7">/* check to see if the next line is a continuation line */</comment>
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><operator pos:line="30" pos:column="11">(<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="12">ch<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <call><name pos:line="30" pos:column="17">fgetc<pos:position pos:line="30" pos:column="22"/></name> <argument_list pos:line="30" pos:column="23">(<argument><expr><name pos:line="30" pos:column="24">f<pos:position pos:line="30" pos:column="25"/></name></expr></argument>)<pos:position pos:line="30" pos:column="26"/></argument_list></call><operator pos:line="30" pos:column="26">)<pos:position pos:line="30" pos:column="27"/></operator> <operator pos:line="30" pos:column="28">!=<pos:position pos:line="30" pos:column="30"/></operator> <literal type="char" pos:line="30" pos:column="31">' '<pos:position pos:line="30" pos:column="34"/></literal> <operator pos:line="30" pos:column="35">&amp;&amp;<pos:position pos:line="30" pos:column="45"/></operator> <name pos:line="30" pos:column="38">ch<pos:position pos:line="30" pos:column="40"/></name> <operator pos:line="30" pos:column="41">!=<pos:position pos:line="30" pos:column="43"/></operator> <literal type="char" pos:line="30" pos:column="44">'\t'<pos:position pos:line="30" pos:column="48"/></literal></expr>)<pos:position pos:line="30" pos:column="49"/></condition><then pos:line="30" pos:column="49">
      <block pos:line="31" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="32" pos:column="9">ungetc<pos:position pos:line="32" pos:column="15"/></name> <argument_list pos:line="32" pos:column="16">(<argument><expr><name pos:line="32" pos:column="17">ch<pos:position pos:line="32" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="21">f<pos:position pos:line="32" pos:column="22"/></name></expr></argument>)<pos:position pos:line="32" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="24"/></expr_stmt>
	<return pos:line="33" pos:column="9">return <expr><operator pos:line="33" pos:column="16">(<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">line<pos:position pos:line="33" pos:column="21"/></name><operator pos:line="33" pos:column="21">)<pos:position pos:line="33" pos:column="22"/></operator></expr>;<pos:position pos:line="33" pos:column="23"/></return> <comment type="block" pos:line="33" pos:column="24">/* next line is a separate header field or EOH */</comment>
      }<pos:position pos:line="34" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="36" pos:column="7">/* eat tabs and spaces from the beginning of the continuation line */</comment>
      <while pos:line="37" pos:column="7">while <condition pos:line="37" pos:column="13">(<expr><operator pos:line="37" pos:column="14">(<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="15">ch<pos:position pos:line="37" pos:column="17"/></name> <operator pos:line="37" pos:column="18">=<pos:position pos:line="37" pos:column="19"/></operator> <call><name pos:line="37" pos:column="20">fgetc<pos:position pos:line="37" pos:column="25"/></name> <argument_list pos:line="37" pos:column="26">(<argument><expr><name pos:line="37" pos:column="27">f<pos:position pos:line="37" pos:column="28"/></name></expr></argument>)<pos:position pos:line="37" pos:column="29"/></argument_list></call><operator pos:line="37" pos:column="29">)<pos:position pos:line="37" pos:column="30"/></operator> <operator pos:line="37" pos:column="31">==<pos:position pos:line="37" pos:column="33"/></operator> <literal type="char" pos:line="37" pos:column="34">' '<pos:position pos:line="37" pos:column="37"/></literal> <operator pos:line="37" pos:column="38">||<pos:position pos:line="37" pos:column="40"/></operator> <name pos:line="37" pos:column="41">ch<pos:position pos:line="37" pos:column="43"/></name> <operator pos:line="37" pos:column="44">==<pos:position pos:line="37" pos:column="46"/></operator> <literal type="char" pos:line="37" pos:column="47">'\t'<pos:position pos:line="37" pos:column="51"/></literal></expr>)<pos:position pos:line="37" pos:column="52"/></condition>
	<block type="pseudo"><empty_stmt pos:line="38" pos:column="9">;<pos:position pos:line="38" pos:column="10"/></empty_stmt></block></while>
      <expr_stmt><expr><call><name pos:line="39" pos:column="7">ungetc<pos:position pos:line="39" pos:column="13"/></name> <argument_list pos:line="39" pos:column="14">(<argument><expr><name pos:line="39" pos:column="15">ch<pos:position pos:line="39" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="19">f<pos:position pos:line="39" pos:column="20"/></name></expr></argument>)<pos:position pos:line="39" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="40" pos:column="7">*<pos:position pos:line="40" pos:column="8"/></operator><operator pos:line="40" pos:column="8">++<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="10">buf<pos:position pos:line="40" pos:column="13"/></name> <operator pos:line="40" pos:column="14">=<pos:position pos:line="40" pos:column="15"/></operator> <literal type="char" pos:line="40" pos:column="16">' '<pos:position pos:line="40" pos:column="19"/></literal></expr>;<pos:position pos:line="40" pos:column="20"/></expr_stmt> <comment type="block" pos:line="40" pos:column="21">/* string is still terminated because we removed
		       at least one whitespace char above */</comment>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="44" pos:column="5">buf<pos:position pos:line="44" pos:column="8"/></name><operator pos:line="44" pos:column="8">++<pos:position pos:line="44" pos:column="10"/></operator></expr>;<pos:position pos:line="44" pos:column="11"/></expr_stmt>
    <expr_stmt><expr><name pos:line="45" pos:column="5">offset<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator> <name pos:line="45" pos:column="14">buf<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">-<pos:position pos:line="45" pos:column="19"/></operator> <name pos:line="45" pos:column="20">line<pos:position pos:line="45" pos:column="24"/></name></expr>;<pos:position pos:line="45" pos:column="25"/></expr_stmt>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><operator pos:line="46" pos:column="9">*<pos:position pos:line="46" pos:column="10"/></operator><name pos:line="46" pos:column="10">linelen<pos:position pos:line="46" pos:column="17"/></name> <operator pos:line="46" pos:column="18">&lt;<pos:position pos:line="46" pos:column="22"/></operator> <name pos:line="46" pos:column="20">offset<pos:position pos:line="46" pos:column="26"/></name> <operator pos:line="46" pos:column="27">+<pos:position pos:line="46" pos:column="28"/></operator> <name pos:line="46" pos:column="29">STRING<pos:position pos:line="46" pos:column="35"/></name></expr>)<pos:position pos:line="46" pos:column="36"/></condition><then pos:line="46" pos:column="36">
    <block pos:line="47" pos:column="5">{
      <comment type="block" pos:line="48" pos:column="7">/* grow the buffer */</comment>
      <expr_stmt><expr><operator pos:line="49" pos:column="7">*<pos:position pos:line="49" pos:column="8"/></operator><name pos:line="49" pos:column="8">linelen<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">+=<pos:position pos:line="49" pos:column="18"/></operator> <name pos:line="49" pos:column="19">STRING<pos:position pos:line="49" pos:column="25"/></name></expr>;<pos:position pos:line="49" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="50" pos:column="7">safe_realloc<pos:position pos:line="50" pos:column="19"/></name> <argument_list pos:line="50" pos:column="20">(<argument><expr><operator pos:line="50" pos:column="21">&amp;<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="22">line<pos:position pos:line="50" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="28">*<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="29">linelen<pos:position pos:line="50" pos:column="36"/></name></expr></argument>)<pos:position pos:line="50" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><name pos:line="51" pos:column="7">buf<pos:position pos:line="51" pos:column="10"/></name> <operator pos:line="51" pos:column="11">=<pos:position pos:line="51" pos:column="12"/></operator> <name pos:line="51" pos:column="13">line<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">+<pos:position pos:line="51" pos:column="19"/></operator> <name pos:line="51" pos:column="20">offset<pos:position pos:line="51" pos:column="26"/></name></expr>;<pos:position pos:line="51" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>
  }<pos:position pos:line="53" pos:column="4"/></block>
  <comment type="block" pos:line="54" pos:column="3">/* not reached */</comment>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1049_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_body_handler<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">BODY<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">b<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="33">STATE<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">s<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">plaintext<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><literal type="number" pos:line="3" pos:column="19">0<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">handler_t<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">handler<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name pos:line="4" pos:column="23">NULL<pos:position pos:line="4" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">rc<pos:position pos:line="5" pos:column="9"/></name> <init pos:line="5" pos:column="10">= <expr><literal type="number" pos:line="5" pos:column="12">0<pos:position pos:line="5" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">oflags<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><name><name pos:line="7" pos:column="16">s<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">flags<pos:position pos:line="7" pos:column="24"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
  
  <comment type="block" pos:line="9" pos:column="3">/* first determine which handler to use to process this part */</comment>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><call><name pos:line="11" pos:column="7">mutt_is_autoview<pos:position pos:line="11" pos:column="23"/></name> <argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">b<pos:position pos:line="11" pos:column="26"/></name></expr></argument>)<pos:position pos:line="11" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="28"/></condition><then pos:line="11" pos:column="28">
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><name pos:line="13" pos:column="5">handler<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <name pos:line="13" pos:column="15">autoview_handler<pos:position pos:line="13" pos:column="31"/></name></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">s<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">-&gt;<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="8">flags<pos:position pos:line="14" pos:column="13"/></name></name> <operator pos:line="14" pos:column="14">&amp;=<pos:position pos:line="14" pos:column="20"/></operator> <operator pos:line="14" pos:column="17">~<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">MUTT_CHARCONV<pos:position pos:line="14" pos:column="31"/></name></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></then>
  <elseif pos:line="16" pos:column="3">else <if pos:line="16" pos:column="8">if <condition pos:line="16" pos:column="11">(<expr><name><name pos:line="16" pos:column="12">b<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">type<pos:position pos:line="16" pos:column="19"/></name></name> <operator pos:line="16" pos:column="20">==<pos:position pos:line="16" pos:column="22"/></operator> <name pos:line="16" pos:column="23">TYPETEXT<pos:position pos:line="16" pos:column="31"/></name></expr>)<pos:position pos:line="16" pos:column="32"/></condition><then pos:line="16" pos:column="32">
  <block pos:line="17" pos:column="3">{
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name pos:line="18" pos:column="9">ascii_strcasecmp<pos:position pos:line="18" pos:column="25"/></name> <argument_list pos:line="18" pos:column="26">(<argument><expr><literal type="string" pos:line="18" pos:column="27">"plain"<pos:position pos:line="18" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="36">b<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">-&gt;<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="39">subtype<pos:position pos:line="18" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call> <operator pos:line="18" pos:column="48">==<pos:position pos:line="18" pos:column="50"/></operator> <literal type="number" pos:line="18" pos:column="51">0<pos:position pos:line="18" pos:column="52"/></literal></expr>)<pos:position pos:line="18" pos:column="53"/></condition><then pos:line="18" pos:column="53">
    <block pos:line="19" pos:column="5">{
      <comment type="block" pos:line="20" pos:column="7">/* avoid copying this part twice since removing the transfer-encoding is
       * the only operation needed.
       */</comment>
      <if pos:line="23" pos:column="7">if <condition pos:line="23" pos:column="10">(<expr><operator pos:line="23" pos:column="11">(<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="12">WithCrypto<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">&amp;<pos:position pos:line="23" pos:column="28"/></operator> <name pos:line="23" pos:column="25">APPLICATION_PGP<pos:position pos:line="23" pos:column="40"/></name><operator pos:line="23" pos:column="40">)<pos:position pos:line="23" pos:column="41"/></operator> <operator pos:line="23" pos:column="42">&amp;&amp;<pos:position pos:line="23" pos:column="52"/></operator> <call><name pos:line="23" pos:column="45">mutt_is_application_pgp<pos:position pos:line="23" pos:column="68"/></name> <argument_list pos:line="23" pos:column="69">(<argument><expr><name pos:line="23" pos:column="70">b<pos:position pos:line="23" pos:column="71"/></name></expr></argument>)<pos:position pos:line="23" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="73"/></condition><then pos:line="23" pos:column="73">
	<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="9">handler<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">crypt_pgp_application_pgp_handler<pos:position pos:line="24" pos:column="52"/></name></expr>;<pos:position pos:line="24" pos:column="53"/></expr_stmt></block></then>
      <elseif pos:line="25" pos:column="7">else <if pos:line="25" pos:column="12">if <condition pos:line="25" pos:column="15">(<expr><call><name pos:line="25" pos:column="16">option<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">OPTREFLOWTEXT<pos:position pos:line="25" pos:column="36"/></name></expr></argument>)<pos:position pos:line="25" pos:column="37"/></argument_list></call> <operator pos:line="25" pos:column="38">&amp;&amp;<pos:position pos:line="25" pos:column="48"/></operator> <call><name pos:line="25" pos:column="41">ascii_strcasecmp<pos:position pos:line="25" pos:column="57"/></name> <argument_list pos:line="25" pos:column="58">(<argument><expr><literal type="string" pos:line="25" pos:column="59">"flowed"<pos:position pos:line="25" pos:column="67"/></literal></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="69">mutt_get_parameter<pos:position pos:line="25" pos:column="87"/></name> <argument_list pos:line="25" pos:column="88">(<argument><expr><literal type="string" pos:line="25" pos:column="89">"format"<pos:position pos:line="25" pos:column="97"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="99">b<pos:position pos:line="25" pos:column="100"/></name><operator pos:line="25" pos:column="100">-&gt;<pos:position pos:line="25" pos:column="105"/></operator><name pos:line="25" pos:column="102">parameter<pos:position pos:line="25" pos:column="111"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="112"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="113"/></argument_list></call> <operator pos:line="25" pos:column="114">==<pos:position pos:line="25" pos:column="116"/></operator> <literal type="number" pos:line="25" pos:column="117">0<pos:position pos:line="25" pos:column="118"/></literal></expr>)<pos:position pos:line="25" pos:column="119"/></condition><then pos:line="25" pos:column="119">
	<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="9">handler<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <name pos:line="26" pos:column="19">rfc3676_handler<pos:position pos:line="26" pos:column="34"/></name></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt></block></then></if></elseif>
      <else pos:line="27" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="9">handler<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <name pos:line="28" pos:column="19">text_plain_handler<pos:position pos:line="28" pos:column="37"/></name></expr>;<pos:position pos:line="28" pos:column="38"/></expr_stmt></block></else></if>
    }<pos:position pos:line="29" pos:column="6"/></block></then>
    <elseif pos:line="30" pos:column="5">else <if pos:line="30" pos:column="10">if <condition pos:line="30" pos:column="13">(<expr><call><name pos:line="30" pos:column="14">ascii_strcasecmp<pos:position pos:line="30" pos:column="30"/></name> <argument_list pos:line="30" pos:column="31">(<argument><expr><literal type="string" pos:line="30" pos:column="32">"enriched"<pos:position pos:line="30" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="44">b<pos:position pos:line="30" pos:column="45"/></name><operator pos:line="30" pos:column="45">-&gt;<pos:position pos:line="30" pos:column="50"/></operator><name pos:line="30" pos:column="47">subtype<pos:position pos:line="30" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="55"/></argument_list></call> <operator pos:line="30" pos:column="56">==<pos:position pos:line="30" pos:column="58"/></operator> <literal type="number" pos:line="30" pos:column="59">0<pos:position pos:line="30" pos:column="60"/></literal></expr>)<pos:position pos:line="30" pos:column="61"/></condition><then pos:line="30" pos:column="61">
      <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="7">handler<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">=<pos:position pos:line="31" pos:column="16"/></operator> <name pos:line="31" pos:column="17">text_enriched_handler<pos:position pos:line="31" pos:column="38"/></name></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt></block></then></if></elseif>
    <else pos:line="32" pos:column="5">else <comment type="block" pos:line="32" pos:column="10">/* text body type without a handler */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="7">plaintext<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator> <literal type="number" pos:line="33" pos:column="19">1<pos:position pos:line="33" pos:column="20"/></literal></expr>;<pos:position pos:line="33" pos:column="21"/></expr_stmt></block></else></if>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="35" pos:column="3">else <if pos:line="35" pos:column="8">if <condition pos:line="35" pos:column="11">(<expr><name><name pos:line="35" pos:column="12">b<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">-&gt;<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="15">type<pos:position pos:line="35" pos:column="19"/></name></name> <operator pos:line="35" pos:column="20">==<pos:position pos:line="35" pos:column="22"/></operator> <name pos:line="35" pos:column="23">TYPEMESSAGE<pos:position pos:line="35" pos:column="34"/></name></expr>)<pos:position pos:line="35" pos:column="35"/></condition><then pos:line="35" pos:column="35">
  <block pos:line="36" pos:column="3">{
    <if pos:line="37" pos:column="5">if<condition pos:line="37" pos:column="7">(<expr><call><name pos:line="37" pos:column="8">mutt_is_message_type<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><name><name pos:line="37" pos:column="29">b<pos:position pos:line="37" pos:column="30"/></name><operator pos:line="37" pos:column="30">-&gt;<pos:position pos:line="37" pos:column="35"/></operator><name pos:line="37" pos:column="32">type<pos:position pos:line="37" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="38">b<pos:position pos:line="37" pos:column="39"/></name><operator pos:line="37" pos:column="39">-&gt;<pos:position pos:line="37" pos:column="44"/></operator><name pos:line="37" pos:column="41">subtype<pos:position pos:line="37" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="50"/></condition><then pos:line="37" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="7">handler<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">=<pos:position pos:line="38" pos:column="16"/></operator> <name pos:line="38" pos:column="17">message_handler<pos:position pos:line="38" pos:column="32"/></name></expr>;<pos:position pos:line="38" pos:column="33"/></expr_stmt></block></then>
    <elseif pos:line="39" pos:column="5">else <if pos:line="39" pos:column="10">if <condition pos:line="39" pos:column="13">(<expr><operator pos:line="39" pos:column="14">!<pos:position pos:line="39" pos:column="15"/></operator><call><name pos:line="39" pos:column="15">ascii_strcasecmp<pos:position pos:line="39" pos:column="31"/></name> <argument_list pos:line="39" pos:column="32">(<argument><expr><literal type="string" pos:line="39" pos:column="33">"delivery-status"<pos:position pos:line="39" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="52">b<pos:position pos:line="39" pos:column="53"/></name><operator pos:line="39" pos:column="53">-&gt;<pos:position pos:line="39" pos:column="58"/></operator><name pos:line="39" pos:column="55">subtype<pos:position pos:line="39" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="64"/></condition><then pos:line="39" pos:column="64">
      <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="7">plaintext<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">=<pos:position pos:line="40" pos:column="18"/></operator> <literal type="number" pos:line="40" pos:column="19">1<pos:position pos:line="40" pos:column="20"/></literal></expr>;<pos:position pos:line="40" pos:column="21"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="41" pos:column="5">else <if pos:line="41" pos:column="10">if <condition pos:line="41" pos:column="13">(<expr><operator pos:line="41" pos:column="14">!<pos:position pos:line="41" pos:column="15"/></operator><call><name pos:line="41" pos:column="15">ascii_strcasecmp<pos:position pos:line="41" pos:column="31"/></name> <argument_list pos:line="41" pos:column="32">(<argument><expr><literal type="string" pos:line="41" pos:column="33">"external-body"<pos:position pos:line="41" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="50">b<pos:position pos:line="41" pos:column="51"/></name><operator pos:line="41" pos:column="51">-&gt;<pos:position pos:line="41" pos:column="56"/></operator><name pos:line="41" pos:column="53">subtype<pos:position pos:line="41" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="62"/></condition><then pos:line="41" pos:column="62">
      <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="7">handler<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">=<pos:position pos:line="42" pos:column="16"/></operator> <name pos:line="42" pos:column="17">external_body_handler<pos:position pos:line="42" pos:column="38"/></name></expr>;<pos:position pos:line="42" pos:column="39"/></expr_stmt></block></then></if></elseif></if>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="44" pos:column="3">else <if pos:line="44" pos:column="8">if <condition pos:line="44" pos:column="11">(<expr><name><name pos:line="44" pos:column="12">b<pos:position pos:line="44" pos:column="13"/></name><operator pos:line="44" pos:column="13">-&gt;<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="15">type<pos:position pos:line="44" pos:column="19"/></name></name> <operator pos:line="44" pos:column="20">==<pos:position pos:line="44" pos:column="22"/></operator> <name pos:line="44" pos:column="23">TYPEMULTIPART<pos:position pos:line="44" pos:column="36"/></name></expr>)<pos:position pos:line="44" pos:column="37"/></condition><then pos:line="44" pos:column="37">
  <block pos:line="45" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="46" pos:column="5">char<pos:position pos:line="46" pos:column="9"/></name> <modifier pos:line="46" pos:column="10">*<pos:position pos:line="46" pos:column="11"/></modifier></type><name pos:line="46" pos:column="11">p<pos:position pos:line="46" pos:column="12"/></name></decl>;<pos:position pos:line="46" pos:column="13"/></decl_stmt>

    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><call><name pos:line="48" pos:column="9">ascii_strcasecmp<pos:position pos:line="48" pos:column="25"/></name> <argument_list pos:line="48" pos:column="26">(<argument><expr><literal type="string" pos:line="48" pos:column="27">"alternative"<pos:position pos:line="48" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="42">b<pos:position pos:line="48" pos:column="43"/></name><operator pos:line="48" pos:column="43">-&gt;<pos:position pos:line="48" pos:column="48"/></operator><name pos:line="48" pos:column="45">subtype<pos:position pos:line="48" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="53"/></argument_list></call> <operator pos:line="48" pos:column="54">==<pos:position pos:line="48" pos:column="56"/></operator> <literal type="number" pos:line="48" pos:column="57">0<pos:position pos:line="48" pos:column="58"/></literal></expr>)<pos:position pos:line="48" pos:column="59"/></condition><then pos:line="48" pos:column="59">
      <block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="7">handler<pos:position pos:line="49" pos:column="14"/></name> <operator pos:line="49" pos:column="15">=<pos:position pos:line="49" pos:column="16"/></operator> <name pos:line="49" pos:column="17">alternative_handler<pos:position pos:line="49" pos:column="36"/></name></expr>;<pos:position pos:line="49" pos:column="37"/></expr_stmt></block></then>
    <elseif pos:line="50" pos:column="5">else <if pos:line="50" pos:column="10">if <condition pos:line="50" pos:column="13">(<expr><name pos:line="50" pos:column="14">WithCrypto<pos:position pos:line="50" pos:column="24"/></name> <operator pos:line="50" pos:column="25">&amp;&amp;<pos:position pos:line="50" pos:column="35"/></operator> <call><name pos:line="50" pos:column="28">ascii_strcasecmp<pos:position pos:line="50" pos:column="44"/></name> <argument_list pos:line="50" pos:column="45">(<argument><expr><literal type="string" pos:line="50" pos:column="46">"signed"<pos:position pos:line="50" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="56">b<pos:position pos:line="50" pos:column="57"/></name><operator pos:line="50" pos:column="57">-&gt;<pos:position pos:line="50" pos:column="62"/></operator><name pos:line="50" pos:column="59">subtype<pos:position pos:line="50" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="67"/></argument_list></call> <operator pos:line="50" pos:column="68">==<pos:position pos:line="50" pos:column="70"/></operator> <literal type="number" pos:line="50" pos:column="71">0<pos:position pos:line="50" pos:column="72"/></literal></expr>)<pos:position pos:line="50" pos:column="73"/></condition><then pos:line="50" pos:column="73">
    <block pos:line="51" pos:column="5">{
      <expr_stmt><expr><name pos:line="52" pos:column="7">p<pos:position pos:line="52" pos:column="8"/></name> <operator pos:line="52" pos:column="9">=<pos:position pos:line="52" pos:column="10"/></operator> <call><name pos:line="52" pos:column="11">mutt_get_parameter<pos:position pos:line="52" pos:column="29"/></name> <argument_list pos:line="52" pos:column="30">(<argument><expr><literal type="string" pos:line="52" pos:column="31">"protocol"<pos:position pos:line="52" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="43">b<pos:position pos:line="52" pos:column="44"/></name><operator pos:line="52" pos:column="44">-&gt;<pos:position pos:line="52" pos:column="49"/></operator><name pos:line="52" pos:column="46">parameter<pos:position pos:line="52" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="57"/></expr_stmt>

      <if pos:line="54" pos:column="7">if <condition pos:line="54" pos:column="10">(<expr><operator pos:line="54" pos:column="11">!<pos:position pos:line="54" pos:column="12"/></operator><name pos:line="54" pos:column="12">p<pos:position pos:line="54" pos:column="13"/></name></expr>)<pos:position pos:line="54" pos:column="14"/></condition><then pos:line="54" pos:column="14">
        <block type="pseudo"><decl_stmt><decl><type><name pos:line="55" pos:column="9">mutt_error<pos:position pos:line="55" pos:column="19"/></name></type> <name pos:line="55" pos:column="20">_<pos:position pos:line="55" pos:column="21"/></name><argument_list pos:line="55" pos:column="21">(<argument><expr><literal type="string" pos:line="55" pos:column="22">"Error: multipart/signed has no protocol."<pos:position pos:line="55" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="65"/></argument_list></decl>;<pos:position pos:line="55" pos:column="66"/></decl_stmt></block></then>
      <elseif pos:line="56" pos:column="7">else <if pos:line="56" pos:column="12">if <condition pos:line="56" pos:column="15">(<expr><name><name pos:line="56" pos:column="16">s<pos:position pos:line="56" pos:column="17"/></name><operator pos:line="56" pos:column="17">-&gt;<pos:position pos:line="56" pos:column="22"/></operator><name pos:line="56" pos:column="19">flags<pos:position pos:line="56" pos:column="24"/></name></name> <operator pos:line="56" pos:column="25">&amp;<pos:position pos:line="56" pos:column="30"/></operator> <name pos:line="56" pos:column="27">MUTT_VERIFY<pos:position pos:line="56" pos:column="38"/></name></expr>)<pos:position pos:line="56" pos:column="39"/></condition><then pos:line="56" pos:column="39">
	<block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="9">handler<pos:position pos:line="57" pos:column="16"/></name> <operator pos:line="57" pos:column="17">=<pos:position pos:line="57" pos:column="18"/></operator> <name pos:line="57" pos:column="19">mutt_signed_handler<pos:position pos:line="57" pos:column="38"/></name></expr>;<pos:position pos:line="57" pos:column="39"/></expr_stmt></block></then></if></elseif></if>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="59" pos:column="5">else <if pos:line="59" pos:column="10">if <condition pos:line="59" pos:column="13">(<expr><call><name pos:line="59" pos:column="14">mutt_is_valid_multipart_pgp_encrypted<pos:position pos:line="59" pos:column="51"/></name> <argument_list pos:line="59" pos:column="52">(<argument><expr><name pos:line="59" pos:column="53">b<pos:position pos:line="59" pos:column="54"/></name></expr></argument>)<pos:position pos:line="59" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="56"/></condition><then pos:line="59" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><name pos:line="60" pos:column="7">handler<pos:position pos:line="60" pos:column="14"/></name> <operator pos:line="60" pos:column="15">=<pos:position pos:line="60" pos:column="16"/></operator> <name pos:line="60" pos:column="17">valid_pgp_encrypted_handler<pos:position pos:line="60" pos:column="44"/></name></expr>;<pos:position pos:line="60" pos:column="45"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="61" pos:column="5">else <if pos:line="61" pos:column="10">if <condition pos:line="61" pos:column="13">(<expr><call><name pos:line="61" pos:column="14">mutt_is_malformed_multipart_pgp_encrypted<pos:position pos:line="61" pos:column="55"/></name> <argument_list pos:line="61" pos:column="56">(<argument><expr><name pos:line="61" pos:column="57">b<pos:position pos:line="61" pos:column="58"/></name></expr></argument>)<pos:position pos:line="61" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="60"/></condition><then pos:line="61" pos:column="60">
      <block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="7">handler<pos:position pos:line="62" pos:column="14"/></name> <operator pos:line="62" pos:column="15">=<pos:position pos:line="62" pos:column="16"/></operator> <name pos:line="62" pos:column="17">malformed_pgp_encrypted_handler<pos:position pos:line="62" pos:column="48"/></name></expr>;<pos:position pos:line="62" pos:column="49"/></expr_stmt></block></then></if></elseif></if>

    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><operator pos:line="64" pos:column="9">!<pos:position pos:line="64" pos:column="10"/></operator><name pos:line="64" pos:column="10">handler<pos:position pos:line="64" pos:column="17"/></name></expr>)<pos:position pos:line="64" pos:column="18"/></condition><then pos:line="64" pos:column="18">
      <block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="7">handler<pos:position pos:line="65" pos:column="14"/></name> <operator pos:line="65" pos:column="15">=<pos:position pos:line="65" pos:column="16"/></operator> <name pos:line="65" pos:column="17">multipart_handler<pos:position pos:line="65" pos:column="34"/></name></expr>;<pos:position pos:line="65" pos:column="35"/></expr_stmt></block></then></if>

    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><name><name pos:line="67" pos:column="9">b<pos:position pos:line="67" pos:column="10"/></name><operator pos:line="67" pos:column="10">-&gt;<pos:position pos:line="67" pos:column="15"/></operator><name pos:line="67" pos:column="12">encoding<pos:position pos:line="67" pos:column="20"/></name></name> <operator pos:line="67" pos:column="21">!=<pos:position pos:line="67" pos:column="23"/></operator> <name pos:line="67" pos:column="24">ENC7BIT<pos:position pos:line="67" pos:column="31"/></name> <operator pos:line="67" pos:column="32">&amp;&amp;<pos:position pos:line="67" pos:column="42"/></operator> <name><name pos:line="67" pos:column="35">b<pos:position pos:line="67" pos:column="36"/></name><operator pos:line="67" pos:column="36">-&gt;<pos:position pos:line="67" pos:column="41"/></operator><name pos:line="67" pos:column="38">encoding<pos:position pos:line="67" pos:column="46"/></name></name> <operator pos:line="67" pos:column="47">!=<pos:position pos:line="67" pos:column="49"/></operator> <name pos:line="67" pos:column="50">ENC8BIT<pos:position pos:line="67" pos:column="57"/></name>
        <operator pos:line="68" pos:column="9">&amp;&amp;<pos:position pos:line="68" pos:column="19"/></operator> <name><name pos:line="68" pos:column="12">b<pos:position pos:line="68" pos:column="13"/></name><operator pos:line="68" pos:column="13">-&gt;<pos:position pos:line="68" pos:column="18"/></operator><name pos:line="68" pos:column="15">encoding<pos:position pos:line="68" pos:column="23"/></name></name> <operator pos:line="68" pos:column="24">!=<pos:position pos:line="68" pos:column="26"/></operator> <name pos:line="68" pos:column="27">ENCBINARY<pos:position pos:line="68" pos:column="36"/></name></expr>)<pos:position pos:line="68" pos:column="37"/></condition><then pos:line="68" pos:column="37">
    <block pos:line="69" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="70" pos:column="7">dprint<pos:position pos:line="70" pos:column="13"/></name> <argument_list pos:line="70" pos:column="14">(<argument><expr><literal type="number" pos:line="70" pos:column="15">1<pos:position pos:line="70" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="70" pos:column="18">(<pos:position pos:line="70" pos:column="19"/></operator><name pos:line="70" pos:column="19">debugfile<pos:position pos:line="70" pos:column="28"/></name><operator pos:line="70" pos:column="28">,<pos:position pos:line="70" pos:column="29"/></operator> <literal type="string" pos:line="70" pos:column="30">"Bad encoding type %d for multipart entity, "<pos:position pos:line="70" pos:column="75"/></literal>
                  <literal type="string" pos:line="71" pos:column="19">"assuming 7 bit\n"<pos:position pos:line="71" pos:column="37"/></literal><operator pos:line="71" pos:column="37">,<pos:position pos:line="71" pos:column="38"/></operator> <name><name pos:line="71" pos:column="39">b<pos:position pos:line="71" pos:column="40"/></name><operator pos:line="71" pos:column="40">-&gt;<pos:position pos:line="71" pos:column="45"/></operator><name pos:line="71" pos:column="42">encoding<pos:position pos:line="71" pos:column="50"/></name></name><operator pos:line="71" pos:column="50">)<pos:position pos:line="71" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="71" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="72" pos:column="7">b<pos:position pos:line="72" pos:column="8"/></name><operator pos:line="72" pos:column="8">-&gt;<pos:position pos:line="72" pos:column="13"/></operator><name pos:line="72" pos:column="10">encoding<pos:position pos:line="72" pos:column="18"/></name></name> <operator pos:line="72" pos:column="19">=<pos:position pos:line="72" pos:column="20"/></operator> <name pos:line="72" pos:column="21">ENC7BIT<pos:position pos:line="72" pos:column="28"/></name></expr>;<pos:position pos:line="72" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>
  }<pos:position pos:line="74" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="75" pos:column="3">else <if pos:line="75" pos:column="8">if <condition pos:line="75" pos:column="11">(<expr><name pos:line="75" pos:column="12">WithCrypto<pos:position pos:line="75" pos:column="22"/></name> <operator pos:line="75" pos:column="23">&amp;&amp;<pos:position pos:line="75" pos:column="33"/></operator> <name><name pos:line="75" pos:column="26">b<pos:position pos:line="75" pos:column="27"/></name><operator pos:line="75" pos:column="27">-&gt;<pos:position pos:line="75" pos:column="32"/></operator><name pos:line="75" pos:column="29">type<pos:position pos:line="75" pos:column="33"/></name></name> <operator pos:line="75" pos:column="34">==<pos:position pos:line="75" pos:column="36"/></operator> <name pos:line="75" pos:column="37">TYPEAPPLICATION<pos:position pos:line="75" pos:column="52"/></name></expr>)<pos:position pos:line="75" pos:column="53"/></condition><then pos:line="75" pos:column="53">
  <block pos:line="76" pos:column="3">{
    <if pos:line="77" pos:column="5">if <condition pos:line="77" pos:column="8">(<expr><call><name pos:line="77" pos:column="9">option<pos:position pos:line="77" pos:column="15"/></name> <argument_list pos:line="77" pos:column="16">(<argument><expr><name pos:line="77" pos:column="17">OPTDONTHANDLEPGPKEYS<pos:position pos:line="77" pos:column="37"/></name></expr></argument>)<pos:position pos:line="77" pos:column="38"/></argument_list></call>
        <operator pos:line="78" pos:column="9">&amp;&amp;<pos:position pos:line="78" pos:column="19"/></operator> <operator pos:line="78" pos:column="12">!<pos:position pos:line="78" pos:column="13"/></operator><call><name pos:line="78" pos:column="13">ascii_strcasecmp<pos:position pos:line="78" pos:column="29"/></name><argument_list pos:line="78" pos:column="29">(<argument><expr><literal type="string" pos:line="78" pos:column="30">"pgp-keys"<pos:position pos:line="78" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="42">b<pos:position pos:line="78" pos:column="43"/></name><operator pos:line="78" pos:column="43">-&gt;<pos:position pos:line="78" pos:column="48"/></operator><name pos:line="78" pos:column="45">subtype<pos:position pos:line="78" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="78" pos:column="54"/></condition><then pos:line="78" pos:column="54">
    <block pos:line="79" pos:column="5">{
      <comment type="block" pos:line="80" pos:column="7">/* pass raw part through for key extraction */</comment>
      <expr_stmt><expr><name pos:line="81" pos:column="7">plaintext<pos:position pos:line="81" pos:column="16"/></name> <operator pos:line="81" pos:column="17">=<pos:position pos:line="81" pos:column="18"/></operator> <literal type="number" pos:line="81" pos:column="19">1<pos:position pos:line="81" pos:column="20"/></literal></expr>;<pos:position pos:line="81" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="82" pos:column="6"/></block></then>
    <elseif pos:line="83" pos:column="5">else <if pos:line="83" pos:column="10">if <condition pos:line="83" pos:column="13">(<expr><operator pos:line="83" pos:column="14">(<pos:position pos:line="83" pos:column="15"/></operator><name pos:line="83" pos:column="15">WithCrypto<pos:position pos:line="83" pos:column="25"/></name> <operator pos:line="83" pos:column="26">&amp;<pos:position pos:line="83" pos:column="31"/></operator> <name pos:line="83" pos:column="28">APPLICATION_PGP<pos:position pos:line="83" pos:column="43"/></name><operator pos:line="83" pos:column="43">)<pos:position pos:line="83" pos:column="44"/></operator> <operator pos:line="83" pos:column="45">&amp;&amp;<pos:position pos:line="83" pos:column="55"/></operator> <call><name pos:line="83" pos:column="48">mutt_is_application_pgp<pos:position pos:line="83" pos:column="71"/></name> <argument_list pos:line="83" pos:column="72">(<argument><expr><name pos:line="83" pos:column="73">b<pos:position pos:line="83" pos:column="74"/></name></expr></argument>)<pos:position pos:line="83" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="76"/></condition><then pos:line="83" pos:column="76">
      <block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="7">handler<pos:position pos:line="84" pos:column="14"/></name> <operator pos:line="84" pos:column="15">=<pos:position pos:line="84" pos:column="16"/></operator> <name pos:line="84" pos:column="17">crypt_pgp_application_pgp_handler<pos:position pos:line="84" pos:column="50"/></name></expr>;<pos:position pos:line="84" pos:column="51"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="85" pos:column="5">else <if pos:line="85" pos:column="10">if <condition pos:line="85" pos:column="13">(<expr><operator pos:line="85" pos:column="14">(<pos:position pos:line="85" pos:column="15"/></operator><name pos:line="85" pos:column="15">WithCrypto<pos:position pos:line="85" pos:column="25"/></name> <operator pos:line="85" pos:column="26">&amp;<pos:position pos:line="85" pos:column="31"/></operator> <name pos:line="85" pos:column="28">APPLICATION_SMIME<pos:position pos:line="85" pos:column="45"/></name><operator pos:line="85" pos:column="45">)<pos:position pos:line="85" pos:column="46"/></operator> <operator pos:line="85" pos:column="47">&amp;&amp;<pos:position pos:line="85" pos:column="57"/></operator> <call><name pos:line="85" pos:column="50">mutt_is_application_smime<pos:position pos:line="85" pos:column="75"/></name><argument_list pos:line="85" pos:column="75">(<argument><expr><name pos:line="85" pos:column="76">b<pos:position pos:line="85" pos:column="77"/></name></expr></argument>)<pos:position pos:line="85" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="79"/></condition><then pos:line="85" pos:column="79">
      <block type="pseudo"><expr_stmt><expr><name pos:line="86" pos:column="7">handler<pos:position pos:line="86" pos:column="14"/></name> <operator pos:line="86" pos:column="15">=<pos:position pos:line="86" pos:column="16"/></operator> <name pos:line="86" pos:column="17">crypt_smime_application_smime_handler<pos:position pos:line="86" pos:column="54"/></name></expr>;<pos:position pos:line="86" pos:column="55"/></expr_stmt></block></then></if></elseif></if>
  }<pos:position pos:line="87" pos:column="4"/></block></then></if></elseif></if>

  <comment type="block" pos:line="89" pos:column="3">/* only respect disposition == attachment if we're not
     displaying from the attachment menu (i.e. pager) */</comment>
  <if pos:line="91" pos:column="3">if <condition pos:line="91" pos:column="6">(<expr><operator pos:line="91" pos:column="7">(<pos:position pos:line="91" pos:column="8"/></operator><operator pos:line="91" pos:column="8">!<pos:position pos:line="91" pos:column="9"/></operator><call><name pos:line="91" pos:column="9">option<pos:position pos:line="91" pos:column="15"/></name> <argument_list pos:line="91" pos:column="16">(<argument><expr><name pos:line="91" pos:column="17">OPTHONORDISP<pos:position pos:line="91" pos:column="29"/></name></expr></argument>)<pos:position pos:line="91" pos:column="30"/></argument_list></call> <operator pos:line="91" pos:column="31">||<pos:position pos:line="91" pos:column="33"/></operator> <operator pos:line="91" pos:column="34">(<pos:position pos:line="91" pos:column="35"/></operator><name><name pos:line="91" pos:column="35">b<pos:position pos:line="91" pos:column="36"/></name><operator pos:line="91" pos:column="36">-&gt;<pos:position pos:line="91" pos:column="41"/></operator><name pos:line="91" pos:column="38">disposition<pos:position pos:line="91" pos:column="49"/></name></name> <operator pos:line="91" pos:column="50">!=<pos:position pos:line="91" pos:column="52"/></operator> <name pos:line="91" pos:column="53">DISPATTACH<pos:position pos:line="91" pos:column="63"/></name> <operator pos:line="91" pos:column="64">||<pos:position pos:line="91" pos:column="66"/></operator>
				  <call><name pos:line="92" pos:column="35">option<pos:position pos:line="92" pos:column="41"/></name><argument_list pos:line="92" pos:column="41">(<argument><expr><name pos:line="92" pos:column="42">OPTVIEWATTACH<pos:position pos:line="92" pos:column="55"/></name></expr></argument>)<pos:position pos:line="92" pos:column="56"/></argument_list></call><operator pos:line="92" pos:column="56">)<pos:position pos:line="92" pos:column="57"/></operator><operator pos:line="92" pos:column="57">)<pos:position pos:line="92" pos:column="58"/></operator> <operator pos:line="92" pos:column="59">&amp;&amp;<pos:position pos:line="92" pos:column="69"/></operator>
       <operator pos:line="93" pos:column="8">(<pos:position pos:line="93" pos:column="9"/></operator><name pos:line="93" pos:column="9">plaintext<pos:position pos:line="93" pos:column="18"/></name> <operator pos:line="93" pos:column="19">||<pos:position pos:line="93" pos:column="21"/></operator> <name pos:line="93" pos:column="22">handler<pos:position pos:line="93" pos:column="29"/></name><operator pos:line="93" pos:column="29">)<pos:position pos:line="93" pos:column="30"/></operator></expr>)<pos:position pos:line="93" pos:column="31"/></condition><then pos:line="93" pos:column="31">
  <block pos:line="94" pos:column="3">{
    <expr_stmt><expr><name pos:line="95" pos:column="5">rc<pos:position pos:line="95" pos:column="7"/></name> <operator pos:line="95" pos:column="8">=<pos:position pos:line="95" pos:column="9"/></operator> <call><name pos:line="95" pos:column="10">run_decode_and_handler<pos:position pos:line="95" pos:column="32"/></name> <argument_list pos:line="95" pos:column="33">(<argument><expr><name pos:line="95" pos:column="34">b<pos:position pos:line="95" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="37">s<pos:position pos:line="95" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="40">handler<pos:position pos:line="95" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="49">plaintext<pos:position pos:line="95" pos:column="58"/></name></expr></argument>)<pos:position pos:line="95" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="60"/></expr_stmt>
  }<pos:position pos:line="96" pos:column="4"/></block></then>
  <comment type="block" pos:line="97" pos:column="3">/* print hint to use attachment menu for disposition == attachment
     if we're not already being called from there */</comment>
  <elseif pos:line="99" pos:column="3">else <if pos:line="99" pos:column="8">if <condition pos:line="99" pos:column="11">(<expr><operator pos:line="99" pos:column="12">(<pos:position pos:line="99" pos:column="13"/></operator><name><name pos:line="99" pos:column="13">s<pos:position pos:line="99" pos:column="14"/></name><operator pos:line="99" pos:column="14">-&gt;<pos:position pos:line="99" pos:column="19"/></operator><name pos:line="99" pos:column="16">flags<pos:position pos:line="99" pos:column="21"/></name></name> <operator pos:line="99" pos:column="22">&amp;<pos:position pos:line="99" pos:column="27"/></operator> <name pos:line="99" pos:column="24">MUTT_DISPLAY<pos:position pos:line="99" pos:column="36"/></name><operator pos:line="99" pos:column="36">)<pos:position pos:line="99" pos:column="37"/></operator> <operator pos:line="99" pos:column="38">||<pos:position pos:line="99" pos:column="40"/></operator> <operator pos:line="99" pos:column="41">(<pos:position pos:line="99" pos:column="42"/></operator><name><name pos:line="99" pos:column="42">b<pos:position pos:line="99" pos:column="43"/></name><operator pos:line="99" pos:column="43">-&gt;<pos:position pos:line="99" pos:column="48"/></operator><name pos:line="99" pos:column="45">disposition<pos:position pos:line="99" pos:column="56"/></name></name> <operator pos:line="99" pos:column="57">==<pos:position pos:line="99" pos:column="59"/></operator> <name pos:line="99" pos:column="60">DISPATTACH<pos:position pos:line="99" pos:column="70"/></name> <operator pos:line="99" pos:column="71">&amp;&amp;<pos:position pos:line="99" pos:column="81"/></operator>
				      <operator pos:line="100" pos:column="39">!<pos:position pos:line="100" pos:column="40"/></operator><call><name pos:line="100" pos:column="40">option<pos:position pos:line="100" pos:column="46"/></name> <argument_list pos:line="100" pos:column="47">(<argument><expr><name pos:line="100" pos:column="48">OPTVIEWATTACH<pos:position pos:line="100" pos:column="61"/></name></expr></argument>)<pos:position pos:line="100" pos:column="62"/></argument_list></call> <operator pos:line="100" pos:column="63">&amp;&amp;<pos:position pos:line="100" pos:column="73"/></operator>
				      <call><name pos:line="101" pos:column="39">option<pos:position pos:line="101" pos:column="45"/></name> <argument_list pos:line="101" pos:column="46">(<argument><expr><name pos:line="101" pos:column="47">OPTHONORDISP<pos:position pos:line="101" pos:column="59"/></name></expr></argument>)<pos:position pos:line="101" pos:column="60"/></argument_list></call> <operator pos:line="101" pos:column="61">&amp;&amp;<pos:position pos:line="101" pos:column="71"/></operator>
				      <operator pos:line="102" pos:column="39">(<pos:position pos:line="102" pos:column="40"/></operator><name pos:line="102" pos:column="40">plaintext<pos:position pos:line="102" pos:column="49"/></name> <operator pos:line="102" pos:column="50">||<pos:position pos:line="102" pos:column="52"/></operator> <name pos:line="102" pos:column="53">handler<pos:position pos:line="102" pos:column="60"/></name><operator pos:line="102" pos:column="60">)<pos:position pos:line="102" pos:column="61"/></operator><operator pos:line="102" pos:column="61">)<pos:position pos:line="102" pos:column="62"/></operator></expr>)<pos:position pos:line="102" pos:column="63"/></condition><then pos:line="102" pos:column="63">
  <block pos:line="103" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="104" pos:column="5">state_mark_attach<pos:position pos:line="104" pos:column="22"/></name> <argument_list pos:line="104" pos:column="23">(<argument><expr><name pos:line="104" pos:column="24">s<pos:position pos:line="104" pos:column="25"/></name></expr></argument>)<pos:position pos:line="104" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="27"/></expr_stmt>
    <if pos:line="105" pos:column="5">if <condition pos:line="105" pos:column="8">(<expr><call><name pos:line="105" pos:column="9">option<pos:position pos:line="105" pos:column="15"/></name> <argument_list pos:line="105" pos:column="16">(<argument><expr><name pos:line="105" pos:column="17">OPTHONORDISP<pos:position pos:line="105" pos:column="29"/></name></expr></argument>)<pos:position pos:line="105" pos:column="30"/></argument_list></call> <operator pos:line="105" pos:column="31">&amp;&amp;<pos:position pos:line="105" pos:column="41"/></operator> <name><name pos:line="105" pos:column="34">b<pos:position pos:line="105" pos:column="35"/></name><operator pos:line="105" pos:column="35">-&gt;<pos:position pos:line="105" pos:column="40"/></operator><name pos:line="105" pos:column="37">disposition<pos:position pos:line="105" pos:column="48"/></name></name> <operator pos:line="105" pos:column="49">==<pos:position pos:line="105" pos:column="51"/></operator> <name pos:line="105" pos:column="52">DISPATTACH<pos:position pos:line="105" pos:column="62"/></name></expr>)<pos:position pos:line="105" pos:column="63"/></condition><then pos:line="105" pos:column="63">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="106" pos:column="7">fputs<pos:position pos:line="106" pos:column="12"/></name> <argument_list pos:line="106" pos:column="13">(<argument><expr><call><name pos:line="106" pos:column="14">_<pos:position pos:line="106" pos:column="15"/></name><argument_list pos:line="106" pos:column="15">(<argument><expr><literal type="string" pos:line="106" pos:column="16">"[-- This is an attachment "<pos:position pos:line="106" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="47">s<pos:position pos:line="106" pos:column="48"/></name><operator pos:line="106" pos:column="48">-&gt;<pos:position pos:line="106" pos:column="53"/></operator><name pos:line="106" pos:column="50">fpout<pos:position pos:line="106" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="57"/></expr_stmt></block></then>
    <else pos:line="107" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="108" pos:column="7">state_printf<pos:position pos:line="108" pos:column="19"/></name> <argument_list pos:line="108" pos:column="20">(<argument><expr><name pos:line="108" pos:column="21">s<pos:position pos:line="108" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="108" pos:column="24">_<pos:position pos:line="108" pos:column="25"/></name><argument_list pos:line="108" pos:column="25">(<argument><expr><literal type="string" pos:line="108" pos:column="26">"[-- %s/%s is unsupported "<pos:position pos:line="108" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="108" pos:column="56">TYPE<pos:position pos:line="108" pos:column="60"/></name> <argument_list pos:line="108" pos:column="61">(<argument><expr><name pos:line="108" pos:column="62">b<pos:position pos:line="108" pos:column="63"/></name></expr></argument>)<pos:position pos:line="108" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="66">b<pos:position pos:line="108" pos:column="67"/></name><operator pos:line="108" pos:column="67">-&gt;<pos:position pos:line="108" pos:column="72"/></operator><name pos:line="108" pos:column="69">subtype<pos:position pos:line="108" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="78"/></expr_stmt></block></else></if>
    <if pos:line="109" pos:column="5">if <condition pos:line="109" pos:column="8">(<expr><operator pos:line="109" pos:column="9">!<pos:position pos:line="109" pos:column="10"/></operator><call><name pos:line="109" pos:column="10">option<pos:position pos:line="109" pos:column="16"/></name> <argument_list pos:line="109" pos:column="17">(<argument><expr><name pos:line="109" pos:column="18">OPTVIEWATTACH<pos:position pos:line="109" pos:column="31"/></name></expr></argument>)<pos:position pos:line="109" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="109" pos:column="33"/></condition><then pos:line="109" pos:column="33">
    <block pos:line="110" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="111" pos:column="7">char<pos:position pos:line="111" pos:column="11"/></name></type> <name><name pos:line="111" pos:column="12">keystroke<pos:position pos:line="111" pos:column="21"/></name><index pos:line="111" pos:column="21">[<expr><name pos:line="111" pos:column="22">SHORT_STRING<pos:position pos:line="111" pos:column="34"/></name></expr>]<pos:position pos:line="111" pos:column="35"/></index></name></decl>;<pos:position pos:line="111" pos:column="36"/></decl_stmt>

      <if pos:line="113" pos:column="7">if <condition pos:line="113" pos:column="10">(<expr><call><name pos:line="113" pos:column="11">km_expand_key<pos:position pos:line="113" pos:column="24"/></name> <argument_list pos:line="113" pos:column="25">(<argument><expr><name pos:line="113" pos:column="26">keystroke<pos:position pos:line="113" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="113" pos:column="37">sizeof<argument_list pos:line="113" pos:column="43">(<argument><expr><name pos:line="113" pos:column="44">keystroke<pos:position pos:line="113" pos:column="53"/></name></expr></argument>)<pos:position pos:line="113" pos:column="54"/></argument_list></sizeof></expr></argument>,
			<argument><expr><call><name pos:line="114" pos:column="25">km_find_func<pos:position pos:line="114" pos:column="37"/></name> <argument_list pos:line="114" pos:column="38">(<argument><expr><name pos:line="114" pos:column="39">MENU_PAGER<pos:position pos:line="114" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="51">OP_VIEW_ATTACHMENTS<pos:position pos:line="114" pos:column="70"/></name></expr></argument>)<pos:position pos:line="114" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="114" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="114" pos:column="73"/></condition><then pos:line="114" pos:column="73">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="115" pos:column="9">fprintf<pos:position pos:line="115" pos:column="16"/></name> <argument_list pos:line="115" pos:column="17">(<argument><expr><name><name pos:line="115" pos:column="18">s<pos:position pos:line="115" pos:column="19"/></name><operator pos:line="115" pos:column="19">-&gt;<pos:position pos:line="115" pos:column="24"/></operator><name pos:line="115" pos:column="21">fpout<pos:position pos:line="115" pos:column="26"/></name></name></expr></argument>, <argument><expr><call><name pos:line="115" pos:column="28">_<pos:position pos:line="115" pos:column="29"/></name><argument_list pos:line="115" pos:column="29">(<argument><expr><literal type="string" pos:line="115" pos:column="30">"(use '%s' to view this part)"<pos:position pos:line="115" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="115" pos:column="63">keystroke<pos:position pos:line="115" pos:column="72"/></name></expr></argument>)<pos:position pos:line="115" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="74"/></expr_stmt></block></then>
      <else pos:line="116" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="117" pos:column="9">fputs<pos:position pos:line="117" pos:column="14"/></name> <argument_list pos:line="117" pos:column="15">(<argument><expr><call><name pos:line="117" pos:column="16">_<pos:position pos:line="117" pos:column="17"/></name><argument_list pos:line="117" pos:column="17">(<argument><expr><literal type="string" pos:line="117" pos:column="18">"(need 'view-attachments' bound to key!)"<pos:position pos:line="117" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="117" pos:column="62">s<pos:position pos:line="117" pos:column="63"/></name><operator pos:line="117" pos:column="63">-&gt;<pos:position pos:line="117" pos:column="68"/></operator><name pos:line="117" pos:column="65">fpout<pos:position pos:line="117" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="72"/></expr_stmt></block></else></if>
    }<pos:position pos:line="118" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="119" pos:column="5">fputs<pos:position pos:line="119" pos:column="10"/></name> <argument_list pos:line="119" pos:column="11">(<argument><expr><literal type="string" pos:line="119" pos:column="12">" --]\n"<pos:position pos:line="119" pos:column="20"/></literal></expr></argument>, <argument><expr><name><name pos:line="119" pos:column="22">s<pos:position pos:line="119" pos:column="23"/></name><operator pos:line="119" pos:column="23">-&gt;<pos:position pos:line="119" pos:column="28"/></operator><name pos:line="119" pos:column="25">fpout<pos:position pos:line="119" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="119" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="120" pos:column="4"/></block></then></if></elseif></if>

  <expr_stmt><expr><name><name pos:line="122" pos:column="3">s<pos:position pos:line="122" pos:column="4"/></name><operator pos:line="122" pos:column="4">-&gt;<pos:position pos:line="122" pos:column="9"/></operator><name pos:line="122" pos:column="6">flags<pos:position pos:line="122" pos:column="11"/></name></name> <operator pos:line="122" pos:column="12">=<pos:position pos:line="122" pos:column="13"/></operator> <name pos:line="122" pos:column="14">oflags<pos:position pos:line="122" pos:column="20"/></name> <operator pos:line="122" pos:column="21">|<pos:position pos:line="122" pos:column="22"/></operator> <operator pos:line="122" pos:column="23">(<pos:position pos:line="122" pos:column="24"/></operator><name><name pos:line="122" pos:column="24">s<pos:position pos:line="122" pos:column="25"/></name><operator pos:line="122" pos:column="25">-&gt;<pos:position pos:line="122" pos:column="30"/></operator><name pos:line="122" pos:column="27">flags<pos:position pos:line="122" pos:column="32"/></name></name> <operator pos:line="122" pos:column="33">&amp;<pos:position pos:line="122" pos:column="38"/></operator> <name pos:line="122" pos:column="35">MUTT_FIRSTDONE<pos:position pos:line="122" pos:column="49"/></name><operator pos:line="122" pos:column="49">)<pos:position pos:line="122" pos:column="50"/></operator></expr>;<pos:position pos:line="122" pos:column="51"/></expr_stmt>
  <if pos:line="123" pos:column="3">if <condition pos:line="123" pos:column="6">(<expr><name pos:line="123" pos:column="7">rc<pos:position pos:line="123" pos:column="9"/></name></expr>)<pos:position pos:line="123" pos:column="10"/></condition><then pos:line="123" pos:column="10">
  <block pos:line="124" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="125" pos:column="5">dprint<pos:position pos:line="125" pos:column="11"/></name> <argument_list pos:line="125" pos:column="12">(<argument><expr><literal type="number" pos:line="125" pos:column="13">1<pos:position pos:line="125" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="125" pos:column="16">(<pos:position pos:line="125" pos:column="17"/></operator><name pos:line="125" pos:column="17">debugfile<pos:position pos:line="125" pos:column="26"/></name><operator pos:line="125" pos:column="26">,<pos:position pos:line="125" pos:column="27"/></operator> <literal type="string" pos:line="125" pos:column="28">"Bailing on attachment of type %s/%s.\n"<pos:position pos:line="125" pos:column="68"/></literal><operator pos:line="125" pos:column="68">,<pos:position pos:line="125" pos:column="69"/></operator> <call><name pos:line="125" pos:column="70">TYPE<pos:position pos:line="125" pos:column="74"/></name><argument_list pos:line="125" pos:column="74">(<argument><expr><name pos:line="125" pos:column="75">b<pos:position pos:line="125" pos:column="76"/></name></expr></argument>)<pos:position pos:line="125" pos:column="77"/></argument_list></call><operator pos:line="125" pos:column="77">,<pos:position pos:line="125" pos:column="78"/></operator> <call><name pos:line="125" pos:column="79">NONULL<pos:position pos:line="125" pos:column="85"/></name> <argument_list pos:line="125" pos:column="86">(<argument><expr><name><name pos:line="125" pos:column="87">b<pos:position pos:line="125" pos:column="88"/></name><operator pos:line="125" pos:column="88">-&gt;<pos:position pos:line="125" pos:column="93"/></operator><name pos:line="125" pos:column="90">subtype<pos:position pos:line="125" pos:column="97"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="98"/></argument_list></call><operator pos:line="125" pos:column="98">)<pos:position pos:line="125" pos:column="99"/></operator></expr></argument>)<pos:position pos:line="125" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="101"/></expr_stmt>
  }<pos:position pos:line="126" pos:column="4"/></block></then></if>

  <return pos:line="128" pos:column="3">return <expr><name pos:line="128" pos:column="10">rc<pos:position pos:line="128" pos:column="12"/></name></expr>;<pos:position pos:line="128" pos:column="13"/></return>
}<pos:position pos:line="129" pos:column="2"/></block></function></unit>

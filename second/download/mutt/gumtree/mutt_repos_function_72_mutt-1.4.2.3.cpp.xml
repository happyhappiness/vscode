<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_72_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">compare_from<pos:position pos:line="1" pos:column="17"/></name> <parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><specifier pos:line="1" pos:column="19">const<pos:position pos:line="1" pos:column="24"/></specifier> <name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">a<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">void<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">b<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">HEADER<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier><modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">ppa<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><operator pos:line="3" pos:column="18">(<pos:position pos:line="3" pos:column="19"/></operator><name pos:line="3" pos:column="19">HEADER<pos:position pos:line="3" pos:column="25"/></name> <operator pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></operator><operator pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></operator><operator pos:line="3" pos:column="28">)<pos:position pos:line="3" pos:column="29"/></operator> <name pos:line="3" pos:column="30">a<pos:position pos:line="3" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">HEADER<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier><modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">ppb<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><operator pos:line="4" pos:column="18">(<pos:position pos:line="4" pos:column="19"/></operator><name pos:line="4" pos:column="19">HEADER<pos:position pos:line="4" pos:column="25"/></name> <operator pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></operator><operator pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></operator><operator pos:line="4" pos:column="28">)<pos:position pos:line="4" pos:column="29"/></operator> <name pos:line="4" pos:column="30">b<pos:position pos:line="4" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">fa<pos:position pos:line="5" pos:column="11"/></name></decl>, <modifier pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="14">fb<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">result<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">fa<pos:position pos:line="8" pos:column="5"/></name> <operator pos:line="8" pos:column="6">=<pos:position pos:line="8" pos:column="7"/></operator> <call><name pos:line="8" pos:column="8">mutt_get_name<pos:position pos:line="8" pos:column="21"/></name> <argument_list pos:line="8" pos:column="22">(<argument><expr><name><operator pos:line="8" pos:column="23">(<pos:position pos:line="8" pos:column="24"/></operator><operator pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">ppa<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">)<pos:position pos:line="8" pos:column="29"/></operator><operator pos:line="8" pos:column="29">-&gt;<pos:position pos:line="8" pos:column="34"/></operator><name><name pos:line="8" pos:column="31">env<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">-&gt;<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="36">from<pos:position pos:line="8" pos:column="40"/></name></name></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name pos:line="9" pos:column="3">fb<pos:position pos:line="9" pos:column="5"/></name> <operator pos:line="9" pos:column="6">=<pos:position pos:line="9" pos:column="7"/></operator> <call><name pos:line="9" pos:column="8">mutt_get_name<pos:position pos:line="9" pos:column="21"/></name> <argument_list pos:line="9" pos:column="22">(<argument><expr><name><operator pos:line="9" pos:column="23">(<pos:position pos:line="9" pos:column="24"/></operator><operator pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="25">ppb<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">)<pos:position pos:line="9" pos:column="29"/></operator><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name><name pos:line="9" pos:column="31">env<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">-&gt;<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="36">from<pos:position pos:line="9" pos:column="40"/></name></name></name></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name pos:line="10" pos:column="3">result<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <call><name pos:line="10" pos:column="12">mutt_strcasecmp<pos:position pos:line="10" pos:column="27"/></name> <argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">fa<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="33">fb<pos:position pos:line="10" pos:column="35"/></name></expr></argument>)<pos:position pos:line="10" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">AUXSORT<pos:position pos:line="11" pos:column="10"/></name><argument_list pos:line="11" pos:column="10">(<argument><expr><name pos:line="11" pos:column="11">result<pos:position pos:line="11" pos:column="17"/></name></expr></argument>,<argument><expr><name pos:line="11" pos:column="18">a<pos:position pos:line="11" pos:column="19"/></name></expr></argument>,<argument><expr><name pos:line="11" pos:column="20">b<pos:position pos:line="11" pos:column="21"/></name></expr></argument>)<pos:position pos:line="11" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt>
  <return pos:line="12" pos:column="3">return <expr><operator pos:line="12" pos:column="10">(<pos:position pos:line="12" pos:column="11"/></operator><call><name pos:line="12" pos:column="11">SORTCODE<pos:position pos:line="12" pos:column="19"/></name> <argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">result<pos:position pos:line="12" pos:column="27"/></name></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></call><operator pos:line="12" pos:column="28">)<pos:position pos:line="12" pos:column="29"/></operator></expr>;<pos:position pos:line="12" pos:column="30"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

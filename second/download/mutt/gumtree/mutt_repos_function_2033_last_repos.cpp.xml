<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2033_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cmd_parse_lsub<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">IMAP_DATA<pos:position pos:line="1" pos:column="38"/></name><modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type> <name pos:line="1" pos:column="40">idata<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name><modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type> <name pos:line="1" pos:column="53">s<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buf<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">STRING<pos:position pos:line="3" pos:column="18"/></name></expr>]<pos:position pos:line="3" pos:column="19"/></index></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">errstr<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><name pos:line="4" pos:column="15">STRING<pos:position pos:line="4" pos:column="21"/></name></expr>]<pos:position pos:line="4" pos:column="22"/></index></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">BUFFER<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">err<pos:position pos:line="5" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="15">token<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">ciss_url_t<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">url<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">IMAP_LIST<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">list<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name><name pos:line="9" pos:column="7">idata<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">cmddata<pos:position pos:line="9" pos:column="21"/></name></name> <operator pos:line="9" pos:column="22">&amp;&amp;<pos:position pos:line="9" pos:column="32"/></operator> <name><name pos:line="9" pos:column="25">idata<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">-&gt;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="32">cmdtype<pos:position pos:line="9" pos:column="39"/></name></name> <operator pos:line="9" pos:column="40">==<pos:position pos:line="9" pos:column="42"/></operator> <name pos:line="9" pos:column="43">IMAP_CT_LIST<pos:position pos:line="9" pos:column="55"/></name></expr>)<pos:position pos:line="9" pos:column="56"/></condition><then pos:line="9" pos:column="56">
  <block pos:line="10" pos:column="3">{
    <comment type="block" pos:line="11" pos:column="5">/* caller will handle response itself */</comment>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">cmd_parse_list<pos:position pos:line="12" pos:column="19"/></name> <argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">idata<pos:position pos:line="12" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="28">s<pos:position pos:line="12" pos:column="29"/></name></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
    <return pos:line="13" pos:column="5">return;<pos:position pos:line="13" pos:column="12"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><operator pos:line="16" pos:column="7">!<pos:position pos:line="16" pos:column="8"/></operator><call><name pos:line="16" pos:column="8">option<pos:position pos:line="16" pos:column="14"/></name> <argument_list pos:line="16" pos:column="15">(<argument><expr><name pos:line="16" pos:column="16">OPTIMAPCHECKSUBSCRIBED<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="40"/></condition><then pos:line="16" pos:column="40">
    <block type="pseudo"><return pos:line="17" pos:column="5">return;<pos:position pos:line="17" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="19" pos:column="3">idata<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">-&gt;<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="10">cmdtype<pos:position pos:line="19" pos:column="17"/></name></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <name pos:line="19" pos:column="20">IMAP_CT_LIST<pos:position pos:line="19" pos:column="32"/></name></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">idata<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">-&gt;<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="10">cmddata<pos:position pos:line="20" pos:column="17"/></name></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <operator pos:line="20" pos:column="20">&amp;<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="21">list<pos:position pos:line="20" pos:column="25"/></name></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">cmd_parse_list<pos:position pos:line="21" pos:column="17"/></name> <argument_list pos:line="21" pos:column="18">(<argument><expr><name pos:line="21" pos:column="19">idata<pos:position pos:line="21" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="26">s<pos:position pos:line="21" pos:column="27"/></name></expr></argument>)<pos:position pos:line="21" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">idata<pos:position pos:line="22" pos:column="8"/></name><operator pos:line="22" pos:column="8">-&gt;<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="10">cmddata<pos:position pos:line="22" pos:column="17"/></name></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <name pos:line="22" pos:column="20">NULL<pos:position pos:line="22" pos:column="24"/></name></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>
  <comment type="block" pos:line="23" pos:column="3">/* noselect is for a gmail quirk (#3445) */</comment>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><operator pos:line="24" pos:column="7">!<pos:position pos:line="24" pos:column="8"/></operator><name><name pos:line="24" pos:column="8">list<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">.<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">name<pos:position pos:line="24" pos:column="17"/></name></name> <operator pos:line="24" pos:column="18">||<pos:position pos:line="24" pos:column="20"/></operator> <name><name pos:line="24" pos:column="21">list<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">.<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="26">noselect<pos:position pos:line="24" pos:column="34"/></name></name></expr>)<pos:position pos:line="24" pos:column="35"/></condition><then pos:line="24" pos:column="35">
    <block type="pseudo"><return pos:line="25" pos:column="5">return;<pos:position pos:line="25" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">dprint<pos:position pos:line="27" pos:column="9"/></name> <argument_list pos:line="27" pos:column="10">(<argument><expr><literal type="number" pos:line="27" pos:column="11">3<pos:position pos:line="27" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="14">(<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="15">debugfile<pos:position pos:line="27" pos:column="24"/></name><operator pos:line="27" pos:column="24">,<pos:position pos:line="27" pos:column="25"/></operator> <literal type="string" pos:line="27" pos:column="26">"Subscribing to %s\n"<pos:position pos:line="27" pos:column="47"/></literal><operator pos:line="27" pos:column="47">,<pos:position pos:line="27" pos:column="48"/></operator> <name><name pos:line="27" pos:column="49">list<pos:position pos:line="27" pos:column="53"/></name><operator pos:line="27" pos:column="53">.<pos:position pos:line="27" pos:column="54"/></operator><name pos:line="27" pos:column="54">name<pos:position pos:line="27" pos:column="58"/></name></name><operator pos:line="27" pos:column="58">)<pos:position pos:line="27" pos:column="59"/></operator></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="61"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="29" pos:column="3">strfcpy<pos:position pos:line="29" pos:column="10"/></name> <argument_list pos:line="29" pos:column="11">(<argument><expr><name pos:line="29" pos:column="12">buf<pos:position pos:line="29" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="17">"mailboxes \""<pos:position pos:line="29" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="33">sizeof <argument_list pos:line="29" pos:column="40">(<argument><expr><name pos:line="29" pos:column="41">buf<pos:position pos:line="29" pos:column="44"/></name></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">mutt_account_tourl<pos:position pos:line="30" pos:column="21"/></name> <argument_list pos:line="30" pos:column="22">(<argument><expr><operator pos:line="30" pos:column="23">&amp;<pos:position pos:line="30" pos:column="28"/></operator><name><name pos:line="30" pos:column="24">idata<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">-&gt;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="31">conn<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">-&gt;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="37">account<pos:position pos:line="30" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="46">&amp;<pos:position pos:line="30" pos:column="51"/></operator><name pos:line="30" pos:column="47">url<pos:position pos:line="30" pos:column="50"/></name></expr></argument>)<pos:position pos:line="30" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="52"/></expr_stmt>
  <comment type="block" pos:line="31" pos:column="3">/* escape \ and " */</comment>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">imap_quote_string<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><name pos:line="32" pos:column="21">errstr<pos:position pos:line="32" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="29">sizeof <argument_list pos:line="32" pos:column="36">(<argument><expr><name pos:line="32" pos:column="37">errstr<pos:position pos:line="32" pos:column="43"/></name></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="46">list<pos:position pos:line="32" pos:column="50"/></name><operator pos:line="32" pos:column="50">.<pos:position pos:line="32" pos:column="51"/></operator><name pos:line="32" pos:column="51">name<pos:position pos:line="32" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="57"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="33" pos:column="3">url<pos:position pos:line="33" pos:column="6"/></name><operator pos:line="33" pos:column="6">.<pos:position pos:line="33" pos:column="7"/></operator><name pos:line="33" pos:column="7">path<pos:position pos:line="33" pos:column="11"/></name></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <name pos:line="33" pos:column="14">errstr<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">+<pos:position pos:line="33" pos:column="22"/></operator> <literal type="number" pos:line="33" pos:column="23">1<pos:position pos:line="33" pos:column="24"/></literal></expr>;<pos:position pos:line="33" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="34" pos:column="3">url<pos:position pos:line="34" pos:column="6"/></name><operator pos:line="34" pos:column="6">.<pos:position pos:line="34" pos:column="7"/></operator><name pos:line="34" pos:column="7">path<pos:position pos:line="34" pos:column="11"/></name><index pos:line="34" pos:column="11">[<expr><call><name pos:line="34" pos:column="12">strlen<pos:position pos:line="34" pos:column="18"/></name><argument_list pos:line="34" pos:column="18">(<argument><expr><name><name pos:line="34" pos:column="19">url<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">.<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="23">path<pos:position pos:line="34" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="28"/></argument_list></call> <operator pos:line="34" pos:column="29">-<pos:position pos:line="34" pos:column="30"/></operator> <literal type="number" pos:line="34" pos:column="31">1<pos:position pos:line="34" pos:column="32"/></literal></expr>]<pos:position pos:line="34" pos:column="33"/></index></name> <operator pos:line="34" pos:column="34">=<pos:position pos:line="34" pos:column="35"/></operator> <literal type="char" pos:line="34" pos:column="36">'\0'<pos:position pos:line="34" pos:column="40"/></literal></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>
  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><operator pos:line="35" pos:column="7">!<pos:position pos:line="35" pos:column="8"/></operator><call><name pos:line="35" pos:column="8">mutt_strcmp<pos:position pos:line="35" pos:column="19"/></name> <argument_list pos:line="35" pos:column="20">(<argument><expr><name><name pos:line="35" pos:column="21">url<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">.<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="25">user<pos:position pos:line="35" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="31">ImapUser<pos:position pos:line="35" pos:column="39"/></name></expr></argument>)<pos:position pos:line="35" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="41"/></condition><then pos:line="35" pos:column="41">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="36" pos:column="5">url<pos:position pos:line="36" pos:column="8"/></name><operator pos:line="36" pos:column="8">.<pos:position pos:line="36" pos:column="9"/></operator><name pos:line="36" pos:column="9">user<pos:position pos:line="36" pos:column="13"/></name></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <name pos:line="36" pos:column="16">NULL<pos:position pos:line="36" pos:column="20"/></name></expr>;<pos:position pos:line="36" pos:column="21"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">url_ciss_tostring<pos:position pos:line="37" pos:column="20"/></name> <argument_list pos:line="37" pos:column="21">(<argument><expr><operator pos:line="37" pos:column="22">&amp;<pos:position pos:line="37" pos:column="27"/></operator><name pos:line="37" pos:column="23">url<pos:position pos:line="37" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="28">buf<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">+<pos:position pos:line="37" pos:column="33"/></operator> <literal type="number" pos:line="37" pos:column="34">11<pos:position pos:line="37" pos:column="36"/></literal></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="38">sizeof <argument_list pos:line="37" pos:column="45">(<argument><expr><name pos:line="37" pos:column="46">buf<pos:position pos:line="37" pos:column="49"/></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></sizeof> <operator pos:line="37" pos:column="51">-<pos:position pos:line="37" pos:column="52"/></operator> <literal type="number" pos:line="37" pos:column="53">10<pos:position pos:line="37" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="57">0<pos:position pos:line="37" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="38" pos:column="3">safe_strcat<pos:position pos:line="38" pos:column="14"/></name> <argument_list pos:line="38" pos:column="15">(<argument><expr><name pos:line="38" pos:column="16">buf<pos:position pos:line="38" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="21">sizeof <argument_list pos:line="38" pos:column="28">(<argument><expr><name pos:line="38" pos:column="29">buf<pos:position pos:line="38" pos:column="32"/></name></expr></argument>)<pos:position pos:line="38" pos:column="33"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="35">"\""<pos:position pos:line="38" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">mutt_buffer_init<pos:position pos:line="39" pos:column="19"/></name> <argument_list pos:line="39" pos:column="20">(<argument><expr><operator pos:line="39" pos:column="21">&amp;<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="22">token<pos:position pos:line="39" pos:column="27"/></name></expr></argument>)<pos:position pos:line="39" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">mutt_buffer_init<pos:position pos:line="40" pos:column="19"/></name> <argument_list pos:line="40" pos:column="20">(<argument><expr><operator pos:line="40" pos:column="21">&amp;<pos:position pos:line="40" pos:column="26"/></operator><name pos:line="40" pos:column="22">err<pos:position pos:line="40" pos:column="25"/></name></expr></argument>)<pos:position pos:line="40" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="41" pos:column="3">err<pos:position pos:line="41" pos:column="6"/></name><operator pos:line="41" pos:column="6">.<pos:position pos:line="41" pos:column="7"/></operator><name pos:line="41" pos:column="7">data<pos:position pos:line="41" pos:column="11"/></name></name> <operator pos:line="41" pos:column="12">=<pos:position pos:line="41" pos:column="13"/></operator> <name pos:line="41" pos:column="14">errstr<pos:position pos:line="41" pos:column="20"/></name></expr>;<pos:position pos:line="41" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="42" pos:column="3">err<pos:position pos:line="42" pos:column="6"/></name><operator pos:line="42" pos:column="6">.<pos:position pos:line="42" pos:column="7"/></operator><name pos:line="42" pos:column="7">dsize<pos:position pos:line="42" pos:column="12"/></name></name> <operator pos:line="42" pos:column="13">=<pos:position pos:line="42" pos:column="14"/></operator> <sizeof pos:line="42" pos:column="15">sizeof <argument_list pos:line="42" pos:column="22">(<argument><expr><name pos:line="42" pos:column="23">errstr<pos:position pos:line="42" pos:column="29"/></name></expr></argument>)<pos:position pos:line="42" pos:column="30"/></argument_list></sizeof></expr>;<pos:position pos:line="42" pos:column="31"/></expr_stmt>
  <if pos:line="43" pos:column="3">if <condition pos:line="43" pos:column="6">(<expr><call><name pos:line="43" pos:column="7">mutt_parse_rc_line<pos:position pos:line="43" pos:column="25"/></name> <argument_list pos:line="43" pos:column="26">(<argument><expr><name pos:line="43" pos:column="27">buf<pos:position pos:line="43" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="32">&amp;<pos:position pos:line="43" pos:column="37"/></operator><name pos:line="43" pos:column="33">token<pos:position pos:line="43" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="40">&amp;<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="41">err<pos:position pos:line="43" pos:column="44"/></name></expr></argument>)<pos:position pos:line="43" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="46"/></condition><then pos:line="43" pos:column="46">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="5">dprint<pos:position pos:line="44" pos:column="11"/></name> <argument_list pos:line="44" pos:column="12">(<argument><expr><literal type="number" pos:line="44" pos:column="13">1<pos:position pos:line="44" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="44" pos:column="16">(<pos:position pos:line="44" pos:column="17"/></operator><name pos:line="44" pos:column="17">debugfile<pos:position pos:line="44" pos:column="26"/></name><operator pos:line="44" pos:column="26">,<pos:position pos:line="44" pos:column="27"/></operator> <literal type="string" pos:line="44" pos:column="28">"Error adding subscribed mailbox: %s\n"<pos:position pos:line="44" pos:column="67"/></literal><operator pos:line="44" pos:column="67">,<pos:position pos:line="44" pos:column="68"/></operator> <name pos:line="44" pos:column="69">errstr<pos:position pos:line="44" pos:column="75"/></name><operator pos:line="44" pos:column="75">)<pos:position pos:line="44" pos:column="76"/></operator></expr></argument>)<pos:position pos:line="44" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="78"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">FREE<pos:position pos:line="45" pos:column="7"/></name> <argument_list pos:line="45" pos:column="8">(<argument><expr><operator pos:line="45" pos:column="9">&amp;<pos:position pos:line="45" pos:column="14"/></operator><name><name pos:line="45" pos:column="10">token<pos:position pos:line="45" pos:column="15"/></name><operator pos:line="45" pos:column="15">.<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="16">data<pos:position pos:line="45" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="22"/></expr_stmt>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_235_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_edit_content_type<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">HEADER<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">h<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">BODY<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">b<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">FILE<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">fp<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buf<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">LONG_STRING<pos:position pos:line="3" pos:column="23"/></name></expr>]<pos:position pos:line="3" pos:column="24"/></index></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">obuf<pos:position pos:line="4" pos:column="12"/></name><index pos:line="4" pos:column="12">[<expr><name pos:line="4" pos:column="13">LONG_STRING<pos:position pos:line="4" pos:column="24"/></name></expr>]<pos:position pos:line="4" pos:column="25"/></index></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">tmp<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><name pos:line="5" pos:column="12">STRING<pos:position pos:line="5" pos:column="18"/></name></expr>]<pos:position pos:line="5" pos:column="19"/></index></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">PARAMETER<pos:position pos:line="6" pos:column="12"/></name> <modifier pos:line="6" pos:column="13">*<pos:position pos:line="6" pos:column="14"/></modifier></type><name pos:line="6" pos:column="14">p<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">charset<pos:position pos:line="8" pos:column="15"/></name><index pos:line="8" pos:column="15">[<expr><name pos:line="8" pos:column="16">STRING<pos:position pos:line="8" pos:column="22"/></name></expr>]<pos:position pos:line="8" pos:column="23"/></index></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">cp<pos:position pos:line="9" pos:column="11"/></name></decl>;<pos:position pos:line="9" pos:column="12"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="11" pos:column="3">short<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">charset_changed<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><literal type="number" pos:line="11" pos:column="27">0<pos:position pos:line="11" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">short<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">type_changed<pos:position pos:line="12" pos:column="21"/></name> <init pos:line="12" pos:column="22">= <expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">short<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">structure_changed<pos:position pos:line="13" pos:column="26"/></name> <init pos:line="13" pos:column="27">= <expr><literal type="number" pos:line="13" pos:column="29">0<pos:position pos:line="13" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="31"/></decl_stmt>
  
  <expr_stmt><expr><name pos:line="15" pos:column="3">cp<pos:position pos:line="15" pos:column="5"/></name> <operator pos:line="15" pos:column="6">=<pos:position pos:line="15" pos:column="7"/></operator> <call><name pos:line="15" pos:column="8">mutt_get_parameter<pos:position pos:line="15" pos:column="26"/></name> <argument_list pos:line="15" pos:column="27">(<argument><expr><literal type="string" pos:line="15" pos:column="28">"charset"<pos:position pos:line="15" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="39">b<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">-&gt;<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="42">parameter<pos:position pos:line="15" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">strfcpy<pos:position pos:line="16" pos:column="10"/></name> <argument_list pos:line="16" pos:column="11">(<argument><expr><name pos:line="16" pos:column="12">charset<pos:position pos:line="16" pos:column="19"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="21">NONULL<pos:position pos:line="16" pos:column="27"/></name> <argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">cp<pos:position pos:line="16" pos:column="31"/></name></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="34">sizeof <argument_list pos:line="16" pos:column="41">(<argument><expr><name pos:line="16" pos:column="42">charset<pos:position pos:line="16" pos:column="49"/></name></expr></argument>)<pos:position pos:line="16" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="52"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">snprintf<pos:position pos:line="18" pos:column="11"/></name> <argument_list pos:line="18" pos:column="12">(<argument><expr><name pos:line="18" pos:column="13">buf<pos:position pos:line="18" pos:column="16"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="18">sizeof <argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">buf<pos:position pos:line="18" pos:column="29"/></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="32">"%s/%s"<pos:position pos:line="18" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="41">TYPE<pos:position pos:line="18" pos:column="45"/></name> <argument_list pos:line="18" pos:column="46">(<argument><expr><name pos:line="18" pos:column="47">b<pos:position pos:line="18" pos:column="48"/></name></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="51">b<pos:position pos:line="18" pos:column="52"/></name><operator pos:line="18" pos:column="52">-&gt;<pos:position pos:line="18" pos:column="57"/></operator><name pos:line="18" pos:column="54">subtype<pos:position pos:line="18" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="63"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">strfcpy<pos:position pos:line="19" pos:column="10"/></name> <argument_list pos:line="19" pos:column="11">(<argument><expr><name pos:line="19" pos:column="12">obuf<pos:position pos:line="19" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="18">buf<pos:position pos:line="19" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="23">sizeof <argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">obuf<pos:position pos:line="19" pos:column="35"/></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name><name pos:line="20" pos:column="7">b<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">-&gt;<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="10">parameter<pos:position pos:line="20" pos:column="19"/></name></name></expr>)<pos:position pos:line="20" pos:column="20"/></condition><then pos:line="20" pos:column="20">
  <block pos:line="21" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">size_t<pos:position pos:line="22" pos:column="11"/></name></type> <name pos:line="22" pos:column="12">l<pos:position pos:line="22" pos:column="13"/></name></decl>;<pos:position pos:line="22" pos:column="14"/></decl_stmt>
    
    <for pos:line="24" pos:column="5">for <control pos:line="24" pos:column="9">(<init><expr><name pos:line="24" pos:column="10">p<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <name><name pos:line="24" pos:column="14">b<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">-&gt;<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="17">parameter<pos:position pos:line="24" pos:column="26"/></name></name></expr>;<pos:position pos:line="24" pos:column="27"/></init> <condition><expr><name pos:line="24" pos:column="28">p<pos:position pos:line="24" pos:column="29"/></name></expr>;<pos:position pos:line="24" pos:column="30"/></condition> <incr><expr><name pos:line="24" pos:column="31">p<pos:position pos:line="24" pos:column="32"/></name> <operator pos:line="24" pos:column="33">=<pos:position pos:line="24" pos:column="34"/></operator> <name><name pos:line="24" pos:column="35">p<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">-&gt;<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="38">next<pos:position pos:line="24" pos:column="42"/></name></name></expr></incr>)<pos:position pos:line="24" pos:column="43"/></control>
    <block pos:line="25" pos:column="5">{
      <expr_stmt><expr><name pos:line="26" pos:column="7">l<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator> <call><name pos:line="26" pos:column="11">strlen<pos:position pos:line="26" pos:column="17"/></name> <argument_list pos:line="26" pos:column="18">(<argument><expr><name pos:line="26" pos:column="19">buf<pos:position pos:line="26" pos:column="22"/></name></expr></argument>)<pos:position pos:line="26" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="28" pos:column="7">rfc822_cat<pos:position pos:line="28" pos:column="17"/></name> <argument_list pos:line="28" pos:column="18">(<argument><expr><name pos:line="28" pos:column="19">tmp<pos:position pos:line="28" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="24">sizeof <argument_list pos:line="28" pos:column="31">(<argument><expr><name pos:line="28" pos:column="32">tmp<pos:position pos:line="28" pos:column="35"/></name></expr></argument>)<pos:position pos:line="28" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="38">p<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">-&gt;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="41">value<pos:position pos:line="28" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="48">MimeSpecials<pos:position pos:line="28" pos:column="60"/></name></expr></argument>)<pos:position pos:line="28" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="62"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">snprintf<pos:position pos:line="29" pos:column="15"/></name> <argument_list pos:line="29" pos:column="16">(<argument><expr><name pos:line="29" pos:column="17">buf<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">+<pos:position pos:line="29" pos:column="22"/></operator> <name pos:line="29" pos:column="23">l<pos:position pos:line="29" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="26">sizeof <argument_list pos:line="29" pos:column="33">(<argument><expr><name pos:line="29" pos:column="34">buf<pos:position pos:line="29" pos:column="37"/></name></expr></argument>)<pos:position pos:line="29" pos:column="38"/></argument_list></sizeof> <operator pos:line="29" pos:column="39">-<pos:position pos:line="29" pos:column="40"/></operator> <name pos:line="29" pos:column="41">l<pos:position pos:line="29" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="44">"; %s=%s"<pos:position pos:line="29" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="55">p<pos:position pos:line="29" pos:column="56"/></name><operator pos:line="29" pos:column="56">-&gt;<pos:position pos:line="29" pos:column="61"/></operator><name pos:line="29" pos:column="58">attribute<pos:position pos:line="29" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="69">tmp<pos:position pos:line="29" pos:column="72"/></name></expr></argument>)<pos:position pos:line="29" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></for>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>
  
  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><call><name pos:line="33" pos:column="7">mutt_get_field<pos:position pos:line="33" pos:column="21"/></name> <argument_list pos:line="33" pos:column="22">(<argument><expr><literal type="string" pos:line="33" pos:column="23">"Content-Type: "<pos:position pos:line="33" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="41">buf<pos:position pos:line="33" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="46">sizeof <argument_list pos:line="33" pos:column="53">(<argument><expr><name pos:line="33" pos:column="54">buf<pos:position pos:line="33" pos:column="57"/></name></expr></argument>)<pos:position pos:line="33" pos:column="58"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="60">0<pos:position pos:line="33" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="62"/></argument_list></call> <operator pos:line="33" pos:column="63">!=<pos:position pos:line="33" pos:column="65"/></operator> <literal type="number" pos:line="33" pos:column="66">0<pos:position pos:line="33" pos:column="67"/></literal> <operator pos:line="33" pos:column="68">||<pos:position pos:line="33" pos:column="70"/></operator>
      <name><name pos:line="34" pos:column="7">buf<pos:position pos:line="34" pos:column="10"/></name><index pos:line="34" pos:column="10">[<expr><literal type="number" pos:line="34" pos:column="11">0<pos:position pos:line="34" pos:column="12"/></literal></expr>]<pos:position pos:line="34" pos:column="13"/></index></name> <operator pos:line="34" pos:column="14">==<pos:position pos:line="34" pos:column="16"/></operator> <literal type="number" pos:line="34" pos:column="17">0<pos:position pos:line="34" pos:column="18"/></literal></expr>)<pos:position pos:line="34" pos:column="19"/></condition><then pos:line="34" pos:column="19">
    <block type="pseudo"><return pos:line="35" pos:column="5">return <expr><literal type="number" pos:line="35" pos:column="12">0<pos:position pos:line="35" pos:column="13"/></literal></expr>;<pos:position pos:line="35" pos:column="14"/></return></block></then></if>
  
  <comment type="block" pos:line="37" pos:column="3">/* clean up previous junk */</comment>
  <expr_stmt><expr><call><name pos:line="38" pos:column="3">mutt_free_parameter<pos:position pos:line="38" pos:column="22"/></name> <argument_list pos:line="38" pos:column="23">(<argument><expr><operator pos:line="38" pos:column="24">&amp;<pos:position pos:line="38" pos:column="29"/></operator><name><name pos:line="38" pos:column="25">b<pos:position pos:line="38" pos:column="26"/></name><operator pos:line="38" pos:column="26">-&gt;<pos:position pos:line="38" pos:column="31"/></operator><name pos:line="38" pos:column="28">parameter<pos:position pos:line="38" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">FREE<pos:position pos:line="39" pos:column="7"/></name> <argument_list pos:line="39" pos:column="8">(<argument><expr><operator pos:line="39" pos:column="9">&amp;<pos:position pos:line="39" pos:column="14"/></operator><name><name pos:line="39" pos:column="10">b<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">-&gt;<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="13">subtype<pos:position pos:line="39" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="22"/></expr_stmt>
  
  <expr_stmt><expr><call><name pos:line="41" pos:column="3">mutt_parse_content_type<pos:position pos:line="41" pos:column="26"/></name> <argument_list pos:line="41" pos:column="27">(<argument><expr><name pos:line="41" pos:column="28">buf<pos:position pos:line="41" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="33">b<pos:position pos:line="41" pos:column="34"/></name></expr></argument>)<pos:position pos:line="41" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="36"/></expr_stmt>

  
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">snprintf<pos:position pos:line="44" pos:column="11"/></name> <argument_list pos:line="44" pos:column="12">(<argument><expr><name pos:line="44" pos:column="13">tmp<pos:position pos:line="44" pos:column="16"/></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="18">sizeof <argument_list pos:line="44" pos:column="25">(<argument><expr><name pos:line="44" pos:column="26">tmp<pos:position pos:line="44" pos:column="29"/></name></expr></argument>)<pos:position pos:line="44" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="32">"%s/%s"<pos:position pos:line="44" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="41">TYPE<pos:position pos:line="44" pos:column="45"/></name> <argument_list pos:line="44" pos:column="46">(<argument><expr><name pos:line="44" pos:column="47">b<pos:position pos:line="44" pos:column="48"/></name></expr></argument>)<pos:position pos:line="44" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="51">NONULL<pos:position pos:line="44" pos:column="57"/></name> <argument_list pos:line="44" pos:column="58">(<argument><expr><name><name pos:line="44" pos:column="59">b<pos:position pos:line="44" pos:column="60"/></name><operator pos:line="44" pos:column="60">-&gt;<pos:position pos:line="44" pos:column="65"/></operator><name pos:line="44" pos:column="62">subtype<pos:position pos:line="44" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="72"/></expr_stmt>
  <expr_stmt><expr><name pos:line="45" pos:column="3">type_changed<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">=<pos:position pos:line="45" pos:column="17"/></operator> <call><name pos:line="45" pos:column="18">ascii_strcasecmp<pos:position pos:line="45" pos:column="34"/></name> <argument_list pos:line="45" pos:column="35">(<argument><expr><name pos:line="45" pos:column="36">tmp<pos:position pos:line="45" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="41">obuf<pos:position pos:line="45" pos:column="45"/></name></expr></argument>)<pos:position pos:line="45" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><name pos:line="46" pos:column="3">charset_changed<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">=<pos:position pos:line="46" pos:column="20"/></operator> <call><name pos:line="46" pos:column="21">ascii_strcasecmp<pos:position pos:line="46" pos:column="37"/></name> <argument_list pos:line="46" pos:column="38">(<argument><expr><name pos:line="46" pos:column="39">charset<pos:position pos:line="46" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="48">mutt_get_parameter<pos:position pos:line="46" pos:column="66"/></name> <argument_list pos:line="46" pos:column="67">(<argument><expr><literal type="string" pos:line="46" pos:column="68">"charset"<pos:position pos:line="46" pos:column="77"/></literal></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="79">b<pos:position pos:line="46" pos:column="80"/></name><operator pos:line="46" pos:column="80">-&gt;<pos:position pos:line="46" pos:column="85"/></operator><name pos:line="46" pos:column="82">parameter<pos:position pos:line="46" pos:column="91"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="94"/></expr_stmt>

  <comment type="block" pos:line="48" pos:column="3">/* if in send mode, check for conversion - current setting is default. */</comment>

  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><operator pos:line="50" pos:column="7">!<pos:position pos:line="50" pos:column="8"/></operator><name pos:line="50" pos:column="8">h<pos:position pos:line="50" pos:column="9"/></name> <operator pos:line="50" pos:column="10">&amp;&amp;<pos:position pos:line="50" pos:column="20"/></operator> <name><name pos:line="50" pos:column="13">b<pos:position pos:line="50" pos:column="14"/></name><operator pos:line="50" pos:column="14">-&gt;<pos:position pos:line="50" pos:column="19"/></operator><name pos:line="50" pos:column="16">type<pos:position pos:line="50" pos:column="20"/></name></name> <operator pos:line="50" pos:column="21">==<pos:position pos:line="50" pos:column="23"/></operator> <name pos:line="50" pos:column="24">TYPETEXT<pos:position pos:line="50" pos:column="32"/></name> <operator pos:line="50" pos:column="33">&amp;&amp;<pos:position pos:line="50" pos:column="43"/></operator> <name pos:line="50" pos:column="36">charset_changed<pos:position pos:line="50" pos:column="51"/></name></expr>)<pos:position pos:line="50" pos:column="52"/></condition><then pos:line="50" pos:column="52">
  <block pos:line="51" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="52" pos:column="5">int<pos:position pos:line="52" pos:column="8"/></name></type> <name pos:line="52" pos:column="9">r<pos:position pos:line="52" pos:column="10"/></name></decl>;<pos:position pos:line="52" pos:column="11"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">snprintf<pos:position pos:line="53" pos:column="13"/></name> <argument_list pos:line="53" pos:column="14">(<argument><expr><name pos:line="53" pos:column="15">tmp<pos:position pos:line="53" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="53" pos:column="20">sizeof <argument_list pos:line="53" pos:column="27">(<argument><expr><name pos:line="53" pos:column="28">tmp<pos:position pos:line="53" pos:column="31"/></name></expr></argument>)<pos:position pos:line="53" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="53" pos:column="34">_<pos:position pos:line="53" pos:column="35"/></name><argument_list pos:line="53" pos:column="35">(<argument><expr><literal type="string" pos:line="53" pos:column="36">"Convert to %s upon sending?"<pos:position pos:line="53" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="66"/></argument_list></call></expr></argument>,
	      <argument><expr><call><name pos:line="54" pos:column="15">mutt_get_parameter<pos:position pos:line="54" pos:column="33"/></name> <argument_list pos:line="54" pos:column="34">(<argument><expr><literal type="string" pos:line="54" pos:column="35">"charset"<pos:position pos:line="54" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="46">b<pos:position pos:line="54" pos:column="47"/></name><operator pos:line="54" pos:column="47">-&gt;<pos:position pos:line="54" pos:column="52"/></operator><name pos:line="54" pos:column="49">parameter<pos:position pos:line="54" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="61"/></expr_stmt>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><operator pos:line="55" pos:column="9">(<pos:position pos:line="55" pos:column="10"/></operator><name pos:line="55" pos:column="10">r<pos:position pos:line="55" pos:column="11"/></name> <operator pos:line="55" pos:column="12">=<pos:position pos:line="55" pos:column="13"/></operator> <call><name pos:line="55" pos:column="14">mutt_yesorno<pos:position pos:line="55" pos:column="26"/></name> <argument_list pos:line="55" pos:column="27">(<argument><expr><name pos:line="55" pos:column="28">tmp<pos:position pos:line="55" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="33">!<pos:position pos:line="55" pos:column="34"/></operator><name><name pos:line="55" pos:column="34">b<pos:position pos:line="55" pos:column="35"/></name><operator pos:line="55" pos:column="35">-&gt;<pos:position pos:line="55" pos:column="40"/></operator><name pos:line="55" pos:column="37">noconv<pos:position pos:line="55" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="44"/></argument_list></call><operator pos:line="55" pos:column="44">)<pos:position pos:line="55" pos:column="45"/></operator> <operator pos:line="55" pos:column="46">!=<pos:position pos:line="55" pos:column="48"/></operator> <operator pos:line="55" pos:column="49">-<pos:position pos:line="55" pos:column="50"/></operator><literal type="number" pos:line="55" pos:column="50">1<pos:position pos:line="55" pos:column="51"/></literal></expr>)<pos:position pos:line="55" pos:column="52"/></condition><then pos:line="55" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="56" pos:column="7">b<pos:position pos:line="56" pos:column="8"/></name><operator pos:line="56" pos:column="8">-&gt;<pos:position pos:line="56" pos:column="13"/></operator><name pos:line="56" pos:column="10">noconv<pos:position pos:line="56" pos:column="16"/></name></name> <operator pos:line="56" pos:column="17">=<pos:position pos:line="56" pos:column="18"/></operator> <operator pos:line="56" pos:column="19">(<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="20">r<pos:position pos:line="56" pos:column="21"/></name> <operator pos:line="56" pos:column="22">==<pos:position pos:line="56" pos:column="24"/></operator> <name pos:line="56" pos:column="25">MUTT_NO<pos:position pos:line="56" pos:column="32"/></name><operator pos:line="56" pos:column="32">)<pos:position pos:line="56" pos:column="33"/></operator></expr>;<pos:position pos:line="56" pos:column="34"/></expr_stmt></block></then></if>
  }<pos:position pos:line="57" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="59" pos:column="3">/* inform the user */</comment>
  
  <expr_stmt><expr><call><name pos:line="61" pos:column="3">snprintf<pos:position pos:line="61" pos:column="11"/></name> <argument_list pos:line="61" pos:column="12">(<argument><expr><name pos:line="61" pos:column="13">tmp<pos:position pos:line="61" pos:column="16"/></name></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="18">sizeof <argument_list pos:line="61" pos:column="25">(<argument><expr><name pos:line="61" pos:column="26">tmp<pos:position pos:line="61" pos:column="29"/></name></expr></argument>)<pos:position pos:line="61" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="32">"%s/%s"<pos:position pos:line="61" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name pos:line="61" pos:column="41">TYPE<pos:position pos:line="61" pos:column="45"/></name> <argument_list pos:line="61" pos:column="46">(<argument><expr><name pos:line="61" pos:column="47">b<pos:position pos:line="61" pos:column="48"/></name></expr></argument>)<pos:position pos:line="61" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="61" pos:column="51">NONULL<pos:position pos:line="61" pos:column="57"/></name> <argument_list pos:line="61" pos:column="58">(<argument><expr><name><name pos:line="61" pos:column="59">b<pos:position pos:line="61" pos:column="60"/></name><operator pos:line="61" pos:column="60">-&gt;<pos:position pos:line="61" pos:column="65"/></operator><name pos:line="61" pos:column="62">subtype<pos:position pos:line="61" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="61" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="72"/></expr_stmt>
  <if pos:line="62" pos:column="3">if <condition pos:line="62" pos:column="6">(<expr><name pos:line="62" pos:column="7">type_changed<pos:position pos:line="62" pos:column="19"/></name></expr>)<pos:position pos:line="62" pos:column="20"/></condition><then pos:line="62" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="5">mutt_message<pos:position pos:line="63" pos:column="17"/></name> <argument_list pos:line="63" pos:column="18">(<argument><expr><call><name pos:line="63" pos:column="19">_<pos:position pos:line="63" pos:column="20"/></name><argument_list pos:line="63" pos:column="20">(<argument><expr><literal type="string" pos:line="63" pos:column="21">"Content-Type changed to %s."<pos:position pos:line="63" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="63" pos:column="53">tmp<pos:position pos:line="63" pos:column="56"/></name></expr></argument>)<pos:position pos:line="63" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="58"/></expr_stmt></block></then></if>
  <if pos:line="64" pos:column="3">if <condition pos:line="64" pos:column="6">(<expr><name><name pos:line="64" pos:column="7">b<pos:position pos:line="64" pos:column="8"/></name><operator pos:line="64" pos:column="8">-&gt;<pos:position pos:line="64" pos:column="13"/></operator><name pos:line="64" pos:column="10">type<pos:position pos:line="64" pos:column="14"/></name></name> <operator pos:line="64" pos:column="15">==<pos:position pos:line="64" pos:column="17"/></operator> <name pos:line="64" pos:column="18">TYPETEXT<pos:position pos:line="64" pos:column="26"/></name> <operator pos:line="64" pos:column="27">&amp;&amp;<pos:position pos:line="64" pos:column="37"/></operator> <name pos:line="64" pos:column="30">charset_changed<pos:position pos:line="64" pos:column="45"/></name></expr>)<pos:position pos:line="64" pos:column="46"/></condition><then pos:line="64" pos:column="46">
  <block pos:line="65" pos:column="3">{
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name pos:line="66" pos:column="9">type_changed<pos:position pos:line="66" pos:column="21"/></name></expr>)<pos:position pos:line="66" pos:column="22"/></condition><then pos:line="66" pos:column="22">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="7">mutt_sleep<pos:position pos:line="67" pos:column="17"/></name> <argument_list pos:line="67" pos:column="18">(<argument><expr><literal type="number" pos:line="67" pos:column="19">1<pos:position pos:line="67" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="22"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">mutt_message<pos:position pos:line="68" pos:column="17"/></name> <argument_list pos:line="68" pos:column="18">(<argument><expr><call><name pos:line="68" pos:column="19">_<pos:position pos:line="68" pos:column="20"/></name><argument_list pos:line="68" pos:column="20">(<argument><expr><literal type="string" pos:line="68" pos:column="21">"Character set changed to %s; %s."<pos:position pos:line="68" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="56"/></argument_list></call></expr></argument>,
		  <argument><expr><call><name pos:line="69" pos:column="19">mutt_get_parameter<pos:position pos:line="69" pos:column="37"/></name> <argument_list pos:line="69" pos:column="38">(<argument><expr><literal type="string" pos:line="69" pos:column="39">"charset"<pos:position pos:line="69" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="50">b<pos:position pos:line="69" pos:column="51"/></name><operator pos:line="69" pos:column="51">-&gt;<pos:position pos:line="69" pos:column="56"/></operator><name pos:line="69" pos:column="53">parameter<pos:position pos:line="69" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="63"/></argument_list></call></expr></argument>,
		  <argument><expr><ternary><condition><expr><name><name pos:line="70" pos:column="19">b<pos:position pos:line="70" pos:column="20"/></name><operator pos:line="70" pos:column="20">-&gt;<pos:position pos:line="70" pos:column="25"/></operator><name pos:line="70" pos:column="22">noconv<pos:position pos:line="70" pos:column="28"/></name></name></expr> ?<pos:position pos:line="70" pos:column="30"/></condition><then pos:line="70" pos:column="30"> <expr><call><name pos:line="70" pos:column="31">_<pos:position pos:line="70" pos:column="32"/></name><argument_list pos:line="70" pos:column="32">(<argument><expr><literal type="string" pos:line="70" pos:column="33">"not converting"<pos:position pos:line="70" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="50"/></argument_list></call></expr> <pos:position pos:line="70" pos:column="51"/></then><else pos:line="70" pos:column="51">: <expr><call><name pos:line="70" pos:column="53">_<pos:position pos:line="70" pos:column="54"/></name><argument_list pos:line="70" pos:column="54">(<argument><expr><literal type="string" pos:line="70" pos:column="55">"converting"<pos:position pos:line="70" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="68"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="70" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="70"/></expr_stmt>
  }<pos:position pos:line="71" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="73" pos:column="3">b<pos:position pos:line="73" pos:column="4"/></name><operator pos:line="73" pos:column="4">-&gt;<pos:position pos:line="73" pos:column="9"/></operator><name pos:line="73" pos:column="6">force_charset<pos:position pos:line="73" pos:column="19"/></name></name> <operator pos:line="73" pos:column="20">|=<pos:position pos:line="73" pos:column="22"/></operator> <ternary><condition><expr><name pos:line="73" pos:column="23">charset_changed<pos:position pos:line="73" pos:column="38"/></name></expr> ?<pos:position pos:line="73" pos:column="40"/></condition><then pos:line="73" pos:column="40"> <expr><literal type="number" pos:line="73" pos:column="41">1<pos:position pos:line="73" pos:column="42"/></literal></expr> <pos:position pos:line="73" pos:column="43"/></then><else pos:line="73" pos:column="43">: <expr><literal type="number" pos:line="73" pos:column="45">0<pos:position pos:line="73" pos:column="46"/></literal></expr></else></ternary></expr>;<pos:position pos:line="73" pos:column="47"/></expr_stmt>

  <if pos:line="75" pos:column="3">if <condition pos:line="75" pos:column="6">(<expr><operator pos:line="75" pos:column="7">!<pos:position pos:line="75" pos:column="8"/></operator><call><name pos:line="75" pos:column="8">is_multipart<pos:position pos:line="75" pos:column="20"/></name> <argument_list pos:line="75" pos:column="21">(<argument><expr><name pos:line="75" pos:column="22">b<pos:position pos:line="75" pos:column="23"/></name></expr></argument>)<pos:position pos:line="75" pos:column="24"/></argument_list></call> <operator pos:line="75" pos:column="25">&amp;&amp;<pos:position pos:line="75" pos:column="35"/></operator> <name><name pos:line="75" pos:column="28">b<pos:position pos:line="75" pos:column="29"/></name><operator pos:line="75" pos:column="29">-&gt;<pos:position pos:line="75" pos:column="34"/></operator><name pos:line="75" pos:column="31">parts<pos:position pos:line="75" pos:column="36"/></name></name></expr>)<pos:position pos:line="75" pos:column="37"/></condition><then pos:line="75" pos:column="37">
  <block pos:line="76" pos:column="3">{
    <expr_stmt><expr><name pos:line="77" pos:column="5">structure_changed<pos:position pos:line="77" pos:column="22"/></name> <operator pos:line="77" pos:column="23">=<pos:position pos:line="77" pos:column="24"/></operator> <literal type="number" pos:line="77" pos:column="25">1<pos:position pos:line="77" pos:column="26"/></literal></expr>;<pos:position pos:line="77" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="78" pos:column="5">mutt_free_body<pos:position pos:line="78" pos:column="19"/></name> <argument_list pos:line="78" pos:column="20">(<argument><expr><operator pos:line="78" pos:column="21">&amp;<pos:position pos:line="78" pos:column="26"/></operator><name><name pos:line="78" pos:column="22">b<pos:position pos:line="78" pos:column="23"/></name><operator pos:line="78" pos:column="23">-&gt;<pos:position pos:line="78" pos:column="28"/></operator><name pos:line="78" pos:column="25">parts<pos:position pos:line="78" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="79" pos:column="4"/></block></then></if>
  <if pos:line="80" pos:column="3">if <condition pos:line="80" pos:column="6">(<expr><operator pos:line="80" pos:column="7">!<pos:position pos:line="80" pos:column="8"/></operator><call><name pos:line="80" pos:column="8">mutt_is_message_type<pos:position pos:line="80" pos:column="28"/></name> <argument_list pos:line="80" pos:column="29">(<argument><expr><name><name pos:line="80" pos:column="30">b<pos:position pos:line="80" pos:column="31"/></name><operator pos:line="80" pos:column="31">-&gt;<pos:position pos:line="80" pos:column="36"/></operator><name pos:line="80" pos:column="33">type<pos:position pos:line="80" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="39">b<pos:position pos:line="80" pos:column="40"/></name><operator pos:line="80" pos:column="40">-&gt;<pos:position pos:line="80" pos:column="45"/></operator><name pos:line="80" pos:column="42">subtype<pos:position pos:line="80" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="50"/></argument_list></call> <operator pos:line="80" pos:column="51">&amp;&amp;<pos:position pos:line="80" pos:column="61"/></operator> <name><name pos:line="80" pos:column="54">b<pos:position pos:line="80" pos:column="55"/></name><operator pos:line="80" pos:column="55">-&gt;<pos:position pos:line="80" pos:column="60"/></operator><name pos:line="80" pos:column="57">hdr<pos:position pos:line="80" pos:column="60"/></name></name></expr>)<pos:position pos:line="80" pos:column="61"/></condition><then pos:line="80" pos:column="61">
  <block pos:line="81" pos:column="3">{
    <expr_stmt><expr><name pos:line="82" pos:column="5">structure_changed<pos:position pos:line="82" pos:column="22"/></name> <operator pos:line="82" pos:column="23">=<pos:position pos:line="82" pos:column="24"/></operator> <literal type="number" pos:line="82" pos:column="25">1<pos:position pos:line="82" pos:column="26"/></literal></expr>;<pos:position pos:line="82" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="83" pos:column="5">b<pos:position pos:line="83" pos:column="6"/></name><operator pos:line="83" pos:column="6">-&gt;<pos:position pos:line="83" pos:column="11"/></operator><name pos:line="83" pos:column="8">hdr<pos:position pos:line="83" pos:column="11"/></name><operator pos:line="83" pos:column="11">-&gt;<pos:position pos:line="83" pos:column="16"/></operator><name pos:line="83" pos:column="13">content<pos:position pos:line="83" pos:column="20"/></name></name> <operator pos:line="83" pos:column="21">=<pos:position pos:line="83" pos:column="22"/></operator> <name pos:line="83" pos:column="23">NULL<pos:position pos:line="83" pos:column="27"/></name></expr>;<pos:position pos:line="83" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">mutt_free_header<pos:position pos:line="84" pos:column="21"/></name> <argument_list pos:line="84" pos:column="22">(<argument><expr><operator pos:line="84" pos:column="23">&amp;<pos:position pos:line="84" pos:column="28"/></operator><name><name pos:line="84" pos:column="24">b<pos:position pos:line="84" pos:column="25"/></name><operator pos:line="84" pos:column="25">-&gt;<pos:position pos:line="84" pos:column="30"/></operator><name pos:line="84" pos:column="27">hdr<pos:position pos:line="84" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="85" pos:column="4"/></block></then></if>

  <if pos:line="87" pos:column="3">if <condition pos:line="87" pos:column="6">(<expr><name pos:line="87" pos:column="7">fp<pos:position pos:line="87" pos:column="9"/></name> <operator pos:line="87" pos:column="10">&amp;&amp;<pos:position pos:line="87" pos:column="20"/></operator> <operator pos:line="87" pos:column="13">!<pos:position pos:line="87" pos:column="14"/></operator><name><name pos:line="87" pos:column="14">b<pos:position pos:line="87" pos:column="15"/></name><operator pos:line="87" pos:column="15">-&gt;<pos:position pos:line="87" pos:column="20"/></operator><name pos:line="87" pos:column="17">parts<pos:position pos:line="87" pos:column="22"/></name></name> <operator pos:line="87" pos:column="23">&amp;&amp;<pos:position pos:line="87" pos:column="33"/></operator> <operator pos:line="87" pos:column="26">(<pos:position pos:line="87" pos:column="27"/></operator><call><name pos:line="87" pos:column="27">is_multipart<pos:position pos:line="87" pos:column="39"/></name> <argument_list pos:line="87" pos:column="40">(<argument><expr><name pos:line="87" pos:column="41">b<pos:position pos:line="87" pos:column="42"/></name></expr></argument>)<pos:position pos:line="87" pos:column="43"/></argument_list></call> <operator pos:line="87" pos:column="44">||<pos:position pos:line="87" pos:column="46"/></operator> <call><name pos:line="87" pos:column="47">mutt_is_message_type<pos:position pos:line="87" pos:column="67"/></name> <argument_list pos:line="87" pos:column="68">(<argument><expr><name><name pos:line="87" pos:column="69">b<pos:position pos:line="87" pos:column="70"/></name><operator pos:line="87" pos:column="70">-&gt;<pos:position pos:line="87" pos:column="75"/></operator><name pos:line="87" pos:column="72">type<pos:position pos:line="87" pos:column="76"/></name></name></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="78">b<pos:position pos:line="87" pos:column="79"/></name><operator pos:line="87" pos:column="79">-&gt;<pos:position pos:line="87" pos:column="84"/></operator><name pos:line="87" pos:column="81">subtype<pos:position pos:line="87" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="89"/></argument_list></call><operator pos:line="87" pos:column="89">)<pos:position pos:line="87" pos:column="90"/></operator></expr>)<pos:position pos:line="87" pos:column="91"/></condition><then pos:line="87" pos:column="91">
  <block pos:line="88" pos:column="3">{
    <expr_stmt><expr><name pos:line="89" pos:column="5">structure_changed<pos:position pos:line="89" pos:column="22"/></name> <operator pos:line="89" pos:column="23">=<pos:position pos:line="89" pos:column="24"/></operator> <literal type="number" pos:line="89" pos:column="25">1<pos:position pos:line="89" pos:column="26"/></literal></expr>;<pos:position pos:line="89" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="90" pos:column="5">mutt_parse_part<pos:position pos:line="90" pos:column="20"/></name> <argument_list pos:line="90" pos:column="21">(<argument><expr><name pos:line="90" pos:column="22">fp<pos:position pos:line="90" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="26">b<pos:position pos:line="90" pos:column="27"/></name></expr></argument>)<pos:position pos:line="90" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="91" pos:column="4"/></block></then></if>
  
  <if pos:line="93" pos:column="3">if <condition pos:line="93" pos:column="6">(<expr><name pos:line="93" pos:column="7">WithCrypto<pos:position pos:line="93" pos:column="17"/></name> <operator pos:line="93" pos:column="18">&amp;&amp;<pos:position pos:line="93" pos:column="28"/></operator> <name pos:line="93" pos:column="21">h<pos:position pos:line="93" pos:column="22"/></name></expr>)<pos:position pos:line="93" pos:column="23"/></condition><then pos:line="93" pos:column="23">
  <block pos:line="94" pos:column="3">{
    <if pos:line="95" pos:column="5">if <condition pos:line="95" pos:column="8">(<expr><name><name pos:line="95" pos:column="9">h<pos:position pos:line="95" pos:column="10"/></name><operator pos:line="95" pos:column="10">-&gt;<pos:position pos:line="95" pos:column="15"/></operator><name pos:line="95" pos:column="12">content<pos:position pos:line="95" pos:column="19"/></name></name> <operator pos:line="95" pos:column="20">==<pos:position pos:line="95" pos:column="22"/></operator> <name pos:line="95" pos:column="23">b<pos:position pos:line="95" pos:column="24"/></name></expr>)<pos:position pos:line="95" pos:column="25"/></condition><then pos:line="95" pos:column="25">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="96" pos:column="7">h<pos:position pos:line="96" pos:column="8"/></name><operator pos:line="96" pos:column="8">-&gt;<pos:position pos:line="96" pos:column="13"/></operator><name pos:line="96" pos:column="10">security<pos:position pos:line="96" pos:column="18"/></name></name>  <operator pos:line="96" pos:column="20">=<pos:position pos:line="96" pos:column="21"/></operator> <literal type="number" pos:line="96" pos:column="22">0<pos:position pos:line="96" pos:column="23"/></literal></expr>;<pos:position pos:line="96" pos:column="24"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="98" pos:column="5">h<pos:position pos:line="98" pos:column="6"/></name><operator pos:line="98" pos:column="6">-&gt;<pos:position pos:line="98" pos:column="11"/></operator><name pos:line="98" pos:column="8">security<pos:position pos:line="98" pos:column="16"/></name></name> <operator pos:line="98" pos:column="17">|=<pos:position pos:line="98" pos:column="19"/></operator> <call><name pos:line="98" pos:column="20">crypt_query<pos:position pos:line="98" pos:column="31"/></name> <argument_list pos:line="98" pos:column="32">(<argument><expr><name pos:line="98" pos:column="33">b<pos:position pos:line="98" pos:column="34"/></name></expr></argument>)<pos:position pos:line="98" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="99" pos:column="4"/></block></then></if>

  <return pos:line="101" pos:column="3">return <expr><name pos:line="101" pos:column="10">structure_changed<pos:position pos:line="101" pos:column="27"/></name></expr>;<pos:position pos:line="101" pos:column="28"/></return>
}<pos:position pos:line="102" pos:column="2"/></block></function></unit>

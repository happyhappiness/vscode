<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_630_mutt-1.4.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">enriched_puts<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">s<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">enriched_state<pos:position pos:line="1" pos:column="58"/></name></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">stte<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">c<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name><name pos:line="5" pos:column="7">stte<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">-&gt;<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="13">buff_len<pos:position pos:line="5" pos:column="21"/></name></name> <operator pos:line="5" pos:column="22">&lt;<pos:position pos:line="5" pos:column="26"/></operator> <name><name pos:line="5" pos:column="24">stte<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">-&gt;<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="30">buff_used<pos:position pos:line="5" pos:column="39"/></name></name> <operator pos:line="5" pos:column="40">+<pos:position pos:line="5" pos:column="41"/></operator> <call><name pos:line="5" pos:column="42">mutt_strlen<pos:position pos:line="5" pos:column="53"/></name><argument_list pos:line="5" pos:column="53">(<argument><expr><name pos:line="5" pos:column="54">s<pos:position pos:line="5" pos:column="55"/></name></expr></argument>)<pos:position pos:line="5" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="57"/></condition><then pos:line="5" pos:column="57">
  <block pos:line="6" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">stte<pos:position pos:line="7" pos:column="9"/></name><operator pos:line="7" pos:column="9">-&gt;<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="11">buff_len<pos:position pos:line="7" pos:column="19"/></name></name> <operator pos:line="7" pos:column="20">+=<pos:position pos:line="7" pos:column="22"/></operator> <name pos:line="7" pos:column="23">LONG_STRING<pos:position pos:line="7" pos:column="34"/></name></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">safe_realloc<pos:position pos:line="8" pos:column="17"/></name> <argument_list pos:line="8" pos:column="18">(<argument><expr><operator pos:line="8" pos:column="19">(<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="20">void<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></operator><operator pos:line="8" pos:column="26">*<pos:position pos:line="8" pos:column="27"/></operator><operator pos:line="8" pos:column="27">)<pos:position pos:line="8" pos:column="28"/></operator> <operator pos:line="8" pos:column="29">&amp;<pos:position pos:line="8" pos:column="34"/></operator><name><name pos:line="8" pos:column="30">stte<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">-&gt;<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="36">buffer<pos:position pos:line="8" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="44">stte<pos:position pos:line="8" pos:column="48"/></name><operator pos:line="8" pos:column="48">-&gt;<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="50">buff_len<pos:position pos:line="8" pos:column="58"/></name></name> <operator pos:line="8" pos:column="59">+<pos:position pos:line="8" pos:column="60"/></operator> <literal type="number" pos:line="8" pos:column="61">1<pos:position pos:line="8" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="64"/></expr_stmt>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="10" pos:column="3">c<pos:position pos:line="10" pos:column="4"/></name> <operator pos:line="10" pos:column="5">=<pos:position pos:line="10" pos:column="6"/></operator> <name pos:line="10" pos:column="7">s<pos:position pos:line="10" pos:column="8"/></name></expr>;<pos:position pos:line="10" pos:column="9"/></expr_stmt>
  <while pos:line="11" pos:column="3">while <condition pos:line="11" pos:column="9">(<expr><operator pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">c<pos:position pos:line="11" pos:column="12"/></name></expr>)<pos:position pos:line="11" pos:column="13"/></condition>
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">stte<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">-&gt;<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="11">buffer<pos:position pos:line="13" pos:column="17"/></name><index pos:line="13" pos:column="17">[<expr><name><name pos:line="13" pos:column="18">stte<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">-&gt;<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="24">buff_used<pos:position pos:line="13" pos:column="33"/></name></name><operator pos:line="13" pos:column="33">++<pos:position pos:line="13" pos:column="35"/></operator></expr>]<pos:position pos:line="13" pos:column="36"/></index></name> <operator pos:line="13" pos:column="37">=<pos:position pos:line="13" pos:column="38"/></operator> <operator pos:line="13" pos:column="39">*<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="40">c<pos:position pos:line="13" pos:column="41"/></name></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">c<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">++<pos:position pos:line="14" pos:column="8"/></operator></expr>;<pos:position pos:line="14" pos:column="9"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></while>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

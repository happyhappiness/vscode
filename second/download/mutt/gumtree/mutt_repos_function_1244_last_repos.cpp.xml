<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1244_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_draw_tree<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">CONTEXT<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">ctx<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">pfx<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><name pos:line="3" pos:column="15">NULL<pos:position pos:line="3" pos:column="19"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="22">mypfx<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><name pos:line="3" pos:column="30">NULL<pos:position pos:line="3" pos:column="34"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="37">arrow<pos:position pos:line="3" pos:column="42"/></name> <init pos:line="3" pos:column="43">= <expr><name pos:line="3" pos:column="45">NULL<pos:position pos:line="3" pos:column="49"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="51">*<pos:position pos:line="3" pos:column="52"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="52">myarrow<pos:position pos:line="3" pos:column="59"/></name> <init pos:line="3" pos:column="60">= <expr><name pos:line="3" pos:column="62">NULL<pos:position pos:line="3" pos:column="66"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="68">*<pos:position pos:line="3" pos:column="69"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="69">new_tree<pos:position pos:line="3" pos:column="77"/></name></decl>;<pos:position pos:line="3" pos:column="78"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name pos:line="4" pos:column="8">corner<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><ternary><condition><expr><operator pos:line="4" pos:column="17">(<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">Sort<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">&amp;<pos:position pos:line="4" pos:column="28"/></operator> <name pos:line="4" pos:column="25">SORT_REVERSE<pos:position pos:line="4" pos:column="37"/></name><operator pos:line="4" pos:column="37">)<pos:position pos:line="4" pos:column="38"/></operator></expr> ?<pos:position pos:line="4" pos:column="40"/></condition><then pos:line="4" pos:column="40"> <expr><name pos:line="4" pos:column="41">MUTT_TREE_ULCORNER<pos:position pos:line="4" pos:column="59"/></name></expr> <pos:position pos:line="4" pos:column="60"/></then><else pos:line="4" pos:column="60">: <expr><name pos:line="4" pos:column="62">MUTT_TREE_LLCORNER<pos:position pos:line="4" pos:column="80"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="4" pos:column="81"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">vtee<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><ternary><condition><expr><operator pos:line="5" pos:column="15">(<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="16">Sort<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">&amp;<pos:position pos:line="5" pos:column="26"/></operator> <name pos:line="5" pos:column="23">SORT_REVERSE<pos:position pos:line="5" pos:column="35"/></name><operator pos:line="5" pos:column="35">)<pos:position pos:line="5" pos:column="36"/></operator></expr> ?<pos:position pos:line="5" pos:column="38"/></condition><then pos:line="5" pos:column="38"> <expr><name pos:line="5" pos:column="39">MUTT_TREE_BTEE<pos:position pos:line="5" pos:column="53"/></name></expr> <pos:position pos:line="5" pos:column="54"/></then><else pos:line="5" pos:column="54">: <expr><name pos:line="5" pos:column="56">MUTT_TREE_TTEE<pos:position pos:line="5" pos:column="70"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="71"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">depth<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><literal type="number" pos:line="6" pos:column="15">0<pos:position pos:line="6" pos:column="16"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="18">start_depth<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><literal type="number" pos:line="6" pos:column="32">0<pos:position pos:line="6" pos:column="33"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="35">max_depth<pos:position pos:line="6" pos:column="44"/></name> <init pos:line="6" pos:column="45">= <expr><literal type="number" pos:line="6" pos:column="47">0<pos:position pos:line="6" pos:column="48"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="50">width<pos:position pos:line="6" pos:column="55"/></name> <init pos:line="6" pos:column="56">= <expr><ternary><condition><expr><call><name pos:line="6" pos:column="58">option<pos:position pos:line="6" pos:column="64"/></name> <argument_list pos:line="6" pos:column="65">(<argument><expr><name pos:line="6" pos:column="66">OPTNARROWTREE<pos:position pos:line="6" pos:column="79"/></name></expr></argument>)<pos:position pos:line="6" pos:column="80"/></argument_list></call></expr> ?<pos:position pos:line="6" pos:column="82"/></condition><then pos:line="6" pos:column="82"> <expr><literal type="number" pos:line="6" pos:column="83">1<pos:position pos:line="6" pos:column="84"/></literal></expr> <pos:position pos:line="6" pos:column="85"/></then><else pos:line="6" pos:column="85">: <expr><literal type="number" pos:line="6" pos:column="87">2<pos:position pos:line="6" pos:column="88"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="89"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">THREAD<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">nextdisp<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><name pos:line="7" pos:column="22">NULL<pos:position pos:line="7" pos:column="26"/></name></expr></init></decl>, <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="29">pseudo<pos:position pos:line="7" pos:column="35"/></name> <init pos:line="7" pos:column="36">= <expr><name pos:line="7" pos:column="38">NULL<pos:position pos:line="7" pos:column="42"/></name></expr></init></decl>, <modifier pos:line="7" pos:column="44">*<pos:position pos:line="7" pos:column="45"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="45">parent<pos:position pos:line="7" pos:column="51"/></name> <init pos:line="7" pos:column="52">= <expr><name pos:line="7" pos:column="54">NULL<pos:position pos:line="7" pos:column="58"/></name></expr></init></decl>, <modifier pos:line="7" pos:column="60">*<pos:position pos:line="7" pos:column="61"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="61">tree<pos:position pos:line="7" pos:column="65"/></name> <init pos:line="7" pos:column="66">= <expr><name><name pos:line="7" pos:column="68">ctx<pos:position pos:line="7" pos:column="71"/></name><operator pos:line="7" pos:column="71">-&gt;<pos:position pos:line="7" pos:column="76"/></operator><name pos:line="7" pos:column="73">tree<pos:position pos:line="7" pos:column="77"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="78"/></decl_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* Do the visibility calculations and free the old thread chars.
   * From now on we can simply ignore invisible subtrees
   */</comment>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">calculate_visibility<pos:position pos:line="12" pos:column="23"/></name> <argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">ctx<pos:position pos:line="12" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="30">&amp;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="31">max_depth<pos:position pos:line="12" pos:column="40"/></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name pos:line="13" pos:column="3">pfx<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <call><name pos:line="13" pos:column="9">safe_malloc<pos:position pos:line="13" pos:column="20"/></name> <argument_list pos:line="13" pos:column="21">(<argument><expr><name pos:line="13" pos:column="22">width<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></operator> <name pos:line="13" pos:column="30">max_depth<pos:position pos:line="13" pos:column="39"/></name> <operator pos:line="13" pos:column="40">+<pos:position pos:line="13" pos:column="41"/></operator> <literal type="number" pos:line="13" pos:column="42">2<pos:position pos:line="13" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name pos:line="14" pos:column="3">arrow<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">=<pos:position pos:line="14" pos:column="10"/></operator> <call><name pos:line="14" pos:column="11">safe_malloc<pos:position pos:line="14" pos:column="22"/></name> <argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">width<pos:position pos:line="14" pos:column="29"/></name> <operator pos:line="14" pos:column="30">*<pos:position pos:line="14" pos:column="31"/></operator> <name pos:line="14" pos:column="32">max_depth<pos:position pos:line="14" pos:column="41"/></name> <operator pos:line="14" pos:column="42">+<pos:position pos:line="14" pos:column="43"/></operator> <literal type="number" pos:line="14" pos:column="44">2<pos:position pos:line="14" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="47"/></expr_stmt>
  <while pos:line="15" pos:column="3">while <condition pos:line="15" pos:column="9">(<expr><name pos:line="15" pos:column="10">tree<pos:position pos:line="15" pos:column="14"/></name></expr>)<pos:position pos:line="15" pos:column="15"/></condition>
  <block pos:line="16" pos:column="3">{
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">depth<pos:position pos:line="17" pos:column="14"/></name></expr>)<pos:position pos:line="17" pos:column="15"/></condition><then pos:line="17" pos:column="15">
    <block pos:line="18" pos:column="5">{
      <expr_stmt><expr><name pos:line="19" pos:column="7">myarrow<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <name pos:line="19" pos:column="17">arrow<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">+<pos:position pos:line="19" pos:column="24"/></operator> <operator pos:line="19" pos:column="25">(<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">depth<pos:position pos:line="19" pos:column="31"/></name> <operator pos:line="19" pos:column="32">-<pos:position pos:line="19" pos:column="33"/></operator> <name pos:line="19" pos:column="34">start_depth<pos:position pos:line="19" pos:column="45"/></name> <operator pos:line="19" pos:column="46">-<pos:position pos:line="19" pos:column="47"/></operator> <operator pos:line="19" pos:column="48">(<pos:position pos:line="19" pos:column="49"/></operator><ternary><condition><expr><name pos:line="19" pos:column="49">start_depth<pos:position pos:line="19" pos:column="60"/></name></expr> ?<pos:position pos:line="19" pos:column="62"/></condition><then pos:line="19" pos:column="62"> <expr><literal type="number" pos:line="19" pos:column="63">0<pos:position pos:line="19" pos:column="64"/></literal></expr> <pos:position pos:line="19" pos:column="65"/></then><else pos:line="19" pos:column="65">: <expr><literal type="number" pos:line="19" pos:column="67">1<pos:position pos:line="19" pos:column="68"/></literal></expr></else></ternary><operator pos:line="19" pos:column="68">)<pos:position pos:line="19" pos:column="69"/></operator><operator pos:line="19" pos:column="69">)<pos:position pos:line="19" pos:column="70"/></operator> <operator pos:line="19" pos:column="71">*<pos:position pos:line="19" pos:column="72"/></operator> <name pos:line="19" pos:column="73">width<pos:position pos:line="19" pos:column="78"/></name></expr>;<pos:position pos:line="19" pos:column="79"/></expr_stmt>
      <if pos:line="20" pos:column="7">if <condition pos:line="20" pos:column="10">(<expr><name pos:line="20" pos:column="11">depth<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">&amp;&amp;<pos:position pos:line="20" pos:column="27"/></operator> <name pos:line="20" pos:column="20">start_depth<pos:position pos:line="20" pos:column="31"/></name> <operator pos:line="20" pos:column="32">==<pos:position pos:line="20" pos:column="34"/></operator> <name pos:line="20" pos:column="35">depth<pos:position pos:line="20" pos:column="40"/></name></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="9">myarrow<pos:position pos:line="21" pos:column="16"/></name><index pos:line="21" pos:column="16">[<expr><literal type="number" pos:line="21" pos:column="17">0<pos:position pos:line="21" pos:column="18"/></literal></expr>]<pos:position pos:line="21" pos:column="19"/></index></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <ternary><condition><expr><name pos:line="21" pos:column="22">nextdisp<pos:position pos:line="21" pos:column="30"/></name></expr> ?<pos:position pos:line="21" pos:column="32"/></condition><then pos:line="21" pos:column="32"> <expr><name pos:line="21" pos:column="33">MUTT_TREE_LTEE<pos:position pos:line="21" pos:column="47"/></name></expr> <pos:position pos:line="21" pos:column="48"/></then><else pos:line="21" pos:column="48">: <expr><name pos:line="21" pos:column="50">corner<pos:position pos:line="21" pos:column="56"/></name></expr></else></ternary></expr>;<pos:position pos:line="21" pos:column="57"/></expr_stmt></block></then>
      <elseif pos:line="22" pos:column="7">else <if pos:line="22" pos:column="12">if <condition pos:line="22" pos:column="15">(<expr><name><name pos:line="22" pos:column="16">parent<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">-&gt;<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="24">message<pos:position pos:line="22" pos:column="31"/></name></name> <operator pos:line="22" pos:column="32">&amp;&amp;<pos:position pos:line="22" pos:column="42"/></operator> <operator pos:line="22" pos:column="35">!<pos:position pos:line="22" pos:column="36"/></operator><call><name pos:line="22" pos:column="36">option<pos:position pos:line="22" pos:column="42"/></name> <argument_list pos:line="22" pos:column="43">(<argument><expr><name pos:line="22" pos:column="44">OPTHIDELIMITED<pos:position pos:line="22" pos:column="58"/></name></expr></argument>)<pos:position pos:line="22" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="60"/></condition><then pos:line="22" pos:column="60">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="9">myarrow<pos:position pos:line="23" pos:column="16"/></name><index pos:line="23" pos:column="16">[<expr><literal type="number" pos:line="23" pos:column="17">0<pos:position pos:line="23" pos:column="18"/></literal></expr>]<pos:position pos:line="23" pos:column="19"/></index></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <name pos:line="23" pos:column="22">MUTT_TREE_HIDDEN<pos:position pos:line="23" pos:column="38"/></name></expr>;<pos:position pos:line="23" pos:column="39"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="24" pos:column="7">else <if pos:line="24" pos:column="12">if <condition pos:line="24" pos:column="15">(<expr><operator pos:line="24" pos:column="16">!<pos:position pos:line="24" pos:column="17"/></operator><name><name pos:line="24" pos:column="17">parent<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">-&gt;<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="25">message<pos:position pos:line="24" pos:column="32"/></name></name> <operator pos:line="24" pos:column="33">&amp;&amp;<pos:position pos:line="24" pos:column="43"/></operator> <operator pos:line="24" pos:column="36">!<pos:position pos:line="24" pos:column="37"/></operator><call><name pos:line="24" pos:column="37">option<pos:position pos:line="24" pos:column="43"/></name> <argument_list pos:line="24" pos:column="44">(<argument><expr><name pos:line="24" pos:column="45">OPTHIDEMISSING<pos:position pos:line="24" pos:column="59"/></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="61"/></condition><then pos:line="24" pos:column="61">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="25" pos:column="9">myarrow<pos:position pos:line="25" pos:column="16"/></name><index pos:line="25" pos:column="16">[<expr><literal type="number" pos:line="25" pos:column="17">0<pos:position pos:line="25" pos:column="18"/></literal></expr>]<pos:position pos:line="25" pos:column="19"/></index></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <name pos:line="25" pos:column="22">MUTT_TREE_MISSING<pos:position pos:line="25" pos:column="39"/></name></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt></block></then></if></elseif>
      <else pos:line="26" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="9">myarrow<pos:position pos:line="27" pos:column="16"/></name><index pos:line="27" pos:column="16">[<expr><literal type="number" pos:line="27" pos:column="17">0<pos:position pos:line="27" pos:column="18"/></literal></expr>]<pos:position pos:line="27" pos:column="19"/></index></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <name pos:line="27" pos:column="22">vtee<pos:position pos:line="27" pos:column="26"/></name></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt></block></else></if>
      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><name pos:line="28" pos:column="11">width<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">==<pos:position pos:line="28" pos:column="19"/></operator> <literal type="number" pos:line="28" pos:column="20">2<pos:position pos:line="28" pos:column="21"/></literal></expr>)<pos:position pos:line="28" pos:column="22"/></condition><then pos:line="28" pos:column="22">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="9">myarrow<pos:position pos:line="29" pos:column="16"/></name><index pos:line="29" pos:column="16">[<expr><literal type="number" pos:line="29" pos:column="17">1<pos:position pos:line="29" pos:column="18"/></literal></expr>]<pos:position pos:line="29" pos:column="19"/></index></name> <operator pos:line="29" pos:column="20">=<pos:position pos:line="29" pos:column="21"/></operator> <ternary><condition><expr><name pos:line="29" pos:column="22">pseudo<pos:position pos:line="29" pos:column="28"/></name></expr> ?<pos:position pos:line="29" pos:column="30"/></condition><then pos:line="29" pos:column="30">  <expr><name pos:line="29" pos:column="32">MUTT_TREE_STAR<pos:position pos:line="29" pos:column="46"/></name></expr>
	                     <pos:position pos:line="30" pos:column="23"/></then><else pos:line="30" pos:column="30">: <expr><operator pos:line="30" pos:column="32">(<pos:position pos:line="30" pos:column="33"/></operator><ternary><condition><expr><name><name pos:line="30" pos:column="33">tree<pos:position pos:line="30" pos:column="37"/></name><operator pos:line="30" pos:column="37">-&gt;<pos:position pos:line="30" pos:column="42"/></operator><name pos:line="30" pos:column="39">duplicate_thread<pos:position pos:line="30" pos:column="55"/></name></name></expr> ?<pos:position pos:line="30" pos:column="57"/></condition><then pos:line="30" pos:column="57"> <expr><name pos:line="30" pos:column="58">MUTT_TREE_EQUALS<pos:position pos:line="30" pos:column="74"/></name></expr> <pos:position pos:line="30" pos:column="75"/></then><else pos:line="30" pos:column="75">: <expr><name pos:line="30" pos:column="77">MUTT_TREE_HLINE<pos:position pos:line="30" pos:column="92"/></name></expr></else></ternary><operator pos:line="30" pos:column="92">)<pos:position pos:line="30" pos:column="93"/></operator></expr></else></ternary></expr>;<pos:position pos:line="30" pos:column="94"/></expr_stmt></block></then></if>
      <if pos:line="31" pos:column="7">if <condition pos:line="31" pos:column="10">(<expr><name><name pos:line="31" pos:column="11">tree<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">-&gt;<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="17">visible<pos:position pos:line="31" pos:column="24"/></name></name></expr>)<pos:position pos:line="31" pos:column="25"/></condition><then pos:line="31" pos:column="25">
      <block pos:line="32" pos:column="7">{
	<expr_stmt><expr><name><name pos:line="33" pos:column="9">myarrow<pos:position pos:line="33" pos:column="16"/></name><index pos:line="33" pos:column="16">[<expr><name pos:line="33" pos:column="17">width<pos:position pos:line="33" pos:column="22"/></name></expr>]<pos:position pos:line="33" pos:column="23"/></index></name> <operator pos:line="33" pos:column="24">=<pos:position pos:line="33" pos:column="25"/></operator> <name pos:line="33" pos:column="26">MUTT_TREE_RARROW<pos:position pos:line="33" pos:column="42"/></name></expr>;<pos:position pos:line="33" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="34" pos:column="9">myarrow<pos:position pos:line="34" pos:column="16"/></name><index pos:line="34" pos:column="16">[<expr><name pos:line="34" pos:column="17">width<pos:position pos:line="34" pos:column="22"/></name> <operator pos:line="34" pos:column="23">+<pos:position pos:line="34" pos:column="24"/></operator> <literal type="number" pos:line="34" pos:column="25">1<pos:position pos:line="34" pos:column="26"/></literal></expr>]<pos:position pos:line="34" pos:column="27"/></index></name> <operator pos:line="34" pos:column="28">=<pos:position pos:line="34" pos:column="29"/></operator> <literal type="number" pos:line="34" pos:column="30">0<pos:position pos:line="34" pos:column="31"/></literal></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="35" pos:column="9">new_tree<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <call><name pos:line="35" pos:column="20">safe_malloc<pos:position pos:line="35" pos:column="31"/></name> <argument_list pos:line="35" pos:column="32">(<argument><expr><operator pos:line="35" pos:column="33">(<pos:position pos:line="35" pos:column="34"/></operator><literal type="number" pos:line="35" pos:column="34">2<pos:position pos:line="35" pos:column="35"/></literal> <operator pos:line="35" pos:column="36">+<pos:position pos:line="35" pos:column="37"/></operator> <name pos:line="35" pos:column="38">depth<pos:position pos:line="35" pos:column="43"/></name> <operator pos:line="35" pos:column="44">*<pos:position pos:line="35" pos:column="45"/></operator> <name pos:line="35" pos:column="46">width<pos:position pos:line="35" pos:column="51"/></name><operator pos:line="35" pos:column="51">)<pos:position pos:line="35" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="35" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="54"/></expr_stmt>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">start_depth<pos:position pos:line="36" pos:column="24"/></name> <operator pos:line="36" pos:column="25">&gt;<pos:position pos:line="36" pos:column="29"/></operator> <literal type="number" pos:line="36" pos:column="27">1<pos:position pos:line="36" pos:column="28"/></literal></expr>)<pos:position pos:line="36" pos:column="29"/></condition><then pos:line="36" pos:column="29">
	<block pos:line="37" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="38" pos:column="11">strncpy<pos:position pos:line="38" pos:column="18"/></name> <argument_list pos:line="38" pos:column="19">(<argument><expr><name pos:line="38" pos:column="20">new_tree<pos:position pos:line="38" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="30">pfx<pos:position pos:line="38" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="35">(<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="36">start_depth<pos:position pos:line="38" pos:column="47"/></name> <operator pos:line="38" pos:column="48">-<pos:position pos:line="38" pos:column="49"/></operator> <literal type="number" pos:line="38" pos:column="50">1<pos:position pos:line="38" pos:column="51"/></literal><operator pos:line="38" pos:column="51">)<pos:position pos:line="38" pos:column="52"/></operator> <operator pos:line="38" pos:column="53">*<pos:position pos:line="38" pos:column="54"/></operator> <name pos:line="38" pos:column="55">width<pos:position pos:line="38" pos:column="60"/></name></expr></argument>)<pos:position pos:line="38" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="62"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="39" pos:column="11">strfcpy<pos:position pos:line="39" pos:column="18"/></name> <argument_list pos:line="39" pos:column="19">(<argument><expr><name pos:line="39" pos:column="20">new_tree<pos:position pos:line="39" pos:column="28"/></name> <operator pos:line="39" pos:column="29">+<pos:position pos:line="39" pos:column="30"/></operator> <operator pos:line="39" pos:column="31">(<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="32">start_depth<pos:position pos:line="39" pos:column="43"/></name> <operator pos:line="39" pos:column="44">-<pos:position pos:line="39" pos:column="45"/></operator> <literal type="number" pos:line="39" pos:column="46">1<pos:position pos:line="39" pos:column="47"/></literal><operator pos:line="39" pos:column="47">)<pos:position pos:line="39" pos:column="48"/></operator> <operator pos:line="39" pos:column="49">*<pos:position pos:line="39" pos:column="50"/></operator> <name pos:line="39" pos:column="51">width<pos:position pos:line="39" pos:column="56"/></name></expr></argument>,
		   <argument><expr><name pos:line="40" pos:column="20">arrow<pos:position pos:line="40" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="27">(<pos:position pos:line="40" pos:column="28"/></operator><literal type="number" pos:line="40" pos:column="28">1<pos:position pos:line="40" pos:column="29"/></literal> <operator pos:line="40" pos:column="30">+<pos:position pos:line="40" pos:column="31"/></operator> <name pos:line="40" pos:column="32">depth<pos:position pos:line="40" pos:column="37"/></name> <operator pos:line="40" pos:column="38">-<pos:position pos:line="40" pos:column="39"/></operator> <name pos:line="40" pos:column="40">start_depth<pos:position pos:line="40" pos:column="51"/></name><operator pos:line="40" pos:column="51">)<pos:position pos:line="40" pos:column="52"/></operator> <operator pos:line="40" pos:column="53">*<pos:position pos:line="40" pos:column="54"/></operator> <name pos:line="40" pos:column="55">width<pos:position pos:line="40" pos:column="60"/></name> <operator pos:line="40" pos:column="61">+<pos:position pos:line="40" pos:column="62"/></operator> <literal type="number" pos:line="40" pos:column="63">2<pos:position pos:line="40" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="66"/></expr_stmt>
	}<pos:position pos:line="41" pos:column="10"/></block></then>
	<else pos:line="42" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="11">strfcpy<pos:position pos:line="43" pos:column="18"/></name> <argument_list pos:line="43" pos:column="19">(<argument><expr><name pos:line="43" pos:column="20">new_tree<pos:position pos:line="43" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="30">arrow<pos:position pos:line="43" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="37">2<pos:position pos:line="43" pos:column="38"/></literal> <operator pos:line="43" pos:column="39">+<pos:position pos:line="43" pos:column="40"/></operator> <name pos:line="43" pos:column="41">depth<pos:position pos:line="43" pos:column="46"/></name> <operator pos:line="43" pos:column="47">*<pos:position pos:line="43" pos:column="48"/></operator> <name pos:line="43" pos:column="49">width<pos:position pos:line="43" pos:column="54"/></name></expr></argument>)<pos:position pos:line="43" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="56"/></expr_stmt></block></else></if>
	<expr_stmt><expr><name><name pos:line="44" pos:column="9">tree<pos:position pos:line="44" pos:column="13"/></name><operator pos:line="44" pos:column="13">-&gt;<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="15">message<pos:position pos:line="44" pos:column="22"/></name><operator pos:line="44" pos:column="22">-&gt;<pos:position pos:line="44" pos:column="27"/></operator><name pos:line="44" pos:column="24">tree<pos:position pos:line="44" pos:column="28"/></name></name> <operator pos:line="44" pos:column="29">=<pos:position pos:line="44" pos:column="30"/></operator> <name pos:line="44" pos:column="31">new_tree<pos:position pos:line="44" pos:column="39"/></name></expr>;<pos:position pos:line="44" pos:column="40"/></expr_stmt>
      }<pos:position pos:line="45" pos:column="8"/></block></then></if>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name><name pos:line="47" pos:column="9">tree<pos:position pos:line="47" pos:column="13"/></name><operator pos:line="47" pos:column="13">-&gt;<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="15">child<pos:position pos:line="47" pos:column="20"/></name></name> <operator pos:line="47" pos:column="21">&amp;&amp;<pos:position pos:line="47" pos:column="31"/></operator> <name pos:line="47" pos:column="24">depth<pos:position pos:line="47" pos:column="29"/></name></expr>)<pos:position pos:line="47" pos:column="30"/></condition><then pos:line="47" pos:column="30">
    <block pos:line="48" pos:column="5">{
      <expr_stmt><expr><name pos:line="49" pos:column="7">mypfx<pos:position pos:line="49" pos:column="12"/></name> <operator pos:line="49" pos:column="13">=<pos:position pos:line="49" pos:column="14"/></operator> <name pos:line="49" pos:column="15">pfx<pos:position pos:line="49" pos:column="18"/></name> <operator pos:line="49" pos:column="19">+<pos:position pos:line="49" pos:column="20"/></operator> <operator pos:line="49" pos:column="21">(<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="22">depth<pos:position pos:line="49" pos:column="27"/></name> <operator pos:line="49" pos:column="28">-<pos:position pos:line="49" pos:column="29"/></operator> <literal type="number" pos:line="49" pos:column="30">1<pos:position pos:line="49" pos:column="31"/></literal><operator pos:line="49" pos:column="31">)<pos:position pos:line="49" pos:column="32"/></operator> <operator pos:line="49" pos:column="33">*<pos:position pos:line="49" pos:column="34"/></operator> <name pos:line="49" pos:column="35">width<pos:position pos:line="49" pos:column="40"/></name></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="50" pos:column="7">mypfx<pos:position pos:line="50" pos:column="12"/></name><index pos:line="50" pos:column="12">[<expr><literal type="number" pos:line="50" pos:column="13">0<pos:position pos:line="50" pos:column="14"/></literal></expr>]<pos:position pos:line="50" pos:column="15"/></index></name> <operator pos:line="50" pos:column="16">=<pos:position pos:line="50" pos:column="17"/></operator> <ternary><condition><expr><name pos:line="50" pos:column="18">nextdisp<pos:position pos:line="50" pos:column="26"/></name></expr> ?<pos:position pos:line="50" pos:column="28"/></condition><then pos:line="50" pos:column="28"> <expr><name pos:line="50" pos:column="29">MUTT_TREE_VLINE<pos:position pos:line="50" pos:column="44"/></name></expr> <pos:position pos:line="50" pos:column="45"/></then><else pos:line="50" pos:column="45">: <expr><name pos:line="50" pos:column="47">MUTT_TREE_SPACE<pos:position pos:line="50" pos:column="62"/></name></expr></else></ternary></expr>;<pos:position pos:line="50" pos:column="63"/></expr_stmt>
      <if pos:line="51" pos:column="7">if <condition pos:line="51" pos:column="10">(<expr><name pos:line="51" pos:column="11">width<pos:position pos:line="51" pos:column="16"/></name> <operator pos:line="51" pos:column="17">==<pos:position pos:line="51" pos:column="19"/></operator> <literal type="number" pos:line="51" pos:column="20">2<pos:position pos:line="51" pos:column="21"/></literal></expr>)<pos:position pos:line="51" pos:column="22"/></condition><then pos:line="51" pos:column="22">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="52" pos:column="9">mypfx<pos:position pos:line="52" pos:column="14"/></name><index pos:line="52" pos:column="14">[<expr><literal type="number" pos:line="52" pos:column="15">1<pos:position pos:line="52" pos:column="16"/></literal></expr>]<pos:position pos:line="52" pos:column="17"/></index></name> <operator pos:line="52" pos:column="18">=<pos:position pos:line="52" pos:column="19"/></operator> <name pos:line="52" pos:column="20">MUTT_TREE_SPACE<pos:position pos:line="52" pos:column="35"/></name></expr>;<pos:position pos:line="52" pos:column="36"/></expr_stmt></block></then></if>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="54" pos:column="5">parent<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">=<pos:position pos:line="54" pos:column="13"/></operator> <name pos:line="54" pos:column="14">tree<pos:position pos:line="54" pos:column="18"/></name></expr>;<pos:position pos:line="54" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="55" pos:column="5">nextdisp<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">=<pos:position pos:line="55" pos:column="15"/></operator> <name pos:line="55" pos:column="16">NULL<pos:position pos:line="55" pos:column="20"/></name></expr>;<pos:position pos:line="55" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="56" pos:column="5">pseudo<pos:position pos:line="56" pos:column="11"/></name> <operator pos:line="56" pos:column="12">=<pos:position pos:line="56" pos:column="13"/></operator> <name pos:line="56" pos:column="14">NULL<pos:position pos:line="56" pos:column="18"/></name></expr>;<pos:position pos:line="56" pos:column="19"/></expr_stmt>
    <do pos:line="57" pos:column="5">do
    <block pos:line="58" pos:column="5">{
      <if pos:line="59" pos:column="7">if <condition pos:line="59" pos:column="10">(<expr><name><name pos:line="59" pos:column="11">tree<pos:position pos:line="59" pos:column="15"/></name><operator pos:line="59" pos:column="15">-&gt;<pos:position pos:line="59" pos:column="20"/></operator><name pos:line="59" pos:column="17">child<pos:position pos:line="59" pos:column="22"/></name></name> <operator pos:line="59" pos:column="23">&amp;&amp;<pos:position pos:line="59" pos:column="33"/></operator> <name><name pos:line="59" pos:column="26">tree<pos:position pos:line="59" pos:column="30"/></name><operator pos:line="59" pos:column="30">-&gt;<pos:position pos:line="59" pos:column="35"/></operator><name pos:line="59" pos:column="32">subtree_visible<pos:position pos:line="59" pos:column="47"/></name></name></expr>)<pos:position pos:line="59" pos:column="48"/></condition><then pos:line="59" pos:column="48">
      <block pos:line="60" pos:column="7">{
	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name><name pos:line="61" pos:column="13">tree<pos:position pos:line="61" pos:column="17"/></name><operator pos:line="61" pos:column="17">-&gt;<pos:position pos:line="61" pos:column="22"/></operator><name pos:line="61" pos:column="19">deep<pos:position pos:line="61" pos:column="23"/></name></name></expr>)<pos:position pos:line="61" pos:column="24"/></condition><then pos:line="61" pos:column="24">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="11">depth<pos:position pos:line="62" pos:column="16"/></name><operator pos:line="62" pos:column="16">++<pos:position pos:line="62" pos:column="18"/></operator></expr>;<pos:position pos:line="62" pos:column="19"/></expr_stmt></block></then></if>
	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name><name pos:line="63" pos:column="13">tree<pos:position pos:line="63" pos:column="17"/></name><operator pos:line="63" pos:column="17">-&gt;<pos:position pos:line="63" pos:column="22"/></operator><name pos:line="63" pos:column="19">visible<pos:position pos:line="63" pos:column="26"/></name></name></expr>)<pos:position pos:line="63" pos:column="27"/></condition><then pos:line="63" pos:column="27">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="11">start_depth<pos:position pos:line="64" pos:column="22"/></name> <operator pos:line="64" pos:column="23">=<pos:position pos:line="64" pos:column="24"/></operator> <name pos:line="64" pos:column="25">depth<pos:position pos:line="64" pos:column="30"/></name></expr>;<pos:position pos:line="64" pos:column="31"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="65" pos:column="9">tree<pos:position pos:line="65" pos:column="13"/></name> <operator pos:line="65" pos:column="14">=<pos:position pos:line="65" pos:column="15"/></operator> <name><name pos:line="65" pos:column="16">tree<pos:position pos:line="65" pos:column="20"/></name><operator pos:line="65" pos:column="20">-&gt;<pos:position pos:line="65" pos:column="25"/></operator><name pos:line="65" pos:column="22">child<pos:position pos:line="65" pos:column="27"/></name></name></expr>;<pos:position pos:line="65" pos:column="28"/></expr_stmt>

	<comment type="block" pos:line="67" pos:column="9">/* we do this here because we need to make sure that the first child thread
	 * of the old tree that we deal with is actually displayed if any are,
	 * or we might set the parent variable wrong while going through it. */</comment>
	<while pos:line="70" pos:column="9">while <condition pos:line="70" pos:column="15">(<expr><operator pos:line="70" pos:column="16">!<pos:position pos:line="70" pos:column="17"/></operator><name><name pos:line="70" pos:column="17">tree<pos:position pos:line="70" pos:column="21"/></name><operator pos:line="70" pos:column="21">-&gt;<pos:position pos:line="70" pos:column="26"/></operator><name pos:line="70" pos:column="23">subtree_visible<pos:position pos:line="70" pos:column="38"/></name></name> <operator pos:line="70" pos:column="39">&amp;&amp;<pos:position pos:line="70" pos:column="49"/></operator> <name><name pos:line="70" pos:column="42">tree<pos:position pos:line="70" pos:column="46"/></name><operator pos:line="70" pos:column="46">-&gt;<pos:position pos:line="70" pos:column="51"/></operator><name pos:line="70" pos:column="48">next<pos:position pos:line="70" pos:column="52"/></name></name></expr>)<pos:position pos:line="70" pos:column="53"/></condition>
	  <block type="pseudo"><expr_stmt><expr><name pos:line="71" pos:column="11">tree<pos:position pos:line="71" pos:column="15"/></name> <operator pos:line="71" pos:column="16">=<pos:position pos:line="71" pos:column="17"/></operator> <name><name pos:line="71" pos:column="18">tree<pos:position pos:line="71" pos:column="22"/></name><operator pos:line="71" pos:column="22">-&gt;<pos:position pos:line="71" pos:column="27"/></operator><name pos:line="71" pos:column="24">next<pos:position pos:line="71" pos:column="28"/></name></name></expr>;<pos:position pos:line="71" pos:column="29"/></expr_stmt></block></while>
      }<pos:position pos:line="72" pos:column="8"/></block></then>
      <else pos:line="73" pos:column="7">else
      <block pos:line="74" pos:column="7">{
	<while pos:line="75" pos:column="9">while <condition pos:line="75" pos:column="15">(<expr><operator pos:line="75" pos:column="16">!<pos:position pos:line="75" pos:column="17"/></operator><name><name pos:line="75" pos:column="17">tree<pos:position pos:line="75" pos:column="21"/></name><operator pos:line="75" pos:column="21">-&gt;<pos:position pos:line="75" pos:column="26"/></operator><name pos:line="75" pos:column="23">next<pos:position pos:line="75" pos:column="27"/></name></name> <operator pos:line="75" pos:column="28">&amp;&amp;<pos:position pos:line="75" pos:column="38"/></operator> <name><name pos:line="75" pos:column="31">tree<pos:position pos:line="75" pos:column="35"/></name><operator pos:line="75" pos:column="35">-&gt;<pos:position pos:line="75" pos:column="40"/></operator><name pos:line="75" pos:column="37">parent<pos:position pos:line="75" pos:column="43"/></name></name></expr>)<pos:position pos:line="75" pos:column="44"/></condition>
	<block pos:line="76" pos:column="9">{
	  <if pos:line="77" pos:column="11">if <condition pos:line="77" pos:column="14">(<expr><name pos:line="77" pos:column="15">tree<pos:position pos:line="77" pos:column="19"/></name> <operator pos:line="77" pos:column="20">==<pos:position pos:line="77" pos:column="22"/></operator> <name pos:line="77" pos:column="23">pseudo<pos:position pos:line="77" pos:column="29"/></name></expr>)<pos:position pos:line="77" pos:column="30"/></condition><then pos:line="77" pos:column="30">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="78" pos:column="13">pseudo<pos:position pos:line="78" pos:column="19"/></name> <operator pos:line="78" pos:column="20">=<pos:position pos:line="78" pos:column="21"/></operator> <name pos:line="78" pos:column="22">NULL<pos:position pos:line="78" pos:column="26"/></name></expr>;<pos:position pos:line="78" pos:column="27"/></expr_stmt></block></then></if>
	  <if pos:line="79" pos:column="11">if <condition pos:line="79" pos:column="14">(<expr><name pos:line="79" pos:column="15">tree<pos:position pos:line="79" pos:column="19"/></name> <operator pos:line="79" pos:column="20">==<pos:position pos:line="79" pos:column="22"/></operator> <name pos:line="79" pos:column="23">nextdisp<pos:position pos:line="79" pos:column="31"/></name></expr>)<pos:position pos:line="79" pos:column="32"/></condition><then pos:line="79" pos:column="32">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="80" pos:column="13">nextdisp<pos:position pos:line="80" pos:column="21"/></name> <operator pos:line="80" pos:column="22">=<pos:position pos:line="80" pos:column="23"/></operator> <name pos:line="80" pos:column="24">NULL<pos:position pos:line="80" pos:column="28"/></name></expr>;<pos:position pos:line="80" pos:column="29"/></expr_stmt></block></then></if>
	  <if pos:line="81" pos:column="11">if <condition pos:line="81" pos:column="14">(<expr><name><name pos:line="81" pos:column="15">tree<pos:position pos:line="81" pos:column="19"/></name><operator pos:line="81" pos:column="19">-&gt;<pos:position pos:line="81" pos:column="24"/></operator><name pos:line="81" pos:column="21">visible<pos:position pos:line="81" pos:column="28"/></name></name></expr>)<pos:position pos:line="81" pos:column="29"/></condition><then pos:line="81" pos:column="29">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="82" pos:column="13">start_depth<pos:position pos:line="82" pos:column="24"/></name> <operator pos:line="82" pos:column="25">=<pos:position pos:line="82" pos:column="26"/></operator> <name pos:line="82" pos:column="27">depth<pos:position pos:line="82" pos:column="32"/></name></expr>;<pos:position pos:line="82" pos:column="33"/></expr_stmt></block></then></if>
	  <expr_stmt><expr><name pos:line="83" pos:column="11">tree<pos:position pos:line="83" pos:column="15"/></name> <operator pos:line="83" pos:column="16">=<pos:position pos:line="83" pos:column="17"/></operator> <name><name pos:line="83" pos:column="18">tree<pos:position pos:line="83" pos:column="22"/></name><operator pos:line="83" pos:column="22">-&gt;<pos:position pos:line="83" pos:column="27"/></operator><name pos:line="83" pos:column="24">parent<pos:position pos:line="83" pos:column="30"/></name></name></expr>;<pos:position pos:line="83" pos:column="31"/></expr_stmt>
	  <if pos:line="84" pos:column="11">if <condition pos:line="84" pos:column="14">(<expr><name><name pos:line="84" pos:column="15">tree<pos:position pos:line="84" pos:column="19"/></name><operator pos:line="84" pos:column="19">-&gt;<pos:position pos:line="84" pos:column="24"/></operator><name pos:line="84" pos:column="21">deep<pos:position pos:line="84" pos:column="25"/></name></name></expr>)<pos:position pos:line="84" pos:column="26"/></condition><then pos:line="84" pos:column="26">
	  <block pos:line="85" pos:column="11">{
	    <if pos:line="86" pos:column="13">if <condition pos:line="86" pos:column="16">(<expr><name pos:line="86" pos:column="17">start_depth<pos:position pos:line="86" pos:column="28"/></name> <operator pos:line="86" pos:column="29">==<pos:position pos:line="86" pos:column="31"/></operator> <name pos:line="86" pos:column="32">depth<pos:position pos:line="86" pos:column="37"/></name></expr>)<pos:position pos:line="86" pos:column="38"/></condition><then pos:line="86" pos:column="38">
	      <block type="pseudo"><expr_stmt><expr><name pos:line="87" pos:column="15">start_depth<pos:position pos:line="87" pos:column="26"/></name><operator pos:line="87" pos:column="26">--<pos:position pos:line="87" pos:column="28"/></operator></expr>;<pos:position pos:line="87" pos:column="29"/></expr_stmt></block></then></if>
	    <expr_stmt><expr><name pos:line="88" pos:column="13">depth<pos:position pos:line="88" pos:column="18"/></name><operator pos:line="88" pos:column="18">--<pos:position pos:line="88" pos:column="20"/></operator></expr>;<pos:position pos:line="88" pos:column="21"/></expr_stmt>
	  }<pos:position pos:line="89" pos:column="12"/></block></then></if>
	}<pos:position pos:line="90" pos:column="10"/></block></while>
	<if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><name pos:line="91" pos:column="13">tree<pos:position pos:line="91" pos:column="17"/></name> <operator pos:line="91" pos:column="18">==<pos:position pos:line="91" pos:column="20"/></operator> <name pos:line="91" pos:column="21">pseudo<pos:position pos:line="91" pos:column="27"/></name></expr>)<pos:position pos:line="91" pos:column="28"/></condition><then pos:line="91" pos:column="28">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="92" pos:column="11">pseudo<pos:position pos:line="92" pos:column="17"/></name> <operator pos:line="92" pos:column="18">=<pos:position pos:line="92" pos:column="19"/></operator> <name pos:line="92" pos:column="20">NULL<pos:position pos:line="92" pos:column="24"/></name></expr>;<pos:position pos:line="92" pos:column="25"/></expr_stmt></block></then></if>
	<if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><name pos:line="93" pos:column="13">tree<pos:position pos:line="93" pos:column="17"/></name> <operator pos:line="93" pos:column="18">==<pos:position pos:line="93" pos:column="20"/></operator> <name pos:line="93" pos:column="21">nextdisp<pos:position pos:line="93" pos:column="29"/></name></expr>)<pos:position pos:line="93" pos:column="30"/></condition><then pos:line="93" pos:column="30">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="94" pos:column="11">nextdisp<pos:position pos:line="94" pos:column="19"/></name> <operator pos:line="94" pos:column="20">=<pos:position pos:line="94" pos:column="21"/></operator> <name pos:line="94" pos:column="22">NULL<pos:position pos:line="94" pos:column="26"/></name></expr>;<pos:position pos:line="94" pos:column="27"/></expr_stmt></block></then></if>
	<if pos:line="95" pos:column="9">if <condition pos:line="95" pos:column="12">(<expr><name><name pos:line="95" pos:column="13">tree<pos:position pos:line="95" pos:column="17"/></name><operator pos:line="95" pos:column="17">-&gt;<pos:position pos:line="95" pos:column="22"/></operator><name pos:line="95" pos:column="19">visible<pos:position pos:line="95" pos:column="26"/></name></name></expr>)<pos:position pos:line="95" pos:column="27"/></condition><then pos:line="95" pos:column="27">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="96" pos:column="11">start_depth<pos:position pos:line="96" pos:column="22"/></name> <operator pos:line="96" pos:column="23">=<pos:position pos:line="96" pos:column="24"/></operator> <name pos:line="96" pos:column="25">depth<pos:position pos:line="96" pos:column="30"/></name></expr>;<pos:position pos:line="96" pos:column="31"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="97" pos:column="9">tree<pos:position pos:line="97" pos:column="13"/></name> <operator pos:line="97" pos:column="14">=<pos:position pos:line="97" pos:column="15"/></operator> <name><name pos:line="97" pos:column="16">tree<pos:position pos:line="97" pos:column="20"/></name><operator pos:line="97" pos:column="20">-&gt;<pos:position pos:line="97" pos:column="25"/></operator><name pos:line="97" pos:column="22">next<pos:position pos:line="97" pos:column="26"/></name></name></expr>;<pos:position pos:line="97" pos:column="27"/></expr_stmt>
	<if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><operator pos:line="98" pos:column="13">!<pos:position pos:line="98" pos:column="14"/></operator><name pos:line="98" pos:column="14">tree<pos:position pos:line="98" pos:column="18"/></name></expr>)<pos:position pos:line="98" pos:column="19"/></condition><then pos:line="98" pos:column="19">
	  <block type="pseudo"><break pos:line="99" pos:column="11">break;<pos:position pos:line="99" pos:column="17"/></break></block></then></if>
      }<pos:position pos:line="100" pos:column="8"/></block></else></if>
      <if pos:line="101" pos:column="7">if <condition pos:line="101" pos:column="10">(<expr><operator pos:line="101" pos:column="11">!<pos:position pos:line="101" pos:column="12"/></operator><name pos:line="101" pos:column="12">pseudo<pos:position pos:line="101" pos:column="18"/></name> <operator pos:line="101" pos:column="19">&amp;&amp;<pos:position pos:line="101" pos:column="29"/></operator> <name><name pos:line="101" pos:column="22">tree<pos:position pos:line="101" pos:column="26"/></name><operator pos:line="101" pos:column="26">-&gt;<pos:position pos:line="101" pos:column="31"/></operator><name pos:line="101" pos:column="28">fake_thread<pos:position pos:line="101" pos:column="39"/></name></name></expr>)<pos:position pos:line="101" pos:column="40"/></condition><then pos:line="101" pos:column="40">
	<block type="pseudo"><expr_stmt><expr><name pos:line="102" pos:column="9">pseudo<pos:position pos:line="102" pos:column="15"/></name> <operator pos:line="102" pos:column="16">=<pos:position pos:line="102" pos:column="17"/></operator> <name pos:line="102" pos:column="18">tree<pos:position pos:line="102" pos:column="22"/></name></expr>;<pos:position pos:line="102" pos:column="23"/></expr_stmt></block></then></if>
      <if pos:line="103" pos:column="7">if <condition pos:line="103" pos:column="10">(<expr><operator pos:line="103" pos:column="11">!<pos:position pos:line="103" pos:column="12"/></operator><name pos:line="103" pos:column="12">nextdisp<pos:position pos:line="103" pos:column="20"/></name> <operator pos:line="103" pos:column="21">&amp;&amp;<pos:position pos:line="103" pos:column="31"/></operator> <name><name pos:line="103" pos:column="24">tree<pos:position pos:line="103" pos:column="28"/></name><operator pos:line="103" pos:column="28">-&gt;<pos:position pos:line="103" pos:column="33"/></operator><name pos:line="103" pos:column="30">next_subtree_visible<pos:position pos:line="103" pos:column="50"/></name></name></expr>)<pos:position pos:line="103" pos:column="51"/></condition><then pos:line="103" pos:column="51">
	<block type="pseudo"><expr_stmt><expr><name pos:line="104" pos:column="9">nextdisp<pos:position pos:line="104" pos:column="17"/></name> <operator pos:line="104" pos:column="18">=<pos:position pos:line="104" pos:column="19"/></operator> <name pos:line="104" pos:column="20">tree<pos:position pos:line="104" pos:column="24"/></name></expr>;<pos:position pos:line="104" pos:column="25"/></expr_stmt></block></then></if>
    }<pos:position pos:line="105" pos:column="6"/></block>
    while <condition pos:line="106" pos:column="11">(<expr><operator pos:line="106" pos:column="12">!<pos:position pos:line="106" pos:column="13"/></operator><name><name pos:line="106" pos:column="13">tree<pos:position pos:line="106" pos:column="17"/></name><operator pos:line="106" pos:column="17">-&gt;<pos:position pos:line="106" pos:column="22"/></operator><name pos:line="106" pos:column="19">deep<pos:position pos:line="106" pos:column="23"/></name></name></expr>)<pos:position pos:line="106" pos:column="24"/></condition>;<pos:position pos:line="106" pos:column="25"/></do>
  }<pos:position pos:line="107" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="109" pos:column="3">FREE<pos:position pos:line="109" pos:column="7"/></name> <argument_list pos:line="109" pos:column="8">(<argument><expr><operator pos:line="109" pos:column="9">&amp;<pos:position pos:line="109" pos:column="14"/></operator><name pos:line="109" pos:column="10">pfx<pos:position pos:line="109" pos:column="13"/></name></expr></argument>)<pos:position pos:line="109" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="110" pos:column="3">FREE<pos:position pos:line="110" pos:column="7"/></name> <argument_list pos:line="110" pos:column="8">(<argument><expr><operator pos:line="110" pos:column="9">&amp;<pos:position pos:line="110" pos:column="14"/></operator><name pos:line="110" pos:column="10">arrow<pos:position pos:line="110" pos:column="15"/></name></expr></argument>)<pos:position pos:line="110" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="17"/></expr_stmt>
}<pos:position pos:line="111" pos:column="2"/></block></function></unit>

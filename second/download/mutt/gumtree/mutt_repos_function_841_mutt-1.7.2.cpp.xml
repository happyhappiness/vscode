<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_841_mutt-1.7.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">_mutt_copy_message<pos:position pos:line="2" pos:column="19"/></name> <parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">FILE<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">fpout<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">FILE<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">fpin<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">HEADER<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">hdr<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">BODY<pos:position pos:line="2" pos:column="63"/></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="65">body<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="3" pos:column="21">int<pos:position pos:line="3" pos:column="24"/></name></type> <name pos:line="3" pos:column="25">flags<pos:position pos:line="3" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="32">int<pos:position pos:line="3" pos:column="35"/></name></type> <name pos:line="3" pos:column="36">chflags<pos:position pos:line="3" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="44"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">prefix<pos:position pos:line="5" pos:column="14"/></name><index pos:line="5" pos:column="14">[<expr><name pos:line="5" pos:column="15">SHORT_STRING<pos:position pos:line="5" pos:column="27"/></name></expr>]<pos:position pos:line="5" pos:column="28"/></index></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">STATE<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">s<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">LOFF_T<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">new_offset<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><operator pos:line="7" pos:column="23">-<pos:position pos:line="7" pos:column="24"/></operator><literal type="number" pos:line="7" pos:column="24">1<pos:position pos:line="7" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">rc<pos:position pos:line="8" pos:column="9"/></name> <init pos:line="8" pos:column="10">= <expr><literal type="number" pos:line="8" pos:column="12">0<pos:position pos:line="8" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">flags<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">&amp;<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="15">MUTT_CM_PREFIX<pos:position pos:line="10" pos:column="29"/></name></expr>)<pos:position pos:line="10" pos:column="30"/></condition><then pos:line="10" pos:column="30">
  <block pos:line="11" pos:column="3">{
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">option<pos:position pos:line="12" pos:column="15"/></name> <argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">OPTTEXTFLOWED<pos:position pos:line="12" pos:column="30"/></name></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="32"/></condition><then pos:line="12" pos:column="32">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="7">strfcpy<pos:position pos:line="13" pos:column="14"/></name> <argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">prefix<pos:position pos:line="13" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="24">"&gt;"<pos:position pos:line="13" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="29">sizeof <argument_list pos:line="13" pos:column="36">(<argument><expr><name pos:line="13" pos:column="37">prefix<pos:position pos:line="13" pos:column="43"/></name></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt></block></then>
    <else pos:line="14" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="7">_mutt_make_string<pos:position pos:line="15" pos:column="24"/></name> <argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">prefix<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="34">sizeof <argument_list pos:line="15" pos:column="41">(<argument><expr><name pos:line="15" pos:column="42">prefix<pos:position pos:line="15" pos:column="48"/></name></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="51">NONULL<pos:position pos:line="15" pos:column="57"/></name> <argument_list pos:line="15" pos:column="58">(<argument><expr><name pos:line="15" pos:column="59">Prefix<pos:position pos:line="15" pos:column="65"/></name></expr></argument>)<pos:position pos:line="15" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="15" pos:column="68">Context<pos:position pos:line="15" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="77">hdr<pos:position pos:line="15" pos:column="80"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="82">0<pos:position pos:line="15" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="85"/></expr_stmt></block></else></if>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">(<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">flags<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">&amp;<pos:position pos:line="18" pos:column="19"/></operator> <name pos:line="18" pos:column="16">MUTT_CM_NOHEADER<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">)<pos:position pos:line="18" pos:column="33"/></operator> <operator pos:line="18" pos:column="34">==<pos:position pos:line="18" pos:column="36"/></operator> <literal type="number" pos:line="18" pos:column="37">0<pos:position pos:line="18" pos:column="38"/></literal></expr>)<pos:position pos:line="18" pos:column="39"/></condition><then pos:line="18" pos:column="39">
  <block pos:line="19" pos:column="3">{
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">flags<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">&amp;<pos:position pos:line="20" pos:column="20"/></operator> <name pos:line="20" pos:column="17">MUTT_CM_PREFIX<pos:position pos:line="20" pos:column="31"/></name></expr>)<pos:position pos:line="20" pos:column="32"/></condition><then pos:line="20" pos:column="32">
      <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="7">chflags<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">|=<pos:position pos:line="21" pos:column="17"/></operator> <name pos:line="21" pos:column="18">CH_PREFIX<pos:position pos:line="21" pos:column="27"/></name></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt></block></then>

    <elseif pos:line="23" pos:column="5">else <if pos:line="23" pos:column="10">if <condition pos:line="23" pos:column="13">(<expr><name><name pos:line="23" pos:column="14">hdr<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">-&gt;<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="19">attach_del<pos:position pos:line="23" pos:column="29"/></name></name> <operator pos:line="23" pos:column="30">&amp;&amp;<pos:position pos:line="23" pos:column="40"/></operator> <operator pos:line="23" pos:column="33">(<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="34">chflags<pos:position pos:line="23" pos:column="41"/></name> <operator pos:line="23" pos:column="42">&amp;<pos:position pos:line="23" pos:column="47"/></operator> <name pos:line="23" pos:column="44">CH_UPDATE_LEN<pos:position pos:line="23" pos:column="57"/></name><operator pos:line="23" pos:column="57">)<pos:position pos:line="23" pos:column="58"/></operator></expr>)<pos:position pos:line="23" pos:column="59"/></condition><then pos:line="23" pos:column="59">
    <block pos:line="24" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="25" pos:column="7">int<pos:position pos:line="25" pos:column="10"/></name></type> <name pos:line="25" pos:column="11">new_lines<pos:position pos:line="25" pos:column="20"/></name></decl>;<pos:position pos:line="25" pos:column="21"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="26" pos:column="7">LOFF_T<pos:position pos:line="26" pos:column="13"/></name></type> <name pos:line="26" pos:column="14">new_length<pos:position pos:line="26" pos:column="24"/></name> <init pos:line="26" pos:column="25">= <expr><name><name pos:line="26" pos:column="27">body<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">-&gt;<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="33">length<pos:position pos:line="26" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="26" pos:column="40"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="27" pos:column="7">char<pos:position pos:line="27" pos:column="11"/></name></type> <name><name pos:line="27" pos:column="12">date<pos:position pos:line="27" pos:column="16"/></name><index pos:line="27" pos:column="16">[<expr><name pos:line="27" pos:column="17">SHORT_STRING<pos:position pos:line="27" pos:column="29"/></name></expr>]<pos:position pos:line="27" pos:column="30"/></index></name></decl>;<pos:position pos:line="27" pos:column="31"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="29" pos:column="7">mutt_make_date<pos:position pos:line="29" pos:column="21"/></name> <argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">date<pos:position pos:line="29" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="29">sizeof <argument_list pos:line="29" pos:column="36">(<argument><expr><name pos:line="29" pos:column="37">date<pos:position pos:line="29" pos:column="41"/></name></expr></argument>)<pos:position pos:line="29" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="30" pos:column="7">date<pos:position pos:line="30" pos:column="11"/></name><index pos:line="30" pos:column="11">[<expr><literal type="number" pos:line="30" pos:column="12">5<pos:position pos:line="30" pos:column="13"/></literal></expr>]<pos:position pos:line="30" pos:column="14"/></index></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <name><name pos:line="30" pos:column="17">date<pos:position pos:line="30" pos:column="21"/></name><index pos:line="30" pos:column="21">[<expr><call><name pos:line="30" pos:column="22">mutt_strlen<pos:position pos:line="30" pos:column="33"/></name> <argument_list pos:line="30" pos:column="34">(<argument><expr><name pos:line="30" pos:column="35">date<pos:position pos:line="30" pos:column="39"/></name></expr></argument>)<pos:position pos:line="30" pos:column="40"/></argument_list></call> <operator pos:line="30" pos:column="41">-<pos:position pos:line="30" pos:column="42"/></operator> <literal type="number" pos:line="30" pos:column="43">1<pos:position pos:line="30" pos:column="44"/></literal></expr>]<pos:position pos:line="30" pos:column="45"/></index></name> <operator pos:line="30" pos:column="46">=<pos:position pos:line="30" pos:column="47"/></operator> <literal type="char" pos:line="30" pos:column="48">'\"'<pos:position pos:line="30" pos:column="52"/></literal></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>

      <comment type="block" pos:line="32" pos:column="7">/* Count the number of lines and bytes to be deleted */</comment>
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">fseeko<pos:position pos:line="33" pos:column="13"/></name> <argument_list pos:line="33" pos:column="14">(<argument><expr><name pos:line="33" pos:column="15">fpin<pos:position pos:line="33" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="21">body<pos:position pos:line="33" pos:column="25"/></name><operator pos:line="33" pos:column="25">-&gt;<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="27">offset<pos:position pos:line="33" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="35">SEEK_SET<pos:position pos:line="33" pos:column="43"/></name></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name pos:line="34" pos:column="7">new_lines<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">=<pos:position pos:line="34" pos:column="18"/></operator> <name><name pos:line="34" pos:column="19">hdr<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">-&gt;<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="24">lines<pos:position pos:line="34" pos:column="29"/></name></name> <operator pos:line="34" pos:column="30">-<pos:position pos:line="34" pos:column="31"/></operator>
	<call><name pos:line="35" pos:column="9">count_delete_lines<pos:position pos:line="35" pos:column="27"/></name> <argument_list pos:line="35" pos:column="28">(<argument><expr><name pos:line="35" pos:column="29">fpin<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="35">body<pos:position pos:line="35" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="41">&amp;<pos:position pos:line="35" pos:column="46"/></operator><name pos:line="35" pos:column="42">new_length<pos:position pos:line="35" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="54">mutt_strlen<pos:position pos:line="35" pos:column="65"/></name> <argument_list pos:line="35" pos:column="66">(<argument><expr><name pos:line="35" pos:column="67">date<pos:position pos:line="35" pos:column="71"/></name></expr></argument>)<pos:position pos:line="35" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="74"/></expr_stmt>

      <comment type="block" pos:line="37" pos:column="7">/* Copy the headers */</comment>
      <if pos:line="38" pos:column="7">if <condition pos:line="38" pos:column="10">(<expr><call><name pos:line="38" pos:column="11">mutt_copy_header<pos:position pos:line="38" pos:column="27"/></name> <argument_list pos:line="38" pos:column="28">(<argument><expr><name pos:line="38" pos:column="29">fpin<pos:position pos:line="38" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="35">hdr<pos:position pos:line="38" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="40">fpout<pos:position pos:line="38" pos:column="45"/></name></expr></argument>,
			    <argument><expr><name pos:line="39" pos:column="29">chflags<pos:position pos:line="39" pos:column="36"/></name> <operator pos:line="39" pos:column="37">|<pos:position pos:line="39" pos:column="38"/></operator> <name pos:line="39" pos:column="39">CH_NOLEN<pos:position pos:line="39" pos:column="47"/></name> <operator pos:line="39" pos:column="48">|<pos:position pos:line="39" pos:column="49"/></operator> <name pos:line="39" pos:column="50">CH_NONEWLINE<pos:position pos:line="39" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="64">NULL<pos:position pos:line="39" pos:column="68"/></name></expr></argument>)<pos:position pos:line="39" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="70"/></condition><then pos:line="39" pos:column="70">
	<block type="pseudo"><return pos:line="40" pos:column="9">return <expr><operator pos:line="40" pos:column="16">-<pos:position pos:line="40" pos:column="17"/></operator><literal type="number" pos:line="40" pos:column="17">1<pos:position pos:line="40" pos:column="18"/></literal></expr>;<pos:position pos:line="40" pos:column="19"/></return></block></then></if>
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">fprintf<pos:position pos:line="41" pos:column="14"/></name> <argument_list pos:line="41" pos:column="15">(<argument><expr><name pos:line="41" pos:column="16">fpout<pos:position pos:line="41" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="23">"Content-Length: "<pos:position pos:line="41" pos:column="41"/></literal> <name pos:line="41" pos:column="42">OFF_T_FMT<pos:position pos:line="41" pos:column="51"/></name> <literal type="string" pos:line="41" pos:column="52">"\n"<pos:position pos:line="41" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="58">new_length<pos:position pos:line="41" pos:column="68"/></name></expr></argument>)<pos:position pos:line="41" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="70"/></expr_stmt>
      <if pos:line="42" pos:column="7">if <condition pos:line="42" pos:column="10">(<expr><name pos:line="42" pos:column="11">new_lines<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">&lt;=<pos:position pos:line="42" pos:column="26"/></operator> <literal type="number" pos:line="42" pos:column="24">0<pos:position pos:line="42" pos:column="25"/></literal></expr>)<pos:position pos:line="42" pos:column="26"/></condition><then pos:line="42" pos:column="26">
	<block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="9">new_lines<pos:position pos:line="43" pos:column="18"/></name> <operator pos:line="43" pos:column="19">=<pos:position pos:line="43" pos:column="20"/></operator> <literal type="number" pos:line="43" pos:column="21">0<pos:position pos:line="43" pos:column="22"/></literal></expr>;<pos:position pos:line="43" pos:column="23"/></expr_stmt></block></then>
      <else pos:line="44" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="9">fprintf<pos:position pos:line="45" pos:column="16"/></name> <argument_list pos:line="45" pos:column="17">(<argument><expr><name pos:line="45" pos:column="18">fpout<pos:position pos:line="45" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="25">"Lines: %d\n"<pos:position pos:line="45" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="40">new_lines<pos:position pos:line="45" pos:column="49"/></name></expr></argument>)<pos:position pos:line="45" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="51"/></expr_stmt></block></else></if>

      <expr_stmt><expr><call><name pos:line="47" pos:column="7">putc<pos:position pos:line="47" pos:column="11"/></name> <argument_list pos:line="47" pos:column="12">(<argument><expr><literal type="char" pos:line="47" pos:column="13">'\n'<pos:position pos:line="47" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="19">fpout<pos:position pos:line="47" pos:column="24"/></name></expr></argument>)<pos:position pos:line="47" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="26"/></expr_stmt>
      <if pos:line="48" pos:column="7">if <condition pos:line="48" pos:column="10">(<expr><call><name pos:line="48" pos:column="11">ferror<pos:position pos:line="48" pos:column="17"/></name> <argument_list pos:line="48" pos:column="18">(<argument><expr><name pos:line="48" pos:column="19">fpout<pos:position pos:line="48" pos:column="24"/></name></expr></argument>)<pos:position pos:line="48" pos:column="25"/></argument_list></call> <operator pos:line="48" pos:column="26">||<pos:position pos:line="48" pos:column="28"/></operator> <call><name pos:line="48" pos:column="29">feof<pos:position pos:line="48" pos:column="33"/></name> <argument_list pos:line="48" pos:column="34">(<argument><expr><name pos:line="48" pos:column="35">fpout<pos:position pos:line="48" pos:column="40"/></name></expr></argument>)<pos:position pos:line="48" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="42"/></condition><then pos:line="48" pos:column="42">
	<block type="pseudo"><return pos:line="49" pos:column="9">return <expr><operator pos:line="49" pos:column="16">-<pos:position pos:line="49" pos:column="17"/></operator><literal type="number" pos:line="49" pos:column="17">1<pos:position pos:line="49" pos:column="18"/></literal></expr>;<pos:position pos:line="49" pos:column="19"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="50" pos:column="7">new_offset<pos:position pos:line="50" pos:column="17"/></name> <operator pos:line="50" pos:column="18">=<pos:position pos:line="50" pos:column="19"/></operator> <call><name pos:line="50" pos:column="20">ftello<pos:position pos:line="50" pos:column="26"/></name> <argument_list pos:line="50" pos:column="27">(<argument><expr><name pos:line="50" pos:column="28">fpout<pos:position pos:line="50" pos:column="33"/></name></expr></argument>)<pos:position pos:line="50" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="35"/></expr_stmt>

      <comment type="block" pos:line="52" pos:column="7">/* Copy the body */</comment>
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">fseeko<pos:position pos:line="53" pos:column="13"/></name> <argument_list pos:line="53" pos:column="14">(<argument><expr><name pos:line="53" pos:column="15">fpin<pos:position pos:line="53" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="21">body<pos:position pos:line="53" pos:column="25"/></name><operator pos:line="53" pos:column="25">-&gt;<pos:position pos:line="53" pos:column="30"/></operator><name pos:line="53" pos:column="27">offset<pos:position pos:line="53" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="35">SEEK_SET<pos:position pos:line="53" pos:column="43"/></name></expr></argument>)<pos:position pos:line="53" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="45"/></expr_stmt>
      <if pos:line="54" pos:column="7">if <condition pos:line="54" pos:column="10">(<expr><call><name pos:line="54" pos:column="11">copy_delete_attach<pos:position pos:line="54" pos:column="29"/></name> <argument_list pos:line="54" pos:column="30">(<argument><expr><name pos:line="54" pos:column="31">body<pos:position pos:line="54" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="37">fpin<pos:position pos:line="54" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="43">fpout<pos:position pos:line="54" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="50">date<pos:position pos:line="54" pos:column="54"/></name></expr></argument>)<pos:position pos:line="54" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="56"/></condition><then pos:line="54" pos:column="56">
	<block type="pseudo"><return pos:line="55" pos:column="9">return <expr><operator pos:line="55" pos:column="16">-<pos:position pos:line="55" pos:column="17"/></operator><literal type="number" pos:line="55" pos:column="17">1<pos:position pos:line="55" pos:column="18"/></literal></expr>;<pos:position pos:line="55" pos:column="19"/></return></block></then></if>

<cpp:ifdef pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">ifdef<pos:position pos:line="57" pos:column="7"/></cpp:directive> <name pos:line="57" pos:column="8">DEBUG<pos:position pos:line="57" pos:column="13"/></name></cpp:ifdef>
      <block pos:line="58" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="59" pos:column="9">LOFF_T<pos:position pos:line="59" pos:column="15"/></name></type> <name pos:line="59" pos:column="16">fail<pos:position pos:line="59" pos:column="20"/></name> <init pos:line="59" pos:column="21">= <expr><operator pos:line="59" pos:column="23">(<pos:position pos:line="59" pos:column="24"/></operator><operator pos:line="59" pos:column="24">(<pos:position pos:line="59" pos:column="25"/></operator><call><name pos:line="59" pos:column="25">ftello<pos:position pos:line="59" pos:column="31"/></name> <argument_list pos:line="59" pos:column="32">(<argument><expr><name pos:line="59" pos:column="33">fpout<pos:position pos:line="59" pos:column="38"/></name></expr></argument>)<pos:position pos:line="59" pos:column="39"/></argument_list></call> <operator pos:line="59" pos:column="40">-<pos:position pos:line="59" pos:column="41"/></operator> <name pos:line="59" pos:column="42">new_offset<pos:position pos:line="59" pos:column="52"/></name><operator pos:line="59" pos:column="52">)<pos:position pos:line="59" pos:column="53"/></operator> <operator pos:line="59" pos:column="54">-<pos:position pos:line="59" pos:column="55"/></operator> <name pos:line="59" pos:column="56">new_length<pos:position pos:line="59" pos:column="66"/></name><operator pos:line="59" pos:column="66">)<pos:position pos:line="59" pos:column="67"/></operator></expr></init></decl>;<pos:position pos:line="59" pos:column="68"/></decl_stmt>

	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name pos:line="61" pos:column="13">fail<pos:position pos:line="61" pos:column="17"/></name></expr>)<pos:position pos:line="61" pos:column="18"/></condition><then pos:line="61" pos:column="18">
	<block pos:line="62" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="63" pos:column="11">mutt_error<pos:position pos:line="63" pos:column="21"/></name> <argument_list pos:line="63" pos:column="22">(<argument><expr><literal type="string" pos:line="63" pos:column="23">"The length calculation was wrong by %ld bytes"<pos:position pos:line="63" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="72">fail<pos:position pos:line="63" pos:column="76"/></name></expr></argument>)<pos:position pos:line="63" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="78"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="64" pos:column="11">new_length<pos:position pos:line="64" pos:column="21"/></name> <operator pos:line="64" pos:column="22">+=<pos:position pos:line="64" pos:column="24"/></operator> <name pos:line="64" pos:column="25">fail<pos:position pos:line="64" pos:column="29"/></name></expr>;<pos:position pos:line="64" pos:column="30"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="65" pos:column="11">mutt_sleep<pos:position pos:line="65" pos:column="21"/></name> <argument_list pos:line="65" pos:column="22">(<argument><expr><literal type="number" pos:line="65" pos:column="23">1<pos:position pos:line="65" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="66" pos:column="10"/></block></then></if>
      }<pos:position pos:line="67" pos:column="8"/></block>
<cpp:endif pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">endif<pos:position pos:line="68" pos:column="7"/></cpp:directive></cpp:endif>

      <comment type="block" pos:line="70" pos:column="7">/* Update original message if we are sync'ing a mailfolder */</comment> 
      <if pos:line="71" pos:column="7">if <condition pos:line="71" pos:column="10">(<expr><name pos:line="71" pos:column="11">flags<pos:position pos:line="71" pos:column="16"/></name> <operator pos:line="71" pos:column="17">&amp;<pos:position pos:line="71" pos:column="22"/></operator> <name pos:line="71" pos:column="19">MUTT_CM_UPDATE<pos:position pos:line="71" pos:column="33"/></name></expr>)<pos:position pos:line="71" pos:column="34"/></condition><then pos:line="71" pos:column="34">
      <block pos:line="72" pos:column="7">{
	<expr_stmt><expr><name><name pos:line="73" pos:column="9">hdr<pos:position pos:line="73" pos:column="12"/></name><operator pos:line="73" pos:column="12">-&gt;<pos:position pos:line="73" pos:column="17"/></operator><name pos:line="73" pos:column="14">attach_del<pos:position pos:line="73" pos:column="24"/></name></name> <operator pos:line="73" pos:column="25">=<pos:position pos:line="73" pos:column="26"/></operator> <literal type="number" pos:line="73" pos:column="27">0<pos:position pos:line="73" pos:column="28"/></literal></expr>;<pos:position pos:line="73" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="74" pos:column="9">hdr<pos:position pos:line="74" pos:column="12"/></name><operator pos:line="74" pos:column="12">-&gt;<pos:position pos:line="74" pos:column="17"/></operator><name pos:line="74" pos:column="14">lines<pos:position pos:line="74" pos:column="19"/></name></name> <operator pos:line="74" pos:column="20">=<pos:position pos:line="74" pos:column="21"/></operator> <name pos:line="74" pos:column="22">new_lines<pos:position pos:line="74" pos:column="31"/></name></expr>;<pos:position pos:line="74" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="75" pos:column="9">body<pos:position pos:line="75" pos:column="13"/></name><operator pos:line="75" pos:column="13">-&gt;<pos:position pos:line="75" pos:column="18"/></operator><name pos:line="75" pos:column="15">offset<pos:position pos:line="75" pos:column="21"/></name></name> <operator pos:line="75" pos:column="22">=<pos:position pos:line="75" pos:column="23"/></operator> <name pos:line="75" pos:column="24">new_offset<pos:position pos:line="75" pos:column="34"/></name></expr>;<pos:position pos:line="75" pos:column="35"/></expr_stmt>

	<comment type="block" pos:line="77" pos:column="9">/* update the total size of the mailbox to reflect this deletion */</comment>
	<expr_stmt><expr><name><name pos:line="78" pos:column="9">Context<pos:position pos:line="78" pos:column="16"/></name><operator pos:line="78" pos:column="16">-&gt;<pos:position pos:line="78" pos:column="21"/></operator><name pos:line="78" pos:column="18">size<pos:position pos:line="78" pos:column="22"/></name></name> <operator pos:line="78" pos:column="23">-=<pos:position pos:line="78" pos:column="25"/></operator> <name><name pos:line="78" pos:column="26">body<pos:position pos:line="78" pos:column="30"/></name><operator pos:line="78" pos:column="30">-&gt;<pos:position pos:line="78" pos:column="35"/></operator><name pos:line="78" pos:column="32">length<pos:position pos:line="78" pos:column="38"/></name></name> <operator pos:line="78" pos:column="39">-<pos:position pos:line="78" pos:column="40"/></operator> <name pos:line="78" pos:column="41">new_length<pos:position pos:line="78" pos:column="51"/></name></expr>;<pos:position pos:line="78" pos:column="52"/></expr_stmt>
	<comment type="block" pos:line="79" pos:column="9">/*
	 * if the message is visible, update the visible size of the mailbox
	 * as well.
	 */</comment>
	<if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><name><name pos:line="83" pos:column="13">Context<pos:position pos:line="83" pos:column="20"/></name><operator pos:line="83" pos:column="20">-&gt;<pos:position pos:line="83" pos:column="25"/></operator><name pos:line="83" pos:column="22">v2r<pos:position pos:line="83" pos:column="25"/></name><index pos:line="83" pos:column="25">[<expr><name><name pos:line="83" pos:column="26">hdr<pos:position pos:line="83" pos:column="29"/></name><operator pos:line="83" pos:column="29">-&gt;<pos:position pos:line="83" pos:column="34"/></operator><name pos:line="83" pos:column="31">msgno<pos:position pos:line="83" pos:column="36"/></name></name></expr>]<pos:position pos:line="83" pos:column="37"/></index></name> <operator pos:line="83" pos:column="38">!=<pos:position pos:line="83" pos:column="40"/></operator> <operator pos:line="83" pos:column="41">-<pos:position pos:line="83" pos:column="42"/></operator><literal type="number" pos:line="83" pos:column="42">1<pos:position pos:line="83" pos:column="43"/></literal></expr>)<pos:position pos:line="83" pos:column="44"/></condition><then pos:line="83" pos:column="44">
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="84" pos:column="11">Context<pos:position pos:line="84" pos:column="18"/></name><operator pos:line="84" pos:column="18">-&gt;<pos:position pos:line="84" pos:column="23"/></operator><name pos:line="84" pos:column="20">vsize<pos:position pos:line="84" pos:column="25"/></name></name> <operator pos:line="84" pos:column="26">-=<pos:position pos:line="84" pos:column="28"/></operator> <name><name pos:line="84" pos:column="29">body<pos:position pos:line="84" pos:column="33"/></name><operator pos:line="84" pos:column="33">-&gt;<pos:position pos:line="84" pos:column="38"/></operator><name pos:line="84" pos:column="35">length<pos:position pos:line="84" pos:column="41"/></name></name> <operator pos:line="84" pos:column="42">-<pos:position pos:line="84" pos:column="43"/></operator> <name pos:line="84" pos:column="44">new_length<pos:position pos:line="84" pos:column="54"/></name></expr>;<pos:position pos:line="84" pos:column="55"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="86" pos:column="9">body<pos:position pos:line="86" pos:column="13"/></name><operator pos:line="86" pos:column="13">-&gt;<pos:position pos:line="86" pos:column="18"/></operator><name pos:line="86" pos:column="15">length<pos:position pos:line="86" pos:column="21"/></name></name> <operator pos:line="86" pos:column="22">=<pos:position pos:line="86" pos:column="23"/></operator> <name pos:line="86" pos:column="24">new_length<pos:position pos:line="86" pos:column="34"/></name></expr>;<pos:position pos:line="86" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="87" pos:column="9">mutt_free_body<pos:position pos:line="87" pos:column="23"/></name> <argument_list pos:line="87" pos:column="24">(<argument><expr><operator pos:line="87" pos:column="25">&amp;<pos:position pos:line="87" pos:column="30"/></operator><name><name pos:line="87" pos:column="26">body<pos:position pos:line="87" pos:column="30"/></name><operator pos:line="87" pos:column="30">-&gt;<pos:position pos:line="87" pos:column="35"/></operator><name pos:line="87" pos:column="32">parts<pos:position pos:line="87" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="39"/></expr_stmt>
      }<pos:position pos:line="88" pos:column="8"/></block></then></if>

      <return pos:line="90" pos:column="7">return <expr><literal type="number" pos:line="90" pos:column="14">0<pos:position pos:line="90" pos:column="15"/></literal></expr>;<pos:position pos:line="90" pos:column="16"/></return>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="93" pos:column="5">if <condition pos:line="93" pos:column="8">(<expr><call><name pos:line="93" pos:column="9">mutt_copy_header<pos:position pos:line="93" pos:column="25"/></name> <argument_list pos:line="93" pos:column="26">(<argument><expr><name pos:line="93" pos:column="27">fpin<pos:position pos:line="93" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="33">hdr<pos:position pos:line="93" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="38">fpout<pos:position pos:line="93" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="45">chflags<pos:position pos:line="93" pos:column="52"/></name></expr></argument>,
			  <argument><expr><ternary><condition><expr><operator pos:line="94" pos:column="27">(<pos:position pos:line="94" pos:column="28"/></operator><name pos:line="94" pos:column="28">chflags<pos:position pos:line="94" pos:column="35"/></name> <operator pos:line="94" pos:column="36">&amp;<pos:position pos:line="94" pos:column="41"/></operator> <name pos:line="94" pos:column="38">CH_PREFIX<pos:position pos:line="94" pos:column="47"/></name><operator pos:line="94" pos:column="47">)<pos:position pos:line="94" pos:column="48"/></operator></expr> ?<pos:position pos:line="94" pos:column="50"/></condition><then pos:line="94" pos:column="50"> <expr><name pos:line="94" pos:column="51">prefix<pos:position pos:line="94" pos:column="57"/></name></expr> <pos:position pos:line="94" pos:column="58"/></then><else pos:line="94" pos:column="58">: <expr><name pos:line="94" pos:column="60">NULL<pos:position pos:line="94" pos:column="64"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="94" pos:column="65"/></argument_list></call> <operator pos:line="94" pos:column="66">==<pos:position pos:line="94" pos:column="68"/></operator> <operator pos:line="94" pos:column="69">-<pos:position pos:line="94" pos:column="70"/></operator><literal type="number" pos:line="94" pos:column="70">1<pos:position pos:line="94" pos:column="71"/></literal></expr>)<pos:position pos:line="94" pos:column="72"/></condition><then pos:line="94" pos:column="72">
      <block type="pseudo"><return pos:line="95" pos:column="7">return <expr><operator pos:line="95" pos:column="14">-<pos:position pos:line="95" pos:column="15"/></operator><literal type="number" pos:line="95" pos:column="15">1<pos:position pos:line="95" pos:column="16"/></literal></expr>;<pos:position pos:line="95" pos:column="17"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="97" pos:column="5">new_offset<pos:position pos:line="97" pos:column="15"/></name> <operator pos:line="97" pos:column="16">=<pos:position pos:line="97" pos:column="17"/></operator> <call><name pos:line="97" pos:column="18">ftello<pos:position pos:line="97" pos:column="24"/></name> <argument_list pos:line="97" pos:column="25">(<argument><expr><name pos:line="97" pos:column="26">fpout<pos:position pos:line="97" pos:column="31"/></name></expr></argument>)<pos:position pos:line="97" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="98" pos:column="4"/></block></then></if>

  <if pos:line="100" pos:column="3">if <condition pos:line="100" pos:column="6">(<expr><name pos:line="100" pos:column="7">flags<pos:position pos:line="100" pos:column="12"/></name> <operator pos:line="100" pos:column="13">&amp;<pos:position pos:line="100" pos:column="18"/></operator> <name pos:line="100" pos:column="15">MUTT_CM_DECODE<pos:position pos:line="100" pos:column="29"/></name></expr>)<pos:position pos:line="100" pos:column="30"/></condition><then pos:line="100" pos:column="30">
  <block pos:line="101" pos:column="3">{
    <comment type="block" pos:line="102" pos:column="5">/* now make a text/plain version of the message */</comment>
    <expr_stmt><expr><call><name pos:line="103" pos:column="5">memset<pos:position pos:line="103" pos:column="11"/></name> <argument_list pos:line="103" pos:column="12">(<argument><expr><operator pos:line="103" pos:column="13">&amp;<pos:position pos:line="103" pos:column="18"/></operator><name pos:line="103" pos:column="14">s<pos:position pos:line="103" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="103" pos:column="17">0<pos:position pos:line="103" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="103" pos:column="20">sizeof <argument_list pos:line="103" pos:column="27">(<argument><expr><name pos:line="103" pos:column="28">STATE<pos:position pos:line="103" pos:column="33"/></name></expr></argument>)<pos:position pos:line="103" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="103" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="104" pos:column="5">s<pos:position pos:line="104" pos:column="6"/></name><operator pos:line="104" pos:column="6">.<pos:position pos:line="104" pos:column="7"/></operator><name pos:line="104" pos:column="7">fpin<pos:position pos:line="104" pos:column="11"/></name></name> <operator pos:line="104" pos:column="12">=<pos:position pos:line="104" pos:column="13"/></operator> <name pos:line="104" pos:column="14">fpin<pos:position pos:line="104" pos:column="18"/></name></expr>;<pos:position pos:line="104" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="105" pos:column="5">s<pos:position pos:line="105" pos:column="6"/></name><operator pos:line="105" pos:column="6">.<pos:position pos:line="105" pos:column="7"/></operator><name pos:line="105" pos:column="7">fpout<pos:position pos:line="105" pos:column="12"/></name></name> <operator pos:line="105" pos:column="13">=<pos:position pos:line="105" pos:column="14"/></operator> <name pos:line="105" pos:column="15">fpout<pos:position pos:line="105" pos:column="20"/></name></expr>;<pos:position pos:line="105" pos:column="21"/></expr_stmt>
    <if pos:line="106" pos:column="5">if <condition pos:line="106" pos:column="8">(<expr><name pos:line="106" pos:column="9">flags<pos:position pos:line="106" pos:column="14"/></name> <operator pos:line="106" pos:column="15">&amp;<pos:position pos:line="106" pos:column="20"/></operator> <name pos:line="106" pos:column="17">MUTT_CM_PREFIX<pos:position pos:line="106" pos:column="31"/></name></expr>)<pos:position pos:line="106" pos:column="32"/></condition><then pos:line="106" pos:column="32">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="107" pos:column="7">s<pos:position pos:line="107" pos:column="8"/></name><operator pos:line="107" pos:column="8">.<pos:position pos:line="107" pos:column="9"/></operator><name pos:line="107" pos:column="9">prefix<pos:position pos:line="107" pos:column="15"/></name></name> <operator pos:line="107" pos:column="16">=<pos:position pos:line="107" pos:column="17"/></operator> <name pos:line="107" pos:column="18">prefix<pos:position pos:line="107" pos:column="24"/></name></expr>;<pos:position pos:line="107" pos:column="25"/></expr_stmt></block></then></if>
    <if pos:line="108" pos:column="5">if <condition pos:line="108" pos:column="8">(<expr><name pos:line="108" pos:column="9">flags<pos:position pos:line="108" pos:column="14"/></name> <operator pos:line="108" pos:column="15">&amp;<pos:position pos:line="108" pos:column="20"/></operator> <name pos:line="108" pos:column="17">MUTT_CM_DISPLAY<pos:position pos:line="108" pos:column="32"/></name></expr>)<pos:position pos:line="108" pos:column="33"/></condition><then pos:line="108" pos:column="33">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="109" pos:column="7">s<pos:position pos:line="109" pos:column="8"/></name><operator pos:line="109" pos:column="8">.<pos:position pos:line="109" pos:column="9"/></operator><name pos:line="109" pos:column="9">flags<pos:position pos:line="109" pos:column="14"/></name></name> <operator pos:line="109" pos:column="15">|=<pos:position pos:line="109" pos:column="17"/></operator> <name pos:line="109" pos:column="18">MUTT_DISPLAY<pos:position pos:line="109" pos:column="30"/></name></expr>;<pos:position pos:line="109" pos:column="31"/></expr_stmt></block></then></if>
    <if pos:line="110" pos:column="5">if <condition pos:line="110" pos:column="8">(<expr><name pos:line="110" pos:column="9">flags<pos:position pos:line="110" pos:column="14"/></name> <operator pos:line="110" pos:column="15">&amp;<pos:position pos:line="110" pos:column="20"/></operator> <name pos:line="110" pos:column="17">MUTT_CM_PRINTING<pos:position pos:line="110" pos:column="33"/></name></expr>)<pos:position pos:line="110" pos:column="34"/></condition><then pos:line="110" pos:column="34">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="111" pos:column="7">s<pos:position pos:line="111" pos:column="8"/></name><operator pos:line="111" pos:column="8">.<pos:position pos:line="111" pos:column="9"/></operator><name pos:line="111" pos:column="9">flags<pos:position pos:line="111" pos:column="14"/></name></name> <operator pos:line="111" pos:column="15">|=<pos:position pos:line="111" pos:column="17"/></operator> <name pos:line="111" pos:column="18">MUTT_PRINTING<pos:position pos:line="111" pos:column="31"/></name></expr>;<pos:position pos:line="111" pos:column="32"/></expr_stmt></block></then></if>
    <if pos:line="112" pos:column="5">if <condition pos:line="112" pos:column="8">(<expr><name pos:line="112" pos:column="9">flags<pos:position pos:line="112" pos:column="14"/></name> <operator pos:line="112" pos:column="15">&amp;<pos:position pos:line="112" pos:column="20"/></operator> <name pos:line="112" pos:column="17">MUTT_CM_WEED<pos:position pos:line="112" pos:column="29"/></name></expr>)<pos:position pos:line="112" pos:column="30"/></condition><then pos:line="112" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="113" pos:column="7">s<pos:position pos:line="113" pos:column="8"/></name><operator pos:line="113" pos:column="8">.<pos:position pos:line="113" pos:column="9"/></operator><name pos:line="113" pos:column="9">flags<pos:position pos:line="113" pos:column="14"/></name></name> <operator pos:line="113" pos:column="15">|=<pos:position pos:line="113" pos:column="17"/></operator> <name pos:line="113" pos:column="18">MUTT_WEED<pos:position pos:line="113" pos:column="27"/></name></expr>;<pos:position pos:line="113" pos:column="28"/></expr_stmt></block></then></if>
    <if pos:line="114" pos:column="5">if <condition pos:line="114" pos:column="8">(<expr><name pos:line="114" pos:column="9">flags<pos:position pos:line="114" pos:column="14"/></name> <operator pos:line="114" pos:column="15">&amp;<pos:position pos:line="114" pos:column="20"/></operator> <name pos:line="114" pos:column="17">MUTT_CM_CHARCONV<pos:position pos:line="114" pos:column="33"/></name></expr>)<pos:position pos:line="114" pos:column="34"/></condition><then pos:line="114" pos:column="34">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="115" pos:column="7">s<pos:position pos:line="115" pos:column="8"/></name><operator pos:line="115" pos:column="8">.<pos:position pos:line="115" pos:column="9"/></operator><name pos:line="115" pos:column="9">flags<pos:position pos:line="115" pos:column="14"/></name></name> <operator pos:line="115" pos:column="15">|=<pos:position pos:line="115" pos:column="17"/></operator> <name pos:line="115" pos:column="18">MUTT_CHARCONV<pos:position pos:line="115" pos:column="31"/></name></expr>;<pos:position pos:line="115" pos:column="32"/></expr_stmt></block></then></if>
    <if pos:line="116" pos:column="5">if <condition pos:line="116" pos:column="8">(<expr><name pos:line="116" pos:column="9">flags<pos:position pos:line="116" pos:column="14"/></name> <operator pos:line="116" pos:column="15">&amp;<pos:position pos:line="116" pos:column="20"/></operator> <name pos:line="116" pos:column="17">MUTT_CM_REPLYING<pos:position pos:line="116" pos:column="33"/></name></expr>)<pos:position pos:line="116" pos:column="34"/></condition><then pos:line="116" pos:column="34">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="117" pos:column="7">s<pos:position pos:line="117" pos:column="8"/></name><operator pos:line="117" pos:column="8">.<pos:position pos:line="117" pos:column="9"/></operator><name pos:line="117" pos:column="9">flags<pos:position pos:line="117" pos:column="14"/></name></name> <operator pos:line="117" pos:column="15">|=<pos:position pos:line="117" pos:column="17"/></operator> <name pos:line="117" pos:column="18">MUTT_REPLYING<pos:position pos:line="117" pos:column="31"/></name></expr>;<pos:position pos:line="117" pos:column="32"/></expr_stmt></block></then></if>
    
    <if pos:line="119" pos:column="5">if <condition pos:line="119" pos:column="8">(<expr><name pos:line="119" pos:column="9">WithCrypto<pos:position pos:line="119" pos:column="19"/></name> <operator pos:line="119" pos:column="20">&amp;&amp;<pos:position pos:line="119" pos:column="30"/></operator> <name pos:line="119" pos:column="23">flags<pos:position pos:line="119" pos:column="28"/></name> <operator pos:line="119" pos:column="29">&amp;<pos:position pos:line="119" pos:column="34"/></operator> <name pos:line="119" pos:column="31">MUTT_CM_VERIFY<pos:position pos:line="119" pos:column="45"/></name></expr>)<pos:position pos:line="119" pos:column="46"/></condition><then pos:line="119" pos:column="46">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="120" pos:column="7">s<pos:position pos:line="120" pos:column="8"/></name><operator pos:line="120" pos:column="8">.<pos:position pos:line="120" pos:column="9"/></operator><name pos:line="120" pos:column="9">flags<pos:position pos:line="120" pos:column="14"/></name></name> <operator pos:line="120" pos:column="15">|=<pos:position pos:line="120" pos:column="17"/></operator> <name pos:line="120" pos:column="18">MUTT_VERIFY<pos:position pos:line="120" pos:column="29"/></name></expr>;<pos:position pos:line="120" pos:column="30"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="122" pos:column="5">rc<pos:position pos:line="122" pos:column="7"/></name> <operator pos:line="122" pos:column="8">=<pos:position pos:line="122" pos:column="9"/></operator> <call><name pos:line="122" pos:column="10">mutt_body_handler<pos:position pos:line="122" pos:column="27"/></name> <argument_list pos:line="122" pos:column="28">(<argument><expr><name pos:line="122" pos:column="29">body<pos:position pos:line="122" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="122" pos:column="35">&amp;<pos:position pos:line="122" pos:column="40"/></operator><name pos:line="122" pos:column="36">s<pos:position pos:line="122" pos:column="37"/></name></expr></argument>)<pos:position pos:line="122" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="123" pos:column="4"/></block></then>
  <elseif pos:line="124" pos:column="3">else <if pos:line="124" pos:column="8">if <condition pos:line="124" pos:column="11">(<expr><name pos:line="124" pos:column="12">WithCrypto<pos:position pos:line="124" pos:column="22"/></name>
           <operator pos:line="125" pos:column="12">&amp;&amp;<pos:position pos:line="125" pos:column="22"/></operator> <operator pos:line="125" pos:column="15">(<pos:position pos:line="125" pos:column="16"/></operator><name pos:line="125" pos:column="16">flags<pos:position pos:line="125" pos:column="21"/></name> <operator pos:line="125" pos:column="22">&amp;<pos:position pos:line="125" pos:column="27"/></operator> <name pos:line="125" pos:column="24">MUTT_CM_DECODE_CRYPT<pos:position pos:line="125" pos:column="44"/></name><operator pos:line="125" pos:column="44">)<pos:position pos:line="125" pos:column="45"/></operator> <operator pos:line="125" pos:column="46">&amp;&amp;<pos:position pos:line="125" pos:column="56"/></operator> <operator pos:line="125" pos:column="49">(<pos:position pos:line="125" pos:column="50"/></operator><name><name pos:line="125" pos:column="50">hdr<pos:position pos:line="125" pos:column="53"/></name><operator pos:line="125" pos:column="53">-&gt;<pos:position pos:line="125" pos:column="58"/></operator><name pos:line="125" pos:column="55">security<pos:position pos:line="125" pos:column="63"/></name></name> <operator pos:line="125" pos:column="64">&amp;<pos:position pos:line="125" pos:column="69"/></operator> <name pos:line="125" pos:column="66">ENCRYPT<pos:position pos:line="125" pos:column="73"/></name><operator pos:line="125" pos:column="73">)<pos:position pos:line="125" pos:column="74"/></operator></expr>)<pos:position pos:line="125" pos:column="75"/></condition><then pos:line="125" pos:column="75">
  <block pos:line="126" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="127" pos:column="5">BODY<pos:position pos:line="127" pos:column="9"/></name> <modifier pos:line="127" pos:column="10">*<pos:position pos:line="127" pos:column="11"/></modifier></type><name pos:line="127" pos:column="11">cur<pos:position pos:line="127" pos:column="14"/></name> <init pos:line="127" pos:column="15">= <expr><name pos:line="127" pos:column="17">NULL<pos:position pos:line="127" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="127" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="128" pos:column="5">FILE<pos:position pos:line="128" pos:column="9"/></name> <modifier pos:line="128" pos:column="10">*<pos:position pos:line="128" pos:column="11"/></modifier></type><name pos:line="128" pos:column="11">fp<pos:position pos:line="128" pos:column="13"/></name></decl>;<pos:position pos:line="128" pos:column="14"/></decl_stmt>

    <if pos:line="130" pos:column="5">if <condition pos:line="130" pos:column="8">(<expr><operator pos:line="130" pos:column="9">(<pos:position pos:line="130" pos:column="10"/></operator><name pos:line="130" pos:column="10">WithCrypto<pos:position pos:line="130" pos:column="20"/></name> <operator pos:line="130" pos:column="21">&amp;<pos:position pos:line="130" pos:column="26"/></operator> <name pos:line="130" pos:column="23">APPLICATION_PGP<pos:position pos:line="130" pos:column="38"/></name><operator pos:line="130" pos:column="38">)<pos:position pos:line="130" pos:column="39"/></operator>
        <operator pos:line="131" pos:column="9">&amp;&amp;<pos:position pos:line="131" pos:column="19"/></operator> <operator pos:line="131" pos:column="12">(<pos:position pos:line="131" pos:column="13"/></operator><name pos:line="131" pos:column="13">flags<pos:position pos:line="131" pos:column="18"/></name> <operator pos:line="131" pos:column="19">&amp;<pos:position pos:line="131" pos:column="24"/></operator> <name pos:line="131" pos:column="21">MUTT_CM_DECODE_PGP<pos:position pos:line="131" pos:column="39"/></name><operator pos:line="131" pos:column="39">)<pos:position pos:line="131" pos:column="40"/></operator> <operator pos:line="131" pos:column="41">&amp;&amp;<pos:position pos:line="131" pos:column="51"/></operator> <operator pos:line="131" pos:column="44">(<pos:position pos:line="131" pos:column="45"/></operator><name><name pos:line="131" pos:column="45">hdr<pos:position pos:line="131" pos:column="48"/></name><operator pos:line="131" pos:column="48">-&gt;<pos:position pos:line="131" pos:column="53"/></operator><name pos:line="131" pos:column="50">security<pos:position pos:line="131" pos:column="58"/></name></name> <operator pos:line="131" pos:column="59">&amp;<pos:position pos:line="131" pos:column="64"/></operator> <name pos:line="131" pos:column="61">APPLICATION_PGP<pos:position pos:line="131" pos:column="76"/></name><operator pos:line="131" pos:column="76">)<pos:position pos:line="131" pos:column="77"/></operator> <operator pos:line="131" pos:column="78">&amp;&amp;<pos:position pos:line="131" pos:column="88"/></operator>
	<name><name pos:line="132" pos:column="9">hdr<pos:position pos:line="132" pos:column="12"/></name><operator pos:line="132" pos:column="12">-&gt;<pos:position pos:line="132" pos:column="17"/></operator><name pos:line="132" pos:column="14">content<pos:position pos:line="132" pos:column="21"/></name><operator pos:line="132" pos:column="21">-&gt;<pos:position pos:line="132" pos:column="26"/></operator><name pos:line="132" pos:column="23">type<pos:position pos:line="132" pos:column="27"/></name></name> <operator pos:line="132" pos:column="28">==<pos:position pos:line="132" pos:column="30"/></operator> <name pos:line="132" pos:column="31">TYPEMULTIPART<pos:position pos:line="132" pos:column="44"/></name></expr>)<pos:position pos:line="132" pos:column="45"/></condition><then pos:line="132" pos:column="45">
    <block pos:line="133" pos:column="5">{
      <if pos:line="134" pos:column="7">if <condition pos:line="134" pos:column="10">(<expr><call><name pos:line="134" pos:column="11">crypt_pgp_decrypt_mime<pos:position pos:line="134" pos:column="33"/></name> <argument_list pos:line="134" pos:column="34">(<argument><expr><name pos:line="134" pos:column="35">fpin<pos:position pos:line="134" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="134" pos:column="41">&amp;<pos:position pos:line="134" pos:column="46"/></operator><name pos:line="134" pos:column="42">fp<pos:position pos:line="134" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="134" pos:column="46">hdr<pos:position pos:line="134" pos:column="49"/></name><operator pos:line="134" pos:column="49">-&gt;<pos:position pos:line="134" pos:column="54"/></operator><name pos:line="134" pos:column="51">content<pos:position pos:line="134" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="134" pos:column="60">&amp;<pos:position pos:line="134" pos:column="65"/></operator><name pos:line="134" pos:column="61">cur<pos:position pos:line="134" pos:column="64"/></name></expr></argument>)<pos:position pos:line="134" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="134" pos:column="66"/></condition><then pos:line="134" pos:column="66">
	<block type="pseudo"><return pos:line="135" pos:column="9">return <expr><operator pos:line="135" pos:column="16">(<pos:position pos:line="135" pos:column="17"/></operator><operator pos:line="135" pos:column="17">-<pos:position pos:line="135" pos:column="18"/></operator><literal type="number" pos:line="135" pos:column="18">1<pos:position pos:line="135" pos:column="19"/></literal><operator pos:line="135" pos:column="19">)<pos:position pos:line="135" pos:column="20"/></operator></expr>;<pos:position pos:line="135" pos:column="21"/></return></block></then></if>
      <expr_stmt><expr><call><name pos:line="136" pos:column="7">fputs<pos:position pos:line="136" pos:column="12"/></name> <argument_list pos:line="136" pos:column="13">(<argument><expr><literal type="string" pos:line="136" pos:column="14">"MIME-Version: 1.0\n"<pos:position pos:line="136" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="136" pos:column="37">fpout<pos:position pos:line="136" pos:column="42"/></name></expr></argument>)<pos:position pos:line="136" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="137" pos:column="6"/></block></then></if>

    <if pos:line="139" pos:column="5">if <condition pos:line="139" pos:column="8">(<expr><operator pos:line="139" pos:column="9">(<pos:position pos:line="139" pos:column="10"/></operator><name pos:line="139" pos:column="10">WithCrypto<pos:position pos:line="139" pos:column="20"/></name> <operator pos:line="139" pos:column="21">&amp;<pos:position pos:line="139" pos:column="26"/></operator> <name pos:line="139" pos:column="23">APPLICATION_SMIME<pos:position pos:line="139" pos:column="40"/></name><operator pos:line="139" pos:column="40">)<pos:position pos:line="139" pos:column="41"/></operator>
        <operator pos:line="140" pos:column="9">&amp;&amp;<pos:position pos:line="140" pos:column="19"/></operator> <operator pos:line="140" pos:column="12">(<pos:position pos:line="140" pos:column="13"/></operator><name pos:line="140" pos:column="13">flags<pos:position pos:line="140" pos:column="18"/></name> <operator pos:line="140" pos:column="19">&amp;<pos:position pos:line="140" pos:column="24"/></operator> <name pos:line="140" pos:column="21">MUTT_CM_DECODE_SMIME<pos:position pos:line="140" pos:column="41"/></name><operator pos:line="140" pos:column="41">)<pos:position pos:line="140" pos:column="42"/></operator> <operator pos:line="140" pos:column="43">&amp;&amp;<pos:position pos:line="140" pos:column="53"/></operator> <operator pos:line="140" pos:column="46">(<pos:position pos:line="140" pos:column="47"/></operator><name><name pos:line="140" pos:column="47">hdr<pos:position pos:line="140" pos:column="50"/></name><operator pos:line="140" pos:column="50">-&gt;<pos:position pos:line="140" pos:column="55"/></operator><name pos:line="140" pos:column="52">security<pos:position pos:line="140" pos:column="60"/></name></name> <operator pos:line="140" pos:column="61">&amp;<pos:position pos:line="140" pos:column="66"/></operator> <name pos:line="140" pos:column="63">APPLICATION_SMIME<pos:position pos:line="140" pos:column="80"/></name><operator pos:line="140" pos:column="80">)<pos:position pos:line="140" pos:column="81"/></operator>
	     <operator pos:line="141" pos:column="14">&amp;&amp;<pos:position pos:line="141" pos:column="24"/></operator> <name><name pos:line="141" pos:column="17">hdr<pos:position pos:line="141" pos:column="20"/></name><operator pos:line="141" pos:column="20">-&gt;<pos:position pos:line="141" pos:column="25"/></operator><name pos:line="141" pos:column="22">content<pos:position pos:line="141" pos:column="29"/></name><operator pos:line="141" pos:column="29">-&gt;<pos:position pos:line="141" pos:column="34"/></operator><name pos:line="141" pos:column="31">type<pos:position pos:line="141" pos:column="35"/></name></name> <operator pos:line="141" pos:column="36">==<pos:position pos:line="141" pos:column="38"/></operator> <name pos:line="141" pos:column="39">TYPEAPPLICATION<pos:position pos:line="141" pos:column="54"/></name></expr>)<pos:position pos:line="141" pos:column="55"/></condition><then pos:line="141" pos:column="55">
    <block pos:line="142" pos:column="5">{
      <if pos:line="143" pos:column="7">if <condition pos:line="143" pos:column="10">(<expr><call><name pos:line="143" pos:column="11">crypt_smime_decrypt_mime<pos:position pos:line="143" pos:column="35"/></name> <argument_list pos:line="143" pos:column="36">(<argument><expr><name pos:line="143" pos:column="37">fpin<pos:position pos:line="143" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="143" pos:column="43">&amp;<pos:position pos:line="143" pos:column="48"/></operator><name pos:line="143" pos:column="44">fp<pos:position pos:line="143" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="143" pos:column="48">hdr<pos:position pos:line="143" pos:column="51"/></name><operator pos:line="143" pos:column="51">-&gt;<pos:position pos:line="143" pos:column="56"/></operator><name pos:line="143" pos:column="53">content<pos:position pos:line="143" pos:column="60"/></name></name></expr></argument>, <argument><expr><operator pos:line="143" pos:column="62">&amp;<pos:position pos:line="143" pos:column="67"/></operator><name pos:line="143" pos:column="63">cur<pos:position pos:line="143" pos:column="66"/></name></expr></argument>)<pos:position pos:line="143" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="143" pos:column="68"/></condition><then pos:line="143" pos:column="68">
	<block type="pseudo"><return pos:line="144" pos:column="9">return <expr><operator pos:line="144" pos:column="16">(<pos:position pos:line="144" pos:column="17"/></operator><operator pos:line="144" pos:column="17">-<pos:position pos:line="144" pos:column="18"/></operator><literal type="number" pos:line="144" pos:column="18">1<pos:position pos:line="144" pos:column="19"/></literal><operator pos:line="144" pos:column="19">)<pos:position pos:line="144" pos:column="20"/></operator></expr>;<pos:position pos:line="144" pos:column="21"/></return></block></then></if>
    }<pos:position pos:line="145" pos:column="6"/></block></then></if>

    <if pos:line="147" pos:column="5">if <condition pos:line="147" pos:column="8">(<expr><operator pos:line="147" pos:column="9">!<pos:position pos:line="147" pos:column="10"/></operator><name pos:line="147" pos:column="10">cur<pos:position pos:line="147" pos:column="13"/></name></expr>)<pos:position pos:line="147" pos:column="14"/></condition><then pos:line="147" pos:column="14">
    <block pos:line="148" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="149" pos:column="7">mutt_error<pos:position pos:line="149" pos:column="17"/></name> <argument_list pos:line="149" pos:column="18">(<argument><expr><call><name pos:line="149" pos:column="19">_<pos:position pos:line="149" pos:column="20"/></name><argument_list pos:line="149" pos:column="20">(<argument><expr><literal type="string" pos:line="149" pos:column="21">"No decryption engine available for message"<pos:position pos:line="149" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="149" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="149" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="68"/></expr_stmt>
      <return pos:line="150" pos:column="7">return <expr><operator pos:line="150" pos:column="14">-<pos:position pos:line="150" pos:column="15"/></operator><literal type="number" pos:line="150" pos:column="15">1<pos:position pos:line="150" pos:column="16"/></literal></expr>;<pos:position pos:line="150" pos:column="17"/></return>
    }<pos:position pos:line="151" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="153" pos:column="5">mutt_write_mime_header<pos:position pos:line="153" pos:column="27"/></name> <argument_list pos:line="153" pos:column="28">(<argument><expr><name pos:line="153" pos:column="29">cur<pos:position pos:line="153" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="34">fpout<pos:position pos:line="153" pos:column="39"/></name></expr></argument>)<pos:position pos:line="153" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="154" pos:column="5">fputc<pos:position pos:line="154" pos:column="10"/></name> <argument_list pos:line="154" pos:column="11">(<argument><expr><literal type="char" pos:line="154" pos:column="12">'\n'<pos:position pos:line="154" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="154" pos:column="18">fpout<pos:position pos:line="154" pos:column="23"/></name></expr></argument>)<pos:position pos:line="154" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="156" pos:column="5">fseeko<pos:position pos:line="156" pos:column="11"/></name> <argument_list pos:line="156" pos:column="12">(<argument><expr><name pos:line="156" pos:column="13">fp<pos:position pos:line="156" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="156" pos:column="17">cur<pos:position pos:line="156" pos:column="20"/></name><operator pos:line="156" pos:column="20">-&gt;<pos:position pos:line="156" pos:column="25"/></operator><name pos:line="156" pos:column="22">offset<pos:position pos:line="156" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="156" pos:column="30">0<pos:position pos:line="156" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="33"/></expr_stmt>
    <if pos:line="157" pos:column="5">if <condition pos:line="157" pos:column="8">(<expr><call><name pos:line="157" pos:column="9">mutt_copy_bytes<pos:position pos:line="157" pos:column="24"/></name> <argument_list pos:line="157" pos:column="25">(<argument><expr><name pos:line="157" pos:column="26">fp<pos:position pos:line="157" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="30">fpout<pos:position pos:line="157" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="157" pos:column="37">cur<pos:position pos:line="157" pos:column="40"/></name><operator pos:line="157" pos:column="40">-&gt;<pos:position pos:line="157" pos:column="45"/></operator><name pos:line="157" pos:column="42">length<pos:position pos:line="157" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="157" pos:column="49"/></argument_list></call> <operator pos:line="157" pos:column="50">==<pos:position pos:line="157" pos:column="52"/></operator> <operator pos:line="157" pos:column="53">-<pos:position pos:line="157" pos:column="54"/></operator><literal type="number" pos:line="157" pos:column="54">1<pos:position pos:line="157" pos:column="55"/></literal></expr>)<pos:position pos:line="157" pos:column="56"/></condition><then pos:line="157" pos:column="56">
    <block pos:line="158" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="159" pos:column="7">safe_fclose<pos:position pos:line="159" pos:column="18"/></name> <argument_list pos:line="159" pos:column="19">(<argument><expr><operator pos:line="159" pos:column="20">&amp;<pos:position pos:line="159" pos:column="25"/></operator><name pos:line="159" pos:column="21">fp<pos:position pos:line="159" pos:column="23"/></name></expr></argument>)<pos:position pos:line="159" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="160" pos:column="7">mutt_free_body<pos:position pos:line="160" pos:column="21"/></name> <argument_list pos:line="160" pos:column="22">(<argument><expr><operator pos:line="160" pos:column="23">&amp;<pos:position pos:line="160" pos:column="28"/></operator><name pos:line="160" pos:column="24">cur<pos:position pos:line="160" pos:column="27"/></name></expr></argument>)<pos:position pos:line="160" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="29"/></expr_stmt>
      <return pos:line="161" pos:column="7">return <expr><operator pos:line="161" pos:column="14">(<pos:position pos:line="161" pos:column="15"/></operator><operator pos:line="161" pos:column="15">-<pos:position pos:line="161" pos:column="16"/></operator><literal type="number" pos:line="161" pos:column="16">1<pos:position pos:line="161" pos:column="17"/></literal><operator pos:line="161" pos:column="17">)<pos:position pos:line="161" pos:column="18"/></operator></expr>;<pos:position pos:line="161" pos:column="19"/></return>
    }<pos:position pos:line="162" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="163" pos:column="5">mutt_free_body<pos:position pos:line="163" pos:column="19"/></name> <argument_list pos:line="163" pos:column="20">(<argument><expr><operator pos:line="163" pos:column="21">&amp;<pos:position pos:line="163" pos:column="26"/></operator><name pos:line="163" pos:column="22">cur<pos:position pos:line="163" pos:column="25"/></name></expr></argument>)<pos:position pos:line="163" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="164" pos:column="5">safe_fclose<pos:position pos:line="164" pos:column="16"/></name> <argument_list pos:line="164" pos:column="17">(<argument><expr><operator pos:line="164" pos:column="18">&amp;<pos:position pos:line="164" pos:column="23"/></operator><name pos:line="164" pos:column="19">fp<pos:position pos:line="164" pos:column="21"/></name></expr></argument>)<pos:position pos:line="164" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="165" pos:column="4"/></block></then></if></elseif>
  <else pos:line="166" pos:column="3">else
  <block pos:line="167" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="168" pos:column="5">fseeko<pos:position pos:line="168" pos:column="11"/></name> <argument_list pos:line="168" pos:column="12">(<argument><expr><name pos:line="168" pos:column="13">fpin<pos:position pos:line="168" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="168" pos:column="19">body<pos:position pos:line="168" pos:column="23"/></name><operator pos:line="168" pos:column="23">-&gt;<pos:position pos:line="168" pos:column="28"/></operator><name pos:line="168" pos:column="25">offset<pos:position pos:line="168" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="168" pos:column="33">0<pos:position pos:line="168" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="168" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="36"/></expr_stmt>
    <if pos:line="169" pos:column="5">if <condition pos:line="169" pos:column="8">(<expr><name pos:line="169" pos:column="9">flags<pos:position pos:line="169" pos:column="14"/></name> <operator pos:line="169" pos:column="15">&amp;<pos:position pos:line="169" pos:column="20"/></operator> <name pos:line="169" pos:column="17">MUTT_CM_PREFIX<pos:position pos:line="169" pos:column="31"/></name></expr>)<pos:position pos:line="169" pos:column="32"/></condition><then pos:line="169" pos:column="32">
    <block pos:line="170" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="171" pos:column="7">int<pos:position pos:line="171" pos:column="10"/></name></type> <name pos:line="171" pos:column="11">c<pos:position pos:line="171" pos:column="12"/></name></decl>;<pos:position pos:line="171" pos:column="13"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="172" pos:column="7">size_t<pos:position pos:line="172" pos:column="13"/></name></type> <name pos:line="172" pos:column="14">bytes<pos:position pos:line="172" pos:column="19"/></name> <init pos:line="172" pos:column="20">= <expr><name><name pos:line="172" pos:column="22">body<pos:position pos:line="172" pos:column="26"/></name><operator pos:line="172" pos:column="26">-&gt;<pos:position pos:line="172" pos:column="31"/></operator><name pos:line="172" pos:column="28">length<pos:position pos:line="172" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="172" pos:column="35"/></decl_stmt>
      
      <expr_stmt><expr><call><name pos:line="174" pos:column="7">fputs<pos:position pos:line="174" pos:column="12"/></name><argument_list pos:line="174" pos:column="12">(<argument><expr><name pos:line="174" pos:column="13">prefix<pos:position pos:line="174" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="21">fpout<pos:position pos:line="174" pos:column="26"/></name></expr></argument>)<pos:position pos:line="174" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="28"/></expr_stmt>
      
      <while pos:line="176" pos:column="7">while<condition pos:line="176" pos:column="12">(<expr><operator pos:line="176" pos:column="13">(<pos:position pos:line="176" pos:column="14"/></operator><name pos:line="176" pos:column="14">c<pos:position pos:line="176" pos:column="15"/></name> <operator pos:line="176" pos:column="16">=<pos:position pos:line="176" pos:column="17"/></operator> <call><name pos:line="176" pos:column="18">fgetc<pos:position pos:line="176" pos:column="23"/></name><argument_list pos:line="176" pos:column="23">(<argument><expr><name pos:line="176" pos:column="24">fpin<pos:position pos:line="176" pos:column="28"/></name></expr></argument>)<pos:position pos:line="176" pos:column="29"/></argument_list></call><operator pos:line="176" pos:column="29">)<pos:position pos:line="176" pos:column="30"/></operator> <operator pos:line="176" pos:column="31">!=<pos:position pos:line="176" pos:column="33"/></operator> <name pos:line="176" pos:column="34">EOF<pos:position pos:line="176" pos:column="37"/></name> <operator pos:line="176" pos:column="38">&amp;&amp;<pos:position pos:line="176" pos:column="48"/></operator> <name pos:line="176" pos:column="41">bytes<pos:position pos:line="176" pos:column="46"/></name><operator pos:line="176" pos:column="46">--<pos:position pos:line="176" pos:column="48"/></operator></expr>)<pos:position pos:line="176" pos:column="49"/></condition>
      <block pos:line="177" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="178" pos:column="9">fputc<pos:position pos:line="178" pos:column="14"/></name><argument_list pos:line="178" pos:column="14">(<argument><expr><name pos:line="178" pos:column="15">c<pos:position pos:line="178" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="18">fpout<pos:position pos:line="178" pos:column="23"/></name></expr></argument>)<pos:position pos:line="178" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="25"/></expr_stmt>
	<if pos:line="179" pos:column="9">if<condition pos:line="179" pos:column="11">(<expr><name pos:line="179" pos:column="12">c<pos:position pos:line="179" pos:column="13"/></name> <operator pos:line="179" pos:column="14">==<pos:position pos:line="179" pos:column="16"/></operator> <literal type="char" pos:line="179" pos:column="17">'\n'<pos:position pos:line="179" pos:column="21"/></literal></expr>)<pos:position pos:line="179" pos:column="22"/></condition><then pos:line="179" pos:column="22">
	<block pos:line="180" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="181" pos:column="11">fputs<pos:position pos:line="181" pos:column="16"/></name><argument_list pos:line="181" pos:column="16">(<argument><expr><name pos:line="181" pos:column="17">prefix<pos:position pos:line="181" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="25">fpout<pos:position pos:line="181" pos:column="30"/></name></expr></argument>)<pos:position pos:line="181" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="182" pos:column="10"/></block></then></if>
      }<pos:position pos:line="183" pos:column="8"/></block></while> 
    }<pos:position pos:line="184" pos:column="6"/></block></then>
    <elseif pos:line="185" pos:column="5">else <if pos:line="185" pos:column="10">if <condition pos:line="185" pos:column="13">(<expr><call><name pos:line="185" pos:column="14">mutt_copy_bytes<pos:position pos:line="185" pos:column="29"/></name> <argument_list pos:line="185" pos:column="30">(<argument><expr><name pos:line="185" pos:column="31">fpin<pos:position pos:line="185" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="37">fpout<pos:position pos:line="185" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="185" pos:column="44">body<pos:position pos:line="185" pos:column="48"/></name><operator pos:line="185" pos:column="48">-&gt;<pos:position pos:line="185" pos:column="53"/></operator><name pos:line="185" pos:column="50">length<pos:position pos:line="185" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="185" pos:column="57"/></argument_list></call> <operator pos:line="185" pos:column="58">==<pos:position pos:line="185" pos:column="60"/></operator> <operator pos:line="185" pos:column="61">-<pos:position pos:line="185" pos:column="62"/></operator><literal type="number" pos:line="185" pos:column="62">1<pos:position pos:line="185" pos:column="63"/></literal></expr>)<pos:position pos:line="185" pos:column="64"/></condition><then pos:line="185" pos:column="64">
      <block type="pseudo"><return pos:line="186" pos:column="7">return <expr><operator pos:line="186" pos:column="14">-<pos:position pos:line="186" pos:column="15"/></operator><literal type="number" pos:line="186" pos:column="15">1<pos:position pos:line="186" pos:column="16"/></literal></expr>;<pos:position pos:line="186" pos:column="17"/></return></block></then></if></elseif></if>
  }<pos:position pos:line="187" pos:column="4"/></block></else></if>

  <if pos:line="189" pos:column="3">if <condition pos:line="189" pos:column="6">(<expr><operator pos:line="189" pos:column="7">(<pos:position pos:line="189" pos:column="8"/></operator><name pos:line="189" pos:column="8">flags<pos:position pos:line="189" pos:column="13"/></name> <operator pos:line="189" pos:column="14">&amp;<pos:position pos:line="189" pos:column="19"/></operator> <name pos:line="189" pos:column="16">MUTT_CM_UPDATE<pos:position pos:line="189" pos:column="30"/></name><operator pos:line="189" pos:column="30">)<pos:position pos:line="189" pos:column="31"/></operator> <operator pos:line="189" pos:column="32">&amp;&amp;<pos:position pos:line="189" pos:column="42"/></operator> <operator pos:line="189" pos:column="35">(<pos:position pos:line="189" pos:column="36"/></operator><name pos:line="189" pos:column="36">flags<pos:position pos:line="189" pos:column="41"/></name> <operator pos:line="189" pos:column="42">&amp;<pos:position pos:line="189" pos:column="47"/></operator> <name pos:line="189" pos:column="44">MUTT_CM_NOHEADER<pos:position pos:line="189" pos:column="60"/></name><operator pos:line="189" pos:column="60">)<pos:position pos:line="189" pos:column="61"/></operator> <operator pos:line="189" pos:column="62">==<pos:position pos:line="189" pos:column="64"/></operator> <literal type="number" pos:line="189" pos:column="65">0<pos:position pos:line="189" pos:column="66"/></literal> 
      <operator pos:line="190" pos:column="7">&amp;&amp;<pos:position pos:line="190" pos:column="17"/></operator> <name pos:line="190" pos:column="10">new_offset<pos:position pos:line="190" pos:column="20"/></name> <operator pos:line="190" pos:column="21">!=<pos:position pos:line="190" pos:column="23"/></operator> <operator pos:line="190" pos:column="24">-<pos:position pos:line="190" pos:column="25"/></operator><literal type="number" pos:line="190" pos:column="25">1<pos:position pos:line="190" pos:column="26"/></literal></expr>)<pos:position pos:line="190" pos:column="27"/></condition><then pos:line="190" pos:column="27">
  <block pos:line="191" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="192" pos:column="5">body<pos:position pos:line="192" pos:column="9"/></name><operator pos:line="192" pos:column="9">-&gt;<pos:position pos:line="192" pos:column="14"/></operator><name pos:line="192" pos:column="11">offset<pos:position pos:line="192" pos:column="17"/></name></name> <operator pos:line="192" pos:column="18">=<pos:position pos:line="192" pos:column="19"/></operator> <name pos:line="192" pos:column="20">new_offset<pos:position pos:line="192" pos:column="30"/></name></expr>;<pos:position pos:line="192" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="193" pos:column="5">mutt_free_body<pos:position pos:line="193" pos:column="19"/></name> <argument_list pos:line="193" pos:column="20">(<argument><expr><operator pos:line="193" pos:column="21">&amp;<pos:position pos:line="193" pos:column="26"/></operator><name><name pos:line="193" pos:column="22">body<pos:position pos:line="193" pos:column="26"/></name><operator pos:line="193" pos:column="26">-&gt;<pos:position pos:line="193" pos:column="31"/></operator><name pos:line="193" pos:column="28">parts<pos:position pos:line="193" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="193" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="194" pos:column="4"/></block></then></if>

  <return pos:line="196" pos:column="3">return <expr><name pos:line="196" pos:column="10">rc<pos:position pos:line="196" pos:column="12"/></name></expr>;<pos:position pos:line="196" pos:column="13"/></return>
}<pos:position pos:line="197" pos:column="2"/></block></function></unit>

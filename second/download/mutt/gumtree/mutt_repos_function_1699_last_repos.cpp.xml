<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1699_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">smtp_get_resp<pos:position pos:line="2" pos:column="14"/></name> <parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">CONNECTION<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type> <name pos:line="2" pos:column="29">conn<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">n<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">buf<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><literal type="number" pos:line="5" pos:column="12">1024<pos:position pos:line="5" pos:column="16"/></literal></expr>]<pos:position pos:line="5" pos:column="17"/></index></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

  <do pos:line="7" pos:column="3">do <block pos:line="7" pos:column="6">{
    <expr_stmt><expr><name pos:line="8" pos:column="5">n<pos:position pos:line="8" pos:column="6"/></name> <operator pos:line="8" pos:column="7">=<pos:position pos:line="8" pos:column="8"/></operator> <call><name pos:line="8" pos:column="9">mutt_socket_readln<pos:position pos:line="8" pos:column="27"/></name> <argument_list pos:line="8" pos:column="28">(<argument><expr><name pos:line="8" pos:column="29">buf<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="34">sizeof <argument_list pos:line="8" pos:column="41">(<argument><expr><name pos:line="8" pos:column="42">buf<pos:position pos:line="8" pos:column="45"/></name></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="8" pos:column="48">conn<pos:position pos:line="8" pos:column="52"/></name></expr></argument>)<pos:position pos:line="8" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="54"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">n<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">&lt;<pos:position pos:line="9" pos:column="15"/></operator> <literal type="number" pos:line="9" pos:column="13">4<pos:position pos:line="9" pos:column="14"/></literal></expr>)<pos:position pos:line="9" pos:column="15"/></condition><then pos:line="9" pos:column="15"> <block pos:line="9" pos:column="16">{
      <comment type="block" pos:line="10" pos:column="7">/* read error, or no response code */</comment>
      <return pos:line="11" pos:column="7">return <expr><name pos:line="11" pos:column="14">smtp_err_read<pos:position pos:line="11" pos:column="27"/></name></expr>;<pos:position pos:line="11" pos:column="28"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><call><name pos:line="14" pos:column="10">ascii_strncasecmp<pos:position pos:line="14" pos:column="27"/></name> <argument_list pos:line="14" pos:column="28">(<argument><expr><literal type="string" pos:line="14" pos:column="29">"8BITMIME"<pos:position pos:line="14" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="41">buf<pos:position pos:line="14" pos:column="44"/></name> <operator pos:line="14" pos:column="45">+<pos:position pos:line="14" pos:column="46"/></operator> <literal type="number" pos:line="14" pos:column="47">4<pos:position pos:line="14" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="50">8<pos:position pos:line="14" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="53"/></condition><then pos:line="14" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="7">mutt_bit_set<pos:position pos:line="15" pos:column="19"/></name> <argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">Capabilities<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="35">EIGHTBITMIME<pos:position pos:line="15" pos:column="47"/></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt></block></then>
    <elseif pos:line="16" pos:column="5">else <if pos:line="16" pos:column="10">if <condition pos:line="16" pos:column="13">(<expr><operator pos:line="16" pos:column="14">!<pos:position pos:line="16" pos:column="15"/></operator><call><name pos:line="16" pos:column="15">ascii_strncasecmp<pos:position pos:line="16" pos:column="32"/></name> <argument_list pos:line="16" pos:column="33">(<argument><expr><literal type="string" pos:line="16" pos:column="34">"AUTH "<pos:position pos:line="16" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="43">buf<pos:position pos:line="16" pos:column="46"/></name> <operator pos:line="16" pos:column="47">+<pos:position pos:line="16" pos:column="48"/></operator> <literal type="number" pos:line="16" pos:column="49">4<pos:position pos:line="16" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="52">5<pos:position pos:line="16" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="55"/></condition><then pos:line="16" pos:column="55">
    <block pos:line="17" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">mutt_bit_set<pos:position pos:line="18" pos:column="19"/></name> <argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">Capabilities<pos:position pos:line="18" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="35">AUTH<pos:position pos:line="18" pos:column="39"/></name></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">FREE<pos:position pos:line="19" pos:column="11"/></name> <argument_list pos:line="19" pos:column="12">(<argument><expr><operator pos:line="19" pos:column="13">&amp;<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="14">AuthMechs<pos:position pos:line="19" pos:column="23"/></name></expr></argument>)<pos:position pos:line="19" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="20" pos:column="7">AuthMechs<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <call><name pos:line="20" pos:column="19">safe_strdup<pos:position pos:line="20" pos:column="30"/></name> <argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">buf<pos:position pos:line="20" pos:column="35"/></name> <operator pos:line="20" pos:column="36">+<pos:position pos:line="20" pos:column="37"/></operator> <literal type="number" pos:line="20" pos:column="38">9<pos:position pos:line="20" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="22" pos:column="5">else <if pos:line="22" pos:column="10">if <condition pos:line="22" pos:column="13">(<expr><operator pos:line="22" pos:column="14">!<pos:position pos:line="22" pos:column="15"/></operator><call><name pos:line="22" pos:column="15">ascii_strncasecmp<pos:position pos:line="22" pos:column="32"/></name> <argument_list pos:line="22" pos:column="33">(<argument><expr><literal type="string" pos:line="22" pos:column="34">"DSN"<pos:position pos:line="22" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="41">buf<pos:position pos:line="22" pos:column="44"/></name> <operator pos:line="22" pos:column="45">+<pos:position pos:line="22" pos:column="46"/></operator> <literal type="number" pos:line="22" pos:column="47">4<pos:position pos:line="22" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="50">3<pos:position pos:line="22" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="53"/></condition><then pos:line="22" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="7">mutt_bit_set<pos:position pos:line="23" pos:column="19"/></name> <argument_list pos:line="23" pos:column="20">(<argument><expr><name pos:line="23" pos:column="21">Capabilities<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="35">DSN<pos:position pos:line="23" pos:column="38"/></name></expr></argument>)<pos:position pos:line="23" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="24" pos:column="5">else <if pos:line="24" pos:column="10">if <condition pos:line="24" pos:column="13">(<expr><operator pos:line="24" pos:column="14">!<pos:position pos:line="24" pos:column="15"/></operator><call><name pos:line="24" pos:column="15">ascii_strncasecmp<pos:position pos:line="24" pos:column="32"/></name> <argument_list pos:line="24" pos:column="33">(<argument><expr><literal type="string" pos:line="24" pos:column="34">"STARTTLS"<pos:position pos:line="24" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="46">buf<pos:position pos:line="24" pos:column="49"/></name> <operator pos:line="24" pos:column="50">+<pos:position pos:line="24" pos:column="51"/></operator> <literal type="number" pos:line="24" pos:column="52">4<pos:position pos:line="24" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="55">8<pos:position pos:line="24" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="58"/></condition><then pos:line="24" pos:column="58">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="7">mutt_bit_set<pos:position pos:line="25" pos:column="19"/></name> <argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">Capabilities<pos:position pos:line="25" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="35">STARTTLS<pos:position pos:line="25" pos:column="43"/></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="26" pos:column="5">else <if pos:line="26" pos:column="10">if <condition pos:line="26" pos:column="13">(<expr><operator pos:line="26" pos:column="14">!<pos:position pos:line="26" pos:column="15"/></operator><call><name pos:line="26" pos:column="15">ascii_strncasecmp<pos:position pos:line="26" pos:column="32"/></name> <argument_list pos:line="26" pos:column="33">(<argument><expr><literal type="string" pos:line="26" pos:column="34">"SMTPUTF8"<pos:position pos:line="26" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="46">buf<pos:position pos:line="26" pos:column="49"/></name> <operator pos:line="26" pos:column="50">+<pos:position pos:line="26" pos:column="51"/></operator> <literal type="number" pos:line="26" pos:column="52">4<pos:position pos:line="26" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="55">8<pos:position pos:line="26" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="58"/></condition><then pos:line="26" pos:column="58">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="7">mutt_bit_set<pos:position pos:line="27" pos:column="19"/></name> <argument_list pos:line="27" pos:column="20">(<argument><expr><name pos:line="27" pos:column="21">Capabilities<pos:position pos:line="27" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="35">SMTPUTF8<pos:position pos:line="27" pos:column="43"/></name></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="45"/></expr_stmt></block></then></if></elseif></if>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><call><name pos:line="29" pos:column="9">smtp_code<pos:position pos:line="29" pos:column="18"/></name> <argument_list pos:line="29" pos:column="19">(<argument><expr><name pos:line="29" pos:column="20">buf<pos:position pos:line="29" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="25">n<pos:position pos:line="29" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="28">&amp;<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="29">n<pos:position pos:line="29" pos:column="30"/></name></expr></argument>)<pos:position pos:line="29" pos:column="31"/></argument_list></call> <operator pos:line="29" pos:column="32">&lt;<pos:position pos:line="29" pos:column="36"/></operator> <literal type="number" pos:line="29" pos:column="34">0<pos:position pos:line="29" pos:column="35"/></literal></expr>)<pos:position pos:line="29" pos:column="36"/></condition><then pos:line="29" pos:column="36">
      <block type="pseudo"><return pos:line="30" pos:column="7">return <expr><name pos:line="30" pos:column="14">smtp_err_code<pos:position pos:line="30" pos:column="27"/></name></expr>;<pos:position pos:line="30" pos:column="28"/></return></block></then></if>

  }<pos:position pos:line="32" pos:column="4"/></block> while <condition pos:line="32" pos:column="11">(<expr><name><name pos:line="32" pos:column="12">buf<pos:position pos:line="32" pos:column="15"/></name><index pos:line="32" pos:column="15">[<expr><literal type="number" pos:line="32" pos:column="16">3<pos:position pos:line="32" pos:column="17"/></literal></expr>]<pos:position pos:line="32" pos:column="18"/></index></name> <operator pos:line="32" pos:column="19">==<pos:position pos:line="32" pos:column="21"/></operator> <literal type="char" pos:line="32" pos:column="22">'-'<pos:position pos:line="32" pos:column="25"/></literal></expr>)<pos:position pos:line="32" pos:column="26"/></condition>;<pos:position pos:line="32" pos:column="27"/></do>

  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><call><name pos:line="34" pos:column="7">smtp_success<pos:position pos:line="34" pos:column="19"/></name> <argument_list pos:line="34" pos:column="20">(<argument><expr><name pos:line="34" pos:column="21">n<pos:position pos:line="34" pos:column="22"/></name></expr></argument>)<pos:position pos:line="34" pos:column="23"/></argument_list></call> <operator pos:line="34" pos:column="24">||<pos:position pos:line="34" pos:column="26"/></operator> <name pos:line="34" pos:column="27">n<pos:position pos:line="34" pos:column="28"/></name> <operator pos:line="34" pos:column="29">==<pos:position pos:line="34" pos:column="31"/></operator> <name pos:line="34" pos:column="32">smtp_continue<pos:position pos:line="34" pos:column="45"/></name></expr>)<pos:position pos:line="34" pos:column="46"/></condition><then pos:line="34" pos:column="46">
    <block type="pseudo"><return pos:line="35" pos:column="5">return <expr><literal type="number" pos:line="35" pos:column="12">0<pos:position pos:line="35" pos:column="13"/></literal></expr>;<pos:position pos:line="35" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="37" pos:column="3">mutt_error<pos:position pos:line="37" pos:column="13"/></name> <argument_list pos:line="37" pos:column="14">(<argument><expr><call><name pos:line="37" pos:column="15">_<pos:position pos:line="37" pos:column="16"/></name><argument_list pos:line="37" pos:column="16">(<argument><expr><literal type="string" pos:line="37" pos:column="17">"SMTP session failed: %s"<pos:position pos:line="37" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="37" pos:column="45">buf<pos:position pos:line="37" pos:column="48"/></name></expr></argument>)<pos:position pos:line="37" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="50"/></expr_stmt>
    <return pos:line="38" pos:column="5">return <expr><operator pos:line="38" pos:column="12">-<pos:position pos:line="38" pos:column="13"/></operator><literal type="number" pos:line="38" pos:column="13">1<pos:position pos:line="38" pos:column="14"/></literal></expr>;<pos:position pos:line="38" pos:column="15"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

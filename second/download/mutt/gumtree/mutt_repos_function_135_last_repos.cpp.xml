<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_135_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">patmatch<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">pattern_t<pos:position pos:line="1" pos:column="37"/></name><modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type> <name pos:line="1" pos:column="39">pat<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name><modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type> <name pos:line="1" pos:column="56">buf<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name><name pos:line="3" pos:column="7">pat<pos:position pos:line="3" pos:column="10"/></name><operator pos:line="3" pos:column="10">-&gt;<pos:position pos:line="3" pos:column="15"/></operator><name pos:line="3" pos:column="12">stringmatch<pos:position pos:line="3" pos:column="23"/></name></name></expr>)<pos:position pos:line="3" pos:column="24"/></condition><then pos:line="3" pos:column="24">
    <block type="pseudo"><return pos:line="4" pos:column="5">return <expr><ternary><condition><expr><name><name pos:line="4" pos:column="12">pat<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">-&gt;<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="17">ign_case<pos:position pos:line="4" pos:column="25"/></name></name></expr> ?<pos:position pos:line="4" pos:column="27"/></condition><then pos:line="4" pos:column="27"> <expr><operator pos:line="4" pos:column="28">!<pos:position pos:line="4" pos:column="29"/></operator><call><name pos:line="4" pos:column="29">strcasestr<pos:position pos:line="4" pos:column="39"/></name> <argument_list pos:line="4" pos:column="40">(<argument><expr><name pos:line="4" pos:column="41">buf<pos:position pos:line="4" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="46">pat<pos:position pos:line="4" pos:column="49"/></name><operator pos:line="4" pos:column="49">-&gt;<pos:position pos:line="4" pos:column="54"/></operator><name pos:line="4" pos:column="51">p<pos:position pos:line="4" pos:column="52"/></name><operator pos:line="4" pos:column="52">.<pos:position pos:line="4" pos:column="53"/></operator><name pos:line="4" pos:column="53">str<pos:position pos:line="4" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="57"/></argument_list></call></expr> <pos:position pos:line="4" pos:column="58"/></then><else pos:line="4" pos:column="58">:
			   <expr><operator pos:line="5" pos:column="28">!<pos:position pos:line="5" pos:column="29"/></operator><call><name pos:line="5" pos:column="29">strstr<pos:position pos:line="5" pos:column="35"/></name> <argument_list pos:line="5" pos:column="36">(<argument><expr><name pos:line="5" pos:column="37">buf<pos:position pos:line="5" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="42">pat<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">-&gt;<pos:position pos:line="5" pos:column="50"/></operator><name pos:line="5" pos:column="47">p<pos:position pos:line="5" pos:column="48"/></name><operator pos:line="5" pos:column="48">.<pos:position pos:line="5" pos:column="49"/></operator><name pos:line="5" pos:column="49">str<pos:position pos:line="5" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="53"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="5" pos:column="54"/></return></block></then>
  <elseif pos:line="6" pos:column="3">else <if pos:line="6" pos:column="8">if <condition pos:line="6" pos:column="11">(<expr><name><name pos:line="6" pos:column="12">pat<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">groupmatch<pos:position pos:line="6" pos:column="27"/></name></name></expr>)<pos:position pos:line="6" pos:column="28"/></condition><then pos:line="6" pos:column="28">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">!<pos:position pos:line="7" pos:column="13"/></operator><call><name pos:line="7" pos:column="13">mutt_group_match<pos:position pos:line="7" pos:column="29"/></name> <argument_list pos:line="7" pos:column="30">(<argument><expr><name><name pos:line="7" pos:column="31">pat<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">p<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">.<pos:position pos:line="7" pos:column="38"/></operator><name pos:line="7" pos:column="38">g<pos:position pos:line="7" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="41">buf<pos:position pos:line="7" pos:column="44"/></name></expr></argument>)<pos:position pos:line="7" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="46"/></return></block></then></if></elseif>
  <else pos:line="8" pos:column="3">else
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><call><name pos:line="9" pos:column="12">regexec<pos:position pos:line="9" pos:column="19"/></name> <argument_list pos:line="9" pos:column="20">(<argument><expr><name><name pos:line="9" pos:column="21">pat<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">-&gt;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="26">p<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">.<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="28">rx<pos:position pos:line="9" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="32">buf<pos:position pos:line="9" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="37">0<pos:position pos:line="9" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="40">NULL<pos:position pos:line="9" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="46">0<pos:position pos:line="9" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="49"/></return></block></else></if>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

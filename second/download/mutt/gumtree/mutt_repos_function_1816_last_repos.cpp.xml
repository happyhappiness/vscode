<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1816_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_label_complete<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">buffer<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">size_t<pos:position pos:line="1" pos:column="46"/></name></type> <name pos:line="1" pos:column="47">len<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">int<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">numtabs<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">pt<pos:position pos:line="3" pos:column="11"/></name> <init pos:line="3" pos:column="12">= <expr><name pos:line="3" pos:column="14">buffer<pos:position pos:line="3" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">spaces<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt> <comment type="block" pos:line="4" pos:column="15">/* keep track of the number of leading spaces on the line */</comment>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">!<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">Context<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">||<pos:position pos:line="6" pos:column="18"/></operator> <operator pos:line="6" pos:column="19">!<pos:position pos:line="6" pos:column="20"/></operator><name><name pos:line="6" pos:column="20">Context<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">-&gt;<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="29">label_hash<pos:position pos:line="6" pos:column="39"/></name></name></expr>)<pos:position pos:line="6" pos:column="40"/></condition><then pos:line="6" pos:column="40">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><literal type="number" pos:line="7" pos:column="12">0<pos:position pos:line="7" pos:column="13"/></literal></expr>;<pos:position pos:line="7" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">SKIPWS<pos:position pos:line="9" pos:column="9"/></name> <argument_list pos:line="9" pos:column="10">(<argument><expr><name pos:line="9" pos:column="11">buffer<pos:position pos:line="9" pos:column="17"/></name></expr></argument>)<pos:position pos:line="9" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name pos:line="10" pos:column="3">spaces<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <name pos:line="10" pos:column="12">buffer<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">-<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="21">pt<pos:position pos:line="10" pos:column="23"/></name></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>

  <comment type="block" pos:line="12" pos:column="3">/* first TAB. Collect all the matches */</comment>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">numtabs<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">==<pos:position pos:line="13" pos:column="17"/></operator> <literal type="number" pos:line="13" pos:column="18">1<pos:position pos:line="13" pos:column="19"/></literal></expr>)<pos:position pos:line="13" pos:column="20"/></condition><then pos:line="13" pos:column="20">
  <block pos:line="14" pos:column="3">{
    <decl_stmt><decl><type><name><name pos:line="15" pos:column="5">struct<pos:position pos:line="15" pos:column="11"/></name> <name pos:line="15" pos:column="12">hash_elem<pos:position pos:line="15" pos:column="21"/></name></name> <modifier pos:line="15" pos:column="22">*<pos:position pos:line="15" pos:column="23"/></modifier></type><name pos:line="15" pos:column="23">entry<pos:position pos:line="15" pos:column="28"/></name></decl>;<pos:position pos:line="15" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="16" pos:column="5">struct<pos:position pos:line="16" pos:column="11"/></name> <name pos:line="16" pos:column="12">hash_walk_state<pos:position pos:line="16" pos:column="27"/></name></name></type> <name pos:line="16" pos:column="28">state<pos:position pos:line="16" pos:column="33"/></name></decl>;<pos:position pos:line="16" pos:column="34"/></decl_stmt>

    <expr_stmt><expr><name pos:line="18" pos:column="5">Num_matched<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <literal type="number" pos:line="18" pos:column="19">0<pos:position pos:line="18" pos:column="20"/></literal></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">strfcpy<pos:position pos:line="19" pos:column="12"/></name> <argument_list pos:line="19" pos:column="13">(<argument><expr><name pos:line="19" pos:column="14">User_typed<pos:position pos:line="19" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="26">buffer<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="34">sizeof <argument_list pos:line="19" pos:column="41">(<argument><expr><name pos:line="19" pos:column="42">User_typed<pos:position pos:line="19" pos:column="52"/></name></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">memset<pos:position pos:line="20" pos:column="11"/></name> <argument_list pos:line="20" pos:column="12">(<argument><expr><name pos:line="20" pos:column="13">Matches<pos:position pos:line="20" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="22">0<pos:position pos:line="20" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="25">Matches_listsize<pos:position pos:line="20" pos:column="41"/></name></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">memset<pos:position pos:line="21" pos:column="11"/></name> <argument_list pos:line="21" pos:column="12">(<argument><expr><name pos:line="21" pos:column="13">Completed<pos:position pos:line="21" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="24">0<pos:position pos:line="21" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="27">sizeof <argument_list pos:line="21" pos:column="34">(<argument><expr><name pos:line="21" pos:column="35">Completed<pos:position pos:line="21" pos:column="44"/></name></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">memset<pos:position pos:line="22" pos:column="11"/></name> <argument_list pos:line="22" pos:column="12">(<argument><expr><operator pos:line="22" pos:column="13">&amp;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="14">state<pos:position pos:line="22" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="21">0<pos:position pos:line="22" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="24">sizeof<argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">state<pos:position pos:line="22" pos:column="36"/></name></expr></argument>)<pos:position pos:line="22" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="39"/></expr_stmt>
    <while pos:line="23" pos:column="5">while <condition pos:line="23" pos:column="11">(<expr><operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">entry<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <call><name pos:line="23" pos:column="21">hash_walk<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><name><name pos:line="23" pos:column="31">Context<pos:position pos:line="23" pos:column="38"/></name><operator pos:line="23" pos:column="38">-&gt;<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="40">label_hash<pos:position pos:line="23" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="52">&amp;<pos:position pos:line="23" pos:column="57"/></operator><name pos:line="23" pos:column="53">state<pos:position pos:line="23" pos:column="58"/></name></expr></argument>)<pos:position pos:line="23" pos:column="59"/></argument_list></call><operator pos:line="23" pos:column="59">)<pos:position pos:line="23" pos:column="60"/></operator></expr>)<pos:position pos:line="23" pos:column="61"/></condition>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="7">candidate<pos:position pos:line="24" pos:column="16"/></name> <argument_list pos:line="24" pos:column="17">(<argument><expr><name pos:line="24" pos:column="18">Completed<pos:position pos:line="24" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="29">User_typed<pos:position pos:line="24" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="41">entry<pos:position pos:line="24" pos:column="46"/></name><operator pos:line="24" pos:column="46">-&gt;<pos:position pos:line="24" pos:column="51"/></operator><name pos:line="24" pos:column="48">key<pos:position pos:line="24" pos:column="51"/></name><operator pos:line="24" pos:column="51">.<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="52">strkey<pos:position pos:line="24" pos:column="58"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="60">sizeof <argument_list pos:line="24" pos:column="67">(<argument><expr><name pos:line="24" pos:column="68">Completed<pos:position pos:line="24" pos:column="77"/></name></expr></argument>)<pos:position pos:line="24" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="80"/></expr_stmt></block></while>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">matches_ensure_morespace<pos:position pos:line="25" pos:column="29"/></name> <argument_list pos:line="25" pos:column="30">(<argument><expr><name pos:line="25" pos:column="31">Num_matched<pos:position pos:line="25" pos:column="42"/></name></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">qsort<pos:position pos:line="26" pos:column="10"/></name><argument_list pos:line="26" pos:column="10">(<argument><expr><name pos:line="26" pos:column="11">Matches<pos:position pos:line="26" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="20">Num_matched<pos:position pos:line="26" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="33">sizeof<argument_list pos:line="26" pos:column="39">(<argument><expr><name pos:line="26" pos:column="40">char<pos:position pos:line="26" pos:column="44"/></name> <operator pos:line="26" pos:column="45">*<pos:position pos:line="26" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="26" pos:column="49">(<pos:position pos:line="26" pos:column="50"/></operator><name pos:line="26" pos:column="50">sort_t<pos:position pos:line="26" pos:column="56"/></name> <operator pos:line="26" pos:column="57">*<pos:position pos:line="26" pos:column="58"/></operator><operator pos:line="26" pos:column="58">)<pos:position pos:line="26" pos:column="59"/></operator> <name pos:line="26" pos:column="60">mutt_strcasecmp<pos:position pos:line="26" pos:column="75"/></name></expr></argument>)<pos:position pos:line="26" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">Matches<pos:position pos:line="27" pos:column="12"/></name><index pos:line="27" pos:column="12">[<expr><name pos:line="27" pos:column="13">Num_matched<pos:position pos:line="27" pos:column="24"/></name><operator pos:line="27" pos:column="24">++<pos:position pos:line="27" pos:column="26"/></operator></expr>]<pos:position pos:line="27" pos:column="27"/></index></name> <operator pos:line="27" pos:column="28">=<pos:position pos:line="27" pos:column="29"/></operator> <name pos:line="27" pos:column="30">User_typed<pos:position pos:line="27" pos:column="40"/></name></expr>;<pos:position pos:line="27" pos:column="41"/></expr_stmt>

    <comment type="block" pos:line="29" pos:column="5">/* All matches are stored. Longest non-ambiguous string is ""
     * i.e. dont change 'buffer'. Fake successful return this time */</comment>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name><name pos:line="31" pos:column="9">User_typed<pos:position pos:line="31" pos:column="19"/></name><index pos:line="31" pos:column="19">[<expr><literal type="number" pos:line="31" pos:column="20">0<pos:position pos:line="31" pos:column="21"/></literal></expr>]<pos:position pos:line="31" pos:column="22"/></index></name> <operator pos:line="31" pos:column="23">==<pos:position pos:line="31" pos:column="25"/></operator> <literal type="number" pos:line="31" pos:column="26">0<pos:position pos:line="31" pos:column="27"/></literal></expr>)<pos:position pos:line="31" pos:column="28"/></condition><then pos:line="31" pos:column="28">
      <block type="pseudo"><return pos:line="32" pos:column="7">return <expr><literal type="number" pos:line="32" pos:column="14">1<pos:position pos:line="32" pos:column="15"/></literal></expr>;<pos:position pos:line="32" pos:column="16"/></return></block></then></if>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>

  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><name><name pos:line="35" pos:column="7">Completed<pos:position pos:line="35" pos:column="16"/></name><index pos:line="35" pos:column="16">[<expr><literal type="number" pos:line="35" pos:column="17">0<pos:position pos:line="35" pos:column="18"/></literal></expr>]<pos:position pos:line="35" pos:column="19"/></index></name> <operator pos:line="35" pos:column="20">==<pos:position pos:line="35" pos:column="22"/></operator> <literal type="number" pos:line="35" pos:column="23">0<pos:position pos:line="35" pos:column="24"/></literal> <operator pos:line="35" pos:column="25">&amp;&amp;<pos:position pos:line="35" pos:column="35"/></operator> <name><name pos:line="35" pos:column="28">User_typed<pos:position pos:line="35" pos:column="38"/></name><index pos:line="35" pos:column="38">[<expr><literal type="number" pos:line="35" pos:column="39">0<pos:position pos:line="35" pos:column="40"/></literal></expr>]<pos:position pos:line="35" pos:column="41"/></index></name></expr>)<pos:position pos:line="35" pos:column="42"/></condition><then pos:line="35" pos:column="42">
    <block type="pseudo"><return pos:line="36" pos:column="5">return <expr><literal type="number" pos:line="36" pos:column="12">0<pos:position pos:line="36" pos:column="13"/></literal></expr>;<pos:position pos:line="36" pos:column="14"/></return></block></then></if>

   <comment type="block" pos:line="38" pos:column="4">/* Num_matched will _always_ be atleast 1 since the initial
    * user-typed string is always stored */</comment>
  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><name pos:line="40" pos:column="7">numtabs<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">==<pos:position pos:line="40" pos:column="17"/></operator> <literal type="number" pos:line="40" pos:column="18">1<pos:position pos:line="40" pos:column="19"/></literal> <operator pos:line="40" pos:column="20">&amp;&amp;<pos:position pos:line="40" pos:column="30"/></operator> <name pos:line="40" pos:column="23">Num_matched<pos:position pos:line="40" pos:column="34"/></name> <operator pos:line="40" pos:column="35">==<pos:position pos:line="40" pos:column="37"/></operator> <literal type="number" pos:line="40" pos:column="38">2<pos:position pos:line="40" pos:column="39"/></literal></expr>)<pos:position pos:line="40" pos:column="40"/></condition><then pos:line="40" pos:column="40">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="5">snprintf<pos:position pos:line="41" pos:column="13"/></name><argument_list pos:line="41" pos:column="13">(<argument><expr><name pos:line="41" pos:column="14">Completed<pos:position pos:line="41" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="25">sizeof<argument_list pos:line="41" pos:column="31">(<argument><expr><name pos:line="41" pos:column="32">Completed<pos:position pos:line="41" pos:column="41"/></name></expr></argument>)<pos:position pos:line="41" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="44">"%s"<pos:position pos:line="41" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="50">Matches<pos:position pos:line="41" pos:column="57"/></name><index pos:line="41" pos:column="57">[<expr><literal type="number" pos:line="41" pos:column="58">0<pos:position pos:line="41" pos:column="59"/></literal></expr>]<pos:position pos:line="41" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="41" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="62"/></expr_stmt></block></then>
  <elseif pos:line="42" pos:column="3">else <if pos:line="42" pos:column="8">if <condition pos:line="42" pos:column="11">(<expr><name pos:line="42" pos:column="12">numtabs<pos:position pos:line="42" pos:column="19"/></name> <operator pos:line="42" pos:column="20">&gt;<pos:position pos:line="42" pos:column="24"/></operator> <literal type="number" pos:line="42" pos:column="22">1<pos:position pos:line="42" pos:column="23"/></literal> <operator pos:line="42" pos:column="24">&amp;&amp;<pos:position pos:line="42" pos:column="34"/></operator> <name pos:line="42" pos:column="27">Num_matched<pos:position pos:line="42" pos:column="38"/></name> <operator pos:line="42" pos:column="39">&gt;<pos:position pos:line="42" pos:column="43"/></operator> <literal type="number" pos:line="42" pos:column="41">2<pos:position pos:line="42" pos:column="42"/></literal></expr>)<pos:position pos:line="42" pos:column="43"/></condition><then pos:line="42" pos:column="43">
    <comment type="block" pos:line="43" pos:column="5">/* cycle thru all the matches */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="5">snprintf<pos:position pos:line="44" pos:column="13"/></name><argument_list pos:line="44" pos:column="13">(<argument><expr><name pos:line="44" pos:column="14">Completed<pos:position pos:line="44" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="25">sizeof<argument_list pos:line="44" pos:column="31">(<argument><expr><name pos:line="44" pos:column="32">Completed<pos:position pos:line="44" pos:column="41"/></name></expr></argument>)<pos:position pos:line="44" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="44">"%s"<pos:position pos:line="44" pos:column="48"/></literal></expr></argument>, 
             <argument><expr><name><name pos:line="45" pos:column="14">Matches<pos:position pos:line="45" pos:column="21"/></name><index pos:line="45" pos:column="21">[<expr><operator pos:line="45" pos:column="22">(<pos:position pos:line="45" pos:column="23"/></operator><name pos:line="45" pos:column="23">numtabs<pos:position pos:line="45" pos:column="30"/></name> <operator pos:line="45" pos:column="31">-<pos:position pos:line="45" pos:column="32"/></operator> <literal type="number" pos:line="45" pos:column="33">2<pos:position pos:line="45" pos:column="34"/></literal><operator pos:line="45" pos:column="34">)<pos:position pos:line="45" pos:column="35"/></operator> <operator pos:line="45" pos:column="36">%<pos:position pos:line="45" pos:column="37"/></operator> <name pos:line="45" pos:column="38">Num_matched<pos:position pos:line="45" pos:column="49"/></name></expr>]<pos:position pos:line="45" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="45" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="52"/></expr_stmt></block></then></if></elseif></if>

  <comment type="block" pos:line="47" pos:column="3">/* return the completed label */</comment>
  <expr_stmt><expr><call><name pos:line="48" pos:column="3">strncpy<pos:position pos:line="48" pos:column="10"/></name> <argument_list pos:line="48" pos:column="11">(<argument><expr><name pos:line="48" pos:column="12">buffer<pos:position pos:line="48" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="20">Completed<pos:position pos:line="48" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="31">len<pos:position pos:line="48" pos:column="34"/></name> <operator pos:line="48" pos:column="35">-<pos:position pos:line="48" pos:column="36"/></operator> <name pos:line="48" pos:column="37">spaces<pos:position pos:line="48" pos:column="43"/></name></expr></argument>)<pos:position pos:line="48" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="45"/></expr_stmt>

  <return pos:line="50" pos:column="3">return <expr><literal type="number" pos:line="50" pos:column="10">1<pos:position pos:line="50" pos:column="11"/></literal></expr>;<pos:position pos:line="50" pos:column="12"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1441_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_pretty_mailbox<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">s<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">size_t<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">buflen<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">p<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><name pos:line="3" pos:column="13">s<pos:position pos:line="3" pos:column="14"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="17">q<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">s<pos:position pos:line="3" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">len<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">url_scheme_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">scheme<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">tmp<pos:position pos:line="6" pos:column="11"/></name><index pos:line="6" pos:column="11">[<expr><name pos:line="6" pos:column="12">PATH_MAX<pos:position pos:line="6" pos:column="20"/></name></expr>]<pos:position pos:line="6" pos:column="21"/></index></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">scheme<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <call><name pos:line="8" pos:column="12">url_check_scheme<pos:position pos:line="8" pos:column="28"/></name> <argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">s<pos:position pos:line="8" pos:column="31"/></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>

<cpp:ifdef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifdef<pos:position pos:line="10" pos:column="7"/></cpp:directive> <name pos:line="10" pos:column="8">USE_IMAP<pos:position pos:line="10" pos:column="16"/></name></cpp:ifdef>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">scheme<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">==<pos:position pos:line="11" pos:column="16"/></operator> <name pos:line="11" pos:column="17">U_IMAP<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">||<pos:position pos:line="11" pos:column="26"/></operator> <name pos:line="11" pos:column="27">scheme<pos:position pos:line="11" pos:column="33"/></name> <operator pos:line="11" pos:column="34">==<pos:position pos:line="11" pos:column="36"/></operator> <name pos:line="11" pos:column="37">U_IMAPS<pos:position pos:line="11" pos:column="44"/></name></expr>)<pos:position pos:line="11" pos:column="45"/></condition><then pos:line="11" pos:column="45">
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">imap_pretty_mailbox<pos:position pos:line="13" pos:column="24"/></name> <argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">s<pos:position pos:line="13" pos:column="27"/></name></expr></argument>)<pos:position pos:line="13" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
    <return pos:line="14" pos:column="5">return;<pos:position pos:line="14" pos:column="12"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="18" pos:column="3">/* if s is an url, only collapse path component */</comment>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">scheme<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">!=<pos:position pos:line="19" pos:column="16"/></operator> <name pos:line="19" pos:column="17">U_UNKNOWN<pos:position pos:line="19" pos:column="26"/></name></expr>)<pos:position pos:line="19" pos:column="27"/></condition><then pos:line="19" pos:column="27">
  <block pos:line="20" pos:column="3">{
    <expr_stmt><expr><name pos:line="21" pos:column="5">p<pos:position pos:line="21" pos:column="6"/></name> <operator pos:line="21" pos:column="7">=<pos:position pos:line="21" pos:column="8"/></operator> <call><name pos:line="21" pos:column="9">strchr<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><name pos:line="21" pos:column="16">s<pos:position pos:line="21" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="21" pos:column="19">':'<pos:position pos:line="21" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="23"/></argument_list></call><operator pos:line="21" pos:column="23">+<pos:position pos:line="21" pos:column="24"/></operator><literal type="number" pos:line="21" pos:column="24">1<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator><call><name pos:line="22" pos:column="10">strncmp<pos:position pos:line="22" pos:column="17"/></name> <argument_list pos:line="22" pos:column="18">(<argument><expr><name pos:line="22" pos:column="19">p<pos:position pos:line="22" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="22">"//"<pos:position pos:line="22" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="28">2<pos:position pos:line="22" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="31"/></condition><then pos:line="22" pos:column="31">
      <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="7">q<pos:position pos:line="23" pos:column="8"/></name> <operator pos:line="23" pos:column="9">=<pos:position pos:line="23" pos:column="10"/></operator> <call><name pos:line="23" pos:column="11">strchr<pos:position pos:line="23" pos:column="17"/></name> <argument_list pos:line="23" pos:column="18">(<argument><expr><name pos:line="23" pos:column="19">p<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">+<pos:position pos:line="23" pos:column="21"/></operator><literal type="number" pos:line="23" pos:column="21">2<pos:position pos:line="23" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="23" pos:column="24">'/'<pos:position pos:line="23" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt></block></then></if>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">!<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">q<pos:position pos:line="24" pos:column="11"/></name></expr>)<pos:position pos:line="24" pos:column="12"/></condition><then pos:line="24" pos:column="12">
      <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="7">q<pos:position pos:line="25" pos:column="8"/></name> <operator pos:line="25" pos:column="9">=<pos:position pos:line="25" pos:column="10"/></operator> <call><name pos:line="25" pos:column="11">strchr<pos:position pos:line="25" pos:column="17"/></name> <argument_list pos:line="25" pos:column="18">(<argument><expr><name pos:line="25" pos:column="19">p<pos:position pos:line="25" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="25" pos:column="22">'\0'<pos:position pos:line="25" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="28"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="26" pos:column="5">p<pos:position pos:line="26" pos:column="6"/></name> <operator pos:line="26" pos:column="7">=<pos:position pos:line="26" pos:column="8"/></operator> <name pos:line="26" pos:column="9">q<pos:position pos:line="26" pos:column="10"/></name></expr>;<pos:position pos:line="26" pos:column="11"/></expr_stmt>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="29" pos:column="3">/* cleanup path */</comment>
  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><call><name pos:line="30" pos:column="7">strstr<pos:position pos:line="30" pos:column="13"/></name> <argument_list pos:line="30" pos:column="14">(<argument><expr><name pos:line="30" pos:column="15">p<pos:position pos:line="30" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="18">"//"<pos:position pos:line="30" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="23"/></argument_list></call> <operator pos:line="30" pos:column="24">||<pos:position pos:line="30" pos:column="26"/></operator> <call><name pos:line="30" pos:column="27">strstr<pos:position pos:line="30" pos:column="33"/></name> <argument_list pos:line="30" pos:column="34">(<argument><expr><name pos:line="30" pos:column="35">p<pos:position pos:line="30" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="38">"/./"<pos:position pos:line="30" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="45"/></condition><then pos:line="30" pos:column="45">
  <block pos:line="31" pos:column="3">{
    <comment type="block" pos:line="32" pos:column="5">/* first attempt to collapse the pathname, this is more
     * lightweight than realpath() and doesn't resolve links
     */</comment>
    <while pos:line="35" pos:column="5">while <condition pos:line="35" pos:column="11">(<expr><operator pos:line="35" pos:column="12">*<pos:position pos:line="35" pos:column="13"/></operator><name pos:line="35" pos:column="13">p<pos:position pos:line="35" pos:column="14"/></name></expr>)<pos:position pos:line="35" pos:column="15"/></condition>
    <block pos:line="36" pos:column="5">{
      <if pos:line="37" pos:column="7">if <condition pos:line="37" pos:column="10">(<expr><operator pos:line="37" pos:column="11">*<pos:position pos:line="37" pos:column="12"/></operator><name pos:line="37" pos:column="12">p<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">==<pos:position pos:line="37" pos:column="16"/></operator> <literal type="char" pos:line="37" pos:column="17">'/'<pos:position pos:line="37" pos:column="20"/></literal> <operator pos:line="37" pos:column="21">&amp;&amp;<pos:position pos:line="37" pos:column="31"/></operator> <name><name pos:line="37" pos:column="24">p<pos:position pos:line="37" pos:column="25"/></name><index pos:line="37" pos:column="25">[<expr><literal type="number" pos:line="37" pos:column="26">1<pos:position pos:line="37" pos:column="27"/></literal></expr>]<pos:position pos:line="37" pos:column="28"/></index></name> <operator pos:line="37" pos:column="29">==<pos:position pos:line="37" pos:column="31"/></operator> <literal type="char" pos:line="37" pos:column="32">'/'<pos:position pos:line="37" pos:column="35"/></literal></expr>)<pos:position pos:line="37" pos:column="36"/></condition><then pos:line="37" pos:column="36">
      <block pos:line="38" pos:column="7">{
	<expr_stmt><expr><operator pos:line="39" pos:column="9">*<pos:position pos:line="39" pos:column="10"/></operator><name pos:line="39" pos:column="10">q<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">++<pos:position pos:line="39" pos:column="13"/></operator> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <literal type="char" pos:line="39" pos:column="16">'/'<pos:position pos:line="39" pos:column="19"/></literal></expr>;<pos:position pos:line="39" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><name pos:line="40" pos:column="9">p<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">+=<pos:position pos:line="40" pos:column="13"/></operator> <literal type="number" pos:line="40" pos:column="14">2<pos:position pos:line="40" pos:column="15"/></literal></expr>;<pos:position pos:line="40" pos:column="16"/></expr_stmt>
      }<pos:position pos:line="41" pos:column="8"/></block></then>
      <elseif pos:line="42" pos:column="7">else <if pos:line="42" pos:column="12">if <condition pos:line="42" pos:column="15">(<expr><name><name pos:line="42" pos:column="16">p<pos:position pos:line="42" pos:column="17"/></name><index pos:line="42" pos:column="17">[<expr><literal type="number" pos:line="42" pos:column="18">0<pos:position pos:line="42" pos:column="19"/></literal></expr>]<pos:position pos:line="42" pos:column="20"/></index></name> <operator pos:line="42" pos:column="21">==<pos:position pos:line="42" pos:column="23"/></operator> <literal type="char" pos:line="42" pos:column="24">'/'<pos:position pos:line="42" pos:column="27"/></literal> <operator pos:line="42" pos:column="28">&amp;&amp;<pos:position pos:line="42" pos:column="38"/></operator> <name><name pos:line="42" pos:column="31">p<pos:position pos:line="42" pos:column="32"/></name><index pos:line="42" pos:column="32">[<expr><literal type="number" pos:line="42" pos:column="33">1<pos:position pos:line="42" pos:column="34"/></literal></expr>]<pos:position pos:line="42" pos:column="35"/></index></name> <operator pos:line="42" pos:column="36">==<pos:position pos:line="42" pos:column="38"/></operator> <literal type="char" pos:line="42" pos:column="39">'.'<pos:position pos:line="42" pos:column="42"/></literal> <operator pos:line="42" pos:column="43">&amp;&amp;<pos:position pos:line="42" pos:column="53"/></operator> <name><name pos:line="42" pos:column="46">p<pos:position pos:line="42" pos:column="47"/></name><index pos:line="42" pos:column="47">[<expr><literal type="number" pos:line="42" pos:column="48">2<pos:position pos:line="42" pos:column="49"/></literal></expr>]<pos:position pos:line="42" pos:column="50"/></index></name> <operator pos:line="42" pos:column="51">==<pos:position pos:line="42" pos:column="53"/></operator> <literal type="char" pos:line="42" pos:column="54">'/'<pos:position pos:line="42" pos:column="57"/></literal></expr>)<pos:position pos:line="42" pos:column="58"/></condition><then pos:line="42" pos:column="58">
      <block pos:line="43" pos:column="7">{
	<expr_stmt><expr><operator pos:line="44" pos:column="9">*<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">q<pos:position pos:line="44" pos:column="11"/></name><operator pos:line="44" pos:column="11">++<pos:position pos:line="44" pos:column="13"/></operator> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <literal type="char" pos:line="44" pos:column="16">'/'<pos:position pos:line="44" pos:column="19"/></literal></expr>;<pos:position pos:line="44" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><name pos:line="45" pos:column="9">p<pos:position pos:line="45" pos:column="10"/></name> <operator pos:line="45" pos:column="11">+=<pos:position pos:line="45" pos:column="13"/></operator> <literal type="number" pos:line="45" pos:column="14">3<pos:position pos:line="45" pos:column="15"/></literal></expr>;<pos:position pos:line="45" pos:column="16"/></expr_stmt>
      }<pos:position pos:line="46" pos:column="8"/></block></then></if></elseif>
      <else pos:line="47" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><operator pos:line="48" pos:column="9">*<pos:position pos:line="48" pos:column="10"/></operator><name pos:line="48" pos:column="10">q<pos:position pos:line="48" pos:column="11"/></name><operator pos:line="48" pos:column="11">++<pos:position pos:line="48" pos:column="13"/></operator> <operator pos:line="48" pos:column="14">=<pos:position pos:line="48" pos:column="15"/></operator> <operator pos:line="48" pos:column="16">*<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="17">p<pos:position pos:line="48" pos:column="18"/></name><operator pos:line="48" pos:column="18">++<pos:position pos:line="48" pos:column="20"/></operator></expr>;<pos:position pos:line="48" pos:column="21"/></expr_stmt></block></else></if>
    }<pos:position pos:line="49" pos:column="6"/></block></while>
    <expr_stmt><expr><operator pos:line="50" pos:column="5">*<pos:position pos:line="50" pos:column="6"/></operator><name pos:line="50" pos:column="6">q<pos:position pos:line="50" pos:column="7"/></name> <operator pos:line="50" pos:column="8">=<pos:position pos:line="50" pos:column="9"/></operator> <literal type="number" pos:line="50" pos:column="10">0<pos:position pos:line="50" pos:column="11"/></literal></expr>;<pos:position pos:line="50" pos:column="12"/></expr_stmt>
  }<pos:position pos:line="51" pos:column="4"/></block></then>
  <elseif pos:line="52" pos:column="3">else <if pos:line="52" pos:column="8">if <condition pos:line="52" pos:column="11">(<expr><call><name pos:line="52" pos:column="12">strstr<pos:position pos:line="52" pos:column="18"/></name> <argument_list pos:line="52" pos:column="19">(<argument><expr><name pos:line="52" pos:column="20">p<pos:position pos:line="52" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="23">".."<pos:position pos:line="52" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="28"/></argument_list></call> <operator pos:line="52" pos:column="29">&amp;&amp;<pos:position pos:line="52" pos:column="39"/></operator> 
	   <operator pos:line="53" pos:column="12">(<pos:position pos:line="53" pos:column="13"/></operator><name pos:line="53" pos:column="13">scheme<pos:position pos:line="53" pos:column="19"/></name> <operator pos:line="53" pos:column="20">==<pos:position pos:line="53" pos:column="22"/></operator> <name pos:line="53" pos:column="23">U_UNKNOWN<pos:position pos:line="53" pos:column="32"/></name> <operator pos:line="53" pos:column="33">||<pos:position pos:line="53" pos:column="35"/></operator> <name pos:line="53" pos:column="36">scheme<pos:position pos:line="53" pos:column="42"/></name> <operator pos:line="53" pos:column="43">==<pos:position pos:line="53" pos:column="45"/></operator> <name pos:line="53" pos:column="46">U_FILE<pos:position pos:line="53" pos:column="52"/></name><operator pos:line="53" pos:column="52">)<pos:position pos:line="53" pos:column="53"/></operator> <operator pos:line="53" pos:column="54">&amp;&amp;<pos:position pos:line="53" pos:column="64"/></operator>
	   <call><name pos:line="54" pos:column="12">realpath<pos:position pos:line="54" pos:column="20"/></name> <argument_list pos:line="54" pos:column="21">(<argument><expr><name pos:line="54" pos:column="22">p<pos:position pos:line="54" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="25">tmp<pos:position pos:line="54" pos:column="28"/></name></expr></argument>)<pos:position pos:line="54" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="30"/></condition><then pos:line="54" pos:column="30">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="5">strfcpy<pos:position pos:line="55" pos:column="12"/></name> <argument_list pos:line="55" pos:column="13">(<argument><expr><name pos:line="55" pos:column="14">p<pos:position pos:line="55" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="17">tmp<pos:position pos:line="55" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="22">buflen<pos:position pos:line="55" pos:column="28"/></name> <operator pos:line="55" pos:column="29">-<pos:position pos:line="55" pos:column="30"/></operator> <operator pos:line="55" pos:column="31">(<pos:position pos:line="55" pos:column="32"/></operator><name pos:line="55" pos:column="32">p<pos:position pos:line="55" pos:column="33"/></name> <operator pos:line="55" pos:column="34">-<pos:position pos:line="55" pos:column="35"/></operator> <name pos:line="55" pos:column="36">s<pos:position pos:line="55" pos:column="37"/></name><operator pos:line="55" pos:column="37">)<pos:position pos:line="55" pos:column="38"/></operator></expr></argument>)<pos:position pos:line="55" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="40"/></expr_stmt></block></then></if></elseif></if>

  <if pos:line="57" pos:column="3">if <condition pos:line="57" pos:column="6">(<expr><call><name pos:line="57" pos:column="7">mutt_strncmp<pos:position pos:line="57" pos:column="19"/></name> <argument_list pos:line="57" pos:column="20">(<argument><expr><name pos:line="57" pos:column="21">s<pos:position pos:line="57" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="24">Maildir<pos:position pos:line="57" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="33">(<pos:position pos:line="57" pos:column="34"/></operator><name pos:line="57" pos:column="34">len<pos:position pos:line="57" pos:column="37"/></name> <operator pos:line="57" pos:column="38">=<pos:position pos:line="57" pos:column="39"/></operator> <call><name pos:line="57" pos:column="40">mutt_strlen<pos:position pos:line="57" pos:column="51"/></name> <argument_list pos:line="57" pos:column="52">(<argument><expr><name pos:line="57" pos:column="53">Maildir<pos:position pos:line="57" pos:column="60"/></name></expr></argument>)<pos:position pos:line="57" pos:column="61"/></argument_list></call><operator pos:line="57" pos:column="61">)<pos:position pos:line="57" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="57" pos:column="63"/></argument_list></call> <operator pos:line="57" pos:column="64">==<pos:position pos:line="57" pos:column="66"/></operator> <literal type="number" pos:line="57" pos:column="67">0<pos:position pos:line="57" pos:column="68"/></literal> <operator pos:line="57" pos:column="69">&amp;&amp;<pos:position pos:line="57" pos:column="79"/></operator>
      <name><name pos:line="58" pos:column="7">s<pos:position pos:line="58" pos:column="8"/></name><index pos:line="58" pos:column="8">[<expr><name pos:line="58" pos:column="9">len<pos:position pos:line="58" pos:column="12"/></name></expr>]<pos:position pos:line="58" pos:column="13"/></index></name> <operator pos:line="58" pos:column="14">==<pos:position pos:line="58" pos:column="16"/></operator> <literal type="char" pos:line="58" pos:column="17">'/'<pos:position pos:line="58" pos:column="20"/></literal></expr>)<pos:position pos:line="58" pos:column="21"/></condition><then pos:line="58" pos:column="21">
  <block pos:line="59" pos:column="3">{
    <expr_stmt><expr><operator pos:line="60" pos:column="5">*<pos:position pos:line="60" pos:column="6"/></operator><name pos:line="60" pos:column="6">s<pos:position pos:line="60" pos:column="7"/></name><operator pos:line="60" pos:column="7">++<pos:position pos:line="60" pos:column="9"/></operator> <operator pos:line="60" pos:column="10">=<pos:position pos:line="60" pos:column="11"/></operator> <literal type="char" pos:line="60" pos:column="12">'='<pos:position pos:line="60" pos:column="15"/></literal></expr>;<pos:position pos:line="60" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">memmove<pos:position pos:line="61" pos:column="12"/></name> <argument_list pos:line="61" pos:column="13">(<argument><expr><name pos:line="61" pos:column="14">s<pos:position pos:line="61" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="17">s<pos:position pos:line="61" pos:column="18"/></name> <operator pos:line="61" pos:column="19">+<pos:position pos:line="61" pos:column="20"/></operator> <name pos:line="61" pos:column="21">len<pos:position pos:line="61" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="61" pos:column="26">mutt_strlen<pos:position pos:line="61" pos:column="37"/></name> <argument_list pos:line="61" pos:column="38">(<argument><expr><name pos:line="61" pos:column="39">s<pos:position pos:line="61" pos:column="40"/></name> <operator pos:line="61" pos:column="41">+<pos:position pos:line="61" pos:column="42"/></operator> <name pos:line="61" pos:column="43">len<pos:position pos:line="61" pos:column="46"/></name></expr></argument>)<pos:position pos:line="61" pos:column="47"/></argument_list></call> <operator pos:line="61" pos:column="48">+<pos:position pos:line="61" pos:column="49"/></operator> <literal type="number" pos:line="61" pos:column="50">1<pos:position pos:line="61" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="53"/></expr_stmt>
  }<pos:position pos:line="62" pos:column="4"/></block></then>
  <elseif pos:line="63" pos:column="3">else <if pos:line="63" pos:column="8">if <condition pos:line="63" pos:column="11">(<expr><call><name pos:line="63" pos:column="12">mutt_strncmp<pos:position pos:line="63" pos:column="24"/></name> <argument_list pos:line="63" pos:column="25">(<argument><expr><name pos:line="63" pos:column="26">s<pos:position pos:line="63" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="29">Homedir<pos:position pos:line="63" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="38">(<pos:position pos:line="63" pos:column="39"/></operator><name pos:line="63" pos:column="39">len<pos:position pos:line="63" pos:column="42"/></name> <operator pos:line="63" pos:column="43">=<pos:position pos:line="63" pos:column="44"/></operator> <call><name pos:line="63" pos:column="45">mutt_strlen<pos:position pos:line="63" pos:column="56"/></name> <argument_list pos:line="63" pos:column="57">(<argument><expr><name pos:line="63" pos:column="58">Homedir<pos:position pos:line="63" pos:column="65"/></name></expr></argument>)<pos:position pos:line="63" pos:column="66"/></argument_list></call><operator pos:line="63" pos:column="66">)<pos:position pos:line="63" pos:column="67"/></operator></expr></argument>)<pos:position pos:line="63" pos:column="68"/></argument_list></call> <operator pos:line="63" pos:column="69">==<pos:position pos:line="63" pos:column="71"/></operator> <literal type="number" pos:line="63" pos:column="72">0<pos:position pos:line="63" pos:column="73"/></literal> <operator pos:line="63" pos:column="74">&amp;&amp;<pos:position pos:line="63" pos:column="84"/></operator>
	   <name><name pos:line="64" pos:column="12">s<pos:position pos:line="64" pos:column="13"/></name><index pos:line="64" pos:column="13">[<expr><name pos:line="64" pos:column="14">len<pos:position pos:line="64" pos:column="17"/></name></expr>]<pos:position pos:line="64" pos:column="18"/></index></name> <operator pos:line="64" pos:column="19">==<pos:position pos:line="64" pos:column="21"/></operator> <literal type="char" pos:line="64" pos:column="22">'/'<pos:position pos:line="64" pos:column="25"/></literal></expr>)<pos:position pos:line="64" pos:column="26"/></condition><then pos:line="64" pos:column="26">
  <block pos:line="65" pos:column="3">{
    <expr_stmt><expr><operator pos:line="66" pos:column="5">*<pos:position pos:line="66" pos:column="6"/></operator><name pos:line="66" pos:column="6">s<pos:position pos:line="66" pos:column="7"/></name><operator pos:line="66" pos:column="7">++<pos:position pos:line="66" pos:column="9"/></operator> <operator pos:line="66" pos:column="10">=<pos:position pos:line="66" pos:column="11"/></operator> <literal type="char" pos:line="66" pos:column="12">'~'<pos:position pos:line="66" pos:column="15"/></literal></expr>;<pos:position pos:line="66" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">memmove<pos:position pos:line="67" pos:column="12"/></name> <argument_list pos:line="67" pos:column="13">(<argument><expr><name pos:line="67" pos:column="14">s<pos:position pos:line="67" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="17">s<pos:position pos:line="67" pos:column="18"/></name> <operator pos:line="67" pos:column="19">+<pos:position pos:line="67" pos:column="20"/></operator> <name pos:line="67" pos:column="21">len<pos:position pos:line="67" pos:column="24"/></name> <operator pos:line="67" pos:column="25">-<pos:position pos:line="67" pos:column="26"/></operator> <literal type="number" pos:line="67" pos:column="27">1<pos:position pos:line="67" pos:column="28"/></literal></expr></argument>, <argument><expr><call><name pos:line="67" pos:column="30">mutt_strlen<pos:position pos:line="67" pos:column="41"/></name> <argument_list pos:line="67" pos:column="42">(<argument><expr><name pos:line="67" pos:column="43">s<pos:position pos:line="67" pos:column="44"/></name> <operator pos:line="67" pos:column="45">+<pos:position pos:line="67" pos:column="46"/></operator> <name pos:line="67" pos:column="47">len<pos:position pos:line="67" pos:column="50"/></name> <operator pos:line="67" pos:column="51">-<pos:position pos:line="67" pos:column="52"/></operator> <literal type="number" pos:line="67" pos:column="53">1<pos:position pos:line="67" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="55"/></argument_list></call> <operator pos:line="67" pos:column="56">+<pos:position pos:line="67" pos:column="57"/></operator> <literal type="number" pos:line="67" pos:column="58">1<pos:position pos:line="67" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="61"/></expr_stmt>
  }<pos:position pos:line="68" pos:column="4"/></block></then></if></elseif></if>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

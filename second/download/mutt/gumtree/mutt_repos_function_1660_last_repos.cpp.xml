<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1660_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">crypt_get_keys<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">HEADER<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">msg<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier><modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">keylist<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">oppenc_mode<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">ADDRESS<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">adrlist<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name pos:line="3" pos:column="22">NULL<pos:position pos:line="3" pos:column="26"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="29">last<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><name pos:line="3" pos:column="36">NULL<pos:position pos:line="3" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">fqdn<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><call><name pos:line="4" pos:column="22">mutt_fqdn<pos:position pos:line="4" pos:column="31"/></name> <argument_list pos:line="4" pos:column="32">(<argument><expr><literal type="number" pos:line="4" pos:column="33">1<pos:position pos:line="4" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">self_encrypt<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><name pos:line="5" pos:column="24">NULL<pos:position pos:line="5" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">keylist_size<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* Do a quick check to make sure that we can find all of the encryption
   * keys if the user has requested this service.
   */</comment>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">WithCrypto<pos:position pos:line="12" pos:column="18"/></name></expr>)<pos:position pos:line="12" pos:column="19"/></condition><then pos:line="12" pos:column="19">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><literal type="number" pos:line="13" pos:column="12">0<pos:position pos:line="13" pos:column="13"/></literal></expr>;<pos:position pos:line="13" pos:column="14"/></return></block></then></if>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><operator pos:line="15" pos:column="7">(<pos:position pos:line="15" pos:column="8"/></operator><name pos:line="15" pos:column="8">WithCrypto<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">&amp;<pos:position pos:line="15" pos:column="24"/></operator> <name pos:line="15" pos:column="21">APPLICATION_PGP<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">)<pos:position pos:line="15" pos:column="37"/></operator></expr>)<pos:position pos:line="15" pos:column="38"/></condition><then pos:line="15" pos:column="38">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="5">set_option<pos:position pos:line="16" pos:column="15"/></name> <argument_list pos:line="16" pos:column="16">(<argument><expr><name pos:line="16" pos:column="17">OPTPGPCHECKTRUST<pos:position pos:line="16" pos:column="33"/></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="18" pos:column="3">last<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <call><name pos:line="18" pos:column="10">rfc822_append<pos:position pos:line="18" pos:column="23"/></name> <argument_list pos:line="18" pos:column="24">(<argument><expr><operator pos:line="18" pos:column="25">&amp;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="26">adrlist<pos:position pos:line="18" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="35">msg<pos:position pos:line="18" pos:column="38"/></name><operator pos:line="18" pos:column="38">-&gt;<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="40">env<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">-&gt;<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="45">to<pos:position pos:line="18" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="49">0<pos:position pos:line="18" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><name pos:line="19" pos:column="3">last<pos:position pos:line="19" pos:column="7"/></name> <operator pos:line="19" pos:column="8">=<pos:position pos:line="19" pos:column="9"/></operator> <call><name pos:line="19" pos:column="10">rfc822_append<pos:position pos:line="19" pos:column="23"/></name> <argument_list pos:line="19" pos:column="24">(<argument><expr><ternary><condition><expr><name pos:line="19" pos:column="25">last<pos:position pos:line="19" pos:column="29"/></name></expr> ?<pos:position pos:line="19" pos:column="31"/></condition><then pos:line="19" pos:column="31"> <expr><operator pos:line="19" pos:column="32">&amp;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="33">last<pos:position pos:line="19" pos:column="37"/></name></expr> <pos:position pos:line="19" pos:column="38"/></then><else pos:line="19" pos:column="38">: <expr><operator pos:line="19" pos:column="40">&amp;<pos:position pos:line="19" pos:column="45"/></operator><name pos:line="19" pos:column="41">adrlist<pos:position pos:line="19" pos:column="48"/></name></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="50">msg<pos:position pos:line="19" pos:column="53"/></name><operator pos:line="19" pos:column="53">-&gt;<pos:position pos:line="19" pos:column="58"/></operator><name pos:line="19" pos:column="55">env<pos:position pos:line="19" pos:column="58"/></name><operator pos:line="19" pos:column="58">-&gt;<pos:position pos:line="19" pos:column="63"/></operator><name pos:line="19" pos:column="60">cc<pos:position pos:line="19" pos:column="62"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="64">0<pos:position pos:line="19" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="67"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">rfc822_append<pos:position pos:line="20" pos:column="16"/></name> <argument_list pos:line="20" pos:column="17">(<argument><expr><ternary><condition><expr><name pos:line="20" pos:column="18">last<pos:position pos:line="20" pos:column="22"/></name></expr> ?<pos:position pos:line="20" pos:column="24"/></condition><then pos:line="20" pos:column="24"> <expr><operator pos:line="20" pos:column="25">&amp;<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="26">last<pos:position pos:line="20" pos:column="30"/></name></expr> <pos:position pos:line="20" pos:column="31"/></then><else pos:line="20" pos:column="31">: <expr><operator pos:line="20" pos:column="33">&amp;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="34">adrlist<pos:position pos:line="20" pos:column="41"/></name></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="43">msg<pos:position pos:line="20" pos:column="46"/></name><operator pos:line="20" pos:column="46">-&gt;<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="48">env<pos:position pos:line="20" pos:column="51"/></name><operator pos:line="20" pos:column="51">-&gt;<pos:position pos:line="20" pos:column="56"/></operator><name pos:line="20" pos:column="53">bcc<pos:position pos:line="20" pos:column="56"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="58">0<pos:position pos:line="20" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="61"/></expr_stmt>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name pos:line="22" pos:column="7">fqdn<pos:position pos:line="22" pos:column="11"/></name></expr>)<pos:position pos:line="22" pos:column="12"/></condition><then pos:line="22" pos:column="12">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="5">rfc822_qualify<pos:position pos:line="23" pos:column="19"/></name> <argument_list pos:line="23" pos:column="20">(<argument><expr><name pos:line="23" pos:column="21">adrlist<pos:position pos:line="23" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="30">fqdn<pos:position pos:line="23" pos:column="34"/></name></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name pos:line="24" pos:column="3">adrlist<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator> <call><name pos:line="24" pos:column="13">mutt_remove_duplicates<pos:position pos:line="24" pos:column="35"/></name> <argument_list pos:line="24" pos:column="36">(<argument><expr><name pos:line="24" pos:column="37">adrlist<pos:position pos:line="24" pos:column="44"/></name></expr></argument>)<pos:position pos:line="24" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="46"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="26" pos:column="3">*<pos:position pos:line="26" pos:column="4"/></operator><name pos:line="26" pos:column="4">keylist<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <name pos:line="26" pos:column="14">NULL<pos:position pos:line="26" pos:column="18"/></name></expr>;<pos:position pos:line="26" pos:column="19"/></expr_stmt>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">oppenc_mode<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">||<pos:position pos:line="28" pos:column="21"/></operator> <operator pos:line="28" pos:column="22">(<pos:position pos:line="28" pos:column="23"/></operator><name><name pos:line="28" pos:column="23">msg<pos:position pos:line="28" pos:column="26"/></name><operator pos:line="28" pos:column="26">-&gt;<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="28">security<pos:position pos:line="28" pos:column="36"/></name></name> <operator pos:line="28" pos:column="37">&amp;<pos:position pos:line="28" pos:column="42"/></operator> <name pos:line="28" pos:column="39">ENCRYPT<pos:position pos:line="28" pos:column="46"/></name><operator pos:line="28" pos:column="46">)<pos:position pos:line="28" pos:column="47"/></operator></expr>)<pos:position pos:line="28" pos:column="48"/></condition><then pos:line="28" pos:column="48">
  <block pos:line="29" pos:column="3">{
     <if pos:line="30" pos:column="6">if <condition pos:line="30" pos:column="9">(<expr><operator pos:line="30" pos:column="10">(<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="11">WithCrypto<pos:position pos:line="30" pos:column="21"/></name> <operator pos:line="30" pos:column="22">&amp;<pos:position pos:line="30" pos:column="27"/></operator> <name pos:line="30" pos:column="24">APPLICATION_PGP<pos:position pos:line="30" pos:column="39"/></name><operator pos:line="30" pos:column="39">)<pos:position pos:line="30" pos:column="40"/></operator>
         <operator pos:line="31" pos:column="10">&amp;&amp;<pos:position pos:line="31" pos:column="20"/></operator> <operator pos:line="31" pos:column="13">(<pos:position pos:line="31" pos:column="14"/></operator><name><name pos:line="31" pos:column="14">msg<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">-&gt;<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="19">security<pos:position pos:line="31" pos:column="27"/></name></name> <operator pos:line="31" pos:column="28">&amp;<pos:position pos:line="31" pos:column="33"/></operator> <name pos:line="31" pos:column="30">APPLICATION_PGP<pos:position pos:line="31" pos:column="45"/></name><operator pos:line="31" pos:column="45">)<pos:position pos:line="31" pos:column="46"/></operator></expr>)<pos:position pos:line="31" pos:column="47"/></condition><then pos:line="31" pos:column="47">
     <block pos:line="32" pos:column="6">{
       <if pos:line="33" pos:column="8">if <condition pos:line="33" pos:column="11">(<expr><operator pos:line="33" pos:column="12">(<pos:position pos:line="33" pos:column="13"/></operator><operator pos:line="33" pos:column="13">*<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">keylist<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">=<pos:position pos:line="33" pos:column="23"/></operator> <call><name pos:line="33" pos:column="24">crypt_pgp_findkeys<pos:position pos:line="33" pos:column="42"/></name> <argument_list pos:line="33" pos:column="43">(<argument><expr><name pos:line="33" pos:column="44">adrlist<pos:position pos:line="33" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="53">oppenc_mode<pos:position pos:line="33" pos:column="64"/></name></expr></argument>)<pos:position pos:line="33" pos:column="65"/></argument_list></call><operator pos:line="33" pos:column="65">)<pos:position pos:line="33" pos:column="66"/></operator> <operator pos:line="33" pos:column="67">==<pos:position pos:line="33" pos:column="69"/></operator> <name pos:line="33" pos:column="70">NULL<pos:position pos:line="33" pos:column="74"/></name></expr>)<pos:position pos:line="33" pos:column="75"/></condition><then pos:line="33" pos:column="75">
       <block pos:line="34" pos:column="8">{
           <expr_stmt><expr><call><name pos:line="35" pos:column="12">rfc822_free_address<pos:position pos:line="35" pos:column="31"/></name> <argument_list pos:line="35" pos:column="32">(<argument><expr><operator pos:line="35" pos:column="33">&amp;<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="34">adrlist<pos:position pos:line="35" pos:column="41"/></name></expr></argument>)<pos:position pos:line="35" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="43"/></expr_stmt>
           <return pos:line="36" pos:column="12">return <expr><operator pos:line="36" pos:column="19">(<pos:position pos:line="36" pos:column="20"/></operator><operator pos:line="36" pos:column="20">-<pos:position pos:line="36" pos:column="21"/></operator><literal type="number" pos:line="36" pos:column="21">1<pos:position pos:line="36" pos:column="22"/></literal><operator pos:line="36" pos:column="22">)<pos:position pos:line="36" pos:column="23"/></operator></expr>;<pos:position pos:line="36" pos:column="24"/></return>
       }<pos:position pos:line="37" pos:column="9"/></block></then></if>
       <expr_stmt><expr><call><name pos:line="38" pos:column="8">unset_option<pos:position pos:line="38" pos:column="20"/></name> <argument_list pos:line="38" pos:column="21">(<argument><expr><name pos:line="38" pos:column="22">OPTPGPCHECKTRUST<pos:position pos:line="38" pos:column="38"/></name></expr></argument>)<pos:position pos:line="38" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="40"/></expr_stmt>
       <if pos:line="39" pos:column="8">if <condition pos:line="39" pos:column="11">(<expr><call><name pos:line="39" pos:column="12">option<pos:position pos:line="39" pos:column="18"/></name> <argument_list pos:line="39" pos:column="19">(<argument><expr><name pos:line="39" pos:column="20">OPTPGPSELFENCRYPT<pos:position pos:line="39" pos:column="37"/></name></expr></argument>)<pos:position pos:line="39" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="39"/></condition><then pos:line="39" pos:column="39">
         <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="10">self_encrypt<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">=<pos:position pos:line="40" pos:column="24"/></operator> <name pos:line="40" pos:column="25">PgpSelfEncryptAs<pos:position pos:line="40" pos:column="41"/></name></expr>;<pos:position pos:line="40" pos:column="42"/></expr_stmt></block></then></if>
     }<pos:position pos:line="41" pos:column="7"/></block></then></if>
     <if pos:line="42" pos:column="6">if <condition pos:line="42" pos:column="9">(<expr><operator pos:line="42" pos:column="10">(<pos:position pos:line="42" pos:column="11"/></operator><name pos:line="42" pos:column="11">WithCrypto<pos:position pos:line="42" pos:column="21"/></name> <operator pos:line="42" pos:column="22">&amp;<pos:position pos:line="42" pos:column="27"/></operator> <name pos:line="42" pos:column="24">APPLICATION_SMIME<pos:position pos:line="42" pos:column="41"/></name><operator pos:line="42" pos:column="41">)<pos:position pos:line="42" pos:column="42"/></operator>
         <operator pos:line="43" pos:column="10">&amp;&amp;<pos:position pos:line="43" pos:column="20"/></operator> <operator pos:line="43" pos:column="13">(<pos:position pos:line="43" pos:column="14"/></operator><name><name pos:line="43" pos:column="14">msg<pos:position pos:line="43" pos:column="17"/></name><operator pos:line="43" pos:column="17">-&gt;<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="19">security<pos:position pos:line="43" pos:column="27"/></name></name> <operator pos:line="43" pos:column="28">&amp;<pos:position pos:line="43" pos:column="33"/></operator> <name pos:line="43" pos:column="30">APPLICATION_SMIME<pos:position pos:line="43" pos:column="47"/></name><operator pos:line="43" pos:column="47">)<pos:position pos:line="43" pos:column="48"/></operator></expr>)<pos:position pos:line="43" pos:column="49"/></condition><then pos:line="43" pos:column="49">
     <block pos:line="44" pos:column="6">{
       <if pos:line="45" pos:column="8">if <condition pos:line="45" pos:column="11">(<expr><operator pos:line="45" pos:column="12">(<pos:position pos:line="45" pos:column="13"/></operator><operator pos:line="45" pos:column="13">*<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="14">keylist<pos:position pos:line="45" pos:column="21"/></name> <operator pos:line="45" pos:column="22">=<pos:position pos:line="45" pos:column="23"/></operator> <call><name pos:line="45" pos:column="24">crypt_smime_findkeys<pos:position pos:line="45" pos:column="44"/></name> <argument_list pos:line="45" pos:column="45">(<argument><expr><name pos:line="45" pos:column="46">adrlist<pos:position pos:line="45" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="55">oppenc_mode<pos:position pos:line="45" pos:column="66"/></name></expr></argument>)<pos:position pos:line="45" pos:column="67"/></argument_list></call><operator pos:line="45" pos:column="67">)<pos:position pos:line="45" pos:column="68"/></operator> <operator pos:line="45" pos:column="69">==<pos:position pos:line="45" pos:column="71"/></operator> <name pos:line="45" pos:column="72">NULL<pos:position pos:line="45" pos:column="76"/></name></expr>)<pos:position pos:line="45" pos:column="77"/></condition><then pos:line="45" pos:column="77">
       <block pos:line="46" pos:column="8">{
           <expr_stmt><expr><call><name pos:line="47" pos:column="12">rfc822_free_address<pos:position pos:line="47" pos:column="31"/></name> <argument_list pos:line="47" pos:column="32">(<argument><expr><operator pos:line="47" pos:column="33">&amp;<pos:position pos:line="47" pos:column="38"/></operator><name pos:line="47" pos:column="34">adrlist<pos:position pos:line="47" pos:column="41"/></name></expr></argument>)<pos:position pos:line="47" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="43"/></expr_stmt>
           <return pos:line="48" pos:column="12">return <expr><operator pos:line="48" pos:column="19">(<pos:position pos:line="48" pos:column="20"/></operator><operator pos:line="48" pos:column="20">-<pos:position pos:line="48" pos:column="21"/></operator><literal type="number" pos:line="48" pos:column="21">1<pos:position pos:line="48" pos:column="22"/></literal><operator pos:line="48" pos:column="22">)<pos:position pos:line="48" pos:column="23"/></operator></expr>;<pos:position pos:line="48" pos:column="24"/></return>
       }<pos:position pos:line="49" pos:column="9"/></block></then></if>
       <if pos:line="50" pos:column="8">if <condition pos:line="50" pos:column="11">(<expr><call><name pos:line="50" pos:column="12">option<pos:position pos:line="50" pos:column="18"/></name> <argument_list pos:line="50" pos:column="19">(<argument><expr><name pos:line="50" pos:column="20">OPTSMIMESELFENCRYPT<pos:position pos:line="50" pos:column="39"/></name></expr></argument>)<pos:position pos:line="50" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="41"/></condition><then pos:line="50" pos:column="41">
         <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="10">self_encrypt<pos:position pos:line="51" pos:column="22"/></name> <operator pos:line="51" pos:column="23">=<pos:position pos:line="51" pos:column="24"/></operator> <name pos:line="51" pos:column="25">SmimeSelfEncryptAs<pos:position pos:line="51" pos:column="43"/></name></expr>;<pos:position pos:line="51" pos:column="44"/></expr_stmt></block></then></if>
     }<pos:position pos:line="52" pos:column="7"/></block></then></if>
  }<pos:position pos:line="53" pos:column="4"/></block></then></if>

  <if pos:line="55" pos:column="3">if <condition pos:line="55" pos:column="6">(<expr><operator pos:line="55" pos:column="7">!<pos:position pos:line="55" pos:column="8"/></operator><name pos:line="55" pos:column="8">oppenc_mode<pos:position pos:line="55" pos:column="19"/></name> <operator pos:line="55" pos:column="20">&amp;&amp;<pos:position pos:line="55" pos:column="30"/></operator> <name pos:line="55" pos:column="23">self_encrypt<pos:position pos:line="55" pos:column="35"/></name> <operator pos:line="55" pos:column="36">&amp;&amp;<pos:position pos:line="55" pos:column="46"/></operator> <operator pos:line="55" pos:column="39">*<pos:position pos:line="55" pos:column="40"/></operator><name pos:line="55" pos:column="40">self_encrypt<pos:position pos:line="55" pos:column="52"/></name></expr>)<pos:position pos:line="55" pos:column="53"/></condition><then pos:line="55" pos:column="53">
  <block pos:line="56" pos:column="3">{
    <expr_stmt><expr><name pos:line="57" pos:column="5">keylist_size<pos:position pos:line="57" pos:column="17"/></name> <operator pos:line="57" pos:column="18">=<pos:position pos:line="57" pos:column="19"/></operator> <call><name pos:line="57" pos:column="20">mutt_strlen<pos:position pos:line="57" pos:column="31"/></name> <argument_list pos:line="57" pos:column="32">(<argument><expr><operator pos:line="57" pos:column="33">*<pos:position pos:line="57" pos:column="34"/></operator><name pos:line="57" pos:column="34">keylist<pos:position pos:line="57" pos:column="41"/></name></expr></argument>)<pos:position pos:line="57" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">safe_realloc<pos:position pos:line="58" pos:column="17"/></name> <argument_list pos:line="58" pos:column="18">(<argument><expr><name pos:line="58" pos:column="19">keylist<pos:position pos:line="58" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="28">keylist_size<pos:position pos:line="58" pos:column="40"/></name> <operator pos:line="58" pos:column="41">+<pos:position pos:line="58" pos:column="42"/></operator> <call><name pos:line="58" pos:column="43">mutt_strlen<pos:position pos:line="58" pos:column="54"/></name> <argument_list pos:line="58" pos:column="55">(<argument><expr><name pos:line="58" pos:column="56">self_encrypt<pos:position pos:line="58" pos:column="68"/></name></expr></argument>)<pos:position pos:line="58" pos:column="69"/></argument_list></call> <operator pos:line="58" pos:column="70">+<pos:position pos:line="58" pos:column="71"/></operator> <literal type="number" pos:line="58" pos:column="72">2<pos:position pos:line="58" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">sprintf<pos:position pos:line="59" pos:column="12"/></name> <argument_list pos:line="59" pos:column="13">(<argument><expr><operator pos:line="59" pos:column="14">*<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="15">keylist<pos:position pos:line="59" pos:column="22"/></name> <operator pos:line="59" pos:column="23">+<pos:position pos:line="59" pos:column="24"/></operator> <name pos:line="59" pos:column="25">keylist_size<pos:position pos:line="59" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="39">" %s"<pos:position pos:line="59" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="46">self_encrypt<pos:position pos:line="59" pos:column="58"/></name></expr></argument>)<pos:position pos:line="59" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="60"/></expr_stmt>  <comment type="block" pos:line="59" pos:column="62">/* __SPRINTF_CHECKED__ */</comment>
  }<pos:position pos:line="60" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="62" pos:column="3">rfc822_free_address<pos:position pos:line="62" pos:column="22"/></name> <argument_list pos:line="62" pos:column="23">(<argument><expr><operator pos:line="62" pos:column="24">&amp;<pos:position pos:line="62" pos:column="29"/></operator><name pos:line="62" pos:column="25">adrlist<pos:position pos:line="62" pos:column="32"/></name></expr></argument>)<pos:position pos:line="62" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="34"/></expr_stmt>
    
  <return pos:line="64" pos:column="3">return <expr><operator pos:line="64" pos:column="10">(<pos:position pos:line="64" pos:column="11"/></operator><literal type="number" pos:line="64" pos:column="11">0<pos:position pos:line="64" pos:column="12"/></literal><operator pos:line="64" pos:column="12">)<pos:position pos:line="64" pos:column="13"/></operator></expr>;<pos:position pos:line="64" pos:column="14"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

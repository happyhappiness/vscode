<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1044_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_decode_attachment<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">BODY<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">b<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">STATE<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">s<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">istext<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><call><name pos:line="3" pos:column="16">mutt_is_text_part<pos:position pos:line="3" pos:column="33"/></name> <argument_list pos:line="3" pos:column="34">(<argument><expr><name pos:line="3" pos:column="35">b<pos:position pos:line="3" pos:column="36"/></name></expr></argument>)<pos:position pos:line="3" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">iconv_t<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">cd<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><call pos:line="4" pos:column="16">(<name pos:line="4" pos:column="17">iconv_t<pos:position pos:line="4" pos:column="24"/></name>)<argument_list pos:line="4" pos:column="25">(<argument><expr><operator pos:line="4" pos:column="26">-<pos:position pos:line="4" pos:column="27"/></operator><literal type="number" pos:line="4" pos:column="27">1<pos:position pos:line="4" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="29"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">istext<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">&amp;&amp;<pos:position pos:line="6" pos:column="24"/></operator> <name><name pos:line="6" pos:column="17">s<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">-&gt;<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="20">flags<pos:position pos:line="6" pos:column="25"/></name></name> <operator pos:line="6" pos:column="26">&amp;<pos:position pos:line="6" pos:column="31"/></operator> <name pos:line="6" pos:column="28">MUTT_CHARCONV<pos:position pos:line="6" pos:column="41"/></name></expr>)<pos:position pos:line="6" pos:column="42"/></condition><then pos:line="6" pos:column="42">
  <block pos:line="7" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">charset<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><call><name pos:line="8" pos:column="21">mutt_get_parameter<pos:position pos:line="8" pos:column="39"/></name> <argument_list pos:line="8" pos:column="40">(<argument><expr><literal type="string" pos:line="8" pos:column="41">"charset"<pos:position pos:line="8" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="52">b<pos:position pos:line="8" pos:column="53"/></name><operator pos:line="8" pos:column="53">-&gt;<pos:position pos:line="8" pos:column="58"/></operator><name pos:line="8" pos:column="55">parameter<pos:position pos:line="8" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="66"/></decl_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">charset<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">&amp;&amp;<pos:position pos:line="9" pos:column="28"/></operator> <name pos:line="9" pos:column="21">AssumedCharset<pos:position pos:line="9" pos:column="35"/></name> <operator pos:line="9" pos:column="36">&amp;&amp;<pos:position pos:line="9" pos:column="46"/></operator> <operator pos:line="9" pos:column="39">*<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="40">AssumedCharset<pos:position pos:line="9" pos:column="54"/></name></expr>)<pos:position pos:line="9" pos:column="55"/></condition><then pos:line="9" pos:column="55">
      <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="7">charset<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <call><name pos:line="10" pos:column="17">mutt_get_default_charset<pos:position pos:line="10" pos:column="41"/></name> <argument_list pos:line="10" pos:column="42">()<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="45"/></expr_stmt></block></then></if>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">charset<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">&amp;&amp;<pos:position pos:line="11" pos:column="27"/></operator> <name pos:line="11" pos:column="20">Charset<pos:position pos:line="11" pos:column="27"/></name></expr>)<pos:position pos:line="11" pos:column="28"/></condition><then pos:line="11" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="7">cd<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <call><name pos:line="12" pos:column="12">mutt_iconv_open<pos:position pos:line="12" pos:column="27"/></name> <argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">Charset<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="38">charset<pos:position pos:line="12" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="47">MUTT_ICONV_HOOK_FROM<pos:position pos:line="12" pos:column="67"/></name></expr></argument>)<pos:position pos:line="12" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="69"/></expr_stmt></block></then></if>
  }<pos:position pos:line="13" pos:column="4"/></block></then>
  <elseif pos:line="14" pos:column="3">else <if pos:line="14" pos:column="8">if <condition pos:line="14" pos:column="11">(<expr><name pos:line="14" pos:column="12">istext<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">&amp;&amp;<pos:position pos:line="14" pos:column="29"/></operator> <name><name pos:line="14" pos:column="22">b<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">-&gt;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="25">charset<pos:position pos:line="14" pos:column="32"/></name></name></expr>)<pos:position pos:line="14" pos:column="33"/></condition><then pos:line="14" pos:column="33">
    <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="5">cd<pos:position pos:line="15" pos:column="7"/></name> <operator pos:line="15" pos:column="8">=<pos:position pos:line="15" pos:column="9"/></operator> <call><name pos:line="15" pos:column="10">mutt_iconv_open<pos:position pos:line="15" pos:column="25"/></name> <argument_list pos:line="15" pos:column="26">(<argument><expr><name pos:line="15" pos:column="27">Charset<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="36">b<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">-&gt;<pos:position pos:line="15" pos:column="42"/></operator><name pos:line="15" pos:column="39">charset<pos:position pos:line="15" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="48">MUTT_ICONV_HOOK_FROM<pos:position pos:line="15" pos:column="68"/></name></expr></argument>)<pos:position pos:line="15" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="70"/></expr_stmt></block></then></if></elseif></if>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">fseeko<pos:position pos:line="17" pos:column="9"/></name> <argument_list pos:line="17" pos:column="10">(<argument><expr><name><name pos:line="17" pos:column="11">s<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">fpin<pos:position pos:line="17" pos:column="18"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="20">b<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">-&gt;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="23">offset<pos:position pos:line="17" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="31">0<pos:position pos:line="17" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>
  <switch pos:line="18" pos:column="3">switch <condition pos:line="18" pos:column="10">(<expr><name><name pos:line="18" pos:column="11">b<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">encoding<pos:position pos:line="18" pos:column="22"/></name></name></expr>)<pos:position pos:line="18" pos:column="23"/></condition>
  <block pos:line="19" pos:column="3">{
    <case pos:line="20" pos:column="5">case <expr><name pos:line="20" pos:column="10">ENCQUOTEDPRINTABLE<pos:position pos:line="20" pos:column="28"/></name></expr>:<pos:position pos:line="20" pos:column="29"/></case>
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">mutt_decode_quoted<pos:position pos:line="21" pos:column="25"/></name> <argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">s<pos:position pos:line="21" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="30">b<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">-&gt;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="33">length<pos:position pos:line="21" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="41">istext<pos:position pos:line="21" pos:column="47"/></name> <operator pos:line="21" pos:column="48">||<pos:position pos:line="21" pos:column="50"/></operator> <operator pos:line="21" pos:column="51">(<pos:position pos:line="21" pos:column="52"/></operator><operator pos:line="21" pos:column="52">(<pos:position pos:line="21" pos:column="53"/></operator><name pos:line="21" pos:column="53">WithCrypto<pos:position pos:line="21" pos:column="63"/></name> <operator pos:line="21" pos:column="64">&amp;<pos:position pos:line="21" pos:column="69"/></operator> <name pos:line="21" pos:column="66">APPLICATION_PGP<pos:position pos:line="21" pos:column="81"/></name><operator pos:line="21" pos:column="81">)<pos:position pos:line="21" pos:column="82"/></operator> <operator pos:line="21" pos:column="83">&amp;&amp;<pos:position pos:line="21" pos:column="93"/></operator> <call><name pos:line="21" pos:column="86">mutt_is_application_pgp<pos:position pos:line="21" pos:column="109"/></name> <argument_list pos:line="21" pos:column="110">(<argument><expr><name pos:line="21" pos:column="111">b<pos:position pos:line="21" pos:column="112"/></name></expr></argument>)<pos:position pos:line="21" pos:column="113"/></argument_list></call><operator pos:line="21" pos:column="113">)<pos:position pos:line="21" pos:column="114"/></operator></expr></argument>, <argument><expr><name pos:line="21" pos:column="116">cd<pos:position pos:line="21" pos:column="118"/></name></expr></argument>)<pos:position pos:line="21" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="120"/></expr_stmt>
      <break pos:line="22" pos:column="7">break;<pos:position pos:line="22" pos:column="13"/></break>
    <case pos:line="23" pos:column="5">case <expr><name pos:line="23" pos:column="10">ENCBASE64<pos:position pos:line="23" pos:column="19"/></name></expr>:<pos:position pos:line="23" pos:column="20"/></case>
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">mutt_decode_base64<pos:position pos:line="24" pos:column="25"/></name> <argument_list pos:line="24" pos:column="26">(<argument><expr><name pos:line="24" pos:column="27">s<pos:position pos:line="24" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="30">b<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">-&gt;<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="33">length<pos:position pos:line="24" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="41">istext<pos:position pos:line="24" pos:column="47"/></name> <operator pos:line="24" pos:column="48">||<pos:position pos:line="24" pos:column="50"/></operator> <operator pos:line="24" pos:column="51">(<pos:position pos:line="24" pos:column="52"/></operator><operator pos:line="24" pos:column="52">(<pos:position pos:line="24" pos:column="53"/></operator><name pos:line="24" pos:column="53">WithCrypto<pos:position pos:line="24" pos:column="63"/></name> <operator pos:line="24" pos:column="64">&amp;<pos:position pos:line="24" pos:column="69"/></operator> <name pos:line="24" pos:column="66">APPLICATION_PGP<pos:position pos:line="24" pos:column="81"/></name><operator pos:line="24" pos:column="81">)<pos:position pos:line="24" pos:column="82"/></operator> <operator pos:line="24" pos:column="83">&amp;&amp;<pos:position pos:line="24" pos:column="93"/></operator> <call><name pos:line="24" pos:column="86">mutt_is_application_pgp<pos:position pos:line="24" pos:column="109"/></name> <argument_list pos:line="24" pos:column="110">(<argument><expr><name pos:line="24" pos:column="111">b<pos:position pos:line="24" pos:column="112"/></name></expr></argument>)<pos:position pos:line="24" pos:column="113"/></argument_list></call><operator pos:line="24" pos:column="113">)<pos:position pos:line="24" pos:column="114"/></operator></expr></argument>, <argument><expr><name pos:line="24" pos:column="116">cd<pos:position pos:line="24" pos:column="118"/></name></expr></argument>)<pos:position pos:line="24" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="120"/></expr_stmt>
      <break pos:line="25" pos:column="7">break;<pos:position pos:line="25" pos:column="13"/></break>
    <case pos:line="26" pos:column="5">case <expr><name pos:line="26" pos:column="10">ENCUUENCODED<pos:position pos:line="26" pos:column="22"/></name></expr>:<pos:position pos:line="26" pos:column="23"/></case>
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">mutt_decode_uuencoded<pos:position pos:line="27" pos:column="28"/></name> <argument_list pos:line="27" pos:column="29">(<argument><expr><name pos:line="27" pos:column="30">s<pos:position pos:line="27" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="33">b<pos:position pos:line="27" pos:column="34"/></name><operator pos:line="27" pos:column="34">-&gt;<pos:position pos:line="27" pos:column="39"/></operator><name pos:line="27" pos:column="36">length<pos:position pos:line="27" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="44">istext<pos:position pos:line="27" pos:column="50"/></name> <operator pos:line="27" pos:column="51">||<pos:position pos:line="27" pos:column="53"/></operator> <operator pos:line="27" pos:column="54">(<pos:position pos:line="27" pos:column="55"/></operator><operator pos:line="27" pos:column="55">(<pos:position pos:line="27" pos:column="56"/></operator><name pos:line="27" pos:column="56">WithCrypto<pos:position pos:line="27" pos:column="66"/></name> <operator pos:line="27" pos:column="67">&amp;<pos:position pos:line="27" pos:column="72"/></operator> <name pos:line="27" pos:column="69">APPLICATION_PGP<pos:position pos:line="27" pos:column="84"/></name><operator pos:line="27" pos:column="84">)<pos:position pos:line="27" pos:column="85"/></operator> <operator pos:line="27" pos:column="86">&amp;&amp;<pos:position pos:line="27" pos:column="96"/></operator> <call><name pos:line="27" pos:column="89">mutt_is_application_pgp<pos:position pos:line="27" pos:column="112"/></name> <argument_list pos:line="27" pos:column="113">(<argument><expr><name pos:line="27" pos:column="114">b<pos:position pos:line="27" pos:column="115"/></name></expr></argument>)<pos:position pos:line="27" pos:column="116"/></argument_list></call><operator pos:line="27" pos:column="116">)<pos:position pos:line="27" pos:column="117"/></operator></expr></argument>, <argument><expr><name pos:line="27" pos:column="119">cd<pos:position pos:line="27" pos:column="121"/></name></expr></argument>)<pos:position pos:line="27" pos:column="122"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="123"/></expr_stmt>
      <break pos:line="28" pos:column="7">break;<pos:position pos:line="28" pos:column="13"/></break>
    <default pos:line="29" pos:column="5">default:<pos:position pos:line="29" pos:column="13"/></default>
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">mutt_decode_xbit<pos:position pos:line="30" pos:column="23"/></name> <argument_list pos:line="30" pos:column="24">(<argument><expr><name pos:line="30" pos:column="25">s<pos:position pos:line="30" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="28">b<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">-&gt;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="31">length<pos:position pos:line="30" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="39">istext<pos:position pos:line="30" pos:column="45"/></name> <operator pos:line="30" pos:column="46">||<pos:position pos:line="30" pos:column="48"/></operator> <operator pos:line="30" pos:column="49">(<pos:position pos:line="30" pos:column="50"/></operator><operator pos:line="30" pos:column="50">(<pos:position pos:line="30" pos:column="51"/></operator><name pos:line="30" pos:column="51">WithCrypto<pos:position pos:line="30" pos:column="61"/></name> <operator pos:line="30" pos:column="62">&amp;<pos:position pos:line="30" pos:column="67"/></operator> <name pos:line="30" pos:column="64">APPLICATION_PGP<pos:position pos:line="30" pos:column="79"/></name><operator pos:line="30" pos:column="79">)<pos:position pos:line="30" pos:column="80"/></operator> <operator pos:line="30" pos:column="81">&amp;&amp;<pos:position pos:line="30" pos:column="91"/></operator> <call><name pos:line="30" pos:column="84">mutt_is_application_pgp<pos:position pos:line="30" pos:column="107"/></name> <argument_list pos:line="30" pos:column="108">(<argument><expr><name pos:line="30" pos:column="109">b<pos:position pos:line="30" pos:column="110"/></name></expr></argument>)<pos:position pos:line="30" pos:column="111"/></argument_list></call><operator pos:line="30" pos:column="111">)<pos:position pos:line="30" pos:column="112"/></operator></expr></argument>, <argument><expr><name pos:line="30" pos:column="114">cd<pos:position pos:line="30" pos:column="116"/></name></expr></argument>)<pos:position pos:line="30" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="118"/></expr_stmt>
      <break pos:line="31" pos:column="7">break;<pos:position pos:line="31" pos:column="13"/></break>
  }<pos:position pos:line="32" pos:column="4"/></block></switch>

  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><name pos:line="34" pos:column="7">cd<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">!=<pos:position pos:line="34" pos:column="12"/></operator> <call pos:line="34" pos:column="13">(<name pos:line="34" pos:column="14">iconv_t<pos:position pos:line="34" pos:column="21"/></name>)<argument_list pos:line="34" pos:column="22">(<argument><expr><operator pos:line="34" pos:column="23">-<pos:position pos:line="34" pos:column="24"/></operator><literal type="number" pos:line="34" pos:column="24">1<pos:position pos:line="34" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="27"/></condition><then pos:line="34" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="5">iconv_close<pos:position pos:line="35" pos:column="16"/></name> <argument_list pos:line="35" pos:column="17">(<argument><expr><name pos:line="35" pos:column="18">cd<pos:position pos:line="35" pos:column="20"/></name></expr></argument>)<pos:position pos:line="35" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="22"/></expr_stmt></block></then></if>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

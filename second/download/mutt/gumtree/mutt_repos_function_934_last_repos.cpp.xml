<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_934_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">mutt_get_default_charset<pos:position pos:line="1" pos:column="31"/></name> <parameter_list pos:line="1" pos:column="32">()<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="3" pos:column="3">static<pos:position pos:line="3" pos:column="9"/></specifier> <type><name pos:line="3" pos:column="10">char<pos:position pos:line="3" pos:column="14"/></name></type> <name><name pos:line="3" pos:column="15">fcharset<pos:position pos:line="3" pos:column="23"/></name><index pos:line="3" pos:column="23">[<expr><name pos:line="3" pos:column="24">SHORT_STRING<pos:position pos:line="3" pos:column="36"/></name></expr>]<pos:position pos:line="3" pos:column="37"/></index></name></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">c<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name pos:line="4" pos:column="19">AssumedCharset<pos:position pos:line="4" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">c1<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">c<pos:position pos:line="7" pos:column="8"/></name> <operator pos:line="7" pos:column="9">&amp;&amp;<pos:position pos:line="7" pos:column="19"/></operator> <operator pos:line="7" pos:column="12">*<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">c<pos:position pos:line="7" pos:column="14"/></name></expr>)<pos:position pos:line="7" pos:column="15"/></condition><then pos:line="7" pos:column="15"> <block pos:line="7" pos:column="16">{
    <expr_stmt><expr><name pos:line="8" pos:column="5">c1<pos:position pos:line="8" pos:column="7"/></name> <operator pos:line="8" pos:column="8">=<pos:position pos:line="8" pos:column="9"/></operator> <call><name pos:line="8" pos:column="10">strchr<pos:position pos:line="8" pos:column="16"/></name> <argument_list pos:line="8" pos:column="17">(<argument><expr><name pos:line="8" pos:column="18">c<pos:position pos:line="8" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="21">':'<pos:position pos:line="8" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">strfcpy<pos:position pos:line="9" pos:column="12"/></name> <argument_list pos:line="9" pos:column="13">(<argument><expr><name pos:line="9" pos:column="14">fcharset<pos:position pos:line="9" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="24">c<pos:position pos:line="9" pos:column="25"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="9" pos:column="27">c1<pos:position pos:line="9" pos:column="29"/></name></expr> ?<pos:position pos:line="9" pos:column="31"/></condition><then pos:line="9" pos:column="31"> <expr><operator pos:line="9" pos:column="32">(<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="33">c1<pos:position pos:line="9" pos:column="35"/></name> <operator pos:line="9" pos:column="36">-<pos:position pos:line="9" pos:column="37"/></operator> <name pos:line="9" pos:column="38">c<pos:position pos:line="9" pos:column="39"/></name> <operator pos:line="9" pos:column="40">+<pos:position pos:line="9" pos:column="41"/></operator> <literal type="number" pos:line="9" pos:column="42">1<pos:position pos:line="9" pos:column="43"/></literal><operator pos:line="9" pos:column="43">)<pos:position pos:line="9" pos:column="44"/></operator></expr> <pos:position pos:line="9" pos:column="45"/></then><else pos:line="9" pos:column="45">: <expr><sizeof pos:line="9" pos:column="47">sizeof <argument_list pos:line="9" pos:column="54">(<argument><expr><name pos:line="9" pos:column="55">fcharset<pos:position pos:line="9" pos:column="63"/></name></expr></argument>)<pos:position pos:line="9" pos:column="64"/></argument_list></sizeof></expr></else></ternary></expr></argument>)<pos:position pos:line="9" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="66"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">fcharset<pos:position pos:line="10" pos:column="20"/></name></expr>;<pos:position pos:line="10" pos:column="21"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>
  <return pos:line="12" pos:column="3">return <expr><call><name pos:line="12" pos:column="10">strcpy<pos:position pos:line="12" pos:column="16"/></name> <argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">fcharset<pos:position pos:line="12" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="28">"us-ascii"<pos:position pos:line="12" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="40"/></return> <comment type="block" pos:line="12" pos:column="41">/* __STRCPY_CHECKED__ */</comment>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

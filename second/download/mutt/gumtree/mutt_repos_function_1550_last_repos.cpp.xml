<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1550_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">mh_sequences_add_one<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">CONTEXT<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type> <name pos:line="1" pos:column="45">ctx<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">n<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">short<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">unseen<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
				  <parameter><decl><type><name pos:line="2" pos:column="35">short<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">flagged<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">short<pos:position pos:line="2" pos:column="55"/></name></type> <name pos:line="2" pos:column="56">replied<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">short<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">unseen_done<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><literal type="number" pos:line="4" pos:column="23">0<pos:position pos:line="4" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">short<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">flagged_done<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">short<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">replied_done<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">FILE<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">ofp<pos:position pos:line="8" pos:column="12"/></name> <init pos:line="8" pos:column="13">= <expr><name pos:line="8" pos:column="15">NULL<pos:position pos:line="8" pos:column="19"/></name></expr></init></decl>, <modifier pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="22">nfp<pos:position pos:line="8" pos:column="25"/></name> <init pos:line="8" pos:column="26">= <expr><name pos:line="8" pos:column="28">NULL<pos:position pos:line="8" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">tmpfname<pos:position pos:line="10" pos:column="17"/></name></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name></type> <name><name pos:line="11" pos:column="8">sequences<pos:position pos:line="11" pos:column="17"/></name><index pos:line="11" pos:column="17">[<expr><name pos:line="11" pos:column="18">_POSIX_PATH_MAX<pos:position pos:line="11" pos:column="33"/></name></expr>]<pos:position pos:line="11" pos:column="34"/></index></name></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name></type> <name><name pos:line="13" pos:column="8">seq_unseen<pos:position pos:line="13" pos:column="18"/></name><index pos:line="13" pos:column="18">[<expr><name pos:line="13" pos:column="19">STRING<pos:position pos:line="13" pos:column="25"/></name></expr>]<pos:position pos:line="13" pos:column="26"/></index></name></decl>;<pos:position pos:line="13" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name></type> <name><name pos:line="14" pos:column="8">seq_replied<pos:position pos:line="14" pos:column="19"/></name><index pos:line="14" pos:column="19">[<expr><name pos:line="14" pos:column="20">STRING<pos:position pos:line="14" pos:column="26"/></name></expr>]<pos:position pos:line="14" pos:column="27"/></index></name></decl>;<pos:position pos:line="14" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">char<pos:position pos:line="15" pos:column="7"/></name></type> <name><name pos:line="15" pos:column="8">seq_flagged<pos:position pos:line="15" pos:column="19"/></name><index pos:line="15" pos:column="19">[<expr><name pos:line="15" pos:column="20">STRING<pos:position pos:line="15" pos:column="26"/></name></expr>]<pos:position pos:line="15" pos:column="27"/></index></name></decl>;<pos:position pos:line="15" pos:column="28"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="17" pos:column="3">char<pos:position pos:line="17" pos:column="7"/></name> <modifier pos:line="17" pos:column="8">*<pos:position pos:line="17" pos:column="9"/></modifier></type><name pos:line="17" pos:column="9">buff<pos:position pos:line="17" pos:column="13"/></name> <init pos:line="17" pos:column="14">= <expr><name pos:line="17" pos:column="16">NULL<pos:position pos:line="17" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">int<pos:position pos:line="18" pos:column="6"/></name></type> <name pos:line="18" pos:column="7">line<pos:position pos:line="18" pos:column="11"/></name></decl>;<pos:position pos:line="18" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">size_t<pos:position pos:line="19" pos:column="9"/></name></type> <name pos:line="19" pos:column="10">sz<pos:position pos:line="19" pos:column="12"/></name></decl>;<pos:position pos:line="19" pos:column="13"/></decl_stmt>

  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><call><name pos:line="21" pos:column="7">mh_mkstemp<pos:position pos:line="21" pos:column="17"/></name> <argument_list pos:line="21" pos:column="18">(<argument><expr><name pos:line="21" pos:column="19">ctx<pos:position pos:line="21" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="24">&amp;<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="25">nfp<pos:position pos:line="21" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="30">&amp;<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="31">tmpfname<pos:position pos:line="21" pos:column="39"/></name></expr></argument>)<pos:position pos:line="21" pos:column="40"/></argument_list></call> <operator pos:line="21" pos:column="41">==<pos:position pos:line="21" pos:column="43"/></operator> <operator pos:line="21" pos:column="44">-<pos:position pos:line="21" pos:column="45"/></operator><literal type="number" pos:line="21" pos:column="45">1<pos:position pos:line="21" pos:column="46"/></literal></expr>)<pos:position pos:line="21" pos:column="47"/></condition><then pos:line="21" pos:column="47">
    <block type="pseudo"><return pos:line="22" pos:column="5">return;<pos:position pos:line="22" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="24" pos:column="3">snprintf<pos:position pos:line="24" pos:column="11"/></name> <argument_list pos:line="24" pos:column="12">(<argument><expr><name pos:line="24" pos:column="13">seq_unseen<pos:position pos:line="24" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="25">sizeof <argument_list pos:line="24" pos:column="32">(<argument><expr><name pos:line="24" pos:column="33">seq_unseen<pos:position pos:line="24" pos:column="43"/></name></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="46">"%s:"<pos:position pos:line="24" pos:column="51"/></literal></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="53">NONULL<pos:position pos:line="24" pos:column="59"/></name> <argument_list pos:line="24" pos:column="60">(<argument><expr><name pos:line="24" pos:column="61">MhUnseen<pos:position pos:line="24" pos:column="69"/></name></expr></argument>)<pos:position pos:line="24" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="72"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">snprintf<pos:position pos:line="25" pos:column="11"/></name> <argument_list pos:line="25" pos:column="12">(<argument><expr><name pos:line="25" pos:column="13">seq_replied<pos:position pos:line="25" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="26">sizeof <argument_list pos:line="25" pos:column="33">(<argument><expr><name pos:line="25" pos:column="34">seq_replied<pos:position pos:line="25" pos:column="45"/></name></expr></argument>)<pos:position pos:line="25" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="48">"%s:"<pos:position pos:line="25" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="55">NONULL<pos:position pos:line="25" pos:column="61"/></name> <argument_list pos:line="25" pos:column="62">(<argument><expr><name pos:line="25" pos:column="63">MhReplied<pos:position pos:line="25" pos:column="72"/></name></expr></argument>)<pos:position pos:line="25" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="75"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">snprintf<pos:position pos:line="26" pos:column="11"/></name> <argument_list pos:line="26" pos:column="12">(<argument><expr><name pos:line="26" pos:column="13">seq_flagged<pos:position pos:line="26" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="26">sizeof <argument_list pos:line="26" pos:column="33">(<argument><expr><name pos:line="26" pos:column="34">seq_flagged<pos:position pos:line="26" pos:column="45"/></name></expr></argument>)<pos:position pos:line="26" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="48">"%s:"<pos:position pos:line="26" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="55">NONULL<pos:position pos:line="26" pos:column="61"/></name> <argument_list pos:line="26" pos:column="62">(<argument><expr><name pos:line="26" pos:column="63">MhFlagged<pos:position pos:line="26" pos:column="72"/></name></expr></argument>)<pos:position pos:line="26" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="75"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="28" pos:column="3">snprintf<pos:position pos:line="28" pos:column="11"/></name> <argument_list pos:line="28" pos:column="12">(<argument><expr><name pos:line="28" pos:column="13">sequences<pos:position pos:line="28" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="24">sizeof <argument_list pos:line="28" pos:column="31">(<argument><expr><name pos:line="28" pos:column="32">sequences<pos:position pos:line="28" pos:column="41"/></name></expr></argument>)<pos:position pos:line="28" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="44">"%s/.mh_sequences"<pos:position pos:line="28" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="64">ctx<pos:position pos:line="28" pos:column="67"/></name><operator pos:line="28" pos:column="67">-&gt;<pos:position pos:line="28" pos:column="72"/></operator><name pos:line="28" pos:column="69">path<pos:position pos:line="28" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="75"/></expr_stmt>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><operator pos:line="29" pos:column="7">(<pos:position pos:line="29" pos:column="8"/></operator><name pos:line="29" pos:column="8">ofp<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <call><name pos:line="29" pos:column="14">fopen<pos:position pos:line="29" pos:column="19"/></name> <argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">sequences<pos:position pos:line="29" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="32">"r"<pos:position pos:line="29" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="36"/></argument_list></call><operator pos:line="29" pos:column="36">)<pos:position pos:line="29" pos:column="37"/></operator></expr>)<pos:position pos:line="29" pos:column="38"/></condition><then pos:line="29" pos:column="38">
  <block pos:line="30" pos:column="3">{
    <while pos:line="31" pos:column="5">while <condition pos:line="31" pos:column="11">(<expr><operator pos:line="31" pos:column="12">(<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="13">buff<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">=<pos:position pos:line="31" pos:column="19"/></operator> <call><name pos:line="31" pos:column="20">mutt_read_line<pos:position pos:line="31" pos:column="34"/></name> <argument_list pos:line="31" pos:column="35">(<argument><expr><name pos:line="31" pos:column="36">buff<pos:position pos:line="31" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="42">&amp;<pos:position pos:line="31" pos:column="47"/></operator><name pos:line="31" pos:column="43">sz<pos:position pos:line="31" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="47">ofp<pos:position pos:line="31" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="52">&amp;<pos:position pos:line="31" pos:column="57"/></operator><name pos:line="31" pos:column="53">line<pos:position pos:line="31" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="59">0<pos:position pos:line="31" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="61"/></argument_list></call><operator pos:line="31" pos:column="61">)<pos:position pos:line="31" pos:column="62"/></operator></expr>)<pos:position pos:line="31" pos:column="63"/></condition>
    <block pos:line="32" pos:column="5">{
      <if pos:line="33" pos:column="7">if <condition pos:line="33" pos:column="10">(<expr><name pos:line="33" pos:column="11">unseen<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">&amp;&amp;<pos:position pos:line="33" pos:column="28"/></operator> <operator pos:line="33" pos:column="21">!<pos:position pos:line="33" pos:column="22"/></operator><call><name pos:line="33" pos:column="22">strncmp<pos:position pos:line="33" pos:column="29"/></name> <argument_list pos:line="33" pos:column="30">(<argument><expr><name pos:line="33" pos:column="31">buff<pos:position pos:line="33" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="37">seq_unseen<pos:position pos:line="33" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="49">mutt_strlen<pos:position pos:line="33" pos:column="60"/></name> <argument_list pos:line="33" pos:column="61">(<argument><expr><name pos:line="33" pos:column="62">seq_unseen<pos:position pos:line="33" pos:column="72"/></name></expr></argument>)<pos:position pos:line="33" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="75"/></condition><then pos:line="33" pos:column="75">
      <block pos:line="34" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">fprintf<pos:position pos:line="35" pos:column="16"/></name> <argument_list pos:line="35" pos:column="17">(<argument><expr><name pos:line="35" pos:column="18">nfp<pos:position pos:line="35" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="23">"%s %d\n"<pos:position pos:line="35" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="34">buff<pos:position pos:line="35" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="40">n<pos:position pos:line="35" pos:column="41"/></name></expr></argument>)<pos:position pos:line="35" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name pos:line="36" pos:column="9">unseen_done<pos:position pos:line="36" pos:column="20"/></name> <operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator> <literal type="number" pos:line="36" pos:column="23">1<pos:position pos:line="36" pos:column="24"/></literal></expr>;<pos:position pos:line="36" pos:column="25"/></expr_stmt>
      }<pos:position pos:line="37" pos:column="8"/></block></then>
      <elseif pos:line="38" pos:column="7">else <if pos:line="38" pos:column="12">if <condition pos:line="38" pos:column="15">(<expr><name pos:line="38" pos:column="16">flagged<pos:position pos:line="38" pos:column="23"/></name>
	       <operator pos:line="39" pos:column="16">&amp;&amp;<pos:position pos:line="39" pos:column="26"/></operator> <operator pos:line="39" pos:column="19">!<pos:position pos:line="39" pos:column="20"/></operator><call><name pos:line="39" pos:column="20">strncmp<pos:position pos:line="39" pos:column="27"/></name> <argument_list pos:line="39" pos:column="28">(<argument><expr><name pos:line="39" pos:column="29">buff<pos:position pos:line="39" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="35">seq_flagged<pos:position pos:line="39" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="48">mutt_strlen<pos:position pos:line="39" pos:column="59"/></name> <argument_list pos:line="39" pos:column="60">(<argument><expr><name pos:line="39" pos:column="61">seq_flagged<pos:position pos:line="39" pos:column="72"/></name></expr></argument>)<pos:position pos:line="39" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="75"/></condition><then pos:line="39" pos:column="75">
      <block pos:line="40" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">fprintf<pos:position pos:line="41" pos:column="16"/></name> <argument_list pos:line="41" pos:column="17">(<argument><expr><name pos:line="41" pos:column="18">nfp<pos:position pos:line="41" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="23">"%s %d\n"<pos:position pos:line="41" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="34">buff<pos:position pos:line="41" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="40">n<pos:position pos:line="41" pos:column="41"/></name></expr></argument>)<pos:position pos:line="41" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name pos:line="42" pos:column="9">flagged_done<pos:position pos:line="42" pos:column="21"/></name> <operator pos:line="42" pos:column="22">=<pos:position pos:line="42" pos:column="23"/></operator> <literal type="number" pos:line="42" pos:column="24">1<pos:position pos:line="42" pos:column="25"/></literal></expr>;<pos:position pos:line="42" pos:column="26"/></expr_stmt>
      }<pos:position pos:line="43" pos:column="8"/></block></then></if></elseif>
      <elseif pos:line="44" pos:column="7">else <if pos:line="44" pos:column="12">if <condition pos:line="44" pos:column="15">(<expr><name pos:line="44" pos:column="16">replied<pos:position pos:line="44" pos:column="23"/></name>
	       <operator pos:line="45" pos:column="16">&amp;&amp;<pos:position pos:line="45" pos:column="26"/></operator> <operator pos:line="45" pos:column="19">!<pos:position pos:line="45" pos:column="20"/></operator><call><name pos:line="45" pos:column="20">strncmp<pos:position pos:line="45" pos:column="27"/></name> <argument_list pos:line="45" pos:column="28">(<argument><expr><name pos:line="45" pos:column="29">buff<pos:position pos:line="45" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="35">seq_replied<pos:position pos:line="45" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="48">mutt_strlen<pos:position pos:line="45" pos:column="59"/></name> <argument_list pos:line="45" pos:column="60">(<argument><expr><name pos:line="45" pos:column="61">seq_replied<pos:position pos:line="45" pos:column="72"/></name></expr></argument>)<pos:position pos:line="45" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="75"/></condition><then pos:line="45" pos:column="75">
      <block pos:line="46" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">fprintf<pos:position pos:line="47" pos:column="16"/></name> <argument_list pos:line="47" pos:column="17">(<argument><expr><name pos:line="47" pos:column="18">nfp<pos:position pos:line="47" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="23">"%s %d\n"<pos:position pos:line="47" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="34">buff<pos:position pos:line="47" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="40">n<pos:position pos:line="47" pos:column="41"/></name></expr></argument>)<pos:position pos:line="47" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name pos:line="48" pos:column="9">replied_done<pos:position pos:line="48" pos:column="21"/></name> <operator pos:line="48" pos:column="22">=<pos:position pos:line="48" pos:column="23"/></operator> <literal type="number" pos:line="48" pos:column="24">1<pos:position pos:line="48" pos:column="25"/></literal></expr>;<pos:position pos:line="48" pos:column="26"/></expr_stmt>
      }<pos:position pos:line="49" pos:column="8"/></block></then></if></elseif>
      <else pos:line="50" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="9">fprintf<pos:position pos:line="51" pos:column="16"/></name> <argument_list pos:line="51" pos:column="17">(<argument><expr><name pos:line="51" pos:column="18">nfp<pos:position pos:line="51" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="23">"%s\n"<pos:position pos:line="51" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="31">buff<pos:position pos:line="51" pos:column="35"/></name></expr></argument>)<pos:position pos:line="51" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="37"/></expr_stmt></block></else></if>
    }<pos:position pos:line="52" pos:column="6"/></block></while>
  }<pos:position pos:line="53" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="54" pos:column="3">safe_fclose<pos:position pos:line="54" pos:column="14"/></name> <argument_list pos:line="54" pos:column="15">(<argument><expr><operator pos:line="54" pos:column="16">&amp;<pos:position pos:line="54" pos:column="21"/></operator><name pos:line="54" pos:column="17">ofp<pos:position pos:line="54" pos:column="20"/></name></expr></argument>)<pos:position pos:line="54" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="55" pos:column="3">FREE<pos:position pos:line="55" pos:column="7"/></name> <argument_list pos:line="55" pos:column="8">(<argument><expr><operator pos:line="55" pos:column="9">&amp;<pos:position pos:line="55" pos:column="14"/></operator><name pos:line="55" pos:column="10">buff<pos:position pos:line="55" pos:column="14"/></name></expr></argument>)<pos:position pos:line="55" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="16"/></expr_stmt>

  <if pos:line="57" pos:column="3">if <condition pos:line="57" pos:column="6">(<expr><operator pos:line="57" pos:column="7">!<pos:position pos:line="57" pos:column="8"/></operator><name pos:line="57" pos:column="8">unseen_done<pos:position pos:line="57" pos:column="19"/></name> <operator pos:line="57" pos:column="20">&amp;&amp;<pos:position pos:line="57" pos:column="30"/></operator> <name pos:line="57" pos:column="23">unseen<pos:position pos:line="57" pos:column="29"/></name></expr>)<pos:position pos:line="57" pos:column="30"/></condition><then pos:line="57" pos:column="30">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="5">fprintf<pos:position pos:line="58" pos:column="12"/></name> <argument_list pos:line="58" pos:column="13">(<argument><expr><name pos:line="58" pos:column="14">nfp<pos:position pos:line="58" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="19">"%s: %d\n"<pos:position pos:line="58" pos:column="29"/></literal></expr></argument>, <argument><expr><call><name pos:line="58" pos:column="31">NONULL<pos:position pos:line="58" pos:column="37"/></name> <argument_list pos:line="58" pos:column="38">(<argument><expr><name pos:line="58" pos:column="39">MhUnseen<pos:position pos:line="58" pos:column="47"/></name></expr></argument>)<pos:position pos:line="58" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="58" pos:column="50">n<pos:position pos:line="58" pos:column="51"/></name></expr></argument>)<pos:position pos:line="58" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="53"/></expr_stmt></block></then></if>
  <if pos:line="59" pos:column="3">if <condition pos:line="59" pos:column="6">(<expr><operator pos:line="59" pos:column="7">!<pos:position pos:line="59" pos:column="8"/></operator><name pos:line="59" pos:column="8">flagged_done<pos:position pos:line="59" pos:column="20"/></name> <operator pos:line="59" pos:column="21">&amp;&amp;<pos:position pos:line="59" pos:column="31"/></operator> <name pos:line="59" pos:column="24">flagged<pos:position pos:line="59" pos:column="31"/></name></expr>)<pos:position pos:line="59" pos:column="32"/></condition><then pos:line="59" pos:column="32">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="5">fprintf<pos:position pos:line="60" pos:column="12"/></name> <argument_list pos:line="60" pos:column="13">(<argument><expr><name pos:line="60" pos:column="14">nfp<pos:position pos:line="60" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="19">"%s: %d\n"<pos:position pos:line="60" pos:column="29"/></literal></expr></argument>, <argument><expr><call><name pos:line="60" pos:column="31">NONULL<pos:position pos:line="60" pos:column="37"/></name> <argument_list pos:line="60" pos:column="38">(<argument><expr><name pos:line="60" pos:column="39">MhFlagged<pos:position pos:line="60" pos:column="48"/></name></expr></argument>)<pos:position pos:line="60" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="60" pos:column="51">n<pos:position pos:line="60" pos:column="52"/></name></expr></argument>)<pos:position pos:line="60" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="54"/></expr_stmt></block></then></if>
  <if pos:line="61" pos:column="3">if <condition pos:line="61" pos:column="6">(<expr><operator pos:line="61" pos:column="7">!<pos:position pos:line="61" pos:column="8"/></operator><name pos:line="61" pos:column="8">replied_done<pos:position pos:line="61" pos:column="20"/></name> <operator pos:line="61" pos:column="21">&amp;&amp;<pos:position pos:line="61" pos:column="31"/></operator> <name pos:line="61" pos:column="24">replied<pos:position pos:line="61" pos:column="31"/></name></expr>)<pos:position pos:line="61" pos:column="32"/></condition><then pos:line="61" pos:column="32">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="5">fprintf<pos:position pos:line="62" pos:column="12"/></name> <argument_list pos:line="62" pos:column="13">(<argument><expr><name pos:line="62" pos:column="14">nfp<pos:position pos:line="62" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="19">"%s: %d\n"<pos:position pos:line="62" pos:column="29"/></literal></expr></argument>, <argument><expr><call><name pos:line="62" pos:column="31">NONULL<pos:position pos:line="62" pos:column="37"/></name> <argument_list pos:line="62" pos:column="38">(<argument><expr><name pos:line="62" pos:column="39">MhReplied<pos:position pos:line="62" pos:column="48"/></name></expr></argument>)<pos:position pos:line="62" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="62" pos:column="51">n<pos:position pos:line="62" pos:column="52"/></name></expr></argument>)<pos:position pos:line="62" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="54"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="64" pos:column="3">safe_fclose<pos:position pos:line="64" pos:column="14"/></name> <argument_list pos:line="64" pos:column="15">(<argument><expr><operator pos:line="64" pos:column="16">&amp;<pos:position pos:line="64" pos:column="21"/></operator><name pos:line="64" pos:column="17">nfp<pos:position pos:line="64" pos:column="20"/></name></expr></argument>)<pos:position pos:line="64" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="66" pos:column="3">unlink<pos:position pos:line="66" pos:column="9"/></name> <argument_list pos:line="66" pos:column="10">(<argument><expr><name pos:line="66" pos:column="11">sequences<pos:position pos:line="66" pos:column="20"/></name></expr></argument>)<pos:position pos:line="66" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="22"/></expr_stmt>
  <if pos:line="67" pos:column="3">if <condition pos:line="67" pos:column="6">(<expr><call><name pos:line="67" pos:column="7">safe_rename<pos:position pos:line="67" pos:column="18"/></name> <argument_list pos:line="67" pos:column="19">(<argument><expr><name pos:line="67" pos:column="20">tmpfname<pos:position pos:line="67" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="30">sequences<pos:position pos:line="67" pos:column="39"/></name></expr></argument>)<pos:position pos:line="67" pos:column="40"/></argument_list></call> <operator pos:line="67" pos:column="41">!=<pos:position pos:line="67" pos:column="43"/></operator> <literal type="number" pos:line="67" pos:column="44">0<pos:position pos:line="67" pos:column="45"/></literal></expr>)<pos:position pos:line="67" pos:column="46"/></condition><then pos:line="67" pos:column="46">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="5">unlink<pos:position pos:line="68" pos:column="11"/></name> <argument_list pos:line="68" pos:column="12">(<argument><expr><name pos:line="68" pos:column="13">tmpfname<pos:position pos:line="68" pos:column="21"/></name></expr></argument>)<pos:position pos:line="68" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="23"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="70" pos:column="3">FREE<pos:position pos:line="70" pos:column="7"/></name> <argument_list pos:line="70" pos:column="8">(<argument><expr><operator pos:line="70" pos:column="9">&amp;<pos:position pos:line="70" pos:column="14"/></operator><name pos:line="70" pos:column="10">tmpfname<pos:position pos:line="70" pos:column="18"/></name></expr></argument>)<pos:position pos:line="70" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="20"/></expr_stmt>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

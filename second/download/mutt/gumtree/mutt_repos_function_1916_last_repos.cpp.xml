<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1916_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">_nl_unload_domain<pos:position pos:line="3" pos:column="18"/></name> <argument_list pos:line="3" pos:column="19">(<argument><expr><name pos:line="3" pos:column="20">domain<pos:position pos:line="3" pos:column="26"/></name></expr></argument>)<pos:position pos:line="3" pos:column="27"/></argument_list>
     struct <name pos:line="4" pos:column="13">loaded_domain<pos:position pos:line="4" pos:column="26"/></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier><name pos:line="4" pos:column="28">domain<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
<block pos:line="5" pos:column="1">{
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name><name pos:line="6" pos:column="7">domain<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">-&gt;<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="15">plural<pos:position pos:line="6" pos:column="21"/></name></name> <operator pos:line="6" pos:column="22">!=<pos:position pos:line="6" pos:column="24"/></operator> <operator pos:line="6" pos:column="25">&amp;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="26">germanic_plural<pos:position pos:line="6" pos:column="41"/></name></expr>)<pos:position pos:line="6" pos:column="42"/></condition><then pos:line="6" pos:column="42">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="5">__gettext_free_exp<pos:position pos:line="7" pos:column="23"/></name> <argument_list pos:line="7" pos:column="24">(<argument><expr><name><name pos:line="7" pos:column="25">domain<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">-&gt;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="33">plural<pos:position pos:line="7" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="41"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">_nl_free_domain_conv<pos:position pos:line="9" pos:column="23"/></name> <argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">domain<pos:position pos:line="9" pos:column="31"/></name></expr></argument>)<pos:position pos:line="9" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="33"/></expr_stmt>

<cpp:ifdef pos:line="11" pos:column="1"># <cpp:directive pos:line="11" pos:column="3">ifdef<pos:position pos:line="11" pos:column="8"/></cpp:directive> <name pos:line="11" pos:column="9">_POSIX_MAPPED_FILES<pos:position pos:line="11" pos:column="28"/></name></cpp:ifdef>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name><name pos:line="12" pos:column="7">domain<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">use_mmap<pos:position pos:line="12" pos:column="23"/></name></name></expr>)<pos:position pos:line="12" pos:column="24"/></condition><then pos:line="12" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="5">munmap<pos:position pos:line="13" pos:column="11"/></name> <argument_list pos:line="13" pos:column="12">(<argument><expr><operator pos:line="13" pos:column="13">(<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">caddr_t<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">)<pos:position pos:line="13" pos:column="22"/></operator> <name><name pos:line="13" pos:column="23">domain<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">-&gt;<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="31">data<pos:position pos:line="13" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="37">domain<pos:position pos:line="13" pos:column="43"/></name><operator pos:line="13" pos:column="43">-&gt;<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="45">mmap_size<pos:position pos:line="13" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="56"/></expr_stmt></block></then>
  <else pos:line="14" pos:column="3">else
<cpp:endif pos:line="15" pos:column="1"># <cpp:directive pos:line="15" pos:column="3">endif<pos:position pos:line="15" pos:column="8"/></cpp:directive></cpp:endif>	<comment type="block" pos:line="15" pos:column="9">/* _POSIX_MAPPED_FILES */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="5">free<pos:position pos:line="16" pos:column="9"/></name> <argument_list pos:line="16" pos:column="10">(<argument><expr><operator pos:line="16" pos:column="11">(<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">void<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">*<pos:position pos:line="16" pos:column="18"/></operator><operator pos:line="16" pos:column="18">)<pos:position pos:line="16" pos:column="19"/></operator> <name><name pos:line="16" pos:column="20">domain<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">data<pos:position pos:line="16" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">free<pos:position pos:line="18" pos:column="7"/></name> <argument_list pos:line="18" pos:column="8">(<argument><expr><name pos:line="18" pos:column="9">domain<pos:position pos:line="18" pos:column="15"/></name></expr></argument>)<pos:position pos:line="18" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2118_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">imap_account_match<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">ACCOUNT<pos:position pos:line="1" pos:column="38"/></name><modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type> <name pos:line="1" pos:column="40">a1<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">ACCOUNT<pos:position pos:line="1" pos:column="57"/></name><modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type> <name pos:line="1" pos:column="59">a2<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">IMAP_DATA<pos:position pos:line="3" pos:column="12"/></name><modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type> <name pos:line="3" pos:column="14">a1_idata<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><call><name pos:line="3" pos:column="25">imap_conn_find<pos:position pos:line="3" pos:column="39"/></name> <argument_list pos:line="3" pos:column="40">(<argument><expr><name pos:line="3" pos:column="41">a1<pos:position pos:line="3" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="45">MUTT_IMAP_CONN_NONEW<pos:position pos:line="3" pos:column="65"/></name></expr></argument>)<pos:position pos:line="3" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="67"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">IMAP_DATA<pos:position pos:line="4" pos:column="12"/></name><modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type> <name pos:line="4" pos:column="14">a2_idata<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><call><name pos:line="4" pos:column="25">imap_conn_find<pos:position pos:line="4" pos:column="39"/></name> <argument_list pos:line="4" pos:column="40">(<argument><expr><name pos:line="4" pos:column="41">a2<pos:position pos:line="4" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="45">MUTT_IMAP_CONN_NONEW<pos:position pos:line="4" pos:column="65"/></name></expr></argument>)<pos:position pos:line="4" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="67"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">ACCOUNT<pos:position pos:line="5" pos:column="16"/></name><modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type> <name pos:line="5" pos:column="18">a1_canon<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><ternary><condition><expr><name pos:line="5" pos:column="29">a1_idata<pos:position pos:line="5" pos:column="37"/></name> <operator pos:line="5" pos:column="38">==<pos:position pos:line="5" pos:column="40"/></operator> <name pos:line="5" pos:column="41">NULL<pos:position pos:line="5" pos:column="45"/></name></expr> ?<pos:position pos:line="5" pos:column="47"/></condition><then pos:line="5" pos:column="47"> <expr><name pos:line="5" pos:column="48">a1<pos:position pos:line="5" pos:column="50"/></name></expr> <pos:position pos:line="5" pos:column="51"/></then><else pos:line="5" pos:column="51">: <expr><operator pos:line="5" pos:column="53">&amp;<pos:position pos:line="5" pos:column="58"/></operator><name><name pos:line="5" pos:column="54">a1_idata<pos:position pos:line="5" pos:column="62"/></name><operator pos:line="5" pos:column="62">-&gt;<pos:position pos:line="5" pos:column="67"/></operator><name pos:line="5" pos:column="64">conn<pos:position pos:line="5" pos:column="68"/></name><operator pos:line="5" pos:column="68">-&gt;<pos:position pos:line="5" pos:column="73"/></operator><name pos:line="5" pos:column="70">account<pos:position pos:line="5" pos:column="77"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="78"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">ACCOUNT<pos:position pos:line="6" pos:column="16"/></name><modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type> <name pos:line="6" pos:column="18">a2_canon<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><ternary><condition><expr><name pos:line="6" pos:column="29">a2_idata<pos:position pos:line="6" pos:column="37"/></name> <operator pos:line="6" pos:column="38">==<pos:position pos:line="6" pos:column="40"/></operator> <name pos:line="6" pos:column="41">NULL<pos:position pos:line="6" pos:column="45"/></name></expr> ?<pos:position pos:line="6" pos:column="47"/></condition><then pos:line="6" pos:column="47"> <expr><name pos:line="6" pos:column="48">a2<pos:position pos:line="6" pos:column="50"/></name></expr> <pos:position pos:line="6" pos:column="51"/></then><else pos:line="6" pos:column="51">: <expr><operator pos:line="6" pos:column="53">&amp;<pos:position pos:line="6" pos:column="58"/></operator><name><name pos:line="6" pos:column="54">a2_idata<pos:position pos:line="6" pos:column="62"/></name><operator pos:line="6" pos:column="62">-&gt;<pos:position pos:line="6" pos:column="67"/></operator><name pos:line="6" pos:column="64">conn<pos:position pos:line="6" pos:column="68"/></name><operator pos:line="6" pos:column="68">-&gt;<pos:position pos:line="6" pos:column="73"/></operator><name pos:line="6" pos:column="70">account<pos:position pos:line="6" pos:column="77"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="78"/></decl_stmt>

  <return pos:line="8" pos:column="3">return <expr><call><name pos:line="8" pos:column="10">mutt_account_match<pos:position pos:line="8" pos:column="28"/></name> <argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">a1_canon<pos:position pos:line="8" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="40">a2_canon<pos:position pos:line="8" pos:column="48"/></name></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="50"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2034_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cmd_parse_myrights<pos:position pos:line="1" pos:column="31"/></name> <parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">IMAP_DATA<pos:position pos:line="1" pos:column="42"/></name><modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type> <name pos:line="1" pos:column="44">idata<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name><modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type> <name pos:line="1" pos:column="63">s<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">dprint<pos:position pos:line="3" pos:column="9"/></name> <argument_list pos:line="3" pos:column="10">(<argument><expr><literal type="number" pos:line="3" pos:column="11">2<pos:position pos:line="3" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="3" pos:column="14">(<pos:position pos:line="3" pos:column="15"/></operator><name pos:line="3" pos:column="15">debugfile<pos:position pos:line="3" pos:column="24"/></name><operator pos:line="3" pos:column="24">,<pos:position pos:line="3" pos:column="25"/></operator> <literal type="string" pos:line="3" pos:column="26">"Handling MYRIGHTS\n"<pos:position pos:line="3" pos:column="47"/></literal><operator pos:line="3" pos:column="47">)<pos:position pos:line="3" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="3" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="50"/></expr_stmt>

  <expr_stmt><expr><name pos:line="5" pos:column="3">s<pos:position pos:line="5" pos:column="4"/></name> <operator pos:line="5" pos:column="5">=<pos:position pos:line="5" pos:column="6"/></operator> <call><name pos:line="5" pos:column="7">imap_next_word<pos:position pos:line="5" pos:column="21"/></name> <argument_list pos:line="5" pos:column="22">(<argument><expr><operator pos:line="5" pos:column="23">(<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="24">char<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></operator><operator pos:line="5" pos:column="29">)<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="30">s<pos:position pos:line="5" pos:column="31"/></name></expr></argument>)<pos:position pos:line="5" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name pos:line="6" pos:column="3">s<pos:position pos:line="6" pos:column="4"/></name> <operator pos:line="6" pos:column="5">=<pos:position pos:line="6" pos:column="6"/></operator> <call><name pos:line="6" pos:column="7">imap_next_word<pos:position pos:line="6" pos:column="21"/></name> <argument_list pos:line="6" pos:column="22">(<argument><expr><operator pos:line="6" pos:column="23">(<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="24">char<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></operator><operator pos:line="6" pos:column="29">)<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="30">s<pos:position pos:line="6" pos:column="31"/></name></expr></argument>)<pos:position pos:line="6" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="33"/></expr_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* zero out current rights set */</comment>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">memset<pos:position pos:line="9" pos:column="9"/></name> <argument_list pos:line="9" pos:column="10">(<argument><expr><name><name pos:line="9" pos:column="11">idata<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">ctx<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">-&gt;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="23">rights<pos:position pos:line="9" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="31">0<pos:position pos:line="9" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="34">sizeof <argument_list pos:line="9" pos:column="41">(<argument><expr><name><name pos:line="9" pos:column="42">idata<pos:position pos:line="9" pos:column="47"/></name><operator pos:line="9" pos:column="47">-&gt;<pos:position pos:line="9" pos:column="52"/></operator><name pos:line="9" pos:column="49">ctx<pos:position pos:line="9" pos:column="52"/></name><operator pos:line="9" pos:column="52">-&gt;<pos:position pos:line="9" pos:column="57"/></operator><name pos:line="9" pos:column="54">rights<pos:position pos:line="9" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="63"/></expr_stmt>

  <while pos:line="11" pos:column="3">while <condition pos:line="11" pos:column="9">(<expr><operator pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">s<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">&amp;&amp;<pos:position pos:line="11" pos:column="23"/></operator> <operator pos:line="11" pos:column="16">!<pos:position pos:line="11" pos:column="17"/></operator><call><name pos:line="11" pos:column="17">isspace<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><operator pos:line="11" pos:column="25">(<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">unsigned<pos:position pos:line="11" pos:column="34"/></name> <name pos:line="11" pos:column="35">char<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">)<pos:position pos:line="11" pos:column="40"/></operator> <operator pos:line="11" pos:column="41">*<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="42">s<pos:position pos:line="11" pos:column="43"/></name></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="45"/></condition>
  <block pos:line="12" pos:column="3">{
    <switch pos:line="13" pos:column="5">switch <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">*<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">s<pos:position pos:line="13" pos:column="15"/></name></expr>)<pos:position pos:line="13" pos:column="16"/></condition> 
    <block pos:line="14" pos:column="5">{
      <case pos:line="15" pos:column="7">case <expr><literal type="char" pos:line="15" pos:column="12">'l'<pos:position pos:line="15" pos:column="15"/></literal></expr>:<pos:position pos:line="15" pos:column="16"/></case>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">mutt_bit_set<pos:position pos:line="16" pos:column="21"/></name> <argument_list pos:line="16" pos:column="22">(<argument><expr><name><name pos:line="16" pos:column="23">idata<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">ctx<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">-&gt;<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="35">rights<pos:position pos:line="16" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="43">MUTT_ACL_LOOKUP<pos:position pos:line="16" pos:column="58"/></name></expr></argument>)<pos:position pos:line="16" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="60"/></expr_stmt>
	<break pos:line="17" pos:column="9">break;<pos:position pos:line="17" pos:column="15"/></break>
      <case pos:line="18" pos:column="7">case <expr><literal type="char" pos:line="18" pos:column="12">'r'<pos:position pos:line="18" pos:column="15"/></literal></expr>:<pos:position pos:line="18" pos:column="16"/></case>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">mutt_bit_set<pos:position pos:line="19" pos:column="21"/></name> <argument_list pos:line="19" pos:column="22">(<argument><expr><name><name pos:line="19" pos:column="23">idata<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">-&gt;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="30">ctx<pos:position pos:line="19" pos:column="33"/></name><operator pos:line="19" pos:column="33">-&gt;<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="35">rights<pos:position pos:line="19" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="43">MUTT_ACL_READ<pos:position pos:line="19" pos:column="56"/></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="58"/></expr_stmt>
	<break pos:line="20" pos:column="9">break;<pos:position pos:line="20" pos:column="15"/></break>
      <case pos:line="21" pos:column="7">case <expr><literal type="char" pos:line="21" pos:column="12">'s'<pos:position pos:line="21" pos:column="15"/></literal></expr>:<pos:position pos:line="21" pos:column="16"/></case>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">mutt_bit_set<pos:position pos:line="22" pos:column="21"/></name> <argument_list pos:line="22" pos:column="22">(<argument><expr><name><name pos:line="22" pos:column="23">idata<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">-&gt;<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="30">ctx<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">-&gt;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="35">rights<pos:position pos:line="22" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="43">MUTT_ACL_SEEN<pos:position pos:line="22" pos:column="56"/></name></expr></argument>)<pos:position pos:line="22" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="58"/></expr_stmt>
	<break pos:line="23" pos:column="9">break;<pos:position pos:line="23" pos:column="15"/></break>
      <case pos:line="24" pos:column="7">case <expr><literal type="char" pos:line="24" pos:column="12">'w'<pos:position pos:line="24" pos:column="15"/></literal></expr>:<pos:position pos:line="24" pos:column="16"/></case>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">mutt_bit_set<pos:position pos:line="25" pos:column="21"/></name> <argument_list pos:line="25" pos:column="22">(<argument><expr><name><name pos:line="25" pos:column="23">idata<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">-&gt;<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="30">ctx<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">-&gt;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="35">rights<pos:position pos:line="25" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="43">MUTT_ACL_WRITE<pos:position pos:line="25" pos:column="57"/></name></expr></argument>)<pos:position pos:line="25" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="59"/></expr_stmt>
	<break pos:line="26" pos:column="9">break;<pos:position pos:line="26" pos:column="15"/></break>
      <case pos:line="27" pos:column="7">case <expr><literal type="char" pos:line="27" pos:column="12">'i'<pos:position pos:line="27" pos:column="15"/></literal></expr>:<pos:position pos:line="27" pos:column="16"/></case>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">mutt_bit_set<pos:position pos:line="28" pos:column="21"/></name> <argument_list pos:line="28" pos:column="22">(<argument><expr><name><name pos:line="28" pos:column="23">idata<pos:position pos:line="28" pos:column="28"/></name><operator pos:line="28" pos:column="28">-&gt;<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="30">ctx<pos:position pos:line="28" pos:column="33"/></name><operator pos:line="28" pos:column="33">-&gt;<pos:position pos:line="28" pos:column="38"/></operator><name pos:line="28" pos:column="35">rights<pos:position pos:line="28" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="43">MUTT_ACL_INSERT<pos:position pos:line="28" pos:column="58"/></name></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="60"/></expr_stmt>
	<break pos:line="29" pos:column="9">break;<pos:position pos:line="29" pos:column="15"/></break>
      <case pos:line="30" pos:column="7">case <expr><literal type="char" pos:line="30" pos:column="12">'p'<pos:position pos:line="30" pos:column="15"/></literal></expr>:<pos:position pos:line="30" pos:column="16"/></case>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">mutt_bit_set<pos:position pos:line="31" pos:column="21"/></name> <argument_list pos:line="31" pos:column="22">(<argument><expr><name><name pos:line="31" pos:column="23">idata<pos:position pos:line="31" pos:column="28"/></name><operator pos:line="31" pos:column="28">-&gt;<pos:position pos:line="31" pos:column="33"/></operator><name pos:line="31" pos:column="30">ctx<pos:position pos:line="31" pos:column="33"/></name><operator pos:line="31" pos:column="33">-&gt;<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="35">rights<pos:position pos:line="31" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="43">MUTT_ACL_POST<pos:position pos:line="31" pos:column="56"/></name></expr></argument>)<pos:position pos:line="31" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="58"/></expr_stmt>
	<break pos:line="32" pos:column="9">break;<pos:position pos:line="32" pos:column="15"/></break>
      <case pos:line="33" pos:column="7">case <expr><literal type="char" pos:line="33" pos:column="12">'a'<pos:position pos:line="33" pos:column="15"/></literal></expr>:<pos:position pos:line="33" pos:column="16"/></case>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">mutt_bit_set<pos:position pos:line="34" pos:column="21"/></name> <argument_list pos:line="34" pos:column="22">(<argument><expr><name><name pos:line="34" pos:column="23">idata<pos:position pos:line="34" pos:column="28"/></name><operator pos:line="34" pos:column="28">-&gt;<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="30">ctx<pos:position pos:line="34" pos:column="33"/></name><operator pos:line="34" pos:column="33">-&gt;<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="35">rights<pos:position pos:line="34" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="43">MUTT_ACL_ADMIN<pos:position pos:line="34" pos:column="57"/></name></expr></argument>)<pos:position pos:line="34" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="59"/></expr_stmt>
	<break pos:line="35" pos:column="9">break;<pos:position pos:line="35" pos:column="15"/></break>
      <case pos:line="36" pos:column="7">case <expr><literal type="char" pos:line="36" pos:column="12">'k'<pos:position pos:line="36" pos:column="15"/></literal></expr>:<pos:position pos:line="36" pos:column="16"/></case>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">mutt_bit_set<pos:position pos:line="37" pos:column="21"/></name> <argument_list pos:line="37" pos:column="22">(<argument><expr><name><name pos:line="37" pos:column="23">idata<pos:position pos:line="37" pos:column="28"/></name><operator pos:line="37" pos:column="28">-&gt;<pos:position pos:line="37" pos:column="33"/></operator><name pos:line="37" pos:column="30">ctx<pos:position pos:line="37" pos:column="33"/></name><operator pos:line="37" pos:column="33">-&gt;<pos:position pos:line="37" pos:column="38"/></operator><name pos:line="37" pos:column="35">rights<pos:position pos:line="37" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="43">MUTT_ACL_CREATE<pos:position pos:line="37" pos:column="58"/></name></expr></argument>)<pos:position pos:line="37" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="60"/></expr_stmt>
        <break pos:line="38" pos:column="9">break;<pos:position pos:line="38" pos:column="15"/></break>
      <case pos:line="39" pos:column="7">case <expr><literal type="char" pos:line="39" pos:column="12">'x'<pos:position pos:line="39" pos:column="15"/></literal></expr>:<pos:position pos:line="39" pos:column="16"/></case>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">mutt_bit_set<pos:position pos:line="40" pos:column="21"/></name> <argument_list pos:line="40" pos:column="22">(<argument><expr><name><name pos:line="40" pos:column="23">idata<pos:position pos:line="40" pos:column="28"/></name><operator pos:line="40" pos:column="28">-&gt;<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="30">ctx<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">-&gt;<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="35">rights<pos:position pos:line="40" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="43">MUTT_ACL_DELMX<pos:position pos:line="40" pos:column="57"/></name></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="59"/></expr_stmt>
        <break pos:line="41" pos:column="9">break;<pos:position pos:line="41" pos:column="15"/></break>
      <case pos:line="42" pos:column="7">case <expr><literal type="char" pos:line="42" pos:column="12">'t'<pos:position pos:line="42" pos:column="15"/></literal></expr>:<pos:position pos:line="42" pos:column="16"/></case>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">mutt_bit_set<pos:position pos:line="43" pos:column="21"/></name> <argument_list pos:line="43" pos:column="22">(<argument><expr><name><name pos:line="43" pos:column="23">idata<pos:position pos:line="43" pos:column="28"/></name><operator pos:line="43" pos:column="28">-&gt;<pos:position pos:line="43" pos:column="33"/></operator><name pos:line="43" pos:column="30">ctx<pos:position pos:line="43" pos:column="33"/></name><operator pos:line="43" pos:column="33">-&gt;<pos:position pos:line="43" pos:column="38"/></operator><name pos:line="43" pos:column="35">rights<pos:position pos:line="43" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="43">MUTT_ACL_DELETE<pos:position pos:line="43" pos:column="58"/></name></expr></argument>)<pos:position pos:line="43" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="60"/></expr_stmt>
        <break pos:line="44" pos:column="9">break;<pos:position pos:line="44" pos:column="15"/></break>
      <case pos:line="45" pos:column="7">case <expr><literal type="char" pos:line="45" pos:column="12">'e'<pos:position pos:line="45" pos:column="15"/></literal></expr>:<pos:position pos:line="45" pos:column="16"/></case>
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">mutt_bit_set<pos:position pos:line="46" pos:column="21"/></name> <argument_list pos:line="46" pos:column="22">(<argument><expr><name><name pos:line="46" pos:column="23">idata<pos:position pos:line="46" pos:column="28"/></name><operator pos:line="46" pos:column="28">-&gt;<pos:position pos:line="46" pos:column="33"/></operator><name pos:line="46" pos:column="30">ctx<pos:position pos:line="46" pos:column="33"/></name><operator pos:line="46" pos:column="33">-&gt;<pos:position pos:line="46" pos:column="38"/></operator><name pos:line="46" pos:column="35">rights<pos:position pos:line="46" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="43">MUTT_ACL_EXPUNGE<pos:position pos:line="46" pos:column="59"/></name></expr></argument>)<pos:position pos:line="46" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="61"/></expr_stmt>
        <break pos:line="47" pos:column="9">break;<pos:position pos:line="47" pos:column="15"/></break>

        <comment type="block" pos:line="49" pos:column="9">/* obsolete rights */</comment>
      <case pos:line="50" pos:column="7">case <expr><literal type="char" pos:line="50" pos:column="12">'c'<pos:position pos:line="50" pos:column="15"/></literal></expr>:<pos:position pos:line="50" pos:column="16"/></case>
	<expr_stmt><expr><call><name pos:line="51" pos:column="9">mutt_bit_set<pos:position pos:line="51" pos:column="21"/></name> <argument_list pos:line="51" pos:column="22">(<argument><expr><name><name pos:line="51" pos:column="23">idata<pos:position pos:line="51" pos:column="28"/></name><operator pos:line="51" pos:column="28">-&gt;<pos:position pos:line="51" pos:column="33"/></operator><name pos:line="51" pos:column="30">ctx<pos:position pos:line="51" pos:column="33"/></name><operator pos:line="51" pos:column="33">-&gt;<pos:position pos:line="51" pos:column="38"/></operator><name pos:line="51" pos:column="35">rights<pos:position pos:line="51" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="43">MUTT_ACL_CREATE<pos:position pos:line="51" pos:column="58"/></name></expr></argument>)<pos:position pos:line="51" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">mutt_bit_set<pos:position pos:line="52" pos:column="21"/></name> <argument_list pos:line="52" pos:column="22">(<argument><expr><name><name pos:line="52" pos:column="23">idata<pos:position pos:line="52" pos:column="28"/></name><operator pos:line="52" pos:column="28">-&gt;<pos:position pos:line="52" pos:column="33"/></operator><name pos:line="52" pos:column="30">ctx<pos:position pos:line="52" pos:column="33"/></name><operator pos:line="52" pos:column="33">-&gt;<pos:position pos:line="52" pos:column="38"/></operator><name pos:line="52" pos:column="35">rights<pos:position pos:line="52" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="43">MUTT_ACL_DELMX<pos:position pos:line="52" pos:column="57"/></name></expr></argument>)<pos:position pos:line="52" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="59"/></expr_stmt>
	<break pos:line="53" pos:column="9">break;<pos:position pos:line="53" pos:column="15"/></break>
      <case pos:line="54" pos:column="7">case <expr><literal type="char" pos:line="54" pos:column="12">'d'<pos:position pos:line="54" pos:column="15"/></literal></expr>:<pos:position pos:line="54" pos:column="16"/></case>
	<expr_stmt><expr><call><name pos:line="55" pos:column="9">mutt_bit_set<pos:position pos:line="55" pos:column="21"/></name> <argument_list pos:line="55" pos:column="22">(<argument><expr><name><name pos:line="55" pos:column="23">idata<pos:position pos:line="55" pos:column="28"/></name><operator pos:line="55" pos:column="28">-&gt;<pos:position pos:line="55" pos:column="33"/></operator><name pos:line="55" pos:column="30">ctx<pos:position pos:line="55" pos:column="33"/></name><operator pos:line="55" pos:column="33">-&gt;<pos:position pos:line="55" pos:column="38"/></operator><name pos:line="55" pos:column="35">rights<pos:position pos:line="55" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="43">MUTT_ACL_DELETE<pos:position pos:line="55" pos:column="58"/></name></expr></argument>)<pos:position pos:line="55" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">mutt_bit_set<pos:position pos:line="56" pos:column="21"/></name> <argument_list pos:line="56" pos:column="22">(<argument><expr><name><name pos:line="56" pos:column="23">idata<pos:position pos:line="56" pos:column="28"/></name><operator pos:line="56" pos:column="28">-&gt;<pos:position pos:line="56" pos:column="33"/></operator><name pos:line="56" pos:column="30">ctx<pos:position pos:line="56" pos:column="33"/></name><operator pos:line="56" pos:column="33">-&gt;<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="35">rights<pos:position pos:line="56" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="43">MUTT_ACL_EXPUNGE<pos:position pos:line="56" pos:column="59"/></name></expr></argument>)<pos:position pos:line="56" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="61"/></expr_stmt>
	<break pos:line="57" pos:column="9">break;<pos:position pos:line="57" pos:column="15"/></break>
      <default pos:line="58" pos:column="7">default:<pos:position pos:line="58" pos:column="15"/></default>
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">dprint<pos:position pos:line="59" pos:column="15"/></name><argument_list pos:line="59" pos:column="15">(<argument><expr><literal type="number" pos:line="59" pos:column="16">1<pos:position pos:line="59" pos:column="17"/></literal></expr></argument>, <argument><expr><operator pos:line="59" pos:column="19">(<pos:position pos:line="59" pos:column="20"/></operator><name pos:line="59" pos:column="20">debugfile<pos:position pos:line="59" pos:column="29"/></name><operator pos:line="59" pos:column="29">,<pos:position pos:line="59" pos:column="30"/></operator> <literal type="string" pos:line="59" pos:column="31">"Unknown right: %c\n"<pos:position pos:line="59" pos:column="52"/></literal><operator pos:line="59" pos:column="52">,<pos:position pos:line="59" pos:column="53"/></operator> <operator pos:line="59" pos:column="54">*<pos:position pos:line="59" pos:column="55"/></operator><name pos:line="59" pos:column="55">s<pos:position pos:line="59" pos:column="56"/></name><operator pos:line="59" pos:column="56">)<pos:position pos:line="59" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="59" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></switch>
    <expr_stmt><expr><name pos:line="61" pos:column="5">s<pos:position pos:line="61" pos:column="6"/></name><operator pos:line="61" pos:column="6">++<pos:position pos:line="61" pos:column="8"/></operator></expr>;<pos:position pos:line="61" pos:column="9"/></expr_stmt>
  }<pos:position pos:line="62" pos:column="4"/></block></while>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

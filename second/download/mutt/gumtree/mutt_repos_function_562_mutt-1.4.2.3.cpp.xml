<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_562_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">iconv_t<pos:position pos:line="1" pos:column="8"/></name></type> <name pos:line="1" pos:column="9">mutt_iconv_open<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">tocode<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">fromcode<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="68">int<pos:position pos:line="1" pos:column="71"/></name></type> <name pos:line="1" pos:column="72">flags<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">tocode1<pos:position pos:line="3" pos:column="15"/></name><index pos:line="3" pos:column="15">[<expr><name pos:line="3" pos:column="16">SHORT_STRING<pos:position pos:line="3" pos:column="28"/></name></expr>]<pos:position pos:line="3" pos:column="29"/></index></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">fromcode1<pos:position pos:line="4" pos:column="17"/></name><index pos:line="4" pos:column="17">[<expr><name pos:line="4" pos:column="18">SHORT_STRING<pos:position pos:line="4" pos:column="30"/></name></expr>]<pos:position pos:line="4" pos:column="31"/></index></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">tocode2<pos:position pos:line="5" pos:column="16"/></name></decl>, <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="19">fromcode2<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">tmp<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">iconv_t<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">cd<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>
  
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">mutt_canonical_charset<pos:position pos:line="10" pos:column="25"/></name> <argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">tocode1<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="36">sizeof <argument_list pos:line="10" pos:column="43">(<argument><expr><name pos:line="10" pos:column="44">tocode1<pos:position pos:line="10" pos:column="51"/></name></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="10" pos:column="54">tocode<pos:position pos:line="10" pos:column="60"/></name></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="62"/></expr_stmt>

<cpp:ifdef pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">ifdef<pos:position pos:line="12" pos:column="7"/></cpp:directive> <name pos:line="12" pos:column="8">M_ICONV_HOOK_TO<pos:position pos:line="12" pos:column="23"/></name></cpp:ifdef>
  <comment type="block" pos:line="13" pos:column="3">/* Not used. */</comment>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><operator pos:line="14" pos:column="7">(<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">flags<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">&amp;<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="16">M_ICONV_HOOK_TO<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">)<pos:position pos:line="14" pos:column="32"/></operator> <operator pos:line="14" pos:column="33">&amp;&amp;<pos:position pos:line="14" pos:column="43"/></operator> <operator pos:line="14" pos:column="36">(<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="37">tmp<pos:position pos:line="14" pos:column="40"/></name> <operator pos:line="14" pos:column="41">=<pos:position pos:line="14" pos:column="42"/></operator> <call><name pos:line="14" pos:column="43">mutt_charset_hook<pos:position pos:line="14" pos:column="60"/></name> <argument_list pos:line="14" pos:column="61">(<argument><expr><name pos:line="14" pos:column="62">tocode1<pos:position pos:line="14" pos:column="69"/></name></expr></argument>)<pos:position pos:line="14" pos:column="70"/></argument_list></call><operator pos:line="14" pos:column="70">)<pos:position pos:line="14" pos:column="71"/></operator></expr>)<pos:position pos:line="14" pos:column="72"/></condition><then pos:line="14" pos:column="72">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="5">mutt_canonical_charset<pos:position pos:line="15" pos:column="27"/></name> <argument_list pos:line="15" pos:column="28">(<argument><expr><name pos:line="15" pos:column="29">tocode1<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="38">sizeof <argument_list pos:line="15" pos:column="45">(<argument><expr><name pos:line="15" pos:column="46">tocode1<pos:position pos:line="15" pos:column="53"/></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="15" pos:column="56">tmp<pos:position pos:line="15" pos:column="59"/></name></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="61"/></expr_stmt></block></then></if>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">mutt_canonical_charset<pos:position pos:line="18" pos:column="25"/></name> <argument_list pos:line="18" pos:column="26">(<argument><expr><name pos:line="18" pos:column="27">fromcode1<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="38">sizeof <argument_list pos:line="18" pos:column="45">(<argument><expr><name pos:line="18" pos:column="46">fromcode1<pos:position pos:line="18" pos:column="55"/></name></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="18" pos:column="58">fromcode<pos:position pos:line="18" pos:column="66"/></name></expr></argument>)<pos:position pos:line="18" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="68"/></expr_stmt>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><operator pos:line="19" pos:column="7">(<pos:position pos:line="19" pos:column="8"/></operator><name pos:line="19" pos:column="8">flags<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">&amp;<pos:position pos:line="19" pos:column="19"/></operator> <name pos:line="19" pos:column="16">M_ICONV_HOOK_FROM<pos:position pos:line="19" pos:column="33"/></name><operator pos:line="19" pos:column="33">)<pos:position pos:line="19" pos:column="34"/></operator> <operator pos:line="19" pos:column="35">&amp;&amp;<pos:position pos:line="19" pos:column="45"/></operator> <operator pos:line="19" pos:column="38">(<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="39">tmp<pos:position pos:line="19" pos:column="42"/></name> <operator pos:line="19" pos:column="43">=<pos:position pos:line="19" pos:column="44"/></operator> <call><name pos:line="19" pos:column="45">mutt_charset_hook<pos:position pos:line="19" pos:column="62"/></name> <argument_list pos:line="19" pos:column="63">(<argument><expr><name pos:line="19" pos:column="64">fromcode1<pos:position pos:line="19" pos:column="73"/></name></expr></argument>)<pos:position pos:line="19" pos:column="74"/></argument_list></call><operator pos:line="19" pos:column="74">)<pos:position pos:line="19" pos:column="75"/></operator></expr>)<pos:position pos:line="19" pos:column="76"/></condition><then pos:line="19" pos:column="76">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="5">mutt_canonical_charset<pos:position pos:line="20" pos:column="27"/></name> <argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">fromcode1<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="40">sizeof <argument_list pos:line="20" pos:column="47">(<argument><expr><name pos:line="20" pos:column="48">fromcode1<pos:position pos:line="20" pos:column="57"/></name></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="20" pos:column="60">tmp<pos:position pos:line="20" pos:column="63"/></name></expr></argument>)<pos:position pos:line="20" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="65"/></expr_stmt></block></then></if>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><operator pos:line="22" pos:column="7">(<pos:position pos:line="22" pos:column="8"/></operator><name pos:line="22" pos:column="8">cd<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">=<pos:position pos:line="22" pos:column="12"/></operator> <call><name pos:line="22" pos:column="13">iconv_open<pos:position pos:line="22" pos:column="23"/></name> <argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">tocode1<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="34">fromcode1<pos:position pos:line="22" pos:column="43"/></name></expr></argument>)<pos:position pos:line="22" pos:column="44"/></argument_list></call><operator pos:line="22" pos:column="44">)<pos:position pos:line="22" pos:column="45"/></operator> <operator pos:line="22" pos:column="46">!=<pos:position pos:line="22" pos:column="48"/></operator> <operator pos:line="22" pos:column="49">(<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="50">iconv_t<pos:position pos:line="22" pos:column="57"/></name><operator pos:line="22" pos:column="57">)<pos:position pos:line="22" pos:column="58"/></operator> <operator pos:line="22" pos:column="59">-<pos:position pos:line="22" pos:column="60"/></operator><literal type="number" pos:line="22" pos:column="60">1<pos:position pos:line="22" pos:column="61"/></literal></expr>)<pos:position pos:line="22" pos:column="62"/></condition><then pos:line="22" pos:column="62">
    <block type="pseudo"><return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">cd<pos:position pos:line="23" pos:column="14"/></name></expr>;<pos:position pos:line="23" pos:column="15"/></return></block></then></if>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><operator pos:line="24" pos:column="7">(<pos:position pos:line="24" pos:column="8"/></operator><name pos:line="24" pos:column="8">tocode2<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <call><name pos:line="24" pos:column="18">mutt_iconv_hook<pos:position pos:line="24" pos:column="33"/></name> <argument_list pos:line="24" pos:column="34">(<argument><expr><name pos:line="24" pos:column="35">tocode1<pos:position pos:line="24" pos:column="42"/></name></expr></argument>)<pos:position pos:line="24" pos:column="43"/></argument_list></call><operator pos:line="24" pos:column="43">)<pos:position pos:line="24" pos:column="44"/></operator> <operator pos:line="24" pos:column="45">&amp;&amp;<pos:position pos:line="24" pos:column="55"/></operator> <operator pos:line="24" pos:column="48">(<pos:position pos:line="24" pos:column="49"/></operator><name pos:line="24" pos:column="49">fromcode2<pos:position pos:line="24" pos:column="58"/></name> <operator pos:line="24" pos:column="59">=<pos:position pos:line="24" pos:column="60"/></operator> <call><name pos:line="24" pos:column="61">mutt_iconv_hook<pos:position pos:line="24" pos:column="76"/></name> <argument_list pos:line="24" pos:column="77">(<argument><expr><name pos:line="24" pos:column="78">fromcode1<pos:position pos:line="24" pos:column="87"/></name></expr></argument>)<pos:position pos:line="24" pos:column="88"/></argument_list></call><operator pos:line="24" pos:column="88">)<pos:position pos:line="24" pos:column="89"/></operator></expr>)<pos:position pos:line="24" pos:column="90"/></condition><then pos:line="24" pos:column="90">
    <block type="pseudo"><return pos:line="25" pos:column="5">return <expr><call><name pos:line="25" pos:column="12">iconv_open<pos:position pos:line="25" pos:column="22"/></name> <argument_list pos:line="25" pos:column="23">(<argument><expr><name pos:line="25" pos:column="24">tocode2<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="33">fromcode2<pos:position pos:line="25" pos:column="42"/></name></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="44"/></return></block></then></if>
  
  <return pos:line="27" pos:column="3">return <expr><operator pos:line="27" pos:column="10">(<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="11">iconv_t<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">)<pos:position pos:line="27" pos:column="19"/></operator> <operator pos:line="27" pos:column="20">-<pos:position pos:line="27" pos:column="21"/></operator><literal type="number" pos:line="27" pos:column="21">1<pos:position pos:line="27" pos:column="22"/></literal></expr>;<pos:position pos:line="27" pos:column="23"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

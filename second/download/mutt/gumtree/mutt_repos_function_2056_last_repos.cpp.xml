<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2056_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">imap_set_flag<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">IMAP_DATA<pos:position pos:line="1" pos:column="37"/></name><modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type> <name pos:line="1" pos:column="39">idata<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">int<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">aclbit<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">int<pos:position pos:line="1" pos:column="61"/></name></type> <name pos:line="1" pos:column="62">flag<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
  <parameter><decl><type><specifier pos:line="2" pos:column="3">const<pos:position pos:line="2" pos:column="8"/></specifier> <name pos:line="2" pos:column="9">char<pos:position pos:line="2" pos:column="13"/></name> <modifier pos:line="2" pos:column="14">*<pos:position pos:line="2" pos:column="15"/></modifier></type><name pos:line="2" pos:column="15">str<pos:position pos:line="2" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="20">char<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">flags<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="33">size_t<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">flsize<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><call><name pos:line="4" pos:column="7">mutt_bit_isset<pos:position pos:line="4" pos:column="21"/></name> <argument_list pos:line="4" pos:column="22">(<argument><expr><name><name pos:line="4" pos:column="23">idata<pos:position pos:line="4" pos:column="28"/></name><operator pos:line="4" pos:column="28">-&gt;<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="30">ctx<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">-&gt;<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="35">rights<pos:position pos:line="4" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="43">aclbit<pos:position pos:line="4" pos:column="49"/></name></expr></argument>)<pos:position pos:line="4" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="51"/></condition><then pos:line="4" pos:column="51">
    <block type="pseudo"><if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">flag<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">&amp;&amp;<pos:position pos:line="5" pos:column="24"/></operator> <call><name pos:line="5" pos:column="17">imap_has_flag<pos:position pos:line="5" pos:column="30"/></name> <argument_list pos:line="5" pos:column="31">(<argument><expr><name><name pos:line="5" pos:column="32">idata<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">-&gt;<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="39">flags<pos:position pos:line="5" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="46">str<pos:position pos:line="5" pos:column="49"/></name></expr></argument>)<pos:position pos:line="5" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="51"/></condition><then pos:line="5" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="7">safe_strcat<pos:position pos:line="6" pos:column="18"/></name> <argument_list pos:line="6" pos:column="19">(<argument><expr><name pos:line="6" pos:column="20">flags<pos:position pos:line="6" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="27">flsize<pos:position pos:line="6" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="35">str<pos:position pos:line="6" pos:column="38"/></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt></block></then></if></block></then></if>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_106_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">SHA1Final<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">unsigned<pos:position pos:line="1" pos:column="24"/></name> <name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name></type> <name><name pos:line="1" pos:column="30">digest<pos:position pos:line="1" pos:column="36"/></name><index pos:line="1" pos:column="36">[<expr><literal type="number" pos:line="1" pos:column="37">20<pos:position pos:line="1" pos:column="39"/></literal></expr>]<pos:position pos:line="1" pos:column="40"/></index></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">SHA1_CTX<pos:position pos:line="1" pos:column="50"/></name><modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type> <name pos:line="1" pos:column="52">context<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
<decl_stmt><decl><type><name pos:line="3" pos:column="1">unsigned<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">i<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="4" pos:column="1">unsigned<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">char<pos:position pos:line="4" pos:column="14"/></name></type> <name><name pos:line="4" pos:column="15">finalcount<pos:position pos:line="4" pos:column="25"/></name><index pos:line="4" pos:column="25">[<expr><literal type="number" pos:line="4" pos:column="26">8<pos:position pos:line="4" pos:column="27"/></literal></expr>]<pos:position pos:line="4" pos:column="28"/></index></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="5" pos:column="1">unsigned<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">char<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">c<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

<cpp:if pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">if<pos:position pos:line="7" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="7" pos:column="5">0<pos:position pos:line="7" pos:column="6"/></literal></expr></cpp:if>	<comment type="block" pos:line="7" pos:column="9">/* untested "improvement" by DHR */</comment>
    <comment type="block" pos:line="8" pos:column="5">/* Convert context-&gt;count to a sequence of bytes
     * in finalcount.  Second element first, but
     * big-endian order within element.
     * But we do it all backwards.
     */</comment>
    unsigned char *fcp = &amp;finalcount[8];

    for (i = 0; i &lt; 2; i++)
    {
	uint32_t t = context-&gt;count[i];
	int j;

	for (j = 0; j &lt; 4; t &gt;&gt;= 8, j++)
	    *--fcp = (unsigned char) t
    }
<cpp:else pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">else<pos:position pos:line="23" pos:column="6"/></cpp:directive></cpp:else>
    <for pos:line="24" pos:column="5">for <control pos:line="24" pos:column="9">(<init><expr><name pos:line="24" pos:column="10">i<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <literal type="number" pos:line="24" pos:column="14">0<pos:position pos:line="24" pos:column="15"/></literal></expr>;<pos:position pos:line="24" pos:column="16"/></init> <condition><expr><name pos:line="24" pos:column="17">i<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">&lt;<pos:position pos:line="24" pos:column="23"/></operator> <literal type="number" pos:line="24" pos:column="21">8<pos:position pos:line="24" pos:column="22"/></literal></expr>;<pos:position pos:line="24" pos:column="23"/></condition> <incr><expr><name pos:line="24" pos:column="24">i<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">++<pos:position pos:line="24" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="28"/></control> <block pos:line="24" pos:column="29">{
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">finalcount<pos:position pos:line="25" pos:column="19"/></name><index pos:line="25" pos:column="19">[<expr><name pos:line="25" pos:column="20">i<pos:position pos:line="25" pos:column="21"/></name></expr>]<pos:position pos:line="25" pos:column="22"/></index></name> <operator pos:line="25" pos:column="23">=<pos:position pos:line="25" pos:column="24"/></operator> <call pos:line="25" pos:column="25">(<name pos:line="25" pos:column="26">unsigned<pos:position pos:line="25" pos:column="34"/></name> <name pos:line="25" pos:column="35">char<pos:position pos:line="25" pos:column="39"/></name>)<argument_list pos:line="25" pos:column="40">(<argument><expr><operator pos:line="25" pos:column="41">(<pos:position pos:line="25" pos:column="42"/></operator><name><name pos:line="25" pos:column="42">context<pos:position pos:line="25" pos:column="49"/></name><operator pos:line="25" pos:column="49">-&gt;<pos:position pos:line="25" pos:column="54"/></operator><name pos:line="25" pos:column="51">count<pos:position pos:line="25" pos:column="56"/></name><index pos:line="25" pos:column="56">[<expr><operator pos:line="25" pos:column="57">(<pos:position pos:line="25" pos:column="58"/></operator><ternary><condition><expr><name pos:line="25" pos:column="58">i<pos:position pos:line="25" pos:column="59"/></name> <operator pos:line="25" pos:column="60">&gt;=<pos:position pos:line="25" pos:column="65"/></operator> <literal type="number" pos:line="25" pos:column="63">4<pos:position pos:line="25" pos:column="64"/></literal></expr> ?<pos:position pos:line="25" pos:column="66"/></condition><then pos:line="25" pos:column="66"> <expr><literal type="number" pos:line="25" pos:column="67">0<pos:position pos:line="25" pos:column="68"/></literal></expr> <pos:position pos:line="25" pos:column="69"/></then><else pos:line="25" pos:column="69">: <expr><literal type="number" pos:line="25" pos:column="71">1<pos:position pos:line="25" pos:column="72"/></literal></expr></else></ternary><operator pos:line="25" pos:column="72">)<pos:position pos:line="25" pos:column="73"/></operator></expr>]<pos:position pos:line="25" pos:column="74"/></index></name>
         <operator pos:line="26" pos:column="10">&gt;&gt;<pos:position pos:line="26" pos:column="15"/></operator> <operator pos:line="26" pos:column="13">(<pos:position pos:line="26" pos:column="14"/></operator><operator pos:line="26" pos:column="14">(<pos:position pos:line="26" pos:column="15"/></operator><literal type="number" pos:line="26" pos:column="15">3<pos:position pos:line="26" pos:column="16"/></literal><operator pos:line="26" pos:column="16">-<pos:position pos:line="26" pos:column="17"/></operator><operator pos:line="26" pos:column="17">(<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="18">i<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">&amp;<pos:position pos:line="26" pos:column="25"/></operator> <literal type="number" pos:line="26" pos:column="22">3<pos:position pos:line="26" pos:column="23"/></literal><operator pos:line="26" pos:column="23">)<pos:position pos:line="26" pos:column="24"/></operator><operator pos:line="26" pos:column="24">)<pos:position pos:line="26" pos:column="25"/></operator> <operator pos:line="26" pos:column="26">*<pos:position pos:line="26" pos:column="27"/></operator> <literal type="number" pos:line="26" pos:column="28">8<pos:position pos:line="26" pos:column="29"/></literal><operator pos:line="26" pos:column="29">)<pos:position pos:line="26" pos:column="30"/></operator> <operator pos:line="26" pos:column="31">)<pos:position pos:line="26" pos:column="32"/></operator> <operator pos:line="26" pos:column="33">&amp;<pos:position pos:line="26" pos:column="38"/></operator> <literal type="number" pos:line="26" pos:column="35">255<pos:position pos:line="26" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="40"/></expr_stmt>  <comment type="block" pos:line="26" pos:column="42">/* Endian independent */</comment>
    }<pos:position pos:line="27" pos:column="6"/></block></for>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name pos:line="29" pos:column="5">c<pos:position pos:line="29" pos:column="6"/></name> <operator pos:line="29" pos:column="7">=<pos:position pos:line="29" pos:column="8"/></operator> <literal type="number" pos:line="29" pos:column="9">0200<pos:position pos:line="29" pos:column="13"/></literal></expr>;<pos:position pos:line="29" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">SHA1Update<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><name pos:line="30" pos:column="16">context<pos:position pos:line="30" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="25">&amp;<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="26">c<pos:position pos:line="30" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="29">1<pos:position pos:line="30" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="32"/></expr_stmt>
    <while pos:line="31" pos:column="5">while <condition pos:line="31" pos:column="11">(<expr><operator pos:line="31" pos:column="12">(<pos:position pos:line="31" pos:column="13"/></operator><name><name pos:line="31" pos:column="13">context<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">-&gt;<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="22">count<pos:position pos:line="31" pos:column="27"/></name><index pos:line="31" pos:column="27">[<expr><literal type="number" pos:line="31" pos:column="28">0<pos:position pos:line="31" pos:column="29"/></literal></expr>]<pos:position pos:line="31" pos:column="30"/></index></name> <operator pos:line="31" pos:column="31">&amp;<pos:position pos:line="31" pos:column="36"/></operator> <literal type="number" pos:line="31" pos:column="33">504<pos:position pos:line="31" pos:column="36"/></literal><operator pos:line="31" pos:column="36">)<pos:position pos:line="31" pos:column="37"/></operator> <operator pos:line="31" pos:column="38">!=<pos:position pos:line="31" pos:column="40"/></operator> <literal type="number" pos:line="31" pos:column="41">448<pos:position pos:line="31" pos:column="44"/></literal></expr>)<pos:position pos:line="31" pos:column="45"/></condition> <block pos:line="31" pos:column="46">{
	<expr_stmt><expr><name pos:line="32" pos:column="9">c<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">=<pos:position pos:line="32" pos:column="12"/></operator> <literal type="number" pos:line="32" pos:column="13">0000<pos:position pos:line="32" pos:column="17"/></literal></expr>;<pos:position pos:line="32" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">SHA1Update<pos:position pos:line="33" pos:column="19"/></name><argument_list pos:line="33" pos:column="19">(<argument><expr><name pos:line="33" pos:column="20">context<pos:position pos:line="33" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="29">&amp;<pos:position pos:line="33" pos:column="34"/></operator><name pos:line="33" pos:column="30">c<pos:position pos:line="33" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="33">1<pos:position pos:line="33" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">SHA1Update<pos:position pos:line="35" pos:column="15"/></name><argument_list pos:line="35" pos:column="15">(<argument><expr><name pos:line="35" pos:column="16">context<pos:position pos:line="35" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="25">finalcount<pos:position pos:line="35" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="37">8<pos:position pos:line="35" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="40"/></expr_stmt>  <comment type="block" pos:line="35" pos:column="42">/* Should cause a SHA1Transform() */</comment>
    <for pos:line="36" pos:column="5">for <control pos:line="36" pos:column="9">(<init><expr><name pos:line="36" pos:column="10">i<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <literal type="number" pos:line="36" pos:column="14">0<pos:position pos:line="36" pos:column="15"/></literal></expr>;<pos:position pos:line="36" pos:column="16"/></init> <condition><expr><name pos:line="36" pos:column="17">i<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">&lt;<pos:position pos:line="36" pos:column="23"/></operator> <literal type="number" pos:line="36" pos:column="21">20<pos:position pos:line="36" pos:column="23"/></literal></expr>;<pos:position pos:line="36" pos:column="24"/></condition> <incr><expr><name pos:line="36" pos:column="25">i<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">++<pos:position pos:line="36" pos:column="28"/></operator></expr></incr>)<pos:position pos:line="36" pos:column="29"/></control> <block pos:line="36" pos:column="30">{
        <expr_stmt><expr><name><name pos:line="37" pos:column="9">digest<pos:position pos:line="37" pos:column="15"/></name><index pos:line="37" pos:column="15">[<expr><name pos:line="37" pos:column="16">i<pos:position pos:line="37" pos:column="17"/></name></expr>]<pos:position pos:line="37" pos:column="18"/></index></name> <operator pos:line="37" pos:column="19">=<pos:position pos:line="37" pos:column="20"/></operator> <call pos:line="37" pos:column="21">(<name pos:line="37" pos:column="22">unsigned<pos:position pos:line="37" pos:column="30"/></name> <name pos:line="37" pos:column="31">char<pos:position pos:line="37" pos:column="35"/></name>)
         <argument_list pos:line="38" pos:column="10">(<argument><expr><operator pos:line="38" pos:column="11">(<pos:position pos:line="38" pos:column="12"/></operator><name><name pos:line="38" pos:column="12">context<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">-&gt;<pos:position pos:line="38" pos:column="24"/></operator><name pos:line="38" pos:column="21">state<pos:position pos:line="38" pos:column="26"/></name><index pos:line="38" pos:column="26">[<expr><name pos:line="38" pos:column="27">i<pos:position pos:line="38" pos:column="28"/></name><operator pos:line="38" pos:column="28">&gt;&gt;<pos:position pos:line="38" pos:column="33"/></operator><literal type="number" pos:line="38" pos:column="30">2<pos:position pos:line="38" pos:column="31"/></literal></expr>]<pos:position pos:line="38" pos:column="32"/></index></name> <operator pos:line="38" pos:column="33">&gt;&gt;<pos:position pos:line="38" pos:column="38"/></operator> <operator pos:line="38" pos:column="36">(<pos:position pos:line="38" pos:column="37"/></operator><operator pos:line="38" pos:column="37">(<pos:position pos:line="38" pos:column="38"/></operator><literal type="number" pos:line="38" pos:column="38">3<pos:position pos:line="38" pos:column="39"/></literal><operator pos:line="38" pos:column="39">-<pos:position pos:line="38" pos:column="40"/></operator><operator pos:line="38" pos:column="40">(<pos:position pos:line="38" pos:column="41"/></operator><name pos:line="38" pos:column="41">i<pos:position pos:line="38" pos:column="42"/></name> <operator pos:line="38" pos:column="43">&amp;<pos:position pos:line="38" pos:column="48"/></operator> <literal type="number" pos:line="38" pos:column="45">3<pos:position pos:line="38" pos:column="46"/></literal><operator pos:line="38" pos:column="46">)<pos:position pos:line="38" pos:column="47"/></operator><operator pos:line="38" pos:column="47">)<pos:position pos:line="38" pos:column="48"/></operator> <operator pos:line="38" pos:column="49">*<pos:position pos:line="38" pos:column="50"/></operator> <literal type="number" pos:line="38" pos:column="51">8<pos:position pos:line="38" pos:column="52"/></literal><operator pos:line="38" pos:column="52">)<pos:position pos:line="38" pos:column="53"/></operator> <operator pos:line="38" pos:column="54">)<pos:position pos:line="38" pos:column="55"/></operator> <operator pos:line="38" pos:column="56">&amp;<pos:position pos:line="38" pos:column="61"/></operator> <literal type="number" pos:line="38" pos:column="58">255<pos:position pos:line="38" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></for>
    <comment type="block" pos:line="40" pos:column="5">/* Wipe variables */</comment>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">memset<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><name pos:line="41" pos:column="12">context<pos:position pos:line="41" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="41" pos:column="21">'\0'<pos:position pos:line="41" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="27">sizeof<argument_list pos:line="41" pos:column="33">(<argument><expr><operator pos:line="41" pos:column="34">*<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="35">context<pos:position pos:line="41" pos:column="42"/></name></expr></argument>)<pos:position pos:line="41" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">memset<pos:position pos:line="42" pos:column="11"/></name><argument_list pos:line="42" pos:column="11">(<argument><expr><operator pos:line="42" pos:column="12">&amp;<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="13">finalcount<pos:position pos:line="42" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="42" pos:column="25">'\0'<pos:position pos:line="42" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="31">sizeof<argument_list pos:line="42" pos:column="37">(<argument><expr><name pos:line="42" pos:column="38">finalcount<pos:position pos:line="42" pos:column="48"/></name></expr></argument>)<pos:position pos:line="42" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="51"/></expr_stmt>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

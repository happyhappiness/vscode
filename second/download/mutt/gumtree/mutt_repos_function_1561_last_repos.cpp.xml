<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1561_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">maildir_hcache_keylen<pos:position pos:line="1" pos:column="36"/></name> <parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">fn<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type> <name pos:line="3" pos:column="16">p<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><call><name pos:line="3" pos:column="20">strrchr<pos:position pos:line="3" pos:column="27"/></name> <argument_list pos:line="3" pos:column="28">(<argument><expr><name pos:line="3" pos:column="29">fn<pos:position pos:line="3" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="3" pos:column="33">':'<pos:position pos:line="3" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
  <return pos:line="4" pos:column="3">return <expr><ternary><condition><expr><name pos:line="4" pos:column="10">p<pos:position pos:line="4" pos:column="11"/></name></expr> ?<pos:position pos:line="4" pos:column="13"/></condition><then pos:line="4" pos:column="13"> <expr><call pos:line="4" pos:column="14">(<name pos:line="4" pos:column="15">size_t<pos:position pos:line="4" pos:column="21"/></name>) <argument_list pos:line="4" pos:column="23">(<argument><expr><name pos:line="4" pos:column="24">p<pos:position pos:line="4" pos:column="25"/></name> <operator pos:line="4" pos:column="26">-<pos:position pos:line="4" pos:column="27"/></operator> <name pos:line="4" pos:column="28">fn<pos:position pos:line="4" pos:column="30"/></name></expr></argument>)<pos:position pos:line="4" pos:column="31"/></argument_list></call></expr> <pos:position pos:line="4" pos:column="32"/></then><else pos:line="4" pos:column="32">: <expr><call><name pos:line="4" pos:column="34">mutt_strlen<pos:position pos:line="4" pos:column="45"/></name><argument_list pos:line="4" pos:column="45">(<argument><expr><name pos:line="4" pos:column="46">fn<pos:position pos:line="4" pos:column="48"/></name></expr></argument>)<pos:position pos:line="4" pos:column="49"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="4" pos:column="50"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

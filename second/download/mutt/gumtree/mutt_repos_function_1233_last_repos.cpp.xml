<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1233_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">rfc2047_encode_adrlist<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">ADDRESS<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">addr<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">tag<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">ADDRESS<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">ptr<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><name pos:line="3" pos:column="18">addr<pos:position pos:line="3" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">col<pos:position pos:line="4" pos:column="10"/></name> <init pos:line="4" pos:column="11">= <expr><ternary><condition><expr><name pos:line="4" pos:column="13">tag<pos:position pos:line="4" pos:column="16"/></name></expr> ?<pos:position pos:line="4" pos:column="18"/></condition><then pos:line="4" pos:column="18"> <expr><call><name pos:line="4" pos:column="19">strlen<pos:position pos:line="4" pos:column="25"/></name> <argument_list pos:line="4" pos:column="26">(<argument><expr><name pos:line="4" pos:column="27">tag<pos:position pos:line="4" pos:column="30"/></name></expr></argument>)<pos:position pos:line="4" pos:column="31"/></argument_list></call> <operator pos:line="4" pos:column="32">+<pos:position pos:line="4" pos:column="33"/></operator> <literal type="number" pos:line="4" pos:column="34">2<pos:position pos:line="4" pos:column="35"/></literal></expr> <pos:position pos:line="4" pos:column="36"/></then><else pos:line="4" pos:column="36">: <expr><literal type="number" pos:line="4" pos:column="38">32<pos:position pos:line="4" pos:column="40"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
  
  <while pos:line="6" pos:column="3">while <condition pos:line="6" pos:column="9">(<expr><name pos:line="6" pos:column="10">ptr<pos:position pos:line="6" pos:column="13"/></name></expr>)<pos:position pos:line="6" pos:column="14"/></condition>
  <block pos:line="7" pos:column="3">{
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">ptr<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">-&gt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">personal<pos:position pos:line="8" pos:column="22"/></name></name></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="7">_rfc2047_encode_string<pos:position pos:line="9" pos:column="29"/></name> <argument_list pos:line="9" pos:column="30">(<argument><expr><operator pos:line="9" pos:column="31">&amp;<pos:position pos:line="9" pos:column="36"/></operator><name><name pos:line="9" pos:column="32">ptr<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">personal<pos:position pos:line="9" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="47">1<pos:position pos:line="9" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="50">col<pos:position pos:line="9" pos:column="53"/></name></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="55"/></expr_stmt></block></then>
    <elseif pos:line="10" pos:column="5">else <if pos:line="10" pos:column="10">if <condition pos:line="10" pos:column="13">(<expr><name><name pos:line="10" pos:column="14">ptr<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-&gt;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="19">group<pos:position pos:line="10" pos:column="24"/></name></name> <operator pos:line="10" pos:column="25">&amp;&amp;<pos:position pos:line="10" pos:column="35"/></operator> <name><name pos:line="10" pos:column="28">ptr<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">-&gt;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="33">mailbox<pos:position pos:line="10" pos:column="40"/></name></name></expr>)<pos:position pos:line="10" pos:column="41"/></condition><then pos:line="10" pos:column="41">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="7">_rfc2047_encode_string<pos:position pos:line="11" pos:column="29"/></name> <argument_list pos:line="11" pos:column="30">(<argument><expr><operator pos:line="11" pos:column="31">&amp;<pos:position pos:line="11" pos:column="36"/></operator><name><name pos:line="11" pos:column="32">ptr<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">-&gt;<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="37">mailbox<pos:position pos:line="11" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="46">1<pos:position pos:line="11" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="49">col<pos:position pos:line="11" pos:column="52"/></name></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="54"/></expr_stmt></block></then></if></elseif></if>
<cpp:ifdef pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">ifdef<pos:position pos:line="12" pos:column="7"/></cpp:directive> <name pos:line="12" pos:column="8">EXACT_ADDRESS<pos:position pos:line="12" pos:column="21"/></name></cpp:ifdef>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">ptr<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">val<pos:position pos:line="13" pos:column="17"/></name></name></expr>)<pos:position pos:line="13" pos:column="18"/></condition><then pos:line="13" pos:column="18">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="7">_rfc2047_encode_string<pos:position pos:line="14" pos:column="29"/></name> <argument_list pos:line="14" pos:column="30">(<argument><expr><operator pos:line="14" pos:column="31">&amp;<pos:position pos:line="14" pos:column="36"/></operator><name><name pos:line="14" pos:column="32">ptr<pos:position pos:line="14" pos:column="35"/></name><operator pos:line="14" pos:column="35">-&gt;<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="37">val<pos:position pos:line="14" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="42">1<pos:position pos:line="14" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="45">col<pos:position pos:line="14" pos:column="48"/></name></expr></argument>)<pos:position pos:line="14" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="50"/></expr_stmt></block></then></if>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name pos:line="16" pos:column="5">ptr<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">=<pos:position pos:line="16" pos:column="10"/></operator> <name><name pos:line="16" pos:column="11">ptr<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">-&gt;<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="16">next<pos:position pos:line="16" pos:column="20"/></name></name></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></while>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

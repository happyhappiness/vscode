<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1367_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">print_enriched_string<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">int<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">attr<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">unsigned<pos:position pos:line="1" pos:column="54"/></name> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">s<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">int<pos:position pos:line="1" pos:column="67"/></name></type> <name pos:line="1" pos:column="68">do_color<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">wchar_t<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">wc<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">k<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">n<pos:position pos:line="5" pos:column="11"/></name> <init pos:line="5" pos:column="12">= <expr><call><name pos:line="5" pos:column="14">mutt_strlen<pos:position pos:line="5" pos:column="25"/></name> <argument_list pos:line="5" pos:column="26">(<argument><expr><operator pos:line="5" pos:column="27">(<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="28">char<pos:position pos:line="5" pos:column="32"/></name> <operator pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></operator><operator pos:line="5" pos:column="34">)<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="35">s<pos:position pos:line="5" pos:column="36"/></name></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">mbstate_t<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">mbstate<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">memset<pos:position pos:line="8" pos:column="9"/></name> <argument_list pos:line="8" pos:column="10">(<argument><expr><operator pos:line="8" pos:column="11">&amp;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="12">mbstate<pos:position pos:line="8" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="21">0<pos:position pos:line="8" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="24">sizeof <argument_list pos:line="8" pos:column="31">(<argument><expr><name pos:line="8" pos:column="32">mbstate<pos:position pos:line="8" pos:column="39"/></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>
  <while pos:line="9" pos:column="3">while <condition pos:line="9" pos:column="9">(<expr><operator pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="11">s<pos:position pos:line="9" pos:column="12"/></name></expr>)<pos:position pos:line="9" pos:column="13"/></condition>
  <block pos:line="10" pos:column="3">{
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">*<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">s<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">&lt;<pos:position pos:line="11" pos:column="16"/></operator> <name pos:line="11" pos:column="14">MUTT_TREE_MAX<pos:position pos:line="11" pos:column="27"/></name></expr>)<pos:position pos:line="11" pos:column="28"/></condition><then pos:line="11" pos:column="28">
    <block pos:line="12" pos:column="5">{
      <if pos:line="13" pos:column="7">if <condition pos:line="13" pos:column="10">(<expr><name pos:line="13" pos:column="11">do_color<pos:position pos:line="13" pos:column="19"/></name></expr>)<pos:position pos:line="13" pos:column="20"/></condition><then pos:line="13" pos:column="20">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="9">SETCOLOR<pos:position pos:line="14" pos:column="17"/></name> <argument_list pos:line="14" pos:column="18">(<argument><expr><name pos:line="14" pos:column="19">MT_COLOR_TREE<pos:position pos:line="14" pos:column="32"/></name></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt></block></then></if>
      <while pos:line="15" pos:column="7">while <condition pos:line="15" pos:column="13">(<expr><operator pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">s<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">&amp;&amp;<pos:position pos:line="15" pos:column="27"/></operator> <operator pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="21">s<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">&lt;<pos:position pos:line="15" pos:column="27"/></operator> <name pos:line="15" pos:column="25">MUTT_TREE_MAX<pos:position pos:line="15" pos:column="38"/></name></expr>)<pos:position pos:line="15" pos:column="39"/></condition>
      <block pos:line="16" pos:column="7">{
	<switch pos:line="17" pos:column="9">switch <condition pos:line="17" pos:column="16">(<expr><operator pos:line="17" pos:column="17">*<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">s<pos:position pos:line="17" pos:column="19"/></name></expr>)<pos:position pos:line="17" pos:column="20"/></condition>
	<block pos:line="18" pos:column="9">{
	  <case pos:line="19" pos:column="11">case <expr><name pos:line="19" pos:column="16">MUTT_TREE_LLCORNER<pos:position pos:line="19" pos:column="34"/></name></expr>:<pos:position pos:line="19" pos:column="35"/></case>
	    <if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><call><name pos:line="20" pos:column="17">option<pos:position pos:line="20" pos:column="23"/></name> <argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">OPTASCIICHARS<pos:position pos:line="20" pos:column="38"/></name></expr></argument>)<pos:position pos:line="20" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="40"/></condition><then pos:line="20" pos:column="40">
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="15">addch<pos:position pos:line="21" pos:column="20"/></name> <argument_list pos:line="21" pos:column="21">(<argument><expr><literal type="char" pos:line="21" pos:column="22">'`'<pos:position pos:line="21" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt></block></then>
<cpp:ifdef pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">ifdef<pos:position pos:line="22" pos:column="7"/></cpp:directive> <name pos:line="22" pos:column="8">WACS_LLCORNER<pos:position pos:line="22" pos:column="21"/></name></cpp:ifdef>
	    <else pos:line="23" pos:column="13">else
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="15">add_wch<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">WACS_LLCORNER<pos:position pos:line="24" pos:column="36"/></name></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt></block></else></if>
<cpp:else pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">else<pos:position pos:line="25" pos:column="6"/></cpp:directive></cpp:else>
	    <elseif pos:line="26" pos:column="13">else <if pos:line="26" pos:column="18">if <condition pos:line="26" pos:column="21">(<expr><name pos:line="26" pos:column="22">Charset_is_utf8<pos:position pos:line="26" pos:column="37"/></name></expr>)<pos:position pos:line="26" pos:column="38"/></condition><then pos:line="26" pos:column="38">
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="15">addstr<pos:position pos:line="27" pos:column="21"/></name> <argument_list pos:line="27" pos:column="22">(<argument><expr><literal type="string" pos:line="27" pos:column="23">"\342\224\224"<pos:position pos:line="27" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt></block></then></if></elseif> <comment type="block" pos:line="27" pos:column="40">/* WACS_LLCORNER */</comment>
	    <else pos:line="28" pos:column="13">else
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="15">addch<pos:position pos:line="29" pos:column="20"/></name> <argument_list pos:line="29" pos:column="21">(<argument><expr><name pos:line="29" pos:column="22">ACS_LLCORNER<pos:position pos:line="29" pos:column="34"/></name></expr></argument>)<pos:position pos:line="29" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="36"/></expr_stmt></block></else>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>
	    <break pos:line="31" pos:column="13">break;<pos:position pos:line="31" pos:column="19"/></break>
	  <case pos:line="32" pos:column="11">case <expr><name pos:line="32" pos:column="16">MUTT_TREE_ULCORNER<pos:position pos:line="32" pos:column="34"/></name></expr>:<pos:position pos:line="32" pos:column="35"/></case>
	    <if pos:line="33" pos:column="13">if <condition pos:line="33" pos:column="16">(<expr><call><name pos:line="33" pos:column="17">option<pos:position pos:line="33" pos:column="23"/></name> <argument_list pos:line="33" pos:column="24">(<argument><expr><name pos:line="33" pos:column="25">OPTASCIICHARS<pos:position pos:line="33" pos:column="38"/></name></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="40"/></condition><then pos:line="33" pos:column="40">
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="15">addch<pos:position pos:line="34" pos:column="20"/></name> <argument_list pos:line="34" pos:column="21">(<argument><expr><literal type="char" pos:line="34" pos:column="22">','<pos:position pos:line="34" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="27"/></expr_stmt></block></then>
<cpp:ifdef pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">ifdef<pos:position pos:line="35" pos:column="7"/></cpp:directive> <name pos:line="35" pos:column="8">WACS_ULCORNER<pos:position pos:line="35" pos:column="21"/></name></cpp:ifdef>
	    <else pos:line="36" pos:column="13">else
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="15">add_wch<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><name pos:line="37" pos:column="23">WACS_ULCORNER<pos:position pos:line="37" pos:column="36"/></name></expr></argument>)<pos:position pos:line="37" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="38"/></expr_stmt></block></else></if>
<cpp:else pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">else<pos:position pos:line="38" pos:column="6"/></cpp:directive></cpp:else>
	    <elseif pos:line="39" pos:column="13">else <if pos:line="39" pos:column="18">if <condition pos:line="39" pos:column="21">(<expr><name pos:line="39" pos:column="22">Charset_is_utf8<pos:position pos:line="39" pos:column="37"/></name></expr>)<pos:position pos:line="39" pos:column="38"/></condition><then pos:line="39" pos:column="38">
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="15">addstr<pos:position pos:line="40" pos:column="21"/></name> <argument_list pos:line="40" pos:column="22">(<argument><expr><literal type="string" pos:line="40" pos:column="23">"\342\224\214"<pos:position pos:line="40" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="39"/></expr_stmt></block></then></if></elseif> <comment type="block" pos:line="40" pos:column="40">/* WACS_ULCORNER */</comment>
	    <else pos:line="41" pos:column="13">else
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="15">addch<pos:position pos:line="42" pos:column="20"/></name> <argument_list pos:line="42" pos:column="21">(<argument><expr><name pos:line="42" pos:column="22">ACS_ULCORNER<pos:position pos:line="42" pos:column="34"/></name></expr></argument>)<pos:position pos:line="42" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="36"/></expr_stmt></block></else>
<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif<pos:position pos:line="43" pos:column="7"/></cpp:directive></cpp:endif>
	    <break pos:line="44" pos:column="13">break;<pos:position pos:line="44" pos:column="19"/></break>
	  <case pos:line="45" pos:column="11">case <expr><name pos:line="45" pos:column="16">MUTT_TREE_LTEE<pos:position pos:line="45" pos:column="30"/></name></expr>:<pos:position pos:line="45" pos:column="31"/></case>
	    <if pos:line="46" pos:column="13">if <condition pos:line="46" pos:column="16">(<expr><call><name pos:line="46" pos:column="17">option<pos:position pos:line="46" pos:column="23"/></name> <argument_list pos:line="46" pos:column="24">(<argument><expr><name pos:line="46" pos:column="25">OPTASCIICHARS<pos:position pos:line="46" pos:column="38"/></name></expr></argument>)<pos:position pos:line="46" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="40"/></condition><then pos:line="46" pos:column="40">
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="15">addch<pos:position pos:line="47" pos:column="20"/></name> <argument_list pos:line="47" pos:column="21">(<argument><expr><literal type="char" pos:line="47" pos:column="22">'|'<pos:position pos:line="47" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="27"/></expr_stmt></block></then>
<cpp:ifdef pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">ifdef<pos:position pos:line="48" pos:column="7"/></cpp:directive> <name pos:line="48" pos:column="8">WACS_LTEE<pos:position pos:line="48" pos:column="17"/></name></cpp:ifdef>
	    <else pos:line="49" pos:column="13">else
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="15">add_wch<pos:position pos:line="50" pos:column="22"/></name><argument_list pos:line="50" pos:column="22">(<argument><expr><name pos:line="50" pos:column="23">WACS_LTEE<pos:position pos:line="50" pos:column="32"/></name></expr></argument>)<pos:position pos:line="50" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="34"/></expr_stmt></block></else></if>
<cpp:else pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">else<pos:position pos:line="51" pos:column="6"/></cpp:directive></cpp:else>
	    <elseif pos:line="52" pos:column="13">else <if pos:line="52" pos:column="18">if <condition pos:line="52" pos:column="21">(<expr><name pos:line="52" pos:column="22">Charset_is_utf8<pos:position pos:line="52" pos:column="37"/></name></expr>)<pos:position pos:line="52" pos:column="38"/></condition><then pos:line="52" pos:column="38">
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="15">addstr<pos:position pos:line="53" pos:column="21"/></name> <argument_list pos:line="53" pos:column="22">(<argument><expr><literal type="string" pos:line="53" pos:column="23">"\342\224\234"<pos:position pos:line="53" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="39"/></expr_stmt></block></then></if></elseif> <comment type="block" pos:line="53" pos:column="40">/* WACS_LTEE */</comment>
	    <else pos:line="54" pos:column="13">else
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="15">addch<pos:position pos:line="55" pos:column="20"/></name> <argument_list pos:line="55" pos:column="21">(<argument><expr><name pos:line="55" pos:column="22">ACS_LTEE<pos:position pos:line="55" pos:column="30"/></name></expr></argument>)<pos:position pos:line="55" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="32"/></expr_stmt></block></else>
<cpp:endif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">endif<pos:position pos:line="56" pos:column="7"/></cpp:directive></cpp:endif>
	    <break pos:line="57" pos:column="13">break;<pos:position pos:line="57" pos:column="19"/></break>
	  <case pos:line="58" pos:column="11">case <expr><name pos:line="58" pos:column="16">MUTT_TREE_HLINE<pos:position pos:line="58" pos:column="31"/></name></expr>:<pos:position pos:line="58" pos:column="32"/></case>
	    <if pos:line="59" pos:column="13">if <condition pos:line="59" pos:column="16">(<expr><call><name pos:line="59" pos:column="17">option<pos:position pos:line="59" pos:column="23"/></name> <argument_list pos:line="59" pos:column="24">(<argument><expr><name pos:line="59" pos:column="25">OPTASCIICHARS<pos:position pos:line="59" pos:column="38"/></name></expr></argument>)<pos:position pos:line="59" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="40"/></condition><then pos:line="59" pos:column="40">
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="15">addch<pos:position pos:line="60" pos:column="20"/></name> <argument_list pos:line="60" pos:column="21">(<argument><expr><literal type="char" pos:line="60" pos:column="22">'-'<pos:position pos:line="60" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="27"/></expr_stmt></block></then>
<cpp:ifdef pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">ifdef<pos:position pos:line="61" pos:column="7"/></cpp:directive> <name pos:line="61" pos:column="8">WACS_HLINE<pos:position pos:line="61" pos:column="18"/></name></cpp:ifdef>
	    <else pos:line="62" pos:column="13">else
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="15">add_wch<pos:position pos:line="63" pos:column="22"/></name><argument_list pos:line="63" pos:column="22">(<argument><expr><name pos:line="63" pos:column="23">WACS_HLINE<pos:position pos:line="63" pos:column="33"/></name></expr></argument>)<pos:position pos:line="63" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="35"/></expr_stmt></block></else></if>
<cpp:else pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">else<pos:position pos:line="64" pos:column="6"/></cpp:directive></cpp:else>
	    <elseif pos:line="65" pos:column="13">else <if pos:line="65" pos:column="18">if <condition pos:line="65" pos:column="21">(<expr><name pos:line="65" pos:column="22">Charset_is_utf8<pos:position pos:line="65" pos:column="37"/></name></expr>)<pos:position pos:line="65" pos:column="38"/></condition><then pos:line="65" pos:column="38">
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="15">addstr<pos:position pos:line="66" pos:column="21"/></name> <argument_list pos:line="66" pos:column="22">(<argument><expr><literal type="string" pos:line="66" pos:column="23">"\342\224\200"<pos:position pos:line="66" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="39"/></expr_stmt></block></then></if></elseif> <comment type="block" pos:line="66" pos:column="40">/* WACS_HLINE */</comment>
	    <else pos:line="67" pos:column="13">else
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="15">addch<pos:position pos:line="68" pos:column="20"/></name> <argument_list pos:line="68" pos:column="21">(<argument><expr><name pos:line="68" pos:column="22">ACS_HLINE<pos:position pos:line="68" pos:column="31"/></name></expr></argument>)<pos:position pos:line="68" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="33"/></expr_stmt></block></else>
<cpp:endif pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">endif<pos:position pos:line="69" pos:column="7"/></cpp:directive></cpp:endif>
	    <break pos:line="70" pos:column="13">break;<pos:position pos:line="70" pos:column="19"/></break>
	  <case pos:line="71" pos:column="11">case <expr><name pos:line="71" pos:column="16">MUTT_TREE_VLINE<pos:position pos:line="71" pos:column="31"/></name></expr>:<pos:position pos:line="71" pos:column="32"/></case>
	    <if pos:line="72" pos:column="13">if <condition pos:line="72" pos:column="16">(<expr><call><name pos:line="72" pos:column="17">option<pos:position pos:line="72" pos:column="23"/></name> <argument_list pos:line="72" pos:column="24">(<argument><expr><name pos:line="72" pos:column="25">OPTASCIICHARS<pos:position pos:line="72" pos:column="38"/></name></expr></argument>)<pos:position pos:line="72" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="40"/></condition><then pos:line="72" pos:column="40">
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="73" pos:column="15">addch<pos:position pos:line="73" pos:column="20"/></name> <argument_list pos:line="73" pos:column="21">(<argument><expr><literal type="char" pos:line="73" pos:column="22">'|'<pos:position pos:line="73" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="27"/></expr_stmt></block></then>
<cpp:ifdef pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">ifdef<pos:position pos:line="74" pos:column="7"/></cpp:directive> <name pos:line="74" pos:column="8">WACS_VLINE<pos:position pos:line="74" pos:column="18"/></name></cpp:ifdef>
	    <else pos:line="75" pos:column="13">else
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="15">add_wch<pos:position pos:line="76" pos:column="22"/></name><argument_list pos:line="76" pos:column="22">(<argument><expr><name pos:line="76" pos:column="23">WACS_VLINE<pos:position pos:line="76" pos:column="33"/></name></expr></argument>)<pos:position pos:line="76" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="35"/></expr_stmt></block></else></if>
<cpp:else pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">else<pos:position pos:line="77" pos:column="6"/></cpp:directive></cpp:else>
	    <elseif pos:line="78" pos:column="13">else <if pos:line="78" pos:column="18">if <condition pos:line="78" pos:column="21">(<expr><name pos:line="78" pos:column="22">Charset_is_utf8<pos:position pos:line="78" pos:column="37"/></name></expr>)<pos:position pos:line="78" pos:column="38"/></condition><then pos:line="78" pos:column="38">
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="15">addstr<pos:position pos:line="79" pos:column="21"/></name> <argument_list pos:line="79" pos:column="22">(<argument><expr><literal type="string" pos:line="79" pos:column="23">"\342\224\202"<pos:position pos:line="79" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="39"/></expr_stmt></block></then></if></elseif> <comment type="block" pos:line="79" pos:column="40">/* WACS_VLINE */</comment>
	    <else pos:line="80" pos:column="13">else
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="81" pos:column="15">addch<pos:position pos:line="81" pos:column="20"/></name> <argument_list pos:line="81" pos:column="21">(<argument><expr><name pos:line="81" pos:column="22">ACS_VLINE<pos:position pos:line="81" pos:column="31"/></name></expr></argument>)<pos:position pos:line="81" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="33"/></expr_stmt></block></else>
<cpp:endif pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">endif<pos:position pos:line="82" pos:column="7"/></cpp:directive></cpp:endif>
	    <break pos:line="83" pos:column="13">break;<pos:position pos:line="83" pos:column="19"/></break>
	  <case pos:line="84" pos:column="11">case <expr><name pos:line="84" pos:column="16">MUTT_TREE_TTEE<pos:position pos:line="84" pos:column="30"/></name></expr>:<pos:position pos:line="84" pos:column="31"/></case>
	    <if pos:line="85" pos:column="13">if <condition pos:line="85" pos:column="16">(<expr><call><name pos:line="85" pos:column="17">option<pos:position pos:line="85" pos:column="23"/></name> <argument_list pos:line="85" pos:column="24">(<argument><expr><name pos:line="85" pos:column="25">OPTASCIICHARS<pos:position pos:line="85" pos:column="38"/></name></expr></argument>)<pos:position pos:line="85" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="40"/></condition><then pos:line="85" pos:column="40">
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="15">addch<pos:position pos:line="86" pos:column="20"/></name> <argument_list pos:line="86" pos:column="21">(<argument><expr><literal type="char" pos:line="86" pos:column="22">'-'<pos:position pos:line="86" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="27"/></expr_stmt></block></then>
<cpp:ifdef pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">ifdef<pos:position pos:line="87" pos:column="7"/></cpp:directive> <name pos:line="87" pos:column="8">WACS_TTEE<pos:position pos:line="87" pos:column="17"/></name></cpp:ifdef>
	    <else pos:line="88" pos:column="13">else
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="89" pos:column="15">add_wch<pos:position pos:line="89" pos:column="22"/></name><argument_list pos:line="89" pos:column="22">(<argument><expr><name pos:line="89" pos:column="23">WACS_TTEE<pos:position pos:line="89" pos:column="32"/></name></expr></argument>)<pos:position pos:line="89" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="34"/></expr_stmt></block></else></if>
<cpp:else pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">else<pos:position pos:line="90" pos:column="6"/></cpp:directive></cpp:else>
	    <elseif pos:line="91" pos:column="13">else <if pos:line="91" pos:column="18">if <condition pos:line="91" pos:column="21">(<expr><name pos:line="91" pos:column="22">Charset_is_utf8<pos:position pos:line="91" pos:column="37"/></name></expr>)<pos:position pos:line="91" pos:column="38"/></condition><then pos:line="91" pos:column="38">
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="92" pos:column="15">addstr<pos:position pos:line="92" pos:column="21"/></name> <argument_list pos:line="92" pos:column="22">(<argument><expr><literal type="string" pos:line="92" pos:column="23">"\342\224\254"<pos:position pos:line="92" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="39"/></expr_stmt></block></then></if></elseif> <comment type="block" pos:line="92" pos:column="40">/* WACS_TTEE */</comment>
	    <else pos:line="93" pos:column="13">else
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="94" pos:column="15">addch<pos:position pos:line="94" pos:column="20"/></name> <argument_list pos:line="94" pos:column="21">(<argument><expr><name pos:line="94" pos:column="22">ACS_TTEE<pos:position pos:line="94" pos:column="30"/></name></expr></argument>)<pos:position pos:line="94" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="32"/></expr_stmt></block></else>
<cpp:endif pos:line="95" pos:column="1">#<cpp:directive pos:line="95" pos:column="2">endif<pos:position pos:line="95" pos:column="7"/></cpp:directive></cpp:endif>
	    <break pos:line="96" pos:column="13">break;<pos:position pos:line="96" pos:column="19"/></break>
	  <case pos:line="97" pos:column="11">case <expr><name pos:line="97" pos:column="16">MUTT_TREE_BTEE<pos:position pos:line="97" pos:column="30"/></name></expr>:<pos:position pos:line="97" pos:column="31"/></case>
	    <if pos:line="98" pos:column="13">if <condition pos:line="98" pos:column="16">(<expr><call><name pos:line="98" pos:column="17">option<pos:position pos:line="98" pos:column="23"/></name> <argument_list pos:line="98" pos:column="24">(<argument><expr><name pos:line="98" pos:column="25">OPTASCIICHARS<pos:position pos:line="98" pos:column="38"/></name></expr></argument>)<pos:position pos:line="98" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="40"/></condition><then pos:line="98" pos:column="40">
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="99" pos:column="15">addch<pos:position pos:line="99" pos:column="20"/></name> <argument_list pos:line="99" pos:column="21">(<argument><expr><literal type="char" pos:line="99" pos:column="22">'-'<pos:position pos:line="99" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="27"/></expr_stmt></block></then>
<cpp:ifdef pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">ifdef<pos:position pos:line="100" pos:column="7"/></cpp:directive> <name pos:line="100" pos:column="8">WACS_BTEE<pos:position pos:line="100" pos:column="17"/></name></cpp:ifdef>
	    <else pos:line="101" pos:column="13">else
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="102" pos:column="15">add_wch<pos:position pos:line="102" pos:column="22"/></name><argument_list pos:line="102" pos:column="22">(<argument><expr><name pos:line="102" pos:column="23">WACS_BTEE<pos:position pos:line="102" pos:column="32"/></name></expr></argument>)<pos:position pos:line="102" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="34"/></expr_stmt></block></else></if>
<cpp:else pos:line="103" pos:column="1">#<cpp:directive pos:line="103" pos:column="2">else<pos:position pos:line="103" pos:column="6"/></cpp:directive></cpp:else>
	    <elseif pos:line="104" pos:column="13">else <if pos:line="104" pos:column="18">if <condition pos:line="104" pos:column="21">(<expr><name pos:line="104" pos:column="22">Charset_is_utf8<pos:position pos:line="104" pos:column="37"/></name></expr>)<pos:position pos:line="104" pos:column="38"/></condition><then pos:line="104" pos:column="38">
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="105" pos:column="15">addstr<pos:position pos:line="105" pos:column="21"/></name> <argument_list pos:line="105" pos:column="22">(<argument><expr><literal type="string" pos:line="105" pos:column="23">"\342\224\264"<pos:position pos:line="105" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="39"/></expr_stmt></block></then></if></elseif> <comment type="block" pos:line="105" pos:column="40">/* WACS_BTEE */</comment>
	    <else pos:line="106" pos:column="13">else
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="107" pos:column="15">addch<pos:position pos:line="107" pos:column="20"/></name> <argument_list pos:line="107" pos:column="21">(<argument><expr><name pos:line="107" pos:column="22">ACS_BTEE<pos:position pos:line="107" pos:column="30"/></name></expr></argument>)<pos:position pos:line="107" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="32"/></expr_stmt></block></else>
<cpp:endif pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">endif<pos:position pos:line="108" pos:column="7"/></cpp:directive></cpp:endif>
	    <break pos:line="109" pos:column="13">break;<pos:position pos:line="109" pos:column="19"/></break>
	  <case pos:line="110" pos:column="11">case <expr><name pos:line="110" pos:column="16">MUTT_TREE_SPACE<pos:position pos:line="110" pos:column="31"/></name></expr>:<pos:position pos:line="110" pos:column="32"/></case>
	    <expr_stmt><expr><call><name pos:line="111" pos:column="13">addch<pos:position pos:line="111" pos:column="18"/></name> <argument_list pos:line="111" pos:column="19">(<argument><expr><literal type="char" pos:line="111" pos:column="20">' '<pos:position pos:line="111" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="25"/></expr_stmt>
	    <break pos:line="112" pos:column="13">break;<pos:position pos:line="112" pos:column="19"/></break>
	  <case pos:line="113" pos:column="11">case <expr><name pos:line="113" pos:column="16">MUTT_TREE_RARROW<pos:position pos:line="113" pos:column="32"/></name></expr>:<pos:position pos:line="113" pos:column="33"/></case>
	    <expr_stmt><expr><call><name pos:line="114" pos:column="13">addch<pos:position pos:line="114" pos:column="18"/></name> <argument_list pos:line="114" pos:column="19">(<argument><expr><literal type="char" pos:line="114" pos:column="20">'&gt;'<pos:position pos:line="114" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="25"/></expr_stmt>
	    <break pos:line="115" pos:column="13">break;<pos:position pos:line="115" pos:column="19"/></break>
	  <case pos:line="116" pos:column="11">case <expr><name pos:line="116" pos:column="16">MUTT_TREE_STAR<pos:position pos:line="116" pos:column="30"/></name></expr>:<pos:position pos:line="116" pos:column="31"/></case>
	    <expr_stmt><expr><call><name pos:line="117" pos:column="13">addch<pos:position pos:line="117" pos:column="18"/></name> <argument_list pos:line="117" pos:column="19">(<argument><expr><literal type="char" pos:line="117" pos:column="20">'*'<pos:position pos:line="117" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="25"/></expr_stmt> <comment type="block" pos:line="117" pos:column="26">/* fake thread indicator */</comment>
	    <break pos:line="118" pos:column="13">break;<pos:position pos:line="118" pos:column="19"/></break>
	  <case pos:line="119" pos:column="11">case <expr><name pos:line="119" pos:column="16">MUTT_TREE_HIDDEN<pos:position pos:line="119" pos:column="32"/></name></expr>:<pos:position pos:line="119" pos:column="33"/></case>
	    <expr_stmt><expr><call><name pos:line="120" pos:column="13">addch<pos:position pos:line="120" pos:column="18"/></name> <argument_list pos:line="120" pos:column="19">(<argument><expr><literal type="char" pos:line="120" pos:column="20">'&amp;'<pos:position pos:line="120" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="25"/></expr_stmt>
	    <break pos:line="121" pos:column="13">break;<pos:position pos:line="121" pos:column="19"/></break>
	  <case pos:line="122" pos:column="11">case <expr><name pos:line="122" pos:column="16">MUTT_TREE_EQUALS<pos:position pos:line="122" pos:column="32"/></name></expr>:<pos:position pos:line="122" pos:column="33"/></case>
	    <expr_stmt><expr><call><name pos:line="123" pos:column="13">addch<pos:position pos:line="123" pos:column="18"/></name> <argument_list pos:line="123" pos:column="19">(<argument><expr><literal type="char" pos:line="123" pos:column="20">'='<pos:position pos:line="123" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="25"/></expr_stmt>
	    <break pos:line="124" pos:column="13">break;<pos:position pos:line="124" pos:column="19"/></break>
	  <case pos:line="125" pos:column="11">case <expr><name pos:line="125" pos:column="16">MUTT_TREE_MISSING<pos:position pos:line="125" pos:column="33"/></name></expr>:<pos:position pos:line="125" pos:column="34"/></case>
	    <expr_stmt><expr><call><name pos:line="126" pos:column="13">addch<pos:position pos:line="126" pos:column="18"/></name> <argument_list pos:line="126" pos:column="19">(<argument><expr><literal type="char" pos:line="126" pos:column="20">'?'<pos:position pos:line="126" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="25"/></expr_stmt>
	    <break pos:line="127" pos:column="13">break;<pos:position pos:line="127" pos:column="19"/></break>
	}<pos:position pos:line="128" pos:column="10"/></block></switch>
	<expr_stmt><expr><name pos:line="129" pos:column="9">s<pos:position pos:line="129" pos:column="10"/></name><operator pos:line="129" pos:column="10">++<pos:position pos:line="129" pos:column="12"/></operator></expr><operator pos:line="129" pos:column="12">,<pos:position pos:line="129" pos:column="13"/></operator> <expr><name pos:line="129" pos:column="14">n<pos:position pos:line="129" pos:column="15"/></name><operator pos:line="129" pos:column="15">--<pos:position pos:line="129" pos:column="17"/></operator></expr>;<pos:position pos:line="129" pos:column="18"/></expr_stmt>
      }<pos:position pos:line="130" pos:column="8"/></block></while>
      <if pos:line="131" pos:column="7">if <condition pos:line="131" pos:column="10">(<expr><name pos:line="131" pos:column="11">do_color<pos:position pos:line="131" pos:column="19"/></name></expr>)<pos:position pos:line="131" pos:column="20"/></condition><then pos:line="131" pos:column="20"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="131" pos:column="21">ATTRSET<pos:position pos:line="131" pos:column="28"/></name><argument_list pos:line="131" pos:column="28">(<argument><expr><name pos:line="131" pos:column="29">attr<pos:position pos:line="131" pos:column="33"/></name></expr></argument>)<pos:position pos:line="131" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="35"/></expr_stmt></block></then></if>
    }<pos:position pos:line="132" pos:column="6"/></block></then>
    <elseif pos:line="133" pos:column="5">else <if pos:line="133" pos:column="10">if <condition pos:line="133" pos:column="13">(<expr><operator pos:line="133" pos:column="14">(<pos:position pos:line="133" pos:column="15"/></operator><name pos:line="133" pos:column="15">k<pos:position pos:line="133" pos:column="16"/></name> <operator pos:line="133" pos:column="17">=<pos:position pos:line="133" pos:column="18"/></operator> <call><name pos:line="133" pos:column="19">mbrtowc<pos:position pos:line="133" pos:column="26"/></name> <argument_list pos:line="133" pos:column="27">(<argument><expr><operator pos:line="133" pos:column="28">&amp;<pos:position pos:line="133" pos:column="33"/></operator><name pos:line="133" pos:column="29">wc<pos:position pos:line="133" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="133" pos:column="33">(<pos:position pos:line="133" pos:column="34"/></operator><name pos:line="133" pos:column="34">char<pos:position pos:line="133" pos:column="38"/></name> <operator pos:line="133" pos:column="39">*<pos:position pos:line="133" pos:column="40"/></operator><operator pos:line="133" pos:column="40">)<pos:position pos:line="133" pos:column="41"/></operator><name pos:line="133" pos:column="41">s<pos:position pos:line="133" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="44">n<pos:position pos:line="133" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="133" pos:column="47">&amp;<pos:position pos:line="133" pos:column="52"/></operator><name pos:line="133" pos:column="48">mbstate<pos:position pos:line="133" pos:column="55"/></name></expr></argument>)<pos:position pos:line="133" pos:column="56"/></argument_list></call><operator pos:line="133" pos:column="56">)<pos:position pos:line="133" pos:column="57"/></operator> <operator pos:line="133" pos:column="58">&gt;<pos:position pos:line="133" pos:column="62"/></operator> <literal type="number" pos:line="133" pos:column="60">0<pos:position pos:line="133" pos:column="61"/></literal></expr>)<pos:position pos:line="133" pos:column="62"/></condition><then pos:line="133" pos:column="62">
    <block pos:line="134" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="135" pos:column="7">addnstr<pos:position pos:line="135" pos:column="14"/></name> <argument_list pos:line="135" pos:column="15">(<argument><expr><operator pos:line="135" pos:column="16">(<pos:position pos:line="135" pos:column="17"/></operator><name pos:line="135" pos:column="17">char<pos:position pos:line="135" pos:column="21"/></name> <operator pos:line="135" pos:column="22">*<pos:position pos:line="135" pos:column="23"/></operator><operator pos:line="135" pos:column="23">)<pos:position pos:line="135" pos:column="24"/></operator><name pos:line="135" pos:column="24">s<pos:position pos:line="135" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="27">k<pos:position pos:line="135" pos:column="28"/></name></expr></argument>)<pos:position pos:line="135" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name pos:line="136" pos:column="7">s<pos:position pos:line="136" pos:column="8"/></name> <operator pos:line="136" pos:column="9">+=<pos:position pos:line="136" pos:column="11"/></operator> <name pos:line="136" pos:column="12">k<pos:position pos:line="136" pos:column="13"/></name></expr><operator pos:line="136" pos:column="13">,<pos:position pos:line="136" pos:column="14"/></operator> <expr><name pos:line="136" pos:column="15">n<pos:position pos:line="136" pos:column="16"/></name><operator pos:line="136" pos:column="16">-=<pos:position pos:line="136" pos:column="18"/></operator> <name pos:line="136" pos:column="19">k<pos:position pos:line="136" pos:column="20"/></name></expr>;<pos:position pos:line="136" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="137" pos:column="6"/></block></then></if></elseif>
    <else pos:line="138" pos:column="5">else
      <block type="pseudo"><break pos:line="139" pos:column="7">break;<pos:position pos:line="139" pos:column="13"/></break></block></else></if>
  }<pos:position pos:line="140" pos:column="4"/></block></while>
}<pos:position pos:line="141" pos:column="2"/></block></function></unit>

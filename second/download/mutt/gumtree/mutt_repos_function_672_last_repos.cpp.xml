<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_672_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">strncasecmp<pos:position pos:line="1" pos:column="16"/></name> <parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">char<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type><name pos:line="1" pos:column="24">s1<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">s2<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">size_t<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">n<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">register<pos:position pos:line="3" pos:column="11"/></specifier> <name pos:line="3" pos:column="12">int<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">c1<pos:position pos:line="3" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="20">c2<pos:position pos:line="3" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="24">l<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><literal type="number" pos:line="3" pos:column="28">0<pos:position pos:line="3" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  
  <while pos:line="5" pos:column="3">while <condition pos:line="5" pos:column="9">(<expr><operator pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">s1<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">&amp;&amp;<pos:position pos:line="5" pos:column="24"/></operator> <operator pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="18">s2<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">&amp;&amp;<pos:position pos:line="5" pos:column="31"/></operator> <name pos:line="5" pos:column="24">l<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">&lt;<pos:position pos:line="5" pos:column="30"/></operator> <name pos:line="5" pos:column="28">n<pos:position pos:line="5" pos:column="29"/></name></expr>)<pos:position pos:line="5" pos:column="30"/></condition>
  <block pos:line="6" pos:column="3">{
    <expr_stmt><expr><name pos:line="7" pos:column="5">c1<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">=<pos:position pos:line="7" pos:column="9"/></operator> <call><name pos:line="7" pos:column="10">tolower<pos:position pos:line="7" pos:column="17"/></name> <argument_list pos:line="7" pos:column="18">(<argument><expr><operator pos:line="7" pos:column="19">(<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="20">unsigned<pos:position pos:line="7" pos:column="28"/></name> <name pos:line="7" pos:column="29">char<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">)<pos:position pos:line="7" pos:column="34"/></operator> <operator pos:line="7" pos:column="35">*<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="36">s1<pos:position pos:line="7" pos:column="38"/></name></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="8" pos:column="5">c2<pos:position pos:line="8" pos:column="7"/></name> <operator pos:line="8" pos:column="8">=<pos:position pos:line="8" pos:column="9"/></operator> <call><name pos:line="8" pos:column="10">tolower<pos:position pos:line="8" pos:column="17"/></name> <argument_list pos:line="8" pos:column="18">(<argument><expr><operator pos:line="8" pos:column="19">(<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="20">unsigned<pos:position pos:line="8" pos:column="28"/></name> <name pos:line="8" pos:column="29">char<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">)<pos:position pos:line="8" pos:column="34"/></operator> <operator pos:line="8" pos:column="35">*<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="36">s2<pos:position pos:line="8" pos:column="38"/></name></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">c1<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">!=<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">c2<pos:position pos:line="9" pos:column="17"/></name></expr>)<pos:position pos:line="9" pos:column="18"/></condition><then pos:line="9" pos:column="18">
      <block type="pseudo"><return pos:line="10" pos:column="7">return <expr><operator pos:line="10" pos:column="14">(<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">c1<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">-<pos:position pos:line="10" pos:column="19"/></operator> <name pos:line="10" pos:column="20">c2<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">)<pos:position pos:line="10" pos:column="23"/></operator></expr>;<pos:position pos:line="10" pos:column="24"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="11" pos:column="5">s1<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">++<pos:position pos:line="11" pos:column="9"/></operator></expr>;<pos:position pos:line="11" pos:column="10"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">s2<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">++<pos:position pos:line="12" pos:column="9"/></operator></expr>;<pos:position pos:line="12" pos:column="10"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">l<pos:position pos:line="13" pos:column="6"/></name><operator pos:line="13" pos:column="6">++<pos:position pos:line="13" pos:column="8"/></operator></expr>;<pos:position pos:line="13" pos:column="9"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></while>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">l<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">==<pos:position pos:line="15" pos:column="11"/></operator> <name pos:line="15" pos:column="12">n<pos:position pos:line="15" pos:column="13"/></name></expr>)<pos:position pos:line="15" pos:column="14"/></condition><then pos:line="15" pos:column="14">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><call pos:line="16" pos:column="12">(<name pos:line="16" pos:column="13">int<pos:position pos:line="16" pos:column="16"/></name>) <argument_list pos:line="16" pos:column="18">(<argument><expr><literal type="number" pos:line="16" pos:column="19">0<pos:position pos:line="16" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="22"/></return></block></then>
  <else pos:line="17" pos:column="3">else
    <block type="pseudo"><return pos:line="18" pos:column="5">return <expr><call pos:line="18" pos:column="12">(<name pos:line="18" pos:column="13">int<pos:position pos:line="18" pos:column="16"/></name>) <argument_list pos:line="18" pos:column="18">(<argument><expr><operator pos:line="18" pos:column="19">*<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="20">s1<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">-<pos:position pos:line="18" pos:column="24"/></operator> <operator pos:line="18" pos:column="25">*<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">s2<pos:position pos:line="18" pos:column="28"/></name></expr></argument>)<pos:position pos:line="18" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="30"/></return></block></else></if>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

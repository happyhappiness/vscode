<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1085_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">mutt_hcache_close<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">header_cache_t<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">h<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><operator pos:line="4" pos:column="7">!<pos:position pos:line="4" pos:column="8"/></operator><name pos:line="4" pos:column="8">h<pos:position pos:line="4" pos:column="9"/></name></expr>)<pos:position pos:line="4" pos:column="10"/></condition><then pos:line="4" pos:column="10">
    <block type="pseudo"><return pos:line="5" pos:column="5">return;<pos:position pos:line="5" pos:column="12"/></return></block></then></if>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">!<pos:position pos:line="7" pos:column="8"/></operator><call><name pos:line="7" pos:column="8">tcbdbclose<pos:position pos:line="7" pos:column="18"/></name><argument_list pos:line="7" pos:column="18">(<argument><expr><name><name pos:line="7" pos:column="19">h<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">-&gt;<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="22">db<pos:position pos:line="7" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26">
  <block pos:line="8" pos:column="3">{
<cpp:ifdef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifdef<pos:position pos:line="9" pos:column="7"/></cpp:directive> <name pos:line="9" pos:column="8">DEBUG<pos:position pos:line="9" pos:column="13"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">ecode<pos:position pos:line="10" pos:column="14"/></name> <init pos:line="10" pos:column="15">= <expr><call><name pos:line="10" pos:column="17">tcbdbecode<pos:position pos:line="10" pos:column="27"/></name> <argument_list pos:line="10" pos:column="28">(<argument><expr><name><name pos:line="10" pos:column="29">h<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">-&gt;<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="32">db<pos:position pos:line="10" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="36"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">dprint<pos:position pos:line="11" pos:column="11"/></name> <argument_list pos:line="11" pos:column="12">(<argument><expr><literal type="number" pos:line="11" pos:column="13">2<pos:position pos:line="11" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="11" pos:column="16">(<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">debugfile<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">,<pos:position pos:line="11" pos:column="27"/></operator> <literal type="string" pos:line="11" pos:column="28">"tcbdbclose failed for %s: %s (ecode %d)\n"<pos:position pos:line="11" pos:column="71"/></literal><operator pos:line="11" pos:column="71">,<pos:position pos:line="11" pos:column="72"/></operator> <name><name pos:line="11" pos:column="73">h<pos:position pos:line="11" pos:column="74"/></name><operator pos:line="11" pos:column="74">-&gt;<pos:position pos:line="11" pos:column="79"/></operator><name pos:line="11" pos:column="76">folder<pos:position pos:line="11" pos:column="82"/></name></name><operator pos:line="11" pos:column="82">,<pos:position pos:line="11" pos:column="83"/></operator> <call><name pos:line="11" pos:column="84">tcbdberrmsg<pos:position pos:line="11" pos:column="95"/></name> <argument_list pos:line="11" pos:column="96">(<argument><expr><name pos:line="11" pos:column="97">ecode<pos:position pos:line="11" pos:column="102"/></name></expr></argument>)<pos:position pos:line="11" pos:column="103"/></argument_list></call><operator pos:line="11" pos:column="103">,<pos:position pos:line="11" pos:column="104"/></operator> <name pos:line="11" pos:column="105">ecode<pos:position pos:line="11" pos:column="110"/></name><operator pos:line="11" pos:column="110">)<pos:position pos:line="11" pos:column="111"/></operator></expr></argument>)<pos:position pos:line="11" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="113"/></expr_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">tcbdbdel<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><name><name pos:line="14" pos:column="12">h<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">db<pos:position pos:line="14" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">FREE<pos:position pos:line="15" pos:column="7"/></name><argument_list pos:line="15" pos:column="7">(<argument><expr><operator pos:line="15" pos:column="8">&amp;<pos:position pos:line="15" pos:column="13"/></operator><name><name pos:line="15" pos:column="9">h<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">folder<pos:position pos:line="15" pos:column="18"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">FREE<pos:position pos:line="16" pos:column="7"/></name><argument_list pos:line="16" pos:column="7">(<argument><expr><operator pos:line="16" pos:column="8">&amp;<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="9">h<pos:position pos:line="16" pos:column="10"/></name></expr></argument>)<pos:position pos:line="16" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="12"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1034_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">enriched_set_flags<pos:position pos:line="1" pos:column="31"/></name> <parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">wchar_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">tag<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="53">struct<pos:position pos:line="1" pos:column="59"/></name> <name pos:line="1" pos:column="60">enriched_state<pos:position pos:line="1" pos:column="74"/></name></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">stte<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">wchar_t<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">tagptr<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><name pos:line="3" pos:column="27">tag<pos:position pos:line="3" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="10">j<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">*<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">tagptr<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">==<pos:position pos:line="6" pos:column="17"/></operator> <operator pos:line="6" pos:column="18">(<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="19">wchar_t<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">)<pos:position pos:line="6" pos:column="27"/></operator> <literal type="char" pos:line="6" pos:column="28">'/'<pos:position pos:line="6" pos:column="31"/></literal></expr>)<pos:position pos:line="6" pos:column="32"/></condition><then pos:line="6" pos:column="32">
    <block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="5">tagptr<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">++<pos:position pos:line="7" pos:column="13"/></operator></expr>;<pos:position pos:line="7" pos:column="14"/></expr_stmt></block></then></if>
  
  <for pos:line="9" pos:column="3">for <control pos:line="9" pos:column="7">(<init><expr><name pos:line="9" pos:column="8">i<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr><operator pos:line="9" pos:column="13">,<pos:position pos:line="9" pos:column="14"/></operator> <expr><name pos:line="9" pos:column="15">j<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <operator pos:line="9" pos:column="19">-<pos:position pos:line="9" pos:column="20"/></operator><literal type="number" pos:line="9" pos:column="20">1<pos:position pos:line="9" pos:column="21"/></literal></expr>;<pos:position pos:line="9" pos:column="22"/></init> <condition><expr><name><name pos:line="9" pos:column="23">EnrichedTags<pos:position pos:line="9" pos:column="35"/></name><index pos:line="9" pos:column="35">[<expr><name pos:line="9" pos:column="36">i<pos:position pos:line="9" pos:column="37"/></name></expr>]<pos:position pos:line="9" pos:column="38"/></index></name><operator pos:line="9" pos:column="38">.<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="39">tag_name<pos:position pos:line="9" pos:column="47"/></name></expr>;<pos:position pos:line="9" pos:column="48"/></condition> <incr><expr><name pos:line="9" pos:column="49">i<pos:position pos:line="9" pos:column="50"/></name><operator pos:line="9" pos:column="50">++<pos:position pos:line="9" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="53"/></control>
    <block type="pseudo"><if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">wcscasecmp<pos:position pos:line="10" pos:column="19"/></name> <argument_list pos:line="10" pos:column="20">(<argument><expr><name><name pos:line="10" pos:column="21">EnrichedTags<pos:position pos:line="10" pos:column="33"/></name><index pos:line="10" pos:column="33">[<expr><name pos:line="10" pos:column="34">i<pos:position pos:line="10" pos:column="35"/></name></expr>]<pos:position pos:line="10" pos:column="36"/></index></name><operator pos:line="10" pos:column="36">.<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="37">tag_name<pos:position pos:line="10" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="47">tagptr<pos:position pos:line="10" pos:column="53"/></name></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></call> <operator pos:line="10" pos:column="55">==<pos:position pos:line="10" pos:column="57"/></operator> <literal type="number" pos:line="10" pos:column="58">0<pos:position pos:line="10" pos:column="59"/></literal></expr>)<pos:position pos:line="10" pos:column="60"/></condition><then pos:line="10" pos:column="60">
    <block pos:line="11" pos:column="5">{
      <expr_stmt><expr><name pos:line="12" pos:column="7">j<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <name><name pos:line="12" pos:column="11">EnrichedTags<pos:position pos:line="12" pos:column="23"/></name><index pos:line="12" pos:column="23">[<expr><name pos:line="12" pos:column="24">i<pos:position pos:line="12" pos:column="25"/></name></expr>]<pos:position pos:line="12" pos:column="26"/></index></name><operator pos:line="12" pos:column="26">.<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="27">index<pos:position pos:line="12" pos:column="32"/></name></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>
      <break pos:line="13" pos:column="7">break;<pos:position pos:line="13" pos:column="13"/></break>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if></block></for>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">j<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">!=<pos:position pos:line="16" pos:column="11"/></operator> <operator pos:line="16" pos:column="12">-<pos:position pos:line="16" pos:column="13"/></operator><literal type="number" pos:line="16" pos:column="13">1<pos:position pos:line="16" pos:column="14"/></literal></expr>)<pos:position pos:line="16" pos:column="15"/></condition><then pos:line="16" pos:column="15">
  <block pos:line="17" pos:column="3">{
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">j<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">==<pos:position pos:line="18" pos:column="13"/></operator> <name pos:line="18" pos:column="14">RICH_CENTER<pos:position pos:line="18" pos:column="25"/></name> <operator pos:line="18" pos:column="26">||<pos:position pos:line="18" pos:column="28"/></operator> <name pos:line="18" pos:column="29">j<pos:position pos:line="18" pos:column="30"/></name> <operator pos:line="18" pos:column="31">==<pos:position pos:line="18" pos:column="33"/></operator> <name pos:line="18" pos:column="34">RICH_FLUSHLEFT<pos:position pos:line="18" pos:column="48"/></name> <operator pos:line="18" pos:column="49">||<pos:position pos:line="18" pos:column="51"/></operator> <name pos:line="18" pos:column="52">j<pos:position pos:line="18" pos:column="53"/></name> <operator pos:line="18" pos:column="54">==<pos:position pos:line="18" pos:column="56"/></operator> <name pos:line="18" pos:column="57">RICH_FLUSHRIGHT<pos:position pos:line="18" pos:column="72"/></name></expr>)<pos:position pos:line="18" pos:column="73"/></condition><then pos:line="18" pos:column="73">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="7">enriched_flush<pos:position pos:line="19" pos:column="21"/></name> <argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">stte<pos:position pos:line="19" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="29">1<pos:position pos:line="19" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt></block></then></if>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">*<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">tag<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">==<pos:position pos:line="21" pos:column="16"/></operator> <operator pos:line="21" pos:column="17">(<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">wchar_t<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">)<pos:position pos:line="21" pos:column="26"/></operator> <literal type="char" pos:line="21" pos:column="27">'/'<pos:position pos:line="21" pos:column="30"/></literal></expr>)<pos:position pos:line="21" pos:column="31"/></condition><then pos:line="21" pos:column="31">
    <block pos:line="22" pos:column="5">{
      <if pos:line="23" pos:column="7">if <condition pos:line="23" pos:column="10">(<expr><name><name pos:line="23" pos:column="11">stte<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">-&gt;<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="17">tag_level<pos:position pos:line="23" pos:column="26"/></name><index pos:line="23" pos:column="26">[<expr><name pos:line="23" pos:column="27">j<pos:position pos:line="23" pos:column="28"/></name></expr>]<pos:position pos:line="23" pos:column="29"/></index></name></expr>)<pos:position pos:line="23" pos:column="30"/></condition><then pos:line="23" pos:column="30"> <comment type="block" pos:line="23" pos:column="31">/* make sure not to go negative */</comment>
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="24" pos:column="9">stte<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">-&gt;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="15">tag_level<pos:position pos:line="24" pos:column="24"/></name><index pos:line="24" pos:column="24">[<expr><name pos:line="24" pos:column="25">j<pos:position pos:line="24" pos:column="26"/></name></expr>]<pos:position pos:line="24" pos:column="27"/></index></name><operator pos:line="24" pos:column="27">--<pos:position pos:line="24" pos:column="29"/></operator></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt></block></then></if>
      <if pos:line="25" pos:column="7">if <condition pos:line="25" pos:column="10">(<expr><operator pos:line="25" pos:column="11">(<pos:position pos:line="25" pos:column="12"/></operator><name><name pos:line="25" pos:column="12">stte<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">-&gt;<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="18">s<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">-&gt;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="21">flags<pos:position pos:line="25" pos:column="26"/></name></name> <operator pos:line="25" pos:column="27">&amp;<pos:position pos:line="25" pos:column="32"/></operator> <name pos:line="25" pos:column="29">MUTT_DISPLAY<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">)<pos:position pos:line="25" pos:column="42"/></operator> <operator pos:line="25" pos:column="43">&amp;&amp;<pos:position pos:line="25" pos:column="53"/></operator> <name pos:line="25" pos:column="46">j<pos:position pos:line="25" pos:column="47"/></name> <operator pos:line="25" pos:column="48">==<pos:position pos:line="25" pos:column="50"/></operator> <name pos:line="25" pos:column="51">RICH_PARAM<pos:position pos:line="25" pos:column="61"/></name> <operator pos:line="25" pos:column="62">&amp;&amp;<pos:position pos:line="25" pos:column="72"/></operator> <name><name pos:line="25" pos:column="65">stte<pos:position pos:line="25" pos:column="69"/></name><operator pos:line="25" pos:column="69">-&gt;<pos:position pos:line="25" pos:column="74"/></operator><name pos:line="25" pos:column="71">tag_level<pos:position pos:line="25" pos:column="80"/></name><index pos:line="25" pos:column="80">[<expr><name pos:line="25" pos:column="81">RICH_COLOR<pos:position pos:line="25" pos:column="91"/></name></expr>]<pos:position pos:line="25" pos:column="92"/></index></name></expr>)<pos:position pos:line="25" pos:column="93"/></condition><then pos:line="25" pos:column="93">
      <block pos:line="26" pos:column="7">{
	<expr_stmt><expr><name><name pos:line="27" pos:column="9">stte<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">-&gt;<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="15">param<pos:position pos:line="27" pos:column="20"/></name><index pos:line="27" pos:column="20">[<expr><name><name pos:line="27" pos:column="21">stte<pos:position pos:line="27" pos:column="25"/></name><operator pos:line="27" pos:column="25">-&gt;<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="27">param_used<pos:position pos:line="27" pos:column="37"/></name></name></expr>]<pos:position pos:line="27" pos:column="38"/></index></name> <operator pos:line="27" pos:column="39">=<pos:position pos:line="27" pos:column="40"/></operator> <operator pos:line="27" pos:column="41">(<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="42">wchar_t<pos:position pos:line="27" pos:column="49"/></name><operator pos:line="27" pos:column="49">)<pos:position pos:line="27" pos:column="50"/></operator> <literal type="char" pos:line="27" pos:column="51">'\0'<pos:position pos:line="27" pos:column="55"/></literal></expr>;<pos:position pos:line="27" pos:column="56"/></expr_stmt>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><call><name pos:line="28" pos:column="14">wcscasecmp<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><literal type="string" pos:line="28" pos:column="25">L"black"<pos:position pos:line="28" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="35">stte<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">-&gt;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="41">param<pos:position pos:line="28" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="48"/></condition><then pos:line="28" pos:column="48">
	<block pos:line="29" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="30" pos:column="11">enriched_puts<pos:position pos:line="30" pos:column="24"/></name><argument_list pos:line="30" pos:column="24">(<argument><expr><literal type="string" pos:line="30" pos:column="25">"\033[30m"<pos:position pos:line="30" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="37">stte<pos:position pos:line="30" pos:column="41"/></name></expr></argument>)<pos:position pos:line="30" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></then>
	<elseif pos:line="32" pos:column="9">else <if pos:line="32" pos:column="14">if <condition pos:line="32" pos:column="17">(<expr><operator pos:line="32" pos:column="18">!<pos:position pos:line="32" pos:column="19"/></operator><call><name pos:line="32" pos:column="19">wcscasecmp<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><literal type="string" pos:line="32" pos:column="30">L"red"<pos:position pos:line="32" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="38">stte<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">-&gt;<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="44">param<pos:position pos:line="32" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="51"/></condition><then pos:line="32" pos:column="51">
	<block pos:line="33" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="34" pos:column="11">enriched_puts<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">(<argument><expr><literal type="string" pos:line="34" pos:column="25">"\033[31m"<pos:position pos:line="34" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="37">stte<pos:position pos:line="34" pos:column="41"/></name></expr></argument>)<pos:position pos:line="34" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="36" pos:column="9">else <if pos:line="36" pos:column="14">if <condition pos:line="36" pos:column="17">(<expr><operator pos:line="36" pos:column="18">!<pos:position pos:line="36" pos:column="19"/></operator><call><name pos:line="36" pos:column="19">wcscasecmp<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><literal type="string" pos:line="36" pos:column="30">L"green"<pos:position pos:line="36" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="40">stte<pos:position pos:line="36" pos:column="44"/></name><operator pos:line="36" pos:column="44">-&gt;<pos:position pos:line="36" pos:column="49"/></operator><name pos:line="36" pos:column="46">param<pos:position pos:line="36" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="53"/></condition><then pos:line="36" pos:column="53">
	<block pos:line="37" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="38" pos:column="11">enriched_puts<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><literal type="string" pos:line="38" pos:column="25">"\033[32m"<pos:position pos:line="38" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="37">stte<pos:position pos:line="38" pos:column="41"/></name></expr></argument>)<pos:position pos:line="38" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="40" pos:column="9">else <if pos:line="40" pos:column="14">if <condition pos:line="40" pos:column="17">(<expr><operator pos:line="40" pos:column="18">!<pos:position pos:line="40" pos:column="19"/></operator><call><name pos:line="40" pos:column="19">wcscasecmp<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><literal type="string" pos:line="40" pos:column="30">L"yellow"<pos:position pos:line="40" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="41">stte<pos:position pos:line="40" pos:column="45"/></name><operator pos:line="40" pos:column="45">-&gt;<pos:position pos:line="40" pos:column="50"/></operator><name pos:line="40" pos:column="47">param<pos:position pos:line="40" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="54"/></condition><then pos:line="40" pos:column="54">
	<block pos:line="41" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="42" pos:column="11">enriched_puts<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><literal type="string" pos:line="42" pos:column="25">"\033[33m"<pos:position pos:line="42" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="37">stte<pos:position pos:line="42" pos:column="41"/></name></expr></argument>)<pos:position pos:line="42" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="43" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="44" pos:column="9">else <if pos:line="44" pos:column="14">if <condition pos:line="44" pos:column="17">(<expr><operator pos:line="44" pos:column="18">!<pos:position pos:line="44" pos:column="19"/></operator><call><name pos:line="44" pos:column="19">wcscasecmp<pos:position pos:line="44" pos:column="29"/></name><argument_list pos:line="44" pos:column="29">(<argument><expr><literal type="string" pos:line="44" pos:column="30">L"blue"<pos:position pos:line="44" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="39">stte<pos:position pos:line="44" pos:column="43"/></name><operator pos:line="44" pos:column="43">-&gt;<pos:position pos:line="44" pos:column="48"/></operator><name pos:line="44" pos:column="45">param<pos:position pos:line="44" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="52"/></condition><then pos:line="44" pos:column="52">
	<block pos:line="45" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="46" pos:column="11">enriched_puts<pos:position pos:line="46" pos:column="24"/></name><argument_list pos:line="46" pos:column="24">(<argument><expr><literal type="string" pos:line="46" pos:column="25">"\033[34m"<pos:position pos:line="46" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="37">stte<pos:position pos:line="46" pos:column="41"/></name></expr></argument>)<pos:position pos:line="46" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="47" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="48" pos:column="9">else <if pos:line="48" pos:column="14">if <condition pos:line="48" pos:column="17">(<expr><operator pos:line="48" pos:column="18">!<pos:position pos:line="48" pos:column="19"/></operator><call><name pos:line="48" pos:column="19">wcscasecmp<pos:position pos:line="48" pos:column="29"/></name><argument_list pos:line="48" pos:column="29">(<argument><expr><literal type="string" pos:line="48" pos:column="30">L"magenta"<pos:position pos:line="48" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="42">stte<pos:position pos:line="48" pos:column="46"/></name><operator pos:line="48" pos:column="46">-&gt;<pos:position pos:line="48" pos:column="51"/></operator><name pos:line="48" pos:column="48">param<pos:position pos:line="48" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="55"/></condition><then pos:line="48" pos:column="55">
	<block pos:line="49" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="50" pos:column="11">enriched_puts<pos:position pos:line="50" pos:column="24"/></name><argument_list pos:line="50" pos:column="24">(<argument><expr><literal type="string" pos:line="50" pos:column="25">"\033[35m"<pos:position pos:line="50" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="37">stte<pos:position pos:line="50" pos:column="41"/></name></expr></argument>)<pos:position pos:line="50" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="51" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="52" pos:column="9">else <if pos:line="52" pos:column="14">if <condition pos:line="52" pos:column="17">(<expr><operator pos:line="52" pos:column="18">!<pos:position pos:line="52" pos:column="19"/></operator><call><name pos:line="52" pos:column="19">wcscasecmp<pos:position pos:line="52" pos:column="29"/></name><argument_list pos:line="52" pos:column="29">(<argument><expr><literal type="string" pos:line="52" pos:column="30">L"cyan"<pos:position pos:line="52" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="39">stte<pos:position pos:line="52" pos:column="43"/></name><operator pos:line="52" pos:column="43">-&gt;<pos:position pos:line="52" pos:column="48"/></operator><name pos:line="52" pos:column="45">param<pos:position pos:line="52" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="52"/></condition><then pos:line="52" pos:column="52">
	<block pos:line="53" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="54" pos:column="11">enriched_puts<pos:position pos:line="54" pos:column="24"/></name><argument_list pos:line="54" pos:column="24">(<argument><expr><literal type="string" pos:line="54" pos:column="25">"\033[36m"<pos:position pos:line="54" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="37">stte<pos:position pos:line="54" pos:column="41"/></name></expr></argument>)<pos:position pos:line="54" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="55" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="56" pos:column="9">else <if pos:line="56" pos:column="14">if <condition pos:line="56" pos:column="17">(<expr><operator pos:line="56" pos:column="18">!<pos:position pos:line="56" pos:column="19"/></operator><call><name pos:line="56" pos:column="19">wcscasecmp<pos:position pos:line="56" pos:column="29"/></name><argument_list pos:line="56" pos:column="29">(<argument><expr><literal type="string" pos:line="56" pos:column="30">L"white"<pos:position pos:line="56" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="40">stte<pos:position pos:line="56" pos:column="44"/></name><operator pos:line="56" pos:column="44">-&gt;<pos:position pos:line="56" pos:column="49"/></operator><name pos:line="56" pos:column="46">param<pos:position pos:line="56" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="53"/></condition><then pos:line="56" pos:column="53">
	<block pos:line="57" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="58" pos:column="11">enriched_puts<pos:position pos:line="58" pos:column="24"/></name><argument_list pos:line="58" pos:column="24">(<argument><expr><literal type="string" pos:line="58" pos:column="25">"\033[37m"<pos:position pos:line="58" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="37">stte<pos:position pos:line="58" pos:column="41"/></name></expr></argument>)<pos:position pos:line="58" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="59" pos:column="10"/></block></then></if></elseif></if>
      }<pos:position pos:line="60" pos:column="8"/></block></then></if>
      <if pos:line="61" pos:column="7">if <condition pos:line="61" pos:column="10">(<expr><operator pos:line="61" pos:column="11">(<pos:position pos:line="61" pos:column="12"/></operator><name><name pos:line="61" pos:column="12">stte<pos:position pos:line="61" pos:column="16"/></name><operator pos:line="61" pos:column="16">-&gt;<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="18">s<pos:position pos:line="61" pos:column="19"/></name><operator pos:line="61" pos:column="19">-&gt;<pos:position pos:line="61" pos:column="24"/></operator><name pos:line="61" pos:column="21">flags<pos:position pos:line="61" pos:column="26"/></name></name> <operator pos:line="61" pos:column="27">&amp;<pos:position pos:line="61" pos:column="32"/></operator> <name pos:line="61" pos:column="29">MUTT_DISPLAY<pos:position pos:line="61" pos:column="41"/></name><operator pos:line="61" pos:column="41">)<pos:position pos:line="61" pos:column="42"/></operator> <operator pos:line="61" pos:column="43">&amp;&amp;<pos:position pos:line="61" pos:column="53"/></operator> <name pos:line="61" pos:column="46">j<pos:position pos:line="61" pos:column="47"/></name> <operator pos:line="61" pos:column="48">==<pos:position pos:line="61" pos:column="50"/></operator> <name pos:line="61" pos:column="51">RICH_COLOR<pos:position pos:line="61" pos:column="61"/></name></expr>)<pos:position pos:line="61" pos:column="62"/></condition><then pos:line="61" pos:column="62">
      <block pos:line="62" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="63" pos:column="9">enriched_puts<pos:position pos:line="63" pos:column="22"/></name><argument_list pos:line="63" pos:column="22">(<argument><expr><literal type="string" pos:line="63" pos:column="23">"\033[0m"<pos:position pos:line="63" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="34">stte<pos:position pos:line="63" pos:column="38"/></name></expr></argument>)<pos:position pos:line="63" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="40"/></expr_stmt>
      }<pos:position pos:line="64" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="66" pos:column="7">/* flush parameter buffer when closing the tag */</comment>
      <if pos:line="67" pos:column="7">if <condition pos:line="67" pos:column="10">(<expr><name pos:line="67" pos:column="11">j<pos:position pos:line="67" pos:column="12"/></name> <operator pos:line="67" pos:column="13">==<pos:position pos:line="67" pos:column="15"/></operator> <name pos:line="67" pos:column="16">RICH_PARAM<pos:position pos:line="67" pos:column="26"/></name></expr>)<pos:position pos:line="67" pos:column="27"/></condition><then pos:line="67" pos:column="27">
      <block pos:line="68" pos:column="7">{
	<expr_stmt><expr><name><name pos:line="69" pos:column="9">stte<pos:position pos:line="69" pos:column="13"/></name><operator pos:line="69" pos:column="13">-&gt;<pos:position pos:line="69" pos:column="18"/></operator><name pos:line="69" pos:column="15">param_used<pos:position pos:line="69" pos:column="25"/></name></name> <operator pos:line="69" pos:column="26">=<pos:position pos:line="69" pos:column="27"/></operator> <literal type="number" pos:line="69" pos:column="28">0<pos:position pos:line="69" pos:column="29"/></literal></expr>;<pos:position pos:line="69" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="70" pos:column="9">stte<pos:position pos:line="70" pos:column="13"/></name><operator pos:line="70" pos:column="13">-&gt;<pos:position pos:line="70" pos:column="18"/></operator><name pos:line="70" pos:column="15">param<pos:position pos:line="70" pos:column="20"/></name><index pos:line="70" pos:column="20">[<expr><literal type="number" pos:line="70" pos:column="21">0<pos:position pos:line="70" pos:column="22"/></literal></expr>]<pos:position pos:line="70" pos:column="23"/></index></name> <operator pos:line="70" pos:column="24">=<pos:position pos:line="70" pos:column="25"/></operator> <operator pos:line="70" pos:column="26">(<pos:position pos:line="70" pos:column="27"/></operator><name pos:line="70" pos:column="27">wchar_t<pos:position pos:line="70" pos:column="34"/></name><operator pos:line="70" pos:column="34">)<pos:position pos:line="70" pos:column="35"/></operator> <literal type="char" pos:line="70" pos:column="36">'\0'<pos:position pos:line="70" pos:column="40"/></literal></expr>;<pos:position pos:line="70" pos:column="41"/></expr_stmt>
      }<pos:position pos:line="71" pos:column="8"/></block></then></if>
    }<pos:position pos:line="72" pos:column="6"/></block></then>
    <else pos:line="73" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="74" pos:column="7">stte<pos:position pos:line="74" pos:column="11"/></name><operator pos:line="74" pos:column="11">-&gt;<pos:position pos:line="74" pos:column="16"/></operator><name pos:line="74" pos:column="13">tag_level<pos:position pos:line="74" pos:column="22"/></name><index pos:line="74" pos:column="22">[<expr><name pos:line="74" pos:column="23">j<pos:position pos:line="74" pos:column="24"/></name></expr>]<pos:position pos:line="74" pos:column="25"/></index></name><operator pos:line="74" pos:column="25">++<pos:position pos:line="74" pos:column="27"/></operator></expr>;<pos:position pos:line="74" pos:column="28"/></expr_stmt></block></else></if>

    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><name pos:line="76" pos:column="9">j<pos:position pos:line="76" pos:column="10"/></name> <operator pos:line="76" pos:column="11">==<pos:position pos:line="76" pos:column="13"/></operator> <name pos:line="76" pos:column="14">RICH_EXCERPT<pos:position pos:line="76" pos:column="26"/></name></expr>)<pos:position pos:line="76" pos:column="27"/></condition><then pos:line="76" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="7">enriched_flush<pos:position pos:line="77" pos:column="21"/></name><argument_list pos:line="77" pos:column="21">(<argument><expr><name pos:line="77" pos:column="22">stte<pos:position pos:line="77" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="28">1<pos:position pos:line="77" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="31"/></expr_stmt></block></then></if>
  }<pos:position pos:line="78" pos:column="4"/></block></then></if>
}<pos:position pos:line="79" pos:column="2"/></block></function></unit>

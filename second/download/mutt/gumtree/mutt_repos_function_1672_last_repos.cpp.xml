<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1672_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">pop_open_connection<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">POP_DATA<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">pop_data<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">ret<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">unsigned<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">int<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">n<pos:position pos:line="4" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="19">size<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">buf<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><name pos:line="5" pos:column="12">LONG_STRING<pos:position pos:line="5" pos:column="23"/></name></expr>]<pos:position pos:line="5" pos:column="24"/></index></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">ret<pos:position pos:line="7" pos:column="6"/></name> <operator pos:line="7" pos:column="7">=<pos:position pos:line="7" pos:column="8"/></operator> <call><name pos:line="7" pos:column="9">pop_connect<pos:position pos:line="7" pos:column="20"/></name> <argument_list pos:line="7" pos:column="21">(<argument><expr><name pos:line="7" pos:column="22">pop_data<pos:position pos:line="7" pos:column="30"/></name></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">ret<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">&lt;<pos:position pos:line="8" pos:column="15"/></operator> <literal type="number" pos:line="8" pos:column="13">0<pos:position pos:line="8" pos:column="14"/></literal></expr>)<pos:position pos:line="8" pos:column="15"/></condition><then pos:line="8" pos:column="15">
  <block pos:line="9" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">mutt_sleep<pos:position pos:line="10" pos:column="15"/></name> <argument_list pos:line="10" pos:column="16">(<argument><expr><literal type="number" pos:line="10" pos:column="17">2<pos:position pos:line="10" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">ret<pos:position pos:line="11" pos:column="15"/></name></expr>;<pos:position pos:line="11" pos:column="16"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">ret<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <call><name pos:line="14" pos:column="9">pop_capabilities<pos:position pos:line="14" pos:column="25"/></name> <argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">pop_data<pos:position pos:line="14" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="37">0<pos:position pos:line="14" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">ret<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">==<pos:position pos:line="15" pos:column="13"/></operator> <operator pos:line="15" pos:column="14">-<pos:position pos:line="15" pos:column="15"/></operator><literal type="number" pos:line="15" pos:column="15">1<pos:position pos:line="15" pos:column="16"/></literal></expr>)<pos:position pos:line="15" pos:column="17"/></condition><then pos:line="15" pos:column="17">
    <block type="pseudo"><goto pos:line="16" pos:column="5">goto <name pos:line="16" pos:column="10">err_conn<pos:position pos:line="16" pos:column="18"/></name>;<pos:position pos:line="16" pos:column="19"/></goto></block></then></if>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">ret<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">==<pos:position pos:line="17" pos:column="13"/></operator> <operator pos:line="17" pos:column="14">-<pos:position pos:line="17" pos:column="15"/></operator><literal type="number" pos:line="17" pos:column="15">2<pos:position pos:line="17" pos:column="16"/></literal></expr>)<pos:position pos:line="17" pos:column="17"/></condition><then pos:line="17" pos:column="17">
  <block pos:line="18" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">mutt_sleep<pos:position pos:line="19" pos:column="15"/></name> <argument_list pos:line="19" pos:column="16">(<argument><expr><literal type="number" pos:line="19" pos:column="17">2<pos:position pos:line="19" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">-<pos:position pos:line="20" pos:column="13"/></operator><literal type="number" pos:line="20" pos:column="13">2<pos:position pos:line="20" pos:column="14"/></literal></expr>;<pos:position pos:line="20" pos:column="15"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

<cpp:if pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">if<pos:position pos:line="23" pos:column="4"/></cpp:directive> <expr><call><name pos:line="23" pos:column="5">defined<pos:position pos:line="23" pos:column="12"/></name><argument_list pos:line="23" pos:column="12">(<argument><expr><name pos:line="23" pos:column="13">USE_SSL<pos:position pos:line="23" pos:column="20"/></name></expr></argument>)<pos:position pos:line="23" pos:column="21"/></argument_list></call></expr></cpp:if>
  <comment type="block" pos:line="24" pos:column="3">/* Attempt STLS if available and desired. */</comment>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><operator pos:line="25" pos:column="7">!<pos:position pos:line="25" pos:column="8"/></operator><name><name pos:line="25" pos:column="8">pop_data<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">-&gt;<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="18">conn<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">ssf<pos:position pos:line="25" pos:column="27"/></name></name> <operator pos:line="25" pos:column="28">&amp;&amp;<pos:position pos:line="25" pos:column="38"/></operator> <operator pos:line="25" pos:column="31">(<pos:position pos:line="25" pos:column="32"/></operator><name><name pos:line="25" pos:column="32">pop_data<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">-&gt;<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="42">cmd_stls<pos:position pos:line="25" pos:column="50"/></name></name> <operator pos:line="25" pos:column="51">||<pos:position pos:line="25" pos:column="53"/></operator> <call><name pos:line="25" pos:column="54">option<pos:position pos:line="25" pos:column="60"/></name><argument_list pos:line="25" pos:column="60">(<argument><expr><name pos:line="25" pos:column="61">OPTSSLFORCETLS<pos:position pos:line="25" pos:column="75"/></name></expr></argument>)<pos:position pos:line="25" pos:column="76"/></argument_list></call><operator pos:line="25" pos:column="76">)<pos:position pos:line="25" pos:column="77"/></operator></expr>)<pos:position pos:line="25" pos:column="78"/></condition><then pos:line="25" pos:column="78">
  <block pos:line="26" pos:column="3">{
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><call><name pos:line="27" pos:column="9">option<pos:position pos:line="27" pos:column="15"/></name><argument_list pos:line="27" pos:column="15">(<argument><expr><name pos:line="27" pos:column="16">OPTSSLFORCETLS<pos:position pos:line="27" pos:column="30"/></name></expr></argument>)<pos:position pos:line="27" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="32"/></condition><then pos:line="27" pos:column="32">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="28" pos:column="7">pop_data<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">-&gt;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="17">use_stls<pos:position pos:line="28" pos:column="25"/></name></name> <operator pos:line="28" pos:column="26">=<pos:position pos:line="28" pos:column="27"/></operator> <literal type="number" pos:line="28" pos:column="28">2<pos:position pos:line="28" pos:column="29"/></literal></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt></block></then></if>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name><name pos:line="29" pos:column="9">pop_data<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">-&gt;<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="19">use_stls<pos:position pos:line="29" pos:column="27"/></name></name> <operator pos:line="29" pos:column="28">==<pos:position pos:line="29" pos:column="30"/></operator> <literal type="number" pos:line="29" pos:column="31">0<pos:position pos:line="29" pos:column="32"/></literal></expr>)<pos:position pos:line="29" pos:column="33"/></condition><then pos:line="29" pos:column="33">
    <block pos:line="30" pos:column="5">{
      <expr_stmt><expr><name pos:line="31" pos:column="7">ret<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">=<pos:position pos:line="31" pos:column="12"/></operator> <call><name pos:line="31" pos:column="13">query_quadoption<pos:position pos:line="31" pos:column="29"/></name> <argument_list pos:line="31" pos:column="30">(<argument><expr><name pos:line="31" pos:column="31">OPT_SSLSTARTTLS<pos:position pos:line="31" pos:column="46"/></name></expr></argument>,
	    <argument><expr><call><name pos:line="32" pos:column="13">_<pos:position pos:line="32" pos:column="14"/></name><argument_list pos:line="32" pos:column="14">(<argument><expr><literal type="string" pos:line="32" pos:column="15">"Secure connection with TLS?"<pos:position pos:line="32" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="47"/></expr_stmt>
      <if pos:line="33" pos:column="7">if <condition pos:line="33" pos:column="10">(<expr><name pos:line="33" pos:column="11">ret<pos:position pos:line="33" pos:column="14"/></name> <operator pos:line="33" pos:column="15">==<pos:position pos:line="33" pos:column="17"/></operator> <operator pos:line="33" pos:column="18">-<pos:position pos:line="33" pos:column="19"/></operator><literal type="number" pos:line="33" pos:column="19">1<pos:position pos:line="33" pos:column="20"/></literal></expr>)<pos:position pos:line="33" pos:column="21"/></condition><then pos:line="33" pos:column="21">
	<block type="pseudo"><return pos:line="34" pos:column="9">return <expr><operator pos:line="34" pos:column="16">-<pos:position pos:line="34" pos:column="17"/></operator><literal type="number" pos:line="34" pos:column="17">2<pos:position pos:line="34" pos:column="18"/></literal></expr>;<pos:position pos:line="34" pos:column="19"/></return></block></then></if>
      <expr_stmt><expr><name><name pos:line="35" pos:column="7">pop_data<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">-&gt;<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="17">use_stls<pos:position pos:line="35" pos:column="25"/></name></name> <operator pos:line="35" pos:column="26">=<pos:position pos:line="35" pos:column="27"/></operator> <literal type="number" pos:line="35" pos:column="28">1<pos:position pos:line="35" pos:column="29"/></literal></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt>
      <if pos:line="36" pos:column="7">if <condition pos:line="36" pos:column="10">(<expr><name pos:line="36" pos:column="11">ret<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">==<pos:position pos:line="36" pos:column="17"/></operator> <name pos:line="36" pos:column="18">MUTT_YES<pos:position pos:line="36" pos:column="26"/></name></expr>)<pos:position pos:line="36" pos:column="27"/></condition><then pos:line="36" pos:column="27">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="37" pos:column="9">pop_data<pos:position pos:line="37" pos:column="17"/></name><operator pos:line="37" pos:column="17">-&gt;<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="19">use_stls<pos:position pos:line="37" pos:column="27"/></name></name> <operator pos:line="37" pos:column="28">=<pos:position pos:line="37" pos:column="29"/></operator> <literal type="number" pos:line="37" pos:column="30">2<pos:position pos:line="37" pos:column="31"/></literal></expr>;<pos:position pos:line="37" pos:column="32"/></expr_stmt></block></then></if>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name><name pos:line="39" pos:column="9">pop_data<pos:position pos:line="39" pos:column="17"/></name><operator pos:line="39" pos:column="17">-&gt;<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="19">use_stls<pos:position pos:line="39" pos:column="27"/></name></name> <operator pos:line="39" pos:column="28">==<pos:position pos:line="39" pos:column="30"/></operator> <literal type="number" pos:line="39" pos:column="31">2<pos:position pos:line="39" pos:column="32"/></literal></expr>)<pos:position pos:line="39" pos:column="33"/></condition><then pos:line="39" pos:column="33">
    <block pos:line="40" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">strfcpy<pos:position pos:line="41" pos:column="14"/></name> <argument_list pos:line="41" pos:column="15">(<argument><expr><name pos:line="41" pos:column="16">buf<pos:position pos:line="41" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="21">"STLS\r\n"<pos:position pos:line="41" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="33">sizeof <argument_list pos:line="41" pos:column="40">(<argument><expr><name pos:line="41" pos:column="41">buf<pos:position pos:line="41" pos:column="44"/></name></expr></argument>)<pos:position pos:line="41" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><name pos:line="42" pos:column="7">ret<pos:position pos:line="42" pos:column="10"/></name> <operator pos:line="42" pos:column="11">=<pos:position pos:line="42" pos:column="12"/></operator> <call><name pos:line="42" pos:column="13">pop_query<pos:position pos:line="42" pos:column="22"/></name> <argument_list pos:line="42" pos:column="23">(<argument><expr><name pos:line="42" pos:column="24">pop_data<pos:position pos:line="42" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="34">buf<pos:position pos:line="42" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="39">sizeof <argument_list pos:line="42" pos:column="46">(<argument><expr><name pos:line="42" pos:column="47">buf<pos:position pos:line="42" pos:column="50"/></name></expr></argument>)<pos:position pos:line="42" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="53"/></expr_stmt>
      <if pos:line="43" pos:column="7">if <condition pos:line="43" pos:column="10">(<expr><name pos:line="43" pos:column="11">ret<pos:position pos:line="43" pos:column="14"/></name> <operator pos:line="43" pos:column="15">==<pos:position pos:line="43" pos:column="17"/></operator> <operator pos:line="43" pos:column="18">-<pos:position pos:line="43" pos:column="19"/></operator><literal type="number" pos:line="43" pos:column="19">1<pos:position pos:line="43" pos:column="20"/></literal></expr>)<pos:position pos:line="43" pos:column="21"/></condition><then pos:line="43" pos:column="21">
	<block type="pseudo"><goto pos:line="44" pos:column="9">goto <name pos:line="44" pos:column="14">err_conn<pos:position pos:line="44" pos:column="22"/></name>;<pos:position pos:line="44" pos:column="23"/></goto></block></then></if>
      <if pos:line="45" pos:column="7">if <condition pos:line="45" pos:column="10">(<expr><name pos:line="45" pos:column="11">ret<pos:position pos:line="45" pos:column="14"/></name> <operator pos:line="45" pos:column="15">!=<pos:position pos:line="45" pos:column="17"/></operator> <literal type="number" pos:line="45" pos:column="18">0<pos:position pos:line="45" pos:column="19"/></literal></expr>)<pos:position pos:line="45" pos:column="20"/></condition><then pos:line="45" pos:column="20">
      <block pos:line="46" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">mutt_error<pos:position pos:line="47" pos:column="19"/></name> <argument_list pos:line="47" pos:column="20">(<argument><expr><literal type="string" pos:line="47" pos:column="21">"%s"<pos:position pos:line="47" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="27">pop_data<pos:position pos:line="47" pos:column="35"/></name><operator pos:line="47" pos:column="35">-&gt;<pos:position pos:line="47" pos:column="40"/></operator><name pos:line="47" pos:column="37">err_msg<pos:position pos:line="47" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">mutt_sleep<pos:position pos:line="48" pos:column="19"/></name> <argument_list pos:line="48" pos:column="20">(<argument><expr><literal type="number" pos:line="48" pos:column="21">2<pos:position pos:line="48" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="24"/></expr_stmt>
      }<pos:position pos:line="49" pos:column="8"/></block></then>
      <elseif pos:line="50" pos:column="7">else <if pos:line="50" pos:column="12">if <condition pos:line="50" pos:column="15">(<expr><call><name pos:line="50" pos:column="16">mutt_ssl_starttls<pos:position pos:line="50" pos:column="33"/></name> <argument_list pos:line="50" pos:column="34">(<argument><expr><name><name pos:line="50" pos:column="35">pop_data<pos:position pos:line="50" pos:column="43"/></name><operator pos:line="50" pos:column="43">-&gt;<pos:position pos:line="50" pos:column="48"/></operator><name pos:line="50" pos:column="45">conn<pos:position pos:line="50" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="51"/></condition><then pos:line="50" pos:column="51">
      <block pos:line="51" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="52" pos:column="9">mutt_error<pos:position pos:line="52" pos:column="19"/></name> <argument_list pos:line="52" pos:column="20">(<argument><expr><call><name pos:line="52" pos:column="21">_<pos:position pos:line="52" pos:column="22"/></name><argument_list pos:line="52" pos:column="22">(<argument><expr><literal type="string" pos:line="52" pos:column="23">"Could not negotiate TLS connection"<pos:position pos:line="52" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="53" pos:column="9">mutt_sleep<pos:position pos:line="53" pos:column="19"/></name> <argument_list pos:line="53" pos:column="20">(<argument><expr><literal type="number" pos:line="53" pos:column="21">2<pos:position pos:line="53" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="24"/></expr_stmt>
	<return pos:line="54" pos:column="9">return <expr><operator pos:line="54" pos:column="16">-<pos:position pos:line="54" pos:column="17"/></operator><literal type="number" pos:line="54" pos:column="17">2<pos:position pos:line="54" pos:column="18"/></literal></expr>;<pos:position pos:line="54" pos:column="19"/></return>
      }<pos:position pos:line="55" pos:column="8"/></block></then></if></elseif>
      <else pos:line="56" pos:column="7">else
      <block pos:line="57" pos:column="7">{
	<comment type="block" pos:line="58" pos:column="9">/* recheck capabilities after STLS completes */</comment>
	<expr_stmt><expr><name pos:line="59" pos:column="9">ret<pos:position pos:line="59" pos:column="12"/></name> <operator pos:line="59" pos:column="13">=<pos:position pos:line="59" pos:column="14"/></operator> <call><name pos:line="59" pos:column="15">pop_capabilities<pos:position pos:line="59" pos:column="31"/></name> <argument_list pos:line="59" pos:column="32">(<argument><expr><name pos:line="59" pos:column="33">pop_data<pos:position pos:line="59" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="43">1<pos:position pos:line="59" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="46"/></expr_stmt>
	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name pos:line="60" pos:column="13">ret<pos:position pos:line="60" pos:column="16"/></name> <operator pos:line="60" pos:column="17">==<pos:position pos:line="60" pos:column="19"/></operator> <operator pos:line="60" pos:column="20">-<pos:position pos:line="60" pos:column="21"/></operator><literal type="number" pos:line="60" pos:column="21">1<pos:position pos:line="60" pos:column="22"/></literal></expr>)<pos:position pos:line="60" pos:column="23"/></condition><then pos:line="60" pos:column="23">
	  <block type="pseudo"><goto pos:line="61" pos:column="11">goto <name pos:line="61" pos:column="16">err_conn<pos:position pos:line="61" pos:column="24"/></name>;<pos:position pos:line="61" pos:column="25"/></goto></block></then></if>
	<if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><name pos:line="62" pos:column="13">ret<pos:position pos:line="62" pos:column="16"/></name> <operator pos:line="62" pos:column="17">==<pos:position pos:line="62" pos:column="19"/></operator> <operator pos:line="62" pos:column="20">-<pos:position pos:line="62" pos:column="21"/></operator><literal type="number" pos:line="62" pos:column="21">2<pos:position pos:line="62" pos:column="22"/></literal></expr>)<pos:position pos:line="62" pos:column="23"/></condition><then pos:line="62" pos:column="23">
	<block pos:line="63" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="64" pos:column="11">mutt_sleep<pos:position pos:line="64" pos:column="21"/></name> <argument_list pos:line="64" pos:column="22">(<argument><expr><literal type="number" pos:line="64" pos:column="23">2<pos:position pos:line="64" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="26"/></expr_stmt>
	  <return pos:line="65" pos:column="11">return <expr><operator pos:line="65" pos:column="18">-<pos:position pos:line="65" pos:column="19"/></operator><literal type="number" pos:line="65" pos:column="19">2<pos:position pos:line="65" pos:column="20"/></literal></expr>;<pos:position pos:line="65" pos:column="21"/></return>
	}<pos:position pos:line="66" pos:column="10"/></block></then></if>
      }<pos:position pos:line="67" pos:column="8"/></block></else></if>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>
  }<pos:position pos:line="69" pos:column="4"/></block></then></if>

  <if pos:line="71" pos:column="3">if <condition pos:line="71" pos:column="6">(<expr><call><name pos:line="71" pos:column="7">option<pos:position pos:line="71" pos:column="13"/></name><argument_list pos:line="71" pos:column="13">(<argument><expr><name pos:line="71" pos:column="14">OPTSSLFORCETLS<pos:position pos:line="71" pos:column="28"/></name></expr></argument>)<pos:position pos:line="71" pos:column="29"/></argument_list></call> <operator pos:line="71" pos:column="30">&amp;&amp;<pos:position pos:line="71" pos:column="40"/></operator> <operator pos:line="71" pos:column="33">!<pos:position pos:line="71" pos:column="34"/></operator><name><name pos:line="71" pos:column="34">pop_data<pos:position pos:line="71" pos:column="42"/></name><operator pos:line="71" pos:column="42">-&gt;<pos:position pos:line="71" pos:column="47"/></operator><name pos:line="71" pos:column="44">conn<pos:position pos:line="71" pos:column="48"/></name><operator pos:line="71" pos:column="48">-&gt;<pos:position pos:line="71" pos:column="53"/></operator><name pos:line="71" pos:column="50">ssf<pos:position pos:line="71" pos:column="53"/></name></name></expr>)<pos:position pos:line="71" pos:column="54"/></condition><then pos:line="71" pos:column="54">
  <block pos:line="72" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="73" pos:column="5">mutt_error<pos:position pos:line="73" pos:column="15"/></name></type> <name pos:line="73" pos:column="16">_<pos:position pos:line="73" pos:column="17"/></name><argument_list pos:line="73" pos:column="17">(<argument><expr><literal type="string" pos:line="73" pos:column="18">"Encrypted connection unavailable"<pos:position pos:line="73" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="53"/></argument_list></decl>;<pos:position pos:line="73" pos:column="54"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">mutt_sleep<pos:position pos:line="74" pos:column="15"/></name> <argument_list pos:line="74" pos:column="16">(<argument><expr><literal type="number" pos:line="74" pos:column="17">1<pos:position pos:line="74" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="20"/></expr_stmt>
    <return pos:line="75" pos:column="5">return <expr><operator pos:line="75" pos:column="12">-<pos:position pos:line="75" pos:column="13"/></operator><literal type="number" pos:line="75" pos:column="13">2<pos:position pos:line="75" pos:column="14"/></literal></expr>;<pos:position pos:line="75" pos:column="15"/></return>
  }<pos:position pos:line="76" pos:column="4"/></block></then></if>
<cpp:endif pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">endif<pos:position pos:line="77" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><name pos:line="79" pos:column="3">ret<pos:position pos:line="79" pos:column="6"/></name> <operator pos:line="79" pos:column="7">=<pos:position pos:line="79" pos:column="8"/></operator> <call><name pos:line="79" pos:column="9">pop_authenticate<pos:position pos:line="79" pos:column="25"/></name> <argument_list pos:line="79" pos:column="26">(<argument><expr><name pos:line="79" pos:column="27">pop_data<pos:position pos:line="79" pos:column="35"/></name></expr></argument>)<pos:position pos:line="79" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="37"/></expr_stmt>
  <if pos:line="80" pos:column="3">if <condition pos:line="80" pos:column="6">(<expr><name pos:line="80" pos:column="7">ret<pos:position pos:line="80" pos:column="10"/></name> <operator pos:line="80" pos:column="11">==<pos:position pos:line="80" pos:column="13"/></operator> <operator pos:line="80" pos:column="14">-<pos:position pos:line="80" pos:column="15"/></operator><literal type="number" pos:line="80" pos:column="15">1<pos:position pos:line="80" pos:column="16"/></literal></expr>)<pos:position pos:line="80" pos:column="17"/></condition><then pos:line="80" pos:column="17">
    <block type="pseudo"><goto pos:line="81" pos:column="5">goto <name pos:line="81" pos:column="10">err_conn<pos:position pos:line="81" pos:column="18"/></name>;<pos:position pos:line="81" pos:column="19"/></goto></block></then></if>
  <if pos:line="82" pos:column="3">if <condition pos:line="82" pos:column="6">(<expr><name pos:line="82" pos:column="7">ret<pos:position pos:line="82" pos:column="10"/></name> <operator pos:line="82" pos:column="11">==<pos:position pos:line="82" pos:column="13"/></operator> <operator pos:line="82" pos:column="14">-<pos:position pos:line="82" pos:column="15"/></operator><literal type="number" pos:line="82" pos:column="15">3<pos:position pos:line="82" pos:column="16"/></literal></expr>)<pos:position pos:line="82" pos:column="17"/></condition><then pos:line="82" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="83" pos:column="5">mutt_clear_error<pos:position pos:line="83" pos:column="21"/></name> <argument_list pos:line="83" pos:column="22">()<pos:position pos:line="83" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="25"/></expr_stmt></block></then></if>
  <if pos:line="84" pos:column="3">if <condition pos:line="84" pos:column="6">(<expr><name pos:line="84" pos:column="7">ret<pos:position pos:line="84" pos:column="10"/></name> <operator pos:line="84" pos:column="11">!=<pos:position pos:line="84" pos:column="13"/></operator> <literal type="number" pos:line="84" pos:column="14">0<pos:position pos:line="84" pos:column="15"/></literal></expr>)<pos:position pos:line="84" pos:column="16"/></condition><then pos:line="84" pos:column="16">
    <block type="pseudo"><return pos:line="85" pos:column="5">return <expr><name pos:line="85" pos:column="12">ret<pos:position pos:line="85" pos:column="15"/></name></expr>;<pos:position pos:line="85" pos:column="16"/></return></block></then></if>

  <comment type="block" pos:line="87" pos:column="3">/* recheck capabilities after authentication */</comment>
  <expr_stmt><expr><name pos:line="88" pos:column="3">ret<pos:position pos:line="88" pos:column="6"/></name> <operator pos:line="88" pos:column="7">=<pos:position pos:line="88" pos:column="8"/></operator> <call><name pos:line="88" pos:column="9">pop_capabilities<pos:position pos:line="88" pos:column="25"/></name> <argument_list pos:line="88" pos:column="26">(<argument><expr><name pos:line="88" pos:column="27">pop_data<pos:position pos:line="88" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="88" pos:column="37">2<pos:position pos:line="88" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="40"/></expr_stmt>
  <if pos:line="89" pos:column="3">if <condition pos:line="89" pos:column="6">(<expr><name pos:line="89" pos:column="7">ret<pos:position pos:line="89" pos:column="10"/></name> <operator pos:line="89" pos:column="11">==<pos:position pos:line="89" pos:column="13"/></operator> <operator pos:line="89" pos:column="14">-<pos:position pos:line="89" pos:column="15"/></operator><literal type="number" pos:line="89" pos:column="15">1<pos:position pos:line="89" pos:column="16"/></literal></expr>)<pos:position pos:line="89" pos:column="17"/></condition><then pos:line="89" pos:column="17">
    <block type="pseudo"><goto pos:line="90" pos:column="5">goto <name pos:line="90" pos:column="10">err_conn<pos:position pos:line="90" pos:column="18"/></name>;<pos:position pos:line="90" pos:column="19"/></goto></block></then></if>
  <if pos:line="91" pos:column="3">if <condition pos:line="91" pos:column="6">(<expr><name pos:line="91" pos:column="7">ret<pos:position pos:line="91" pos:column="10"/></name> <operator pos:line="91" pos:column="11">==<pos:position pos:line="91" pos:column="13"/></operator> <operator pos:line="91" pos:column="14">-<pos:position pos:line="91" pos:column="15"/></operator><literal type="number" pos:line="91" pos:column="15">2<pos:position pos:line="91" pos:column="16"/></literal></expr>)<pos:position pos:line="91" pos:column="17"/></condition><then pos:line="91" pos:column="17">
  <block pos:line="92" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="93" pos:column="5">mutt_sleep<pos:position pos:line="93" pos:column="15"/></name> <argument_list pos:line="93" pos:column="16">(<argument><expr><literal type="number" pos:line="93" pos:column="17">2<pos:position pos:line="93" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="20"/></expr_stmt>
    <return pos:line="94" pos:column="5">return <expr><operator pos:line="94" pos:column="12">-<pos:position pos:line="94" pos:column="13"/></operator><literal type="number" pos:line="94" pos:column="13">2<pos:position pos:line="94" pos:column="14"/></literal></expr>;<pos:position pos:line="94" pos:column="15"/></return>
  }<pos:position pos:line="95" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="97" pos:column="3">/* get total size of mailbox */</comment>
  <expr_stmt><expr><call><name pos:line="98" pos:column="3">strfcpy<pos:position pos:line="98" pos:column="10"/></name> <argument_list pos:line="98" pos:column="11">(<argument><expr><name pos:line="98" pos:column="12">buf<pos:position pos:line="98" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="17">"STAT\r\n"<pos:position pos:line="98" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="98" pos:column="29">sizeof <argument_list pos:line="98" pos:column="36">(<argument><expr><name pos:line="98" pos:column="37">buf<pos:position pos:line="98" pos:column="40"/></name></expr></argument>)<pos:position pos:line="98" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="98" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name pos:line="99" pos:column="3">ret<pos:position pos:line="99" pos:column="6"/></name> <operator pos:line="99" pos:column="7">=<pos:position pos:line="99" pos:column="8"/></operator> <call><name pos:line="99" pos:column="9">pop_query<pos:position pos:line="99" pos:column="18"/></name> <argument_list pos:line="99" pos:column="19">(<argument><expr><name pos:line="99" pos:column="20">pop_data<pos:position pos:line="99" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="30">buf<pos:position pos:line="99" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="99" pos:column="35">sizeof <argument_list pos:line="99" pos:column="42">(<argument><expr><name pos:line="99" pos:column="43">buf<pos:position pos:line="99" pos:column="46"/></name></expr></argument>)<pos:position pos:line="99" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="99" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="49"/></expr_stmt>
  <if pos:line="100" pos:column="3">if <condition pos:line="100" pos:column="6">(<expr><name pos:line="100" pos:column="7">ret<pos:position pos:line="100" pos:column="10"/></name> <operator pos:line="100" pos:column="11">==<pos:position pos:line="100" pos:column="13"/></operator> <operator pos:line="100" pos:column="14">-<pos:position pos:line="100" pos:column="15"/></operator><literal type="number" pos:line="100" pos:column="15">1<pos:position pos:line="100" pos:column="16"/></literal></expr>)<pos:position pos:line="100" pos:column="17"/></condition><then pos:line="100" pos:column="17">
    <block type="pseudo"><goto pos:line="101" pos:column="5">goto <name pos:line="101" pos:column="10">err_conn<pos:position pos:line="101" pos:column="18"/></name>;<pos:position pos:line="101" pos:column="19"/></goto></block></then></if>
  <if pos:line="102" pos:column="3">if <condition pos:line="102" pos:column="6">(<expr><name pos:line="102" pos:column="7">ret<pos:position pos:line="102" pos:column="10"/></name> <operator pos:line="102" pos:column="11">==<pos:position pos:line="102" pos:column="13"/></operator> <operator pos:line="102" pos:column="14">-<pos:position pos:line="102" pos:column="15"/></operator><literal type="number" pos:line="102" pos:column="15">2<pos:position pos:line="102" pos:column="16"/></literal></expr>)<pos:position pos:line="102" pos:column="17"/></condition><then pos:line="102" pos:column="17">
  <block pos:line="103" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="104" pos:column="5">mutt_error<pos:position pos:line="104" pos:column="15"/></name> <argument_list pos:line="104" pos:column="16">(<argument><expr><literal type="string" pos:line="104" pos:column="17">"%s"<pos:position pos:line="104" pos:column="21"/></literal></expr></argument>, <argument><expr><name><name pos:line="104" pos:column="23">pop_data<pos:position pos:line="104" pos:column="31"/></name><operator pos:line="104" pos:column="31">-&gt;<pos:position pos:line="104" pos:column="36"/></operator><name pos:line="104" pos:column="33">err_msg<pos:position pos:line="104" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="105" pos:column="5">mutt_sleep<pos:position pos:line="105" pos:column="15"/></name> <argument_list pos:line="105" pos:column="16">(<argument><expr><literal type="number" pos:line="105" pos:column="17">2<pos:position pos:line="105" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="20"/></expr_stmt>
    <return pos:line="106" pos:column="5">return <expr><name pos:line="106" pos:column="12">ret<pos:position pos:line="106" pos:column="15"/></name></expr>;<pos:position pos:line="106" pos:column="16"/></return>
  }<pos:position pos:line="107" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="109" pos:column="3">sscanf<pos:position pos:line="109" pos:column="9"/></name> <argument_list pos:line="109" pos:column="10">(<argument><expr><name pos:line="109" pos:column="11">buf<pos:position pos:line="109" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="16">"+OK %u %u"<pos:position pos:line="109" pos:column="27"/></literal></expr></argument>, <argument><expr><operator pos:line="109" pos:column="29">&amp;<pos:position pos:line="109" pos:column="34"/></operator><name pos:line="109" pos:column="30">n<pos:position pos:line="109" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="109" pos:column="33">&amp;<pos:position pos:line="109" pos:column="38"/></operator><name pos:line="109" pos:column="34">size<pos:position pos:line="109" pos:column="38"/></name></expr></argument>)<pos:position pos:line="109" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="110" pos:column="3">pop_data<pos:position pos:line="110" pos:column="11"/></name><operator pos:line="110" pos:column="11">-&gt;<pos:position pos:line="110" pos:column="16"/></operator><name pos:line="110" pos:column="13">size<pos:position pos:line="110" pos:column="17"/></name></name> <operator pos:line="110" pos:column="18">=<pos:position pos:line="110" pos:column="19"/></operator> <name pos:line="110" pos:column="20">size<pos:position pos:line="110" pos:column="24"/></name></expr>;<pos:position pos:line="110" pos:column="25"/></expr_stmt>
  <return pos:line="111" pos:column="3">return <expr><literal type="number" pos:line="111" pos:column="10">0<pos:position pos:line="111" pos:column="11"/></literal></expr>;<pos:position pos:line="111" pos:column="12"/></return>

<label><name pos:line="113" pos:column="1">err_conn<pos:position pos:line="113" pos:column="9"/></name>:<pos:position pos:line="113" pos:column="10"/></label>
  <expr_stmt><expr><name><name pos:line="114" pos:column="3">pop_data<pos:position pos:line="114" pos:column="11"/></name><operator pos:line="114" pos:column="11">-&gt;<pos:position pos:line="114" pos:column="16"/></operator><name pos:line="114" pos:column="13">status<pos:position pos:line="114" pos:column="19"/></name></name> <operator pos:line="114" pos:column="20">=<pos:position pos:line="114" pos:column="21"/></operator> <name pos:line="114" pos:column="22">POP_DISCONNECTED<pos:position pos:line="114" pos:column="38"/></name></expr>;<pos:position pos:line="114" pos:column="39"/></expr_stmt>
  <decl_stmt><decl><type><name pos:line="115" pos:column="3">mutt_error<pos:position pos:line="115" pos:column="13"/></name></type> <name pos:line="115" pos:column="14">_<pos:position pos:line="115" pos:column="15"/></name><argument_list pos:line="115" pos:column="15">(<argument><expr><literal type="string" pos:line="115" pos:column="16">"Server closed connection!"<pos:position pos:line="115" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="44"/></argument_list></decl>;<pos:position pos:line="115" pos:column="45"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="116" pos:column="3">mutt_sleep<pos:position pos:line="116" pos:column="13"/></name> <argument_list pos:line="116" pos:column="14">(<argument><expr><literal type="number" pos:line="116" pos:column="15">2<pos:position pos:line="116" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="18"/></expr_stmt>
  <return pos:line="117" pos:column="3">return <expr><operator pos:line="117" pos:column="10">-<pos:position pos:line="117" pos:column="11"/></operator><literal type="number" pos:line="117" pos:column="11">1<pos:position pos:line="117" pos:column="12"/></literal></expr>;<pos:position pos:line="117" pos:column="13"/></return>
}<pos:position pos:line="118" pos:column="2"/></block></function></unit>

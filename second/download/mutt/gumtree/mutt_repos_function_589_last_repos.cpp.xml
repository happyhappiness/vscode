<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_589_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_query_complete<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">buf<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">size_t<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">buflen<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">QUERY<pos:position pos:line="3" pos:column="8"/></name> <modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">results<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><name pos:line="3" pos:column="20">NULL<pos:position pos:line="3" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">ADDRESS<pos:position pos:line="4" pos:column="10"/></name> <modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">tmpa<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">!<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">QueryCmd<pos:position pos:line="6" pos:column="16"/></name></expr>)<pos:position pos:line="6" pos:column="17"/></condition><then pos:line="6" pos:column="17">
  <block pos:line="7" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">mutt_error<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">_<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><literal type="string" pos:line="8" pos:column="18">"Query command not defined."<pos:position pos:line="8" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></decl>;<pos:position pos:line="8" pos:column="48"/></decl_stmt>
    <return pos:line="9" pos:column="5">return <expr><literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="12" pos:column="3">results<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <call><name pos:line="12" pos:column="13">run_query<pos:position pos:line="12" pos:column="22"/></name> <argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">buf<pos:position pos:line="12" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="29">1<pos:position pos:line="12" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">results<pos:position pos:line="13" pos:column="14"/></name></expr>)<pos:position pos:line="13" pos:column="15"/></condition><then pos:line="13" pos:column="15">
  <block pos:line="14" pos:column="3">{
    <comment type="block" pos:line="15" pos:column="5">/* only one response? */</comment>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">results<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">next<pos:position pos:line="16" pos:column="22"/></name></name> <operator pos:line="16" pos:column="23">==<pos:position pos:line="16" pos:column="25"/></operator> <name pos:line="16" pos:column="26">NULL<pos:position pos:line="16" pos:column="30"/></name></expr>)<pos:position pos:line="16" pos:column="31"/></condition><then pos:line="16" pos:column="31">
    <block pos:line="17" pos:column="5">{
      <expr_stmt><expr><name pos:line="18" pos:column="7">tmpa<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">result_to_addr<pos:position pos:line="18" pos:column="28"/></name> <argument_list pos:line="18" pos:column="29">(<argument><expr><name pos:line="18" pos:column="30">results<pos:position pos:line="18" pos:column="37"/></name></expr></argument>)<pos:position pos:line="18" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">mutt_addrlist_to_local<pos:position pos:line="19" pos:column="29"/></name> <argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">tmpa<pos:position pos:line="19" pos:column="35"/></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="20" pos:column="7">buf<pos:position pos:line="20" pos:column="10"/></name><index pos:line="20" pos:column="10">[<expr><literal type="number" pos:line="20" pos:column="11">0<pos:position pos:line="20" pos:column="12"/></literal></expr>]<pos:position pos:line="20" pos:column="13"/></index></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <literal type="char" pos:line="20" pos:column="16">'\0'<pos:position pos:line="20" pos:column="20"/></literal></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">rfc822_write_address<pos:position pos:line="21" pos:column="27"/></name> <argument_list pos:line="21" pos:column="28">(<argument><expr><name pos:line="21" pos:column="29">buf<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="34">buflen<pos:position pos:line="21" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="42">tmpa<pos:position pos:line="21" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="48">0<pos:position pos:line="21" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">rfc822_free_address<pos:position pos:line="22" pos:column="26"/></name> <argument_list pos:line="22" pos:column="27">(<argument><expr><operator pos:line="22" pos:column="28">&amp;<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="29">tmpa<pos:position pos:line="22" pos:column="33"/></name></expr></argument>)<pos:position pos:line="22" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">free_query<pos:position pos:line="23" pos:column="17"/></name> <argument_list pos:line="23" pos:column="18">(<argument><expr><operator pos:line="23" pos:column="19">&amp;<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="20">results<pos:position pos:line="23" pos:column="27"/></name></expr></argument>)<pos:position pos:line="23" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">mutt_clear_error<pos:position pos:line="24" pos:column="23"/></name> <argument_list pos:line="24" pos:column="24">()<pos:position pos:line="24" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>
      <return pos:line="25" pos:column="7">return <expr><operator pos:line="25" pos:column="14">(<pos:position pos:line="25" pos:column="15"/></operator><literal type="number" pos:line="25" pos:column="15">0<pos:position pos:line="25" pos:column="16"/></literal><operator pos:line="25" pos:column="16">)<pos:position pos:line="25" pos:column="17"/></operator></expr>;<pos:position pos:line="25" pos:column="18"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="27" pos:column="5">/* multiple results, choose from query menu */</comment>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">query_menu<pos:position pos:line="28" pos:column="15"/></name> <argument_list pos:line="28" pos:column="16">(<argument><expr><name pos:line="28" pos:column="17">buf<pos:position pos:line="28" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="22">buflen<pos:position pos:line="28" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="30">results<pos:position pos:line="28" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="39">1<pos:position pos:line="28" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>
  <return pos:line="30" pos:column="3">return <expr><operator pos:line="30" pos:column="10">(<pos:position pos:line="30" pos:column="11"/></operator><literal type="number" pos:line="30" pos:column="11">0<pos:position pos:line="30" pos:column="12"/></literal><operator pos:line="30" pos:column="12">)<pos:position pos:line="30" pos:column="13"/></operator></expr>;<pos:position pos:line="30" pos:column="14"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_function_161.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mx_commit_message<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">MESSAGE<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">msg<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">CONTEXT<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">ctx<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">r<pos:position pos:line="3" pos:column="8"/></name> <init pos:line="3" pos:column="9">= <expr><literal type="number" pos:line="3" pos:column="11">0<pos:position pos:line="3" pos:column="12"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">!<pos:position pos:line="5" pos:column="8"/></operator><operator pos:line="5" pos:column="8">(<pos:position pos:line="5" pos:column="9"/></operator><name><name pos:line="5" pos:column="9">msg<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">-&gt;<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="14">write<pos:position pos:line="5" pos:column="19"/></name></name> <operator pos:line="5" pos:column="20">&amp;&amp;<pos:position pos:line="5" pos:column="30"/></operator> <name><name pos:line="5" pos:column="23">ctx<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">-&gt;<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="28">append<pos:position pos:line="5" pos:column="34"/></name></name><operator pos:line="5" pos:column="34">)<pos:position pos:line="5" pos:column="35"/></operator></expr>)<pos:position pos:line="5" pos:column="36"/></condition><then pos:line="5" pos:column="36">
  <block pos:line="6" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">dprint<pos:position pos:line="7" pos:column="11"/></name> <argument_list pos:line="7" pos:column="12">(<argument><expr><literal type="number" pos:line="7" pos:column="13">1<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="16">(<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">debugfile<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">,<pos:position pos:line="7" pos:column="27"/></operator> <literal type="string" pos:line="7" pos:column="28">"mx_commit_message(): msg-&gt;write = %d, ctx-&gt;append = %d\n"<pos:position pos:line="7" pos:column="92"/></literal><operator pos:line="7" pos:column="86">,<pos:position pos:line="7" pos:column="87"/></operator>
		<name><name pos:line="8" pos:column="17">msg<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">-&gt;<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="22">write<pos:position pos:line="8" pos:column="27"/></name></name><operator pos:line="8" pos:column="27">,<pos:position pos:line="8" pos:column="28"/></operator> <name><name pos:line="8" pos:column="29">ctx<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">append<pos:position pos:line="8" pos:column="40"/></name></name><operator pos:line="8" pos:column="40">)<pos:position pos:line="8" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="43"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">-<pos:position pos:line="9" pos:column="13"/></operator><literal type="number" pos:line="9" pos:column="13">1<pos:position pos:line="9" pos:column="14"/></literal></expr>;<pos:position pos:line="9" pos:column="15"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <switch pos:line="12" pos:column="3">switch <condition pos:line="12" pos:column="10">(<expr><name><name pos:line="12" pos:column="11">msg<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">magic<pos:position pos:line="12" pos:column="21"/></name></name></expr>)<pos:position pos:line="12" pos:column="22"/></condition>
  <block pos:line="13" pos:column="3">{
    <case pos:line="14" pos:column="5">case <expr><name pos:line="14" pos:column="10">M_MMDF<pos:position pos:line="14" pos:column="16"/></name></expr>:<pos:position pos:line="14" pos:column="17"/></case>
    <block pos:line="15" pos:column="5">{
      <if pos:line="16" pos:column="7">if <condition pos:line="16" pos:column="10">(<expr><call><name pos:line="16" pos:column="11">fputs<pos:position pos:line="16" pos:column="16"/></name> <argument_list pos:line="16" pos:column="17">(<argument><expr><name pos:line="16" pos:column="18">MMDF_SEP<pos:position pos:line="16" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="28">msg<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">-&gt;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="33">fp<pos:position pos:line="16" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call> <operator pos:line="16" pos:column="37">==<pos:position pos:line="16" pos:column="39"/></operator> <name pos:line="16" pos:column="40">EOF<pos:position pos:line="16" pos:column="43"/></name></expr>)<pos:position pos:line="16" pos:column="44"/></condition><then pos:line="16" pos:column="44">
	<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="9">r<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <operator pos:line="17" pos:column="13">-<pos:position pos:line="17" pos:column="14"/></operator><literal type="number" pos:line="17" pos:column="14">1<pos:position pos:line="17" pos:column="15"/></literal></expr>;<pos:position pos:line="17" pos:column="16"/></expr_stmt></block></then></if>
      <break pos:line="18" pos:column="7">break;<pos:position pos:line="18" pos:column="13"/></break>
    }<pos:position pos:line="19" pos:column="6"/></block>
    
    <case pos:line="21" pos:column="5">case <expr><name pos:line="21" pos:column="10">M_MBOX<pos:position pos:line="21" pos:column="16"/></name></expr>:<pos:position pos:line="21" pos:column="17"/></case>
    <block pos:line="22" pos:column="5">{
      <if pos:line="23" pos:column="7">if <condition pos:line="23" pos:column="10">(<expr><call><name pos:line="23" pos:column="11">fputc<pos:position pos:line="23" pos:column="16"/></name> <argument_list pos:line="23" pos:column="17">(<argument><expr><literal type="char" pos:line="23" pos:column="18">'\n'<pos:position pos:line="23" pos:column="22"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="24">msg<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">-&gt;<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="29">fp<pos:position pos:line="23" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="32"/></argument_list></call> <operator pos:line="23" pos:column="33">==<pos:position pos:line="23" pos:column="35"/></operator> <name pos:line="23" pos:column="36">EOF<pos:position pos:line="23" pos:column="39"/></name></expr>)<pos:position pos:line="23" pos:column="40"/></condition><then pos:line="23" pos:column="40">
	<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="9">r<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator> <operator pos:line="24" pos:column="13">-<pos:position pos:line="24" pos:column="14"/></operator><literal type="number" pos:line="24" pos:column="14">1<pos:position pos:line="24" pos:column="15"/></literal></expr>;<pos:position pos:line="24" pos:column="16"/></expr_stmt></block></then></if>
      <break pos:line="25" pos:column="7">break;<pos:position pos:line="25" pos:column="13"/></break>
    }<pos:position pos:line="26" pos:column="6"/></block>

<cpp:ifdef pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">ifdef<pos:position pos:line="28" pos:column="7"/></cpp:directive> <name pos:line="28" pos:column="8">USE_IMAP<pos:position pos:line="28" pos:column="16"/></name></cpp:ifdef>
    <case pos:line="29" pos:column="5">case <expr><name pos:line="29" pos:column="10">M_IMAP<pos:position pos:line="29" pos:column="16"/></name></expr>:<pos:position pos:line="29" pos:column="17"/></case>
    <block pos:line="30" pos:column="5">{
      <if pos:line="31" pos:column="7">if <condition pos:line="31" pos:column="10">(<expr><operator pos:line="31" pos:column="11">(<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="12">r<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <call><name pos:line="31" pos:column="16">safe_fclose<pos:position pos:line="31" pos:column="27"/></name> <argument_list pos:line="31" pos:column="28">(<argument><expr><operator pos:line="31" pos:column="29">&amp;<pos:position pos:line="31" pos:column="34"/></operator><name><name pos:line="31" pos:column="30">msg<pos:position pos:line="31" pos:column="33"/></name><operator pos:line="31" pos:column="33">-&gt;<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="35">fp<pos:position pos:line="31" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="38"/></argument_list></call><operator pos:line="31" pos:column="38">)<pos:position pos:line="31" pos:column="39"/></operator> <operator pos:line="31" pos:column="40">==<pos:position pos:line="31" pos:column="42"/></operator> <literal type="number" pos:line="31" pos:column="43">0<pos:position pos:line="31" pos:column="44"/></literal></expr>)<pos:position pos:line="31" pos:column="45"/></condition><then pos:line="31" pos:column="45">
	<block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="9">r<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">=<pos:position pos:line="32" pos:column="12"/></operator> <call><name pos:line="32" pos:column="13">imap_append_message<pos:position pos:line="32" pos:column="32"/></name> <argument_list pos:line="32" pos:column="33">(<argument><expr><name pos:line="32" pos:column="34">ctx<pos:position pos:line="32" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="39">msg<pos:position pos:line="32" pos:column="42"/></name></expr></argument>)<pos:position pos:line="32" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="44"/></expr_stmt></block></then></if>
      <break pos:line="33" pos:column="7">break;<pos:position pos:line="33" pos:column="13"/></break>
    }<pos:position pos:line="34" pos:column="6"/></block>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif>
    
    <case pos:line="37" pos:column="5">case <expr><name pos:line="37" pos:column="10">M_MAILDIR<pos:position pos:line="37" pos:column="19"/></name></expr>:<pos:position pos:line="37" pos:column="20"/></case>
    <block pos:line="38" pos:column="5">{
      <expr_stmt><expr><name pos:line="39" pos:column="7">r<pos:position pos:line="39" pos:column="8"/></name> <operator pos:line="39" pos:column="9">=<pos:position pos:line="39" pos:column="10"/></operator> <call><name pos:line="39" pos:column="11">maildir_commit_message<pos:position pos:line="39" pos:column="33"/></name> <argument_list pos:line="39" pos:column="34">(<argument><expr><name pos:line="39" pos:column="35">ctx<pos:position pos:line="39" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="40">msg<pos:position pos:line="39" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="45">NULL<pos:position pos:line="39" pos:column="49"/></name></expr></argument>)<pos:position pos:line="39" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="51"/></expr_stmt>
      <break pos:line="40" pos:column="7">break;<pos:position pos:line="40" pos:column="13"/></break>
    }<pos:position pos:line="41" pos:column="6"/></block>
    
    <case pos:line="43" pos:column="5">case <expr><name pos:line="43" pos:column="10">M_MH<pos:position pos:line="43" pos:column="14"/></name></expr>:<pos:position pos:line="43" pos:column="15"/></case>
    <block pos:line="44" pos:column="5">{
      <expr_stmt><expr><name pos:line="45" pos:column="7">r<pos:position pos:line="45" pos:column="8"/></name> <operator pos:line="45" pos:column="9">=<pos:position pos:line="45" pos:column="10"/></operator> <call><name pos:line="45" pos:column="11">mh_commit_message<pos:position pos:line="45" pos:column="28"/></name> <argument_list pos:line="45" pos:column="29">(<argument><expr><name pos:line="45" pos:column="30">ctx<pos:position pos:line="45" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="35">msg<pos:position pos:line="45" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="40">NULL<pos:position pos:line="45" pos:column="44"/></name></expr></argument>)<pos:position pos:line="45" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="46"/></expr_stmt>
      <break pos:line="46" pos:column="7">break;<pos:position pos:line="46" pos:column="13"/></break>
    }<pos:position pos:line="47" pos:column="6"/></block>
  }<pos:position pos:line="48" pos:column="4"/></block></switch>
  
  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><name pos:line="50" pos:column="7">r<pos:position pos:line="50" pos:column="8"/></name> <operator pos:line="50" pos:column="9">==<pos:position pos:line="50" pos:column="11"/></operator> <literal type="number" pos:line="50" pos:column="12">0<pos:position pos:line="50" pos:column="13"/></literal> <operator pos:line="50" pos:column="14">&amp;&amp;<pos:position pos:line="50" pos:column="24"/></operator> <operator pos:line="50" pos:column="17">(<pos:position pos:line="50" pos:column="18"/></operator><name><name pos:line="50" pos:column="18">ctx<pos:position pos:line="50" pos:column="21"/></name><operator pos:line="50" pos:column="21">-&gt;<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="23">magic<pos:position pos:line="50" pos:column="28"/></name></name> <operator pos:line="50" pos:column="29">==<pos:position pos:line="50" pos:column="31"/></operator> <name pos:line="50" pos:column="32">M_MBOX<pos:position pos:line="50" pos:column="38"/></name> <operator pos:line="50" pos:column="39">||<pos:position pos:line="50" pos:column="41"/></operator> <name><name pos:line="50" pos:column="42">ctx<pos:position pos:line="50" pos:column="45"/></name><operator pos:line="50" pos:column="45">-&gt;<pos:position pos:line="50" pos:column="50"/></operator><name pos:line="50" pos:column="47">magic<pos:position pos:line="50" pos:column="52"/></name></name> <operator pos:line="50" pos:column="53">==<pos:position pos:line="50" pos:column="55"/></operator> <name pos:line="50" pos:column="56">M_MMDF<pos:position pos:line="50" pos:column="62"/></name><operator pos:line="50" pos:column="62">)<pos:position pos:line="50" pos:column="63"/></operator>
      <operator pos:line="51" pos:column="7">&amp;&amp;<pos:position pos:line="51" pos:column="17"/></operator> <operator pos:line="51" pos:column="10">(<pos:position pos:line="51" pos:column="11"/></operator><call><name pos:line="51" pos:column="11">fflush<pos:position pos:line="51" pos:column="17"/></name> <argument_list pos:line="51" pos:column="18">(<argument><expr><name><name pos:line="51" pos:column="19">msg<pos:position pos:line="51" pos:column="22"/></name><operator pos:line="51" pos:column="22">-&gt;<pos:position pos:line="51" pos:column="27"/></operator><name pos:line="51" pos:column="24">fp<pos:position pos:line="51" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="27"/></argument_list></call> <operator pos:line="51" pos:column="28">==<pos:position pos:line="51" pos:column="30"/></operator> <name pos:line="51" pos:column="31">EOF<pos:position pos:line="51" pos:column="34"/></name> <operator pos:line="51" pos:column="35">||<pos:position pos:line="51" pos:column="37"/></operator> <call><name pos:line="51" pos:column="38">fsync<pos:position pos:line="51" pos:column="43"/></name> <argument_list pos:line="51" pos:column="44">(<argument><expr><call><name pos:line="51" pos:column="45">fileno<pos:position pos:line="51" pos:column="51"/></name> <argument_list pos:line="51" pos:column="52">(<argument><expr><name><name pos:line="51" pos:column="53">msg<pos:position pos:line="51" pos:column="56"/></name><operator pos:line="51" pos:column="56">-&gt;<pos:position pos:line="51" pos:column="61"/></operator><name pos:line="51" pos:column="58">fp<pos:position pos:line="51" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="62"/></argument_list></call> <operator pos:line="51" pos:column="63">==<pos:position pos:line="51" pos:column="65"/></operator> <operator pos:line="51" pos:column="66">-<pos:position pos:line="51" pos:column="67"/></operator><literal type="number" pos:line="51" pos:column="67">1<pos:position pos:line="51" pos:column="68"/></literal><operator pos:line="51" pos:column="68">)<pos:position pos:line="51" pos:column="69"/></operator></expr>)<pos:position pos:line="51" pos:column="70"/></condition><then pos:line="51" pos:column="70">
  <block pos:line="52" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="53" pos:column="5">mutt_perror<pos:position pos:line="53" pos:column="16"/></name></type> <name pos:line="53" pos:column="17">_<pos:position pos:line="53" pos:column="18"/></name><argument_list pos:line="53" pos:column="18">(<argument><expr><literal type="string" pos:line="53" pos:column="19">"Can't write message"<pos:position pos:line="53" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="41"/></argument_list></decl>;<pos:position pos:line="53" pos:column="42"/></decl_stmt>
    <expr_stmt><expr><name pos:line="54" pos:column="5">r<pos:position pos:line="54" pos:column="6"/></name> <operator pos:line="54" pos:column="7">=<pos:position pos:line="54" pos:column="8"/></operator> <operator pos:line="54" pos:column="9">-<pos:position pos:line="54" pos:column="10"/></operator><literal type="number" pos:line="54" pos:column="10">1<pos:position pos:line="54" pos:column="11"/></literal></expr>;<pos:position pos:line="54" pos:column="12"/></expr_stmt>
  }<pos:position pos:line="55" pos:column="4"/></block></then></if>
 
  <return pos:line="57" pos:column="3">return <expr><name pos:line="57" pos:column="10">r<pos:position pos:line="57" pos:column="11"/></name></expr>;<pos:position pos:line="57" pos:column="12"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

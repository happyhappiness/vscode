<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1439_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">_mutt_mktemp<pos:position pos:line="1" pos:column="18"/></name> <parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">s<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="29">size_t<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">slen<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">prefix<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="62">const<pos:position pos:line="1" pos:column="67"/></specifier> <name pos:line="1" pos:column="68">char<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">suffix<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>,
                   <parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">src<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">int<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">line<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">n<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><call><name pos:line="4" pos:column="14">snprintf<pos:position pos:line="4" pos:column="22"/></name> <argument_list pos:line="4" pos:column="23">(<argument><expr><name pos:line="4" pos:column="24">s<pos:position pos:line="4" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="27">slen<pos:position pos:line="4" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="33">"%s/%s-%s-%d-%d-%ld%ld%s%s"<pos:position pos:line="4" pos:column="60"/></literal></expr></argument>,
      <argument><expr><call><name pos:line="5" pos:column="7">NONULL<pos:position pos:line="5" pos:column="13"/></name> <argument_list pos:line="5" pos:column="14">(<argument><expr><name pos:line="5" pos:column="15">Tempdir<pos:position pos:line="5" pos:column="22"/></name></expr></argument>)<pos:position pos:line="5" pos:column="23"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="25">NONULL<pos:position pos:line="5" pos:column="31"/></name> <argument_list pos:line="5" pos:column="32">(<argument><expr><name pos:line="5" pos:column="33">prefix<pos:position pos:line="5" pos:column="39"/></name></expr></argument>)<pos:position pos:line="5" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="42">NONULL<pos:position pos:line="5" pos:column="48"/></name> <argument_list pos:line="5" pos:column="49">(<argument><expr><name pos:line="5" pos:column="50">Hostname<pos:position pos:line="5" pos:column="58"/></name></expr></argument>)<pos:position pos:line="5" pos:column="59"/></argument_list></call></expr></argument>,
      <argument><expr><operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">int<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">)<pos:position pos:line="6" pos:column="12"/></operator> <call><name pos:line="6" pos:column="13">getuid<pos:position pos:line="6" pos:column="19"/></name> <argument_list pos:line="6" pos:column="20">()<pos:position pos:line="6" pos:column="22"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="6" pos:column="24">(<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">int<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">)<pos:position pos:line="6" pos:column="29"/></operator> <call><name pos:line="6" pos:column="30">getpid<pos:position pos:line="6" pos:column="36"/></name> <argument_list pos:line="6" pos:column="37">()<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="41">random<pos:position pos:line="6" pos:column="47"/></name> <argument_list pos:line="6" pos:column="48">()<pos:position pos:line="6" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="52">random<pos:position pos:line="6" pos:column="58"/></name> <argument_list pos:line="6" pos:column="59">()<pos:position pos:line="6" pos:column="61"/></argument_list></call></expr></argument>,
      <argument><expr><ternary><condition><expr><name pos:line="7" pos:column="7">suffix<pos:position pos:line="7" pos:column="13"/></name></expr> ?<pos:position pos:line="7" pos:column="15"/></condition><then pos:line="7" pos:column="15"> <expr><literal type="string" pos:line="7" pos:column="16">"."<pos:position pos:line="7" pos:column="19"/></literal></expr> <pos:position pos:line="7" pos:column="20"/></then><else pos:line="7" pos:column="20">: <expr><literal type="string" pos:line="7" pos:column="22">""<pos:position pos:line="7" pos:column="24"/></literal></expr></else></ternary></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="26">NONULL<pos:position pos:line="7" pos:column="32"/></name> <argument_list pos:line="7" pos:column="33">(<argument><expr><name pos:line="7" pos:column="34">suffix<pos:position pos:line="7" pos:column="40"/></name></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">n<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">&gt;=<pos:position pos:line="8" pos:column="14"/></operator> <name pos:line="8" pos:column="12">slen<pos:position pos:line="8" pos:column="16"/></name></expr>)<pos:position pos:line="8" pos:column="17"/></condition><then pos:line="8" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="5">dprint<pos:position pos:line="9" pos:column="11"/></name> <argument_list pos:line="9" pos:column="12">(<argument><expr><literal type="number" pos:line="9" pos:column="13">1<pos:position pos:line="9" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="16">(<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">debugfile<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">,<pos:position pos:line="9" pos:column="27"/></operator> <literal type="string" pos:line="9" pos:column="28">"%s:%d: ERROR: insufficient buffer space to hold temporary filename! slen=%zu but need %zu\n"<pos:position pos:line="9" pos:column="121"/></literal><operator pos:line="9" pos:column="121">,<pos:position pos:line="9" pos:column="122"/></operator>
	    <name pos:line="10" pos:column="13">src<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">,<pos:position pos:line="10" pos:column="17"/></operator> <name pos:line="10" pos:column="18">line<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">,<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="24">slen<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">,<pos:position pos:line="10" pos:column="29"/></operator> <name pos:line="10" pos:column="30">n<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">)<pos:position pos:line="10" pos:column="32"/></operator></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">dprint<pos:position pos:line="11" pos:column="9"/></name> <argument_list pos:line="11" pos:column="10">(<argument><expr><literal type="number" pos:line="11" pos:column="11">3<pos:position pos:line="11" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="11" pos:column="14">(<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">debugfile<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">,<pos:position pos:line="11" pos:column="25"/></operator> <literal type="string" pos:line="11" pos:column="26">"%s:%d: mutt_mktemp returns \"%s\".\n"<pos:position pos:line="11" pos:column="64"/></literal><operator pos:line="11" pos:column="64">,<pos:position pos:line="11" pos:column="65"/></operator> <name pos:line="11" pos:column="66">src<pos:position pos:line="11" pos:column="69"/></name><operator pos:line="11" pos:column="69">,<pos:position pos:line="11" pos:column="70"/></operator> <name pos:line="11" pos:column="71">line<pos:position pos:line="11" pos:column="75"/></name><operator pos:line="11" pos:column="75">,<pos:position pos:line="11" pos:column="76"/></operator> <name pos:line="11" pos:column="77">s<pos:position pos:line="11" pos:column="78"/></name><operator pos:line="11" pos:column="78">)<pos:position pos:line="11" pos:column="79"/></operator></expr></argument>)<pos:position pos:line="11" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="81"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><call><name pos:line="12" pos:column="7">unlink<pos:position pos:line="12" pos:column="13"/></name> <argument_list pos:line="12" pos:column="14">(<argument><expr><name pos:line="12" pos:column="15">s<pos:position pos:line="12" pos:column="16"/></name></expr></argument>)<pos:position pos:line="12" pos:column="17"/></argument_list></call> <operator pos:line="12" pos:column="18">&amp;&amp;<pos:position pos:line="12" pos:column="28"/></operator> <name pos:line="12" pos:column="21">errno<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">!=<pos:position pos:line="12" pos:column="29"/></operator> <name pos:line="12" pos:column="30">ENOENT<pos:position pos:line="12" pos:column="36"/></name></expr>)<pos:position pos:line="12" pos:column="37"/></condition><then pos:line="12" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="5">dprint<pos:position pos:line="13" pos:column="11"/></name> <argument_list pos:line="13" pos:column="12">(<argument><expr><literal type="number" pos:line="13" pos:column="13">1<pos:position pos:line="13" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="13" pos:column="16">(<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">debugfile<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">,<pos:position pos:line="13" pos:column="27"/></operator> <literal type="string" pos:line="13" pos:column="28">"%s:%d: ERROR: unlink(\"%s\"): %s (errno %d)\n"<pos:position pos:line="13" pos:column="75"/></literal><operator pos:line="13" pos:column="75">,<pos:position pos:line="13" pos:column="76"/></operator> <name pos:line="13" pos:column="77">src<pos:position pos:line="13" pos:column="80"/></name><operator pos:line="13" pos:column="80">,<pos:position pos:line="13" pos:column="81"/></operator> <name pos:line="13" pos:column="82">line<pos:position pos:line="13" pos:column="86"/></name><operator pos:line="13" pos:column="86">,<pos:position pos:line="13" pos:column="87"/></operator> <name pos:line="13" pos:column="88">s<pos:position pos:line="13" pos:column="89"/></name><operator pos:line="13" pos:column="89">,<pos:position pos:line="13" pos:column="90"/></operator> <call><name pos:line="13" pos:column="91">strerror<pos:position pos:line="13" pos:column="99"/></name> <argument_list pos:line="13" pos:column="100">(<argument><expr><name pos:line="13" pos:column="101">errno<pos:position pos:line="13" pos:column="106"/></name></expr></argument>)<pos:position pos:line="13" pos:column="107"/></argument_list></call><operator pos:line="13" pos:column="107">,<pos:position pos:line="13" pos:column="108"/></operator> <name pos:line="13" pos:column="109">errno<pos:position pos:line="13" pos:column="114"/></name><operator pos:line="13" pos:column="114">)<pos:position pos:line="13" pos:column="115"/></operator></expr></argument>)<pos:position pos:line="13" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="117"/></expr_stmt></block></then></if>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

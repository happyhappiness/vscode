<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_227_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">pgp_decrypt_mime<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">FILE<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">fpin<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">FILE<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier><modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">fpout<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">BODY<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">b<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">BODY<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier><modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">cur<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">tempfile<pos:position pos:line="3" pos:column="16"/></name><index pos:line="3" pos:column="16">[<expr><name pos:line="3" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="3" pos:column="32"/></name></expr>]<pos:position pos:line="3" pos:column="33"/></index></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">STATE<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">s<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">BODY<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">p<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><name pos:line="5" pos:column="13">b<pos:position pos:line="5" pos:column="14"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
  
  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><operator pos:line="7" pos:column="6">!<pos:position pos:line="7" pos:column="7"/></operator><call><name pos:line="7" pos:column="7">mutt_is_multipart_encrypted<pos:position pos:line="7" pos:column="34"/></name><argument_list pos:line="7" pos:column="34">(<argument><expr><name pos:line="7" pos:column="35">b<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="38"/></condition><then pos:line="7" pos:column="38">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">-<pos:position pos:line="8" pos:column="13"/></operator><literal type="number" pos:line="8" pos:column="13">1<pos:position pos:line="8" pos:column="14"/></literal></expr>;<pos:position pos:line="8" pos:column="15"/></return></block></then></if>

  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><operator pos:line="10" pos:column="6">!<pos:position pos:line="10" pos:column="7"/></operator><name><name pos:line="10" pos:column="7">b<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">-&gt;<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="10">parts<pos:position pos:line="10" pos:column="15"/></name></name> <operator pos:line="10" pos:column="16">||<pos:position pos:line="10" pos:column="18"/></operator> <operator pos:line="10" pos:column="19">!<pos:position pos:line="10" pos:column="20"/></operator><name><name pos:line="10" pos:column="20">b<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">-&gt;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="23">parts<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">-&gt;<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="30">next<pos:position pos:line="10" pos:column="34"/></name></name></expr>)<pos:position pos:line="10" pos:column="35"/></condition><then pos:line="10" pos:column="35">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">-<pos:position pos:line="11" pos:column="13"/></operator><literal type="number" pos:line="11" pos:column="13">1<pos:position pos:line="11" pos:column="14"/></literal></expr>;<pos:position pos:line="11" pos:column="15"/></return></block></then></if>
  
  <expr_stmt><expr><name pos:line="13" pos:column="3">b<pos:position pos:line="13" pos:column="4"/></name> <operator pos:line="13" pos:column="5">=<pos:position pos:line="13" pos:column="6"/></operator> <name><name pos:line="13" pos:column="7">b<pos:position pos:line="13" pos:column="8"/></name><operator pos:line="13" pos:column="8">-&gt;<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="10">parts<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">-&gt;<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="17">next<pos:position pos:line="13" pos:column="21"/></name></name></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>
  
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">memset<pos:position pos:line="15" pos:column="9"/></name> <argument_list pos:line="15" pos:column="10">(<argument><expr><operator pos:line="15" pos:column="11">&amp;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="12">s<pos:position pos:line="15" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="15">0<pos:position pos:line="15" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="18">sizeof <argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">s<pos:position pos:line="15" pos:column="27"/></name></expr></argument>)<pos:position pos:line="15" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">s<pos:position pos:line="16" pos:column="4"/></name><operator pos:line="16" pos:column="4">.<pos:position pos:line="16" pos:column="5"/></operator><name pos:line="16" pos:column="5">fpin<pos:position pos:line="16" pos:column="9"/></name></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <name pos:line="16" pos:column="12">fpin<pos:position pos:line="16" pos:column="16"/></name></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">mutt_mktemp<pos:position pos:line="17" pos:column="14"/></name> <argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">tempfile<pos:position pos:line="17" pos:column="24"/></name></expr></argument>)<pos:position pos:line="17" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="26"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">(<pos:position pos:line="18" pos:column="8"/></operator><operator pos:line="18" pos:column="8">*<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="9">fpout<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <call><name pos:line="18" pos:column="17">safe_fopen<pos:position pos:line="18" pos:column="27"/></name> <argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">tempfile<pos:position pos:line="18" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="39">"w+"<pos:position pos:line="18" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call><operator pos:line="18" pos:column="44">)<pos:position pos:line="18" pos:column="45"/></operator> <operator pos:line="18" pos:column="46">==<pos:position pos:line="18" pos:column="48"/></operator> <name pos:line="18" pos:column="49">NULL<pos:position pos:line="18" pos:column="53"/></name></expr>)<pos:position pos:line="18" pos:column="54"/></condition><then pos:line="18" pos:column="54">
  <block pos:line="19" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">mutt_perror<pos:position pos:line="20" pos:column="16"/></name> <argument_list pos:line="20" pos:column="17">(<argument><expr><name pos:line="20" pos:column="18">tempfile<pos:position pos:line="20" pos:column="26"/></name></expr></argument>)<pos:position pos:line="20" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><operator pos:line="21" pos:column="13">-<pos:position pos:line="21" pos:column="14"/></operator><literal type="number" pos:line="21" pos:column="14">1<pos:position pos:line="21" pos:column="15"/></literal><operator pos:line="21" pos:column="15">)<pos:position pos:line="21" pos:column="16"/></operator></expr>;<pos:position pos:line="21" pos:column="17"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">unlink<pos:position pos:line="23" pos:column="9"/></name> <argument_list pos:line="23" pos:column="10">(<argument><expr><name pos:line="23" pos:column="11">tempfile<pos:position pos:line="23" pos:column="19"/></name></expr></argument>)<pos:position pos:line="23" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="25" pos:column="3">*<pos:position pos:line="25" pos:column="4"/></operator><name pos:line="25" pos:column="4">cur<pos:position pos:line="25" pos:column="7"/></name> <operator pos:line="25" pos:column="8">=<pos:position pos:line="25" pos:column="9"/></operator> <call><name pos:line="25" pos:column="10">pgp_decrypt_part<pos:position pos:line="25" pos:column="26"/></name> <argument_list pos:line="25" pos:column="27">(<argument><expr><name pos:line="25" pos:column="28">b<pos:position pos:line="25" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="31">&amp;<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="32">s<pos:position pos:line="25" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="35">*<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="36">fpout<pos:position pos:line="25" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="43">p<pos:position pos:line="25" pos:column="44"/></name></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">rewind<pos:position pos:line="27" pos:column="9"/></name> <argument_list pos:line="27" pos:column="10">(<argument><expr><operator pos:line="27" pos:column="11">*<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="12">fpout<pos:position pos:line="27" pos:column="17"/></name></expr></argument>)<pos:position pos:line="27" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="19"/></expr_stmt>
  <return pos:line="28" pos:column="3">return <expr><operator pos:line="28" pos:column="10">(<pos:position pos:line="28" pos:column="11"/></operator><literal type="number" pos:line="28" pos:column="11">0<pos:position pos:line="28" pos:column="12"/></literal><operator pos:line="28" pos:column="12">)<pos:position pos:line="28" pos:column="13"/></operator></expr>;<pos:position pos:line="28" pos:column="14"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_185_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">mutt_substrcpy<pos:position pos:line="2" pos:column="15"/></name> <parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">char<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">dest<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">char<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">beg<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="46">const<pos:position pos:line="2" pos:column="51"/></specifier> <name pos:line="2" pos:column="52">char<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">end<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="63">size_t<pos:position pos:line="2" pos:column="69"/></name></type> <name pos:line="2" pos:column="70">destlen<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="78"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">len<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">len<pos:position pos:line="6" pos:column="6"/></name> <operator pos:line="6" pos:column="7">=<pos:position pos:line="6" pos:column="8"/></operator> <name pos:line="6" pos:column="9">end<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">-<pos:position pos:line="6" pos:column="14"/></operator> <name pos:line="6" pos:column="15">beg<pos:position pos:line="6" pos:column="18"/></name></expr>;<pos:position pos:line="6" pos:column="19"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">len<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">&gt;<pos:position pos:line="7" pos:column="15"/></operator> <name pos:line="7" pos:column="13">destlen<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">-<pos:position pos:line="7" pos:column="22"/></operator> <literal type="number" pos:line="7" pos:column="23">1<pos:position pos:line="7" pos:column="24"/></literal></expr>)<pos:position pos:line="7" pos:column="25"/></condition><then pos:line="7" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="5">len<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <name pos:line="8" pos:column="11">destlen<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">-<pos:position pos:line="8" pos:column="20"/></operator> <literal type="number" pos:line="8" pos:column="21">1<pos:position pos:line="8" pos:column="22"/></literal></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">memcpy<pos:position pos:line="9" pos:column="9"/></name> <argument_list pos:line="9" pos:column="10">(<argument><expr><name pos:line="9" pos:column="11">dest<pos:position pos:line="9" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="17">beg<pos:position pos:line="9" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="22">len<pos:position pos:line="9" pos:column="25"/></name></expr></argument>)<pos:position pos:line="9" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">dest<pos:position pos:line="10" pos:column="7"/></name><index pos:line="10" pos:column="7">[<expr><name pos:line="10" pos:column="8">len<pos:position pos:line="10" pos:column="11"/></name></expr>]<pos:position pos:line="10" pos:column="12"/></index></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <literal type="number" pos:line="10" pos:column="15">0<pos:position pos:line="10" pos:column="16"/></literal></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt>
  <return pos:line="11" pos:column="3">return <expr><name pos:line="11" pos:column="10">dest<pos:position pos:line="11" pos:column="14"/></name></expr>;<pos:position pos:line="11" pos:column="15"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

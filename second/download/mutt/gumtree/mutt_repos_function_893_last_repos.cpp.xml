<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_893_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ssl_socket_open<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">CONNECTION<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type> <name pos:line="1" pos:column="42">conn<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">sslsockdata<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">data<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">maxbits<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><call><name pos:line="6" pos:column="7">raw_socket_open<pos:position pos:line="6" pos:column="22"/></name> <argument_list pos:line="6" pos:column="23">(<argument><expr><name pos:line="6" pos:column="24">conn<pos:position pos:line="6" pos:column="28"/></name></expr></argument>)<pos:position pos:line="6" pos:column="29"/></argument_list></call> <operator pos:line="6" pos:column="30">&lt;<pos:position pos:line="6" pos:column="34"/></operator> <literal type="number" pos:line="6" pos:column="32">0<pos:position pos:line="6" pos:column="33"/></literal></expr>)<pos:position pos:line="6" pos:column="34"/></condition><then pos:line="6" pos:column="34">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">-<pos:position pos:line="7" pos:column="13"/></operator><literal type="number" pos:line="7" pos:column="13">1<pos:position pos:line="7" pos:column="14"/></literal></expr>;<pos:position pos:line="7" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="9" pos:column="3">data<pos:position pos:line="9" pos:column="7"/></name> <operator pos:line="9" pos:column="8">=<pos:position pos:line="9" pos:column="9"/></operator> <operator pos:line="9" pos:column="10">(<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="11">sslsockdata<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">*<pos:position pos:line="9" pos:column="24"/></operator><operator pos:line="9" pos:column="24">)<pos:position pos:line="9" pos:column="25"/></operator> <call><name pos:line="9" pos:column="26">safe_calloc<pos:position pos:line="9" pos:column="37"/></name> <argument_list pos:line="9" pos:column="38">(<argument><expr><literal type="number" pos:line="9" pos:column="39">1<pos:position pos:line="9" pos:column="40"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="42">sizeof <argument_list pos:line="9" pos:column="49">(<argument><expr><name pos:line="9" pos:column="50">sslsockdata<pos:position pos:line="9" pos:column="61"/></name></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">conn<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">-&gt;<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="9">sockdata<pos:position pos:line="10" pos:column="17"/></name></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <name pos:line="10" pos:column="20">data<pos:position pos:line="10" pos:column="24"/></name></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator> <operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name><name pos:line="12" pos:column="10">data<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">ctx<pos:position pos:line="12" pos:column="19"/></name></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <call><name pos:line="12" pos:column="22">SSL_CTX_new<pos:position pos:line="12" pos:column="33"/></name> <argument_list pos:line="12" pos:column="34">(<argument><expr><call><name pos:line="12" pos:column="35">SSLv23_client_method<pos:position pos:line="12" pos:column="55"/></name> <argument_list pos:line="12" pos:column="56">()<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call><operator pos:line="12" pos:column="59">)<pos:position pos:line="12" pos:column="60"/></operator></expr>)<pos:position pos:line="12" pos:column="61"/></condition><then pos:line="12" pos:column="61">
  <block pos:line="13" pos:column="3">{
    <comment type="block" pos:line="14" pos:column="5">/* L10N: an SSL context is a data structure returned by the OpenSSL
     *       function SSL_CTX_new().  In this case it returned NULL: an
     *       error condition.
     */</comment>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">mutt_error<pos:position pos:line="18" pos:column="15"/></name> <argument_list pos:line="18" pos:column="16">(<argument><expr><call><name pos:line="18" pos:column="17">_<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><literal type="string" pos:line="18" pos:column="19">"Unable to create SSL context"<pos:position pos:line="18" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">ssl_dprint_err_stack<pos:position pos:line="19" pos:column="25"/></name> <argument_list pos:line="19" pos:column="26">()<pos:position pos:line="19" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">mutt_socket_close<pos:position pos:line="20" pos:column="22"/></name> <argument_list pos:line="20" pos:column="23">(<argument><expr><name pos:line="20" pos:column="24">conn<pos:position pos:line="20" pos:column="28"/></name></expr></argument>)<pos:position pos:line="20" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">-<pos:position pos:line="21" pos:column="13"/></operator><literal type="number" pos:line="21" pos:column="13">1<pos:position pos:line="21" pos:column="14"/></literal></expr>;<pos:position pos:line="21" pos:column="15"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="24" pos:column="3">/* disable SSL protocols as needed */</comment>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><operator pos:line="25" pos:column="7">!<pos:position pos:line="25" pos:column="8"/></operator><call><name pos:line="25" pos:column="8">option<pos:position pos:line="25" pos:column="14"/></name><argument_list pos:line="25" pos:column="14">(<argument><expr><name pos:line="25" pos:column="15">OPTTLSV1<pos:position pos:line="25" pos:column="23"/></name></expr></argument>)<pos:position pos:line="25" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="25"/></condition><then pos:line="25" pos:column="25">
  <block pos:line="26" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">SSL_CTX_set_options<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><name><name pos:line="27" pos:column="25">data<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">-&gt;<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="31">ctx<pos:position pos:line="27" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="36">SSL_OP_NO_TLSv1<pos:position pos:line="27" pos:column="51"/></name></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="53"/></expr_stmt>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="29" pos:column="3">/* TLSv1.1/1.2 support was added in OpenSSL 1.0.1, but some OS distros such
   * as Fedora 17 are on OpenSSL 1.0.0.
   */</comment>
<cpp:ifdef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifdef<pos:position pos:line="32" pos:column="7"/></cpp:directive> <name pos:line="32" pos:column="8">SSL_OP_NO_TLSv1_1<pos:position pos:line="32" pos:column="25"/></name></cpp:ifdef>
  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><operator pos:line="33" pos:column="7">!<pos:position pos:line="33" pos:column="8"/></operator><call><name pos:line="33" pos:column="8">option<pos:position pos:line="33" pos:column="14"/></name><argument_list pos:line="33" pos:column="14">(<argument><expr><name pos:line="33" pos:column="15">OPTTLSV1_1<pos:position pos:line="33" pos:column="25"/></name></expr></argument>)<pos:position pos:line="33" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="27"/></condition><then pos:line="33" pos:column="27">
  <block pos:line="34" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">SSL_CTX_set_options<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><name><name pos:line="35" pos:column="25">data<pos:position pos:line="35" pos:column="29"/></name><operator pos:line="35" pos:column="29">-&gt;<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="31">ctx<pos:position pos:line="35" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="36">SSL_OP_NO_TLSv1_1<pos:position pos:line="35" pos:column="53"/></name></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="55"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">ifdef<pos:position pos:line="38" pos:column="7"/></cpp:directive> <name pos:line="38" pos:column="8">SSL_OP_NO_TLSv1_2<pos:position pos:line="38" pos:column="25"/></name></cpp:ifdef>
  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><operator pos:line="39" pos:column="7">!<pos:position pos:line="39" pos:column="8"/></operator><call><name pos:line="39" pos:column="8">option<pos:position pos:line="39" pos:column="14"/></name><argument_list pos:line="39" pos:column="14">(<argument><expr><name pos:line="39" pos:column="15">OPTTLSV1_2<pos:position pos:line="39" pos:column="25"/></name></expr></argument>)<pos:position pos:line="39" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="27"/></condition><then pos:line="39" pos:column="27">
  <block pos:line="40" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">SSL_CTX_set_options<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><name><name pos:line="41" pos:column="25">data<pos:position pos:line="41" pos:column="29"/></name><operator pos:line="41" pos:column="29">-&gt;<pos:position pos:line="41" pos:column="34"/></operator><name pos:line="41" pos:column="31">ctx<pos:position pos:line="41" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="36">SSL_OP_NO_TLSv1_2<pos:position pos:line="41" pos:column="53"/></name></expr></argument>)<pos:position pos:line="41" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="55"/></expr_stmt>
  }<pos:position pos:line="42" pos:column="4"/></block></then></if>
<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif<pos:position pos:line="43" pos:column="7"/></cpp:directive></cpp:endif>
  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><operator pos:line="44" pos:column="7">!<pos:position pos:line="44" pos:column="8"/></operator><call><name pos:line="44" pos:column="8">option<pos:position pos:line="44" pos:column="14"/></name><argument_list pos:line="44" pos:column="14">(<argument><expr><name pos:line="44" pos:column="15">OPTSSLV2<pos:position pos:line="44" pos:column="23"/></name></expr></argument>)<pos:position pos:line="44" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="25"/></condition><then pos:line="44" pos:column="25">
  <block pos:line="45" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">SSL_CTX_set_options<pos:position pos:line="46" pos:column="24"/></name><argument_list pos:line="46" pos:column="24">(<argument><expr><name><name pos:line="46" pos:column="25">data<pos:position pos:line="46" pos:column="29"/></name><operator pos:line="46" pos:column="29">-&gt;<pos:position pos:line="46" pos:column="34"/></operator><name pos:line="46" pos:column="31">ctx<pos:position pos:line="46" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="36">SSL_OP_NO_SSLv2<pos:position pos:line="46" pos:column="51"/></name></expr></argument>)<pos:position pos:line="46" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="53"/></expr_stmt>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>
  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><operator pos:line="48" pos:column="7">!<pos:position pos:line="48" pos:column="8"/></operator><call><name pos:line="48" pos:column="8">option<pos:position pos:line="48" pos:column="14"/></name><argument_list pos:line="48" pos:column="14">(<argument><expr><name pos:line="48" pos:column="15">OPTSSLV3<pos:position pos:line="48" pos:column="23"/></name></expr></argument>)<pos:position pos:line="48" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="25"/></condition><then pos:line="48" pos:column="25">
  <block pos:line="49" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">SSL_CTX_set_options<pos:position pos:line="50" pos:column="24"/></name><argument_list pos:line="50" pos:column="24">(<argument><expr><name><name pos:line="50" pos:column="25">data<pos:position pos:line="50" pos:column="29"/></name><operator pos:line="50" pos:column="29">-&gt;<pos:position pos:line="50" pos:column="34"/></operator><name pos:line="50" pos:column="31">ctx<pos:position pos:line="50" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="36">SSL_OP_NO_SSLv3<pos:position pos:line="50" pos:column="51"/></name></expr></argument>)<pos:position pos:line="50" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="53"/></expr_stmt>
  }<pos:position pos:line="51" pos:column="4"/></block></then></if>

  <if pos:line="53" pos:column="3">if <condition pos:line="53" pos:column="6">(<expr><call><name pos:line="53" pos:column="7">option<pos:position pos:line="53" pos:column="13"/></name> <argument_list pos:line="53" pos:column="14">(<argument><expr><name pos:line="53" pos:column="15">OPTSSLSYSTEMCERTS<pos:position pos:line="53" pos:column="32"/></name></expr></argument>)<pos:position pos:line="53" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="34"/></condition><then pos:line="53" pos:column="34">
  <block pos:line="54" pos:column="3">{
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><operator pos:line="55" pos:column="9">!<pos:position pos:line="55" pos:column="10"/></operator> <call><name pos:line="55" pos:column="11">SSL_CTX_set_default_verify_paths<pos:position pos:line="55" pos:column="43"/></name> <argument_list pos:line="55" pos:column="44">(<argument><expr><name><name pos:line="55" pos:column="45">data<pos:position pos:line="55" pos:column="49"/></name><operator pos:line="55" pos:column="49">-&gt;<pos:position pos:line="55" pos:column="54"/></operator><name pos:line="55" pos:column="51">ctx<pos:position pos:line="55" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="56"/></condition><then pos:line="55" pos:column="56">
    <block pos:line="56" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="57" pos:column="7">dprint<pos:position pos:line="57" pos:column="13"/></name> <argument_list pos:line="57" pos:column="14">(<argument><expr><literal type="number" pos:line="57" pos:column="15">1<pos:position pos:line="57" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="57" pos:column="18">(<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="19">debugfile<pos:position pos:line="57" pos:column="28"/></name><operator pos:line="57" pos:column="28">,<pos:position pos:line="57" pos:column="29"/></operator> <literal type="string" pos:line="57" pos:column="30">"ssl_socket_open: Error setting default verify paths\n"<pos:position pos:line="57" pos:column="85"/></literal><operator pos:line="57" pos:column="85">)<pos:position pos:line="57" pos:column="86"/></operator></expr></argument>)<pos:position pos:line="57" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="88"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="58" pos:column="7">mutt_socket_close<pos:position pos:line="58" pos:column="24"/></name> <argument_list pos:line="58" pos:column="25">(<argument><expr><name pos:line="58" pos:column="26">conn<pos:position pos:line="58" pos:column="30"/></name></expr></argument>)<pos:position pos:line="58" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="32"/></expr_stmt>
      <return pos:line="59" pos:column="7">return <expr><operator pos:line="59" pos:column="14">-<pos:position pos:line="59" pos:column="15"/></operator><literal type="number" pos:line="59" pos:column="15">1<pos:position pos:line="59" pos:column="16"/></literal></expr>;<pos:position pos:line="59" pos:column="17"/></return>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>
  }<pos:position pos:line="61" pos:column="4"/></block></then></if>

  <if pos:line="63" pos:column="3">if <condition pos:line="63" pos:column="6">(<expr><name pos:line="63" pos:column="7">SslCertFile<pos:position pos:line="63" pos:column="18"/></name> <operator pos:line="63" pos:column="19">&amp;&amp;<pos:position pos:line="63" pos:column="29"/></operator> <operator pos:line="63" pos:column="22">!<pos:position pos:line="63" pos:column="23"/></operator><call><name pos:line="63" pos:column="23">ssl_load_certificates<pos:position pos:line="63" pos:column="44"/></name> <argument_list pos:line="63" pos:column="45">(<argument><expr><name><name pos:line="63" pos:column="46">data<pos:position pos:line="63" pos:column="50"/></name><operator pos:line="63" pos:column="50">-&gt;<pos:position pos:line="63" pos:column="55"/></operator><name pos:line="63" pos:column="52">ctx<pos:position pos:line="63" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="57"/></condition><then pos:line="63" pos:column="57">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="5">dprint<pos:position pos:line="64" pos:column="11"/></name> <argument_list pos:line="64" pos:column="12">(<argument><expr><literal type="number" pos:line="64" pos:column="13">1<pos:position pos:line="64" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="64" pos:column="16">(<pos:position pos:line="64" pos:column="17"/></operator><name pos:line="64" pos:column="17">debugfile<pos:position pos:line="64" pos:column="26"/></name><operator pos:line="64" pos:column="26">,<pos:position pos:line="64" pos:column="27"/></operator> <literal type="string" pos:line="64" pos:column="28">"ssl_socket_open: Error loading trusted certificates\n"<pos:position pos:line="64" pos:column="83"/></literal><operator pos:line="64" pos:column="83">)<pos:position pos:line="64" pos:column="84"/></operator></expr></argument>)<pos:position pos:line="64" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="86"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="66" pos:column="3">ssl_get_client_cert<pos:position pos:line="66" pos:column="22"/></name><argument_list pos:line="66" pos:column="22">(<argument><expr><name pos:line="66" pos:column="23">data<pos:position pos:line="66" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="29">conn<pos:position pos:line="66" pos:column="33"/></name></expr></argument>)<pos:position pos:line="66" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="35"/></expr_stmt>

  <if pos:line="68" pos:column="3">if <condition pos:line="68" pos:column="6">(<expr><name pos:line="68" pos:column="7">SslCiphers<pos:position pos:line="68" pos:column="17"/></name></expr>)<pos:position pos:line="68" pos:column="18"/></condition><then pos:line="68" pos:column="18"> <block pos:line="68" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="69" pos:column="5">SSL_CTX_set_cipher_list<pos:position pos:line="69" pos:column="28"/></name> <argument_list pos:line="69" pos:column="29">(<argument><expr><name><name pos:line="69" pos:column="30">data<pos:position pos:line="69" pos:column="34"/></name><operator pos:line="69" pos:column="34">-&gt;<pos:position pos:line="69" pos:column="39"/></operator><name pos:line="69" pos:column="36">ctx<pos:position pos:line="69" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="41">SslCiphers<pos:position pos:line="69" pos:column="51"/></name></expr></argument>)<pos:position pos:line="69" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="53"/></expr_stmt>
  }<pos:position pos:line="70" pos:column="4"/></block></then></if>

  <if pos:line="72" pos:column="3">if <condition pos:line="72" pos:column="6">(<expr><call><name pos:line="72" pos:column="7">ssl_set_verify_partial<pos:position pos:line="72" pos:column="29"/></name> <argument_list pos:line="72" pos:column="30">(<argument><expr><name><name pos:line="72" pos:column="31">data<pos:position pos:line="72" pos:column="35"/></name><operator pos:line="72" pos:column="35">-&gt;<pos:position pos:line="72" pos:column="40"/></operator><name pos:line="72" pos:column="37">ctx<pos:position pos:line="72" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="42"/></condition><then pos:line="72" pos:column="42">
  <block pos:line="73" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">mutt_error<pos:position pos:line="74" pos:column="15"/></name> <argument_list pos:line="74" pos:column="16">(<argument><expr><call><name pos:line="74" pos:column="17">_<pos:position pos:line="74" pos:column="18"/></name><argument_list pos:line="74" pos:column="18">(<argument><expr><literal type="string" pos:line="74" pos:column="19">"Warning: error enabling ssl_verify_partial_chains"<pos:position pos:line="74" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="74" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">mutt_sleep<pos:position pos:line="75" pos:column="15"/></name> <argument_list pos:line="75" pos:column="16">(<argument><expr><literal type="number" pos:line="75" pos:column="17">2<pos:position pos:line="75" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="76" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="78" pos:column="3">data<pos:position pos:line="78" pos:column="7"/></name><operator pos:line="78" pos:column="7">-&gt;<pos:position pos:line="78" pos:column="12"/></operator><name pos:line="78" pos:column="9">ssl<pos:position pos:line="78" pos:column="12"/></name></name> <operator pos:line="78" pos:column="13">=<pos:position pos:line="78" pos:column="14"/></operator> <call><name pos:line="78" pos:column="15">SSL_new<pos:position pos:line="78" pos:column="22"/></name> <argument_list pos:line="78" pos:column="23">(<argument><expr><name><name pos:line="78" pos:column="24">data<pos:position pos:line="78" pos:column="28"/></name><operator pos:line="78" pos:column="28">-&gt;<pos:position pos:line="78" pos:column="33"/></operator><name pos:line="78" pos:column="30">ctx<pos:position pos:line="78" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="79" pos:column="3">SSL_set_fd<pos:position pos:line="79" pos:column="13"/></name> <argument_list pos:line="79" pos:column="14">(<argument><expr><name><name pos:line="79" pos:column="15">data<pos:position pos:line="79" pos:column="19"/></name><operator pos:line="79" pos:column="19">-&gt;<pos:position pos:line="79" pos:column="24"/></operator><name pos:line="79" pos:column="21">ssl<pos:position pos:line="79" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="26">conn<pos:position pos:line="79" pos:column="30"/></name><operator pos:line="79" pos:column="30">-&gt;<pos:position pos:line="79" pos:column="35"/></operator><name pos:line="79" pos:column="32">fd<pos:position pos:line="79" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="36"/></expr_stmt>

  <if pos:line="81" pos:column="3">if <condition pos:line="81" pos:column="6">(<expr><call><name pos:line="81" pos:column="7">ssl_negotiate<pos:position pos:line="81" pos:column="20"/></name><argument_list pos:line="81" pos:column="20">(<argument><expr><name pos:line="81" pos:column="21">conn<pos:position pos:line="81" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="27">data<pos:position pos:line="81" pos:column="31"/></name></expr></argument>)<pos:position pos:line="81" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="33"/></condition><then pos:line="81" pos:column="33">
  <block pos:line="82" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">mutt_socket_close<pos:position pos:line="83" pos:column="22"/></name> <argument_list pos:line="83" pos:column="23">(<argument><expr><name pos:line="83" pos:column="24">conn<pos:position pos:line="83" pos:column="28"/></name></expr></argument>)<pos:position pos:line="83" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="30"/></expr_stmt>
    <return pos:line="84" pos:column="5">return <expr><operator pos:line="84" pos:column="12">-<pos:position pos:line="84" pos:column="13"/></operator><literal type="number" pos:line="84" pos:column="13">1<pos:position pos:line="84" pos:column="14"/></literal></expr>;<pos:position pos:line="84" pos:column="15"/></return>
  }<pos:position pos:line="85" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="87" pos:column="3">data<pos:position pos:line="87" pos:column="7"/></name><operator pos:line="87" pos:column="7">-&gt;<pos:position pos:line="87" pos:column="12"/></operator><name pos:line="87" pos:column="9">isopen<pos:position pos:line="87" pos:column="15"/></name></name> <operator pos:line="87" pos:column="16">=<pos:position pos:line="87" pos:column="17"/></operator> <literal type="number" pos:line="87" pos:column="18">1<pos:position pos:line="87" pos:column="19"/></literal></expr>;<pos:position pos:line="87" pos:column="20"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="89" pos:column="3">conn<pos:position pos:line="89" pos:column="7"/></name><operator pos:line="89" pos:column="7">-&gt;<pos:position pos:line="89" pos:column="12"/></operator><name pos:line="89" pos:column="9">ssf<pos:position pos:line="89" pos:column="12"/></name></name> <operator pos:line="89" pos:column="13">=<pos:position pos:line="89" pos:column="14"/></operator> <call><name pos:line="89" pos:column="15">SSL_CIPHER_get_bits<pos:position pos:line="89" pos:column="34"/></name> <argument_list pos:line="89" pos:column="35">(<argument><expr><call><name pos:line="89" pos:column="36">SSL_get_current_cipher<pos:position pos:line="89" pos:column="58"/></name> <argument_list pos:line="89" pos:column="59">(<argument><expr><name><name pos:line="89" pos:column="60">data<pos:position pos:line="89" pos:column="64"/></name><operator pos:line="89" pos:column="64">-&gt;<pos:position pos:line="89" pos:column="69"/></operator><name pos:line="89" pos:column="66">ssl<pos:position pos:line="89" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="70"/></argument_list></call></expr></argument>,
    <argument><expr><operator pos:line="90" pos:column="5">&amp;<pos:position pos:line="90" pos:column="10"/></operator><name pos:line="90" pos:column="6">maxbits<pos:position pos:line="90" pos:column="13"/></name></expr></argument>)<pos:position pos:line="90" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="15"/></expr_stmt>

  <return pos:line="92" pos:column="3">return <expr><literal type="number" pos:line="92" pos:column="10">0<pos:position pos:line="92" pos:column="11"/></literal></expr>;<pos:position pos:line="92" pos:column="12"/></return>
}<pos:position pos:line="93" pos:column="2"/></block></function></unit>

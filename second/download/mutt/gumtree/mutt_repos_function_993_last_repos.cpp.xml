<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_993_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">tls_fingerprint<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">gnutls_digest_algorithm_t<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">algo<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name><modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type> <name pos:line="2" pos:column="36">s<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">int<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">l<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="46">const<pos:position pos:line="2" pos:column="51"/></specifier> <name pos:line="2" pos:column="52">gnutls_datum_t<pos:position pos:line="2" pos:column="66"/></name><modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type> <name pos:line="2" pos:column="68">data<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">unsigned<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name></type> <name><name pos:line="4" pos:column="17">md<pos:position pos:line="4" pos:column="19"/></name><index pos:line="4" pos:column="19">[<expr><literal type="number" pos:line="4" pos:column="20">36<pos:position pos:line="4" pos:column="22"/></literal></expr>]<pos:position pos:line="4" pos:column="23"/></index></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">n<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">j<pos:position pos:line="6" pos:column="8"/></name></decl>;<pos:position pos:line="6" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">n<pos:position pos:line="8" pos:column="4"/></name> <operator pos:line="8" pos:column="5">=<pos:position pos:line="8" pos:column="6"/></operator> <literal type="number" pos:line="8" pos:column="7">36<pos:position pos:line="8" pos:column="9"/></literal></expr>;<pos:position pos:line="8" pos:column="10"/></expr_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><call><name pos:line="10" pos:column="7">gnutls_fingerprint<pos:position pos:line="10" pos:column="25"/></name> <argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">algo<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="33">data<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="39">(<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">char<pos:position pos:line="10" pos:column="44"/></name> <operator pos:line="10" pos:column="45">*<pos:position pos:line="10" pos:column="46"/></operator><operator pos:line="10" pos:column="46">)<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="47">md<pos:position pos:line="10" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="51">&amp;<pos:position pos:line="10" pos:column="56"/></operator><name pos:line="10" pos:column="52">n<pos:position pos:line="10" pos:column="53"/></name></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></call> <operator pos:line="10" pos:column="55">&lt;<pos:position pos:line="10" pos:column="59"/></operator> <literal type="number" pos:line="10" pos:column="57">0<pos:position pos:line="10" pos:column="58"/></literal></expr>)<pos:position pos:line="10" pos:column="59"/></condition><then pos:line="10" pos:column="59">
  <block pos:line="11" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">snprintf<pos:position pos:line="12" pos:column="13"/></name> <argument_list pos:line="12" pos:column="14">(<argument><expr><name pos:line="12" pos:column="15">s<pos:position pos:line="12" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="18">l<pos:position pos:line="12" pos:column="19"/></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="21">_<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><literal type="string" pos:line="12" pos:column="23">"[unable to calculate]"<pos:position pos:line="12" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="13" pos:column="4"/></block></then>
  <else pos:line="14" pos:column="3">else
  <block pos:line="15" pos:column="3">{
    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init><expr><name pos:line="16" pos:column="10">j<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <literal type="number" pos:line="16" pos:column="14">0<pos:position pos:line="16" pos:column="15"/></literal></expr>;<pos:position pos:line="16" pos:column="16"/></init> <condition><expr><name pos:line="16" pos:column="17">j<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">&lt;<pos:position pos:line="16" pos:column="23"/></operator> <operator pos:line="16" pos:column="21">(<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">int<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">)<pos:position pos:line="16" pos:column="26"/></operator> <name pos:line="16" pos:column="27">n<pos:position pos:line="16" pos:column="28"/></name></expr>;<pos:position pos:line="16" pos:column="29"/></condition> <incr><expr><name pos:line="16" pos:column="30">j<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">++<pos:position pos:line="16" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="34"/></control>
    <block pos:line="17" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="18" pos:column="7">char<pos:position pos:line="18" pos:column="11"/></name></type> <name><name pos:line="18" pos:column="12">ch<pos:position pos:line="18" pos:column="14"/></name><index pos:line="18" pos:column="14">[<expr><literal type="number" pos:line="18" pos:column="15">8<pos:position pos:line="18" pos:column="16"/></literal></expr>]<pos:position pos:line="18" pos:column="17"/></index></name></decl>;<pos:position pos:line="18" pos:column="18"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">snprintf<pos:position pos:line="19" pos:column="15"/></name> <argument_list pos:line="19" pos:column="16">(<argument><expr><name pos:line="19" pos:column="17">ch<pos:position pos:line="19" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="21">8<pos:position pos:line="19" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="24">"%02X%s"<pos:position pos:line="19" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="34">md<pos:position pos:line="19" pos:column="36"/></name><index pos:line="19" pos:column="36">[<expr><name pos:line="19" pos:column="37">j<pos:position pos:line="19" pos:column="38"/></name></expr>]<pos:position pos:line="19" pos:column="39"/></index></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="41">(<pos:position pos:line="19" pos:column="42"/></operator><ternary><condition><expr><name pos:line="19" pos:column="42">j<pos:position pos:line="19" pos:column="43"/></name> <operator pos:line="19" pos:column="44">%<pos:position pos:line="19" pos:column="45"/></operator> <literal type="number" pos:line="19" pos:column="46">2<pos:position pos:line="19" pos:column="47"/></literal></expr> ?<pos:position pos:line="19" pos:column="49"/></condition><then pos:line="19" pos:column="49"> <expr><literal type="string" pos:line="19" pos:column="50">" "<pos:position pos:line="19" pos:column="53"/></literal></expr> <pos:position pos:line="19" pos:column="54"/></then><else pos:line="19" pos:column="54">: <expr><literal type="string" pos:line="19" pos:column="56">""<pos:position pos:line="19" pos:column="58"/></literal></expr></else></ternary><operator pos:line="19" pos:column="58">)<pos:position pos:line="19" pos:column="59"/></operator></expr></argument>)<pos:position pos:line="19" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="61"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">safe_strcat<pos:position pos:line="20" pos:column="18"/></name> <argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">s<pos:position pos:line="20" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="23">l<pos:position pos:line="20" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="26">ch<pos:position pos:line="20" pos:column="28"/></name></expr></argument>)<pos:position pos:line="20" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></for>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">s<pos:position pos:line="22" pos:column="6"/></name><index pos:line="22" pos:column="6">[<expr><literal type="number" pos:line="22" pos:column="7">2<pos:position pos:line="22" pos:column="8"/></literal><operator pos:line="22" pos:column="8">*<pos:position pos:line="22" pos:column="9"/></operator><name pos:line="22" pos:column="9">n<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">+<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="11">n<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">/<pos:position pos:line="22" pos:column="13"/></operator><literal type="number" pos:line="22" pos:column="13">2<pos:position pos:line="22" pos:column="14"/></literal><operator pos:line="22" pos:column="14">-<pos:position pos:line="22" pos:column="15"/></operator><literal type="number" pos:line="22" pos:column="15">1<pos:position pos:line="22" pos:column="16"/></literal></expr>]<pos:position pos:line="22" pos:column="17"/></index></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <literal type="char" pos:line="22" pos:column="20">'\0'<pos:position pos:line="22" pos:column="24"/></literal></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt> <comment type="block" pos:line="22" pos:column="26">/* don't want trailing space */</comment>
  }<pos:position pos:line="23" pos:column="4"/></block></else></if>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

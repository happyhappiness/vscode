<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_953_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">rfc1524_expand_command<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">BODY<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">a<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">filename<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">_type<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="2" pos:column="5">char<pos:position pos:line="2" pos:column="9"/></name> <modifier pos:line="2" pos:column="10">*<pos:position pos:line="2" pos:column="11"/></modifier></type><name pos:line="2" pos:column="11">command<pos:position pos:line="2" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="20">int<pos:position pos:line="2" pos:column="23"/></name></type> <name pos:line="2" pos:column="24">clen<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">x<pos:position pos:line="4" pos:column="8"/></name><init pos:line="4" pos:column="8">=<expr><literal type="number" pos:line="4" pos:column="9">0<pos:position pos:line="4" pos:column="10"/></literal></expr></init></decl>,<decl><type ref="prev"/><name pos:line="4" pos:column="11">y<pos:position pos:line="4" pos:column="12"/></name><init pos:line="4" pos:column="12">=<expr><literal type="number" pos:line="4" pos:column="13">0<pos:position pos:line="4" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">needspipe<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><name pos:line="5" pos:column="19">TRUE<pos:position pos:line="5" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">buf<pos:position pos:line="6" pos:column="11"/></name><index pos:line="6" pos:column="11">[<expr><name pos:line="6" pos:column="12">LONG_STRING<pos:position pos:line="6" pos:column="23"/></name></expr>]<pos:position pos:line="6" pos:column="24"/></index></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">type<pos:position pos:line="7" pos:column="12"/></name><index pos:line="7" pos:column="12">[<expr><name pos:line="7" pos:column="13">LONG_STRING<pos:position pos:line="7" pos:column="24"/></name></expr>]<pos:position pos:line="7" pos:column="25"/></index></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
  
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">strfcpy<pos:position pos:line="9" pos:column="10"/></name> <argument_list pos:line="9" pos:column="11">(<argument><expr><name pos:line="9" pos:column="12">type<pos:position pos:line="9" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="18">_type<pos:position pos:line="9" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="25">sizeof <argument_list pos:line="9" pos:column="32">(<argument><expr><name pos:line="9" pos:column="33">type<pos:position pos:line="9" pos:column="37"/></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>
  
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><call><name pos:line="11" pos:column="7">option<pos:position pos:line="11" pos:column="13"/></name> <argument_list pos:line="11" pos:column="14">(<argument><expr><name pos:line="11" pos:column="15">OPTMAILCAPSANITIZE<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="35"/></condition><then pos:line="11" pos:column="35">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="5">mutt_sanitize_filename<pos:position pos:line="12" pos:column="27"/></name> <argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">type<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="35">0<pos:position pos:line="12" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt></block></then></if>

  <while pos:line="14" pos:column="3">while <condition pos:line="14" pos:column="9">(<expr><name pos:line="14" pos:column="10">x<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">&lt;<pos:position pos:line="14" pos:column="16"/></operator> <name pos:line="14" pos:column="14">clen<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">-<pos:position pos:line="14" pos:column="20"/></operator> <literal type="number" pos:line="14" pos:column="21">1<pos:position pos:line="14" pos:column="22"/></literal> <operator pos:line="14" pos:column="23">&amp;&amp;<pos:position pos:line="14" pos:column="33"/></operator> <name><name pos:line="14" pos:column="26">command<pos:position pos:line="14" pos:column="33"/></name><index pos:line="14" pos:column="33">[<expr><name pos:line="14" pos:column="34">x<pos:position pos:line="14" pos:column="35"/></name></expr>]<pos:position pos:line="14" pos:column="36"/></index></name> <operator pos:line="14" pos:column="37">&amp;&amp;<pos:position pos:line="14" pos:column="47"/></operator> <name pos:line="14" pos:column="40">y<pos:position pos:line="14" pos:column="41"/></name> <operator pos:line="14" pos:column="42">&lt;<pos:position pos:line="14" pos:column="46"/></operator> <sizeof pos:line="14" pos:column="44">sizeof <argument_list pos:line="14" pos:column="51">(<argument><expr><name pos:line="14" pos:column="52">buf<pos:position pos:line="14" pos:column="55"/></name></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></sizeof> <operator pos:line="14" pos:column="57">-<pos:position pos:line="14" pos:column="58"/></operator> <literal type="number" pos:line="14" pos:column="59">1<pos:position pos:line="14" pos:column="60"/></literal></expr>)<pos:position pos:line="14" pos:column="61"/></condition>
  <block pos:line="15" pos:column="3">{
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">command<pos:position pos:line="16" pos:column="16"/></name><index pos:line="16" pos:column="16">[<expr><name pos:line="16" pos:column="17">x<pos:position pos:line="16" pos:column="18"/></name></expr>]<pos:position pos:line="16" pos:column="19"/></index></name> <operator pos:line="16" pos:column="20">==<pos:position pos:line="16" pos:column="22"/></operator> <literal type="char" pos:line="16" pos:column="23">'\\'<pos:position pos:line="16" pos:column="27"/></literal></expr>)<pos:position pos:line="16" pos:column="28"/></condition><then pos:line="16" pos:column="28">
    <block pos:line="17" pos:column="5">{
      <expr_stmt><expr><name pos:line="18" pos:column="7">x<pos:position pos:line="18" pos:column="8"/></name><operator pos:line="18" pos:column="8">++<pos:position pos:line="18" pos:column="10"/></operator></expr>;<pos:position pos:line="18" pos:column="11"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="19" pos:column="7">buf<pos:position pos:line="19" pos:column="10"/></name><index pos:line="19" pos:column="10">[<expr><name pos:line="19" pos:column="11">y<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">++<pos:position pos:line="19" pos:column="14"/></operator></expr>]<pos:position pos:line="19" pos:column="15"/></index></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <name><name pos:line="19" pos:column="18">command<pos:position pos:line="19" pos:column="25"/></name><index pos:line="19" pos:column="25">[<expr><name pos:line="19" pos:column="26">x<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">++<pos:position pos:line="19" pos:column="29"/></operator></expr>]<pos:position pos:line="19" pos:column="30"/></index></name></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then>
    <elseif pos:line="21" pos:column="5">else <if pos:line="21" pos:column="10">if <condition pos:line="21" pos:column="13">(<expr><name><name pos:line="21" pos:column="14">command<pos:position pos:line="21" pos:column="21"/></name><index pos:line="21" pos:column="21">[<expr><name pos:line="21" pos:column="22">x<pos:position pos:line="21" pos:column="23"/></name></expr>]<pos:position pos:line="21" pos:column="24"/></index></name> <operator pos:line="21" pos:column="25">==<pos:position pos:line="21" pos:column="27"/></operator> <literal type="char" pos:line="21" pos:column="28">'%'<pos:position pos:line="21" pos:column="31"/></literal></expr>)<pos:position pos:line="21" pos:column="32"/></condition><then pos:line="21" pos:column="32"> 
    <block pos:line="22" pos:column="5">{
      <expr_stmt><expr><name pos:line="23" pos:column="7">x<pos:position pos:line="23" pos:column="8"/></name><operator pos:line="23" pos:column="8">++<pos:position pos:line="23" pos:column="10"/></operator></expr>;<pos:position pos:line="23" pos:column="11"/></expr_stmt>
      <if pos:line="24" pos:column="7">if <condition pos:line="24" pos:column="10">(<expr><name><name pos:line="24" pos:column="11">command<pos:position pos:line="24" pos:column="18"/></name><index pos:line="24" pos:column="18">[<expr><name pos:line="24" pos:column="19">x<pos:position pos:line="24" pos:column="20"/></name></expr>]<pos:position pos:line="24" pos:column="21"/></index></name> <operator pos:line="24" pos:column="22">==<pos:position pos:line="24" pos:column="24"/></operator> <literal type="char" pos:line="24" pos:column="25">'{'<pos:position pos:line="24" pos:column="28"/></literal></expr>)<pos:position pos:line="24" pos:column="29"/></condition><then pos:line="24" pos:column="29"> 
      <block pos:line="25" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="26" pos:column="9">char<pos:position pos:line="26" pos:column="13"/></name></type> <name><name pos:line="26" pos:column="14">param<pos:position pos:line="26" pos:column="19"/></name><index pos:line="26" pos:column="19">[<expr><name pos:line="26" pos:column="20">STRING<pos:position pos:line="26" pos:column="26"/></name></expr>]<pos:position pos:line="26" pos:column="27"/></index></name></decl>;<pos:position pos:line="26" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="27" pos:column="9">char<pos:position pos:line="27" pos:column="13"/></name></type> <name><name pos:line="27" pos:column="14">pvalue<pos:position pos:line="27" pos:column="20"/></name><index pos:line="27" pos:column="20">[<expr><name pos:line="27" pos:column="21">STRING<pos:position pos:line="27" pos:column="27"/></name></expr>]<pos:position pos:line="27" pos:column="28"/></index></name></decl>;<pos:position pos:line="27" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="28" pos:column="9">char<pos:position pos:line="28" pos:column="13"/></name> <modifier pos:line="28" pos:column="14">*<pos:position pos:line="28" pos:column="15"/></modifier></type><name pos:line="28" pos:column="15">_pvalue<pos:position pos:line="28" pos:column="22"/></name></decl>;<pos:position pos:line="28" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="29" pos:column="9">int<pos:position pos:line="29" pos:column="12"/></name></type> <name pos:line="29" pos:column="13">z<pos:position pos:line="29" pos:column="14"/></name> <init pos:line="29" pos:column="15">= <expr><literal type="number" pos:line="29" pos:column="17">0<pos:position pos:line="29" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="19"/></decl_stmt>

	<expr_stmt><expr><name pos:line="31" pos:column="9">x<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">++<pos:position pos:line="31" pos:column="12"/></operator></expr>;<pos:position pos:line="31" pos:column="13"/></expr_stmt>
	<while pos:line="32" pos:column="9">while <condition pos:line="32" pos:column="15">(<expr><name><name pos:line="32" pos:column="16">command<pos:position pos:line="32" pos:column="23"/></name><index pos:line="32" pos:column="23">[<expr><name pos:line="32" pos:column="24">x<pos:position pos:line="32" pos:column="25"/></name></expr>]<pos:position pos:line="32" pos:column="26"/></index></name> <operator pos:line="32" pos:column="27">&amp;&amp;<pos:position pos:line="32" pos:column="37"/></operator> <name><name pos:line="32" pos:column="30">command<pos:position pos:line="32" pos:column="37"/></name><index pos:line="32" pos:column="37">[<expr><name pos:line="32" pos:column="38">x<pos:position pos:line="32" pos:column="39"/></name></expr>]<pos:position pos:line="32" pos:column="40"/></index></name> <operator pos:line="32" pos:column="41">!=<pos:position pos:line="32" pos:column="43"/></operator> <literal type="char" pos:line="32" pos:column="44">'}'<pos:position pos:line="32" pos:column="47"/></literal> <operator pos:line="32" pos:column="48">&amp;&amp;<pos:position pos:line="32" pos:column="58"/></operator> <name pos:line="32" pos:column="51">z<pos:position pos:line="32" pos:column="52"/></name> <operator pos:line="32" pos:column="53">&lt;<pos:position pos:line="32" pos:column="57"/></operator> <sizeof pos:line="32" pos:column="55">sizeof <argument_list pos:line="32" pos:column="62">(<argument><expr><name pos:line="32" pos:column="63">param<pos:position pos:line="32" pos:column="68"/></name></expr></argument>)<pos:position pos:line="32" pos:column="69"/></argument_list></sizeof> <operator pos:line="32" pos:column="70">-<pos:position pos:line="32" pos:column="71"/></operator> <literal type="number" pos:line="32" pos:column="72">1<pos:position pos:line="32" pos:column="73"/></literal></expr>)<pos:position pos:line="32" pos:column="74"/></condition>
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="33" pos:column="11">param<pos:position pos:line="33" pos:column="16"/></name><index pos:line="33" pos:column="16">[<expr><name pos:line="33" pos:column="17">z<pos:position pos:line="33" pos:column="18"/></name><operator pos:line="33" pos:column="18">++<pos:position pos:line="33" pos:column="20"/></operator></expr>]<pos:position pos:line="33" pos:column="21"/></index></name> <operator pos:line="33" pos:column="22">=<pos:position pos:line="33" pos:column="23"/></operator> <name><name pos:line="33" pos:column="24">command<pos:position pos:line="33" pos:column="31"/></name><index pos:line="33" pos:column="31">[<expr><name pos:line="33" pos:column="32">x<pos:position pos:line="33" pos:column="33"/></name><operator pos:line="33" pos:column="33">++<pos:position pos:line="33" pos:column="35"/></operator></expr>]<pos:position pos:line="33" pos:column="36"/></index></name></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt></block></while>
	<expr_stmt><expr><name><name pos:line="34" pos:column="9">param<pos:position pos:line="34" pos:column="14"/></name><index pos:line="34" pos:column="14">[<expr><name pos:line="34" pos:column="15">z<pos:position pos:line="34" pos:column="16"/></name></expr>]<pos:position pos:line="34" pos:column="17"/></index></name> <operator pos:line="34" pos:column="18">=<pos:position pos:line="34" pos:column="19"/></operator> <literal type="char" pos:line="34" pos:column="20">'\0'<pos:position pos:line="34" pos:column="24"/></literal></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt>
	
	<expr_stmt><expr><name pos:line="36" pos:column="9">_pvalue<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator> <call><name pos:line="36" pos:column="19">mutt_get_parameter<pos:position pos:line="36" pos:column="37"/></name> <argument_list pos:line="36" pos:column="38">(<argument><expr><name pos:line="36" pos:column="39">param<pos:position pos:line="36" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="46">a<pos:position pos:line="36" pos:column="47"/></name><operator pos:line="36" pos:column="47">-&gt;<pos:position pos:line="36" pos:column="52"/></operator><name pos:line="36" pos:column="49">parameter<pos:position pos:line="36" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">strfcpy<pos:position pos:line="37" pos:column="16"/></name> <argument_list pos:line="37" pos:column="17">(<argument><expr><name pos:line="37" pos:column="18">pvalue<pos:position pos:line="37" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="26">NONULL<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><name pos:line="37" pos:column="33">_pvalue<pos:position pos:line="37" pos:column="40"/></name></expr></argument>)<pos:position pos:line="37" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="43">sizeof <argument_list pos:line="37" pos:column="50">(<argument><expr><name pos:line="37" pos:column="51">pvalue<pos:position pos:line="37" pos:column="57"/></name></expr></argument>)<pos:position pos:line="37" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="60"/></expr_stmt>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><call><name pos:line="38" pos:column="13">option<pos:position pos:line="38" pos:column="19"/></name> <argument_list pos:line="38" pos:column="20">(<argument><expr><name pos:line="38" pos:column="21">OPTMAILCAPSANITIZE<pos:position pos:line="38" pos:column="39"/></name></expr></argument>)<pos:position pos:line="38" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="41"/></condition><then pos:line="38" pos:column="41">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="11">mutt_sanitize_filename<pos:position pos:line="39" pos:column="33"/></name> <argument_list pos:line="39" pos:column="34">(<argument><expr><name pos:line="39" pos:column="35">pvalue<pos:position pos:line="39" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="43">0<pos:position pos:line="39" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="46"/></expr_stmt></block></then></if>
	
	<expr_stmt><expr><name pos:line="41" pos:column="9">y<pos:position pos:line="41" pos:column="10"/></name> <operator pos:line="41" pos:column="11">+=<pos:position pos:line="41" pos:column="13"/></operator> <call><name pos:line="41" pos:column="14">mutt_quote_filename<pos:position pos:line="41" pos:column="33"/></name> <argument_list pos:line="41" pos:column="34">(<argument><expr><name pos:line="41" pos:column="35">buf<pos:position pos:line="41" pos:column="38"/></name> <operator pos:line="41" pos:column="39">+<pos:position pos:line="41" pos:column="40"/></operator> <name pos:line="41" pos:column="41">y<pos:position pos:line="41" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="44">sizeof <argument_list pos:line="41" pos:column="51">(<argument><expr><name pos:line="41" pos:column="52">buf<pos:position pos:line="41" pos:column="55"/></name></expr></argument>)<pos:position pos:line="41" pos:column="56"/></argument_list></sizeof> <operator pos:line="41" pos:column="57">-<pos:position pos:line="41" pos:column="58"/></operator> <name pos:line="41" pos:column="59">y<pos:position pos:line="41" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="62">pvalue<pos:position pos:line="41" pos:column="68"/></name></expr></argument>)<pos:position pos:line="41" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="70"/></expr_stmt>
      }<pos:position pos:line="42" pos:column="8"/></block></then>
      <elseif pos:line="43" pos:column="7">else <if pos:line="43" pos:column="12">if <condition pos:line="43" pos:column="15">(<expr><name><name pos:line="43" pos:column="16">command<pos:position pos:line="43" pos:column="23"/></name><index pos:line="43" pos:column="23">[<expr><name pos:line="43" pos:column="24">x<pos:position pos:line="43" pos:column="25"/></name></expr>]<pos:position pos:line="43" pos:column="26"/></index></name> <operator pos:line="43" pos:column="27">==<pos:position pos:line="43" pos:column="29"/></operator> <literal type="char" pos:line="43" pos:column="30">'s'<pos:position pos:line="43" pos:column="33"/></literal> <operator pos:line="43" pos:column="34">&amp;&amp;<pos:position pos:line="43" pos:column="44"/></operator> <name pos:line="43" pos:column="37">filename<pos:position pos:line="43" pos:column="45"/></name> <operator pos:line="43" pos:column="46">!=<pos:position pos:line="43" pos:column="48"/></operator> <name pos:line="43" pos:column="49">NULL<pos:position pos:line="43" pos:column="53"/></name></expr>)<pos:position pos:line="43" pos:column="54"/></condition><then pos:line="43" pos:column="54">
      <block pos:line="44" pos:column="7">{
	<expr_stmt><expr><name pos:line="45" pos:column="9">y<pos:position pos:line="45" pos:column="10"/></name> <operator pos:line="45" pos:column="11">+=<pos:position pos:line="45" pos:column="13"/></operator> <call><name pos:line="45" pos:column="14">mutt_quote_filename<pos:position pos:line="45" pos:column="33"/></name> <argument_list pos:line="45" pos:column="34">(<argument><expr><name pos:line="45" pos:column="35">buf<pos:position pos:line="45" pos:column="38"/></name> <operator pos:line="45" pos:column="39">+<pos:position pos:line="45" pos:column="40"/></operator> <name pos:line="45" pos:column="41">y<pos:position pos:line="45" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="44">sizeof <argument_list pos:line="45" pos:column="51">(<argument><expr><name pos:line="45" pos:column="52">buf<pos:position pos:line="45" pos:column="55"/></name></expr></argument>)<pos:position pos:line="45" pos:column="56"/></argument_list></sizeof> <operator pos:line="45" pos:column="57">-<pos:position pos:line="45" pos:column="58"/></operator> <name pos:line="45" pos:column="59">y<pos:position pos:line="45" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="62">filename<pos:position pos:line="45" pos:column="70"/></name></expr></argument>)<pos:position pos:line="45" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="72"/></expr_stmt>
	<expr_stmt><expr><name pos:line="46" pos:column="9">needspipe<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">=<pos:position pos:line="46" pos:column="20"/></operator> <name pos:line="46" pos:column="21">FALSE<pos:position pos:line="46" pos:column="26"/></name></expr>;<pos:position pos:line="46" pos:column="27"/></expr_stmt>
      }<pos:position pos:line="47" pos:column="8"/></block></then></if></elseif>
      <elseif pos:line="48" pos:column="7">else <if pos:line="48" pos:column="12">if <condition pos:line="48" pos:column="15">(<expr><name><name pos:line="48" pos:column="16">command<pos:position pos:line="48" pos:column="23"/></name><index pos:line="48" pos:column="23">[<expr><name pos:line="48" pos:column="24">x<pos:position pos:line="48" pos:column="25"/></name></expr>]<pos:position pos:line="48" pos:column="26"/></index></name> <operator pos:line="48" pos:column="27">==<pos:position pos:line="48" pos:column="29"/></operator> <literal type="char" pos:line="48" pos:column="30">'t'<pos:position pos:line="48" pos:column="33"/></literal></expr>)<pos:position pos:line="48" pos:column="34"/></condition><then pos:line="48" pos:column="34">
      <block pos:line="49" pos:column="7">{
	<expr_stmt><expr><name pos:line="50" pos:column="9">y<pos:position pos:line="50" pos:column="10"/></name> <operator pos:line="50" pos:column="11">+=<pos:position pos:line="50" pos:column="13"/></operator> <call><name pos:line="50" pos:column="14">mutt_quote_filename<pos:position pos:line="50" pos:column="33"/></name> <argument_list pos:line="50" pos:column="34">(<argument><expr><name pos:line="50" pos:column="35">buf<pos:position pos:line="50" pos:column="38"/></name> <operator pos:line="50" pos:column="39">+<pos:position pos:line="50" pos:column="40"/></operator> <name pos:line="50" pos:column="41">y<pos:position pos:line="50" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="44">sizeof <argument_list pos:line="50" pos:column="51">(<argument><expr><name pos:line="50" pos:column="52">buf<pos:position pos:line="50" pos:column="55"/></name></expr></argument>)<pos:position pos:line="50" pos:column="56"/></argument_list></sizeof> <operator pos:line="50" pos:column="57">-<pos:position pos:line="50" pos:column="58"/></operator> <name pos:line="50" pos:column="59">y<pos:position pos:line="50" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="62">type<pos:position pos:line="50" pos:column="66"/></name></expr></argument>)<pos:position pos:line="50" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="68"/></expr_stmt>
      }<pos:position pos:line="51" pos:column="8"/></block></then></if></elseif></if>
      <expr_stmt><expr><name pos:line="52" pos:column="7">x<pos:position pos:line="52" pos:column="8"/></name><operator pos:line="52" pos:column="8">++<pos:position pos:line="52" pos:column="10"/></operator></expr>;<pos:position pos:line="52" pos:column="11"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if></elseif>
    <else pos:line="54" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="55" pos:column="7">buf<pos:position pos:line="55" pos:column="10"/></name><index pos:line="55" pos:column="10">[<expr><name pos:line="55" pos:column="11">y<pos:position pos:line="55" pos:column="12"/></name><operator pos:line="55" pos:column="12">++<pos:position pos:line="55" pos:column="14"/></operator></expr>]<pos:position pos:line="55" pos:column="15"/></index></name> <operator pos:line="55" pos:column="16">=<pos:position pos:line="55" pos:column="17"/></operator> <name><name pos:line="55" pos:column="18">command<pos:position pos:line="55" pos:column="25"/></name><index pos:line="55" pos:column="25">[<expr><name pos:line="55" pos:column="26">x<pos:position pos:line="55" pos:column="27"/></name><operator pos:line="55" pos:column="27">++<pos:position pos:line="55" pos:column="29"/></operator></expr>]<pos:position pos:line="55" pos:column="30"/></index></name></expr>;<pos:position pos:line="55" pos:column="31"/></expr_stmt></block></else></if>
  }<pos:position pos:line="56" pos:column="4"/></block></while>
  <expr_stmt><expr><name><name pos:line="57" pos:column="3">buf<pos:position pos:line="57" pos:column="6"/></name><index pos:line="57" pos:column="6">[<expr><name pos:line="57" pos:column="7">y<pos:position pos:line="57" pos:column="8"/></name></expr>]<pos:position pos:line="57" pos:column="9"/></index></name> <operator pos:line="57" pos:column="10">=<pos:position pos:line="57" pos:column="11"/></operator> <literal type="char" pos:line="57" pos:column="12">'\0'<pos:position pos:line="57" pos:column="16"/></literal></expr>;<pos:position pos:line="57" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="58" pos:column="3">strfcpy<pos:position pos:line="58" pos:column="10"/></name> <argument_list pos:line="58" pos:column="11">(<argument><expr><name pos:line="58" pos:column="12">command<pos:position pos:line="58" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="21">buf<pos:position pos:line="58" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="26">clen<pos:position pos:line="58" pos:column="30"/></name></expr></argument>)<pos:position pos:line="58" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="32"/></expr_stmt>

  <return pos:line="60" pos:column="3">return <expr><name pos:line="60" pos:column="10">needspipe<pos:position pos:line="60" pos:column="19"/></name></expr>;<pos:position pos:line="60" pos:column="20"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

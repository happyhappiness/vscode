<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_791_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">iptostring<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">sockaddr<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">addr<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">socklen_t<pos:position pos:line="1" pos:column="61"/></name></type> <name pos:line="1" pos:column="62">addrlen<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                      <parameter><decl><type><name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">out<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">unsigned<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">outlen<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">hbuf<pos:position pos:line="4" pos:column="12"/></name><index pos:line="4" pos:column="12">[<expr><name pos:line="4" pos:column="13">NI_MAXHOST<pos:position pos:line="4" pos:column="23"/></name></expr>]<pos:position pos:line="4" pos:column="24"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="4" pos:column="26">pbuf<pos:position pos:line="4" pos:column="30"/></name><index pos:line="4" pos:column="30">[<expr><name pos:line="4" pos:column="31">NI_MAXSERV<pos:position pos:line="4" pos:column="41"/></name></expr>]<pos:position pos:line="4" pos:column="42"/></index></name></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">ret<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">!<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">addr<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">||<pos:position pos:line="7" pos:column="15"/></operator> <operator pos:line="7" pos:column="16">!<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">out<pos:position pos:line="7" pos:column="20"/></name></expr>)<pos:position pos:line="7" pos:column="21"/></condition><then pos:line="7" pos:column="21">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">SASL_BADPARAM<pos:position pos:line="8" pos:column="25"/></name></expr>;<pos:position pos:line="8" pos:column="26"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="10" pos:column="3">ret<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <call><name pos:line="10" pos:column="9">getnameinfo<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">addr<pos:position pos:line="10" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="27">addrlen<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="36">hbuf<pos:position pos:line="10" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="42">sizeof<argument_list pos:line="10" pos:column="48">(<argument><expr><name pos:line="10" pos:column="49">hbuf<pos:position pos:line="10" pos:column="53"/></name></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="10" pos:column="56">pbuf<pos:position pos:line="10" pos:column="60"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="62">sizeof<argument_list pos:line="10" pos:column="68">(<argument><expr><name pos:line="10" pos:column="69">pbuf<pos:position pos:line="10" pos:column="73"/></name></expr></argument>)<pos:position pos:line="10" pos:column="74"/></argument_list></sizeof></expr></argument>,
                    <argument><expr><name pos:line="11" pos:column="21">NI_NUMERICHOST<pos:position pos:line="11" pos:column="35"/></name> <operator pos:line="11" pos:column="36">|<pos:position pos:line="11" pos:column="37"/></operator>
<cpp:ifdef pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">ifdef<pos:position pos:line="12" pos:column="7"/></cpp:directive> <name pos:line="12" pos:column="8">NI_WITHSCOPEID<pos:position pos:line="12" pos:column="22"/></name></cpp:ifdef>
                    <name pos:line="13" pos:column="21">NI_WITHSCOPEID<pos:position pos:line="13" pos:column="35"/></name> <operator pos:line="13" pos:column="36">|<pos:position pos:line="13" pos:column="37"/></operator>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>
                    <name pos:line="15" pos:column="21">NI_NUMERICSERV<pos:position pos:line="15" pos:column="35"/></name></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">ret<pos:position pos:line="16" pos:column="10"/></name></expr>)<pos:position pos:line="16" pos:column="11"/></condition><then pos:line="16" pos:column="11">
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><call><name pos:line="17" pos:column="12">getnameinfo_err<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><name pos:line="17" pos:column="28">ret<pos:position pos:line="17" pos:column="31"/></name></expr></argument>)<pos:position pos:line="17" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="33"/></return></block></then></if>

  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">outlen<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">&lt;<pos:position pos:line="19" pos:column="18"/></operator> <call><name pos:line="19" pos:column="16">strlen<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">hbuf<pos:position pos:line="19" pos:column="27"/></name></expr></argument>)<pos:position pos:line="19" pos:column="28"/></argument_list></call> <operator pos:line="19" pos:column="29">+<pos:position pos:line="19" pos:column="30"/></operator> <call><name pos:line="19" pos:column="31">strlen<pos:position pos:line="19" pos:column="37"/></name><argument_list pos:line="19" pos:column="37">(<argument><expr><name pos:line="19" pos:column="38">pbuf<pos:position pos:line="19" pos:column="42"/></name></expr></argument>)<pos:position pos:line="19" pos:column="43"/></argument_list></call> <operator pos:line="19" pos:column="44">+<pos:position pos:line="19" pos:column="45"/></operator> <literal type="number" pos:line="19" pos:column="46">2<pos:position pos:line="19" pos:column="47"/></literal></expr>)<pos:position pos:line="19" pos:column="48"/></condition><then pos:line="19" pos:column="48">
    <block type="pseudo"><return pos:line="20" pos:column="5">return <expr><name pos:line="20" pos:column="12">SASL_BUFOVER<pos:position pos:line="20" pos:column="24"/></name></expr>;<pos:position pos:line="20" pos:column="25"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">snprintf<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><name pos:line="22" pos:column="12">out<pos:position pos:line="22" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="17">outlen<pos:position pos:line="22" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="25">"%s;%s"<pos:position pos:line="22" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="34">hbuf<pos:position pos:line="22" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="40">pbuf<pos:position pos:line="22" pos:column="44"/></name></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="46"/></expr_stmt>

  <return pos:line="24" pos:column="3">return <expr><name pos:line="24" pos:column="10">SASL_OK<pos:position pos:line="24" pos:column="17"/></name></expr>;<pos:position pos:line="24" pos:column="18"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_564_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_socket_readln_d<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name><modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type> <name pos:line="1" pos:column="33">buf<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">size_t<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">buflen<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">CONNECTION<pos:position pos:line="1" pos:column="63"/></name><modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type> <name pos:line="1" pos:column="65">conn<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="71">int<pos:position pos:line="1" pos:column="74"/></name></type> <name pos:line="1" pos:column="75">dbg<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name pos:line="3" pos:column="8">ch<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>

  <for pos:line="6" pos:column="3">for <control pos:line="6" pos:column="7">(<init><expr><name pos:line="6" pos:column="8">i<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <literal type="number" pos:line="6" pos:column="12">0<pos:position pos:line="6" pos:column="13"/></literal></expr>;<pos:position pos:line="6" pos:column="14"/></init> <condition><expr><name pos:line="6" pos:column="15">i<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">&lt;<pos:position pos:line="6" pos:column="21"/></operator> <name pos:line="6" pos:column="19">buflen<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">-<pos:position pos:line="6" pos:column="26"/></operator><literal type="number" pos:line="6" pos:column="26">1<pos:position pos:line="6" pos:column="27"/></literal></expr>;<pos:position pos:line="6" pos:column="28"/></condition> <incr><expr><name pos:line="6" pos:column="29">i<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">++<pos:position pos:line="6" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="33"/></control>
  <block pos:line="7" pos:column="3">{
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name pos:line="8" pos:column="9">mutt_socket_readchar<pos:position pos:line="8" pos:column="29"/></name> <argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">conn<pos:position pos:line="8" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="37">&amp;<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="38">ch<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call> <operator pos:line="8" pos:column="42">!=<pos:position pos:line="8" pos:column="44"/></operator> <literal type="number" pos:line="8" pos:column="45">1<pos:position pos:line="8" pos:column="46"/></literal></expr>)<pos:position pos:line="8" pos:column="47"/></condition><then pos:line="8" pos:column="47">
    <block pos:line="9" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="10" pos:column="7">buf<pos:position pos:line="10" pos:column="10"/></name><index pos:line="10" pos:column="10">[<expr><name pos:line="10" pos:column="11">i<pos:position pos:line="10" pos:column="12"/></name></expr>]<pos:position pos:line="10" pos:column="13"/></index></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <literal type="char" pos:line="10" pos:column="16">'\0'<pos:position pos:line="10" pos:column="20"/></literal></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
      <return pos:line="11" pos:column="7">return <expr><operator pos:line="11" pos:column="14">-<pos:position pos:line="11" pos:column="15"/></operator><literal type="number" pos:line="11" pos:column="15">1<pos:position pos:line="11" pos:column="16"/></literal></expr>;<pos:position pos:line="11" pos:column="17"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">ch<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">==<pos:position pos:line="14" pos:column="14"/></operator> <literal type="char" pos:line="14" pos:column="15">'\n'<pos:position pos:line="14" pos:column="19"/></literal></expr>)<pos:position pos:line="14" pos:column="20"/></condition><then pos:line="14" pos:column="20">
      <block type="pseudo"><break pos:line="15" pos:column="7">break;<pos:position pos:line="15" pos:column="13"/></break></block></then></if>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">buf<pos:position pos:line="16" pos:column="8"/></name><index pos:line="16" pos:column="8">[<expr><name pos:line="16" pos:column="9">i<pos:position pos:line="16" pos:column="10"/></name></expr>]<pos:position pos:line="16" pos:column="11"/></index></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <name pos:line="16" pos:column="14">ch<pos:position pos:line="16" pos:column="16"/></name></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></for>

  <comment type="block" pos:line="19" pos:column="3">/* strip \r from \r\n termination */</comment>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">i<pos:position pos:line="20" pos:column="8"/></name> <operator pos:line="20" pos:column="9">&amp;&amp;<pos:position pos:line="20" pos:column="19"/></operator> <name><name pos:line="20" pos:column="12">buf<pos:position pos:line="20" pos:column="15"/></name><index pos:line="20" pos:column="15">[<expr><name pos:line="20" pos:column="16">i<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-<pos:position pos:line="20" pos:column="18"/></operator><literal type="number" pos:line="20" pos:column="18">1<pos:position pos:line="20" pos:column="19"/></literal></expr>]<pos:position pos:line="20" pos:column="20"/></index></name> <operator pos:line="20" pos:column="21">==<pos:position pos:line="20" pos:column="23"/></operator> <literal type="char" pos:line="20" pos:column="24">'\r'<pos:position pos:line="20" pos:column="28"/></literal></expr>)<pos:position pos:line="20" pos:column="29"/></condition><then pos:line="20" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="5">i<pos:position pos:line="21" pos:column="6"/></name><operator pos:line="21" pos:column="6">--<pos:position pos:line="21" pos:column="8"/></operator></expr>;<pos:position pos:line="21" pos:column="9"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">buf<pos:position pos:line="22" pos:column="6"/></name><index pos:line="22" pos:column="6">[<expr><name pos:line="22" pos:column="7">i<pos:position pos:line="22" pos:column="8"/></name></expr>]<pos:position pos:line="22" pos:column="9"/></index></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <literal type="char" pos:line="22" pos:column="12">'\0'<pos:position pos:line="22" pos:column="16"/></literal></expr>;<pos:position pos:line="22" pos:column="17"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="24" pos:column="3">dprint<pos:position pos:line="24" pos:column="9"/></name> <argument_list pos:line="24" pos:column="10">(<argument><expr><name pos:line="24" pos:column="11">dbg<pos:position pos:line="24" pos:column="14"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="16">(<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="17">debugfile<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">,<pos:position pos:line="24" pos:column="27"/></operator> <literal type="string" pos:line="24" pos:column="28">"%d&lt; %s\n"<pos:position pos:line="24" pos:column="41"/></literal><operator pos:line="24" pos:column="38">,<pos:position pos:line="24" pos:column="39"/></operator> <name><name pos:line="24" pos:column="40">conn<pos:position pos:line="24" pos:column="44"/></name><operator pos:line="24" pos:column="44">-&gt;<pos:position pos:line="24" pos:column="49"/></operator><name pos:line="24" pos:column="46">fd<pos:position pos:line="24" pos:column="48"/></name></name><operator pos:line="24" pos:column="48">,<pos:position pos:line="24" pos:column="49"/></operator> <name pos:line="24" pos:column="50">buf<pos:position pos:line="24" pos:column="53"/></name><operator pos:line="24" pos:column="53">)<pos:position pos:line="24" pos:column="54"/></operator></expr></argument>)<pos:position pos:line="24" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="56"/></expr_stmt>
  
  <comment type="block" pos:line="26" pos:column="3">/* number of bytes read, not strlen */</comment>
  <return pos:line="27" pos:column="3">return <expr><name pos:line="27" pos:column="10">i<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">+<pos:position pos:line="27" pos:column="13"/></operator> <literal type="number" pos:line="27" pos:column="14">1<pos:position pos:line="27" pos:column="15"/></literal></expr>;<pos:position pos:line="27" pos:column="16"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

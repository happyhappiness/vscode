<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_231_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">pgp_findKeys<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">ADDRESS<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">to<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">ADDRESS<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">cc<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">ADDRESS<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">bcc<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">keyID<pos:position pos:line="3" pos:column="14"/></name></decl>, <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="17">keylist<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><name pos:line="3" pos:column="27">NULL<pos:position pos:line="3" pos:column="31"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="34">t<pos:position pos:line="3" pos:column="35"/></name></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">keylist_size<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><literal type="number" pos:line="4" pos:column="25">0<pos:position pos:line="4" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">keylist_used<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><literal type="number" pos:line="5" pos:column="25">0<pos:position pos:line="5" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">ADDRESS<pos:position pos:line="6" pos:column="10"/></name> <modifier pos:line="6" pos:column="11">*<pos:position pos:line="6" pos:column="12"/></modifier></type><name pos:line="6" pos:column="12">tmp<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><name pos:line="6" pos:column="18">NULL<pos:position pos:line="6" pos:column="22"/></name></expr></init></decl>, <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="25">addr<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><name pos:line="6" pos:column="32">NULL<pos:position pos:line="6" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">ADDRESS<pos:position pos:line="7" pos:column="10"/></name> <modifier pos:line="7" pos:column="11">*<pos:position pos:line="7" pos:column="12"/></modifier><modifier pos:line="7" pos:column="12">*<pos:position pos:line="7" pos:column="13"/></modifier></type><name pos:line="7" pos:column="13">last<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><operator pos:line="7" pos:column="20">&amp;<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="21">tmp<pos:position pos:line="7" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">ADDRESS<pos:position pos:line="8" pos:column="10"/></name> <modifier pos:line="8" pos:column="11">*<pos:position pos:line="8" pos:column="12"/></modifier></type><name pos:line="8" pos:column="12">p<pos:position pos:line="8" pos:column="13"/></name></decl>, <modifier pos:line="8" pos:column="15">*<pos:position pos:line="8" pos:column="16"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="16">q<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">i<pos:position pos:line="9" pos:column="8"/></name></decl>;<pos:position pos:line="9" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">pgp_key_t<pos:position pos:line="10" pos:column="12"/></name> <modifier pos:line="10" pos:column="13">*<pos:position pos:line="10" pos:column="14"/></modifier></type><name pos:line="10" pos:column="14">k_info<pos:position pos:line="10" pos:column="20"/></name></decl>, <modifier pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="23">key<pos:position pos:line="10" pos:column="26"/></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="12" pos:column="3">const<pos:position pos:line="12" pos:column="8"/></specifier> <name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">fqdn<pos:position pos:line="12" pos:column="19"/></name> <init pos:line="12" pos:column="20">= <expr><call><name pos:line="12" pos:column="22">mutt_fqdn<pos:position pos:line="12" pos:column="31"/></name> <argument_list pos:line="12" pos:column="32">(<argument><expr><literal type="number" pos:line="12" pos:column="33">1<pos:position pos:line="12" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="36"/></decl_stmt>
  
  <for pos:line="14" pos:column="3">for <control pos:line="14" pos:column="7">(<init><expr><name pos:line="14" pos:column="8">i<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <literal type="number" pos:line="14" pos:column="12">0<pos:position pos:line="14" pos:column="13"/></literal></expr>;<pos:position pos:line="14" pos:column="14"/></init> <condition><expr><name pos:line="14" pos:column="15">i<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">&lt;<pos:position pos:line="14" pos:column="21"/></operator> <literal type="number" pos:line="14" pos:column="19">3<pos:position pos:line="14" pos:column="20"/></literal></expr>;<pos:position pos:line="14" pos:column="21"/></condition> <incr><expr><name pos:line="14" pos:column="22">i<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">++<pos:position pos:line="14" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="26"/></control> 
  <block pos:line="15" pos:column="3">{
    <switch pos:line="16" pos:column="5">switch <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">i<pos:position pos:line="16" pos:column="14"/></name></expr>)<pos:position pos:line="16" pos:column="15"/></condition>
    <block pos:line="17" pos:column="5">{
      <case pos:line="18" pos:column="7">case <expr><literal type="number" pos:line="18" pos:column="12">0<pos:position pos:line="18" pos:column="13"/></literal></expr>:<pos:position pos:line="18" pos:column="14"/></case> <expr_stmt><expr><name pos:line="18" pos:column="15">p<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="19">to<pos:position pos:line="18" pos:column="21"/></name></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt> <break pos:line="18" pos:column="23">break;<pos:position pos:line="18" pos:column="29"/></break>
      <case pos:line="19" pos:column="7">case <expr><literal type="number" pos:line="19" pos:column="12">1<pos:position pos:line="19" pos:column="13"/></literal></expr>:<pos:position pos:line="19" pos:column="14"/></case> <expr_stmt><expr><name pos:line="19" pos:column="15">p<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <name pos:line="19" pos:column="19">cc<pos:position pos:line="19" pos:column="21"/></name></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt> <break pos:line="19" pos:column="23">break;<pos:position pos:line="19" pos:column="29"/></break>
      <case pos:line="20" pos:column="7">case <expr><literal type="number" pos:line="20" pos:column="12">2<pos:position pos:line="20" pos:column="13"/></literal></expr>:<pos:position pos:line="20" pos:column="14"/></case> <expr_stmt><expr><name pos:line="20" pos:column="15">p<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <name pos:line="20" pos:column="19">bcc<pos:position pos:line="20" pos:column="22"/></name></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt> <break pos:line="20" pos:column="24">break;<pos:position pos:line="20" pos:column="30"/></break>
      <default pos:line="21" pos:column="7">default:<pos:position pos:line="21" pos:column="15"/></default> <expr_stmt><expr><call><name pos:line="21" pos:column="16">abort<pos:position pos:line="21" pos:column="21"/></name> <argument_list pos:line="21" pos:column="22">()<pos:position pos:line="21" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></switch>
    
    <expr_stmt><expr><operator pos:line="24" pos:column="5">*<pos:position pos:line="24" pos:column="6"/></operator><name pos:line="24" pos:column="6">last<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator> <call><name pos:line="24" pos:column="13">rfc822_cpy_adr<pos:position pos:line="24" pos:column="27"/></name> <argument_list pos:line="24" pos:column="28">(<argument><expr><name pos:line="24" pos:column="29">p<pos:position pos:line="24" pos:column="30"/></name></expr></argument>)<pos:position pos:line="24" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>
    <while pos:line="25" pos:column="5">while <condition pos:line="25" pos:column="11">(<expr><operator pos:line="25" pos:column="12">*<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">last<pos:position pos:line="25" pos:column="17"/></name></expr>)<pos:position pos:line="25" pos:column="18"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="7">last<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <operator pos:line="26" pos:column="14">&amp;<pos:position pos:line="26" pos:column="19"/></operator><operator pos:line="26" pos:column="15">(<pos:position pos:line="26" pos:column="16"/></operator><name><operator pos:line="26" pos:column="16">(<pos:position pos:line="26" pos:column="17"/></operator><operator pos:line="26" pos:column="17">*<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="18">last<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">)<pos:position pos:line="26" pos:column="23"/></operator><operator pos:line="26" pos:column="23">-&gt;<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="25">next<pos:position pos:line="26" pos:column="29"/></name></name><operator pos:line="26" pos:column="29">)<pos:position pos:line="26" pos:column="30"/></operator></expr>;<pos:position pos:line="26" pos:column="31"/></expr_stmt></block></while>
  }<pos:position pos:line="27" pos:column="4"/></block></for>

  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><name pos:line="29" pos:column="7">fqdn<pos:position pos:line="29" pos:column="11"/></name></expr>)<pos:position pos:line="29" pos:column="12"/></condition><then pos:line="29" pos:column="12">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="5">rfc822_qualify<pos:position pos:line="30" pos:column="19"/></name> <argument_list pos:line="30" pos:column="20">(<argument><expr><name pos:line="30" pos:column="21">tmp<pos:position pos:line="30" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="26">fqdn<pos:position pos:line="30" pos:column="30"/></name></expr></argument>)<pos:position pos:line="30" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="32"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="32" pos:column="3">tmp<pos:position pos:line="32" pos:column="6"/></name> <operator pos:line="32" pos:column="7">=<pos:position pos:line="32" pos:column="8"/></operator> <call><name pos:line="32" pos:column="9">mutt_remove_duplicates<pos:position pos:line="32" pos:column="31"/></name> <argument_list pos:line="32" pos:column="32">(<argument><expr><name pos:line="32" pos:column="33">tmp<pos:position pos:line="32" pos:column="36"/></name></expr></argument>)<pos:position pos:line="32" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="38"/></expr_stmt>
  
  <for pos:line="34" pos:column="3">for <control pos:line="34" pos:column="7">(<init><expr><name pos:line="34" pos:column="8">p<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">=<pos:position pos:line="34" pos:column="11"/></operator> <name pos:line="34" pos:column="12">tmp<pos:position pos:line="34" pos:column="15"/></name></expr>;<pos:position pos:line="34" pos:column="16"/></init> <condition><expr><name pos:line="34" pos:column="17">p<pos:position pos:line="34" pos:column="18"/></name></expr> ;<pos:position pos:line="34" pos:column="20"/></condition> <incr><expr><name pos:line="34" pos:column="21">p<pos:position pos:line="34" pos:column="22"/></name> <operator pos:line="34" pos:column="23">=<pos:position pos:line="34" pos:column="24"/></operator> <name><name pos:line="34" pos:column="25">p<pos:position pos:line="34" pos:column="26"/></name><operator pos:line="34" pos:column="26">-&gt;<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="28">next<pos:position pos:line="34" pos:column="32"/></name></name></expr></incr>)<pos:position pos:line="34" pos:column="33"/></control>
  <block pos:line="35" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="36" pos:column="5">char<pos:position pos:line="36" pos:column="9"/></name></type> <name><name pos:line="36" pos:column="10">buf<pos:position pos:line="36" pos:column="13"/></name><index pos:line="36" pos:column="13">[<expr><name pos:line="36" pos:column="14">LONG_STRING<pos:position pos:line="36" pos:column="25"/></name></expr>]<pos:position pos:line="36" pos:column="26"/></index></name></decl>;<pos:position pos:line="36" pos:column="27"/></decl_stmt>

    <expr_stmt><expr><name pos:line="38" pos:column="5">q<pos:position pos:line="38" pos:column="6"/></name> <operator pos:line="38" pos:column="7">=<pos:position pos:line="38" pos:column="8"/></operator> <name pos:line="38" pos:column="9">p<pos:position pos:line="38" pos:column="10"/></name></expr>;<pos:position pos:line="38" pos:column="11"/></expr_stmt>
    <expr_stmt><expr><name pos:line="39" pos:column="5">k_info<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator> <name pos:line="39" pos:column="14">NULL<pos:position pos:line="39" pos:column="18"/></name></expr>;<pos:position pos:line="39" pos:column="19"/></expr_stmt>

    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><operator pos:line="41" pos:column="9">(<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">keyID<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <call><name pos:line="41" pos:column="18">mutt_pgp_hook<pos:position pos:line="41" pos:column="31"/></name> <argument_list pos:line="41" pos:column="32">(<argument><expr><name pos:line="41" pos:column="33">p<pos:position pos:line="41" pos:column="34"/></name></expr></argument>)<pos:position pos:line="41" pos:column="35"/></argument_list></call><operator pos:line="41" pos:column="35">)<pos:position pos:line="41" pos:column="36"/></operator> <operator pos:line="41" pos:column="37">!=<pos:position pos:line="41" pos:column="39"/></operator> <name pos:line="41" pos:column="40">NULL<pos:position pos:line="41" pos:column="44"/></name></expr>)<pos:position pos:line="41" pos:column="45"/></condition><then pos:line="41" pos:column="45">
    <block pos:line="42" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="43" pos:column="7">int<pos:position pos:line="43" pos:column="10"/></name></type> <name pos:line="43" pos:column="11">r<pos:position pos:line="43" pos:column="12"/></name></decl>;<pos:position pos:line="43" pos:column="13"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="44" pos:column="7">snprintf<pos:position pos:line="44" pos:column="15"/></name> <argument_list pos:line="44" pos:column="16">(<argument><expr><name pos:line="44" pos:column="17">buf<pos:position pos:line="44" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="22">sizeof <argument_list pos:line="44" pos:column="29">(<argument><expr><name pos:line="44" pos:column="30">buf<pos:position pos:line="44" pos:column="33"/></name></expr></argument>)<pos:position pos:line="44" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="36">_<pos:position pos:line="44" pos:column="37"/></name><argument_list pos:line="44" pos:column="37">(<argument><expr><literal type="string" pos:line="44" pos:column="38">"Use keyID = \"%s\" for %s?"<pos:position pos:line="44" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="44" pos:column="69">keyID<pos:position pos:line="44" pos:column="74"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="76">p<pos:position pos:line="44" pos:column="77"/></name><operator pos:line="44" pos:column="77">-&gt;<pos:position pos:line="44" pos:column="82"/></operator><name pos:line="44" pos:column="79">mailbox<pos:position pos:line="44" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="88"/></expr_stmt>
      <if pos:line="45" pos:column="7">if <condition pos:line="45" pos:column="10">(<expr><operator pos:line="45" pos:column="11">(<pos:position pos:line="45" pos:column="12"/></operator><name pos:line="45" pos:column="12">r<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">=<pos:position pos:line="45" pos:column="15"/></operator> <call><name pos:line="45" pos:column="16">mutt_yesorno<pos:position pos:line="45" pos:column="28"/></name> <argument_list pos:line="45" pos:column="29">(<argument><expr><name pos:line="45" pos:column="30">buf<pos:position pos:line="45" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="35">M_YES<pos:position pos:line="45" pos:column="40"/></name></expr></argument>)<pos:position pos:line="45" pos:column="41"/></argument_list></call><operator pos:line="45" pos:column="41">)<pos:position pos:line="45" pos:column="42"/></operator> <operator pos:line="45" pos:column="43">==<pos:position pos:line="45" pos:column="45"/></operator> <name pos:line="45" pos:column="46">M_YES<pos:position pos:line="45" pos:column="51"/></name></expr>)<pos:position pos:line="45" pos:column="52"/></condition><then pos:line="45" pos:column="52">
      <block pos:line="46" pos:column="7">{
	<comment type="block" pos:line="47" pos:column="9">/* check for e-mail address */</comment>
	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><operator pos:line="48" pos:column="13">(<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="14">t<pos:position pos:line="48" pos:column="15"/></name> <operator pos:line="48" pos:column="16">=<pos:position pos:line="48" pos:column="17"/></operator> <call><name pos:line="48" pos:column="18">strchr<pos:position pos:line="48" pos:column="24"/></name> <argument_list pos:line="48" pos:column="25">(<argument><expr><name pos:line="48" pos:column="26">keyID<pos:position pos:line="48" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="48" pos:column="33">'@'<pos:position pos:line="48" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="37"/></argument_list></call><operator pos:line="48" pos:column="37">)<pos:position pos:line="48" pos:column="38"/></operator> <operator pos:line="48" pos:column="39">&amp;&amp;<pos:position pos:line="48" pos:column="49"/></operator> 
	    <operator pos:line="49" pos:column="13">(<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="14">addr<pos:position pos:line="49" pos:column="18"/></name> <operator pos:line="49" pos:column="19">=<pos:position pos:line="49" pos:column="20"/></operator> <call><name pos:line="49" pos:column="21">rfc822_parse_adrlist<pos:position pos:line="49" pos:column="41"/></name> <argument_list pos:line="49" pos:column="42">(<argument><expr><name pos:line="49" pos:column="43">NULL<pos:position pos:line="49" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="49">keyID<pos:position pos:line="49" pos:column="54"/></name></expr></argument>)<pos:position pos:line="49" pos:column="55"/></argument_list></call><operator pos:line="49" pos:column="55">)<pos:position pos:line="49" pos:column="56"/></operator></expr>)<pos:position pos:line="49" pos:column="57"/></condition><then pos:line="49" pos:column="57">
	<block pos:line="50" pos:column="9">{
	  <if pos:line="51" pos:column="11">if <condition pos:line="51" pos:column="14">(<expr><name pos:line="51" pos:column="15">fqdn<pos:position pos:line="51" pos:column="19"/></name></expr>)<pos:position pos:line="51" pos:column="20"/></condition><then pos:line="51" pos:column="20"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="21">rfc822_qualify<pos:position pos:line="51" pos:column="35"/></name> <argument_list pos:line="51" pos:column="36">(<argument><expr><name pos:line="51" pos:column="37">addr<pos:position pos:line="51" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="43">fqdn<pos:position pos:line="51" pos:column="47"/></name></expr></argument>)<pos:position pos:line="51" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="49"/></expr_stmt></block></then></if>
	  <expr_stmt><expr><name pos:line="52" pos:column="11">q<pos:position pos:line="52" pos:column="12"/></name> <operator pos:line="52" pos:column="13">=<pos:position pos:line="52" pos:column="14"/></operator> <name pos:line="52" pos:column="15">addr<pos:position pos:line="52" pos:column="19"/></name></expr>;<pos:position pos:line="52" pos:column="20"/></expr_stmt>
	}<pos:position pos:line="53" pos:column="10"/></block></then>
	<else pos:line="54" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="11">k_info<pos:position pos:line="55" pos:column="17"/></name> <operator pos:line="55" pos:column="18">=<pos:position pos:line="55" pos:column="19"/></operator> <call><name pos:line="55" pos:column="20">pgp_getkeybystr<pos:position pos:line="55" pos:column="35"/></name> <argument_list pos:line="55" pos:column="36">(<argument><expr><name pos:line="55" pos:column="37">keyID<pos:position pos:line="55" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="44">KEYFLAG_CANENCRYPT<pos:position pos:line="55" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="64">PGP_PUBRING<pos:position pos:line="55" pos:column="75"/></name></expr></argument>)<pos:position pos:line="55" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="77"/></expr_stmt></block></else></if>
      }<pos:position pos:line="56" pos:column="8"/></block></then>
      <elseif pos:line="57" pos:column="7">else <if pos:line="57" pos:column="12">if <condition pos:line="57" pos:column="15">(<expr><name pos:line="57" pos:column="16">r<pos:position pos:line="57" pos:column="17"/></name> <operator pos:line="57" pos:column="18">==<pos:position pos:line="57" pos:column="20"/></operator> <operator pos:line="57" pos:column="21">-<pos:position pos:line="57" pos:column="22"/></operator><literal type="number" pos:line="57" pos:column="22">1<pos:position pos:line="57" pos:column="23"/></literal></expr>)<pos:position pos:line="57" pos:column="24"/></condition><then pos:line="57" pos:column="24">
      <block pos:line="58" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="59" pos:column="9">safe_free<pos:position pos:line="59" pos:column="18"/></name> <argument_list pos:line="59" pos:column="19">(<argument><expr><operator pos:line="59" pos:column="20">(<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="21">void<pos:position pos:line="59" pos:column="25"/></name> <operator pos:line="59" pos:column="26">*<pos:position pos:line="59" pos:column="27"/></operator><operator pos:line="59" pos:column="27">*<pos:position pos:line="59" pos:column="28"/></operator><operator pos:line="59" pos:column="28">)<pos:position pos:line="59" pos:column="29"/></operator> <operator pos:line="59" pos:column="30">&amp;<pos:position pos:line="59" pos:column="35"/></operator><name pos:line="59" pos:column="31">keylist<pos:position pos:line="59" pos:column="38"/></name></expr></argument>)<pos:position pos:line="59" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="60" pos:column="9">rfc822_free_address<pos:position pos:line="60" pos:column="28"/></name> <argument_list pos:line="60" pos:column="29">(<argument><expr><operator pos:line="60" pos:column="30">&amp;<pos:position pos:line="60" pos:column="35"/></operator><name pos:line="60" pos:column="31">tmp<pos:position pos:line="60" pos:column="34"/></name></expr></argument>)<pos:position pos:line="60" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="61" pos:column="9">rfc822_free_address<pos:position pos:line="61" pos:column="28"/></name> <argument_list pos:line="61" pos:column="29">(<argument><expr><operator pos:line="61" pos:column="30">&amp;<pos:position pos:line="61" pos:column="35"/></operator><name pos:line="61" pos:column="31">addr<pos:position pos:line="61" pos:column="35"/></name></expr></argument>)<pos:position pos:line="61" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="37"/></expr_stmt>
	<return pos:line="62" pos:column="9">return <expr><name pos:line="62" pos:column="16">NULL<pos:position pos:line="62" pos:column="20"/></name></expr>;<pos:position pos:line="62" pos:column="21"/></return>
      }<pos:position pos:line="63" pos:column="8"/></block></then></if></elseif></if>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>

    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name pos:line="66" pos:column="9">k_info<pos:position pos:line="66" pos:column="15"/></name> <operator pos:line="66" pos:column="16">==<pos:position pos:line="66" pos:column="18"/></operator> <name pos:line="66" pos:column="19">NULL<pos:position pos:line="66" pos:column="23"/></name></expr>)<pos:position pos:line="66" pos:column="24"/></condition><then pos:line="66" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="7">pgp_invoke_getkeys<pos:position pos:line="67" pos:column="25"/></name> <argument_list pos:line="67" pos:column="26">(<argument><expr><name pos:line="67" pos:column="27">q<pos:position pos:line="67" pos:column="28"/></name></expr></argument>)<pos:position pos:line="67" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="30"/></expr_stmt></block></then></if>

    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><name pos:line="69" pos:column="9">k_info<pos:position pos:line="69" pos:column="15"/></name> <operator pos:line="69" pos:column="16">==<pos:position pos:line="69" pos:column="18"/></operator> <name pos:line="69" pos:column="19">NULL<pos:position pos:line="69" pos:column="23"/></name> <operator pos:line="69" pos:column="24">&amp;&amp;<pos:position pos:line="69" pos:column="34"/></operator> <operator pos:line="69" pos:column="27">(<pos:position pos:line="69" pos:column="28"/></operator><name pos:line="69" pos:column="28">k_info<pos:position pos:line="69" pos:column="34"/></name> <operator pos:line="69" pos:column="35">=<pos:position pos:line="69" pos:column="36"/></operator> <call><name pos:line="69" pos:column="37">pgp_getkeybyaddr<pos:position pos:line="69" pos:column="53"/></name> <argument_list pos:line="69" pos:column="54">(<argument><expr><name pos:line="69" pos:column="55">q<pos:position pos:line="69" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="58">KEYFLAG_CANENCRYPT<pos:position pos:line="69" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="78">PGP_PUBRING<pos:position pos:line="69" pos:column="89"/></name></expr></argument>)<pos:position pos:line="69" pos:column="90"/></argument_list></call><operator pos:line="69" pos:column="90">)<pos:position pos:line="69" pos:column="91"/></operator> <operator pos:line="69" pos:column="92">==<pos:position pos:line="69" pos:column="94"/></operator> <name pos:line="69" pos:column="95">NULL<pos:position pos:line="69" pos:column="99"/></name></expr>)<pos:position pos:line="69" pos:column="100"/></condition><then pos:line="69" pos:column="100">
    <block pos:line="70" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="71" pos:column="7">snprintf<pos:position pos:line="71" pos:column="15"/></name> <argument_list pos:line="71" pos:column="16">(<argument><expr><name pos:line="71" pos:column="17">buf<pos:position pos:line="71" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="71" pos:column="22">sizeof <argument_list pos:line="71" pos:column="29">(<argument><expr><name pos:line="71" pos:column="30">buf<pos:position pos:line="71" pos:column="33"/></name></expr></argument>)<pos:position pos:line="71" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="71" pos:column="36">_<pos:position pos:line="71" pos:column="37"/></name><argument_list pos:line="71" pos:column="37">(<argument><expr><literal type="string" pos:line="71" pos:column="38">"Enter keyID for %s: "<pos:position pos:line="71" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="63">q<pos:position pos:line="71" pos:column="64"/></name><operator pos:line="71" pos:column="64">-&gt;<pos:position pos:line="71" pos:column="69"/></operator><name pos:line="71" pos:column="66">mailbox<pos:position pos:line="71" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="75"/></expr_stmt>

      <if pos:line="73" pos:column="7">if <condition pos:line="73" pos:column="10">(<expr><operator pos:line="73" pos:column="11">(<pos:position pos:line="73" pos:column="12"/></operator><name pos:line="73" pos:column="12">key<pos:position pos:line="73" pos:column="15"/></name> <operator pos:line="73" pos:column="16">=<pos:position pos:line="73" pos:column="17"/></operator> <call><name pos:line="73" pos:column="18">pgp_ask_for_key<pos:position pos:line="73" pos:column="33"/></name> <argument_list pos:line="73" pos:column="34">(<argument><expr><name pos:line="73" pos:column="35">buf<pos:position pos:line="73" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="40">q<pos:position pos:line="73" pos:column="41"/></name><operator pos:line="73" pos:column="41">-&gt;<pos:position pos:line="73" pos:column="46"/></operator><name pos:line="73" pos:column="43">mailbox<pos:position pos:line="73" pos:column="50"/></name></name></expr></argument>,
				  <argument><expr><name pos:line="74" pos:column="35">KEYFLAG_CANENCRYPT<pos:position pos:line="74" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="55">PGP_PUBRING<pos:position pos:line="74" pos:column="66"/></name></expr></argument>)<pos:position pos:line="74" pos:column="67"/></argument_list></call><operator pos:line="74" pos:column="67">)<pos:position pos:line="74" pos:column="68"/></operator> <operator pos:line="74" pos:column="69">==<pos:position pos:line="74" pos:column="71"/></operator> <name pos:line="74" pos:column="72">NULL<pos:position pos:line="74" pos:column="76"/></name></expr>)<pos:position pos:line="74" pos:column="77"/></condition><then pos:line="74" pos:column="77">
      <block pos:line="75" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="76" pos:column="9">safe_free<pos:position pos:line="76" pos:column="18"/></name> <argument_list pos:line="76" pos:column="19">(<argument><expr><operator pos:line="76" pos:column="20">(<pos:position pos:line="76" pos:column="21"/></operator><name pos:line="76" pos:column="21">void<pos:position pos:line="76" pos:column="25"/></name> <operator pos:line="76" pos:column="26">*<pos:position pos:line="76" pos:column="27"/></operator><operator pos:line="76" pos:column="27">*<pos:position pos:line="76" pos:column="28"/></operator><operator pos:line="76" pos:column="28">)<pos:position pos:line="76" pos:column="29"/></operator><operator pos:line="76" pos:column="29">&amp;<pos:position pos:line="76" pos:column="34"/></operator><name pos:line="76" pos:column="30">keylist<pos:position pos:line="76" pos:column="37"/></name></expr></argument>)<pos:position pos:line="76" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="77" pos:column="9">rfc822_free_address<pos:position pos:line="77" pos:column="28"/></name> <argument_list pos:line="77" pos:column="29">(<argument><expr><operator pos:line="77" pos:column="30">&amp;<pos:position pos:line="77" pos:column="35"/></operator><name pos:line="77" pos:column="31">tmp<pos:position pos:line="77" pos:column="34"/></name></expr></argument>)<pos:position pos:line="77" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="78" pos:column="9">rfc822_free_address<pos:position pos:line="78" pos:column="28"/></name> <argument_list pos:line="78" pos:column="29">(<argument><expr><operator pos:line="78" pos:column="30">&amp;<pos:position pos:line="78" pos:column="35"/></operator><name pos:line="78" pos:column="31">addr<pos:position pos:line="78" pos:column="35"/></name></expr></argument>)<pos:position pos:line="78" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="37"/></expr_stmt>
	<return pos:line="79" pos:column="9">return <expr><name pos:line="79" pos:column="16">NULL<pos:position pos:line="79" pos:column="20"/></name></expr>;<pos:position pos:line="79" pos:column="21"/></return>
      }<pos:position pos:line="80" pos:column="8"/></block></then></if>
    }<pos:position pos:line="81" pos:column="6"/></block></then>
    <else pos:line="82" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="83" pos:column="7">key<pos:position pos:line="83" pos:column="10"/></name> <operator pos:line="83" pos:column="11">=<pos:position pos:line="83" pos:column="12"/></operator> <name pos:line="83" pos:column="13">k_info<pos:position pos:line="83" pos:column="19"/></name></expr>;<pos:position pos:line="83" pos:column="20"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="85" pos:column="5">keyID<pos:position pos:line="85" pos:column="10"/></name> <operator pos:line="85" pos:column="11">=<pos:position pos:line="85" pos:column="12"/></operator> <call><name pos:line="85" pos:column="13">pgp_keyid<pos:position pos:line="85" pos:column="22"/></name> <argument_list pos:line="85" pos:column="23">(<argument><expr><name pos:line="85" pos:column="24">key<pos:position pos:line="85" pos:column="27"/></name></expr></argument>)<pos:position pos:line="85" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="29"/></expr_stmt>
    
    <expr_stmt><expr><name pos:line="87" pos:column="5">keylist_size<pos:position pos:line="87" pos:column="17"/></name> <operator pos:line="87" pos:column="18">+=<pos:position pos:line="87" pos:column="20"/></operator> <call><name pos:line="87" pos:column="21">mutt_strlen<pos:position pos:line="87" pos:column="32"/></name> <argument_list pos:line="87" pos:column="33">(<argument><expr><name pos:line="87" pos:column="34">keyID<pos:position pos:line="87" pos:column="39"/></name></expr></argument>)<pos:position pos:line="87" pos:column="40"/></argument_list></call> <operator pos:line="87" pos:column="41">+<pos:position pos:line="87" pos:column="42"/></operator> <literal type="number" pos:line="87" pos:column="43">4<pos:position pos:line="87" pos:column="44"/></literal></expr>;<pos:position pos:line="87" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="88" pos:column="5">safe_realloc<pos:position pos:line="88" pos:column="17"/></name> <argument_list pos:line="88" pos:column="18">(<argument><expr><operator pos:line="88" pos:column="19">(<pos:position pos:line="88" pos:column="20"/></operator><name pos:line="88" pos:column="20">void<pos:position pos:line="88" pos:column="24"/></name> <operator pos:line="88" pos:column="25">*<pos:position pos:line="88" pos:column="26"/></operator><operator pos:line="88" pos:column="26">*<pos:position pos:line="88" pos:column="27"/></operator><operator pos:line="88" pos:column="27">)<pos:position pos:line="88" pos:column="28"/></operator><operator pos:line="88" pos:column="28">&amp;<pos:position pos:line="88" pos:column="33"/></operator><name pos:line="88" pos:column="29">keylist<pos:position pos:line="88" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="38">keylist_size<pos:position pos:line="88" pos:column="50"/></name></expr></argument>)<pos:position pos:line="88" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="89" pos:column="5">sprintf<pos:position pos:line="89" pos:column="12"/></name> <argument_list pos:line="89" pos:column="13">(<argument><expr><name pos:line="89" pos:column="14">keylist<pos:position pos:line="89" pos:column="21"/></name> <operator pos:line="89" pos:column="22">+<pos:position pos:line="89" pos:column="23"/></operator> <name pos:line="89" pos:column="24">keylist_used<pos:position pos:line="89" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="38">"%s0x%s"<pos:position pos:line="89" pos:column="46"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="89" pos:column="48">keylist_used<pos:position pos:line="89" pos:column="60"/></name></expr> ?<pos:position pos:line="89" pos:column="62"/></condition><then pos:line="89" pos:column="62"> <expr><literal type="string" pos:line="89" pos:column="63">" "<pos:position pos:line="89" pos:column="66"/></literal></expr> <pos:position pos:line="89" pos:column="67"/></then><else pos:line="89" pos:column="67">: <expr><literal type="string" pos:line="89" pos:column="69">""<pos:position pos:line="89" pos:column="71"/></literal></expr></else></ternary></expr></argument>,	<comment type="block" pos:line="89" pos:column="73">/* __SPRINTF_CHECKED__ */</comment>
	     <argument><expr><name pos:line="90" pos:column="14">keyID<pos:position pos:line="90" pos:column="19"/></name></expr></argument>)<pos:position pos:line="90" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="91" pos:column="5">keylist_used<pos:position pos:line="91" pos:column="17"/></name> <operator pos:line="91" pos:column="18">=<pos:position pos:line="91" pos:column="19"/></operator> <call><name pos:line="91" pos:column="20">mutt_strlen<pos:position pos:line="91" pos:column="31"/></name> <argument_list pos:line="91" pos:column="32">(<argument><expr><name pos:line="91" pos:column="33">keylist<pos:position pos:line="91" pos:column="40"/></name></expr></argument>)<pos:position pos:line="91" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="42"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="93" pos:column="5">pgp_free_key<pos:position pos:line="93" pos:column="17"/></name> <argument_list pos:line="93" pos:column="18">(<argument><expr><operator pos:line="93" pos:column="19">&amp;<pos:position pos:line="93" pos:column="24"/></operator><name pos:line="93" pos:column="20">key<pos:position pos:line="93" pos:column="23"/></name></expr></argument>)<pos:position pos:line="93" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="94" pos:column="5">rfc822_free_address<pos:position pos:line="94" pos:column="24"/></name> <argument_list pos:line="94" pos:column="25">(<argument><expr><operator pos:line="94" pos:column="26">&amp;<pos:position pos:line="94" pos:column="31"/></operator><name pos:line="94" pos:column="27">addr<pos:position pos:line="94" pos:column="31"/></name></expr></argument>)<pos:position pos:line="94" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="33"/></expr_stmt>

  }<pos:position pos:line="96" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="97" pos:column="3">rfc822_free_address<pos:position pos:line="97" pos:column="22"/></name> <argument_list pos:line="97" pos:column="23">(<argument><expr><operator pos:line="97" pos:column="24">&amp;<pos:position pos:line="97" pos:column="29"/></operator><name pos:line="97" pos:column="25">tmp<pos:position pos:line="97" pos:column="28"/></name></expr></argument>)<pos:position pos:line="97" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="30"/></expr_stmt>
  <return pos:line="98" pos:column="3">return <expr><operator pos:line="98" pos:column="10">(<pos:position pos:line="98" pos:column="11"/></operator><name pos:line="98" pos:column="11">keylist<pos:position pos:line="98" pos:column="18"/></name><operator pos:line="98" pos:column="18">)<pos:position pos:line="98" pos:column="19"/></operator></expr>;<pos:position pos:line="98" pos:column="20"/></return>
}<pos:position pos:line="99" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1265_mutt-1.4.2.3.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">imap_copy_messages<pos:position pos:line="1" pos:column="23"/></name> <argument_list pos:line="1" pos:column="24">(<argument><expr><name pos:line="1" pos:column="25">CONTEXT<pos:position pos:line="1" pos:column="32"/></name><operator pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></operator> <name pos:line="1" pos:column="34">ctx<pos:position pos:line="1" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="39">HEADER<pos:position pos:line="1" pos:column="45"/></name><operator pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></operator> <name pos:line="1" pos:column="47">h<pos:position pos:line="1" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name><operator pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></operator> <name pos:line="1" pos:column="56">dest<pos:position pos:line="1" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="62">int<pos:position pos:line="1" pos:column="65"/></name> <operator pos:line="1" pos:column="66">delete<pos:position pos:line="1" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="1" pos:column="73"/></argument_list>
<argument_list pos:line="2" pos:column="1">{
  <argument><expr><name pos:line="3" pos:column="3">IMAP_DATA<pos:position pos:line="3" pos:column="12"/></name><operator pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></operator> <name pos:line="3" pos:column="14">idata<pos:position pos:line="3" pos:column="19"/></name></expr></argument>;
  <argument><expr><name pos:line="4" pos:column="3">BUFFER<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">cmd<pos:position pos:line="4" pos:column="13"/></name></expr></argument>;
  <argument><expr><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <name><name pos:line="5" pos:column="8">uid<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><literal type="number" pos:line="5" pos:column="12">11<pos:position pos:line="5" pos:column="14"/></literal></expr>]<pos:position pos:line="5" pos:column="15"/></index></name></expr></argument>;
  <argument><expr><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <name><name pos:line="6" pos:column="8">mbox<pos:position pos:line="6" pos:column="12"/></name><index pos:line="6" pos:column="12">[<expr><name pos:line="6" pos:column="13">LONG_STRING<pos:position pos:line="6" pos:column="24"/></name></expr>]<pos:position pos:line="6" pos:column="25"/></index></name></expr></argument>;
  <argument><expr><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <name><name pos:line="7" pos:column="8">mmbox<pos:position pos:line="7" pos:column="13"/></name><index pos:line="7" pos:column="13">[<expr><name pos:line="7" pos:column="14">LONG_STRING<pos:position pos:line="7" pos:column="25"/></name></expr>]<pos:position pos:line="7" pos:column="26"/></index></name></expr></argument>;
  <argument><expr><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name> <name pos:line="8" pos:column="7">rc<pos:position pos:line="8" pos:column="9"/></name></expr></argument>;
  <argument><expr><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name> <name pos:line="9" pos:column="7">n<pos:position pos:line="9" pos:column="8"/></name></expr></argument>;
  <argument><expr><name pos:line="10" pos:column="3">IMAP_MBOX<pos:position pos:line="10" pos:column="12"/></name> <name pos:line="10" pos:column="13">mx<pos:position pos:line="10" pos:column="15"/></name></expr></argument>;

  <argument><expr><name pos:line="12" pos:column="3">idata<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <operator pos:line="12" pos:column="11">(<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="12">IMAP_DATA<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">*<pos:position pos:line="12" pos:column="22"/></operator><operator pos:line="12" pos:column="22">)<pos:position pos:line="12" pos:column="23"/></operator> <name><name pos:line="12" pos:column="24">ctx<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">-&gt;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="29">data<pos:position pos:line="12" pos:column="33"/></name></name></expr></argument>;

  if <argument><expr><operator pos:line="14" pos:column="6">(<pos:position pos:line="14" pos:column="7"/></operator><call><name pos:line="14" pos:column="7">imap_parse_path<pos:position pos:line="14" pos:column="22"/></name> <argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">dest<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="30">&amp;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="31">mx<pos:position pos:line="14" pos:column="33"/></name></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call><operator pos:line="14" pos:column="34">)<pos:position pos:line="14" pos:column="35"/></operator>
  <block pos:line="15" pos:column="3">{
    <expr><call><name pos:line="16" pos:column="5">dprint<pos:position pos:line="16" pos:column="11"/></name> <argument_list pos:line="16" pos:column="12">(<argument><expr><literal type="number" pos:line="16" pos:column="13">1<pos:position pos:line="16" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="16">(<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">debugfile<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">,<pos:position pos:line="16" pos:column="27"/></operator> <literal type="string" pos:line="16" pos:column="28">"imap_copy_messages: bad destination %s\n"<pos:position pos:line="16" pos:column="70"/></literal><operator pos:line="16" pos:column="70">,<pos:position pos:line="16" pos:column="71"/></operator> <name pos:line="16" pos:column="72">dest<pos:position pos:line="16" pos:column="76"/></name><operator pos:line="16" pos:column="76">)<pos:position pos:line="16" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="16" pos:column="78"/></argument_list></call></expr>;
    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">-<pos:position pos:line="17" pos:column="13"/></operator><literal type="number" pos:line="17" pos:column="13">1<pos:position pos:line="17" pos:column="14"/></literal></expr>;<pos:position pos:line="17" pos:column="15"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></expr></argument>

  <comment type="block" pos:line="20" pos:column="3">/* check that the save-to folder is in the same account */</comment>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><operator pos:line="21" pos:column="7">!<pos:position pos:line="21" pos:column="8"/></operator><call><name pos:line="21" pos:column="8">mutt_account_match<pos:position pos:line="21" pos:column="26"/></name> <argument_list pos:line="21" pos:column="27">(<argument><expr><operator pos:line="21" pos:column="28">&amp;<pos:position pos:line="21" pos:column="33"/></operator><operator pos:line="21" pos:column="29">(<pos:position pos:line="21" pos:column="30"/></operator><name><name pos:line="21" pos:column="30">CTX_DATA<pos:position pos:line="21" pos:column="38"/></name><operator pos:line="21" pos:column="38">-&gt;<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="40">conn<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">-&gt;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="46">account<pos:position pos:line="21" pos:column="53"/></name></name><operator pos:line="21" pos:column="53">)<pos:position pos:line="21" pos:column="54"/></operator></expr></argument>, <argument><expr><operator pos:line="21" pos:column="56">&amp;<pos:position pos:line="21" pos:column="61"/></operator><operator pos:line="21" pos:column="57">(<pos:position pos:line="21" pos:column="58"/></operator><name><name pos:line="21" pos:column="58">mx<pos:position pos:line="21" pos:column="60"/></name><operator pos:line="21" pos:column="60">.<pos:position pos:line="21" pos:column="61"/></operator><name pos:line="21" pos:column="61">account<pos:position pos:line="21" pos:column="68"/></name></name><operator pos:line="21" pos:column="68">)<pos:position pos:line="21" pos:column="69"/></operator></expr></argument>)<pos:position pos:line="21" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="71"/></condition><then pos:line="21" pos:column="71">
  <expr_stmt><expr><block pos:line="22" pos:column="3">{
    <expr><call><name pos:line="23" pos:column="5">dprint<pos:position pos:line="23" pos:column="11"/></name> <argument_list pos:line="23" pos:column="12">(<argument><expr><literal type="number" pos:line="23" pos:column="13">3<pos:position pos:line="23" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">debugfile<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">,<pos:position pos:line="23" pos:column="27"/></operator> <literal type="string" pos:line="23" pos:column="28">"imap_copy_messages: %s not same server as %s\n"<pos:position pos:line="23" pos:column="76"/></literal><operator pos:line="23" pos:column="76">,<pos:position pos:line="23" pos:column="77"/></operator>
      <name pos:line="24" pos:column="7">dest<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">,<pos:position pos:line="24" pos:column="12"/></operator> <name><name pos:line="24" pos:column="13">ctx<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">-&gt;<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="18">path<pos:position pos:line="24" pos:column="22"/></name></name><operator pos:line="24" pos:column="22">)<pos:position pos:line="24" pos:column="23"/></operator></expr></argument>)<pos:position pos:line="24" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="25"/></block></expr></expr_stmt></then></if></argument_list></decl></decl_stmt>
    <return pos:line="25" pos:column="5">return <expr><literal type="number" pos:line="25" pos:column="12">1<pos:position pos:line="25" pos:column="13"/></literal></expr>;<pos:position pos:line="25" pos:column="14"/></return>
  }

  if <expr_stmt><expr><operator pos:line="28" pos:column="6">(<pos:position pos:line="28" pos:column="7"/></operator><name pos:line="28" pos:column="7">h<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">&amp;&amp;<pos:position pos:line="28" pos:column="19"/></operator> <name><name pos:line="28" pos:column="12">h<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">-&gt;<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="15">attach_del<pos:position pos:line="28" pos:column="25"/></name></name><operator pos:line="28" pos:column="25">)<pos:position pos:line="28" pos:column="26"/></operator>
  <block pos:line="29" pos:column="3">{
    <expr><call><name pos:line="30" pos:column="5">dprint<pos:position pos:line="30" pos:column="11"/></name> <argument_list pos:line="30" pos:column="12">(<argument><expr><literal type="number" pos:line="30" pos:column="13">3<pos:position pos:line="30" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="30" pos:column="16">(<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="17">debugfile<pos:position pos:line="30" pos:column="26"/></name><operator pos:line="30" pos:column="26">,<pos:position pos:line="30" pos:column="27"/></operator> <literal type="string" pos:line="30" pos:column="28">"imap_copy_messages: Message contains attachments to be deleted\n"<pos:position pos:line="30" pos:column="94"/></literal><operator pos:line="30" pos:column="94">)<pos:position pos:line="30" pos:column="95"/></operator></expr></argument>)<pos:position pos:line="30" pos:column="96"/></argument_list></call></expr>;
    <return pos:line="31" pos:column="5">return <expr><literal type="number" pos:line="31" pos:column="12">1<pos:position pos:line="31" pos:column="13"/></literal></expr>;<pos:position pos:line="31" pos:column="14"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></expr></expr_stmt>
  
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">imap_fix_path<pos:position pos:line="34" pos:column="16"/></name> <argument_list pos:line="34" pos:column="17">(<argument><expr><name pos:line="34" pos:column="18">idata<pos:position pos:line="34" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="25">mx<pos:position pos:line="34" pos:column="27"/></name><operator pos:line="34" pos:column="27">.<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="28">mbox<pos:position pos:line="34" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="34">mbox<pos:position pos:line="34" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="40">sizeof <argument_list pos:line="34" pos:column="47">(<argument><expr><name pos:line="34" pos:column="48">mbox<pos:position pos:line="34" pos:column="52"/></name></expr></argument>)<pos:position pos:line="34" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="55"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="36" pos:column="3">memset<pos:position pos:line="36" pos:column="9"/></name> <argument_list pos:line="36" pos:column="10">(<argument><expr><operator pos:line="36" pos:column="11">&amp;<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="12">cmd<pos:position pos:line="36" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="17">0<pos:position pos:line="36" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="20">sizeof <argument_list pos:line="36" pos:column="27">(<argument><expr><name pos:line="36" pos:column="28">cmd<pos:position pos:line="36" pos:column="31"/></name></expr></argument>)<pos:position pos:line="36" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">mutt_buffer_addstr<pos:position pos:line="37" pos:column="21"/></name> <argument_list pos:line="37" pos:column="22">(<argument><expr><operator pos:line="37" pos:column="23">&amp;<pos:position pos:line="37" pos:column="28"/></operator><name pos:line="37" pos:column="24">cmd<pos:position pos:line="37" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="29">"UID COPY "<pos:position pos:line="37" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="42"/></expr_stmt>

  <comment type="block" pos:line="39" pos:column="3">/* Null HEADER* means copy tagged messages */</comment>
  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><operator pos:line="40" pos:column="7">!<pos:position pos:line="40" pos:column="8"/></operator><name pos:line="40" pos:column="8">h<pos:position pos:line="40" pos:column="9"/></name></expr>)<pos:position pos:line="40" pos:column="10"/></condition><then pos:line="40" pos:column="10">
  <block pos:line="41" pos:column="3">{
    <comment type="block" pos:line="42" pos:column="5">/* if any messages have attachments to delete, fall through to FETCH
     * and APPEND. TODO: Copy what we can with COPY, fall through for the
     * remainder. */</comment>
    <for pos:line="45" pos:column="5">for <control pos:line="45" pos:column="9">(<init><expr><name pos:line="45" pos:column="10">n<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator> <literal type="number" pos:line="45" pos:column="14">0<pos:position pos:line="45" pos:column="15"/></literal></expr>;<pos:position pos:line="45" pos:column="16"/></init> <condition><expr><name pos:line="45" pos:column="17">n<pos:position pos:line="45" pos:column="18"/></name> <operator pos:line="45" pos:column="19">&lt;<pos:position pos:line="45" pos:column="23"/></operator> <name><name pos:line="45" pos:column="21">ctx<pos:position pos:line="45" pos:column="24"/></name><operator pos:line="45" pos:column="24">-&gt;<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="26">msgcount<pos:position pos:line="45" pos:column="34"/></name></name></expr>;<pos:position pos:line="45" pos:column="35"/></condition> <incr><expr><name pos:line="45" pos:column="36">n<pos:position pos:line="45" pos:column="37"/></name><operator pos:line="45" pos:column="37">++<pos:position pos:line="45" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="45" pos:column="40"/></control>
    <block pos:line="46" pos:column="5">{
      <if pos:line="47" pos:column="7">if <condition pos:line="47" pos:column="10">(<expr><name><name pos:line="47" pos:column="11">ctx<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">-&gt;<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="16">hdrs<pos:position pos:line="47" pos:column="20"/></name><index pos:line="47" pos:column="20">[<expr><name pos:line="47" pos:column="21">n<pos:position pos:line="47" pos:column="22"/></name></expr>]<pos:position pos:line="47" pos:column="23"/></index></name><operator pos:line="47" pos:column="23">-&gt;<pos:position pos:line="47" pos:column="28"/></operator><name pos:line="47" pos:column="25">tagged<pos:position pos:line="47" pos:column="31"/></name> <operator pos:line="47" pos:column="32">&amp;&amp;<pos:position pos:line="47" pos:column="42"/></operator> <name><name pos:line="47" pos:column="35">ctx<pos:position pos:line="47" pos:column="38"/></name><operator pos:line="47" pos:column="38">-&gt;<pos:position pos:line="47" pos:column="43"/></operator><name pos:line="47" pos:column="40">hdrs<pos:position pos:line="47" pos:column="44"/></name><index pos:line="47" pos:column="44">[<expr><name pos:line="47" pos:column="45">n<pos:position pos:line="47" pos:column="46"/></name></expr>]<pos:position pos:line="47" pos:column="47"/></index></name><operator pos:line="47" pos:column="47">-&gt;<pos:position pos:line="47" pos:column="52"/></operator><name pos:line="47" pos:column="49">attach_del<pos:position pos:line="47" pos:column="59"/></name></expr>)<pos:position pos:line="47" pos:column="60"/></condition><then pos:line="47" pos:column="60">
      <block pos:line="48" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="49" pos:column="9">dprint<pos:position pos:line="49" pos:column="15"/></name> <argument_list pos:line="49" pos:column="16">(<argument><expr><literal type="number" pos:line="49" pos:column="17">3<pos:position pos:line="49" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="49" pos:column="20">(<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="21">debugfile<pos:position pos:line="49" pos:column="30"/></name><operator pos:line="49" pos:column="30">,<pos:position pos:line="49" pos:column="31"/></operator> <literal type="string" pos:line="49" pos:column="32">"imap_copy_messages: Message contains attachments to be deleted\n"<pos:position pos:line="49" pos:column="98"/></literal><operator pos:line="49" pos:column="98">)<pos:position pos:line="49" pos:column="99"/></operator></expr></argument>)<pos:position pos:line="49" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="101"/></expr_stmt>
	<return pos:line="50" pos:column="9">return <expr><literal type="number" pos:line="50" pos:column="16">1<pos:position pos:line="50" pos:column="17"/></literal></expr>;<pos:position pos:line="50" pos:column="18"/></return>
      }<pos:position pos:line="51" pos:column="8"/></block></then></if>
    }<pos:position pos:line="52" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="54" pos:column="5">rc<pos:position pos:line="54" pos:column="7"/></name> <operator pos:line="54" pos:column="8">=<pos:position pos:line="54" pos:column="9"/></operator> <call><name pos:line="54" pos:column="10">imap_make_msg_set<pos:position pos:line="54" pos:column="27"/></name> <argument_list pos:line="54" pos:column="28">(<argument><expr><name pos:line="54" pos:column="29">idata<pos:position pos:line="54" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="36">&amp;<pos:position pos:line="54" pos:column="41"/></operator><name pos:line="54" pos:column="37">cmd<pos:position pos:line="54" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="42">M_TAG<pos:position pos:line="54" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="49">0<pos:position pos:line="54" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="52"/></expr_stmt>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><operator pos:line="55" pos:column="9">!<pos:position pos:line="55" pos:column="10"/></operator><name pos:line="55" pos:column="10">rc<pos:position pos:line="55" pos:column="12"/></name></expr>)<pos:position pos:line="55" pos:column="13"/></condition><then pos:line="55" pos:column="13">
    <block pos:line="56" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="57" pos:column="7">dprint<pos:position pos:line="57" pos:column="13"/></name> <argument_list pos:line="57" pos:column="14">(<argument><expr><literal type="number" pos:line="57" pos:column="15">1<pos:position pos:line="57" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="57" pos:column="18">(<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="19">debugfile<pos:position pos:line="57" pos:column="28"/></name><operator pos:line="57" pos:column="28">,<pos:position pos:line="57" pos:column="29"/></operator> <literal type="string" pos:line="57" pos:column="30">"imap_copy_messages: No messages tagged\n"<pos:position pos:line="57" pos:column="72"/></literal><operator pos:line="57" pos:column="72">)<pos:position pos:line="57" pos:column="73"/></operator></expr></argument>)<pos:position pos:line="57" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="75"/></expr_stmt>
      <goto pos:line="58" pos:column="7">goto <name pos:line="58" pos:column="12">fail<pos:position pos:line="58" pos:column="16"/></name>;<pos:position pos:line="58" pos:column="17"/></goto>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">mutt_message<pos:position pos:line="60" pos:column="17"/></name> <argument_list pos:line="60" pos:column="18">(<argument><expr><call><name pos:line="60" pos:column="19">_<pos:position pos:line="60" pos:column="20"/></name><argument_list pos:line="60" pos:column="20">(<argument><expr><literal type="string" pos:line="60" pos:column="21">"Copying %d messages to %s..."<pos:position pos:line="60" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="60" pos:column="54">rc<pos:position pos:line="60" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="58">mbox<pos:position pos:line="60" pos:column="62"/></name></expr></argument>)<pos:position pos:line="60" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="64"/></expr_stmt>
  }<pos:position pos:line="61" pos:column="4"/></block></then>
  <else pos:line="62" pos:column="3">else
  <block pos:line="63" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">mutt_message<pos:position pos:line="64" pos:column="17"/></name> <argument_list pos:line="64" pos:column="18">(<argument><expr><call><name pos:line="64" pos:column="19">_<pos:position pos:line="64" pos:column="20"/></name><argument_list pos:line="64" pos:column="20">(<argument><expr><literal type="string" pos:line="64" pos:column="21">"Copying message %d to %s..."<pos:position pos:line="64" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="53">h<pos:position pos:line="64" pos:column="54"/></name><operator pos:line="64" pos:column="54">-&gt;<pos:position pos:line="64" pos:column="59"/></operator><name pos:line="64" pos:column="56">index<pos:position pos:line="64" pos:column="61"/></name></name><operator pos:line="64" pos:column="61">+<pos:position pos:line="64" pos:column="62"/></operator><literal type="number" pos:line="64" pos:column="62">1<pos:position pos:line="64" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="65">mbox<pos:position pos:line="64" pos:column="69"/></name></expr></argument>)<pos:position pos:line="64" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">snprintf<pos:position pos:line="65" pos:column="13"/></name> <argument_list pos:line="65" pos:column="14">(<argument><expr><name pos:line="65" pos:column="15">uid<pos:position pos:line="65" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="65" pos:column="20">sizeof <argument_list pos:line="65" pos:column="27">(<argument><expr><name pos:line="65" pos:column="28">uid<pos:position pos:line="65" pos:column="31"/></name></expr></argument>)<pos:position pos:line="65" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="34">"%u"<pos:position pos:line="65" pos:column="38"/></literal></expr></argument>, <argument><expr><call><name pos:line="65" pos:column="40">HEADER_DATA<pos:position pos:line="65" pos:column="51"/></name> <argument_list pos:line="65" pos:column="52">(<argument><expr><name pos:line="65" pos:column="53">h<pos:position pos:line="65" pos:column="54"/></name></expr></argument>)<pos:position pos:line="65" pos:column="55"/></argument_list></call><operator pos:line="65" pos:column="55">-&gt;<pos:position pos:line="65" pos:column="60"/></operator><name pos:line="65" pos:column="57">uid<pos:position pos:line="65" pos:column="60"/></name></expr></argument>)<pos:position pos:line="65" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">mutt_buffer_addstr<pos:position pos:line="66" pos:column="23"/></name> <argument_list pos:line="66" pos:column="24">(<argument><expr><operator pos:line="66" pos:column="25">&amp;<pos:position pos:line="66" pos:column="30"/></operator><name pos:line="66" pos:column="26">cmd<pos:position pos:line="66" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="31">uid<pos:position pos:line="66" pos:column="34"/></name></expr></argument>)<pos:position pos:line="66" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="67" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="69" pos:column="3">/* let's get it on */</comment>
  <expr_stmt><expr><call><name pos:line="70" pos:column="3">mutt_buffer_addstr<pos:position pos:line="70" pos:column="21"/></name> <argument_list pos:line="70" pos:column="22">(<argument><expr><operator pos:line="70" pos:column="23">&amp;<pos:position pos:line="70" pos:column="28"/></operator><name pos:line="70" pos:column="24">cmd<pos:position pos:line="70" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="29">" "<pos:position pos:line="70" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="71" pos:column="3">imap_munge_mbox_name<pos:position pos:line="71" pos:column="23"/></name> <argument_list pos:line="71" pos:column="24">(<argument><expr><name pos:line="71" pos:column="25">mmbox<pos:position pos:line="71" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="71" pos:column="32">sizeof <argument_list pos:line="71" pos:column="39">(<argument><expr><name pos:line="71" pos:column="40">mmbox<pos:position pos:line="71" pos:column="45"/></name></expr></argument>)<pos:position pos:line="71" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="71" pos:column="48">mbox<pos:position pos:line="71" pos:column="52"/></name></expr></argument>)<pos:position pos:line="71" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="72" pos:column="3">mutt_buffer_addstr<pos:position pos:line="72" pos:column="21"/></name> <argument_list pos:line="72" pos:column="22">(<argument><expr><operator pos:line="72" pos:column="23">&amp;<pos:position pos:line="72" pos:column="28"/></operator><name pos:line="72" pos:column="24">cmd<pos:position pos:line="72" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="29">mmbox<pos:position pos:line="72" pos:column="34"/></name></expr></argument>)<pos:position pos:line="72" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name pos:line="74" pos:column="3">rc<pos:position pos:line="74" pos:column="5"/></name> <operator pos:line="74" pos:column="6">=<pos:position pos:line="74" pos:column="7"/></operator> <call><name pos:line="74" pos:column="8">imap_exec<pos:position pos:line="74" pos:column="17"/></name> <argument_list pos:line="74" pos:column="18">(<argument><expr><name pos:line="74" pos:column="19">idata<pos:position pos:line="74" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="26">cmd<pos:position pos:line="74" pos:column="29"/></name><operator pos:line="74" pos:column="29">.<pos:position pos:line="74" pos:column="30"/></operator><name pos:line="74" pos:column="30">data<pos:position pos:line="74" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="36">IMAP_CMD_FAIL_OK<pos:position pos:line="74" pos:column="52"/></name></expr></argument>)<pos:position pos:line="74" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="54"/></expr_stmt>
  <if pos:line="75" pos:column="3">if <condition pos:line="75" pos:column="6">(<expr><name pos:line="75" pos:column="7">rc<pos:position pos:line="75" pos:column="9"/></name> <operator pos:line="75" pos:column="10">==<pos:position pos:line="75" pos:column="12"/></operator> <operator pos:line="75" pos:column="13">-<pos:position pos:line="75" pos:column="14"/></operator><literal type="number" pos:line="75" pos:column="14">2<pos:position pos:line="75" pos:column="15"/></literal></expr>)<pos:position pos:line="75" pos:column="16"/></condition><then pos:line="75" pos:column="16">
  <block pos:line="76" pos:column="3">{
    <comment type="block" pos:line="77" pos:column="5">/* bail out if command failed for reasons other than nonexistent target */</comment>
    <if pos:line="78" pos:column="5">if <condition pos:line="78" pos:column="8">(<expr><call><name pos:line="78" pos:column="9">ascii_strncasecmp<pos:position pos:line="78" pos:column="26"/></name> <argument_list pos:line="78" pos:column="27">(<argument><expr><call><name pos:line="78" pos:column="28">imap_get_qualifier<pos:position pos:line="78" pos:column="46"/></name> <argument_list pos:line="78" pos:column="47">(<argument><expr><name><name pos:line="78" pos:column="48">idata<pos:position pos:line="78" pos:column="53"/></name><operator pos:line="78" pos:column="53">-&gt;<pos:position pos:line="78" pos:column="58"/></operator><name pos:line="78" pos:column="55">cmd<pos:position pos:line="78" pos:column="58"/></name><operator pos:line="78" pos:column="58">.<pos:position pos:line="78" pos:column="59"/></operator><name pos:line="78" pos:column="59">buf<pos:position pos:line="78" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="65">"[TRYCREATE]"<pos:position pos:line="78" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="80">11<pos:position pos:line="78" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="83"/></argument_list></call></expr>)<pos:position pos:line="78" pos:column="84"/></condition><then pos:line="78" pos:column="84">
    <block pos:line="79" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="80" pos:column="7">imap_error<pos:position pos:line="80" pos:column="17"/></name> <argument_list pos:line="80" pos:column="18">(<argument><expr><literal type="string" pos:line="80" pos:column="19">"imap_copy_messages"<pos:position pos:line="80" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="41">idata<pos:position pos:line="80" pos:column="46"/></name><operator pos:line="80" pos:column="46">-&gt;<pos:position pos:line="80" pos:column="51"/></operator><name pos:line="80" pos:column="48">cmd<pos:position pos:line="80" pos:column="51"/></name><operator pos:line="80" pos:column="51">.<pos:position pos:line="80" pos:column="52"/></operator><name pos:line="80" pos:column="52">buf<pos:position pos:line="80" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="57"/></expr_stmt>
      <goto pos:line="81" pos:column="7">goto <name pos:line="81" pos:column="12">fail<pos:position pos:line="81" pos:column="16"/></name>;<pos:position pos:line="81" pos:column="17"/></goto>
    }<pos:position pos:line="82" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">dprint<pos:position pos:line="83" pos:column="11"/></name> <argument_list pos:line="83" pos:column="12">(<argument><expr><literal type="number" pos:line="83" pos:column="13">2<pos:position pos:line="83" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="83" pos:column="16">(<pos:position pos:line="83" pos:column="17"/></operator><name pos:line="83" pos:column="17">debugfile<pos:position pos:line="83" pos:column="26"/></name><operator pos:line="83" pos:column="26">,<pos:position pos:line="83" pos:column="27"/></operator> <literal type="string" pos:line="83" pos:column="28">"imap_copy_messages: server suggests TRYCREATE\n"<pos:position pos:line="83" pos:column="77"/></literal><operator pos:line="83" pos:column="77">)<pos:position pos:line="83" pos:column="78"/></operator></expr></argument>)<pos:position pos:line="83" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">snprintf<pos:position pos:line="84" pos:column="13"/></name> <argument_list pos:line="84" pos:column="14">(<argument><expr><name pos:line="84" pos:column="15">mmbox<pos:position pos:line="84" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="84" pos:column="22">sizeof <argument_list pos:line="84" pos:column="29">(<argument><expr><name pos:line="84" pos:column="30">mmbox<pos:position pos:line="84" pos:column="35"/></name></expr></argument>)<pos:position pos:line="84" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="84" pos:column="38">_<pos:position pos:line="84" pos:column="39"/></name><argument_list pos:line="84" pos:column="39">(<argument><expr><literal type="string" pos:line="84" pos:column="40">"Create %s?"<pos:position pos:line="84" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="84" pos:column="55">mbox<pos:position pos:line="84" pos:column="59"/></name></expr></argument>)<pos:position pos:line="84" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="61"/></expr_stmt>
    <if pos:line="85" pos:column="5">if <condition pos:line="85" pos:column="8">(<expr><call><name pos:line="85" pos:column="9">option<pos:position pos:line="85" pos:column="15"/></name> <argument_list pos:line="85" pos:column="16">(<argument><expr><name pos:line="85" pos:column="17">OPTCONFIRMCREATE<pos:position pos:line="85" pos:column="33"/></name></expr></argument>)<pos:position pos:line="85" pos:column="34"/></argument_list></call> <operator pos:line="85" pos:column="35">&amp;&amp;<pos:position pos:line="85" pos:column="45"/></operator> <call><name pos:line="85" pos:column="38">mutt_yesorno<pos:position pos:line="85" pos:column="50"/></name> <argument_list pos:line="85" pos:column="51">(<argument><expr><name pos:line="85" pos:column="52">mmbox<pos:position pos:line="85" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="59">1<pos:position pos:line="85" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="61"/></argument_list></call> <operator pos:line="85" pos:column="62">&lt;<pos:position pos:line="85" pos:column="66"/></operator> <literal type="number" pos:line="85" pos:column="64">1<pos:position pos:line="85" pos:column="65"/></literal></expr>)<pos:position pos:line="85" pos:column="66"/></condition><then pos:line="85" pos:column="66">
    <block pos:line="86" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="87" pos:column="7">mutt_clear_error<pos:position pos:line="87" pos:column="23"/></name> <argument_list pos:line="87" pos:column="24">()<pos:position pos:line="87" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="27"/></expr_stmt>
      <goto pos:line="88" pos:column="7">goto <name pos:line="88" pos:column="12">fail<pos:position pos:line="88" pos:column="16"/></name>;<pos:position pos:line="88" pos:column="17"/></goto>
    }<pos:position pos:line="89" pos:column="6"/></block></then></if>
    <if pos:line="90" pos:column="5">if <condition pos:line="90" pos:column="8">(<expr><call><name pos:line="90" pos:column="9">imap_create_mailbox<pos:position pos:line="90" pos:column="28"/></name> <argument_list pos:line="90" pos:column="29">(<argument><expr><name pos:line="90" pos:column="30">idata<pos:position pos:line="90" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="37">mbox<pos:position pos:line="90" pos:column="41"/></name></expr></argument>)<pos:position pos:line="90" pos:column="42"/></argument_list></call> <operator pos:line="90" pos:column="43">&lt;<pos:position pos:line="90" pos:column="47"/></operator> <literal type="number" pos:line="90" pos:column="45">0<pos:position pos:line="90" pos:column="46"/></literal></expr>)<pos:position pos:line="90" pos:column="47"/></condition><then pos:line="90" pos:column="47">
      <block type="pseudo"><goto pos:line="91" pos:column="7">goto <name pos:line="91" pos:column="12">fail<pos:position pos:line="91" pos:column="16"/></name>;<pos:position pos:line="91" pos:column="17"/></goto></block></then></if>

    <comment type="block" pos:line="93" pos:column="5">/* try again */</comment>
    <expr_stmt><expr><name pos:line="94" pos:column="5">rc<pos:position pos:line="94" pos:column="7"/></name> <operator pos:line="94" pos:column="8">=<pos:position pos:line="94" pos:column="9"/></operator> <call><name pos:line="94" pos:column="10">imap_exec<pos:position pos:line="94" pos:column="19"/></name> <argument_list pos:line="94" pos:column="20">(<argument><expr><name pos:line="94" pos:column="21">idata<pos:position pos:line="94" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="28">cmd<pos:position pos:line="94" pos:column="31"/></name><operator pos:line="94" pos:column="31">.<pos:position pos:line="94" pos:column="32"/></operator><name pos:line="94" pos:column="32">data<pos:position pos:line="94" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="94" pos:column="38">0<pos:position pos:line="94" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="95" pos:column="4"/></block></then></if>
  <if pos:line="96" pos:column="3">if <condition pos:line="96" pos:column="6">(<expr><name pos:line="96" pos:column="7">rc<pos:position pos:line="96" pos:column="9"/></name> <operator pos:line="96" pos:column="10">!=<pos:position pos:line="96" pos:column="12"/></operator> <literal type="number" pos:line="96" pos:column="13">0<pos:position pos:line="96" pos:column="14"/></literal></expr>)<pos:position pos:line="96" pos:column="15"/></condition><then pos:line="96" pos:column="15">
  <block pos:line="97" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="98" pos:column="5">imap_error<pos:position pos:line="98" pos:column="15"/></name> <argument_list pos:line="98" pos:column="16">(<argument><expr><literal type="string" pos:line="98" pos:column="17">"imap_copy_messages"<pos:position pos:line="98" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="39">idata<pos:position pos:line="98" pos:column="44"/></name><operator pos:line="98" pos:column="44">-&gt;<pos:position pos:line="98" pos:column="49"/></operator><name pos:line="98" pos:column="46">cmd<pos:position pos:line="98" pos:column="49"/></name><operator pos:line="98" pos:column="49">.<pos:position pos:line="98" pos:column="50"/></operator><name pos:line="98" pos:column="50">buf<pos:position pos:line="98" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="55"/></expr_stmt>
    <goto pos:line="99" pos:column="5">goto <name pos:line="99" pos:column="10">fail<pos:position pos:line="99" pos:column="14"/></name>;<pos:position pos:line="99" pos:column="15"/></goto>
  }<pos:position pos:line="100" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="102" pos:column="3">/* cleanup */</comment>
  <if pos:line="103" pos:column="3">if <condition pos:line="103" pos:column="6">(<expr><operator pos:line="103" pos:column="7">delete<pos:position pos:line="103" pos:column="13"/></operator></expr>)<pos:position pos:line="103" pos:column="14"/></condition><then pos:line="103" pos:column="14">
  <block pos:line="104" pos:column="3">{
    <if pos:line="105" pos:column="5">if <condition pos:line="105" pos:column="8">(<expr><operator pos:line="105" pos:column="9">!<pos:position pos:line="105" pos:column="10"/></operator><name pos:line="105" pos:column="10">h<pos:position pos:line="105" pos:column="11"/></name></expr>)<pos:position pos:line="105" pos:column="12"/></condition><then pos:line="105" pos:column="12">
      <block type="pseudo"><for pos:line="106" pos:column="7">for <control pos:line="106" pos:column="11">(<init><expr><name pos:line="106" pos:column="12">n<pos:position pos:line="106" pos:column="13"/></name> <operator pos:line="106" pos:column="14">=<pos:position pos:line="106" pos:column="15"/></operator> <literal type="number" pos:line="106" pos:column="16">0<pos:position pos:line="106" pos:column="17"/></literal></expr>;<pos:position pos:line="106" pos:column="18"/></init> <condition><expr><name pos:line="106" pos:column="19">n<pos:position pos:line="106" pos:column="20"/></name> <operator pos:line="106" pos:column="21">&lt;<pos:position pos:line="106" pos:column="25"/></operator> <name><name pos:line="106" pos:column="23">ctx<pos:position pos:line="106" pos:column="26"/></name><operator pos:line="106" pos:column="26">-&gt;<pos:position pos:line="106" pos:column="31"/></operator><name pos:line="106" pos:column="28">msgcount<pos:position pos:line="106" pos:column="36"/></name></name></expr>;<pos:position pos:line="106" pos:column="37"/></condition> <incr><expr><name pos:line="106" pos:column="38">n<pos:position pos:line="106" pos:column="39"/></name><operator pos:line="106" pos:column="39">++<pos:position pos:line="106" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="106" pos:column="42"/></control>
      <block pos:line="107" pos:column="7">{
        <if pos:line="108" pos:column="9">if <condition pos:line="108" pos:column="12">(<expr><name><name pos:line="108" pos:column="13">ctx<pos:position pos:line="108" pos:column="16"/></name><operator pos:line="108" pos:column="16">-&gt;<pos:position pos:line="108" pos:column="21"/></operator><name pos:line="108" pos:column="18">hdrs<pos:position pos:line="108" pos:column="22"/></name><index pos:line="108" pos:column="22">[<expr><name pos:line="108" pos:column="23">n<pos:position pos:line="108" pos:column="24"/></name></expr>]<pos:position pos:line="108" pos:column="25"/></index></name><operator pos:line="108" pos:column="25">-&gt;<pos:position pos:line="108" pos:column="30"/></operator><name pos:line="108" pos:column="27">tagged<pos:position pos:line="108" pos:column="33"/></name></expr>)<pos:position pos:line="108" pos:column="34"/></condition><then pos:line="108" pos:column="34">
        <block pos:line="109" pos:column="9">{
          <expr_stmt><expr><call><name pos:line="110" pos:column="11">mutt_set_flag<pos:position pos:line="110" pos:column="24"/></name> <argument_list pos:line="110" pos:column="25">(<argument><expr><name pos:line="110" pos:column="26">ctx<pos:position pos:line="110" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="110" pos:column="31">ctx<pos:position pos:line="110" pos:column="34"/></name><operator pos:line="110" pos:column="34">-&gt;<pos:position pos:line="110" pos:column="39"/></operator><name pos:line="110" pos:column="36">hdrs<pos:position pos:line="110" pos:column="40"/></name><index pos:line="110" pos:column="40">[<expr><name pos:line="110" pos:column="41">n<pos:position pos:line="110" pos:column="42"/></name></expr>]<pos:position pos:line="110" pos:column="43"/></index></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="45">M_DELETE<pos:position pos:line="110" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="110" pos:column="55">1<pos:position pos:line="110" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="58"/></expr_stmt>
          <if pos:line="111" pos:column="11">if <condition pos:line="111" pos:column="14">(<expr><call><name pos:line="111" pos:column="15">option<pos:position pos:line="111" pos:column="21"/></name> <argument_list pos:line="111" pos:column="22">(<argument><expr><name pos:line="111" pos:column="23">OPTDELETEUNTAG<pos:position pos:line="111" pos:column="37"/></name></expr></argument>)<pos:position pos:line="111" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="111" pos:column="39"/></condition><then pos:line="111" pos:column="39">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="112" pos:column="13">mutt_set_flag<pos:position pos:line="112" pos:column="26"/></name> <argument_list pos:line="112" pos:column="27">(<argument><expr><name pos:line="112" pos:column="28">ctx<pos:position pos:line="112" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="112" pos:column="33">ctx<pos:position pos:line="112" pos:column="36"/></name><operator pos:line="112" pos:column="36">-&gt;<pos:position pos:line="112" pos:column="41"/></operator><name pos:line="112" pos:column="38">hdrs<pos:position pos:line="112" pos:column="42"/></name><index pos:line="112" pos:column="42">[<expr><name pos:line="112" pos:column="43">n<pos:position pos:line="112" pos:column="44"/></name></expr>]<pos:position pos:line="112" pos:column="45"/></index></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="47">M_TAG<pos:position pos:line="112" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="112" pos:column="54">0<pos:position pos:line="112" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="57"/></expr_stmt></block></then></if>
        }<pos:position pos:line="113" pos:column="10"/></block></then></if>
      }<pos:position pos:line="114" pos:column="8"/></block></for></block></then>
    <else pos:line="115" pos:column="5">else
    <block pos:line="116" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="117" pos:column="7">mutt_set_flag<pos:position pos:line="117" pos:column="20"/></name> <argument_list pos:line="117" pos:column="21">(<argument><expr><name pos:line="117" pos:column="22">ctx<pos:position pos:line="117" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="27">h<pos:position pos:line="117" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="30">M_DELETE<pos:position pos:line="117" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="117" pos:column="40">1<pos:position pos:line="117" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="43"/></expr_stmt>
      <if pos:line="118" pos:column="7">if <condition pos:line="118" pos:column="10">(<expr><call><name pos:line="118" pos:column="11">option<pos:position pos:line="118" pos:column="17"/></name> <argument_list pos:line="118" pos:column="18">(<argument><expr><name pos:line="118" pos:column="19">OPTDELETEUNTAG<pos:position pos:line="118" pos:column="33"/></name></expr></argument>)<pos:position pos:line="118" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="118" pos:column="35"/></condition><then pos:line="118" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="119" pos:column="9">mutt_set_flag<pos:position pos:line="119" pos:column="22"/></name> <argument_list pos:line="119" pos:column="23">(<argument><expr><name pos:line="119" pos:column="24">ctx<pos:position pos:line="119" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="29">h<pos:position pos:line="119" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="32">M_TAG<pos:position pos:line="119" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="119" pos:column="39">0<pos:position pos:line="119" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="42"/></expr_stmt></block></then></if>
    }<pos:position pos:line="120" pos:column="6"/></block></else></if>
  }<pos:position pos:line="121" pos:column="4"/></block></then></if>

  <if pos:line="123" pos:column="3">if <condition pos:line="123" pos:column="6">(<expr><name><name pos:line="123" pos:column="7">cmd<pos:position pos:line="123" pos:column="10"/></name><operator pos:line="123" pos:column="10">.<pos:position pos:line="123" pos:column="11"/></operator><name pos:line="123" pos:column="11">data<pos:position pos:line="123" pos:column="15"/></name></name></expr>)<pos:position pos:line="123" pos:column="16"/></condition><then pos:line="123" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="124" pos:column="5">FREE<pos:position pos:line="124" pos:column="9"/></name> <argument_list pos:line="124" pos:column="10">(<argument><expr><operator pos:line="124" pos:column="11">&amp;<pos:position pos:line="124" pos:column="16"/></operator><name><name pos:line="124" pos:column="12">cmd<pos:position pos:line="124" pos:column="15"/></name><operator pos:line="124" pos:column="15">.<pos:position pos:line="124" pos:column="16"/></operator><name pos:line="124" pos:column="16">data<pos:position pos:line="124" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="124" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="22"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="125" pos:column="3">FREE<pos:position pos:line="125" pos:column="7"/></name> <argument_list pos:line="125" pos:column="8">(<argument><expr><operator pos:line="125" pos:column="9">&amp;<pos:position pos:line="125" pos:column="14"/></operator><name><name pos:line="125" pos:column="10">mx<pos:position pos:line="125" pos:column="12"/></name><operator pos:line="125" pos:column="12">.<pos:position pos:line="125" pos:column="13"/></operator><name pos:line="125" pos:column="13">mbox<pos:position pos:line="125" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="19"/></expr_stmt>
  <return pos:line="126" pos:column="3">return <expr><literal type="number" pos:line="126" pos:column="10">0<pos:position pos:line="126" pos:column="11"/></literal></expr>;<pos:position pos:line="126" pos:column="12"/></return>

 <label><name pos:line="128" pos:column="2">fail<pos:position pos:line="128" pos:column="6"/></name>:<pos:position pos:line="128" pos:column="7"/></label>
  <if pos:line="129" pos:column="3">if <condition pos:line="129" pos:column="6">(<expr><name><name pos:line="129" pos:column="7">cmd<pos:position pos:line="129" pos:column="10"/></name><operator pos:line="129" pos:column="10">.<pos:position pos:line="129" pos:column="11"/></operator><name pos:line="129" pos:column="11">data<pos:position pos:line="129" pos:column="15"/></name></name></expr>)<pos:position pos:line="129" pos:column="16"/></condition><then pos:line="129" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="130" pos:column="5">FREE<pos:position pos:line="130" pos:column="9"/></name> <argument_list pos:line="130" pos:column="10">(<argument><expr><operator pos:line="130" pos:column="11">&amp;<pos:position pos:line="130" pos:column="16"/></operator><name><name pos:line="130" pos:column="12">cmd<pos:position pos:line="130" pos:column="15"/></name><operator pos:line="130" pos:column="15">.<pos:position pos:line="130" pos:column="16"/></operator><name pos:line="130" pos:column="16">data<pos:position pos:line="130" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="130" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="22"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="131" pos:column="3">FREE<pos:position pos:line="131" pos:column="7"/></name> <argument_list pos:line="131" pos:column="8">(<argument><expr><operator pos:line="131" pos:column="9">&amp;<pos:position pos:line="131" pos:column="14"/></operator><name><name pos:line="131" pos:column="10">mx<pos:position pos:line="131" pos:column="12"/></name><operator pos:line="131" pos:column="12">.<pos:position pos:line="131" pos:column="13"/></operator><name pos:line="131" pos:column="13">mbox<pos:position pos:line="131" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="131" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="19"/></expr_stmt>
  <return pos:line="132" pos:column="3">return <expr><operator pos:line="132" pos:column="10">-<pos:position pos:line="132" pos:column="11"/></operator><literal type="number" pos:line="132" pos:column="11">1<pos:position pos:line="132" pos:column="12"/></literal></expr>;<pos:position pos:line="132" pos:column="13"/></return>
}</unit>

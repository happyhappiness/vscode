<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_808_mutt-1.7.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">examine_mailboxes<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">MUTTMENU<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">menu<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">browser_state<pos:position pos:line="1" pos:column="67"/></name></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">state<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">stat<pos:position pos:line="3" pos:column="14"/></name></name></type> <name pos:line="3" pos:column="15">s<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buffer<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><name pos:line="4" pos:column="15">LONG_STRING<pos:position pos:line="4" pos:column="26"/></name></expr>]<pos:position pos:line="4" pos:column="27"/></index></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">BUFFY<pos:position pos:line="5" pos:column="8"/></name> <modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">tmp<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><name pos:line="5" pos:column="16">Incoming<pos:position pos:line="5" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">!<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">Incoming<pos:position pos:line="7" pos:column="16"/></name></expr>)<pos:position pos:line="7" pos:column="17"/></condition><then pos:line="7" pos:column="17">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><operator pos:line="8" pos:column="13">-<pos:position pos:line="8" pos:column="14"/></operator><literal type="number" pos:line="8" pos:column="14">1<pos:position pos:line="8" pos:column="15"/></literal><operator pos:line="8" pos:column="15">)<pos:position pos:line="8" pos:column="16"/></operator></expr>;<pos:position pos:line="8" pos:column="17"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">mutt_buffy_check<pos:position pos:line="9" pos:column="19"/></name> <argument_list pos:line="9" pos:column="20">(<argument><expr><literal type="number" pos:line="9" pos:column="21">0<pos:position pos:line="9" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="24"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">init_state<pos:position pos:line="11" pos:column="13"/></name> <argument_list pos:line="11" pos:column="14">(<argument><expr><name pos:line="11" pos:column="15">state<pos:position pos:line="11" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="22">menu<pos:position pos:line="11" pos:column="26"/></name></expr></argument>)<pos:position pos:line="11" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>

  <do pos:line="13" pos:column="3">do
  <block pos:line="14" pos:column="3">{
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">Context<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">&amp;&amp;<pos:position pos:line="15" pos:column="27"/></operator>
        <operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><call><name pos:line="16" pos:column="10">mutt_strcmp<pos:position pos:line="16" pos:column="21"/></name> <argument_list pos:line="16" pos:column="22">(<argument><expr><name><name pos:line="16" pos:column="23">tmp<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">realpath<pos:position pos:line="16" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="38">Context<pos:position pos:line="16" pos:column="45"/></name><operator pos:line="16" pos:column="45">-&gt;<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="47">realpath<pos:position pos:line="16" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="57"/></condition><then pos:line="16" pos:column="57">
    <block pos:line="17" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="18" pos:column="7">tmp<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">msg_count<pos:position pos:line="18" pos:column="21"/></name></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <name><name pos:line="18" pos:column="24">Context<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">-&gt;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="33">msgcount<pos:position pos:line="18" pos:column="41"/></name></name></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="19" pos:column="7">tmp<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">-&gt;<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="12">msg_unread<pos:position pos:line="19" pos:column="22"/></name></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <name><name pos:line="19" pos:column="25">Context<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">-&gt;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="34">unread<pos:position pos:line="19" pos:column="40"/></name></name></expr>;<pos:position pos:line="19" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

<cpp:ifdef pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">ifdef<pos:position pos:line="22" pos:column="7"/></cpp:directive> <name pos:line="22" pos:column="8">USE_IMAP<pos:position pos:line="22" pos:column="16"/></name></cpp:ifdef>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><call><name pos:line="23" pos:column="9">mx_is_imap<pos:position pos:line="23" pos:column="19"/></name> <argument_list pos:line="23" pos:column="20">(<argument><expr><name><name pos:line="23" pos:column="21">tmp<pos:position pos:line="23" pos:column="24"/></name><operator pos:line="23" pos:column="24">-&gt;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="26">path<pos:position pos:line="23" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="32"/></condition><then pos:line="23" pos:column="32">
    <block pos:line="24" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">add_folder<pos:position pos:line="25" pos:column="17"/></name> <argument_list pos:line="25" pos:column="18">(<argument><expr><name pos:line="25" pos:column="19">menu<pos:position pos:line="25" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="25">state<pos:position pos:line="25" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="32">tmp<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">-&gt;<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="37">path<pos:position pos:line="25" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="43">NULL<pos:position pos:line="25" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="49">tmp<pos:position pos:line="25" pos:column="52"/></name></expr></argument>)<pos:position pos:line="25" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="54"/></expr_stmt>
      <continue pos:line="26" pos:column="7">continue;<pos:position pos:line="26" pos:column="16"/></continue>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifdef<pos:position pos:line="29" pos:column="7"/></cpp:directive> <name pos:line="29" pos:column="8">USE_POP<pos:position pos:line="29" pos:column="15"/></name></cpp:ifdef>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><call><name pos:line="30" pos:column="9">mx_is_pop<pos:position pos:line="30" pos:column="18"/></name> <argument_list pos:line="30" pos:column="19">(<argument><expr><name><name pos:line="30" pos:column="20">tmp<pos:position pos:line="30" pos:column="23"/></name><operator pos:line="30" pos:column="23">-&gt;<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="25">path<pos:position pos:line="30" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="31"/></condition><then pos:line="30" pos:column="31">
    <block pos:line="31" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">add_folder<pos:position pos:line="32" pos:column="17"/></name> <argument_list pos:line="32" pos:column="18">(<argument><expr><name pos:line="32" pos:column="19">menu<pos:position pos:line="32" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="25">state<pos:position pos:line="32" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="32">tmp<pos:position pos:line="32" pos:column="35"/></name><operator pos:line="32" pos:column="35">-&gt;<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="37">path<pos:position pos:line="32" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="43">NULL<pos:position pos:line="32" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="49">tmp<pos:position pos:line="32" pos:column="52"/></name></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="54"/></expr_stmt>
      <continue pos:line="33" pos:column="7">continue;<pos:position pos:line="33" pos:column="16"/></continue>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><call><name pos:line="36" pos:column="9">lstat<pos:position pos:line="36" pos:column="14"/></name> <argument_list pos:line="36" pos:column="15">(<argument><expr><name><name pos:line="36" pos:column="16">tmp<pos:position pos:line="36" pos:column="19"/></name><operator pos:line="36" pos:column="19">-&gt;<pos:position pos:line="36" pos:column="24"/></operator><name pos:line="36" pos:column="21">path<pos:position pos:line="36" pos:column="25"/></name></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="27">&amp;<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="28">s<pos:position pos:line="36" pos:column="29"/></name></expr></argument>)<pos:position pos:line="36" pos:column="30"/></argument_list></call> <operator pos:line="36" pos:column="31">==<pos:position pos:line="36" pos:column="33"/></operator> <operator pos:line="36" pos:column="34">-<pos:position pos:line="36" pos:column="35"/></operator><literal type="number" pos:line="36" pos:column="35">1<pos:position pos:line="36" pos:column="36"/></literal></expr>)<pos:position pos:line="36" pos:column="37"/></condition><then pos:line="36" pos:column="37">
      <block type="pseudo"><continue pos:line="37" pos:column="7">continue;<pos:position pos:line="37" pos:column="16"/></continue></block></then></if>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><operator pos:line="39" pos:column="9">(<pos:position pos:line="39" pos:column="10"/></operator><operator pos:line="39" pos:column="10">!<pos:position pos:line="39" pos:column="11"/></operator> <call><name pos:line="39" pos:column="12">S_ISREG<pos:position pos:line="39" pos:column="19"/></name> <argument_list pos:line="39" pos:column="20">(<argument><expr><name><name pos:line="39" pos:column="21">s<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">.<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="23">st_mode<pos:position pos:line="39" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="31"/></argument_list></call><operator pos:line="39" pos:column="31">)<pos:position pos:line="39" pos:column="32"/></operator> <operator pos:line="39" pos:column="33">&amp;&amp;<pos:position pos:line="39" pos:column="43"/></operator> <operator pos:line="39" pos:column="36">(<pos:position pos:line="39" pos:column="37"/></operator><operator pos:line="39" pos:column="37">!<pos:position pos:line="39" pos:column="38"/></operator> <call><name pos:line="39" pos:column="39">S_ISDIR<pos:position pos:line="39" pos:column="46"/></name> <argument_list pos:line="39" pos:column="47">(<argument><expr><name><name pos:line="39" pos:column="48">s<pos:position pos:line="39" pos:column="49"/></name><operator pos:line="39" pos:column="49">.<pos:position pos:line="39" pos:column="50"/></operator><name pos:line="39" pos:column="50">st_mode<pos:position pos:line="39" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="58"/></argument_list></call><operator pos:line="39" pos:column="58">)<pos:position pos:line="39" pos:column="59"/></operator> <operator pos:line="39" pos:column="60">&amp;&amp;<pos:position pos:line="39" pos:column="70"/></operator>
	<operator pos:line="40" pos:column="9">(<pos:position pos:line="40" pos:column="10"/></operator><operator pos:line="40" pos:column="10">!<pos:position pos:line="40" pos:column="11"/></operator> <call><name pos:line="40" pos:column="12">S_ISLNK<pos:position pos:line="40" pos:column="19"/></name> <argument_list pos:line="40" pos:column="20">(<argument><expr><name><name pos:line="40" pos:column="21">s<pos:position pos:line="40" pos:column="22"/></name><operator pos:line="40" pos:column="22">.<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="23">st_mode<pos:position pos:line="40" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="31"/></argument_list></call><operator pos:line="40" pos:column="31">)<pos:position pos:line="40" pos:column="32"/></operator></expr>)<pos:position pos:line="40" pos:column="33"/></condition><then pos:line="40" pos:column="33">
      <block type="pseudo"><continue pos:line="41" pos:column="7">continue;<pos:position pos:line="41" pos:column="16"/></continue></block></then></if>

    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><call><name pos:line="43" pos:column="9">mx_is_maildir<pos:position pos:line="43" pos:column="22"/></name> <argument_list pos:line="43" pos:column="23">(<argument><expr><name><name pos:line="43" pos:column="24">tmp<pos:position pos:line="43" pos:column="27"/></name><operator pos:line="43" pos:column="27">-&gt;<pos:position pos:line="43" pos:column="32"/></operator><name pos:line="43" pos:column="29">path<pos:position pos:line="43" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="35"/></condition><then pos:line="43" pos:column="35">
    <block pos:line="44" pos:column="5">{
      <decl_stmt><decl><type><name><name pos:line="45" pos:column="7">struct<pos:position pos:line="45" pos:column="13"/></name> <name pos:line="45" pos:column="14">stat<pos:position pos:line="45" pos:column="18"/></name></name></type> <name pos:line="45" pos:column="19">st2<pos:position pos:line="45" pos:column="22"/></name></decl>;<pos:position pos:line="45" pos:column="23"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="46" pos:column="7">char<pos:position pos:line="46" pos:column="11"/></name></type> <name><name pos:line="46" pos:column="12">md<pos:position pos:line="46" pos:column="14"/></name><index pos:line="46" pos:column="14">[<expr><name pos:line="46" pos:column="15">_POSIX_PATH_MAX<pos:position pos:line="46" pos:column="30"/></name></expr>]<pos:position pos:line="46" pos:column="31"/></index></name></decl>;<pos:position pos:line="46" pos:column="32"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="48" pos:column="7">snprintf<pos:position pos:line="48" pos:column="15"/></name> <argument_list pos:line="48" pos:column="16">(<argument><expr><name pos:line="48" pos:column="17">md<pos:position pos:line="48" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="21">sizeof <argument_list pos:line="48" pos:column="28">(<argument><expr><name pos:line="48" pos:column="29">md<pos:position pos:line="48" pos:column="31"/></name></expr></argument>)<pos:position pos:line="48" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="34">"%s/new"<pos:position pos:line="48" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="44">tmp<pos:position pos:line="48" pos:column="47"/></name><operator pos:line="48" pos:column="47">-&gt;<pos:position pos:line="48" pos:column="52"/></operator><name pos:line="48" pos:column="49">path<pos:position pos:line="48" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="55"/></expr_stmt>
      <if pos:line="49" pos:column="7">if <condition pos:line="49" pos:column="10">(<expr><call><name pos:line="49" pos:column="11">stat<pos:position pos:line="49" pos:column="15"/></name> <argument_list pos:line="49" pos:column="16">(<argument><expr><name pos:line="49" pos:column="17">md<pos:position pos:line="49" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="21">&amp;<pos:position pos:line="49" pos:column="26"/></operator><name pos:line="49" pos:column="22">s<pos:position pos:line="49" pos:column="23"/></name></expr></argument>)<pos:position pos:line="49" pos:column="24"/></argument_list></call> <operator pos:line="49" pos:column="25">&lt;<pos:position pos:line="49" pos:column="29"/></operator> <literal type="number" pos:line="49" pos:column="27">0<pos:position pos:line="49" pos:column="28"/></literal></expr>)<pos:position pos:line="49" pos:column="29"/></condition><then pos:line="49" pos:column="29">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="50" pos:column="9">s<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">.<pos:position pos:line="50" pos:column="11"/></operator><name pos:line="50" pos:column="11">st_mtime<pos:position pos:line="50" pos:column="19"/></name></name> <operator pos:line="50" pos:column="20">=<pos:position pos:line="50" pos:column="21"/></operator> <literal type="number" pos:line="50" pos:column="22">0<pos:position pos:line="50" pos:column="23"/></literal></expr>;<pos:position pos:line="50" pos:column="24"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="51" pos:column="7">snprintf<pos:position pos:line="51" pos:column="15"/></name> <argument_list pos:line="51" pos:column="16">(<argument><expr><name pos:line="51" pos:column="17">md<pos:position pos:line="51" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="21">sizeof <argument_list pos:line="51" pos:column="28">(<argument><expr><name pos:line="51" pos:column="29">md<pos:position pos:line="51" pos:column="31"/></name></expr></argument>)<pos:position pos:line="51" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="34">"%s/cur"<pos:position pos:line="51" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="44">tmp<pos:position pos:line="51" pos:column="47"/></name><operator pos:line="51" pos:column="47">-&gt;<pos:position pos:line="51" pos:column="52"/></operator><name pos:line="51" pos:column="49">path<pos:position pos:line="51" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="55"/></expr_stmt>
      <if pos:line="52" pos:column="7">if <condition pos:line="52" pos:column="10">(<expr><call><name pos:line="52" pos:column="11">stat<pos:position pos:line="52" pos:column="15"/></name> <argument_list pos:line="52" pos:column="16">(<argument><expr><name pos:line="52" pos:column="17">md<pos:position pos:line="52" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="21">&amp;<pos:position pos:line="52" pos:column="26"/></operator><name pos:line="52" pos:column="22">st2<pos:position pos:line="52" pos:column="25"/></name></expr></argument>)<pos:position pos:line="52" pos:column="26"/></argument_list></call> <operator pos:line="52" pos:column="27">&lt;<pos:position pos:line="52" pos:column="31"/></operator> <literal type="number" pos:line="52" pos:column="29">0<pos:position pos:line="52" pos:column="30"/></literal></expr>)<pos:position pos:line="52" pos:column="31"/></condition><then pos:line="52" pos:column="31">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="53" pos:column="9">st2<pos:position pos:line="53" pos:column="12"/></name><operator pos:line="53" pos:column="12">.<pos:position pos:line="53" pos:column="13"/></operator><name pos:line="53" pos:column="13">st_mtime<pos:position pos:line="53" pos:column="21"/></name></name> <operator pos:line="53" pos:column="22">=<pos:position pos:line="53" pos:column="23"/></operator> <literal type="number" pos:line="53" pos:column="24">0<pos:position pos:line="53" pos:column="25"/></literal></expr>;<pos:position pos:line="53" pos:column="26"/></expr_stmt></block></then></if>
      <if pos:line="54" pos:column="7">if <condition pos:line="54" pos:column="10">(<expr><name><name pos:line="54" pos:column="11">st2<pos:position pos:line="54" pos:column="14"/></name><operator pos:line="54" pos:column="14">.<pos:position pos:line="54" pos:column="15"/></operator><name pos:line="54" pos:column="15">st_mtime<pos:position pos:line="54" pos:column="23"/></name></name> <operator pos:line="54" pos:column="24">&gt;<pos:position pos:line="54" pos:column="28"/></operator> <name><name pos:line="54" pos:column="26">s<pos:position pos:line="54" pos:column="27"/></name><operator pos:line="54" pos:column="27">.<pos:position pos:line="54" pos:column="28"/></operator><name pos:line="54" pos:column="28">st_mtime<pos:position pos:line="54" pos:column="36"/></name></name></expr>)<pos:position pos:line="54" pos:column="37"/></condition><then pos:line="54" pos:column="37">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="55" pos:column="9">s<pos:position pos:line="55" pos:column="10"/></name><operator pos:line="55" pos:column="10">.<pos:position pos:line="55" pos:column="11"/></operator><name pos:line="55" pos:column="11">st_mtime<pos:position pos:line="55" pos:column="19"/></name></name> <operator pos:line="55" pos:column="20">=<pos:position pos:line="55" pos:column="21"/></operator> <name><name pos:line="55" pos:column="22">st2<pos:position pos:line="55" pos:column="25"/></name><operator pos:line="55" pos:column="25">.<pos:position pos:line="55" pos:column="26"/></operator><name pos:line="55" pos:column="26">st_mtime<pos:position pos:line="55" pos:column="34"/></name></name></expr>;<pos:position pos:line="55" pos:column="35"/></expr_stmt></block></then></if>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="58" pos:column="5">strfcpy<pos:position pos:line="58" pos:column="12"/></name> <argument_list pos:line="58" pos:column="13">(<argument><expr><name pos:line="58" pos:column="14">buffer<pos:position pos:line="58" pos:column="20"/></name></expr></argument>, <argument><expr><call><name pos:line="58" pos:column="22">NONULL<pos:position pos:line="58" pos:column="28"/></name><argument_list pos:line="58" pos:column="28">(<argument><expr><name><name pos:line="58" pos:column="29">tmp<pos:position pos:line="58" pos:column="32"/></name><operator pos:line="58" pos:column="32">-&gt;<pos:position pos:line="58" pos:column="37"/></operator><name pos:line="58" pos:column="34">path<pos:position pos:line="58" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="58" pos:column="41">sizeof <argument_list pos:line="58" pos:column="48">(<argument><expr><name pos:line="58" pos:column="49">buffer<pos:position pos:line="58" pos:column="55"/></name></expr></argument>)<pos:position pos:line="58" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="58" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">mutt_pretty_mailbox<pos:position pos:line="59" pos:column="24"/></name> <argument_list pos:line="59" pos:column="25">(<argument><expr><name pos:line="59" pos:column="26">buffer<pos:position pos:line="59" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="59" pos:column="34">sizeof <argument_list pos:line="59" pos:column="41">(<argument><expr><name pos:line="59" pos:column="42">buffer<pos:position pos:line="59" pos:column="48"/></name></expr></argument>)<pos:position pos:line="59" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="59" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="51"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="61" pos:column="5">add_folder<pos:position pos:line="61" pos:column="15"/></name> <argument_list pos:line="61" pos:column="16">(<argument><expr><name pos:line="61" pos:column="17">menu<pos:position pos:line="61" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="23">state<pos:position pos:line="61" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="30">buffer<pos:position pos:line="61" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="38">&amp;<pos:position pos:line="61" pos:column="43"/></operator><name pos:line="61" pos:column="39">s<pos:position pos:line="61" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="42">tmp<pos:position pos:line="61" pos:column="45"/></name></expr></argument>)<pos:position pos:line="61" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="47"/></expr_stmt>
  }<pos:position pos:line="62" pos:column="4"/></block>
  while <condition pos:line="63" pos:column="9">(<expr><operator pos:line="63" pos:column="10">(<pos:position pos:line="63" pos:column="11"/></operator><name pos:line="63" pos:column="11">tmp<pos:position pos:line="63" pos:column="14"/></name> <operator pos:line="63" pos:column="15">=<pos:position pos:line="63" pos:column="16"/></operator> <name><name pos:line="63" pos:column="17">tmp<pos:position pos:line="63" pos:column="20"/></name><operator pos:line="63" pos:column="20">-&gt;<pos:position pos:line="63" pos:column="25"/></operator><name pos:line="63" pos:column="22">next<pos:position pos:line="63" pos:column="26"/></name></name><operator pos:line="63" pos:column="26">)<pos:position pos:line="63" pos:column="27"/></operator></expr>)<pos:position pos:line="63" pos:column="28"/></condition>;<pos:position pos:line="63" pos:column="29"/></do>
  <expr_stmt><expr><call><name pos:line="64" pos:column="3">browser_sort<pos:position pos:line="64" pos:column="15"/></name> <argument_list pos:line="64" pos:column="16">(<argument><expr><name pos:line="64" pos:column="17">state<pos:position pos:line="64" pos:column="22"/></name></expr></argument>)<pos:position pos:line="64" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="24"/></expr_stmt>
  <return pos:line="65" pos:column="3">return <expr><literal type="number" pos:line="65" pos:column="10">0<pos:position pos:line="65" pos:column="11"/></literal></expr>;<pos:position pos:line="65" pos:column="12"/></return>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2068_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">imap_buffy_check<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">int<pos:position pos:line="1" pos:column="26"/></name></type> <name pos:line="1" pos:column="27">force<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">check_stats<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">IMAP_DATA<pos:position pos:line="3" pos:column="12"/></name><modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type> <name pos:line="3" pos:column="14">idata<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">IMAP_DATA<pos:position pos:line="4" pos:column="12"/></name><modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type> <name pos:line="4" pos:column="14">lastdata<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><name pos:line="4" pos:column="25">NULL<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">BUFFY<pos:position pos:line="5" pos:column="8"/></name><modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type> <name pos:line="5" pos:column="10">mailbox<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">name<pos:position pos:line="6" pos:column="12"/></name><index pos:line="6" pos:column="12">[<expr><name pos:line="6" pos:column="13">LONG_STRING<pos:position pos:line="6" pos:column="24"/></name></expr>]<pos:position pos:line="6" pos:column="25"/></index></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">command<pos:position pos:line="7" pos:column="15"/></name><index pos:line="7" pos:column="15">[<expr><name pos:line="7" pos:column="16">LONG_STRING<pos:position pos:line="7" pos:column="27"/></name></expr>]<pos:position pos:line="7" pos:column="28"/></index></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">munged<pos:position pos:line="8" pos:column="14"/></name><index pos:line="8" pos:column="14">[<expr><name pos:line="8" pos:column="15">LONG_STRING<pos:position pos:line="8" pos:column="26"/></name></expr>]<pos:position pos:line="8" pos:column="27"/></index></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">buffies<pos:position pos:line="9" pos:column="14"/></name> <init pos:line="9" pos:column="15">= <expr><literal type="number" pos:line="9" pos:column="17">0<pos:position pos:line="9" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>

  <for pos:line="11" pos:column="3">for <control pos:line="11" pos:column="7">(<init><expr><name pos:line="11" pos:column="8">mailbox<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">Incoming<pos:position pos:line="11" pos:column="26"/></name></expr>;<pos:position pos:line="11" pos:column="27"/></init> <condition><expr><name pos:line="11" pos:column="28">mailbox<pos:position pos:line="11" pos:column="35"/></name></expr>;<pos:position pos:line="11" pos:column="36"/></condition> <incr><expr><name pos:line="11" pos:column="37">mailbox<pos:position pos:line="11" pos:column="44"/></name> <operator pos:line="11" pos:column="45">=<pos:position pos:line="11" pos:column="46"/></operator> <name><name pos:line="11" pos:column="47">mailbox<pos:position pos:line="11" pos:column="54"/></name><operator pos:line="11" pos:column="54">-&gt;<pos:position pos:line="11" pos:column="59"/></operator><name pos:line="11" pos:column="56">next<pos:position pos:line="11" pos:column="60"/></name></name></expr></incr>)<pos:position pos:line="11" pos:column="61"/></control>
  <block pos:line="12" pos:column="3">{
    <comment type="block" pos:line="13" pos:column="5">/* Init newly-added mailboxes */</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator> <name><name pos:line="14" pos:column="11">mailbox<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">magic<pos:position pos:line="14" pos:column="25"/></name></name></expr>)<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26">
    <block pos:line="15" pos:column="5">{
      <if pos:line="16" pos:column="7">if <condition pos:line="16" pos:column="10">(<expr><call><name pos:line="16" pos:column="11">mx_is_imap<pos:position pos:line="16" pos:column="21"/></name> <argument_list pos:line="16" pos:column="22">(<argument><expr><name><name pos:line="16" pos:column="23">mailbox<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">-&gt;<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="32">path<pos:position pos:line="16" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="38"/></condition><then pos:line="16" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="9">mailbox<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-&gt;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="18">magic<pos:position pos:line="17" pos:column="23"/></name></name> <operator pos:line="17" pos:column="24">=<pos:position pos:line="17" pos:column="25"/></operator> <name pos:line="17" pos:column="26">MUTT_IMAP<pos:position pos:line="17" pos:column="35"/></name></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt></block></then></if>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name><name pos:line="20" pos:column="9">mailbox<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">magic<pos:position pos:line="20" pos:column="23"/></name></name> <operator pos:line="20" pos:column="24">!=<pos:position pos:line="20" pos:column="26"/></operator> <name pos:line="20" pos:column="27">MUTT_IMAP<pos:position pos:line="20" pos:column="36"/></name></expr>)<pos:position pos:line="20" pos:column="37"/></condition><then pos:line="20" pos:column="37">
      <block type="pseudo"><continue pos:line="21" pos:column="7">continue;<pos:position pos:line="21" pos:column="16"/></continue></block></then></if>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><call><name pos:line="23" pos:column="9">imap_get_mailbox<pos:position pos:line="23" pos:column="25"/></name> <argument_list pos:line="23" pos:column="26">(<argument><expr><name><name pos:line="23" pos:column="27">mailbox<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">-&gt;<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="36">path<pos:position pos:line="23" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="42">&amp;<pos:position pos:line="23" pos:column="47"/></operator><name pos:line="23" pos:column="43">idata<pos:position pos:line="23" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="50">name<pos:position pos:line="23" pos:column="54"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="56">sizeof <argument_list pos:line="23" pos:column="63">(<argument><expr><name pos:line="23" pos:column="64">name<pos:position pos:line="23" pos:column="68"/></name></expr></argument>)<pos:position pos:line="23" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="70"/></argument_list></call> <operator pos:line="23" pos:column="71">&lt;<pos:position pos:line="23" pos:column="75"/></operator> <literal type="number" pos:line="23" pos:column="73">0<pos:position pos:line="23" pos:column="74"/></literal></expr>)<pos:position pos:line="23" pos:column="75"/></condition><then pos:line="23" pos:column="75">
    <block pos:line="24" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="25" pos:column="7">mailbox<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">-&gt;<pos:position pos:line="25" pos:column="19"/></operator></name><operator pos:line="25" pos:column="16">new<pos:position pos:line="25" pos:column="19"/></operator> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <literal type="number" pos:line="25" pos:column="22">0<pos:position pos:line="25" pos:column="23"/></literal></expr>;<pos:position pos:line="25" pos:column="24"/></expr_stmt>
      <continue pos:line="26" pos:column="7">continue;<pos:position pos:line="26" pos:column="16"/></continue>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="29" pos:column="5">/* Don't issue STATUS on the selected mailbox, it will be NOOPed or
     * IDLEd elsewhere.
     * idata-&gt;mailbox may be NULL for connections other than the current
     * mailbox's, and shouldn't expand to INBOX in that case. #3216. */</comment>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name><name pos:line="33" pos:column="9">idata<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">-&gt;<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="16">mailbox<pos:position pos:line="33" pos:column="23"/></name></name> <operator pos:line="33" pos:column="24">&amp;&amp;<pos:position pos:line="33" pos:column="34"/></operator> <operator pos:line="33" pos:column="27">!<pos:position pos:line="33" pos:column="28"/></operator><call><name pos:line="33" pos:column="28">imap_mxcmp<pos:position pos:line="33" pos:column="38"/></name> <argument_list pos:line="33" pos:column="39">(<argument><expr><name pos:line="33" pos:column="40">name<pos:position pos:line="33" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="46">idata<pos:position pos:line="33" pos:column="51"/></name><operator pos:line="33" pos:column="51">-&gt;<pos:position pos:line="33" pos:column="56"/></operator><name pos:line="33" pos:column="53">mailbox<pos:position pos:line="33" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="62"/></condition><then pos:line="33" pos:column="62">
    <block pos:line="34" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="35" pos:column="7">mailbox<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">-&gt;<pos:position pos:line="35" pos:column="19"/></operator></name><operator pos:line="35" pos:column="16">new<pos:position pos:line="35" pos:column="19"/></operator> <operator pos:line="35" pos:column="20">=<pos:position pos:line="35" pos:column="21"/></operator> <literal type="number" pos:line="35" pos:column="22">0<pos:position pos:line="35" pos:column="23"/></literal></expr>;<pos:position pos:line="35" pos:column="24"/></expr_stmt>
      <continue pos:line="36" pos:column="7">continue;<pos:position pos:line="36" pos:column="16"/></continue>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><operator pos:line="39" pos:column="9">!<pos:position pos:line="39" pos:column="10"/></operator><call><name pos:line="39" pos:column="10">mutt_bit_isset<pos:position pos:line="39" pos:column="24"/></name> <argument_list pos:line="39" pos:column="25">(<argument><expr><name><name pos:line="39" pos:column="26">idata<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">-&gt;<pos:position pos:line="39" pos:column="36"/></operator><name pos:line="39" pos:column="33">capabilities<pos:position pos:line="39" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="47">IMAP4REV1<pos:position pos:line="39" pos:column="56"/></name></expr></argument>)<pos:position pos:line="39" pos:column="57"/></argument_list></call> <operator pos:line="39" pos:column="58">&amp;&amp;<pos:position pos:line="39" pos:column="68"/></operator>
        <operator pos:line="40" pos:column="9">!<pos:position pos:line="40" pos:column="10"/></operator><call><name pos:line="40" pos:column="10">mutt_bit_isset<pos:position pos:line="40" pos:column="24"/></name> <argument_list pos:line="40" pos:column="25">(<argument><expr><name><name pos:line="40" pos:column="26">idata<pos:position pos:line="40" pos:column="31"/></name><operator pos:line="40" pos:column="31">-&gt;<pos:position pos:line="40" pos:column="36"/></operator><name pos:line="40" pos:column="33">capabilities<pos:position pos:line="40" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="47">STATUS<pos:position pos:line="40" pos:column="53"/></name></expr></argument>)<pos:position pos:line="40" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="55"/></condition><then pos:line="40" pos:column="55">
    <block pos:line="41" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">dprint<pos:position pos:line="42" pos:column="13"/></name> <argument_list pos:line="42" pos:column="14">(<argument><expr><literal type="number" pos:line="42" pos:column="15">2<pos:position pos:line="42" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="42" pos:column="18">(<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="19">debugfile<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">,<pos:position pos:line="42" pos:column="29"/></operator> <literal type="string" pos:line="42" pos:column="30">"Server doesn't support STATUS\n"<pos:position pos:line="42" pos:column="63"/></literal><operator pos:line="42" pos:column="63">)<pos:position pos:line="42" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="42" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="66"/></expr_stmt>
      <continue pos:line="43" pos:column="7">continue;<pos:position pos:line="43" pos:column="16"/></continue>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">lastdata<pos:position pos:line="46" pos:column="17"/></name> <operator pos:line="46" pos:column="18">&amp;&amp;<pos:position pos:line="46" pos:column="28"/></operator> <name pos:line="46" pos:column="21">idata<pos:position pos:line="46" pos:column="26"/></name> <operator pos:line="46" pos:column="27">!=<pos:position pos:line="46" pos:column="29"/></operator> <name pos:line="46" pos:column="30">lastdata<pos:position pos:line="46" pos:column="38"/></name></expr>)<pos:position pos:line="46" pos:column="39"/></condition><then pos:line="46" pos:column="39">
    <block pos:line="47" pos:column="5">{
      <comment type="block" pos:line="48" pos:column="7">/* Send commands to previous server. Sorting the buffy list
       * may prevent some infelicitous interleavings */</comment>
      <if pos:line="50" pos:column="7">if <condition pos:line="50" pos:column="10">(<expr><call><name pos:line="50" pos:column="11">imap_exec<pos:position pos:line="50" pos:column="20"/></name> <argument_list pos:line="50" pos:column="21">(<argument><expr><name pos:line="50" pos:column="22">lastdata<pos:position pos:line="50" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="32">NULL<pos:position pos:line="50" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="38">IMAP_CMD_FAIL_OK<pos:position pos:line="50" pos:column="54"/></name> <operator pos:line="50" pos:column="55">|<pos:position pos:line="50" pos:column="56"/></operator> <name pos:line="50" pos:column="57">IMAP_CMD_POLL<pos:position pos:line="50" pos:column="70"/></name></expr></argument>)<pos:position pos:line="50" pos:column="71"/></argument_list></call> <operator pos:line="50" pos:column="72">==<pos:position pos:line="50" pos:column="74"/></operator> <operator pos:line="50" pos:column="75">-<pos:position pos:line="50" pos:column="76"/></operator><literal type="number" pos:line="50" pos:column="76">1<pos:position pos:line="50" pos:column="77"/></literal></expr>)<pos:position pos:line="50" pos:column="78"/></condition><then pos:line="50" pos:column="78">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="9">dprint<pos:position pos:line="51" pos:column="15"/></name> <argument_list pos:line="51" pos:column="16">(<argument><expr><literal type="number" pos:line="51" pos:column="17">1<pos:position pos:line="51" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="51" pos:column="20">(<pos:position pos:line="51" pos:column="21"/></operator><name pos:line="51" pos:column="21">debugfile<pos:position pos:line="51" pos:column="30"/></name><operator pos:line="51" pos:column="30">,<pos:position pos:line="51" pos:column="31"/></operator> <literal type="string" pos:line="51" pos:column="32">"Error polling mailboxes\n"<pos:position pos:line="51" pos:column="59"/></literal><operator pos:line="51" pos:column="59">)<pos:position pos:line="51" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="51" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="62"/></expr_stmt></block></then></if>

      <expr_stmt><expr><name pos:line="53" pos:column="7">lastdata<pos:position pos:line="53" pos:column="15"/></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <name pos:line="53" pos:column="18">NULL<pos:position pos:line="53" pos:column="22"/></name></expr>;<pos:position pos:line="53" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>

    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><operator pos:line="56" pos:column="9">!<pos:position pos:line="56" pos:column="10"/></operator><name pos:line="56" pos:column="10">lastdata<pos:position pos:line="56" pos:column="18"/></name></expr>)<pos:position pos:line="56" pos:column="19"/></condition><then pos:line="56" pos:column="19">
      <block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="7">lastdata<pos:position pos:line="57" pos:column="15"/></name> <operator pos:line="57" pos:column="16">=<pos:position pos:line="57" pos:column="17"/></operator> <name pos:line="57" pos:column="18">idata<pos:position pos:line="57" pos:column="23"/></name></expr>;<pos:position pos:line="57" pos:column="24"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="59" pos:column="5">imap_munge_mbox_name<pos:position pos:line="59" pos:column="25"/></name> <argument_list pos:line="59" pos:column="26">(<argument><expr><name pos:line="59" pos:column="27">idata<pos:position pos:line="59" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="34">munged<pos:position pos:line="59" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="59" pos:column="42">sizeof <argument_list pos:line="59" pos:column="49">(<argument><expr><name pos:line="59" pos:column="50">munged<pos:position pos:line="59" pos:column="56"/></name></expr></argument>)<pos:position pos:line="59" pos:column="57"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="59" pos:column="59">name<pos:position pos:line="59" pos:column="63"/></name></expr></argument>)<pos:position pos:line="59" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="65"/></expr_stmt>
    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><name pos:line="60" pos:column="9">check_stats<pos:position pos:line="60" pos:column="20"/></name></expr>)<pos:position pos:line="60" pos:column="21"/></condition><then pos:line="60" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="7">snprintf<pos:position pos:line="61" pos:column="15"/></name> <argument_list pos:line="61" pos:column="16">(<argument><expr><name pos:line="61" pos:column="17">command<pos:position pos:line="61" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="26">sizeof <argument_list pos:line="61" pos:column="33">(<argument><expr><name pos:line="61" pos:column="34">command<pos:position pos:line="61" pos:column="41"/></name></expr></argument>)<pos:position pos:line="61" pos:column="42"/></argument_list></sizeof></expr></argument>,
	      <argument><expr><literal type="string" pos:line="62" pos:column="15">"STATUS %s (UIDNEXT UIDVALIDITY UNSEEN RECENT MESSAGES)"<pos:position pos:line="62" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="73">munged<pos:position pos:line="62" pos:column="79"/></name></expr></argument>)<pos:position pos:line="62" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="81"/></expr_stmt></block></then>
    <else pos:line="63" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="7">snprintf<pos:position pos:line="64" pos:column="15"/></name> <argument_list pos:line="64" pos:column="16">(<argument><expr><name pos:line="64" pos:column="17">command<pos:position pos:line="64" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="64" pos:column="26">sizeof <argument_list pos:line="64" pos:column="33">(<argument><expr><name pos:line="64" pos:column="34">command<pos:position pos:line="64" pos:column="41"/></name></expr></argument>)<pos:position pos:line="64" pos:column="42"/></argument_list></sizeof></expr></argument>,
	      <argument><expr><literal type="string" pos:line="65" pos:column="15">"STATUS %s (UIDNEXT UIDVALIDITY UNSEEN RECENT)"<pos:position pos:line="65" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="64">munged<pos:position pos:line="65" pos:column="70"/></name></expr></argument>)<pos:position pos:line="65" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="72"/></expr_stmt></block></else></if>

    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><call><name pos:line="67" pos:column="9">imap_exec<pos:position pos:line="67" pos:column="18"/></name> <argument_list pos:line="67" pos:column="19">(<argument><expr><name pos:line="67" pos:column="20">idata<pos:position pos:line="67" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="27">command<pos:position pos:line="67" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="36">IMAP_CMD_QUEUE<pos:position pos:line="67" pos:column="50"/></name> <operator pos:line="67" pos:column="51">|<pos:position pos:line="67" pos:column="52"/></operator> <name pos:line="67" pos:column="53">IMAP_CMD_POLL<pos:position pos:line="67" pos:column="66"/></name></expr></argument>)<pos:position pos:line="67" pos:column="67"/></argument_list></call> <operator pos:line="67" pos:column="68">&lt;<pos:position pos:line="67" pos:column="72"/></operator> <literal type="number" pos:line="67" pos:column="70">0<pos:position pos:line="67" pos:column="71"/></literal></expr>)<pos:position pos:line="67" pos:column="72"/></condition><then pos:line="67" pos:column="72">
    <block pos:line="68" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="69" pos:column="7">dprint<pos:position pos:line="69" pos:column="13"/></name> <argument_list pos:line="69" pos:column="14">(<argument><expr><literal type="number" pos:line="69" pos:column="15">1<pos:position pos:line="69" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="69" pos:column="18">(<pos:position pos:line="69" pos:column="19"/></operator><name pos:line="69" pos:column="19">debugfile<pos:position pos:line="69" pos:column="28"/></name><operator pos:line="69" pos:column="28">,<pos:position pos:line="69" pos:column="29"/></operator> <literal type="string" pos:line="69" pos:column="30">"Error queueing command\n"<pos:position pos:line="69" pos:column="56"/></literal><operator pos:line="69" pos:column="56">)<pos:position pos:line="69" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="69" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="59"/></expr_stmt>
      <return pos:line="70" pos:column="7">return <expr><literal type="number" pos:line="70" pos:column="14">0<pos:position pos:line="70" pos:column="15"/></literal></expr>;<pos:position pos:line="70" pos:column="16"/></return>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>
  }<pos:position pos:line="72" pos:column="4"/></block></for>

  <if pos:line="74" pos:column="3">if <condition pos:line="74" pos:column="6">(<expr><name pos:line="74" pos:column="7">lastdata<pos:position pos:line="74" pos:column="15"/></name> <operator pos:line="74" pos:column="16">&amp;&amp;<pos:position pos:line="74" pos:column="26"/></operator> <operator pos:line="74" pos:column="19">(<pos:position pos:line="74" pos:column="20"/></operator><call><name pos:line="74" pos:column="20">imap_exec<pos:position pos:line="74" pos:column="29"/></name> <argument_list pos:line="74" pos:column="30">(<argument><expr><name pos:line="74" pos:column="31">lastdata<pos:position pos:line="74" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="41">NULL<pos:position pos:line="74" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="47">IMAP_CMD_FAIL_OK<pos:position pos:line="74" pos:column="63"/></name> <operator pos:line="74" pos:column="64">|<pos:position pos:line="74" pos:column="65"/></operator> <name pos:line="74" pos:column="66">IMAP_CMD_POLL<pos:position pos:line="74" pos:column="79"/></name></expr></argument>)<pos:position pos:line="74" pos:column="80"/></argument_list></call> <operator pos:line="74" pos:column="81">==<pos:position pos:line="74" pos:column="83"/></operator> <operator pos:line="74" pos:column="84">-<pos:position pos:line="74" pos:column="85"/></operator><literal type="number" pos:line="74" pos:column="85">1<pos:position pos:line="74" pos:column="86"/></literal><operator pos:line="74" pos:column="86">)<pos:position pos:line="74" pos:column="87"/></operator></expr>)<pos:position pos:line="74" pos:column="88"/></condition><then pos:line="74" pos:column="88">
  <block pos:line="75" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="76" pos:column="5">dprint<pos:position pos:line="76" pos:column="11"/></name> <argument_list pos:line="76" pos:column="12">(<argument><expr><literal type="number" pos:line="76" pos:column="13">1<pos:position pos:line="76" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="76" pos:column="16">(<pos:position pos:line="76" pos:column="17"/></operator><name pos:line="76" pos:column="17">debugfile<pos:position pos:line="76" pos:column="26"/></name><operator pos:line="76" pos:column="26">,<pos:position pos:line="76" pos:column="27"/></operator> <literal type="string" pos:line="76" pos:column="28">"Error polling mailboxes\n"<pos:position pos:line="76" pos:column="55"/></literal><operator pos:line="76" pos:column="55">)<pos:position pos:line="76" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="76" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="58"/></expr_stmt>
    <return pos:line="77" pos:column="5">return <expr><literal type="number" pos:line="77" pos:column="12">0<pos:position pos:line="77" pos:column="13"/></literal></expr>;<pos:position pos:line="77" pos:column="14"/></return>
  }<pos:position pos:line="78" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="80" pos:column="3">/* collect results */</comment>
  <for pos:line="81" pos:column="3">for <control pos:line="81" pos:column="7">(<init><expr><name pos:line="81" pos:column="8">mailbox<pos:position pos:line="81" pos:column="15"/></name> <operator pos:line="81" pos:column="16">=<pos:position pos:line="81" pos:column="17"/></operator> <name pos:line="81" pos:column="18">Incoming<pos:position pos:line="81" pos:column="26"/></name></expr>;<pos:position pos:line="81" pos:column="27"/></init> <condition><expr><name pos:line="81" pos:column="28">mailbox<pos:position pos:line="81" pos:column="35"/></name></expr>;<pos:position pos:line="81" pos:column="36"/></condition> <incr><expr><name pos:line="81" pos:column="37">mailbox<pos:position pos:line="81" pos:column="44"/></name> <operator pos:line="81" pos:column="45">=<pos:position pos:line="81" pos:column="46"/></operator> <name><name pos:line="81" pos:column="47">mailbox<pos:position pos:line="81" pos:column="54"/></name><operator pos:line="81" pos:column="54">-&gt;<pos:position pos:line="81" pos:column="59"/></operator><name pos:line="81" pos:column="56">next<pos:position pos:line="81" pos:column="60"/></name></name></expr></incr>)<pos:position pos:line="81" pos:column="61"/></control>
  <block pos:line="82" pos:column="3">{
    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><name><name pos:line="83" pos:column="9">mailbox<pos:position pos:line="83" pos:column="16"/></name><operator pos:line="83" pos:column="16">-&gt;<pos:position pos:line="83" pos:column="21"/></operator><name pos:line="83" pos:column="18">magic<pos:position pos:line="83" pos:column="23"/></name></name> <operator pos:line="83" pos:column="24">==<pos:position pos:line="83" pos:column="26"/></operator> <name pos:line="83" pos:column="27">MUTT_IMAP<pos:position pos:line="83" pos:column="36"/></name> <operator pos:line="83" pos:column="37">&amp;&amp;<pos:position pos:line="83" pos:column="47"/></operator> <name><name pos:line="83" pos:column="40">mailbox<pos:position pos:line="83" pos:column="47"/></name><operator pos:line="83" pos:column="47">-&gt;<pos:position pos:line="83" pos:column="52"/></operator></name><operator pos:line="83" pos:column="49">new<pos:position pos:line="83" pos:column="52"/></operator></expr>)<pos:position pos:line="83" pos:column="53"/></condition><then pos:line="83" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="7">buffies<pos:position pos:line="84" pos:column="14"/></name><operator pos:line="84" pos:column="14">++<pos:position pos:line="84" pos:column="16"/></operator></expr>;<pos:position pos:line="84" pos:column="17"/></expr_stmt></block></then></if>
  }<pos:position pos:line="85" pos:column="4"/></block></for>

  <return pos:line="87" pos:column="3">return <expr><name pos:line="87" pos:column="10">buffies<pos:position pos:line="87" pos:column="17"/></name></expr>;<pos:position pos:line="87" pos:column="18"/></return>
}<pos:position pos:line="88" pos:column="2"/></block></function></unit>

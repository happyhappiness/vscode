<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_78_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_which_case<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">s<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <while pos:line="3" pos:column="3">while <condition pos:line="3" pos:column="9">(<expr><operator pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></operator><name pos:line="3" pos:column="11">s<pos:position pos:line="3" pos:column="12"/></name></expr>)<pos:position pos:line="3" pos:column="13"/></condition>
  <block pos:line="4" pos:column="3">{
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name pos:line="5" pos:column="9">isalpha<pos:position pos:line="5" pos:column="16"/></name> <argument_list pos:line="5" pos:column="17">(<argument><expr><operator pos:line="5" pos:column="18">(<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">unsigned<pos:position pos:line="5" pos:column="27"/></name> <name pos:line="5" pos:column="28">char<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">)<pos:position pos:line="5" pos:column="33"/></operator> <operator pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="35">s<pos:position pos:line="5" pos:column="36"/></name></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></call> <operator pos:line="5" pos:column="38">&amp;&amp;<pos:position pos:line="5" pos:column="48"/></operator> <call><name pos:line="5" pos:column="41">isupper<pos:position pos:line="5" pos:column="48"/></name> <argument_list pos:line="5" pos:column="49">(<argument><expr><operator pos:line="5" pos:column="50">(<pos:position pos:line="5" pos:column="51"/></operator><name pos:line="5" pos:column="51">unsigned<pos:position pos:line="5" pos:column="59"/></name> <name pos:line="5" pos:column="60">char<pos:position pos:line="5" pos:column="64"/></name><operator pos:line="5" pos:column="64">)<pos:position pos:line="5" pos:column="65"/></operator> <operator pos:line="5" pos:column="66">*<pos:position pos:line="5" pos:column="67"/></operator><name pos:line="5" pos:column="67">s<pos:position pos:line="5" pos:column="68"/></name></expr></argument>)<pos:position pos:line="5" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="70"/></condition><then pos:line="5" pos:column="70">
      <block type="pseudo"><return pos:line="6" pos:column="7">return <expr><literal type="number" pos:line="6" pos:column="14">0<pos:position pos:line="6" pos:column="15"/></literal></expr>;<pos:position pos:line="6" pos:column="16"/></return></block></then></if> <comment type="block" pos:line="6" pos:column="17">/* case-sensitive */</comment>
    <expr_stmt><expr><name pos:line="7" pos:column="5">s<pos:position pos:line="7" pos:column="6"/></name><operator pos:line="7" pos:column="6">++<pos:position pos:line="7" pos:column="8"/></operator></expr>;<pos:position pos:line="7" pos:column="9"/></expr_stmt>
  }<pos:position pos:line="8" pos:column="4"/></block></while>
  <return pos:line="9" pos:column="3">return <expr><name pos:line="9" pos:column="10">REG_ICASE<pos:position pos:line="9" pos:column="19"/></name></expr>;<pos:position pos:line="9" pos:column="20"/></return> <comment type="block" pos:line="9" pos:column="21">/* case-insensitive */</comment>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

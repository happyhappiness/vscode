<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_884_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ssl_load_certificates<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">SSL_CTX<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">ctx<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">FILE<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">fp<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">X509<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">cert<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><name pos:line="4" pos:column="16">NULL<pos:position pos:line="4" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">X509_STORE<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">store<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">buf<pos:position pos:line="6" pos:column="11"/></name><index pos:line="6" pos:column="11">[<expr><name pos:line="6" pos:column="12">STRING<pos:position pos:line="6" pos:column="18"/></name></expr>]<pos:position pos:line="6" pos:column="19"/></index></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">rv<pos:position pos:line="7" pos:column="9"/></name> <init pos:line="7" pos:column="10">= <expr><literal type="number" pos:line="7" pos:column="12">1<pos:position pos:line="7" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">dprint<pos:position pos:line="9" pos:column="9"/></name> <argument_list pos:line="9" pos:column="10">(<argument><expr><literal type="number" pos:line="9" pos:column="11">2<pos:position pos:line="9" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="14">(<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">debugfile<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">,<pos:position pos:line="9" pos:column="25"/></operator> <literal type="string" pos:line="9" pos:column="26">"ssl_load_certificates: loading trusted certificates\n"<pos:position pos:line="9" pos:column="81"/></literal><operator pos:line="9" pos:column="81">)<pos:position pos:line="9" pos:column="82"/></operator></expr></argument>)<pos:position pos:line="9" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="84"/></expr_stmt>
  <expr_stmt><expr><name pos:line="10" pos:column="3">store<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <call><name pos:line="10" pos:column="11">SSL_CTX_get_cert_store<pos:position pos:line="10" pos:column="33"/></name> <argument_list pos:line="10" pos:column="34">(<argument><expr><name pos:line="10" pos:column="35">ctx<pos:position pos:line="10" pos:column="38"/></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">!<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">store<pos:position pos:line="11" pos:column="13"/></name></expr>)<pos:position pos:line="11" pos:column="14"/></condition><then pos:line="11" pos:column="14">
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><name pos:line="13" pos:column="5">store<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <call><name pos:line="13" pos:column="13">X509_STORE_new<pos:position pos:line="13" pos:column="27"/></name> <argument_list pos:line="13" pos:column="28">()<pos:position pos:line="13" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">SSL_CTX_set_cert_store<pos:position pos:line="14" pos:column="27"/></name> <argument_list pos:line="14" pos:column="28">(<argument><expr><name pos:line="14" pos:column="29">ctx<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="34">store<pos:position pos:line="14" pos:column="39"/></name></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">(<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">fp<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <call><name pos:line="17" pos:column="13">fopen<pos:position pos:line="17" pos:column="18"/></name> <argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">SslCertFile<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="33">"rt"<pos:position pos:line="17" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></call><operator pos:line="17" pos:column="38">)<pos:position pos:line="17" pos:column="39"/></operator> <operator pos:line="17" pos:column="40">==<pos:position pos:line="17" pos:column="42"/></operator> <name pos:line="17" pos:column="43">NULL<pos:position pos:line="17" pos:column="47"/></name></expr>)<pos:position pos:line="17" pos:column="48"/></condition><then pos:line="17" pos:column="48">
    <block type="pseudo"><return pos:line="18" pos:column="5">return <expr><literal type="number" pos:line="18" pos:column="12">0<pos:position pos:line="18" pos:column="13"/></literal></expr>;<pos:position pos:line="18" pos:column="14"/></return></block></then></if>

  <while pos:line="20" pos:column="3">while <condition pos:line="20" pos:column="9">(<expr><name pos:line="20" pos:column="10">NULL<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">!=<pos:position pos:line="20" pos:column="17"/></operator> <call><name pos:line="20" pos:column="18">PEM_read_X509<pos:position pos:line="20" pos:column="31"/></name> <argument_list pos:line="20" pos:column="32">(<argument><expr><name pos:line="20" pos:column="33">fp<pos:position pos:line="20" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="37">&amp;<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="38">cert<pos:position pos:line="20" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="44">NULL<pos:position pos:line="20" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="50">NULL<pos:position pos:line="20" pos:column="54"/></name></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="56"/></condition>
  <block pos:line="21" pos:column="3">{
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><call><name pos:line="22" pos:column="10">X509_cmp_current_time<pos:position pos:line="22" pos:column="31"/></name> <argument_list pos:line="22" pos:column="32">(<argument><expr><call><name pos:line="22" pos:column="33">X509_get_notBefore<pos:position pos:line="22" pos:column="51"/></name> <argument_list pos:line="22" pos:column="52">(<argument><expr><name pos:line="22" pos:column="53">cert<pos:position pos:line="22" pos:column="57"/></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="59"/></argument_list></call> <operator pos:line="22" pos:column="60">&gt;=<pos:position pos:line="22" pos:column="65"/></operator> <literal type="number" pos:line="22" pos:column="63">0<pos:position pos:line="22" pos:column="64"/></literal><operator pos:line="22" pos:column="64">)<pos:position pos:line="22" pos:column="65"/></operator> <operator pos:line="22" pos:column="66">||<pos:position pos:line="22" pos:column="68"/></operator>
        <operator pos:line="23" pos:column="9">(<pos:position pos:line="23" pos:column="10"/></operator><call><name pos:line="23" pos:column="10">X509_cmp_current_time<pos:position pos:line="23" pos:column="31"/></name> <argument_list pos:line="23" pos:column="32">(<argument><expr><call><name pos:line="23" pos:column="33">X509_get_notAfter<pos:position pos:line="23" pos:column="50"/></name> <argument_list pos:line="23" pos:column="51">(<argument><expr><name pos:line="23" pos:column="52">cert<pos:position pos:line="23" pos:column="56"/></name></expr></argument>)<pos:position pos:line="23" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></call> <operator pos:line="23" pos:column="59">&lt;=<pos:position pos:line="23" pos:column="64"/></operator> <literal type="number" pos:line="23" pos:column="62">0<pos:position pos:line="23" pos:column="63"/></literal><operator pos:line="23" pos:column="63">)<pos:position pos:line="23" pos:column="64"/></operator></expr>)<pos:position pos:line="23" pos:column="65"/></condition><then pos:line="23" pos:column="65">
    <block pos:line="24" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">dprint<pos:position pos:line="25" pos:column="13"/></name> <argument_list pos:line="25" pos:column="14">(<argument><expr><literal type="number" pos:line="25" pos:column="15">2<pos:position pos:line="25" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="25" pos:column="18">(<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">debugfile<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">,<pos:position pos:line="25" pos:column="29"/></operator> <literal type="string" pos:line="25" pos:column="30">"ssl_load_certificates: filtering expired cert: %s\n"<pos:position pos:line="25" pos:column="83"/></literal><operator pos:line="25" pos:column="83">,<pos:position pos:line="25" pos:column="84"/></operator>
              <call><name pos:line="26" pos:column="15">X509_NAME_oneline<pos:position pos:line="26" pos:column="32"/></name> <argument_list pos:line="26" pos:column="33">(<argument><expr><call><name pos:line="26" pos:column="34">X509_get_subject_name<pos:position pos:line="26" pos:column="55"/></name> <argument_list pos:line="26" pos:column="56">(<argument><expr><name pos:line="26" pos:column="57">cert<pos:position pos:line="26" pos:column="61"/></name></expr></argument>)<pos:position pos:line="26" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="26" pos:column="64">buf<pos:position pos:line="26" pos:column="67"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="69">sizeof <argument_list pos:line="26" pos:column="76">(<argument><expr><name pos:line="26" pos:column="77">buf<pos:position pos:line="26" pos:column="80"/></name></expr></argument>)<pos:position pos:line="26" pos:column="81"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="82"/></argument_list></call><operator pos:line="26" pos:column="82">)<pos:position pos:line="26" pos:column="83"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="85"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then>
    <else pos:line="28" pos:column="5">else
    <block pos:line="29" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">X509_STORE_add_cert<pos:position pos:line="30" pos:column="26"/></name> <argument_list pos:line="30" pos:column="27">(<argument><expr><name pos:line="30" pos:column="28">store<pos:position pos:line="30" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="35">cert<pos:position pos:line="30" pos:column="39"/></name></expr></argument>)<pos:position pos:line="30" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></else></if>
  }<pos:position pos:line="32" pos:column="4"/></block></while>
  <comment type="block" pos:line="33" pos:column="3">/* PEM_read_X509 sets the error NO_START_LINE on eof */</comment>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><call><name pos:line="34" pos:column="7">ERR_GET_REASON<pos:position pos:line="34" pos:column="21"/></name><argument_list pos:line="34" pos:column="21">(<argument><expr><call><name pos:line="34" pos:column="22">ERR_peek_last_error<pos:position pos:line="34" pos:column="41"/></name><argument_list pos:line="34" pos:column="41">()<pos:position pos:line="34" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="44"/></argument_list></call> <operator pos:line="34" pos:column="45">!=<pos:position pos:line="34" pos:column="47"/></operator> <name pos:line="34" pos:column="48">PEM_R_NO_START_LINE<pos:position pos:line="34" pos:column="67"/></name></expr>)<pos:position pos:line="34" pos:column="68"/></condition><then pos:line="34" pos:column="68">
    <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="5">rv<pos:position pos:line="35" pos:column="7"/></name> <operator pos:line="35" pos:column="8">=<pos:position pos:line="35" pos:column="9"/></operator> <literal type="number" pos:line="35" pos:column="10">0<pos:position pos:line="35" pos:column="11"/></literal></expr>;<pos:position pos:line="35" pos:column="12"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">ERR_clear_error<pos:position pos:line="36" pos:column="18"/></name><argument_list pos:line="36" pos:column="18">()<pos:position pos:line="36" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="38" pos:column="3">X509_free<pos:position pos:line="38" pos:column="12"/></name> <argument_list pos:line="38" pos:column="13">(<argument><expr><name pos:line="38" pos:column="14">cert<pos:position pos:line="38" pos:column="18"/></name></expr></argument>)<pos:position pos:line="38" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">safe_fclose<pos:position pos:line="39" pos:column="14"/></name> <argument_list pos:line="39" pos:column="15">(<argument><expr><operator pos:line="39" pos:column="16">&amp;<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="17">fp<pos:position pos:line="39" pos:column="19"/></name></expr></argument>)<pos:position pos:line="39" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="21"/></expr_stmt>

  <return pos:line="41" pos:column="3">return <expr><name pos:line="41" pos:column="10">rv<pos:position pos:line="41" pos:column="12"/></name></expr>;<pos:position pos:line="41" pos:column="13"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

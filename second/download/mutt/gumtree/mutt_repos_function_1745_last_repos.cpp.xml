<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1745_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">mutt_free_opt<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">option_t<pos:position pos:line="1" pos:column="43"/></name></name><modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type> <name pos:line="1" pos:column="45">p<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">REGEXP<pos:position pos:line="3" pos:column="9"/></name><modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type> <name pos:line="3" pos:column="11">pp<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>

  <switch pos:line="5" pos:column="3">switch <condition pos:line="5" pos:column="10">(<expr><name><name pos:line="5" pos:column="11">p<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">-&gt;<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="14">type<pos:position pos:line="5" pos:column="18"/></name></name> <operator pos:line="5" pos:column="19">&amp;<pos:position pos:line="5" pos:column="24"/></operator> <name pos:line="5" pos:column="21">DT_MASK<pos:position pos:line="5" pos:column="28"/></name></expr>)<pos:position pos:line="5" pos:column="29"/></condition>
  <block pos:line="6" pos:column="3">{
  <case pos:line="7" pos:column="3">case <expr><name pos:line="7" pos:column="8">DT_ADDR<pos:position pos:line="7" pos:column="15"/></name></expr>:<pos:position pos:line="7" pos:column="16"/></case>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">rfc822_free_address<pos:position pos:line="8" pos:column="24"/></name> <argument_list pos:line="8" pos:column="25">(<argument><expr><operator pos:line="8" pos:column="26">(<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="27">ADDRESS<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">*<pos:position pos:line="8" pos:column="35"/></operator><operator pos:line="8" pos:column="35">*<pos:position pos:line="8" pos:column="36"/></operator><operator pos:line="8" pos:column="36">)<pos:position pos:line="8" pos:column="37"/></operator><name><name pos:line="8" pos:column="37">p<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">-&gt;<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="40">data<pos:position pos:line="8" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="46"/></expr_stmt>
    <break pos:line="9" pos:column="5">break;<pos:position pos:line="9" pos:column="11"/></break>
  <case pos:line="10" pos:column="3">case <expr><name pos:line="10" pos:column="8">DT_RX<pos:position pos:line="10" pos:column="13"/></name></expr>:<pos:position pos:line="10" pos:column="14"/></case>
    <expr_stmt><expr><name pos:line="11" pos:column="5">pp<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <operator pos:line="11" pos:column="10">(<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">REGEXP<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></operator><operator pos:line="11" pos:column="18">)<pos:position pos:line="11" pos:column="19"/></operator><name><name pos:line="11" pos:column="19">p<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">data<pos:position pos:line="11" pos:column="26"/></name></name></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">FREE<pos:position pos:line="12" pos:column="9"/></name> <argument_list pos:line="12" pos:column="10">(<argument><expr><operator pos:line="12" pos:column="11">&amp;<pos:position pos:line="12" pos:column="16"/></operator><name><name pos:line="12" pos:column="12">pp<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">pattern<pos:position pos:line="12" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">pp<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">rx<pos:position pos:line="13" pos:column="15"/></name></name></expr>)<pos:position pos:line="13" pos:column="16"/></condition><then pos:line="13" pos:column="16">
    <block pos:line="14" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">regfree<pos:position pos:line="15" pos:column="14"/></name> <argument_list pos:line="15" pos:column="15">(<argument><expr><name><name pos:line="15" pos:column="16">pp<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">-&gt;<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="20">rx<pos:position pos:line="15" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">FREE<pos:position pos:line="16" pos:column="11"/></name> <argument_list pos:line="16" pos:column="12">(<argument><expr><operator pos:line="16" pos:column="13">&amp;<pos:position pos:line="16" pos:column="18"/></operator><name><name pos:line="16" pos:column="14">pp<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">rx<pos:position pos:line="16" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <break pos:line="18" pos:column="5">break;<pos:position pos:line="18" pos:column="11"/></break>
  <case pos:line="19" pos:column="3">case <expr><name pos:line="19" pos:column="8">DT_PATH<pos:position pos:line="19" pos:column="15"/></name></expr>:<pos:position pos:line="19" pos:column="16"/></case>
  <case pos:line="20" pos:column="3">case <expr><name pos:line="20" pos:column="8">DT_STR<pos:position pos:line="20" pos:column="14"/></name></expr>:<pos:position pos:line="20" pos:column="15"/></case>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">FREE<pos:position pos:line="21" pos:column="9"/></name> <argument_list pos:line="21" pos:column="10">(<argument><expr><operator pos:line="21" pos:column="11">(<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="12">char<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">*<pos:position pos:line="21" pos:column="17"/></operator><operator pos:line="21" pos:column="17">*<pos:position pos:line="21" pos:column="18"/></operator><operator pos:line="21" pos:column="18">)<pos:position pos:line="21" pos:column="19"/></operator><name><name pos:line="21" pos:column="19">p<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">data<pos:position pos:line="21" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>		<comment type="block" pos:line="21" pos:column="41">/* __FREE_CHECKED__ */</comment>
    <break pos:line="22" pos:column="5">break;<pos:position pos:line="22" pos:column="11"/></break>
  }<pos:position pos:line="23" pos:column="4"/></block></switch>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

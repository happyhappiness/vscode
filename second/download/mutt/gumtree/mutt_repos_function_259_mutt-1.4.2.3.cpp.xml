<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_259_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">parse_keymap<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">int<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">menu<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="32">BUFFER<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">s<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">BUFFER<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">err<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">BUFFER<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">buf<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">memset<pos:position pos:line="5" pos:column="9"/></name> <argument_list pos:line="5" pos:column="10">(<argument><expr><operator pos:line="5" pos:column="11">&amp;<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="12">buf<pos:position pos:line="5" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="17">0<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="20">sizeof <argument_list pos:line="5" pos:column="27">(<argument><expr><name pos:line="5" pos:column="28">buf<pos:position pos:line="5" pos:column="31"/></name></expr></argument>)<pos:position pos:line="5" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="34"/></expr_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* menu name */</comment>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">mutt_extract_token<pos:position pos:line="8" pos:column="21"/></name> <argument_list pos:line="8" pos:column="22">(<argument><expr><operator pos:line="8" pos:column="23">&amp;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="24">buf<pos:position pos:line="8" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="29">s<pos:position pos:line="8" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="32">0<pos:position pos:line="8" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><call><name pos:line="9" pos:column="7">MoreArgs<pos:position pos:line="9" pos:column="15"/></name> <argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">s<pos:position pos:line="9" pos:column="18"/></name></expr></argument>)<pos:position pos:line="9" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="20"/></condition><then pos:line="9" pos:column="20">
  <block pos:line="10" pos:column="3">{
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">(<pos:position pos:line="11" pos:column="10"/></operator><operator pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">menu<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <call><name pos:line="11" pos:column="18">mutt_check_menu<pos:position pos:line="11" pos:column="33"/></name> <argument_list pos:line="11" pos:column="34">(<argument><expr><name><name pos:line="11" pos:column="35">buf<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">.<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="39">data<pos:position pos:line="11" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call><operator pos:line="11" pos:column="44">)<pos:position pos:line="11" pos:column="45"/></operator> <operator pos:line="11" pos:column="46">==<pos:position pos:line="11" pos:column="48"/></operator> <operator pos:line="11" pos:column="49">-<pos:position pos:line="11" pos:column="50"/></operator><literal type="number" pos:line="11" pos:column="50">1<pos:position pos:line="11" pos:column="51"/></literal></expr>)<pos:position pos:line="11" pos:column="52"/></condition><then pos:line="11" pos:column="52">
    <block pos:line="12" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="13" pos:column="7">snprintf<pos:position pos:line="13" pos:column="15"/></name> <argument_list pos:line="13" pos:column="16">(<argument><expr><name><name pos:line="13" pos:column="17">err<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="22">data<pos:position pos:line="13" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="28">err<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">-&gt;<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="33">dsize<pos:position pos:line="13" pos:column="38"/></name></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="40">_<pos:position pos:line="13" pos:column="41"/></name><argument_list pos:line="13" pos:column="41">(<argument><expr><literal type="string" pos:line="13" pos:column="42">"%s: no such menu"<pos:position pos:line="13" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="63">buf<pos:position pos:line="13" pos:column="66"/></name><operator pos:line="13" pos:column="66">.<pos:position pos:line="13" pos:column="67"/></operator><name pos:line="13" pos:column="67">data<pos:position pos:line="13" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then>
    <else pos:line="15" pos:column="5">else
    <block pos:line="16" pos:column="5">{
      <comment type="block" pos:line="17" pos:column="7">/* key sequence */</comment>
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">mutt_extract_token<pos:position pos:line="18" pos:column="25"/></name> <argument_list pos:line="18" pos:column="26">(<argument><expr><operator pos:line="18" pos:column="27">&amp;<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="28">buf<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="33">s<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="36">0<pos:position pos:line="18" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>

      <if pos:line="20" pos:column="7">if <condition pos:line="20" pos:column="10">(<expr><operator pos:line="20" pos:column="11">!<pos:position pos:line="20" pos:column="12"/></operator><operator pos:line="20" pos:column="12">*<pos:position pos:line="20" pos:column="13"/></operator><name><name pos:line="20" pos:column="13">buf<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">.<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">data<pos:position pos:line="20" pos:column="21"/></name></name></expr>)<pos:position pos:line="20" pos:column="22"/></condition><then pos:line="20" pos:column="22">
      <block pos:line="21" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">strfcpy<pos:position pos:line="22" pos:column="16"/></name> <argument_list pos:line="22" pos:column="17">(<argument><expr><name><name pos:line="22" pos:column="18">err<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">-&gt;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="23">data<pos:position pos:line="22" pos:column="27"/></name></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="29">_<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><literal type="string" pos:line="22" pos:column="31">"null key sequence"<pos:position pos:line="22" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="53">err<pos:position pos:line="22" pos:column="56"/></name><operator pos:line="22" pos:column="56">-&gt;<pos:position pos:line="22" pos:column="61"/></operator><name pos:line="22" pos:column="58">dsize<pos:position pos:line="22" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="65"/></expr_stmt>
      }<pos:position pos:line="23" pos:column="8"/></block></then>
      <elseif pos:line="24" pos:column="7">else <if pos:line="24" pos:column="12">if <condition pos:line="24" pos:column="15">(<expr><call><name pos:line="24" pos:column="16">MoreArgs<pos:position pos:line="24" pos:column="24"/></name> <argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">s<pos:position pos:line="24" pos:column="27"/></name></expr></argument>)<pos:position pos:line="24" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="29"/></condition><then pos:line="24" pos:column="29">
	<block type="pseudo"><return pos:line="25" pos:column="9">return <expr><operator pos:line="25" pos:column="16">(<pos:position pos:line="25" pos:column="17"/></operator><name><name pos:line="25" pos:column="17">buf<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">.<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="21">data<pos:position pos:line="25" pos:column="25"/></name></name><operator pos:line="25" pos:column="25">)<pos:position pos:line="25" pos:column="26"/></operator></expr>;<pos:position pos:line="25" pos:column="27"/></return></block></then></if></elseif></if>
    }<pos:position pos:line="26" pos:column="6"/></block></else></if>
  }<pos:position pos:line="27" pos:column="4"/></block></then>
  <else pos:line="28" pos:column="3">else
  <block pos:line="29" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">strfcpy<pos:position pos:line="30" pos:column="12"/></name> <argument_list pos:line="30" pos:column="13">(<argument><expr><name><name pos:line="30" pos:column="14">err<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">-&gt;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="19">data<pos:position pos:line="30" pos:column="23"/></name></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="25">_<pos:position pos:line="30" pos:column="26"/></name><argument_list pos:line="30" pos:column="26">(<argument><expr><literal type="string" pos:line="30" pos:column="27">"too few arguments"<pos:position pos:line="30" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="49">err<pos:position pos:line="30" pos:column="52"/></name><operator pos:line="30" pos:column="52">-&gt;<pos:position pos:line="30" pos:column="57"/></operator><name pos:line="30" pos:column="54">dsize<pos:position pos:line="30" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="61"/></expr_stmt>
  }<pos:position pos:line="31" pos:column="4"/></block></else></if>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">FREE<pos:position pos:line="32" pos:column="7"/></name> <argument_list pos:line="32" pos:column="8">(<argument><expr><operator pos:line="32" pos:column="9">&amp;<pos:position pos:line="32" pos:column="14"/></operator><name><name pos:line="32" pos:column="10">buf<pos:position pos:line="32" pos:column="13"/></name><operator pos:line="32" pos:column="13">.<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">data<pos:position pos:line="32" pos:column="18"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="20"/></expr_stmt>
  <return pos:line="33" pos:column="3">return <expr><operator pos:line="33" pos:column="10">(<pos:position pos:line="33" pos:column="11"/></operator><name pos:line="33" pos:column="11">NULL<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">)<pos:position pos:line="33" pos:column="16"/></operator></expr>;<pos:position pos:line="33" pos:column="17"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1354_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_pipe_attachment_list<pos:position pos:line="1" pos:column="31"/></name> <parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">ATTACH_CONTEXT<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">actx<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">FILE<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">fp<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">int<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">tag<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="74">BODY<pos:position pos:line="1" pos:column="78"/></name> <modifier pos:line="1" pos:column="79">*<pos:position pos:line="1" pos:column="80"/></modifier></type><name pos:line="1" pos:column="80">top<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="85">int<pos:position pos:line="1" pos:column="88"/></name></type> <name pos:line="1" pos:column="89">filter<pos:position pos:line="1" pos:column="95"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="96"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">STATE<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">state<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buf<pos:position pos:line="4" pos:column="11"/></name><index pos:line="4" pos:column="11">[<expr><name pos:line="4" pos:column="12">SHORT_STRING<pos:position pos:line="4" pos:column="24"/></name></expr>]<pos:position pos:line="4" pos:column="25"/></index></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">pid_t<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">thepid<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">fp<pos:position pos:line="7" pos:column="9"/></name></expr>)<pos:position pos:line="7" pos:column="10"/></condition><then pos:line="7" pos:column="10">
    <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="5">filter<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <literal type="number" pos:line="8" pos:column="14">0<pos:position pos:line="8" pos:column="15"/></literal></expr>;<pos:position pos:line="8" pos:column="16"/></expr_stmt></block></then></if> <comment type="block" pos:line="8" pos:column="17">/* sanity check: we can't filter in the recv case yet */</comment>

  <expr_stmt><expr><name><name pos:line="10" pos:column="3">buf<pos:position pos:line="10" pos:column="6"/></name><index pos:line="10" pos:column="6">[<expr><literal type="number" pos:line="10" pos:column="7">0<pos:position pos:line="10" pos:column="8"/></literal></expr>]<pos:position pos:line="10" pos:column="9"/></index></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <literal type="number" pos:line="10" pos:column="12">0<pos:position pos:line="10" pos:column="13"/></literal></expr>;<pos:position pos:line="10" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">memset<pos:position pos:line="11" pos:column="9"/></name> <argument_list pos:line="11" pos:column="10">(<argument><expr><operator pos:line="11" pos:column="11">&amp;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="12">state<pos:position pos:line="11" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="19">0<pos:position pos:line="11" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="22">sizeof <argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">STATE<pos:position pos:line="11" pos:column="35"/></name></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>
  <comment type="block" pos:line="12" pos:column="3">/* perform charset conversion on text attachments when piping */</comment>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">state<pos:position pos:line="13" pos:column="8"/></name><operator pos:line="13" pos:column="8">.<pos:position pos:line="13" pos:column="9"/></operator><name pos:line="13" pos:column="9">flags<pos:position pos:line="13" pos:column="14"/></name></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <name pos:line="13" pos:column="17">MUTT_CHARCONV<pos:position pos:line="13" pos:column="30"/></name></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><call><name pos:line="15" pos:column="7">mutt_get_field<pos:position pos:line="15" pos:column="21"/></name> <argument_list pos:line="15" pos:column="22">(<argument><expr><operator pos:line="15" pos:column="23">(<pos:position pos:line="15" pos:column="24"/></operator><ternary><condition><expr><name pos:line="15" pos:column="24">filter<pos:position pos:line="15" pos:column="30"/></name></expr> ?<pos:position pos:line="15" pos:column="32"/></condition><then pos:line="15" pos:column="32"> <expr><call><name pos:line="15" pos:column="33">_<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><literal type="string" pos:line="15" pos:column="35">"Filter through: "<pos:position pos:line="15" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr> <pos:position pos:line="15" pos:column="55"/></then><else pos:line="15" pos:column="55">: <expr><call><name pos:line="15" pos:column="57">_<pos:position pos:line="15" pos:column="58"/></name><argument_list pos:line="15" pos:column="58">(<argument><expr><literal type="string" pos:line="15" pos:column="59">"Pipe to: "<pos:position pos:line="15" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr></else></ternary><operator pos:line="15" pos:column="71">)<pos:position pos:line="15" pos:column="72"/></operator></expr></argument>,
				  <argument><expr><name pos:line="16" pos:column="35">buf<pos:position pos:line="16" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="40">sizeof <argument_list pos:line="16" pos:column="47">(<argument><expr><name pos:line="16" pos:column="48">buf<pos:position pos:line="16" pos:column="51"/></name></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="16" pos:column="54">MUTT_CMD<pos:position pos:line="16" pos:column="62"/></name></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call> <operator pos:line="16" pos:column="64">!=<pos:position pos:line="16" pos:column="66"/></operator> <literal type="number" pos:line="16" pos:column="67">0<pos:position pos:line="16" pos:column="68"/></literal> <operator pos:line="16" pos:column="69">||<pos:position pos:line="16" pos:column="71"/></operator> <operator pos:line="16" pos:column="72">!<pos:position pos:line="16" pos:column="73"/></operator><name><name pos:line="16" pos:column="73">buf<pos:position pos:line="16" pos:column="76"/></name><index pos:line="16" pos:column="76">[<expr><literal type="number" pos:line="16" pos:column="77">0<pos:position pos:line="16" pos:column="78"/></literal></expr>]<pos:position pos:line="16" pos:column="79"/></index></name></expr>)<pos:position pos:line="16" pos:column="80"/></condition><then pos:line="16" pos:column="80">
    <block type="pseudo"><return pos:line="17" pos:column="5">return;<pos:position pos:line="17" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="19" pos:column="3">mutt_expand_path<pos:position pos:line="19" pos:column="19"/></name> <argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">buf<pos:position pos:line="19" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="26">sizeof <argument_list pos:line="19" pos:column="33">(<argument><expr><name pos:line="19" pos:column="34">buf<pos:position pos:line="19" pos:column="37"/></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>

  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><operator pos:line="21" pos:column="7">!<pos:position pos:line="21" pos:column="8"/></operator><name pos:line="21" pos:column="8">filter<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">&amp;&amp;<pos:position pos:line="21" pos:column="25"/></operator> <operator pos:line="21" pos:column="18">!<pos:position pos:line="21" pos:column="19"/></operator><call><name pos:line="21" pos:column="19">option<pos:position pos:line="21" pos:column="25"/></name> <argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">OPTATTACHSPLIT<pos:position pos:line="21" pos:column="41"/></name></expr></argument>)<pos:position pos:line="21" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="43"/></condition><then pos:line="21" pos:column="43">
  <block pos:line="22" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">mutt_endwin<pos:position pos:line="23" pos:column="16"/></name> <argument_list pos:line="23" pos:column="17">(<argument><expr><name pos:line="23" pos:column="18">NULL<pos:position pos:line="23" pos:column="22"/></name></expr></argument>)<pos:position pos:line="23" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">thepid<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <call><name pos:line="24" pos:column="14">mutt_create_filter<pos:position pos:line="24" pos:column="32"/></name> <argument_list pos:line="24" pos:column="33">(<argument><expr><name pos:line="24" pos:column="34">buf<pos:position pos:line="24" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="39">&amp;<pos:position pos:line="24" pos:column="44"/></operator><name><name pos:line="24" pos:column="40">state<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">.<pos:position pos:line="24" pos:column="46"/></operator><name pos:line="24" pos:column="46">fpout<pos:position pos:line="24" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="53">NULL<pos:position pos:line="24" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="59">NULL<pos:position pos:line="24" pos:column="63"/></name></expr></argument>)<pos:position pos:line="24" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">pipe_attachment_list<pos:position pos:line="25" pos:column="25"/></name> <argument_list pos:line="25" pos:column="26">(<argument><expr><name pos:line="25" pos:column="27">buf<pos:position pos:line="25" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="32">actx<pos:position pos:line="25" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="38">fp<pos:position pos:line="25" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="42">tag<pos:position pos:line="25" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="47">top<pos:position pos:line="25" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="52">filter<pos:position pos:line="25" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="60">&amp;<pos:position pos:line="25" pos:column="65"/></operator><name pos:line="25" pos:column="61">state<pos:position pos:line="25" pos:column="66"/></name></expr></argument>)<pos:position pos:line="25" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">safe_fclose<pos:position pos:line="26" pos:column="16"/></name> <argument_list pos:line="26" pos:column="17">(<argument><expr><operator pos:line="26" pos:column="18">&amp;<pos:position pos:line="26" pos:column="23"/></operator><name><name pos:line="26" pos:column="19">state<pos:position pos:line="26" pos:column="24"/></name><operator pos:line="26" pos:column="24">.<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="25">fpout<pos:position pos:line="26" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><call><name pos:line="27" pos:column="9">mutt_wait_filter<pos:position pos:line="27" pos:column="25"/></name> <argument_list pos:line="27" pos:column="26">(<argument><expr><name pos:line="27" pos:column="27">thepid<pos:position pos:line="27" pos:column="33"/></name></expr></argument>)<pos:position pos:line="27" pos:column="34"/></argument_list></call> <operator pos:line="27" pos:column="35">!=<pos:position pos:line="27" pos:column="37"/></operator> <literal type="number" pos:line="27" pos:column="38">0<pos:position pos:line="27" pos:column="39"/></literal> <operator pos:line="27" pos:column="40">||<pos:position pos:line="27" pos:column="42"/></operator> <call><name pos:line="27" pos:column="43">option<pos:position pos:line="27" pos:column="49"/></name> <argument_list pos:line="27" pos:column="50">(<argument><expr><name pos:line="27" pos:column="51">OPTWAITKEY<pos:position pos:line="27" pos:column="61"/></name></expr></argument>)<pos:position pos:line="27" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="63"/></condition><then pos:line="27" pos:column="63">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="7">mutt_any_key_to_continue<pos:position pos:line="28" pos:column="31"/></name> <argument_list pos:line="28" pos:column="32">(<argument><expr><name pos:line="28" pos:column="33">NULL<pos:position pos:line="28" pos:column="37"/></name></expr></argument>)<pos:position pos:line="28" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="39"/></expr_stmt></block></then></if>
  }<pos:position pos:line="29" pos:column="4"/></block></then>
  <else pos:line="30" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="5">pipe_attachment_list<pos:position pos:line="31" pos:column="25"/></name> <argument_list pos:line="31" pos:column="26">(<argument><expr><name pos:line="31" pos:column="27">buf<pos:position pos:line="31" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="32">actx<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="38">fp<pos:position pos:line="31" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="42">tag<pos:position pos:line="31" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="47">top<pos:position pos:line="31" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="52">filter<pos:position pos:line="31" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="60">&amp;<pos:position pos:line="31" pos:column="65"/></operator><name pos:line="31" pos:column="61">state<pos:position pos:line="31" pos:column="66"/></name></expr></argument>)<pos:position pos:line="31" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="68"/></expr_stmt></block></else></if>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

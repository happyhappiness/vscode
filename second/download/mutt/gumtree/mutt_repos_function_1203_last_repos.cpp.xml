<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1203_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">intl_to_local<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">orig_user<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">orig_domain<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">int<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">flags<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">local_user<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name pos:line="3" pos:column="22">NULL<pos:position pos:line="3" pos:column="26"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="29">local_domain<pos:position pos:line="3" pos:column="41"/></name> <init pos:line="3" pos:column="42">= <expr><name pos:line="3" pos:column="44">NULL<pos:position pos:line="3" pos:column="48"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="50">*<pos:position pos:line="3" pos:column="51"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="51">mailbox<pos:position pos:line="3" pos:column="58"/></name> <init pos:line="3" pos:column="59">= <expr><name pos:line="3" pos:column="61">NULL<pos:position pos:line="3" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="66"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">reversed_user<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><name pos:line="4" pos:column="25">NULL<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="32">reversed_domain<pos:position pos:line="4" pos:column="47"/></name> <init pos:line="4" pos:column="48">= <expr><name pos:line="4" pos:column="50">NULL<pos:position pos:line="4" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="55"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">tmp<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><name pos:line="5" pos:column="15">NULL<pos:position pos:line="5" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">HAVE_LIBIDN<pos:position pos:line="6" pos:column="19"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">is_idn_encoded<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="8" pos:column="8">/* HAVE_LIBIDN */</comment>

  <expr_stmt><expr><name pos:line="10" pos:column="3">local_user<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <call><name pos:line="10" pos:column="16">safe_strdup<pos:position pos:line="10" pos:column="27"/></name> <argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">orig_user<pos:position pos:line="10" pos:column="38"/></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name pos:line="11" pos:column="3">local_domain<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <call><name pos:line="11" pos:column="18">safe_strdup<pos:position pos:line="11" pos:column="29"/></name> <argument_list pos:line="11" pos:column="30">(<argument><expr><name pos:line="11" pos:column="31">orig_domain<pos:position pos:line="11" pos:column="42"/></name></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>

<cpp:ifdef pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">ifdef<pos:position pos:line="13" pos:column="7"/></cpp:directive> <name pos:line="13" pos:column="8">HAVE_LIBIDN<pos:position pos:line="13" pos:column="19"/></name></cpp:ifdef>
  <expr_stmt><expr><name pos:line="14" pos:column="3">is_idn_encoded<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <call><name pos:line="14" pos:column="20">check_idn<pos:position pos:line="14" pos:column="29"/></name> <argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">local_domain<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></expr_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">is_idn_encoded<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">&amp;&amp;<pos:position pos:line="15" pos:column="32"/></operator> <call><name pos:line="15" pos:column="25">option<pos:position pos:line="15" pos:column="31"/></name> <argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">OPTIDNDECODE<pos:position pos:line="15" pos:column="45"/></name></expr></argument>)<pos:position pos:line="15" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="47"/></condition><then pos:line="15" pos:column="47">
  <block pos:line="16" pos:column="3">{
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name pos:line="17" pos:column="9">idna_to_unicode_8z8z<pos:position pos:line="17" pos:column="29"/></name> <argument_list pos:line="17" pos:column="30">(<argument><expr><name pos:line="17" pos:column="31">local_domain<pos:position pos:line="17" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="45">&amp;<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="46">tmp<pos:position pos:line="17" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="51">IDNA_ALLOW_UNASSIGNED<pos:position pos:line="17" pos:column="72"/></name></expr></argument>)<pos:position pos:line="17" pos:column="73"/></argument_list></call> <operator pos:line="17" pos:column="74">!=<pos:position pos:line="17" pos:column="76"/></operator> <name pos:line="17" pos:column="77">IDNA_SUCCESS<pos:position pos:line="17" pos:column="89"/></name></expr>)<pos:position pos:line="17" pos:column="90"/></condition><then pos:line="17" pos:column="90">
      <block type="pseudo"><goto pos:line="18" pos:column="7">goto <name pos:line="18" pos:column="12">cleanup<pos:position pos:line="18" pos:column="19"/></name>;<pos:position pos:line="18" pos:column="20"/></goto></block></then></if>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">mutt_str_replace<pos:position pos:line="19" pos:column="21"/></name> <argument_list pos:line="19" pos:column="22">(<argument><expr><operator pos:line="19" pos:column="23">&amp;<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="24">local_domain<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="38">tmp<pos:position pos:line="19" pos:column="41"/></name></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">FREE<pos:position pos:line="20" pos:column="9"/></name> <argument_list pos:line="20" pos:column="10">(<argument><expr><operator pos:line="20" pos:column="11">&amp;<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="12">tmp<pos:position pos:line="20" pos:column="15"/></name></expr></argument>)<pos:position pos:line="20" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="22" pos:column="8">/* HAVE_LIBIDN */</comment>

  <comment type="block" pos:line="24" pos:column="3">/* we don't want charset-hook effects, so we set flags to 0 */</comment>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><call><name pos:line="25" pos:column="7">mutt_convert_string<pos:position pos:line="25" pos:column="26"/></name> <argument_list pos:line="25" pos:column="27">(<argument><expr><operator pos:line="25" pos:column="28">&amp;<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="29">local_user<pos:position pos:line="25" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="41">"utf-8"<pos:position pos:line="25" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="50">Charset<pos:position pos:line="25" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="59">0<pos:position pos:line="25" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="61"/></argument_list></call> <operator pos:line="25" pos:column="62">==<pos:position pos:line="25" pos:column="64"/></operator> <operator pos:line="25" pos:column="65">-<pos:position pos:line="25" pos:column="66"/></operator><literal type="number" pos:line="25" pos:column="66">1<pos:position pos:line="25" pos:column="67"/></literal></expr>)<pos:position pos:line="25" pos:column="68"/></condition><then pos:line="25" pos:column="68">
    <block type="pseudo"><goto pos:line="26" pos:column="5">goto <name pos:line="26" pos:column="10">cleanup<pos:position pos:line="26" pos:column="17"/></name>;<pos:position pos:line="26" pos:column="18"/></goto></block></then></if>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><call><name pos:line="28" pos:column="7">mutt_convert_string<pos:position pos:line="28" pos:column="26"/></name> <argument_list pos:line="28" pos:column="27">(<argument><expr><operator pos:line="28" pos:column="28">&amp;<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="29">local_domain<pos:position pos:line="28" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="43">"utf-8"<pos:position pos:line="28" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="52">Charset<pos:position pos:line="28" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="61">0<pos:position pos:line="28" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="63"/></argument_list></call> <operator pos:line="28" pos:column="64">==<pos:position pos:line="28" pos:column="66"/></operator> <operator pos:line="28" pos:column="67">-<pos:position pos:line="28" pos:column="68"/></operator><literal type="number" pos:line="28" pos:column="68">1<pos:position pos:line="28" pos:column="69"/></literal></expr>)<pos:position pos:line="28" pos:column="70"/></condition><then pos:line="28" pos:column="70">
    <block type="pseudo"><goto pos:line="29" pos:column="5">goto <name pos:line="29" pos:column="10">cleanup<pos:position pos:line="29" pos:column="17"/></name>;<pos:position pos:line="29" pos:column="18"/></goto></block></then></if>

  <comment type="block" pos:line="31" pos:column="3">/*
   * make sure that we can convert back and come out with the same
   * user and domain name.
   */</comment>
  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><operator pos:line="35" pos:column="7">(<pos:position pos:line="35" pos:column="8"/></operator><name pos:line="35" pos:column="8">flags<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">&amp;<pos:position pos:line="35" pos:column="19"/></operator> <name pos:line="35" pos:column="16">MI_MAY_BE_IRREVERSIBLE<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">)<pos:position pos:line="35" pos:column="39"/></operator> <operator pos:line="35" pos:column="40">==<pos:position pos:line="35" pos:column="42"/></operator> <literal type="number" pos:line="35" pos:column="43">0<pos:position pos:line="35" pos:column="44"/></literal></expr>)<pos:position pos:line="35" pos:column="45"/></condition><then pos:line="35" pos:column="45">
  <block pos:line="36" pos:column="3">{
    <expr_stmt><expr><name pos:line="37" pos:column="5">reversed_user<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">=<pos:position pos:line="37" pos:column="20"/></operator> <call><name pos:line="37" pos:column="21">safe_strdup<pos:position pos:line="37" pos:column="32"/></name> <argument_list pos:line="37" pos:column="33">(<argument><expr><name pos:line="37" pos:column="34">local_user<pos:position pos:line="37" pos:column="44"/></name></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="46"/></expr_stmt>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><call><name pos:line="39" pos:column="9">mutt_convert_string<pos:position pos:line="39" pos:column="28"/></name> <argument_list pos:line="39" pos:column="29">(<argument><expr><operator pos:line="39" pos:column="30">&amp;<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="31">reversed_user<pos:position pos:line="39" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="46">Charset<pos:position pos:line="39" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="55">"utf-8"<pos:position pos:line="39" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="64">0<pos:position pos:line="39" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="66"/></argument_list></call> <operator pos:line="39" pos:column="67">==<pos:position pos:line="39" pos:column="69"/></operator> <operator pos:line="39" pos:column="70">-<pos:position pos:line="39" pos:column="71"/></operator><literal type="number" pos:line="39" pos:column="71">1<pos:position pos:line="39" pos:column="72"/></literal></expr>)<pos:position pos:line="39" pos:column="73"/></condition><then pos:line="39" pos:column="73">
    <block pos:line="40" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">dprint<pos:position pos:line="41" pos:column="13"/></name> <argument_list pos:line="41" pos:column="14">(<argument><expr><literal type="number" pos:line="41" pos:column="15">1<pos:position pos:line="41" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="41" pos:column="18">(<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="19">debugfile<pos:position pos:line="41" pos:column="28"/></name><operator pos:line="41" pos:column="28">,<pos:position pos:line="41" pos:column="29"/></operator>
                  <literal type="string" pos:line="42" pos:column="19">"intl_to_local: Not reversible. Charset conv to utf-8 failed for user = '%s'.\n"<pos:position pos:line="42" pos:column="99"/></literal><operator pos:line="42" pos:column="99">,<pos:position pos:line="42" pos:column="100"/></operator>
                  <name pos:line="43" pos:column="19">reversed_user<pos:position pos:line="43" pos:column="32"/></name><operator pos:line="43" pos:column="32">)<pos:position pos:line="43" pos:column="33"/></operator></expr></argument>)<pos:position pos:line="43" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="35"/></expr_stmt>
      <goto pos:line="44" pos:column="7">goto <name pos:line="44" pos:column="12">cleanup<pos:position pos:line="44" pos:column="19"/></name>;<pos:position pos:line="44" pos:column="20"/></goto>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><call><name pos:line="47" pos:column="9">ascii_strcasecmp<pos:position pos:line="47" pos:column="25"/></name> <argument_list pos:line="47" pos:column="26">(<argument><expr><name pos:line="47" pos:column="27">orig_user<pos:position pos:line="47" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="38">reversed_user<pos:position pos:line="47" pos:column="51"/></name></expr></argument>)<pos:position pos:line="47" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="53"/></condition><then pos:line="47" pos:column="53">
    <block pos:line="48" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">dprint<pos:position pos:line="49" pos:column="13"/></name> <argument_list pos:line="49" pos:column="14">(<argument><expr><literal type="number" pos:line="49" pos:column="15">1<pos:position pos:line="49" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="49" pos:column="18">(<pos:position pos:line="49" pos:column="19"/></operator><name pos:line="49" pos:column="19">debugfile<pos:position pos:line="49" pos:column="28"/></name><operator pos:line="49" pos:column="28">,<pos:position pos:line="49" pos:column="29"/></operator> <literal type="string" pos:line="49" pos:column="30">"intl_to_local: Not reversible. orig = '%s', reversed = '%s'.\n"<pos:position pos:line="49" pos:column="94"/></literal><operator pos:line="49" pos:column="94">,<pos:position pos:line="49" pos:column="95"/></operator>
                  <name pos:line="50" pos:column="19">orig_user<pos:position pos:line="50" pos:column="28"/></name><operator pos:line="50" pos:column="28">,<pos:position pos:line="50" pos:column="29"/></operator> <name pos:line="50" pos:column="30">reversed_user<pos:position pos:line="50" pos:column="43"/></name><operator pos:line="50" pos:column="43">)<pos:position pos:line="50" pos:column="44"/></operator></expr></argument>)<pos:position pos:line="50" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="46"/></expr_stmt>
      <goto pos:line="51" pos:column="7">goto <name pos:line="51" pos:column="12">cleanup<pos:position pos:line="51" pos:column="19"/></name>;<pos:position pos:line="51" pos:column="20"/></goto>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="54" pos:column="5">reversed_domain<pos:position pos:line="54" pos:column="20"/></name> <operator pos:line="54" pos:column="21">=<pos:position pos:line="54" pos:column="22"/></operator> <call><name pos:line="54" pos:column="23">safe_strdup<pos:position pos:line="54" pos:column="34"/></name> <argument_list pos:line="54" pos:column="35">(<argument><expr><name pos:line="54" pos:column="36">local_domain<pos:position pos:line="54" pos:column="48"/></name></expr></argument>)<pos:position pos:line="54" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="50"/></expr_stmt>

    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><call><name pos:line="56" pos:column="9">mutt_convert_string<pos:position pos:line="56" pos:column="28"/></name> <argument_list pos:line="56" pos:column="29">(<argument><expr><operator pos:line="56" pos:column="30">&amp;<pos:position pos:line="56" pos:column="35"/></operator><name pos:line="56" pos:column="31">reversed_domain<pos:position pos:line="56" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="48">Charset<pos:position pos:line="56" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="57">"utf-8"<pos:position pos:line="56" pos:column="64"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="66">0<pos:position pos:line="56" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="68"/></argument_list></call> <operator pos:line="56" pos:column="69">==<pos:position pos:line="56" pos:column="71"/></operator> <operator pos:line="56" pos:column="72">-<pos:position pos:line="56" pos:column="73"/></operator><literal type="number" pos:line="56" pos:column="73">1<pos:position pos:line="56" pos:column="74"/></literal></expr>)<pos:position pos:line="56" pos:column="75"/></condition><then pos:line="56" pos:column="75">
    <block pos:line="57" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="58" pos:column="7">dprint<pos:position pos:line="58" pos:column="13"/></name> <argument_list pos:line="58" pos:column="14">(<argument><expr><literal type="number" pos:line="58" pos:column="15">1<pos:position pos:line="58" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="58" pos:column="18">(<pos:position pos:line="58" pos:column="19"/></operator><name pos:line="58" pos:column="19">debugfile<pos:position pos:line="58" pos:column="28"/></name><operator pos:line="58" pos:column="28">,<pos:position pos:line="58" pos:column="29"/></operator>
                  <literal type="string" pos:line="59" pos:column="19">"intl_to_local: Not reversible. Charset conv to utf-8 failed for domain = '%s'.\n"<pos:position pos:line="59" pos:column="101"/></literal><operator pos:line="59" pos:column="101">,<pos:position pos:line="59" pos:column="102"/></operator>
                  <name pos:line="60" pos:column="19">reversed_domain<pos:position pos:line="60" pos:column="34"/></name><operator pos:line="60" pos:column="34">)<pos:position pos:line="60" pos:column="35"/></operator></expr></argument>)<pos:position pos:line="60" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="37"/></expr_stmt>
      <goto pos:line="61" pos:column="7">goto <name pos:line="61" pos:column="12">cleanup<pos:position pos:line="61" pos:column="19"/></name>;<pos:position pos:line="61" pos:column="20"/></goto>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>

<cpp:ifdef pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">ifdef<pos:position pos:line="64" pos:column="7"/></cpp:directive> <name pos:line="64" pos:column="8">HAVE_LIBIDN<pos:position pos:line="64" pos:column="19"/></name></cpp:ifdef>
    <comment type="block" pos:line="65" pos:column="5">/* If the original domain was UTF-8, idna encoding here could
     * produce a non-matching domain!  Thus we only want to do the
     * idna_to_ascii_8z() if the original domain was IDNA encoded.
     */</comment>
    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><name pos:line="69" pos:column="9">is_idn_encoded<pos:position pos:line="69" pos:column="23"/></name> <operator pos:line="69" pos:column="24">&amp;&amp;<pos:position pos:line="69" pos:column="34"/></operator> <call><name pos:line="69" pos:column="27">option<pos:position pos:line="69" pos:column="33"/></name> <argument_list pos:line="69" pos:column="34">(<argument><expr><name pos:line="69" pos:column="35">OPTIDNDECODE<pos:position pos:line="69" pos:column="47"/></name></expr></argument>)<pos:position pos:line="69" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="49"/></condition><then pos:line="69" pos:column="49">
    <block pos:line="70" pos:column="5">{
      <if pos:line="71" pos:column="7">if <condition pos:line="71" pos:column="10">(<expr><call><name pos:line="71" pos:column="11">idna_to_ascii_8z<pos:position pos:line="71" pos:column="27"/></name> <argument_list pos:line="71" pos:column="28">(<argument><expr><name pos:line="71" pos:column="29">reversed_domain<pos:position pos:line="71" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="46">&amp;<pos:position pos:line="71" pos:column="51"/></operator><name pos:line="71" pos:column="47">tmp<pos:position pos:line="71" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="52">IDNA_ALLOW_UNASSIGNED<pos:position pos:line="71" pos:column="73"/></name></expr></argument>)<pos:position pos:line="71" pos:column="74"/></argument_list></call> <operator pos:line="71" pos:column="75">!=<pos:position pos:line="71" pos:column="77"/></operator> <name pos:line="71" pos:column="78">IDNA_SUCCESS<pos:position pos:line="71" pos:column="90"/></name></expr>)<pos:position pos:line="71" pos:column="91"/></condition><then pos:line="71" pos:column="91">
      <block pos:line="72" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">dprint<pos:position pos:line="73" pos:column="15"/></name> <argument_list pos:line="73" pos:column="16">(<argument><expr><literal type="number" pos:line="73" pos:column="17">1<pos:position pos:line="73" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="73" pos:column="20">(<pos:position pos:line="73" pos:column="21"/></operator><name pos:line="73" pos:column="21">debugfile<pos:position pos:line="73" pos:column="30"/></name><operator pos:line="73" pos:column="30">,<pos:position pos:line="73" pos:column="31"/></operator>
                    <literal type="string" pos:line="74" pos:column="21">"intl_to_local: Not reversible. idna_to_ascii_8z failed for domain = '%s'.\n"<pos:position pos:line="74" pos:column="98"/></literal><operator pos:line="74" pos:column="98">,<pos:position pos:line="74" pos:column="99"/></operator>
                    <name pos:line="75" pos:column="21">reversed_domain<pos:position pos:line="75" pos:column="36"/></name><operator pos:line="75" pos:column="36">)<pos:position pos:line="75" pos:column="37"/></operator></expr></argument>)<pos:position pos:line="75" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="39"/></expr_stmt>
        <goto pos:line="76" pos:column="9">goto <name pos:line="76" pos:column="14">cleanup<pos:position pos:line="76" pos:column="21"/></name>;<pos:position pos:line="76" pos:column="22"/></goto>
      }<pos:position pos:line="77" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="78" pos:column="7">mutt_str_replace<pos:position pos:line="78" pos:column="23"/></name> <argument_list pos:line="78" pos:column="24">(<argument><expr><operator pos:line="78" pos:column="25">&amp;<pos:position pos:line="78" pos:column="30"/></operator><name pos:line="78" pos:column="26">reversed_domain<pos:position pos:line="78" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="43">tmp<pos:position pos:line="78" pos:column="46"/></name></expr></argument>)<pos:position pos:line="78" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="79" pos:column="6"/></block></then></if>
<cpp:endif pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">endif<pos:position pos:line="80" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="80" pos:column="8">/* HAVE_LIBIDN */</comment>

    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><call><name pos:line="82" pos:column="9">ascii_strcasecmp<pos:position pos:line="82" pos:column="25"/></name> <argument_list pos:line="82" pos:column="26">(<argument><expr><name pos:line="82" pos:column="27">orig_domain<pos:position pos:line="82" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="40">reversed_domain<pos:position pos:line="82" pos:column="55"/></name></expr></argument>)<pos:position pos:line="82" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="57"/></condition><then pos:line="82" pos:column="57">
    <block pos:line="83" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="84" pos:column="7">dprint<pos:position pos:line="84" pos:column="13"/></name> <argument_list pos:line="84" pos:column="14">(<argument><expr><literal type="number" pos:line="84" pos:column="15">1<pos:position pos:line="84" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="84" pos:column="18">(<pos:position pos:line="84" pos:column="19"/></operator><name pos:line="84" pos:column="19">debugfile<pos:position pos:line="84" pos:column="28"/></name><operator pos:line="84" pos:column="28">,<pos:position pos:line="84" pos:column="29"/></operator> <literal type="string" pos:line="84" pos:column="30">"intl_to_local: Not reversible. orig = '%s', reversed = '%s'.\n"<pos:position pos:line="84" pos:column="94"/></literal><operator pos:line="84" pos:column="94">,<pos:position pos:line="84" pos:column="95"/></operator>
                  <name pos:line="85" pos:column="19">orig_domain<pos:position pos:line="85" pos:column="30"/></name><operator pos:line="85" pos:column="30">,<pos:position pos:line="85" pos:column="31"/></operator> <name pos:line="85" pos:column="32">reversed_domain<pos:position pos:line="85" pos:column="47"/></name><operator pos:line="85" pos:column="47">)<pos:position pos:line="85" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="85" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="50"/></expr_stmt>
      <goto pos:line="86" pos:column="7">goto <name pos:line="86" pos:column="12">cleanup<pos:position pos:line="86" pos:column="19"/></name>;<pos:position pos:line="86" pos:column="20"/></goto>
    }<pos:position pos:line="87" pos:column="6"/></block></then></if>
  }<pos:position pos:line="88" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="90" pos:column="3">mailbox<pos:position pos:line="90" pos:column="10"/></name> <operator pos:line="90" pos:column="11">=<pos:position pos:line="90" pos:column="12"/></operator> <call><name pos:line="90" pos:column="13">safe_malloc<pos:position pos:line="90" pos:column="24"/></name> <argument_list pos:line="90" pos:column="25">(<argument><expr><call><name pos:line="90" pos:column="26">mutt_strlen<pos:position pos:line="90" pos:column="37"/></name> <argument_list pos:line="90" pos:column="38">(<argument><expr><name pos:line="90" pos:column="39">local_user<pos:position pos:line="90" pos:column="49"/></name></expr></argument>)<pos:position pos:line="90" pos:column="50"/></argument_list></call> <operator pos:line="90" pos:column="51">+<pos:position pos:line="90" pos:column="52"/></operator> <call><name pos:line="90" pos:column="53">mutt_strlen<pos:position pos:line="90" pos:column="64"/></name> <argument_list pos:line="90" pos:column="65">(<argument><expr><name pos:line="90" pos:column="66">local_domain<pos:position pos:line="90" pos:column="78"/></name></expr></argument>)<pos:position pos:line="90" pos:column="79"/></argument_list></call> <operator pos:line="90" pos:column="80">+<pos:position pos:line="90" pos:column="81"/></operator> <literal type="number" pos:line="90" pos:column="82">2<pos:position pos:line="90" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="85"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="91" pos:column="3">sprintf<pos:position pos:line="91" pos:column="10"/></name> <argument_list pos:line="91" pos:column="11">(<argument><expr><name pos:line="91" pos:column="12">mailbox<pos:position pos:line="91" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="21">"%s@%s"<pos:position pos:line="91" pos:column="28"/></literal></expr></argument>, <argument><expr><call><name pos:line="91" pos:column="30">NONULL<pos:position pos:line="91" pos:column="36"/></name><argument_list pos:line="91" pos:column="36">(<argument><expr><name pos:line="91" pos:column="37">local_user<pos:position pos:line="91" pos:column="47"/></name></expr></argument>)<pos:position pos:line="91" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="91" pos:column="50">NONULL<pos:position pos:line="91" pos:column="56"/></name><argument_list pos:line="91" pos:column="56">(<argument><expr><name pos:line="91" pos:column="57">local_domain<pos:position pos:line="91" pos:column="69"/></name></expr></argument>)<pos:position pos:line="91" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="91" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="72"/></expr_stmt> <comment type="block" pos:line="91" pos:column="73">/* __SPRINTF_CHECKED__ */</comment>

<label><name pos:line="93" pos:column="1">cleanup<pos:position pos:line="93" pos:column="8"/></name>:<pos:position pos:line="93" pos:column="9"/></label>
  <expr_stmt><expr><call><name pos:line="94" pos:column="3">FREE<pos:position pos:line="94" pos:column="7"/></name> <argument_list pos:line="94" pos:column="8">(<argument><expr><operator pos:line="94" pos:column="9">&amp;<pos:position pos:line="94" pos:column="14"/></operator><name pos:line="94" pos:column="10">local_user<pos:position pos:line="94" pos:column="20"/></name></expr></argument>)<pos:position pos:line="94" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="95" pos:column="3">FREE<pos:position pos:line="95" pos:column="7"/></name> <argument_list pos:line="95" pos:column="8">(<argument><expr><operator pos:line="95" pos:column="9">&amp;<pos:position pos:line="95" pos:column="14"/></operator><name pos:line="95" pos:column="10">local_domain<pos:position pos:line="95" pos:column="22"/></name></expr></argument>)<pos:position pos:line="95" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="96" pos:column="3">FREE<pos:position pos:line="96" pos:column="7"/></name> <argument_list pos:line="96" pos:column="8">(<argument><expr><operator pos:line="96" pos:column="9">&amp;<pos:position pos:line="96" pos:column="14"/></operator><name pos:line="96" pos:column="10">tmp<pos:position pos:line="96" pos:column="13"/></name></expr></argument>)<pos:position pos:line="96" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="97" pos:column="3">FREE<pos:position pos:line="97" pos:column="7"/></name> <argument_list pos:line="97" pos:column="8">(<argument><expr><operator pos:line="97" pos:column="9">&amp;<pos:position pos:line="97" pos:column="14"/></operator><name pos:line="97" pos:column="10">reversed_domain<pos:position pos:line="97" pos:column="25"/></name></expr></argument>)<pos:position pos:line="97" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="98" pos:column="3">FREE<pos:position pos:line="98" pos:column="7"/></name> <argument_list pos:line="98" pos:column="8">(<argument><expr><operator pos:line="98" pos:column="9">&amp;<pos:position pos:line="98" pos:column="14"/></operator><name pos:line="98" pos:column="10">reversed_user<pos:position pos:line="98" pos:column="23"/></name></expr></argument>)<pos:position pos:line="98" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="25"/></expr_stmt>

  <return pos:line="100" pos:column="3">return <expr><name pos:line="100" pos:column="10">mailbox<pos:position pos:line="100" pos:column="17"/></name></expr>;<pos:position pos:line="100" pos:column="18"/></return>
}<pos:position pos:line="101" pos:column="2"/></block></function></unit>

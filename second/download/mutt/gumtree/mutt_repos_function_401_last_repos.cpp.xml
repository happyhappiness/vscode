<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_401_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_prepare_template<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">FILE<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">fp<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">CONTEXT<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">ctx<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">HEADER<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">newhdr<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="68">HEADER<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">hdr<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="2" pos:column="28">short<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">resend<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">MESSAGE<pos:position pos:line="4" pos:column="10"/></name> <modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">msg<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><name pos:line="4" pos:column="18">NULL<pos:position pos:line="4" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">file<pos:position pos:line="5" pos:column="12"/></name><index pos:line="5" pos:column="12">[<expr><name pos:line="5" pos:column="13">_POSIX_PATH_MAX<pos:position pos:line="5" pos:column="28"/></name></expr>]<pos:position pos:line="5" pos:column="29"/></index></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">BODY<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">b<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">FILE<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">bfp<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">rv<pos:position pos:line="8" pos:column="9"/></name> <init pos:line="8" pos:column="10">= <expr><operator pos:line="8" pos:column="12">-<pos:position pos:line="8" pos:column="13"/></operator><literal type="number" pos:line="8" pos:column="13">1<pos:position pos:line="8" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">STATE<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">s<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">sec_type<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">memset<pos:position pos:line="12" pos:column="9"/></name> <argument_list pos:line="12" pos:column="10">(<argument><expr><operator pos:line="12" pos:column="11">&amp;<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="12">s<pos:position pos:line="12" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="15">0<pos:position pos:line="12" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="18">sizeof <argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">s<pos:position pos:line="12" pos:column="27"/></name></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><operator pos:line="14" pos:column="7">!<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">fp<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">&amp;&amp;<pos:position pos:line="14" pos:column="21"/></operator> <operator pos:line="14" pos:column="14">(<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">msg<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <call><name pos:line="14" pos:column="21">mx_open_message<pos:position pos:line="14" pos:column="36"/></name> <argument_list pos:line="14" pos:column="37">(<argument><expr><name pos:line="14" pos:column="38">ctx<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="43">hdr<pos:position pos:line="14" pos:column="46"/></name><operator pos:line="14" pos:column="46">-&gt;<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="48">msgno<pos:position pos:line="14" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call><operator pos:line="14" pos:column="54">)<pos:position pos:line="14" pos:column="55"/></operator> <operator pos:line="14" pos:column="56">==<pos:position pos:line="14" pos:column="58"/></operator> <name pos:line="14" pos:column="59">NULL<pos:position pos:line="14" pos:column="63"/></name></expr>)<pos:position pos:line="14" pos:column="64"/></condition><then pos:line="14" pos:column="64">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><operator pos:line="15" pos:column="13">-<pos:position pos:line="15" pos:column="14"/></operator><literal type="number" pos:line="15" pos:column="14">1<pos:position pos:line="15" pos:column="15"/></literal><operator pos:line="15" pos:column="15">)<pos:position pos:line="15" pos:column="16"/></operator></expr>;<pos:position pos:line="15" pos:column="17"/></return></block></then></if>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">!<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">fp<pos:position pos:line="17" pos:column="10"/></name></expr>)<pos:position pos:line="17" pos:column="11"/></condition><then pos:line="17" pos:column="11"> <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="12">fp<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <name><name pos:line="17" pos:column="17">msg<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">fp<pos:position pos:line="17" pos:column="24"/></name></name></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="19" pos:column="3">bfp<pos:position pos:line="19" pos:column="6"/></name> <operator pos:line="19" pos:column="7">=<pos:position pos:line="19" pos:column="8"/></operator> <name pos:line="19" pos:column="9">fp<pos:position pos:line="19" pos:column="11"/></name></expr>;<pos:position pos:line="19" pos:column="12"/></expr_stmt>

  <comment type="block" pos:line="21" pos:column="3">/* parse the message header and MIME structure */</comment>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">fseeko<pos:position pos:line="23" pos:column="9"/></name> <argument_list pos:line="23" pos:column="10">(<argument><expr><name pos:line="23" pos:column="11">fp<pos:position pos:line="23" pos:column="13"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="15">hdr<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">-&gt;<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="20">offset<pos:position pos:line="23" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="28">0<pos:position pos:line="23" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">newhdr<pos:position pos:line="24" pos:column="9"/></name><operator pos:line="24" pos:column="9">-&gt;<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="11">offset<pos:position pos:line="24" pos:column="17"/></name></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <name><name pos:line="24" pos:column="20">hdr<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">-&gt;<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="25">offset<pos:position pos:line="24" pos:column="31"/></name></name></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>
  <comment type="block" pos:line="25" pos:column="3">/* enable header weeding for resent messages */</comment>
  <expr_stmt><expr><name><name pos:line="26" pos:column="3">newhdr<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">-&gt;<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="11">env<pos:position pos:line="26" pos:column="14"/></name></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <call><name pos:line="26" pos:column="17">mutt_read_rfc822_header<pos:position pos:line="26" pos:column="40"/></name> <argument_list pos:line="26" pos:column="41">(<argument><expr><name pos:line="26" pos:column="42">fp<pos:position pos:line="26" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="46">newhdr<pos:position pos:line="26" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="54">1<pos:position pos:line="26" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="57">resend<pos:position pos:line="26" pos:column="63"/></name></expr></argument>)<pos:position pos:line="26" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="65"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">newhdr<pos:position pos:line="27" pos:column="9"/></name><operator pos:line="27" pos:column="9">-&gt;<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="11">content<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">-&gt;<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="20">length<pos:position pos:line="27" pos:column="26"/></name></name> <operator pos:line="27" pos:column="27">=<pos:position pos:line="27" pos:column="28"/></operator> <name><name pos:line="27" pos:column="29">hdr<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">-&gt;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="34">content<pos:position pos:line="27" pos:column="41"/></name><operator pos:line="27" pos:column="41">-&gt;<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="43">length<pos:position pos:line="27" pos:column="49"/></name></name></expr>;<pos:position pos:line="27" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">mutt_parse_part<pos:position pos:line="28" pos:column="18"/></name> <argument_list pos:line="28" pos:column="19">(<argument><expr><name pos:line="28" pos:column="20">fp<pos:position pos:line="28" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="24">newhdr<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">-&gt;<pos:position pos:line="28" pos:column="35"/></operator><name pos:line="28" pos:column="32">content<pos:position pos:line="28" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>

  <comment type="block" pos:line="30" pos:column="3">/* If resending a message, don't keep message_id or mail_followup_to.
   * Otherwise, we are resuming a postponed message, and want to keep those
   * headers if they exist.
   */</comment>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><name pos:line="34" pos:column="7">resend<pos:position pos:line="34" pos:column="13"/></name></expr>)<pos:position pos:line="34" pos:column="14"/></condition><then pos:line="34" pos:column="14">
  <block pos:line="35" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">FREE<pos:position pos:line="36" pos:column="9"/></name> <argument_list pos:line="36" pos:column="10">(<argument><expr><operator pos:line="36" pos:column="11">&amp;<pos:position pos:line="36" pos:column="16"/></operator><name><name pos:line="36" pos:column="12">newhdr<pos:position pos:line="36" pos:column="18"/></name><operator pos:line="36" pos:column="18">-&gt;<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="20">env<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">-&gt;<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="25">message_id<pos:position pos:line="36" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">FREE<pos:position pos:line="37" pos:column="9"/></name> <argument_list pos:line="37" pos:column="10">(<argument><expr><operator pos:line="37" pos:column="11">&amp;<pos:position pos:line="37" pos:column="16"/></operator><name><name pos:line="37" pos:column="12">newhdr<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">-&gt;<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="20">env<pos:position pos:line="37" pos:column="23"/></name><operator pos:line="37" pos:column="23">-&gt;<pos:position pos:line="37" pos:column="28"/></operator><name pos:line="37" pos:column="25">mail_followup_to<pos:position pos:line="37" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="40" pos:column="3">/* decrypt pgp/mime encoded messages */</comment>

  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><operator pos:line="42" pos:column="7">(<pos:position pos:line="42" pos:column="8"/></operator><name pos:line="42" pos:column="8">WithCrypto<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">&amp;<pos:position pos:line="42" pos:column="24"/></operator> <name pos:line="42" pos:column="21">APPLICATION_PGP<pos:position pos:line="42" pos:column="36"/></name><operator pos:line="42" pos:column="36">)<pos:position pos:line="42" pos:column="37"/></operator> <operator pos:line="42" pos:column="38">&amp;&amp;<pos:position pos:line="42" pos:column="48"/></operator>
      <operator pos:line="43" pos:column="7">(<pos:position pos:line="43" pos:column="8"/></operator><name pos:line="43" pos:column="8">sec_type<pos:position pos:line="43" pos:column="16"/></name> <operator pos:line="43" pos:column="17">=<pos:position pos:line="43" pos:column="18"/></operator> <call><name pos:line="43" pos:column="19">mutt_is_multipart_encrypted<pos:position pos:line="43" pos:column="46"/></name> <argument_list pos:line="43" pos:column="47">(<argument><expr><name><name pos:line="43" pos:column="48">newhdr<pos:position pos:line="43" pos:column="54"/></name><operator pos:line="43" pos:column="54">-&gt;<pos:position pos:line="43" pos:column="59"/></operator><name pos:line="43" pos:column="56">content<pos:position pos:line="43" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="64"/></argument_list></call><operator pos:line="43" pos:column="64">)<pos:position pos:line="43" pos:column="65"/></operator></expr>)<pos:position pos:line="43" pos:column="66"/></condition><then pos:line="43" pos:column="66">
  <block pos:line="44" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">newhdr<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">-&gt;<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="13">security<pos:position pos:line="45" pos:column="21"/></name></name> <operator pos:line="45" pos:column="22">|=<pos:position pos:line="45" pos:column="24"/></operator> <name pos:line="45" pos:column="25">sec_type<pos:position pos:line="45" pos:column="33"/></name></expr>;<pos:position pos:line="45" pos:column="34"/></expr_stmt>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><operator pos:line="46" pos:column="9">!<pos:position pos:line="46" pos:column="10"/></operator><call><name pos:line="46" pos:column="10">crypt_valid_passphrase<pos:position pos:line="46" pos:column="32"/></name> <argument_list pos:line="46" pos:column="33">(<argument><expr><name pos:line="46" pos:column="34">sec_type<pos:position pos:line="46" pos:column="42"/></name></expr></argument>)<pos:position pos:line="46" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="44"/></condition><then pos:line="46" pos:column="44">
      <block type="pseudo"><goto pos:line="47" pos:column="7">goto <name pos:line="47" pos:column="12">err<pos:position pos:line="47" pos:column="15"/></name>;<pos:position pos:line="47" pos:column="16"/></goto></block></then></if>

    <decl_stmt><decl><type><name pos:line="49" pos:column="5">mutt_message<pos:position pos:line="49" pos:column="17"/></name></type> <name pos:line="49" pos:column="18">_<pos:position pos:line="49" pos:column="19"/></name><argument_list pos:line="49" pos:column="19">(<argument><expr><literal type="string" pos:line="49" pos:column="20">"Decrypting message..."<pos:position pos:line="49" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="44"/></argument_list></decl>;<pos:position pos:line="49" pos:column="45"/></decl_stmt>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><operator pos:line="50" pos:column="9">(<pos:position pos:line="50" pos:column="10"/></operator><call><name pos:line="50" pos:column="10">crypt_pgp_decrypt_mime<pos:position pos:line="50" pos:column="32"/></name> <argument_list pos:line="50" pos:column="33">(<argument><expr><name pos:line="50" pos:column="34">fp<pos:position pos:line="50" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="38">&amp;<pos:position pos:line="50" pos:column="43"/></operator><name pos:line="50" pos:column="39">bfp<pos:position pos:line="50" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="44">newhdr<pos:position pos:line="50" pos:column="50"/></name><operator pos:line="50" pos:column="50">-&gt;<pos:position pos:line="50" pos:column="55"/></operator><name pos:line="50" pos:column="52">content<pos:position pos:line="50" pos:column="59"/></name></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="61">&amp;<pos:position pos:line="50" pos:column="66"/></operator><name pos:line="50" pos:column="62">b<pos:position pos:line="50" pos:column="63"/></name></expr></argument>)<pos:position pos:line="50" pos:column="64"/></argument_list></call> <operator pos:line="50" pos:column="65">==<pos:position pos:line="50" pos:column="67"/></operator> <operator pos:line="50" pos:column="68">-<pos:position pos:line="50" pos:column="69"/></operator><literal type="number" pos:line="50" pos:column="69">1<pos:position pos:line="50" pos:column="70"/></literal><operator pos:line="50" pos:column="70">)<pos:position pos:line="50" pos:column="71"/></operator>
	<operator pos:line="51" pos:column="9">||<pos:position pos:line="51" pos:column="11"/></operator> <name pos:line="51" pos:column="12">b<pos:position pos:line="51" pos:column="13"/></name> <operator pos:line="51" pos:column="14">==<pos:position pos:line="51" pos:column="16"/></operator> <name pos:line="51" pos:column="17">NULL<pos:position pos:line="51" pos:column="21"/></name></expr>)<pos:position pos:line="51" pos:column="22"/></condition><then pos:line="51" pos:column="22">
    <block pos:line="52" pos:column="5">{
 <label><name pos:line="53" pos:column="2">err<pos:position pos:line="53" pos:column="5"/></name>:<pos:position pos:line="53" pos:column="6"/></label>
      <expr_stmt><expr><call><name pos:line="54" pos:column="7">mx_close_message<pos:position pos:line="54" pos:column="23"/></name> <argument_list pos:line="54" pos:column="24">(<argument><expr><name pos:line="54" pos:column="25">ctx<pos:position pos:line="54" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="30">&amp;<pos:position pos:line="54" pos:column="35"/></operator><name pos:line="54" pos:column="31">msg<pos:position pos:line="54" pos:column="34"/></name></expr></argument>)<pos:position pos:line="54" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="55" pos:column="7">mutt_free_envelope<pos:position pos:line="55" pos:column="25"/></name> <argument_list pos:line="55" pos:column="26">(<argument><expr><operator pos:line="55" pos:column="27">&amp;<pos:position pos:line="55" pos:column="32"/></operator><name><name pos:line="55" pos:column="28">newhdr<pos:position pos:line="55" pos:column="34"/></name><operator pos:line="55" pos:column="34">-&gt;<pos:position pos:line="55" pos:column="39"/></operator><name pos:line="55" pos:column="36">env<pos:position pos:line="55" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="56" pos:column="7">mutt_free_body<pos:position pos:line="56" pos:column="21"/></name> <argument_list pos:line="56" pos:column="22">(<argument><expr><operator pos:line="56" pos:column="23">&amp;<pos:position pos:line="56" pos:column="28"/></operator><name><name pos:line="56" pos:column="24">newhdr<pos:position pos:line="56" pos:column="30"/></name><operator pos:line="56" pos:column="30">-&gt;<pos:position pos:line="56" pos:column="35"/></operator><name pos:line="56" pos:column="32">content<pos:position pos:line="56" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="41"/></expr_stmt>
      <decl_stmt><decl><type><name pos:line="57" pos:column="7">mutt_error<pos:position pos:line="57" pos:column="17"/></name></type> <name pos:line="57" pos:column="18">_<pos:position pos:line="57" pos:column="19"/></name><argument_list pos:line="57" pos:column="19">(<argument><expr><literal type="string" pos:line="57" pos:column="20">"Decryption failed."<pos:position pos:line="57" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="41"/></argument_list></decl>;<pos:position pos:line="57" pos:column="42"/></decl_stmt>
      <return pos:line="58" pos:column="7">return <expr><operator pos:line="58" pos:column="14">-<pos:position pos:line="58" pos:column="15"/></operator><literal type="number" pos:line="58" pos:column="15">1<pos:position pos:line="58" pos:column="16"/></literal></expr>;<pos:position pos:line="58" pos:column="17"/></return>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="61" pos:column="5">mutt_free_body<pos:position pos:line="61" pos:column="19"/></name> <argument_list pos:line="61" pos:column="20">(<argument><expr><operator pos:line="61" pos:column="21">&amp;<pos:position pos:line="61" pos:column="26"/></operator><name><name pos:line="61" pos:column="22">newhdr<pos:position pos:line="61" pos:column="28"/></name><operator pos:line="61" pos:column="28">-&gt;<pos:position pos:line="61" pos:column="33"/></operator><name pos:line="61" pos:column="30">content<pos:position pos:line="61" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="62" pos:column="5">newhdr<pos:position pos:line="62" pos:column="11"/></name><operator pos:line="62" pos:column="11">-&gt;<pos:position pos:line="62" pos:column="16"/></operator><name pos:line="62" pos:column="13">content<pos:position pos:line="62" pos:column="20"/></name></name> <operator pos:line="62" pos:column="21">=<pos:position pos:line="62" pos:column="22"/></operator> <name pos:line="62" pos:column="23">b<pos:position pos:line="62" pos:column="24"/></name></expr>;<pos:position pos:line="62" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="64" pos:column="5">mutt_clear_error<pos:position pos:line="64" pos:column="21"/></name> <argument_list pos:line="64" pos:column="22">()<pos:position pos:line="64" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="65" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="67" pos:column="3">/*
   * remove a potential multipart/signed layer - useful when
   * resending messages
   */</comment>

  <if pos:line="72" pos:column="3">if <condition pos:line="72" pos:column="6">(<expr><name pos:line="72" pos:column="7">WithCrypto<pos:position pos:line="72" pos:column="17"/></name> <operator pos:line="72" pos:column="18">&amp;&amp;<pos:position pos:line="72" pos:column="28"/></operator> <call><name pos:line="72" pos:column="21">mutt_is_multipart_signed<pos:position pos:line="72" pos:column="45"/></name> <argument_list pos:line="72" pos:column="46">(<argument><expr><name><name pos:line="72" pos:column="47">newhdr<pos:position pos:line="72" pos:column="53"/></name><operator pos:line="72" pos:column="53">-&gt;<pos:position pos:line="72" pos:column="58"/></operator><name pos:line="72" pos:column="55">content<pos:position pos:line="72" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="64"/></condition><then pos:line="72" pos:column="64">
  <block pos:line="73" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="74" pos:column="5">newhdr<pos:position pos:line="74" pos:column="11"/></name><operator pos:line="74" pos:column="11">-&gt;<pos:position pos:line="74" pos:column="16"/></operator><name pos:line="74" pos:column="13">security<pos:position pos:line="74" pos:column="21"/></name></name> <operator pos:line="74" pos:column="22">|=<pos:position pos:line="74" pos:column="24"/></operator> <name pos:line="74" pos:column="25">SIGN<pos:position pos:line="74" pos:column="29"/></name></expr>;<pos:position pos:line="74" pos:column="30"/></expr_stmt>
    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><operator pos:line="75" pos:column="9">(<pos:position pos:line="75" pos:column="10"/></operator><name pos:line="75" pos:column="10">WithCrypto<pos:position pos:line="75" pos:column="20"/></name> <operator pos:line="75" pos:column="21">&amp;<pos:position pos:line="75" pos:column="26"/></operator> <name pos:line="75" pos:column="23">APPLICATION_PGP<pos:position pos:line="75" pos:column="38"/></name><operator pos:line="75" pos:column="38">)<pos:position pos:line="75" pos:column="39"/></operator>
        <operator pos:line="76" pos:column="9">&amp;&amp;<pos:position pos:line="76" pos:column="19"/></operator> <call><name pos:line="76" pos:column="12">ascii_strcasecmp<pos:position pos:line="76" pos:column="28"/></name> <argument_list pos:line="76" pos:column="29">(<argument><expr><call><name pos:line="76" pos:column="30">mutt_get_parameter<pos:position pos:line="76" pos:column="48"/></name> <argument_list pos:line="76" pos:column="49">(<argument><expr><literal type="string" pos:line="76" pos:column="50">"protocol"<pos:position pos:line="76" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="62">newhdr<pos:position pos:line="76" pos:column="68"/></name><operator pos:line="76" pos:column="68">-&gt;<pos:position pos:line="76" pos:column="73"/></operator><name pos:line="76" pos:column="70">content<pos:position pos:line="76" pos:column="77"/></name><operator pos:line="76" pos:column="77">-&gt;<pos:position pos:line="76" pos:column="82"/></operator><name pos:line="76" pos:column="79">parameter<pos:position pos:line="76" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="89"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="91">"application/pgp-signature"<pos:position pos:line="76" pos:column="118"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="119"/></argument_list></call> <operator pos:line="76" pos:column="120">==<pos:position pos:line="76" pos:column="122"/></operator> <literal type="number" pos:line="76" pos:column="123">0<pos:position pos:line="76" pos:column="124"/></literal></expr>)<pos:position pos:line="76" pos:column="125"/></condition><then pos:line="76" pos:column="125">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="77" pos:column="7">newhdr<pos:position pos:line="77" pos:column="13"/></name><operator pos:line="77" pos:column="13">-&gt;<pos:position pos:line="77" pos:column="18"/></operator><name pos:line="77" pos:column="15">security<pos:position pos:line="77" pos:column="23"/></name></name> <operator pos:line="77" pos:column="24">|=<pos:position pos:line="77" pos:column="26"/></operator> <name pos:line="77" pos:column="27">APPLICATION_PGP<pos:position pos:line="77" pos:column="42"/></name></expr>;<pos:position pos:line="77" pos:column="43"/></expr_stmt></block></then>
    <elseif pos:line="78" pos:column="5">else <if pos:line="78" pos:column="10">if <condition pos:line="78" pos:column="13">(<expr><operator pos:line="78" pos:column="14">(<pos:position pos:line="78" pos:column="15"/></operator><name pos:line="78" pos:column="15">WithCrypto<pos:position pos:line="78" pos:column="25"/></name> <operator pos:line="78" pos:column="26">&amp;<pos:position pos:line="78" pos:column="31"/></operator> <name pos:line="78" pos:column="28">APPLICATION_SMIME<pos:position pos:line="78" pos:column="45"/></name><operator pos:line="78" pos:column="45">)<pos:position pos:line="78" pos:column="46"/></operator></expr>)<pos:position pos:line="78" pos:column="47"/></condition><then pos:line="78" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="79" pos:column="7">newhdr<pos:position pos:line="79" pos:column="13"/></name><operator pos:line="79" pos:column="13">-&gt;<pos:position pos:line="79" pos:column="18"/></operator><name pos:line="79" pos:column="15">security<pos:position pos:line="79" pos:column="23"/></name></name> <operator pos:line="79" pos:column="24">|=<pos:position pos:line="79" pos:column="26"/></operator> <name pos:line="79" pos:column="27">APPLICATION_SMIME<pos:position pos:line="79" pos:column="44"/></name></expr>;<pos:position pos:line="79" pos:column="45"/></expr_stmt></block></then></if></elseif></if>

    <comment type="block" pos:line="81" pos:column="5">/* destroy the signature */</comment>
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">mutt_free_body<pos:position pos:line="82" pos:column="19"/></name> <argument_list pos:line="82" pos:column="20">(<argument><expr><operator pos:line="82" pos:column="21">&amp;<pos:position pos:line="82" pos:column="26"/></operator><name><name pos:line="82" pos:column="22">newhdr<pos:position pos:line="82" pos:column="28"/></name><operator pos:line="82" pos:column="28">-&gt;<pos:position pos:line="82" pos:column="33"/></operator><name pos:line="82" pos:column="30">content<pos:position pos:line="82" pos:column="37"/></name><operator pos:line="82" pos:column="37">-&gt;<pos:position pos:line="82" pos:column="42"/></operator><name pos:line="82" pos:column="39">parts<pos:position pos:line="82" pos:column="44"/></name><operator pos:line="82" pos:column="44">-&gt;<pos:position pos:line="82" pos:column="49"/></operator><name pos:line="82" pos:column="46">next<pos:position pos:line="82" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="83" pos:column="5">newhdr<pos:position pos:line="83" pos:column="11"/></name><operator pos:line="83" pos:column="11">-&gt;<pos:position pos:line="83" pos:column="16"/></operator><name pos:line="83" pos:column="13">content<pos:position pos:line="83" pos:column="20"/></name></name> <operator pos:line="83" pos:column="21">=<pos:position pos:line="83" pos:column="22"/></operator> <call><name pos:line="83" pos:column="23">mutt_remove_multipart<pos:position pos:line="83" pos:column="44"/></name> <argument_list pos:line="83" pos:column="45">(<argument><expr><name><name pos:line="83" pos:column="46">newhdr<pos:position pos:line="83" pos:column="52"/></name><operator pos:line="83" pos:column="52">-&gt;<pos:position pos:line="83" pos:column="57"/></operator><name pos:line="83" pos:column="54">content<pos:position pos:line="83" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="63"/></expr_stmt>
  }<pos:position pos:line="84" pos:column="4"/></block></then></if>


  <comment type="block" pos:line="87" pos:column="3">/*
   * We don't need no primary multipart.
   * Note: We _do_ preserve messages!
   *
   * XXX - we don't handle multipart/alternative in any
   * smart way when sending messages.  However, one may
   * consider this a feature.
   *
   */</comment>

  <if pos:line="97" pos:column="3">if <condition pos:line="97" pos:column="6">(<expr><name><name pos:line="97" pos:column="7">newhdr<pos:position pos:line="97" pos:column="13"/></name><operator pos:line="97" pos:column="13">-&gt;<pos:position pos:line="97" pos:column="18"/></operator><name pos:line="97" pos:column="15">content<pos:position pos:line="97" pos:column="22"/></name><operator pos:line="97" pos:column="22">-&gt;<pos:position pos:line="97" pos:column="27"/></operator><name pos:line="97" pos:column="24">type<pos:position pos:line="97" pos:column="28"/></name></name> <operator pos:line="97" pos:column="29">==<pos:position pos:line="97" pos:column="31"/></operator> <name pos:line="97" pos:column="32">TYPEMULTIPART<pos:position pos:line="97" pos:column="45"/></name></expr>)<pos:position pos:line="97" pos:column="46"/></condition><then pos:line="97" pos:column="46">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="98" pos:column="5">newhdr<pos:position pos:line="98" pos:column="11"/></name><operator pos:line="98" pos:column="11">-&gt;<pos:position pos:line="98" pos:column="16"/></operator><name pos:line="98" pos:column="13">content<pos:position pos:line="98" pos:column="20"/></name></name> <operator pos:line="98" pos:column="21">=<pos:position pos:line="98" pos:column="22"/></operator> <call><name pos:line="98" pos:column="23">mutt_remove_multipart<pos:position pos:line="98" pos:column="44"/></name> <argument_list pos:line="98" pos:column="45">(<argument><expr><name><name pos:line="98" pos:column="46">newhdr<pos:position pos:line="98" pos:column="52"/></name><operator pos:line="98" pos:column="52">-&gt;<pos:position pos:line="98" pos:column="57"/></operator><name pos:line="98" pos:column="54">content<pos:position pos:line="98" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="63"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name><name pos:line="100" pos:column="3">s<pos:position pos:line="100" pos:column="4"/></name><operator pos:line="100" pos:column="4">.<pos:position pos:line="100" pos:column="5"/></operator><name pos:line="100" pos:column="5">fpin<pos:position pos:line="100" pos:column="9"/></name></name> <operator pos:line="100" pos:column="10">=<pos:position pos:line="100" pos:column="11"/></operator> <name pos:line="100" pos:column="12">bfp<pos:position pos:line="100" pos:column="15"/></name></expr>;<pos:position pos:line="100" pos:column="16"/></expr_stmt>

  <comment type="block" pos:line="102" pos:column="3">/* create temporary files for all attachments */</comment>
  <for pos:line="103" pos:column="3">for <control pos:line="103" pos:column="7">(<init><expr><name pos:line="103" pos:column="8">b<pos:position pos:line="103" pos:column="9"/></name> <operator pos:line="103" pos:column="10">=<pos:position pos:line="103" pos:column="11"/></operator> <name><name pos:line="103" pos:column="12">newhdr<pos:position pos:line="103" pos:column="18"/></name><operator pos:line="103" pos:column="18">-&gt;<pos:position pos:line="103" pos:column="23"/></operator><name pos:line="103" pos:column="20">content<pos:position pos:line="103" pos:column="27"/></name></name></expr>;<pos:position pos:line="103" pos:column="28"/></init> <condition><expr><name pos:line="103" pos:column="29">b<pos:position pos:line="103" pos:column="30"/></name></expr>;<pos:position pos:line="103" pos:column="31"/></condition> <incr><expr><name pos:line="103" pos:column="32">b<pos:position pos:line="103" pos:column="33"/></name> <operator pos:line="103" pos:column="34">=<pos:position pos:line="103" pos:column="35"/></operator> <name><name pos:line="103" pos:column="36">b<pos:position pos:line="103" pos:column="37"/></name><operator pos:line="103" pos:column="37">-&gt;<pos:position pos:line="103" pos:column="42"/></operator><name pos:line="103" pos:column="39">next<pos:position pos:line="103" pos:column="43"/></name></name></expr></incr>)<pos:position pos:line="103" pos:column="44"/></control>
  <block pos:line="104" pos:column="3">{

    <comment type="block" pos:line="106" pos:column="5">/* what follows is roughly a receive-mode variant of
     * mutt_get_tmp_attachment () from muttlib.c
     */</comment>

    <expr_stmt><expr><name><name pos:line="110" pos:column="5">file<pos:position pos:line="110" pos:column="9"/></name><index pos:line="110" pos:column="9">[<expr><literal type="number" pos:line="110" pos:column="10">0<pos:position pos:line="110" pos:column="11"/></literal></expr>]<pos:position pos:line="110" pos:column="12"/></index></name> <operator pos:line="110" pos:column="13">=<pos:position pos:line="110" pos:column="14"/></operator> <literal type="char" pos:line="110" pos:column="15">'\0'<pos:position pos:line="110" pos:column="19"/></literal></expr>;<pos:position pos:line="110" pos:column="20"/></expr_stmt>
    <if pos:line="111" pos:column="5">if <condition pos:line="111" pos:column="8">(<expr><name><name pos:line="111" pos:column="9">b<pos:position pos:line="111" pos:column="10"/></name><operator pos:line="111" pos:column="10">-&gt;<pos:position pos:line="111" pos:column="15"/></operator><name pos:line="111" pos:column="12">filename<pos:position pos:line="111" pos:column="20"/></name></name></expr>)<pos:position pos:line="111" pos:column="21"/></condition><then pos:line="111" pos:column="21">
    <block pos:line="112" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="113" pos:column="7">strfcpy<pos:position pos:line="113" pos:column="14"/></name> <argument_list pos:line="113" pos:column="15">(<argument><expr><name pos:line="113" pos:column="16">file<pos:position pos:line="113" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="113" pos:column="22">b<pos:position pos:line="113" pos:column="23"/></name><operator pos:line="113" pos:column="23">-&gt;<pos:position pos:line="113" pos:column="28"/></operator><name pos:line="113" pos:column="25">filename<pos:position pos:line="113" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="113" pos:column="35">sizeof <argument_list pos:line="113" pos:column="42">(<argument><expr><name pos:line="113" pos:column="43">file<pos:position pos:line="113" pos:column="47"/></name></expr></argument>)<pos:position pos:line="113" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="113" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="50"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="114" pos:column="7">b<pos:position pos:line="114" pos:column="8"/></name><operator pos:line="114" pos:column="8">-&gt;<pos:position pos:line="114" pos:column="13"/></operator><name pos:line="114" pos:column="10">d_filename<pos:position pos:line="114" pos:column="20"/></name></name> <operator pos:line="114" pos:column="21">=<pos:position pos:line="114" pos:column="22"/></operator> <call><name pos:line="114" pos:column="23">safe_strdup<pos:position pos:line="114" pos:column="34"/></name> <argument_list pos:line="114" pos:column="35">(<argument><expr><name><name pos:line="114" pos:column="36">b<pos:position pos:line="114" pos:column="37"/></name><operator pos:line="114" pos:column="37">-&gt;<pos:position pos:line="114" pos:column="42"/></operator><name pos:line="114" pos:column="39">filename<pos:position pos:line="114" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="114" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="115" pos:column="6"/></block></then>
    <else pos:line="116" pos:column="5">else
    <block pos:line="117" pos:column="5">{
      <comment type="block" pos:line="118" pos:column="7">/* avoid Content-Disposition: header with temporary filename */</comment>
      <expr_stmt><expr><name><name pos:line="119" pos:column="7">b<pos:position pos:line="119" pos:column="8"/></name><operator pos:line="119" pos:column="8">-&gt;<pos:position pos:line="119" pos:column="13"/></operator><name pos:line="119" pos:column="10">use_disp<pos:position pos:line="119" pos:column="18"/></name></name> <operator pos:line="119" pos:column="19">=<pos:position pos:line="119" pos:column="20"/></operator> <literal type="number" pos:line="119" pos:column="21">0<pos:position pos:line="119" pos:column="22"/></literal></expr>;<pos:position pos:line="119" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="120" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="122" pos:column="5">/* set up state flags */</comment>

    <expr_stmt><expr><name><name pos:line="124" pos:column="5">s<pos:position pos:line="124" pos:column="6"/></name><operator pos:line="124" pos:column="6">.<pos:position pos:line="124" pos:column="7"/></operator><name pos:line="124" pos:column="7">flags<pos:position pos:line="124" pos:column="12"/></name></name> <operator pos:line="124" pos:column="13">=<pos:position pos:line="124" pos:column="14"/></operator> <literal type="number" pos:line="124" pos:column="15">0<pos:position pos:line="124" pos:column="16"/></literal></expr>;<pos:position pos:line="124" pos:column="17"/></expr_stmt>

    <if pos:line="126" pos:column="5">if <condition pos:line="126" pos:column="8">(<expr><name><name pos:line="126" pos:column="9">b<pos:position pos:line="126" pos:column="10"/></name><operator pos:line="126" pos:column="10">-&gt;<pos:position pos:line="126" pos:column="15"/></operator><name pos:line="126" pos:column="12">type<pos:position pos:line="126" pos:column="16"/></name></name> <operator pos:line="126" pos:column="17">==<pos:position pos:line="126" pos:column="19"/></operator> <name pos:line="126" pos:column="20">TYPETEXT<pos:position pos:line="126" pos:column="28"/></name></expr>)<pos:position pos:line="126" pos:column="29"/></condition><then pos:line="126" pos:column="29">
    <block pos:line="127" pos:column="5">{
      <if pos:line="128" pos:column="7">if <condition pos:line="128" pos:column="10">(<expr><operator pos:line="128" pos:column="11">!<pos:position pos:line="128" pos:column="12"/></operator><call><name pos:line="128" pos:column="12">ascii_strcasecmp<pos:position pos:line="128" pos:column="28"/></name> <argument_list pos:line="128" pos:column="29">(<argument><expr><literal type="string" pos:line="128" pos:column="30">"yes"<pos:position pos:line="128" pos:column="35"/></literal></expr></argument>, <argument><expr><call><name pos:line="128" pos:column="37">mutt_get_parameter<pos:position pos:line="128" pos:column="55"/></name> <argument_list pos:line="128" pos:column="56">(<argument><expr><literal type="string" pos:line="128" pos:column="57">"x-mutt-noconv"<pos:position pos:line="128" pos:column="72"/></literal></expr></argument>, <argument><expr><name><name pos:line="128" pos:column="74">b<pos:position pos:line="128" pos:column="75"/></name><operator pos:line="128" pos:column="75">-&gt;<pos:position pos:line="128" pos:column="80"/></operator><name pos:line="128" pos:column="77">parameter<pos:position pos:line="128" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="128" pos:column="88"/></argument_list></call></expr>)<pos:position pos:line="128" pos:column="89"/></condition><then pos:line="128" pos:column="89">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="129" pos:column="9">b<pos:position pos:line="129" pos:column="10"/></name><operator pos:line="129" pos:column="10">-&gt;<pos:position pos:line="129" pos:column="15"/></operator><name pos:line="129" pos:column="12">noconv<pos:position pos:line="129" pos:column="18"/></name></name> <operator pos:line="129" pos:column="19">=<pos:position pos:line="129" pos:column="20"/></operator> <literal type="number" pos:line="129" pos:column="21">1<pos:position pos:line="129" pos:column="22"/></literal></expr>;<pos:position pos:line="129" pos:column="23"/></expr_stmt></block></then>
      <else pos:line="130" pos:column="7">else
      <block pos:line="131" pos:column="7">{
	<expr_stmt><expr><name><name pos:line="132" pos:column="9">s<pos:position pos:line="132" pos:column="10"/></name><operator pos:line="132" pos:column="10">.<pos:position pos:line="132" pos:column="11"/></operator><name pos:line="132" pos:column="11">flags<pos:position pos:line="132" pos:column="16"/></name></name> <operator pos:line="132" pos:column="17">|=<pos:position pos:line="132" pos:column="19"/></operator> <name pos:line="132" pos:column="20">MUTT_CHARCONV<pos:position pos:line="132" pos:column="33"/></name></expr>;<pos:position pos:line="132" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="133" pos:column="9">b<pos:position pos:line="133" pos:column="10"/></name><operator pos:line="133" pos:column="10">-&gt;<pos:position pos:line="133" pos:column="15"/></operator><name pos:line="133" pos:column="12">noconv<pos:position pos:line="133" pos:column="18"/></name></name> <operator pos:line="133" pos:column="19">=<pos:position pos:line="133" pos:column="20"/></operator> <literal type="number" pos:line="133" pos:column="21">0<pos:position pos:line="133" pos:column="22"/></literal></expr>;<pos:position pos:line="133" pos:column="23"/></expr_stmt>
      }<pos:position pos:line="134" pos:column="8"/></block></else></if>

      <expr_stmt><expr><call><name pos:line="136" pos:column="7">mutt_delete_parameter<pos:position pos:line="136" pos:column="28"/></name> <argument_list pos:line="136" pos:column="29">(<argument><expr><literal type="string" pos:line="136" pos:column="30">"x-mutt-noconv"<pos:position pos:line="136" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="136" pos:column="47">&amp;<pos:position pos:line="136" pos:column="52"/></operator><name><name pos:line="136" pos:column="48">b<pos:position pos:line="136" pos:column="49"/></name><operator pos:line="136" pos:column="49">-&gt;<pos:position pos:line="136" pos:column="54"/></operator><name pos:line="136" pos:column="51">parameter<pos:position pos:line="136" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="136" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="137" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="139" pos:column="5">mutt_adv_mktemp<pos:position pos:line="139" pos:column="20"/></name> <argument_list pos:line="139" pos:column="21">(<argument><expr><name pos:line="139" pos:column="22">file<pos:position pos:line="139" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="139" pos:column="28">sizeof<argument_list pos:line="139" pos:column="34">(<argument><expr><name pos:line="139" pos:column="35">file<pos:position pos:line="139" pos:column="39"/></name></expr></argument>)<pos:position pos:line="139" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="139" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="42"/></expr_stmt>
    <if pos:line="140" pos:column="5">if <condition pos:line="140" pos:column="8">(<expr><operator pos:line="140" pos:column="9">(<pos:position pos:line="140" pos:column="10"/></operator><name><name pos:line="140" pos:column="10">s<pos:position pos:line="140" pos:column="11"/></name><operator pos:line="140" pos:column="11">.<pos:position pos:line="140" pos:column="12"/></operator><name pos:line="140" pos:column="12">fpout<pos:position pos:line="140" pos:column="17"/></name></name> <operator pos:line="140" pos:column="18">=<pos:position pos:line="140" pos:column="19"/></operator> <call><name pos:line="140" pos:column="20">safe_fopen<pos:position pos:line="140" pos:column="30"/></name> <argument_list pos:line="140" pos:column="31">(<argument><expr><name pos:line="140" pos:column="32">file<pos:position pos:line="140" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="38">"w"<pos:position pos:line="140" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="42"/></argument_list></call><operator pos:line="140" pos:column="42">)<pos:position pos:line="140" pos:column="43"/></operator> <operator pos:line="140" pos:column="44">==<pos:position pos:line="140" pos:column="46"/></operator> <name pos:line="140" pos:column="47">NULL<pos:position pos:line="140" pos:column="51"/></name></expr>)<pos:position pos:line="140" pos:column="52"/></condition><then pos:line="140" pos:column="52">
      <block type="pseudo"><goto pos:line="141" pos:column="7">goto <name pos:line="141" pos:column="12">bail<pos:position pos:line="141" pos:column="16"/></name>;<pos:position pos:line="141" pos:column="17"/></goto></block></then></if>


    <if pos:line="144" pos:column="5">if <condition pos:line="144" pos:column="8">(<expr><operator pos:line="144" pos:column="9">(<pos:position pos:line="144" pos:column="10"/></operator><name pos:line="144" pos:column="10">WithCrypto<pos:position pos:line="144" pos:column="20"/></name> <operator pos:line="144" pos:column="21">&amp;<pos:position pos:line="144" pos:column="26"/></operator> <name pos:line="144" pos:column="23">APPLICATION_PGP<pos:position pos:line="144" pos:column="38"/></name><operator pos:line="144" pos:column="38">)<pos:position pos:line="144" pos:column="39"/></operator> <operator pos:line="144" pos:column="40">&amp;&amp;<pos:position pos:line="144" pos:column="50"/></operator>
	<operator pos:line="145" pos:column="9">(<pos:position pos:line="145" pos:column="10"/></operator><operator pos:line="145" pos:column="10">(<pos:position pos:line="145" pos:column="11"/></operator><name pos:line="145" pos:column="11">sec_type<pos:position pos:line="145" pos:column="19"/></name> <operator pos:line="145" pos:column="20">=<pos:position pos:line="145" pos:column="21"/></operator> <call><name pos:line="145" pos:column="22">mutt_is_application_pgp<pos:position pos:line="145" pos:column="45"/></name> <argument_list pos:line="145" pos:column="46">(<argument><expr><name pos:line="145" pos:column="47">b<pos:position pos:line="145" pos:column="48"/></name></expr></argument>)<pos:position pos:line="145" pos:column="49"/></argument_list></call><operator pos:line="145" pos:column="49">)<pos:position pos:line="145" pos:column="50"/></operator> <operator pos:line="145" pos:column="51">&amp;<pos:position pos:line="145" pos:column="56"/></operator> <operator pos:line="145" pos:column="53">(<pos:position pos:line="145" pos:column="54"/></operator><name pos:line="145" pos:column="54">ENCRYPT<pos:position pos:line="145" pos:column="61"/></name><operator pos:line="145" pos:column="61">|<pos:position pos:line="145" pos:column="62"/></operator><name pos:line="145" pos:column="62">SIGN<pos:position pos:line="145" pos:column="66"/></name><operator pos:line="145" pos:column="66">)<pos:position pos:line="145" pos:column="67"/></operator><operator pos:line="145" pos:column="67">)<pos:position pos:line="145" pos:column="68"/></operator></expr>)<pos:position pos:line="145" pos:column="69"/></condition><then pos:line="145" pos:column="69">
    <block pos:line="146" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="147" pos:column="7">mutt_body_handler<pos:position pos:line="147" pos:column="24"/></name> <argument_list pos:line="147" pos:column="25">(<argument><expr><name pos:line="147" pos:column="26">b<pos:position pos:line="147" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="147" pos:column="29">&amp;<pos:position pos:line="147" pos:column="34"/></operator><name pos:line="147" pos:column="30">s<pos:position pos:line="147" pos:column="31"/></name></expr></argument>)<pos:position pos:line="147" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="33"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="149" pos:column="7">newhdr<pos:position pos:line="149" pos:column="13"/></name><operator pos:line="149" pos:column="13">-&gt;<pos:position pos:line="149" pos:column="18"/></operator><name pos:line="149" pos:column="15">security<pos:position pos:line="149" pos:column="23"/></name></name> <operator pos:line="149" pos:column="24">|=<pos:position pos:line="149" pos:column="26"/></operator> <name pos:line="149" pos:column="27">sec_type<pos:position pos:line="149" pos:column="35"/></name></expr>;<pos:position pos:line="149" pos:column="36"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="151" pos:column="7">b<pos:position pos:line="151" pos:column="8"/></name><operator pos:line="151" pos:column="8">-&gt;<pos:position pos:line="151" pos:column="13"/></operator><name pos:line="151" pos:column="10">type<pos:position pos:line="151" pos:column="14"/></name></name> <operator pos:line="151" pos:column="15">=<pos:position pos:line="151" pos:column="16"/></operator> <name pos:line="151" pos:column="17">TYPETEXT<pos:position pos:line="151" pos:column="25"/></name></expr>;<pos:position pos:line="151" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="152" pos:column="7">mutt_str_replace<pos:position pos:line="152" pos:column="23"/></name> <argument_list pos:line="152" pos:column="24">(<argument><expr><operator pos:line="152" pos:column="25">&amp;<pos:position pos:line="152" pos:column="30"/></operator><name><name pos:line="152" pos:column="26">b<pos:position pos:line="152" pos:column="27"/></name><operator pos:line="152" pos:column="27">-&gt;<pos:position pos:line="152" pos:column="32"/></operator><name pos:line="152" pos:column="29">subtype<pos:position pos:line="152" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="152" pos:column="38">"plain"<pos:position pos:line="152" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="153" pos:column="7">mutt_delete_parameter<pos:position pos:line="153" pos:column="28"/></name> <argument_list pos:line="153" pos:column="29">(<argument><expr><literal type="string" pos:line="153" pos:column="30">"x-action"<pos:position pos:line="153" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="153" pos:column="42">&amp;<pos:position pos:line="153" pos:column="47"/></operator><name><name pos:line="153" pos:column="43">b<pos:position pos:line="153" pos:column="44"/></name><operator pos:line="153" pos:column="44">-&gt;<pos:position pos:line="153" pos:column="49"/></operator><name pos:line="153" pos:column="46">parameter<pos:position pos:line="153" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="153" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="154" pos:column="6"/></block></then>
    <elseif pos:line="155" pos:column="5">else <if pos:line="155" pos:column="10">if <condition pos:line="155" pos:column="13">(<expr><operator pos:line="155" pos:column="14">(<pos:position pos:line="155" pos:column="15"/></operator><name pos:line="155" pos:column="15">WithCrypto<pos:position pos:line="155" pos:column="25"/></name> <operator pos:line="155" pos:column="26">&amp;<pos:position pos:line="155" pos:column="31"/></operator> <name pos:line="155" pos:column="28">APPLICATION_SMIME<pos:position pos:line="155" pos:column="45"/></name><operator pos:line="155" pos:column="45">)<pos:position pos:line="155" pos:column="46"/></operator> <operator pos:line="155" pos:column="47">&amp;&amp;<pos:position pos:line="155" pos:column="57"/></operator>
             <operator pos:line="156" pos:column="14">(<pos:position pos:line="156" pos:column="15"/></operator><operator pos:line="156" pos:column="15">(<pos:position pos:line="156" pos:column="16"/></operator><name pos:line="156" pos:column="16">sec_type<pos:position pos:line="156" pos:column="24"/></name> <operator pos:line="156" pos:column="25">=<pos:position pos:line="156" pos:column="26"/></operator> <call><name pos:line="156" pos:column="27">mutt_is_application_smime<pos:position pos:line="156" pos:column="52"/></name> <argument_list pos:line="156" pos:column="53">(<argument><expr><name pos:line="156" pos:column="54">b<pos:position pos:line="156" pos:column="55"/></name></expr></argument>)<pos:position pos:line="156" pos:column="56"/></argument_list></call><operator pos:line="156" pos:column="56">)<pos:position pos:line="156" pos:column="57"/></operator> <operator pos:line="156" pos:column="58">&amp;<pos:position pos:line="156" pos:column="63"/></operator> <operator pos:line="156" pos:column="60">(<pos:position pos:line="156" pos:column="61"/></operator><name pos:line="156" pos:column="61">ENCRYPT<pos:position pos:line="156" pos:column="68"/></name><operator pos:line="156" pos:column="68">|<pos:position pos:line="156" pos:column="69"/></operator><name pos:line="156" pos:column="69">SIGN<pos:position pos:line="156" pos:column="73"/></name><operator pos:line="156" pos:column="73">)<pos:position pos:line="156" pos:column="74"/></operator><operator pos:line="156" pos:column="74">)<pos:position pos:line="156" pos:column="75"/></operator></expr>)<pos:position pos:line="156" pos:column="76"/></condition><then pos:line="156" pos:column="76">
    <block pos:line="157" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="158" pos:column="7">mutt_body_handler<pos:position pos:line="158" pos:column="24"/></name> <argument_list pos:line="158" pos:column="25">(<argument><expr><name pos:line="158" pos:column="26">b<pos:position pos:line="158" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="158" pos:column="29">&amp;<pos:position pos:line="158" pos:column="34"/></operator><name pos:line="158" pos:column="30">s<pos:position pos:line="158" pos:column="31"/></name></expr></argument>)<pos:position pos:line="158" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="33"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="160" pos:column="7">newhdr<pos:position pos:line="160" pos:column="13"/></name><operator pos:line="160" pos:column="13">-&gt;<pos:position pos:line="160" pos:column="18"/></operator><name pos:line="160" pos:column="15">security<pos:position pos:line="160" pos:column="23"/></name></name> <operator pos:line="160" pos:column="24">|=<pos:position pos:line="160" pos:column="26"/></operator> <name pos:line="160" pos:column="27">sec_type<pos:position pos:line="160" pos:column="35"/></name></expr>;<pos:position pos:line="160" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="161" pos:column="7">b<pos:position pos:line="161" pos:column="8"/></name><operator pos:line="161" pos:column="8">-&gt;<pos:position pos:line="161" pos:column="13"/></operator><name pos:line="161" pos:column="10">type<pos:position pos:line="161" pos:column="14"/></name></name> <operator pos:line="161" pos:column="15">=<pos:position pos:line="161" pos:column="16"/></operator> <name pos:line="161" pos:column="17">TYPETEXT<pos:position pos:line="161" pos:column="25"/></name></expr>;<pos:position pos:line="161" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="162" pos:column="7">mutt_str_replace<pos:position pos:line="162" pos:column="23"/></name> <argument_list pos:line="162" pos:column="24">(<argument><expr><operator pos:line="162" pos:column="25">&amp;<pos:position pos:line="162" pos:column="30"/></operator><name><name pos:line="162" pos:column="26">b<pos:position pos:line="162" pos:column="27"/></name><operator pos:line="162" pos:column="27">-&gt;<pos:position pos:line="162" pos:column="32"/></operator><name pos:line="162" pos:column="29">subtype<pos:position pos:line="162" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="162" pos:column="38">"plain"<pos:position pos:line="162" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="162" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="163" pos:column="6"/></block></then></if></elseif>
    <else pos:line="164" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="165" pos:column="7">mutt_decode_attachment<pos:position pos:line="165" pos:column="29"/></name> <argument_list pos:line="165" pos:column="30">(<argument><expr><name pos:line="165" pos:column="31">b<pos:position pos:line="165" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="165" pos:column="34">&amp;<pos:position pos:line="165" pos:column="39"/></operator><name pos:line="165" pos:column="35">s<pos:position pos:line="165" pos:column="36"/></name></expr></argument>)<pos:position pos:line="165" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="38"/></expr_stmt></block></else></if>

    <if pos:line="167" pos:column="5">if <condition pos:line="167" pos:column="8">(<expr><call><name pos:line="167" pos:column="9">safe_fclose<pos:position pos:line="167" pos:column="20"/></name> <argument_list pos:line="167" pos:column="21">(<argument><expr><operator pos:line="167" pos:column="22">&amp;<pos:position pos:line="167" pos:column="27"/></operator><name><name pos:line="167" pos:column="23">s<pos:position pos:line="167" pos:column="24"/></name><operator pos:line="167" pos:column="24">.<pos:position pos:line="167" pos:column="25"/></operator><name pos:line="167" pos:column="25">fpout<pos:position pos:line="167" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="167" pos:column="31"/></argument_list></call> <operator pos:line="167" pos:column="32">!=<pos:position pos:line="167" pos:column="34"/></operator> <literal type="number" pos:line="167" pos:column="35">0<pos:position pos:line="167" pos:column="36"/></literal></expr>)<pos:position pos:line="167" pos:column="37"/></condition><then pos:line="167" pos:column="37">
      <block type="pseudo"><goto pos:line="168" pos:column="7">goto <name pos:line="168" pos:column="12">bail<pos:position pos:line="168" pos:column="16"/></name>;<pos:position pos:line="168" pos:column="17"/></goto></block></then></if>

    <expr_stmt><expr><call><name pos:line="170" pos:column="5">mutt_str_replace<pos:position pos:line="170" pos:column="21"/></name> <argument_list pos:line="170" pos:column="22">(<argument><expr><operator pos:line="170" pos:column="23">&amp;<pos:position pos:line="170" pos:column="28"/></operator><name><name pos:line="170" pos:column="24">b<pos:position pos:line="170" pos:column="25"/></name><operator pos:line="170" pos:column="25">-&gt;<pos:position pos:line="170" pos:column="30"/></operator><name pos:line="170" pos:column="27">filename<pos:position pos:line="170" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="37">file<pos:position pos:line="170" pos:column="41"/></name></expr></argument>)<pos:position pos:line="170" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="171" pos:column="5">b<pos:position pos:line="171" pos:column="6"/></name><operator pos:line="171" pos:column="6">-&gt;<pos:position pos:line="171" pos:column="11"/></operator><name pos:line="171" pos:column="8">unlink<pos:position pos:line="171" pos:column="14"/></name></name> <operator pos:line="171" pos:column="15">=<pos:position pos:line="171" pos:column="16"/></operator> <literal type="number" pos:line="171" pos:column="17">1<pos:position pos:line="171" pos:column="18"/></literal></expr>;<pos:position pos:line="171" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="173" pos:column="5">mutt_stamp_attachment<pos:position pos:line="173" pos:column="26"/></name> <argument_list pos:line="173" pos:column="27">(<argument><expr><name pos:line="173" pos:column="28">b<pos:position pos:line="173" pos:column="29"/></name></expr></argument>)<pos:position pos:line="173" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="175" pos:column="5">mutt_free_body<pos:position pos:line="175" pos:column="19"/></name> <argument_list pos:line="175" pos:column="20">(<argument><expr><operator pos:line="175" pos:column="21">&amp;<pos:position pos:line="175" pos:column="26"/></operator><name><name pos:line="175" pos:column="22">b<pos:position pos:line="175" pos:column="23"/></name><operator pos:line="175" pos:column="23">-&gt;<pos:position pos:line="175" pos:column="28"/></operator><name pos:line="175" pos:column="25">parts<pos:position pos:line="175" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="175" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="32"/></expr_stmt>
    <if pos:line="176" pos:column="5">if <condition pos:line="176" pos:column="8">(<expr><name><name pos:line="176" pos:column="9">b<pos:position pos:line="176" pos:column="10"/></name><operator pos:line="176" pos:column="10">-&gt;<pos:position pos:line="176" pos:column="15"/></operator><name pos:line="176" pos:column="12">hdr<pos:position pos:line="176" pos:column="15"/></name></name></expr>)<pos:position pos:line="176" pos:column="16"/></condition><then pos:line="176" pos:column="16"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="176" pos:column="17">b<pos:position pos:line="176" pos:column="18"/></name><operator pos:line="176" pos:column="18">-&gt;<pos:position pos:line="176" pos:column="23"/></operator><name pos:line="176" pos:column="20">hdr<pos:position pos:line="176" pos:column="23"/></name><operator pos:line="176" pos:column="23">-&gt;<pos:position pos:line="176" pos:column="28"/></operator><name pos:line="176" pos:column="25">content<pos:position pos:line="176" pos:column="32"/></name></name> <operator pos:line="176" pos:column="33">=<pos:position pos:line="176" pos:column="34"/></operator> <name pos:line="176" pos:column="35">NULL<pos:position pos:line="176" pos:column="39"/></name></expr>;<pos:position pos:line="176" pos:column="40"/></expr_stmt></block></then></if> <comment type="block" pos:line="176" pos:column="41">/* avoid dangling pointer */</comment>
  }<pos:position pos:line="177" pos:column="4"/></block></for>

  <comment type="block" pos:line="179" pos:column="3">/* Fix encryption flags. */</comment>

  <comment type="block" pos:line="181" pos:column="3">/* No inline if multipart. */</comment>
  <if pos:line="182" pos:column="3">if <condition pos:line="182" pos:column="6">(<expr><name pos:line="182" pos:column="7">WithCrypto<pos:position pos:line="182" pos:column="17"/></name> <operator pos:line="182" pos:column="18">&amp;&amp;<pos:position pos:line="182" pos:column="28"/></operator> <operator pos:line="182" pos:column="21">(<pos:position pos:line="182" pos:column="22"/></operator><name><name pos:line="182" pos:column="22">newhdr<pos:position pos:line="182" pos:column="28"/></name><operator pos:line="182" pos:column="28">-&gt;<pos:position pos:line="182" pos:column="33"/></operator><name pos:line="182" pos:column="30">security<pos:position pos:line="182" pos:column="38"/></name></name> <operator pos:line="182" pos:column="39">&amp;<pos:position pos:line="182" pos:column="44"/></operator> <name pos:line="182" pos:column="41">INLINE<pos:position pos:line="182" pos:column="47"/></name><operator pos:line="182" pos:column="47">)<pos:position pos:line="182" pos:column="48"/></operator> <operator pos:line="182" pos:column="49">&amp;&amp;<pos:position pos:line="182" pos:column="59"/></operator> <name><name pos:line="182" pos:column="52">newhdr<pos:position pos:line="182" pos:column="58"/></name><operator pos:line="182" pos:column="58">-&gt;<pos:position pos:line="182" pos:column="63"/></operator><name pos:line="182" pos:column="60">content<pos:position pos:line="182" pos:column="67"/></name><operator pos:line="182" pos:column="67">-&gt;<pos:position pos:line="182" pos:column="72"/></operator><name pos:line="182" pos:column="69">next<pos:position pos:line="182" pos:column="73"/></name></name></expr>)<pos:position pos:line="182" pos:column="74"/></condition><then pos:line="182" pos:column="74">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="183" pos:column="5">newhdr<pos:position pos:line="183" pos:column="11"/></name><operator pos:line="183" pos:column="11">-&gt;<pos:position pos:line="183" pos:column="16"/></operator><name pos:line="183" pos:column="13">security<pos:position pos:line="183" pos:column="21"/></name></name> <operator pos:line="183" pos:column="22">&amp;=<pos:position pos:line="183" pos:column="28"/></operator> <operator pos:line="183" pos:column="25">~<pos:position pos:line="183" pos:column="26"/></operator><name pos:line="183" pos:column="26">INLINE<pos:position pos:line="183" pos:column="32"/></name></expr>;<pos:position pos:line="183" pos:column="33"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="185" pos:column="3">/* Do we even support multiple mechanisms? */</comment>
  <expr_stmt><expr><name><name pos:line="186" pos:column="3">newhdr<pos:position pos:line="186" pos:column="9"/></name><operator pos:line="186" pos:column="9">-&gt;<pos:position pos:line="186" pos:column="14"/></operator><name pos:line="186" pos:column="11">security<pos:position pos:line="186" pos:column="19"/></name></name> <operator pos:line="186" pos:column="20">&amp;=<pos:position pos:line="186" pos:column="26"/></operator> <name pos:line="186" pos:column="23">WithCrypto<pos:position pos:line="186" pos:column="33"/></name> <operator pos:line="186" pos:column="34">|<pos:position pos:line="186" pos:column="35"/></operator> <operator pos:line="186" pos:column="36">~<pos:position pos:line="186" pos:column="37"/></operator><operator pos:line="186" pos:column="37">(<pos:position pos:line="186" pos:column="38"/></operator><name pos:line="186" pos:column="38">APPLICATION_PGP<pos:position pos:line="186" pos:column="53"/></name><operator pos:line="186" pos:column="53">|<pos:position pos:line="186" pos:column="54"/></operator><name pos:line="186" pos:column="54">APPLICATION_SMIME<pos:position pos:line="186" pos:column="71"/></name><operator pos:line="186" pos:column="71">)<pos:position pos:line="186" pos:column="72"/></operator></expr>;<pos:position pos:line="186" pos:column="73"/></expr_stmt>

  <comment type="block" pos:line="188" pos:column="3">/* Theoretically, both could be set. Take the one the user wants to set by default. */</comment>
  <if pos:line="189" pos:column="3">if <condition pos:line="189" pos:column="6">(<expr><operator pos:line="189" pos:column="7">(<pos:position pos:line="189" pos:column="8"/></operator><name><name pos:line="189" pos:column="8">newhdr<pos:position pos:line="189" pos:column="14"/></name><operator pos:line="189" pos:column="14">-&gt;<pos:position pos:line="189" pos:column="19"/></operator><name pos:line="189" pos:column="16">security<pos:position pos:line="189" pos:column="24"/></name></name> <operator pos:line="189" pos:column="25">&amp;<pos:position pos:line="189" pos:column="30"/></operator> <name pos:line="189" pos:column="27">APPLICATION_PGP<pos:position pos:line="189" pos:column="42"/></name><operator pos:line="189" pos:column="42">)<pos:position pos:line="189" pos:column="43"/></operator> <operator pos:line="189" pos:column="44">&amp;&amp;<pos:position pos:line="189" pos:column="54"/></operator> <operator pos:line="189" pos:column="47">(<pos:position pos:line="189" pos:column="48"/></operator><name><name pos:line="189" pos:column="48">newhdr<pos:position pos:line="189" pos:column="54"/></name><operator pos:line="189" pos:column="54">-&gt;<pos:position pos:line="189" pos:column="59"/></operator><name pos:line="189" pos:column="56">security<pos:position pos:line="189" pos:column="64"/></name></name> <operator pos:line="189" pos:column="65">&amp;<pos:position pos:line="189" pos:column="70"/></operator> <name pos:line="189" pos:column="67">APPLICATION_SMIME<pos:position pos:line="189" pos:column="84"/></name><operator pos:line="189" pos:column="84">)<pos:position pos:line="189" pos:column="85"/></operator></expr>)<pos:position pos:line="189" pos:column="86"/></condition><then pos:line="189" pos:column="86">
  <block pos:line="190" pos:column="3">{
    <if pos:line="191" pos:column="5">if <condition pos:line="191" pos:column="8">(<expr><call><name pos:line="191" pos:column="9">option<pos:position pos:line="191" pos:column="15"/></name> <argument_list pos:line="191" pos:column="16">(<argument><expr><name pos:line="191" pos:column="17">OPTSMIMEISDEFAULT<pos:position pos:line="191" pos:column="34"/></name></expr></argument>)<pos:position pos:line="191" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="191" pos:column="36"/></condition><then pos:line="191" pos:column="36">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="192" pos:column="7">newhdr<pos:position pos:line="192" pos:column="13"/></name><operator pos:line="192" pos:column="13">-&gt;<pos:position pos:line="192" pos:column="18"/></operator><name pos:line="192" pos:column="15">security<pos:position pos:line="192" pos:column="23"/></name></name> <operator pos:line="192" pos:column="24">&amp;=<pos:position pos:line="192" pos:column="30"/></operator> <operator pos:line="192" pos:column="27">~<pos:position pos:line="192" pos:column="28"/></operator><name pos:line="192" pos:column="28">APPLICATION_PGP<pos:position pos:line="192" pos:column="43"/></name></expr>;<pos:position pos:line="192" pos:column="44"/></expr_stmt></block></then>
    <else pos:line="193" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="194" pos:column="7">newhdr<pos:position pos:line="194" pos:column="13"/></name><operator pos:line="194" pos:column="13">-&gt;<pos:position pos:line="194" pos:column="18"/></operator><name pos:line="194" pos:column="15">security<pos:position pos:line="194" pos:column="23"/></name></name> <operator pos:line="194" pos:column="24">&amp;=<pos:position pos:line="194" pos:column="30"/></operator> <operator pos:line="194" pos:column="27">~<pos:position pos:line="194" pos:column="28"/></operator><name pos:line="194" pos:column="28">APPLICATION_SMIME<pos:position pos:line="194" pos:column="45"/></name></expr>;<pos:position pos:line="194" pos:column="46"/></expr_stmt></block></else></if>
  }<pos:position pos:line="195" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="197" pos:column="3">rv<pos:position pos:line="197" pos:column="5"/></name> <operator pos:line="197" pos:column="6">=<pos:position pos:line="197" pos:column="7"/></operator> <literal type="number" pos:line="197" pos:column="8">0<pos:position pos:line="197" pos:column="9"/></literal></expr>;<pos:position pos:line="197" pos:column="10"/></expr_stmt>

  <label><name pos:line="199" pos:column="3">bail<pos:position pos:line="199" pos:column="7"/></name>:<pos:position pos:line="199" pos:column="8"/></label>

  <comment type="block" pos:line="201" pos:column="3">/* that's it. */</comment>
  <if pos:line="202" pos:column="3">if <condition pos:line="202" pos:column="6">(<expr><name pos:line="202" pos:column="7">bfp<pos:position pos:line="202" pos:column="10"/></name> <operator pos:line="202" pos:column="11">!=<pos:position pos:line="202" pos:column="13"/></operator> <name pos:line="202" pos:column="14">fp<pos:position pos:line="202" pos:column="16"/></name></expr>)<pos:position pos:line="202" pos:column="17"/></condition><then pos:line="202" pos:column="17"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="202" pos:column="18">safe_fclose<pos:position pos:line="202" pos:column="29"/></name> <argument_list pos:line="202" pos:column="30">(<argument><expr><operator pos:line="202" pos:column="31">&amp;<pos:position pos:line="202" pos:column="36"/></operator><name pos:line="202" pos:column="32">bfp<pos:position pos:line="202" pos:column="35"/></name></expr></argument>)<pos:position pos:line="202" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="37"/></expr_stmt></block></then></if>
  <if pos:line="203" pos:column="3">if <condition pos:line="203" pos:column="6">(<expr><name pos:line="203" pos:column="7">msg<pos:position pos:line="203" pos:column="10"/></name></expr>)<pos:position pos:line="203" pos:column="11"/></condition><then pos:line="203" pos:column="11"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="203" pos:column="12">mx_close_message<pos:position pos:line="203" pos:column="28"/></name> <argument_list pos:line="203" pos:column="29">(<argument><expr><name pos:line="203" pos:column="30">ctx<pos:position pos:line="203" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="203" pos:column="35">&amp;<pos:position pos:line="203" pos:column="40"/></operator><name pos:line="203" pos:column="36">msg<pos:position pos:line="203" pos:column="39"/></name></expr></argument>)<pos:position pos:line="203" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="41"/></expr_stmt></block></then></if>

  <if pos:line="205" pos:column="3">if <condition pos:line="205" pos:column="6">(<expr><name pos:line="205" pos:column="7">rv<pos:position pos:line="205" pos:column="9"/></name> <operator pos:line="205" pos:column="10">==<pos:position pos:line="205" pos:column="12"/></operator> <operator pos:line="205" pos:column="13">-<pos:position pos:line="205" pos:column="14"/></operator><literal type="number" pos:line="205" pos:column="14">1<pos:position pos:line="205" pos:column="15"/></literal></expr>)<pos:position pos:line="205" pos:column="16"/></condition><then pos:line="205" pos:column="16">
  <block pos:line="206" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="207" pos:column="5">mutt_free_envelope<pos:position pos:line="207" pos:column="23"/></name> <argument_list pos:line="207" pos:column="24">(<argument><expr><operator pos:line="207" pos:column="25">&amp;<pos:position pos:line="207" pos:column="30"/></operator><name><name pos:line="207" pos:column="26">newhdr<pos:position pos:line="207" pos:column="32"/></name><operator pos:line="207" pos:column="32">-&gt;<pos:position pos:line="207" pos:column="37"/></operator><name pos:line="207" pos:column="34">env<pos:position pos:line="207" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="207" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="208" pos:column="5">mutt_free_body<pos:position pos:line="208" pos:column="19"/></name> <argument_list pos:line="208" pos:column="20">(<argument><expr><operator pos:line="208" pos:column="21">&amp;<pos:position pos:line="208" pos:column="26"/></operator><name><name pos:line="208" pos:column="22">newhdr<pos:position pos:line="208" pos:column="28"/></name><operator pos:line="208" pos:column="28">-&gt;<pos:position pos:line="208" pos:column="33"/></operator><name pos:line="208" pos:column="30">content<pos:position pos:line="208" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="208" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="209" pos:column="4"/></block></then></if>

  <return pos:line="211" pos:column="3">return <expr><name pos:line="211" pos:column="10">rv<pos:position pos:line="211" pos:column="12"/></name></expr>;<pos:position pos:line="211" pos:column="13"/></return>
}<pos:position pos:line="212" pos:column="2"/></block></function></unit>

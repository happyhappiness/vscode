<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1811_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_get_hook_type<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">name<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">command_t<pos:position pos:line="3" pos:column="25"/></name></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">c<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>

  <for pos:line="5" pos:column="3">for <control pos:line="5" pos:column="7">(<init><expr><name pos:line="5" pos:column="8">c<pos:position pos:line="5" pos:column="9"/></name> <operator pos:line="5" pos:column="10">=<pos:position pos:line="5" pos:column="11"/></operator> <name pos:line="5" pos:column="12">Commands<pos:position pos:line="5" pos:column="20"/></name></expr> ;<pos:position pos:line="5" pos:column="22"/></init> <condition><expr><name><name pos:line="5" pos:column="23">c<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">-&gt;<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="26">name<pos:position pos:line="5" pos:column="30"/></name></name></expr> ;<pos:position pos:line="5" pos:column="32"/></condition> <incr><expr><name pos:line="5" pos:column="33">c<pos:position pos:line="5" pos:column="34"/></name><operator pos:line="5" pos:column="34">++<pos:position pos:line="5" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="37"/></control>
    <block type="pseudo"><if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">c<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">-&gt;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="12">func<pos:position pos:line="6" pos:column="16"/></name></name> <operator pos:line="6" pos:column="17">==<pos:position pos:line="6" pos:column="19"/></operator> <name pos:line="6" pos:column="20">mutt_parse_hook<pos:position pos:line="6" pos:column="35"/></name> <operator pos:line="6" pos:column="36">&amp;&amp;<pos:position pos:line="6" pos:column="46"/></operator> <call><name pos:line="6" pos:column="39">ascii_strcasecmp<pos:position pos:line="6" pos:column="55"/></name> <argument_list pos:line="6" pos:column="56">(<argument><expr><name><name pos:line="6" pos:column="57">c<pos:position pos:line="6" pos:column="58"/></name><operator pos:line="6" pos:column="58">-&gt;<pos:position pos:line="6" pos:column="63"/></operator><name pos:line="6" pos:column="60">name<pos:position pos:line="6" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="66">name<pos:position pos:line="6" pos:column="70"/></name></expr></argument>)<pos:position pos:line="6" pos:column="71"/></argument_list></call> <operator pos:line="6" pos:column="72">==<pos:position pos:line="6" pos:column="74"/></operator> <literal type="number" pos:line="6" pos:column="75">0<pos:position pos:line="6" pos:column="76"/></literal></expr>)<pos:position pos:line="6" pos:column="77"/></condition><then pos:line="6" pos:column="77">
      <block type="pseudo"><return pos:line="7" pos:column="7">return <expr><name><name pos:line="7" pos:column="14">c<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">data<pos:position pos:line="7" pos:column="21"/></name></name></expr>;<pos:position pos:line="7" pos:column="22"/></return></block></then></if></block></for>
  <return pos:line="8" pos:column="3">return <expr><literal type="number" pos:line="8" pos:column="10">0<pos:position pos:line="8" pos:column="11"/></literal></expr>;<pos:position pos:line="8" pos:column="12"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

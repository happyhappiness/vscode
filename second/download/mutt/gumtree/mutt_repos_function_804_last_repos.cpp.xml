<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_804_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mutt_sasl_conn_write<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">CONNECTION<pos:position pos:line="1" pos:column="44"/></name><modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type> <name pos:line="1" pos:column="46">conn<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name><modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type> <name pos:line="1" pos:column="64">buf<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
  <parameter><decl><type><name pos:line="2" pos:column="3">size_t<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">len<pos:position pos:line="2" pos:column="13"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="14"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">SASL_DATA<pos:position pos:line="4" pos:column="12"/></name><modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type> <name pos:line="4" pos:column="14">sasldata<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">rc<pos:position pos:line="5" pos:column="9"/></name></decl>;<pos:position pos:line="5" pos:column="10"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">pbuf<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">unsigned<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">int<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">olen<pos:position pos:line="8" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="22">plen<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">sasldata<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <operator pos:line="10" pos:column="14">(<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">SASL_DATA<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></operator><operator pos:line="10" pos:column="25">)<pos:position pos:line="10" pos:column="26"/></operator> <name><name pos:line="10" pos:column="27">conn<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">-&gt;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="33">sockdata<pos:position pos:line="10" pos:column="41"/></name></name></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">conn<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">-&gt;<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="9">sockdata<pos:position pos:line="11" pos:column="17"/></name></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <name><name pos:line="11" pos:column="20">sasldata<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">-&gt;<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="30">sockdata<pos:position pos:line="11" pos:column="38"/></name></name></expr>;<pos:position pos:line="11" pos:column="39"/></expr_stmt>

  <comment type="block" pos:line="13" pos:column="3">/* encode data, if necessary */</comment>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><operator pos:line="14" pos:column="7">*<pos:position pos:line="14" pos:column="8"/></operator><name><name pos:line="14" pos:column="8">sasldata<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">ssf<pos:position pos:line="14" pos:column="21"/></name></name></expr>)<pos:position pos:line="14" pos:column="22"/></condition><then pos:line="14" pos:column="22">
  <block pos:line="15" pos:column="3">{
    <comment type="block" pos:line="16" pos:column="5">/* handle data larger than MAXOUTBUF */</comment>
    <do pos:line="17" pos:column="5">do
    <block pos:line="18" pos:column="5">{
      <expr_stmt><expr><name pos:line="19" pos:column="7">olen<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <ternary><condition><expr><operator pos:line="19" pos:column="14">(<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">len<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">&gt;<pos:position pos:line="19" pos:column="23"/></operator> <operator pos:line="19" pos:column="21">*<pos:position pos:line="19" pos:column="22"/></operator><name><name pos:line="19" pos:column="22">sasldata<pos:position pos:line="19" pos:column="30"/></name><operator pos:line="19" pos:column="30">-&gt;<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="32">pbufsize<pos:position pos:line="19" pos:column="40"/></name></name><operator pos:line="19" pos:column="40">)<pos:position pos:line="19" pos:column="41"/></operator></expr> ?<pos:position pos:line="19" pos:column="43"/></condition><then pos:line="19" pos:column="43"> <expr><operator pos:line="19" pos:column="44">*<pos:position pos:line="19" pos:column="45"/></operator><name><name pos:line="19" pos:column="45">sasldata<pos:position pos:line="19" pos:column="53"/></name><operator pos:line="19" pos:column="53">-&gt;<pos:position pos:line="19" pos:column="58"/></operator><name pos:line="19" pos:column="55">pbufsize<pos:position pos:line="19" pos:column="63"/></name></name></expr> <pos:position pos:line="19" pos:column="64"/></then><else pos:line="19" pos:column="64">: <expr><name pos:line="19" pos:column="66">len<pos:position pos:line="19" pos:column="69"/></name></expr></else></ternary></expr>;<pos:position pos:line="19" pos:column="70"/></expr_stmt>

      <expr_stmt><expr><name pos:line="21" pos:column="7">rc<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator> <call><name pos:line="21" pos:column="12">sasl_encode<pos:position pos:line="21" pos:column="23"/></name> <argument_list pos:line="21" pos:column="24">(<argument><expr><name><name pos:line="21" pos:column="25">sasldata<pos:position pos:line="21" pos:column="33"/></name><operator pos:line="21" pos:column="33">-&gt;<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="35">saslconn<pos:position pos:line="21" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="45">buf<pos:position pos:line="21" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="50">olen<pos:position pos:line="21" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="56">&amp;<pos:position pos:line="21" pos:column="61"/></operator><name pos:line="21" pos:column="57">pbuf<pos:position pos:line="21" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="63">&amp;<pos:position pos:line="21" pos:column="68"/></operator><name pos:line="21" pos:column="64">plen<pos:position pos:line="21" pos:column="68"/></name></expr></argument>)<pos:position pos:line="21" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="70"/></expr_stmt>
      <if pos:line="22" pos:column="7">if <condition pos:line="22" pos:column="10">(<expr><name pos:line="22" pos:column="11">rc<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">!=<pos:position pos:line="22" pos:column="16"/></operator> <name pos:line="22" pos:column="17">SASL_OK<pos:position pos:line="22" pos:column="24"/></name></expr>)<pos:position pos:line="22" pos:column="25"/></condition><then pos:line="22" pos:column="25">
      <block pos:line="23" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">dprint<pos:position pos:line="24" pos:column="15"/></name> <argument_list pos:line="24" pos:column="16">(<argument><expr><literal type="number" pos:line="24" pos:column="17">1<pos:position pos:line="24" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="24" pos:column="20">(<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="21">debugfile<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">,<pos:position pos:line="24" pos:column="31"/></operator> <literal type="string" pos:line="24" pos:column="32">"SASL encoding failed: %s\n"<pos:position pos:line="24" pos:column="60"/></literal><operator pos:line="24" pos:column="60">,<pos:position pos:line="24" pos:column="61"/></operator>
          <call><name pos:line="25" pos:column="11">sasl_errstring<pos:position pos:line="25" pos:column="25"/></name> <argument_list pos:line="25" pos:column="26">(<argument><expr><name pos:line="25" pos:column="27">rc<pos:position pos:line="25" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="31">NULL<pos:position pos:line="25" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="37">NULL<pos:position pos:line="25" pos:column="41"/></name></expr></argument>)<pos:position pos:line="25" pos:column="42"/></argument_list></call><operator pos:line="25" pos:column="42">)<pos:position pos:line="25" pos:column="43"/></operator></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt>
	<goto pos:line="26" pos:column="9">goto <name pos:line="26" pos:column="14">fail<pos:position pos:line="26" pos:column="18"/></name>;<pos:position pos:line="26" pos:column="19"/></goto>
      }<pos:position pos:line="27" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="29" pos:column="7">rc<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">=<pos:position pos:line="29" pos:column="11"/></operator> <call pos:line="29" pos:column="12">(<name><name pos:line="29" pos:column="13">sasldata<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">-&gt;<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="23">msasl_write<pos:position pos:line="29" pos:column="34"/></name></name>) <argument_list pos:line="29" pos:column="36">(<argument><expr><name pos:line="29" pos:column="37">conn<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="43">pbuf<pos:position pos:line="29" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="49">plen<pos:position pos:line="29" pos:column="53"/></name></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="55"/></expr_stmt>
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><name pos:line="30" pos:column="11">rc<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">!=<pos:position pos:line="30" pos:column="16"/></operator> <name pos:line="30" pos:column="17">plen<pos:position pos:line="30" pos:column="21"/></name></expr>)<pos:position pos:line="30" pos:column="22"/></condition><then pos:line="30" pos:column="22">
	<block type="pseudo"><goto pos:line="31" pos:column="9">goto <name pos:line="31" pos:column="14">fail<pos:position pos:line="31" pos:column="18"/></name>;<pos:position pos:line="31" pos:column="19"/></goto></block></then></if>

      <expr_stmt><expr><name pos:line="33" pos:column="7">len<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">-=<pos:position pos:line="33" pos:column="13"/></operator> <name pos:line="33" pos:column="14">olen<pos:position pos:line="33" pos:column="18"/></name></expr>;<pos:position pos:line="33" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><name pos:line="34" pos:column="7">buf<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">+=<pos:position pos:line="34" pos:column="13"/></operator> <name pos:line="34" pos:column="14">olen<pos:position pos:line="34" pos:column="18"/></name></expr>;<pos:position pos:line="34" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block>
    while <condition pos:line="36" pos:column="11">(<expr><name pos:line="36" pos:column="12">len<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">&gt;<pos:position pos:line="36" pos:column="20"/></operator> <operator pos:line="36" pos:column="18">*<pos:position pos:line="36" pos:column="19"/></operator><name><name pos:line="36" pos:column="19">sasldata<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">-&gt;<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="29">pbufsize<pos:position pos:line="36" pos:column="37"/></name></name></expr>)<pos:position pos:line="36" pos:column="38"/></condition>;<pos:position pos:line="36" pos:column="39"/></do>
  }<pos:position pos:line="37" pos:column="4"/></block></then>
  <else pos:line="38" pos:column="3">else
  <comment type="block" pos:line="39" pos:column="3">/* just write using the underlying socket function */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="5">rc<pos:position pos:line="40" pos:column="7"/></name> <operator pos:line="40" pos:column="8">=<pos:position pos:line="40" pos:column="9"/></operator> <call pos:line="40" pos:column="10">(<name><name pos:line="40" pos:column="11">sasldata<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">-&gt;<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="21">msasl_write<pos:position pos:line="40" pos:column="32"/></name></name>) <argument_list pos:line="40" pos:column="34">(<argument><expr><name pos:line="40" pos:column="35">conn<pos:position pos:line="40" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="41">buf<pos:position pos:line="40" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="46">len<pos:position pos:line="40" pos:column="49"/></name></expr></argument>)<pos:position pos:line="40" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="51"/></expr_stmt></block></else></if>
  
  <expr_stmt><expr><name><name pos:line="42" pos:column="3">conn<pos:position pos:line="42" pos:column="7"/></name><operator pos:line="42" pos:column="7">-&gt;<pos:position pos:line="42" pos:column="12"/></operator><name pos:line="42" pos:column="9">sockdata<pos:position pos:line="42" pos:column="17"/></name></name> <operator pos:line="42" pos:column="18">=<pos:position pos:line="42" pos:column="19"/></operator> <name pos:line="42" pos:column="20">sasldata<pos:position pos:line="42" pos:column="28"/></name></expr>;<pos:position pos:line="42" pos:column="29"/></expr_stmt>

  <return pos:line="44" pos:column="3">return <expr><name pos:line="44" pos:column="10">rc<pos:position pos:line="44" pos:column="12"/></name></expr>;<pos:position pos:line="44" pos:column="13"/></return>

 <label><name pos:line="46" pos:column="2">fail<pos:position pos:line="46" pos:column="6"/></name>:<pos:position pos:line="46" pos:column="7"/></label>
  <expr_stmt><expr><name><name pos:line="47" pos:column="3">conn<pos:position pos:line="47" pos:column="7"/></name><operator pos:line="47" pos:column="7">-&gt;<pos:position pos:line="47" pos:column="12"/></operator><name pos:line="47" pos:column="9">sockdata<pos:position pos:line="47" pos:column="17"/></name></name> <operator pos:line="47" pos:column="18">=<pos:position pos:line="47" pos:column="19"/></operator> <name pos:line="47" pos:column="20">sasldata<pos:position pos:line="47" pos:column="28"/></name></expr>;<pos:position pos:line="47" pos:column="29"/></expr_stmt>
  <return pos:line="48" pos:column="3">return <expr><operator pos:line="48" pos:column="10">-<pos:position pos:line="48" pos:column="11"/></operator><literal type="number" pos:line="48" pos:column="11">1<pos:position pos:line="48" pos:column="12"/></literal></expr>;<pos:position pos:line="48" pos:column="13"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

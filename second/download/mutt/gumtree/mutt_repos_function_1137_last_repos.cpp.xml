<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1137_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">print_fastmap<pos:position pos:line="2" pos:column="14"/></name> <argument_list pos:line="2" pos:column="15">(<argument><expr><name pos:line="2" pos:column="16">fastmap<pos:position pos:line="2" pos:column="23"/></name></expr></argument>)<pos:position pos:line="2" pos:column="24"/></argument_list>
    <name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier><name pos:line="3" pos:column="11">fastmap<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">unsigned<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">was_a_range<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><literal type="number" pos:line="5" pos:column="26">0<pos:position pos:line="5" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">i<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>

  <while pos:line="8" pos:column="3">while <condition pos:line="8" pos:column="9">(<expr><name pos:line="8" pos:column="10">i<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">&lt;<pos:position pos:line="8" pos:column="16"/></operator> <operator pos:line="8" pos:column="14">(<pos:position pos:line="8" pos:column="15"/></operator><literal type="number" pos:line="8" pos:column="15">1<pos:position pos:line="8" pos:column="16"/></literal> <operator pos:line="8" pos:column="17">&lt;&lt;<pos:position pos:line="8" pos:column="25"/></operator> <name pos:line="8" pos:column="20">BYTEWIDTH<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">)<pos:position pos:line="8" pos:column="30"/></operator></expr>)<pos:position pos:line="8" pos:column="31"/></condition>
    <block pos:line="9" pos:column="5">{
      <if pos:line="10" pos:column="7">if <condition pos:line="10" pos:column="10">(<expr><name><name pos:line="10" pos:column="11">fastmap<pos:position pos:line="10" pos:column="18"/></name><index pos:line="10" pos:column="18">[<expr><name pos:line="10" pos:column="19">i<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">++<pos:position pos:line="10" pos:column="22"/></operator></expr>]<pos:position pos:line="10" pos:column="23"/></index></name></expr>)<pos:position pos:line="10" pos:column="24"/></condition><then pos:line="10" pos:column="24">
	<block pos:line="11" pos:column="9">{
	  <expr_stmt><expr><name pos:line="12" pos:column="11">was_a_range<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">=<pos:position pos:line="12" pos:column="24"/></operator> <literal type="number" pos:line="12" pos:column="25">0<pos:position pos:line="12" pos:column="26"/></literal></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="13" pos:column="11">putchar<pos:position pos:line="13" pos:column="18"/></name> <argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">i<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">-<pos:position pos:line="13" pos:column="23"/></operator> <literal type="number" pos:line="13" pos:column="24">1<pos:position pos:line="13" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>
          <while pos:line="14" pos:column="11">while <condition pos:line="14" pos:column="17">(<expr><name pos:line="14" pos:column="18">i<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">&lt;<pos:position pos:line="14" pos:column="24"/></operator> <operator pos:line="14" pos:column="22">(<pos:position pos:line="14" pos:column="23"/></operator><literal type="number" pos:line="14" pos:column="23">1<pos:position pos:line="14" pos:column="24"/></literal> <operator pos:line="14" pos:column="25">&lt;&lt;<pos:position pos:line="14" pos:column="33"/></operator> <name pos:line="14" pos:column="28">BYTEWIDTH<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">)<pos:position pos:line="14" pos:column="38"/></operator>  <operator pos:line="14" pos:column="40">&amp;&amp;<pos:position pos:line="14" pos:column="50"/></operator>  <name><name pos:line="14" pos:column="44">fastmap<pos:position pos:line="14" pos:column="51"/></name><index pos:line="14" pos:column="51">[<expr><name pos:line="14" pos:column="52">i<pos:position pos:line="14" pos:column="53"/></name></expr>]<pos:position pos:line="14" pos:column="54"/></index></name></expr>)<pos:position pos:line="14" pos:column="55"/></condition>
            <block pos:line="15" pos:column="13">{
              <expr_stmt><expr><name pos:line="16" pos:column="15">was_a_range<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">=<pos:position pos:line="16" pos:column="28"/></operator> <literal type="number" pos:line="16" pos:column="29">1<pos:position pos:line="16" pos:column="30"/></literal></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt>
              <expr_stmt><expr><name pos:line="17" pos:column="15">i<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">++<pos:position pos:line="17" pos:column="18"/></operator></expr>;<pos:position pos:line="17" pos:column="19"/></expr_stmt>
            }<pos:position pos:line="18" pos:column="14"/></block></while>
	  <if pos:line="19" pos:column="11">if <condition pos:line="19" pos:column="14">(<expr><name pos:line="19" pos:column="15">was_a_range<pos:position pos:line="19" pos:column="26"/></name></expr>)<pos:position pos:line="19" pos:column="27"/></condition><then pos:line="19" pos:column="27">
            <block pos:line="20" pos:column="13">{
              <expr_stmt><expr><call><name pos:line="21" pos:column="15">printf<pos:position pos:line="21" pos:column="21"/></name> <argument_list pos:line="21" pos:column="22">(<argument><expr><literal type="string" pos:line="21" pos:column="23">"-"<pos:position pos:line="21" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="22" pos:column="15">putchar<pos:position pos:line="22" pos:column="22"/></name> <argument_list pos:line="22" pos:column="23">(<argument><expr><name pos:line="22" pos:column="24">i<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">-<pos:position pos:line="22" pos:column="27"/></operator> <literal type="number" pos:line="22" pos:column="28">1<pos:position pos:line="22" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="23" pos:column="14"/></block></then></if>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>
    }<pos:position pos:line="25" pos:column="6"/></block></while>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">putchar<pos:position pos:line="26" pos:column="10"/></name> <argument_list pos:line="26" pos:column="11">(<argument><expr><literal type="char" pos:line="26" pos:column="12">'\n'<pos:position pos:line="26" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="18"/></expr_stmt>
}<pos:position pos:line="27" pos:column="2"/></block></unit>

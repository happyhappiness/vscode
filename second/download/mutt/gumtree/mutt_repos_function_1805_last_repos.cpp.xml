<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1805_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_getvaluebyname<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">name<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name><name pos:line="1" pos:column="50">struct<pos:position pos:line="1" pos:column="56"/></name> <name pos:line="1" pos:column="57">mapping_t<pos:position pos:line="1" pos:column="66"/></name></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">map<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>

  <for pos:line="5" pos:column="3">for <control pos:line="5" pos:column="7">(<init><expr><name pos:line="5" pos:column="8">i<pos:position pos:line="5" pos:column="9"/></name> <operator pos:line="5" pos:column="10">=<pos:position pos:line="5" pos:column="11"/></operator> <literal type="number" pos:line="5" pos:column="12">0<pos:position pos:line="5" pos:column="13"/></literal></expr>;<pos:position pos:line="5" pos:column="14"/></init> <condition><expr><name><name pos:line="5" pos:column="15">map<pos:position pos:line="5" pos:column="18"/></name><index pos:line="5" pos:column="18">[<expr><name pos:line="5" pos:column="19">i<pos:position pos:line="5" pos:column="20"/></name></expr>]<pos:position pos:line="5" pos:column="21"/></index></name><operator pos:line="5" pos:column="21">.<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="22">name<pos:position pos:line="5" pos:column="26"/></name></expr>;<pos:position pos:line="5" pos:column="27"/></condition> <incr><expr><name pos:line="5" pos:column="28">i<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">++<pos:position pos:line="5" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="32"/></control>
    <block type="pseudo"><if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">ascii_strcasecmp<pos:position pos:line="6" pos:column="25"/></name> <argument_list pos:line="6" pos:column="26">(<argument><expr><name><name pos:line="6" pos:column="27">map<pos:position pos:line="6" pos:column="30"/></name><index pos:line="6" pos:column="30">[<expr><name pos:line="6" pos:column="31">i<pos:position pos:line="6" pos:column="32"/></name></expr>]<pos:position pos:line="6" pos:column="33"/></index></name><operator pos:line="6" pos:column="33">.<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="34">name<pos:position pos:line="6" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="40">name<pos:position pos:line="6" pos:column="44"/></name></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call> <operator pos:line="6" pos:column="46">==<pos:position pos:line="6" pos:column="48"/></operator> <literal type="number" pos:line="6" pos:column="49">0<pos:position pos:line="6" pos:column="50"/></literal></expr>)<pos:position pos:line="6" pos:column="51"/></condition><then pos:line="6" pos:column="51">
      <block type="pseudo"><return pos:line="7" pos:column="7">return <expr><operator pos:line="7" pos:column="14">(<pos:position pos:line="7" pos:column="15"/></operator><name><name pos:line="7" pos:column="15">map<pos:position pos:line="7" pos:column="18"/></name><index pos:line="7" pos:column="18">[<expr><name pos:line="7" pos:column="19">i<pos:position pos:line="7" pos:column="20"/></name></expr>]<pos:position pos:line="7" pos:column="21"/></index></name><operator pos:line="7" pos:column="21">.<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">value<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">)<pos:position pos:line="7" pos:column="28"/></operator></expr>;<pos:position pos:line="7" pos:column="29"/></return></block></then></if></block></for>
  <return pos:line="8" pos:column="3">return <expr><operator pos:line="8" pos:column="10">(<pos:position pos:line="8" pos:column="11"/></operator><operator pos:line="8" pos:column="11">-<pos:position pos:line="8" pos:column="12"/></operator><literal type="number" pos:line="8" pos:column="12">1<pos:position pos:line="8" pos:column="13"/></literal><operator pos:line="8" pos:column="13">)<pos:position pos:line="8" pos:column="14"/></operator></expr>;<pos:position pos:line="8" pos:column="15"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_278_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_allow_interrupt<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">disposition<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">sigaction<pos:position pos:line="3" pos:column="19"/></name></name></type> <name pos:line="3" pos:column="20">sa<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">memset<pos:position pos:line="5" pos:column="9"/></name> <argument_list pos:line="5" pos:column="10">(<argument><expr><operator pos:line="5" pos:column="11">&amp;<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="12">sa<pos:position pos:line="5" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="19">sizeof <name pos:line="5" pos:column="26">sa<pos:position pos:line="5" pos:column="28"/></name></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="6" pos:column="3">sa<pos:position pos:line="6" pos:column="5"/></name><operator pos:line="6" pos:column="5">.<pos:position pos:line="6" pos:column="6"/></operator><name pos:line="6" pos:column="6">sa_handler<pos:position pos:line="6" pos:column="16"/></name></name> <operator pos:line="6" pos:column="17">=<pos:position pos:line="6" pos:column="18"/></operator> <name pos:line="6" pos:column="19">sighandler<pos:position pos:line="6" pos:column="29"/></name></expr>;<pos:position pos:line="6" pos:column="30"/></expr_stmt>
<cpp:ifdef pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">ifdef<pos:position pos:line="7" pos:column="7"/></cpp:directive> <name pos:line="7" pos:column="8">SA_RESTART<pos:position pos:line="7" pos:column="18"/></name></cpp:ifdef>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">disposition<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">==<pos:position pos:line="8" pos:column="21"/></operator> <literal type="number" pos:line="8" pos:column="22">0<pos:position pos:line="8" pos:column="23"/></literal></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="9" pos:column="5">sa<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">.<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">sa_flags<pos:position pos:line="9" pos:column="16"/></name></name> <operator pos:line="9" pos:column="17">|=<pos:position pos:line="9" pos:column="19"/></operator> <name pos:line="9" pos:column="20">SA_RESTART<pos:position pos:line="9" pos:column="30"/></name></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt></block></then></if>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">sigaction<pos:position pos:line="11" pos:column="12"/></name> <argument_list pos:line="11" pos:column="13">(<argument><expr><name pos:line="11" pos:column="14">SIGINT<pos:position pos:line="11" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="22">&amp;<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="23">sa<pos:position pos:line="11" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="27">NULL<pos:position pos:line="11" pos:column="31"/></name></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

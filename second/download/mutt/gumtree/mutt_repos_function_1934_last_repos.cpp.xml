<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1934_last_repos.cpp" pos:tabs="8"><function_decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">guess_category_value<pos:position pos:line="3" pos:column="21"/></name> <parameter_list pos:line="3" pos:column="22">(<parameter><decl><type><name pos:line="3" pos:column="23">category<pos:position pos:line="3" pos:column="31"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="33">categoryname<pos:position pos:line="3" pos:column="45"/></name></type></decl></parameter>)<pos:position pos:line="3" pos:column="46"/></parameter_list>
     <decl_stmt><decl><type><name pos:line="4" pos:column="6">int<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">category<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="5" pos:column="6">const<pos:position pos:line="5" pos:column="11"/></specifier> <name pos:line="5" pos:column="12">char<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">categoryname<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">language<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">retval<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* The highest priority value is the `LANGUAGE' environment
     variable.  But we don't use the value if the currently selected
     locale is the C locale.  This is a GNU extension.  */</comment>
  <expr_stmt><expr><name pos:line="13" pos:column="3">language<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">getenv<pos:position pos:line="13" pos:column="20"/></name> <argument_list pos:line="13" pos:column="21">(<argument><expr><literal type="string" pos:line="13" pos:column="22">"LANGUAGE"<pos:position pos:line="13" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">language<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">!=<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">NULL<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">&amp;&amp;<pos:position pos:line="14" pos:column="34"/></operator> <name><name pos:line="14" pos:column="27">language<pos:position pos:line="14" pos:column="35"/></name><index pos:line="14" pos:column="35">[<expr><literal type="number" pos:line="14" pos:column="36">0<pos:position pos:line="14" pos:column="37"/></literal></expr>]<pos:position pos:line="14" pos:column="38"/></index></name> <operator pos:line="14" pos:column="39">==<pos:position pos:line="14" pos:column="41"/></operator> <literal type="char" pos:line="14" pos:column="42">'\0'<pos:position pos:line="14" pos:column="46"/></literal></expr>)<pos:position pos:line="14" pos:column="47"/></condition><then pos:line="14" pos:column="47">
    <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="5">language<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <name pos:line="15" pos:column="16">NULL<pos:position pos:line="15" pos:column="20"/></name></expr>;<pos:position pos:line="15" pos:column="21"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="17" pos:column="3">/* We have to proceed with the POSIX methods of looking to `LC_ALL',
     `LC_xxx', and `LANG'.  On some systems this can be done by the
     `setlocale' function itself.  */</comment>
<cpp:if pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">if<pos:position pos:line="20" pos:column="4"/></cpp:directive> <expr><name pos:line="20" pos:column="5">defined<pos:position pos:line="20" pos:column="12"/></name> <name pos:line="20" pos:column="13">_LIBC<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">||<pos:position pos:line="20" pos:column="21"/></operator> <operator pos:line="20" pos:column="22">(<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="23">defined<pos:position pos:line="20" pos:column="30"/></name> <name pos:line="20" pos:column="31">HAVE_SETLOCALE<pos:position pos:line="20" pos:column="45"/></name> <operator pos:line="20" pos:column="46">&amp;&amp;<pos:position pos:line="20" pos:column="56"/></operator> <name pos:line="20" pos:column="49">defined<pos:position pos:line="20" pos:column="56"/></name> <name pos:line="20" pos:column="57">HAVE_LC_MESSAGES<pos:position pos:line="20" pos:column="73"/></name> <operator pos:line="20" pos:column="74">&amp;&amp;<pos:position pos:line="20" pos:column="84"/></operator> <name pos:line="20" pos:column="77">defined<pos:position pos:line="20" pos:column="84"/></name> <name pos:line="20" pos:column="85">HAVE_LOCALE_NULL<pos:position pos:line="20" pos:column="101"/></name><operator pos:line="20" pos:column="101">)<pos:position pos:line="20" pos:column="102"/></operator></expr></cpp:if>
  <expr_stmt><expr><name pos:line="21" pos:column="3">retval<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator> <call><name pos:line="21" pos:column="12">setlocale<pos:position pos:line="21" pos:column="21"/></name> <argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">category<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="33">NULL<pos:position pos:line="21" pos:column="37"/></name></expr></argument>)<pos:position pos:line="21" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt>
<cpp:else pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">else<pos:position pos:line="22" pos:column="6"/></cpp:directive></cpp:else>
  <comment type="block" pos:line="23" pos:column="3">/* Setting of LC_ALL overwrites all other.  */</comment>
  <expr_stmt><expr><name pos:line="24" pos:column="3">retval<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator> <call><name pos:line="24" pos:column="12">getenv<pos:position pos:line="24" pos:column="18"/></name> <argument_list pos:line="24" pos:column="19">(<argument><expr><literal type="string" pos:line="24" pos:column="20">"LC_ALL"<pos:position pos:line="24" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">retval<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">==<pos:position pos:line="25" pos:column="16"/></operator> <name pos:line="25" pos:column="17">NULL<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">||<pos:position pos:line="25" pos:column="24"/></operator> <name><name pos:line="25" pos:column="25">retval<pos:position pos:line="25" pos:column="31"/></name><index pos:line="25" pos:column="31">[<expr><literal type="number" pos:line="25" pos:column="32">0<pos:position pos:line="25" pos:column="33"/></literal></expr>]<pos:position pos:line="25" pos:column="34"/></index></name> <operator pos:line="25" pos:column="35">==<pos:position pos:line="25" pos:column="37"/></operator> <literal type="char" pos:line="25" pos:column="38">'\0'<pos:position pos:line="25" pos:column="42"/></literal></expr>)<pos:position pos:line="25" pos:column="43"/></condition><then pos:line="25" pos:column="43">
    <block pos:line="26" pos:column="5">{
      <comment type="block" pos:line="27" pos:column="7">/* Next comes the name of the desired category.  */</comment>
      <expr_stmt><expr><name pos:line="28" pos:column="7">retval<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <call><name pos:line="28" pos:column="16">getenv<pos:position pos:line="28" pos:column="22"/></name> <argument_list pos:line="28" pos:column="23">(<argument><expr><name pos:line="28" pos:column="24">categoryname<pos:position pos:line="28" pos:column="36"/></name></expr></argument>)<pos:position pos:line="28" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="38"/></expr_stmt>
      <if pos:line="29" pos:column="7">if <condition pos:line="29" pos:column="10">(<expr><name pos:line="29" pos:column="11">retval<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">==<pos:position pos:line="29" pos:column="20"/></operator> <name pos:line="29" pos:column="21">NULL<pos:position pos:line="29" pos:column="25"/></name> <operator pos:line="29" pos:column="26">||<pos:position pos:line="29" pos:column="28"/></operator> <name><name pos:line="29" pos:column="29">retval<pos:position pos:line="29" pos:column="35"/></name><index pos:line="29" pos:column="35">[<expr><literal type="number" pos:line="29" pos:column="36">0<pos:position pos:line="29" pos:column="37"/></literal></expr>]<pos:position pos:line="29" pos:column="38"/></index></name> <operator pos:line="29" pos:column="39">==<pos:position pos:line="29" pos:column="41"/></operator> <literal type="char" pos:line="29" pos:column="42">'\0'<pos:position pos:line="29" pos:column="46"/></literal></expr>)<pos:position pos:line="29" pos:column="47"/></condition><then pos:line="29" pos:column="47">
	<block pos:line="30" pos:column="9">{
	  <comment type="block" pos:line="31" pos:column="11">/* Last possibility is the LANG environment variable.  */</comment>
	  <expr_stmt><expr><name pos:line="32" pos:column="11">retval<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">=<pos:position pos:line="32" pos:column="19"/></operator> <call><name pos:line="32" pos:column="20">getenv<pos:position pos:line="32" pos:column="26"/></name> <argument_list pos:line="32" pos:column="27">(<argument><expr><literal type="string" pos:line="32" pos:column="28">"LANG"<pos:position pos:line="32" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt>
	  <if pos:line="33" pos:column="11">if <condition pos:line="33" pos:column="14">(<expr><name pos:line="33" pos:column="15">retval<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">==<pos:position pos:line="33" pos:column="24"/></operator> <name pos:line="33" pos:column="25">NULL<pos:position pos:line="33" pos:column="29"/></name> <operator pos:line="33" pos:column="30">||<pos:position pos:line="33" pos:column="32"/></operator> <name><name pos:line="33" pos:column="33">retval<pos:position pos:line="33" pos:column="39"/></name><index pos:line="33" pos:column="39">[<expr><literal type="number" pos:line="33" pos:column="40">0<pos:position pos:line="33" pos:column="41"/></literal></expr>]<pos:position pos:line="33" pos:column="42"/></index></name> <operator pos:line="33" pos:column="43">==<pos:position pos:line="33" pos:column="45"/></operator> <literal type="char" pos:line="33" pos:column="46">'\0'<pos:position pos:line="33" pos:column="50"/></literal></expr>)<pos:position pos:line="33" pos:column="51"/></condition><then pos:line="33" pos:column="51">
	    <comment type="block" pos:line="34" pos:column="13">/* We use C as the default domain.  POSIX says this is
	       implementation defined.  */</comment>
	    <block type="pseudo"><return pos:line="36" pos:column="13">return <expr><literal type="string" pos:line="36" pos:column="20">"C"<pos:position pos:line="36" pos:column="23"/></literal></expr>;<pos:position pos:line="36" pos:column="24"/></return></block></then></if>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>

  <return pos:line="41" pos:column="3">return <expr><ternary><condition><expr><name pos:line="41" pos:column="10">language<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">!=<pos:position pos:line="41" pos:column="21"/></operator> <name pos:line="41" pos:column="22">NULL<pos:position pos:line="41" pos:column="26"/></name> <operator pos:line="41" pos:column="27">&amp;&amp;<pos:position pos:line="41" pos:column="37"/></operator> <call><name pos:line="41" pos:column="30">strcmp<pos:position pos:line="41" pos:column="36"/></name> <argument_list pos:line="41" pos:column="37">(<argument><expr><name pos:line="41" pos:column="38">retval<pos:position pos:line="41" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="46">"C"<pos:position pos:line="41" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></call> <operator pos:line="41" pos:column="51">!=<pos:position pos:line="41" pos:column="53"/></operator> <literal type="number" pos:line="41" pos:column="54">0<pos:position pos:line="41" pos:column="55"/></literal></expr> ?<pos:position pos:line="41" pos:column="57"/></condition><then pos:line="41" pos:column="57"> <expr><name pos:line="41" pos:column="58">language<pos:position pos:line="41" pos:column="66"/></name></expr> <pos:position pos:line="41" pos:column="67"/></then><else pos:line="41" pos:column="67">: <expr><name pos:line="41" pos:column="69">retval<pos:position pos:line="41" pos:column="75"/></name></expr></else></ternary></expr>;<pos:position pos:line="41" pos:column="76"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function_decl></unit>

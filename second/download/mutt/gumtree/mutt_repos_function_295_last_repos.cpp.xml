<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_295_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_account_hook<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name><modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type> <name pos:line="1" pos:column="37">url<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* parsing commands with URLs in an account hook can cause a recursive
   * call. We just skip processing if this occurs. Typically such commands
   * belong in a folder-hook -- perhaps we should warn the user. */</comment>
  <decl_stmt><decl><specifier pos:line="6" pos:column="3">static<pos:position pos:line="6" pos:column="9"/></specifier> <type><name pos:line="6" pos:column="10">int<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">inhook<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><literal type="number" pos:line="6" pos:column="23">0<pos:position pos:line="6" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">HOOK<pos:position pos:line="8" pos:column="7"/></name><modifier pos:line="8" pos:column="7">*<pos:position pos:line="8" pos:column="8"/></modifier></type> <name pos:line="8" pos:column="9">hook<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">BUFFER<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">token<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">BUFFER<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">err<pos:position pos:line="10" pos:column="13"/></name></decl>;<pos:position pos:line="10" pos:column="14"/></decl_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">inhook<pos:position pos:line="12" pos:column="13"/></name></expr>)<pos:position pos:line="12" pos:column="14"/></condition><then pos:line="12" pos:column="14">
    <block type="pseudo"><return pos:line="13" pos:column="5">return;<pos:position pos:line="13" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">mutt_buffer_init<pos:position pos:line="15" pos:column="19"/></name> <argument_list pos:line="15" pos:column="20">(<argument><expr><operator pos:line="15" pos:column="21">&amp;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="22">err<pos:position pos:line="15" pos:column="25"/></name></expr></argument>)<pos:position pos:line="15" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">err<pos:position pos:line="16" pos:column="6"/></name><operator pos:line="16" pos:column="6">.<pos:position pos:line="16" pos:column="7"/></operator><name pos:line="16" pos:column="7">dsize<pos:position pos:line="16" pos:column="12"/></name></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <name pos:line="16" pos:column="15">STRING<pos:position pos:line="16" pos:column="21"/></name></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">err<pos:position pos:line="17" pos:column="6"/></name><operator pos:line="17" pos:column="6">.<pos:position pos:line="17" pos:column="7"/></operator><name pos:line="17" pos:column="7">data<pos:position pos:line="17" pos:column="11"/></name></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">safe_malloc<pos:position pos:line="17" pos:column="25"/></name> <argument_list pos:line="17" pos:column="26">(<argument><expr><name><name pos:line="17" pos:column="27">err<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">.<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="31">dsize<pos:position pos:line="17" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">mutt_buffer_init<pos:position pos:line="18" pos:column="19"/></name> <argument_list pos:line="18" pos:column="20">(<argument><expr><operator pos:line="18" pos:column="21">&amp;<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="22">token<pos:position pos:line="18" pos:column="27"/></name></expr></argument>)<pos:position pos:line="18" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>

  <for pos:line="20" pos:column="3">for <control pos:line="20" pos:column="7">(<init><expr><name pos:line="20" pos:column="8">hook<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <name pos:line="20" pos:column="15">Hooks<pos:position pos:line="20" pos:column="20"/></name></expr>;<pos:position pos:line="20" pos:column="21"/></init> <condition><expr><name pos:line="20" pos:column="22">hook<pos:position pos:line="20" pos:column="26"/></name></expr>;<pos:position pos:line="20" pos:column="27"/></condition> <incr><expr><name pos:line="20" pos:column="28">hook<pos:position pos:line="20" pos:column="32"/></name> <operator pos:line="20" pos:column="33">=<pos:position pos:line="20" pos:column="34"/></operator> <name><name pos:line="20" pos:column="35">hook<pos:position pos:line="20" pos:column="39"/></name><operator pos:line="20" pos:column="39">-&gt;<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="41">next<pos:position pos:line="20" pos:column="45"/></name></name></expr></incr>)<pos:position pos:line="20" pos:column="46"/></control>
  <block pos:line="21" pos:column="3">{
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator> <operator pos:line="22" pos:column="11">(<pos:position pos:line="22" pos:column="12"/></operator><name><name pos:line="22" pos:column="12">hook<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">-&gt;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="18">command<pos:position pos:line="22" pos:column="25"/></name></name> <operator pos:line="22" pos:column="26">&amp;&amp;<pos:position pos:line="22" pos:column="36"/></operator> <operator pos:line="22" pos:column="29">(<pos:position pos:line="22" pos:column="30"/></operator><name><name pos:line="22" pos:column="30">hook<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">-&gt;<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="36">type<pos:position pos:line="22" pos:column="40"/></name></name> <operator pos:line="22" pos:column="41">&amp;<pos:position pos:line="22" pos:column="46"/></operator> <name pos:line="22" pos:column="43">MUTT_ACCOUNTHOOK<pos:position pos:line="22" pos:column="59"/></name><operator pos:line="22" pos:column="59">)<pos:position pos:line="22" pos:column="60"/></operator><operator pos:line="22" pos:column="60">)<pos:position pos:line="22" pos:column="61"/></operator></expr>)<pos:position pos:line="22" pos:column="62"/></condition><then pos:line="22" pos:column="62">
      <block type="pseudo"><continue pos:line="23" pos:column="7">continue;<pos:position pos:line="23" pos:column="16"/></continue></block></then></if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">(<pos:position pos:line="25" pos:column="10"/></operator><call><name pos:line="25" pos:column="10">regexec<pos:position pos:line="25" pos:column="17"/></name> <argument_list pos:line="25" pos:column="18">(<argument><expr><name><name pos:line="25" pos:column="19">hook<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">-&gt;<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="25">rx<pos:position pos:line="25" pos:column="27"/></name><operator pos:line="25" pos:column="27">.<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="28">rx<pos:position pos:line="25" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="32">url<pos:position pos:line="25" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="37">0<pos:position pos:line="25" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="40">NULL<pos:position pos:line="25" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="46">0<pos:position pos:line="25" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="48"/></argument_list></call> <operator pos:line="25" pos:column="49">==<pos:position pos:line="25" pos:column="51"/></operator> <literal type="number" pos:line="25" pos:column="52">0<pos:position pos:line="25" pos:column="53"/></literal><operator pos:line="25" pos:column="53">)<pos:position pos:line="25" pos:column="54"/></operator> <operator pos:line="25" pos:column="55">^<pos:position pos:line="25" pos:column="56"/></operator> <name><name pos:line="25" pos:column="57">hook<pos:position pos:line="25" pos:column="61"/></name><operator pos:line="25" pos:column="61">-&gt;<pos:position pos:line="25" pos:column="66"/></operator><name pos:line="25" pos:column="63">rx<pos:position pos:line="25" pos:column="65"/></name><operator pos:line="25" pos:column="65">.<pos:position pos:line="25" pos:column="66"/></operator></name><operator pos:line="25" pos:column="66">not<pos:position pos:line="25" pos:column="69"/></operator></expr>)<pos:position pos:line="25" pos:column="70"/></condition><then pos:line="25" pos:column="70">
    <block pos:line="26" pos:column="5">{
      <expr_stmt><expr><name pos:line="27" pos:column="7">inhook<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <literal type="number" pos:line="27" pos:column="16">1<pos:position pos:line="27" pos:column="17"/></literal></expr>;<pos:position pos:line="27" pos:column="18"/></expr_stmt>

      <if pos:line="29" pos:column="7">if <condition pos:line="29" pos:column="10">(<expr><call><name pos:line="29" pos:column="11">mutt_parse_rc_line<pos:position pos:line="29" pos:column="29"/></name> <argument_list pos:line="29" pos:column="30">(<argument><expr><name><name pos:line="29" pos:column="31">hook<pos:position pos:line="29" pos:column="35"/></name><operator pos:line="29" pos:column="35">-&gt;<pos:position pos:line="29" pos:column="40"/></operator><name pos:line="29" pos:column="37">command<pos:position pos:line="29" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="46">&amp;<pos:position pos:line="29" pos:column="51"/></operator><name pos:line="29" pos:column="47">token<pos:position pos:line="29" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="54">&amp;<pos:position pos:line="29" pos:column="59"/></operator><name pos:line="29" pos:column="55">err<pos:position pos:line="29" pos:column="58"/></name></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></call> <operator pos:line="29" pos:column="60">==<pos:position pos:line="29" pos:column="62"/></operator> <operator pos:line="29" pos:column="63">-<pos:position pos:line="29" pos:column="64"/></operator><literal type="number" pos:line="29" pos:column="64">1<pos:position pos:line="29" pos:column="65"/></literal></expr>)<pos:position pos:line="29" pos:column="66"/></condition><then pos:line="29" pos:column="66">
      <block pos:line="30" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">FREE<pos:position pos:line="31" pos:column="13"/></name> <argument_list pos:line="31" pos:column="14">(<argument><expr><operator pos:line="31" pos:column="15">&amp;<pos:position pos:line="31" pos:column="20"/></operator><name><name pos:line="31" pos:column="16">token<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">.<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">data<pos:position pos:line="31" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="32" pos:column="9">mutt_error<pos:position pos:line="32" pos:column="19"/></name> <argument_list pos:line="32" pos:column="20">(<argument><expr><literal type="string" pos:line="32" pos:column="21">"%s"<pos:position pos:line="32" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="27">err<pos:position pos:line="32" pos:column="30"/></name><operator pos:line="32" pos:column="30">.<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="31">data<pos:position pos:line="32" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="33" pos:column="9">FREE<pos:position pos:line="33" pos:column="13"/></name> <argument_list pos:line="33" pos:column="14">(<argument><expr><operator pos:line="33" pos:column="15">&amp;<pos:position pos:line="33" pos:column="20"/></operator><name><name pos:line="33" pos:column="16">err<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">.<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="20">data<pos:position pos:line="33" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">mutt_sleep<pos:position pos:line="34" pos:column="19"/></name> <argument_list pos:line="34" pos:column="20">(<argument><expr><literal type="number" pos:line="34" pos:column="21">1<pos:position pos:line="34" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="24"/></expr_stmt>

        <expr_stmt><expr><name pos:line="36" pos:column="9">inhook<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <literal type="number" pos:line="36" pos:column="18">0<pos:position pos:line="36" pos:column="19"/></literal></expr>;<pos:position pos:line="36" pos:column="20"/></expr_stmt>
	<return pos:line="37" pos:column="9">return;<pos:position pos:line="37" pos:column="16"/></return>
      }<pos:position pos:line="38" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="40" pos:column="7">inhook<pos:position pos:line="40" pos:column="13"/></name> <operator pos:line="40" pos:column="14">=<pos:position pos:line="40" pos:column="15"/></operator> <literal type="number" pos:line="40" pos:column="16">0<pos:position pos:line="40" pos:column="17"/></literal></expr>;<pos:position pos:line="40" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>
  }<pos:position pos:line="42" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="44" pos:column="3">FREE<pos:position pos:line="44" pos:column="7"/></name> <argument_list pos:line="44" pos:column="8">(<argument><expr><operator pos:line="44" pos:column="9">&amp;<pos:position pos:line="44" pos:column="14"/></operator><name><name pos:line="44" pos:column="10">token<pos:position pos:line="44" pos:column="15"/></name><operator pos:line="44" pos:column="15">.<pos:position pos:line="44" pos:column="16"/></operator><name pos:line="44" pos:column="16">data<pos:position pos:line="44" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">FREE<pos:position pos:line="45" pos:column="7"/></name> <argument_list pos:line="45" pos:column="8">(<argument><expr><operator pos:line="45" pos:column="9">&amp;<pos:position pos:line="45" pos:column="14"/></operator><name><name pos:line="45" pos:column="10">err<pos:position pos:line="45" pos:column="13"/></name><operator pos:line="45" pos:column="13">.<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="14">data<pos:position pos:line="45" pos:column="18"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="20"/></expr_stmt>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

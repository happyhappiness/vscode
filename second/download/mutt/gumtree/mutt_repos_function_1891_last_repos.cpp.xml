<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1891_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">start_curses<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">void<pos:position pos:line="1" pos:column="31"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">km_init<pos:position pos:line="3" pos:column="10"/></name> <argument_list pos:line="3" pos:column="11">()<pos:position pos:line="3" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="14"/></expr_stmt> <comment type="block" pos:line="3" pos:column="15">/* must come before mutt_init */</comment>

<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">USE_SLANG_CURSES<pos:position pos:line="5" pos:column="24"/></name></cpp:ifdef>
  <expr_stmt><expr><name pos:line="6" pos:column="3">SLtt_Ignore_Beep<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">=<pos:position pos:line="6" pos:column="21"/></operator> <literal type="number" pos:line="6" pos:column="22">1<pos:position pos:line="6" pos:column="23"/></literal></expr>;<pos:position pos:line="6" pos:column="24"/></expr_stmt> <comment type="block" pos:line="6" pos:column="25">/* don't do that #*$@^! annoying visual beep! */</comment>
  <expr_stmt><expr><name pos:line="7" pos:column="3">SLsmg_Display_Eight_Bit<pos:position pos:line="7" pos:column="26"/></name> <operator pos:line="7" pos:column="27">=<pos:position pos:line="7" pos:column="28"/></operator> <literal type="number" pos:line="7" pos:column="29">128<pos:position pos:line="7" pos:column="32"/></literal></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt> <comment type="block" pos:line="7" pos:column="34">/* characters above this are printable */</comment>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">SLtt_set_color<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><literal type="number" pos:line="8" pos:column="18">0<pos:position pos:line="8" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="21">NULL<pos:position pos:line="8" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="27">"default"<pos:position pos:line="8" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="38">"default"<pos:position pos:line="8" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="49"/></expr_stmt>
<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><name pos:line="9" pos:column="5">SLANG_VERSION<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">&gt;=<pos:position pos:line="9" pos:column="24"/></operator> <literal type="number" pos:line="9" pos:column="22">20000<pos:position pos:line="9" pos:column="27"/></literal></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">SLutf8_enable<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">(<argument><expr><operator pos:line="10" pos:column="17">-<pos:position pos:line="10" pos:column="18"/></operator><literal type="number" pos:line="10" pos:column="18">1<pos:position pos:line="10" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:else pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">else<pos:position pos:line="12" pos:column="6"/></cpp:directive></cpp:else>
  <comment type="block" pos:line="13" pos:column="3">/* should come before initscr() so that ncurses 4.2 doesn't try to install
     its own SIGWINCH handler */</comment>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">mutt_signal_init<pos:position pos:line="15" pos:column="19"/></name> <argument_list pos:line="15" pos:column="20">()<pos:position pos:line="15" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><call><name pos:line="17" pos:column="7">initscr<pos:position pos:line="17" pos:column="14"/></name> <argument_list pos:line="17" pos:column="15">()<pos:position pos:line="17" pos:column="17"/></argument_list></call> <operator pos:line="17" pos:column="18">==<pos:position pos:line="17" pos:column="20"/></operator> <name pos:line="17" pos:column="21">NULL<pos:position pos:line="17" pos:column="25"/></name></expr>)<pos:position pos:line="17" pos:column="26"/></condition><then pos:line="17" pos:column="26">
  <block pos:line="18" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">puts<pos:position pos:line="19" pos:column="9"/></name></type> <name pos:line="19" pos:column="10">_<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><literal type="string" pos:line="19" pos:column="12">"Error initializing terminal."<pos:position pos:line="19" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="43"/></argument_list></decl>;<pos:position pos:line="19" pos:column="44"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">exit<pos:position pos:line="20" pos:column="9"/></name> <argument_list pos:line="20" pos:column="10">(<argument><expr><literal type="number" pos:line="20" pos:column="11">1<pos:position pos:line="20" pos:column="12"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="14"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>
<cpp:if pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">if<pos:position pos:line="22" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="22" pos:column="5">1<pos:position pos:line="22" pos:column="6"/></literal></expr></cpp:if> <comment type="block" pos:line="22" pos:column="7">/* USE_SLANG_CURSES  - commenting out suggested in #455. */</comment>
  <comment type="block" pos:line="23" pos:column="3">/* slang requires the signal handlers to be set after initializing */</comment>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">mutt_signal_init<pos:position pos:line="24" pos:column="19"/></name> <argument_list pos:line="24" pos:column="20">()<pos:position pos:line="24" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="23"/></expr_stmt>
<cpp:endif pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">endif<pos:position pos:line="25" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">ci_start_color<pos:position pos:line="26" pos:column="17"/></name> <argument_list pos:line="26" pos:column="18">()<pos:position pos:line="26" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">keypad<pos:position pos:line="27" pos:column="9"/></name> <argument_list pos:line="27" pos:column="10">(<argument><expr><name pos:line="27" pos:column="11">stdscr<pos:position pos:line="27" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="19">TRUE<pos:position pos:line="27" pos:column="23"/></name></expr></argument>)<pos:position pos:line="27" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">cbreak<pos:position pos:line="28" pos:column="9"/></name> <argument_list pos:line="28" pos:column="10">()<pos:position pos:line="28" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">noecho<pos:position pos:line="29" pos:column="9"/></name> <argument_list pos:line="29" pos:column="10">()<pos:position pos:line="29" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="13"/></expr_stmt>
<cpp:if pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">if<pos:position pos:line="30" pos:column="4"/></cpp:directive> <expr><name pos:line="30" pos:column="5">HAVE_TYPEAHEAD<pos:position pos:line="30" pos:column="19"/></name></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">typeahead<pos:position pos:line="31" pos:column="12"/></name> <argument_list pos:line="31" pos:column="13">(<argument><expr><operator pos:line="31" pos:column="14">-<pos:position pos:line="31" pos:column="15"/></operator><literal type="number" pos:line="31" pos:column="15">1<pos:position pos:line="31" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="18"/></expr_stmt>       <comment type="block" pos:line="31" pos:column="25">/* simulate smooth scrolling */</comment>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">if<pos:position pos:line="33" pos:column="4"/></cpp:directive> <expr><name pos:line="33" pos:column="5">HAVE_META<pos:position pos:line="33" pos:column="14"/></name></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">meta<pos:position pos:line="34" pos:column="7"/></name> <argument_list pos:line="34" pos:column="8">(<argument><expr><name pos:line="34" pos:column="9">stdscr<pos:position pos:line="34" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="17">TRUE<pos:position pos:line="34" pos:column="21"/></name></expr></argument>)<pos:position pos:line="34" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="23"/></expr_stmt>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif>
<expr_stmt><expr><call><name pos:line="36" pos:column="1">init_extended_keys<pos:position pos:line="36" pos:column="19"/></name><argument_list pos:line="36" pos:column="19">()<pos:position pos:line="36" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">mutt_reflow_windows<pos:position pos:line="37" pos:column="22"/></name> <argument_list pos:line="37" pos:column="23">()<pos:position pos:line="37" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="26"/></expr_stmt>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1962_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">unsigned<pos:position pos:line="1" pos:column="23"/></name> <name pos:line="1" pos:column="24">long<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">int<pos:position pos:line="1" pos:column="32"/></name></type>
<name pos:line="2" pos:column="1">hash_string<pos:position pos:line="2" pos:column="12"/></name> <argument_list pos:line="2" pos:column="13">(<argument><expr><name pos:line="2" pos:column="14">str_param<pos:position pos:line="2" pos:column="23"/></name></expr></argument>)<pos:position pos:line="2" pos:column="24"/></argument_list>
     const <name pos:line="3" pos:column="12">char<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier><name pos:line="3" pos:column="18">str_param<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">unsigned<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">long<pos:position pos:line="5" pos:column="16"/></name> <name pos:line="5" pos:column="17">int<pos:position pos:line="5" pos:column="20"/></name></type> <name pos:line="5" pos:column="21">hval<pos:position pos:line="5" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="27">g<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">str<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">str_param<pos:position pos:line="6" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* Compute the hash value for the given string.  */</comment>
  <expr_stmt><expr><name pos:line="9" pos:column="3">hval<pos:position pos:line="9" pos:column="7"/></name> <operator pos:line="9" pos:column="8">=<pos:position pos:line="9" pos:column="9"/></operator> <literal type="number" pos:line="9" pos:column="10">0<pos:position pos:line="9" pos:column="11"/></literal></expr>;<pos:position pos:line="9" pos:column="12"/></expr_stmt>
  <while pos:line="10" pos:column="3">while <condition pos:line="10" pos:column="9">(<expr><operator pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">str<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">!=<pos:position pos:line="10" pos:column="17"/></operator> <literal type="char" pos:line="10" pos:column="18">'\0'<pos:position pos:line="10" pos:column="22"/></literal></expr>)<pos:position pos:line="10" pos:column="23"/></condition>
    <block pos:line="11" pos:column="5">{
      <expr_stmt><expr><name pos:line="12" pos:column="7">hval<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">&lt;&lt;=<pos:position pos:line="12" pos:column="21"/></operator> <literal type="number" pos:line="12" pos:column="16">4<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name pos:line="13" pos:column="7">hval<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">+=<pos:position pos:line="13" pos:column="14"/></operator> <operator pos:line="13" pos:column="15">(<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="16">unsigned<pos:position pos:line="13" pos:column="24"/></name> <name pos:line="13" pos:column="25">long<pos:position pos:line="13" pos:column="29"/></name> <name pos:line="13" pos:column="30">int<pos:position pos:line="13" pos:column="33"/></name><operator pos:line="13" pos:column="33">)<pos:position pos:line="13" pos:column="34"/></operator> <operator pos:line="13" pos:column="35">*<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="36">str<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">++<pos:position pos:line="13" pos:column="41"/></operator></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name pos:line="14" pos:column="7">g<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">=<pos:position pos:line="14" pos:column="10"/></operator> <name pos:line="14" pos:column="11">hval<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">&amp;<pos:position pos:line="14" pos:column="21"/></operator> <operator pos:line="14" pos:column="18">(<pos:position pos:line="14" pos:column="19"/></operator><operator pos:line="14" pos:column="19">(<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="20">unsigned<pos:position pos:line="14" pos:column="28"/></name> <name pos:line="14" pos:column="29">long<pos:position pos:line="14" pos:column="33"/></name> <name pos:line="14" pos:column="34">int<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">)<pos:position pos:line="14" pos:column="38"/></operator> <literal type="number" pos:line="14" pos:column="39">0xf<pos:position pos:line="14" pos:column="42"/></literal> <operator pos:line="14" pos:column="43">&lt;&lt;<pos:position pos:line="14" pos:column="51"/></operator> <operator pos:line="14" pos:column="46">(<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="47">HASHWORDBITS<pos:position pos:line="14" pos:column="59"/></name> <operator pos:line="14" pos:column="60">-<pos:position pos:line="14" pos:column="61"/></operator> <literal type="number" pos:line="14" pos:column="62">4<pos:position pos:line="14" pos:column="63"/></literal><operator pos:line="14" pos:column="63">)<pos:position pos:line="14" pos:column="64"/></operator><operator pos:line="14" pos:column="64">)<pos:position pos:line="14" pos:column="65"/></operator></expr>;<pos:position pos:line="14" pos:column="66"/></expr_stmt>
      <if pos:line="15" pos:column="7">if <condition pos:line="15" pos:column="10">(<expr><name pos:line="15" pos:column="11">g<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">!=<pos:position pos:line="15" pos:column="15"/></operator> <literal type="number" pos:line="15" pos:column="16">0<pos:position pos:line="15" pos:column="17"/></literal></expr>)<pos:position pos:line="15" pos:column="18"/></condition><then pos:line="15" pos:column="18">
	<block pos:line="16" pos:column="9">{
	  <expr_stmt><expr><name pos:line="17" pos:column="11">hval<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">^=<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">g<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">&gt;&gt;<pos:position pos:line="17" pos:column="26"/></operator> <operator pos:line="17" pos:column="24">(<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">HASHWORDBITS<pos:position pos:line="17" pos:column="37"/></name> <operator pos:line="17" pos:column="38">-<pos:position pos:line="17" pos:column="39"/></operator> <literal type="number" pos:line="17" pos:column="40">8<pos:position pos:line="17" pos:column="41"/></literal><operator pos:line="17" pos:column="41">)<pos:position pos:line="17" pos:column="42"/></operator></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="18" pos:column="11">hval<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">^=<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="19">g<pos:position pos:line="18" pos:column="20"/></name></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>
    }<pos:position pos:line="20" pos:column="6"/></block></while>
  <return pos:line="21" pos:column="3">return <expr><name pos:line="21" pos:column="10">hval<pos:position pos:line="21" pos:column="14"/></name></expr>;<pos:position pos:line="21" pos:column="15"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></unit>

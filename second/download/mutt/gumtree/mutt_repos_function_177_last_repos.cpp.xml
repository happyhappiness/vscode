<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_177_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mutt_mkwrapdir<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">path<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">newfile<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">size_t<pos:position pos:line="1" pos:column="67"/></name></type> <name pos:line="1" pos:column="68">nflen<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>, 
		    <parameter><decl><type><name pos:line="2" pos:column="21">char<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">newdir<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">size_t<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">ndlen<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">basename<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">parent<pos:position pos:line="5" pos:column="14"/></name><index pos:line="5" pos:column="14">[<expr><name pos:line="5" pos:column="15">_POSIX_PATH_MAX<pos:position pos:line="5" pos:column="30"/></name></expr>]<pos:position pos:line="5" pos:column="31"/></index></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">p<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">strfcpy<pos:position pos:line="8" pos:column="10"/></name> <argument_list pos:line="8" pos:column="11">(<argument><expr><name pos:line="8" pos:column="12">parent<pos:position pos:line="8" pos:column="18"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="20">NONULL<pos:position pos:line="8" pos:column="26"/></name> <argument_list pos:line="8" pos:column="27">(<argument><expr><name pos:line="8" pos:column="28">path<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="35">sizeof <argument_list pos:line="8" pos:column="42">(<argument><expr><name pos:line="8" pos:column="43">parent<pos:position pos:line="8" pos:column="49"/></name></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="52"/></expr_stmt>
  
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">(<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">p<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <call><name pos:line="10" pos:column="12">strrchr<pos:position pos:line="10" pos:column="19"/></name> <argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">parent<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="10" pos:column="29">'/'<pos:position pos:line="10" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call><operator pos:line="10" pos:column="33">)<pos:position pos:line="10" pos:column="34"/></operator></expr>)<pos:position pos:line="10" pos:column="35"/></condition><then pos:line="10" pos:column="35">
  <block pos:line="11" pos:column="3">{
    <expr_stmt><expr><operator pos:line="12" pos:column="5">*<pos:position pos:line="12" pos:column="6"/></operator><name pos:line="12" pos:column="6">p<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <literal type="char" pos:line="12" pos:column="10">'\0'<pos:position pos:line="12" pos:column="14"/></literal></expr>;<pos:position pos:line="12" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">basename<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <name pos:line="13" pos:column="16">p<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">+<pos:position pos:line="13" pos:column="19"/></operator> <literal type="number" pos:line="13" pos:column="20">1<pos:position pos:line="13" pos:column="21"/></literal></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></then>
  <else pos:line="15" pos:column="3">else
  <block pos:line="16" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">strfcpy<pos:position pos:line="17" pos:column="12"/></name> <argument_list pos:line="17" pos:column="13">(<argument><expr><name pos:line="17" pos:column="14">parent<pos:position pos:line="17" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="22">"."<pos:position pos:line="17" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="27">sizeof <argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">parent<pos:position pos:line="17" pos:column="41"/></name></expr></argument>)<pos:position pos:line="17" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">basename<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <name pos:line="18" pos:column="16">path<pos:position pos:line="18" pos:column="20"/></name></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="21" pos:column="3">snprintf<pos:position pos:line="21" pos:column="11"/></name> <argument_list pos:line="21" pos:column="12">(<argument><expr><name pos:line="21" pos:column="13">newdir<pos:position pos:line="21" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="21">ndlen<pos:position pos:line="21" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="28">"%s/%s"<pos:position pos:line="21" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="37">parent<pos:position pos:line="21" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="45">".muttXXXXXX"<pos:position pos:line="21" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="60"/></expr_stmt>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><call><name pos:line="22" pos:column="7">mkdtemp<pos:position pos:line="22" pos:column="14"/></name><argument_list pos:line="22" pos:column="14">(<argument><expr><name pos:line="22" pos:column="15">newdir<pos:position pos:line="22" pos:column="21"/></name></expr></argument>)<pos:position pos:line="22" pos:column="22"/></argument_list></call> <operator pos:line="22" pos:column="23">==<pos:position pos:line="22" pos:column="25"/></operator> <name pos:line="22" pos:column="26">NULL<pos:position pos:line="22" pos:column="30"/></name></expr>)<pos:position pos:line="22" pos:column="31"/></condition><then pos:line="22" pos:column="31">
  <block pos:line="23" pos:column="3">{
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">dprint<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><literal type="number" pos:line="24" pos:column="14">1<pos:position pos:line="24" pos:column="15"/></literal></expr></argument>, <argument><expr><operator pos:line="24" pos:column="17">(<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">debugfile<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">,<pos:position pos:line="24" pos:column="28"/></operator> <literal type="string" pos:line="24" pos:column="29">"mutt_mkwrapdir: mkdtemp() failed\n"<pos:position pos:line="24" pos:column="65"/></literal><operator pos:line="24" pos:column="65">)<pos:position pos:line="24" pos:column="66"/></operator></expr></argument>)<pos:position pos:line="24" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="68"/></expr_stmt>
      <return pos:line="25" pos:column="7">return <expr><operator pos:line="25" pos:column="14">-<pos:position pos:line="25" pos:column="15"/></operator><literal type="number" pos:line="25" pos:column="15">1<pos:position pos:line="25" pos:column="16"/></literal></expr>;<pos:position pos:line="25" pos:column="17"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>
  
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><call><name pos:line="28" pos:column="7">snprintf<pos:position pos:line="28" pos:column="15"/></name> <argument_list pos:line="28" pos:column="16">(<argument><expr><name pos:line="28" pos:column="17">newfile<pos:position pos:line="28" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="26">nflen<pos:position pos:line="28" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="33">"%s/%s"<pos:position pos:line="28" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="42">newdir<pos:position pos:line="28" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="50">NONULL<pos:position pos:line="28" pos:column="56"/></name><argument_list pos:line="28" pos:column="56">(<argument><expr><name pos:line="28" pos:column="57">basename<pos:position pos:line="28" pos:column="65"/></name></expr></argument>)<pos:position pos:line="28" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="67"/></argument_list></call> <operator pos:line="28" pos:column="68">&gt;=<pos:position pos:line="28" pos:column="73"/></operator> <name pos:line="28" pos:column="71">nflen<pos:position pos:line="28" pos:column="76"/></name></expr>)<pos:position pos:line="28" pos:column="77"/></condition><then pos:line="28" pos:column="77">
  <block pos:line="29" pos:column="3">{
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">rmdir<pos:position pos:line="30" pos:column="12"/></name><argument_list pos:line="30" pos:column="12">(<argument><expr><name pos:line="30" pos:column="13">newdir<pos:position pos:line="30" pos:column="19"/></name></expr></argument>)<pos:position pos:line="30" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">dprint<pos:position pos:line="31" pos:column="13"/></name><argument_list pos:line="31" pos:column="13">(<argument><expr><literal type="number" pos:line="31" pos:column="14">1<pos:position pos:line="31" pos:column="15"/></literal></expr></argument>, <argument><expr><operator pos:line="31" pos:column="17">(<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="18">debugfile<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">,<pos:position pos:line="31" pos:column="28"/></operator> <literal type="string" pos:line="31" pos:column="29">"mutt_mkwrapdir: string was truncated\n"<pos:position pos:line="31" pos:column="69"/></literal><operator pos:line="31" pos:column="69">)<pos:position pos:line="31" pos:column="70"/></operator></expr></argument>)<pos:position pos:line="31" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="72"/></expr_stmt>
      <return pos:line="32" pos:column="7">return <expr><operator pos:line="32" pos:column="14">-<pos:position pos:line="32" pos:column="15"/></operator><literal type="number" pos:line="32" pos:column="15">1<pos:position pos:line="32" pos:column="16"/></literal></expr>;<pos:position pos:line="32" pos:column="17"/></return>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>
  <return pos:line="34" pos:column="3">return <expr><literal type="number" pos:line="34" pos:column="10">0<pos:position pos:line="34" pos:column="11"/></literal></expr>;<pos:position pos:line="34" pos:column="12"/></return>  
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

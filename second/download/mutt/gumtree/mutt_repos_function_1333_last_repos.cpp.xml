<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1333_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">rfc822_cat<pos:position pos:line="2" pos:column="11"/></name> <parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">char<pos:position pos:line="2" pos:column="17"/></name> <modifier pos:line="2" pos:column="18">*<pos:position pos:line="2" pos:column="19"/></modifier></type><name pos:line="2" pos:column="19">buf<pos:position pos:line="2" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="24">size_t<pos:position pos:line="2" pos:column="30"/></name></type> <name pos:line="2" pos:column="31">buflen<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">value<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="58">const<pos:position pos:line="2" pos:column="63"/></specifier> <name pos:line="2" pos:column="64">char<pos:position pos:line="2" pos:column="68"/></name> <modifier pos:line="2" pos:column="69">*<pos:position pos:line="2" pos:column="70"/></modifier></type><name pos:line="2" pos:column="70">specials<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="79"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><call><name pos:line="4" pos:column="7">strpbrk<pos:position pos:line="4" pos:column="14"/></name> <argument_list pos:line="4" pos:column="15">(<argument><expr><name pos:line="4" pos:column="16">value<pos:position pos:line="4" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="23">specials<pos:position pos:line="4" pos:column="31"/></name></expr></argument>)<pos:position pos:line="4" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="33"/></condition><then pos:line="4" pos:column="33">
  <block pos:line="5" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">tmp<pos:position pos:line="6" pos:column="13"/></name><index pos:line="6" pos:column="13">[<expr><literal type="number" pos:line="6" pos:column="14">256<pos:position pos:line="6" pos:column="17"/></literal></expr>]<pos:position pos:line="6" pos:column="18"/></index></name></decl>, <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="21">pc<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><name pos:line="6" pos:column="26">tmp<pos:position pos:line="6" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">size_t<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">tmplen<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><sizeof pos:line="7" pos:column="21">sizeof <argument_list pos:line="7" pos:column="28">(<argument><expr><name pos:line="7" pos:column="29">tmp<pos:position pos:line="7" pos:column="32"/></name></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></sizeof> <operator pos:line="7" pos:column="34">-<pos:position pos:line="7" pos:column="35"/></operator> <literal type="number" pos:line="7" pos:column="36">3<pos:position pos:line="7" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="9" pos:column="5">*<pos:position pos:line="9" pos:column="6"/></operator><name pos:line="9" pos:column="6">pc<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">++<pos:position pos:line="9" pos:column="10"/></operator> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <literal type="char" pos:line="9" pos:column="13">'"'<pos:position pos:line="9" pos:column="16"/></literal></expr>;<pos:position pos:line="9" pos:column="17"/></expr_stmt>
    <for pos:line="10" pos:column="5">for <control pos:line="10" pos:column="9">(<init pos:line="10" pos:column="10">;<pos:position pos:line="10" pos:column="11"/></init> <condition><expr><operator pos:line="10" pos:column="12">*<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">value<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">&amp;&amp;<pos:position pos:line="10" pos:column="29"/></operator> <name pos:line="10" pos:column="22">tmplen<pos:position pos:line="10" pos:column="28"/></name> <operator pos:line="10" pos:column="29">&gt;<pos:position pos:line="10" pos:column="33"/></operator> <literal type="number" pos:line="10" pos:column="31">1<pos:position pos:line="10" pos:column="32"/></literal></expr>;<pos:position pos:line="10" pos:column="33"/></condition> <incr><expr><name pos:line="10" pos:column="34">value<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">++<pos:position pos:line="10" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="42"/></control>
    <block pos:line="11" pos:column="5">{
      <if pos:line="12" pos:column="7">if <condition pos:line="12" pos:column="10">(<expr><operator pos:line="12" pos:column="11">*<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="12">value<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">==<pos:position pos:line="12" pos:column="20"/></operator> <literal type="char" pos:line="12" pos:column="21">'\\'<pos:position pos:line="12" pos:column="25"/></literal> <operator pos:line="12" pos:column="26">||<pos:position pos:line="12" pos:column="28"/></operator> <operator pos:line="12" pos:column="29">*<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="30">value<pos:position pos:line="12" pos:column="35"/></name> <operator pos:line="12" pos:column="36">==<pos:position pos:line="12" pos:column="38"/></operator> <literal type="char" pos:line="12" pos:column="39">'"'<pos:position pos:line="12" pos:column="42"/></literal></expr>)<pos:position pos:line="12" pos:column="43"/></condition><then pos:line="12" pos:column="43">
      <block pos:line="13" pos:column="7">{
	<expr_stmt><expr><operator pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">pc<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">++<pos:position pos:line="14" pos:column="14"/></operator> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <literal type="char" pos:line="14" pos:column="17">'\\'<pos:position pos:line="14" pos:column="21"/></literal></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name pos:line="15" pos:column="9">tmplen<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">--<pos:position pos:line="15" pos:column="17"/></operator></expr>;<pos:position pos:line="15" pos:column="18"/></expr_stmt>
      }<pos:position pos:line="16" pos:column="8"/></block></then></if>
      <expr_stmt><expr><operator pos:line="17" pos:column="7">*<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">pc<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">++<pos:position pos:line="17" pos:column="12"/></operator> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <operator pos:line="17" pos:column="15">*<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="16">value<pos:position pos:line="17" pos:column="21"/></name></expr>;<pos:position pos:line="17" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name pos:line="18" pos:column="7">tmplen<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">--<pos:position pos:line="18" pos:column="15"/></operator></expr>;<pos:position pos:line="18" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></for>
    <expr_stmt><expr><operator pos:line="20" pos:column="5">*<pos:position pos:line="20" pos:column="6"/></operator><name pos:line="20" pos:column="6">pc<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">++<pos:position pos:line="20" pos:column="10"/></operator> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <literal type="char" pos:line="20" pos:column="13">'"'<pos:position pos:line="20" pos:column="16"/></literal></expr>;<pos:position pos:line="20" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="21" pos:column="5">*<pos:position pos:line="21" pos:column="6"/></operator><name pos:line="21" pos:column="6">pc<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">=<pos:position pos:line="21" pos:column="10"/></operator> <literal type="number" pos:line="21" pos:column="11">0<pos:position pos:line="21" pos:column="12"/></literal></expr>;<pos:position pos:line="21" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">strfcpy<pos:position pos:line="22" pos:column="12"/></name> <argument_list pos:line="22" pos:column="13">(<argument><expr><name pos:line="22" pos:column="14">buf<pos:position pos:line="22" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="19">tmp<pos:position pos:line="22" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="24">buflen<pos:position pos:line="22" pos:column="30"/></name></expr></argument>)<pos:position pos:line="22" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></then>
  <else pos:line="24" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="5">strfcpy<pos:position pos:line="25" pos:column="12"/></name> <argument_list pos:line="25" pos:column="13">(<argument><expr><name pos:line="25" pos:column="14">buf<pos:position pos:line="25" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="19">value<pos:position pos:line="25" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="26">buflen<pos:position pos:line="25" pos:column="32"/></name></expr></argument>)<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt></block></else></if>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

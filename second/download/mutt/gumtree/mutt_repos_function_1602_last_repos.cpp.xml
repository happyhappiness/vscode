<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1602_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mx_is_maildir<pos:position pos:line="1" pos:column="18"/></name> <parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">path<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">tmp<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">_POSIX_PATH_MAX<pos:position pos:line="3" pos:column="27"/></name></expr>]<pos:position pos:line="3" pos:column="28"/></index></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">stat<pos:position pos:line="4" pos:column="14"/></name></name></type> <name pos:line="4" pos:column="15">st<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">snprintf<pos:position pos:line="6" pos:column="11"/></name> <argument_list pos:line="6" pos:column="12">(<argument><expr><name pos:line="6" pos:column="13">tmp<pos:position pos:line="6" pos:column="16"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="18">sizeof <argument_list pos:line="6" pos:column="25">(<argument><expr><name pos:line="6" pos:column="26">tmp<pos:position pos:line="6" pos:column="29"/></name></expr></argument>)<pos:position pos:line="6" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="32">"%s/cur"<pos:position pos:line="6" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="42">path<pos:position pos:line="6" pos:column="46"/></name></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="48"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><call><name pos:line="7" pos:column="7">stat<pos:position pos:line="7" pos:column="11"/></name> <argument_list pos:line="7" pos:column="12">(<argument><expr><name pos:line="7" pos:column="13">tmp<pos:position pos:line="7" pos:column="16"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="18">&amp;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="19">st<pos:position pos:line="7" pos:column="21"/></name></expr></argument>)<pos:position pos:line="7" pos:column="22"/></argument_list></call> <operator pos:line="7" pos:column="23">==<pos:position pos:line="7" pos:column="25"/></operator> <literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal> <operator pos:line="7" pos:column="28">&amp;&amp;<pos:position pos:line="7" pos:column="38"/></operator> <call><name pos:line="7" pos:column="31">S_ISDIR<pos:position pos:line="7" pos:column="38"/></name> <argument_list pos:line="7" pos:column="39">(<argument><expr><name><name pos:line="7" pos:column="40">st<pos:position pos:line="7" pos:column="42"/></name><operator pos:line="7" pos:column="42">.<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="43">st_mode<pos:position pos:line="7" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="52"/></condition><then pos:line="7" pos:column="52">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><literal type="number" pos:line="8" pos:column="12">1<pos:position pos:line="8" pos:column="13"/></literal></expr>;<pos:position pos:line="8" pos:column="14"/></return></block></then></if>
  <return pos:line="9" pos:column="3">return <expr><literal type="number" pos:line="9" pos:column="10">0<pos:position pos:line="9" pos:column="11"/></literal></expr>;<pos:position pos:line="9" pos:column="12"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

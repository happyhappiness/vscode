<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_825_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">destroy_state<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">browser_state<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">state<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">c<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>

  <for pos:line="5" pos:column="3">for <control pos:line="5" pos:column="7">(<init><expr><name pos:line="5" pos:column="8">c<pos:position pos:line="5" pos:column="9"/></name> <operator pos:line="5" pos:column="10">=<pos:position pos:line="5" pos:column="11"/></operator> <literal type="number" pos:line="5" pos:column="12">0<pos:position pos:line="5" pos:column="13"/></literal></expr>;<pos:position pos:line="5" pos:column="14"/></init> <condition><expr><name pos:line="5" pos:column="15">c<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">&lt;<pos:position pos:line="5" pos:column="21"/></operator> <name><name pos:line="5" pos:column="19">state<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">-&gt;<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="26">entrylen<pos:position pos:line="5" pos:column="34"/></name></name></expr>;<pos:position pos:line="5" pos:column="35"/></condition> <incr><expr><name pos:line="5" pos:column="36">c<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">++<pos:position pos:line="5" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="40"/></control>
  <block pos:line="6" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">FREE<pos:position pos:line="7" pos:column="9"/></name> <argument_list pos:line="7" pos:column="10">(<argument><expr><operator pos:line="7" pos:column="11">&amp;<pos:position pos:line="7" pos:column="16"/></operator><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><operator pos:line="7" pos:column="13">(<pos:position pos:line="7" pos:column="14"/></operator><name><name pos:line="7" pos:column="14">state<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">entry<pos:position pos:line="7" pos:column="26"/></name></name><operator pos:line="7" pos:column="26">)<pos:position pos:line="7" pos:column="27"/></operator><index pos:line="7" pos:column="27">[<expr><name pos:line="7" pos:column="28">c<pos:position pos:line="7" pos:column="29"/></name></expr>]<pos:position pos:line="7" pos:column="30"/></index><operator pos:line="7" pos:column="30">.<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="31">name<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">)<pos:position pos:line="7" pos:column="36"/></operator></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">FREE<pos:position pos:line="8" pos:column="9"/></name> <argument_list pos:line="8" pos:column="10">(<argument><expr><operator pos:line="8" pos:column="11">&amp;<pos:position pos:line="8" pos:column="16"/></operator><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><operator pos:line="8" pos:column="13">(<pos:position pos:line="8" pos:column="14"/></operator><name><name pos:line="8" pos:column="14">state<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">-&gt;<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="21">entry<pos:position pos:line="8" pos:column="26"/></name></name><operator pos:line="8" pos:column="26">)<pos:position pos:line="8" pos:column="27"/></operator><index pos:line="8" pos:column="27">[<expr><name pos:line="8" pos:column="28">c<pos:position pos:line="8" pos:column="29"/></name></expr>]<pos:position pos:line="8" pos:column="30"/></index><operator pos:line="8" pos:column="30">.<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">desc<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">)<pos:position pos:line="8" pos:column="36"/></operator></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="9" pos:column="4"/></block></for>
<cpp:ifdef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifdef<pos:position pos:line="10" pos:column="7"/></cpp:directive> <name pos:line="10" pos:column="8">USE_IMAP<pos:position pos:line="10" pos:column="16"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">FREE<pos:position pos:line="11" pos:column="7"/></name> <argument_list pos:line="11" pos:column="8">(<argument><expr><operator pos:line="11" pos:column="9">&amp;<pos:position pos:line="11" pos:column="14"/></operator><name><name pos:line="11" pos:column="10">state<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">folder<pos:position pos:line="11" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">FREE<pos:position pos:line="13" pos:column="7"/></name> <argument_list pos:line="13" pos:column="8">(<argument><expr><operator pos:line="13" pos:column="9">&amp;<pos:position pos:line="13" pos:column="14"/></operator><name><name pos:line="13" pos:column="10">state<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">-&gt;<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="17">entry<pos:position pos:line="13" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

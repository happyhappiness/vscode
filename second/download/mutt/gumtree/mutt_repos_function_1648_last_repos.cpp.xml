<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1648_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">crypt_valid_passphrase<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">flags<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">ret<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><literal type="number" pos:line="3" pos:column="13">0<pos:position pos:line="3" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

<cpp:if pos:line="5" pos:column="1"># <cpp:directive pos:line="5" pos:column="3">if<pos:position pos:line="5" pos:column="5"/></cpp:directive> <expr><call><name pos:line="5" pos:column="6">defined<pos:position pos:line="5" pos:column="13"/></name><argument_list pos:line="5" pos:column="13">(<argument><expr><name pos:line="5" pos:column="14">HAVE_SETRLIMIT<pos:position pos:line="5" pos:column="28"/></name></expr></argument>)<pos:position pos:line="5" pos:column="29"/></argument_list></call> <operator pos:line="5" pos:column="30">&amp;&amp;<pos:position pos:line="5" pos:column="40"/></operator><operator pos:line="5" pos:column="32">(<pos:position pos:line="5" pos:column="33"/></operator><operator pos:line="5" pos:column="33">!<pos:position pos:line="5" pos:column="34"/></operator><call><name pos:line="5" pos:column="34">defined<pos:position pos:line="5" pos:column="41"/></name><argument_list pos:line="5" pos:column="41">(<argument><expr><name pos:line="5" pos:column="42">DEBUG<pos:position pos:line="5" pos:column="47"/></name></expr></argument>)<pos:position pos:line="5" pos:column="48"/></argument_list></call><operator pos:line="5" pos:column="48">)<pos:position pos:line="5" pos:column="49"/></operator></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">disable_coredumps<pos:position pos:line="6" pos:column="20"/></name> <argument_list pos:line="6" pos:column="21">()<pos:position pos:line="6" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="24"/></expr_stmt>
<cpp:endif pos:line="7" pos:column="1"># <cpp:directive pos:line="7" pos:column="3">endif<pos:position pos:line="7" pos:column="8"/></cpp:directive></cpp:endif>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">(<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">WithCrypto<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">&amp;<pos:position pos:line="9" pos:column="24"/></operator> <name pos:line="9" pos:column="21">APPLICATION_PGP<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">)<pos:position pos:line="9" pos:column="37"/></operator> <operator pos:line="9" pos:column="38">&amp;&amp;<pos:position pos:line="9" pos:column="48"/></operator> <operator pos:line="9" pos:column="41">(<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="42">flags<pos:position pos:line="9" pos:column="47"/></name> <operator pos:line="9" pos:column="48">&amp;<pos:position pos:line="9" pos:column="53"/></operator> <name pos:line="9" pos:column="50">APPLICATION_PGP<pos:position pos:line="9" pos:column="65"/></name><operator pos:line="9" pos:column="65">)<pos:position pos:line="9" pos:column="66"/></operator></expr>)<pos:position pos:line="9" pos:column="67"/></condition><then pos:line="9" pos:column="67">
    <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="5">ret<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <call><name pos:line="10" pos:column="11">crypt_pgp_valid_passphrase<pos:position pos:line="10" pos:column="37"/></name> <argument_list pos:line="10" pos:column="38">()<pos:position pos:line="10" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="41"/></expr_stmt></block></then></if>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">(<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">WithCrypto<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">&amp;<pos:position pos:line="12" pos:column="24"/></operator> <name pos:line="12" pos:column="21">APPLICATION_SMIME<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">)<pos:position pos:line="12" pos:column="39"/></operator> <operator pos:line="12" pos:column="40">&amp;&amp;<pos:position pos:line="12" pos:column="50"/></operator> <operator pos:line="12" pos:column="43">(<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="44">flags<pos:position pos:line="12" pos:column="49"/></name> <operator pos:line="12" pos:column="50">&amp;<pos:position pos:line="12" pos:column="55"/></operator> <name pos:line="12" pos:column="52">APPLICATION_SMIME<pos:position pos:line="12" pos:column="69"/></name><operator pos:line="12" pos:column="69">)<pos:position pos:line="12" pos:column="70"/></operator></expr>)<pos:position pos:line="12" pos:column="71"/></condition><then pos:line="12" pos:column="71">
    <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="5">ret<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <call><name pos:line="13" pos:column="11">crypt_smime_valid_passphrase<pos:position pos:line="13" pos:column="39"/></name> <argument_list pos:line="13" pos:column="40">()<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt></block></then></if>

  <return pos:line="15" pos:column="3">return <expr><name pos:line="15" pos:column="10">ret<pos:position pos:line="15" pos:column="13"/></name></expr>;<pos:position pos:line="15" pos:column="14"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2049_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">imap_open_connection<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">IMAP_DATA<pos:position pos:line="1" pos:column="36"/></name><modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type> <name pos:line="1" pos:column="38">idata<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buf<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">LONG_STRING<pos:position pos:line="3" pos:column="23"/></name></expr>]<pos:position pos:line="3" pos:column="24"/></index></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name pos:line="5" pos:column="7">mutt_socket_open<pos:position pos:line="5" pos:column="23"/></name> <argument_list pos:line="5" pos:column="24">(<argument><expr><name><name pos:line="5" pos:column="25">idata<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">-&gt;<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="32">conn<pos:position pos:line="5" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></call> <operator pos:line="5" pos:column="38">&lt;<pos:position pos:line="5" pos:column="42"/></operator> <literal type="number" pos:line="5" pos:column="40">0<pos:position pos:line="5" pos:column="41"/></literal></expr>)<pos:position pos:line="5" pos:column="42"/></condition><then pos:line="5" pos:column="42">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">-<pos:position pos:line="6" pos:column="13"/></operator><literal type="number" pos:line="6" pos:column="13">1<pos:position pos:line="6" pos:column="14"/></literal></expr>;<pos:position pos:line="6" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="8" pos:column="3">idata<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">-&gt;<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="10">state<pos:position pos:line="8" pos:column="15"/></name></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">IMAP_CONNECTED<pos:position pos:line="8" pos:column="32"/></name></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><call><name pos:line="10" pos:column="7">imap_cmd_step<pos:position pos:line="10" pos:column="20"/></name> <argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">idata<pos:position pos:line="10" pos:column="27"/></name></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></call> <operator pos:line="10" pos:column="29">!=<pos:position pos:line="10" pos:column="31"/></operator> <name pos:line="10" pos:column="32">IMAP_CMD_OK<pos:position pos:line="10" pos:column="43"/></name></expr>)<pos:position pos:line="10" pos:column="44"/></condition><then pos:line="10" pos:column="44">
  <block pos:line="11" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">imap_close_connection<pos:position pos:line="12" pos:column="26"/></name> <argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">idata<pos:position pos:line="12" pos:column="33"/></name></expr></argument>)<pos:position pos:line="12" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">-<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">1<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><call><name pos:line="16" pos:column="7">ascii_strncasecmp<pos:position pos:line="16" pos:column="24"/></name> <argument_list pos:line="16" pos:column="25">(<argument><expr><literal type="string" pos:line="16" pos:column="26">"* OK"<pos:position pos:line="16" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="34">idata<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">-&gt;<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="41">buf<pos:position pos:line="16" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="46">4<pos:position pos:line="16" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call> <operator pos:line="16" pos:column="49">==<pos:position pos:line="16" pos:column="51"/></operator> <literal type="number" pos:line="16" pos:column="52">0<pos:position pos:line="16" pos:column="53"/></literal></expr>)<pos:position pos:line="16" pos:column="54"/></condition><then pos:line="16" pos:column="54">
  <block pos:line="17" pos:column="3">{
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name pos:line="18" pos:column="9">ascii_strncasecmp<pos:position pos:line="18" pos:column="26"/></name> <argument_list pos:line="18" pos:column="27">(<argument><expr><literal type="string" pos:line="18" pos:column="28">"* OK [CAPABILITY"<pos:position pos:line="18" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="48">idata<pos:position pos:line="18" pos:column="53"/></name><operator pos:line="18" pos:column="53">-&gt;<pos:position pos:line="18" pos:column="58"/></operator><name pos:line="18" pos:column="55">buf<pos:position pos:line="18" pos:column="58"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="60">16<pos:position pos:line="18" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></call>
        <operator pos:line="19" pos:column="9">&amp;&amp;<pos:position pos:line="19" pos:column="19"/></operator> <call><name pos:line="19" pos:column="12">imap_check_capabilities<pos:position pos:line="19" pos:column="35"/></name> <argument_list pos:line="19" pos:column="36">(<argument><expr><name pos:line="19" pos:column="37">idata<pos:position pos:line="19" pos:column="42"/></name></expr></argument>)<pos:position pos:line="19" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="44"/></condition><then pos:line="19" pos:column="44">
      <block type="pseudo"><goto pos:line="20" pos:column="7">goto <name pos:line="20" pos:column="12">bail<pos:position pos:line="20" pos:column="16"/></name>;<pos:position pos:line="20" pos:column="17"/></goto></block></then></if>
<cpp:if pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">if<pos:position pos:line="21" pos:column="4"/></cpp:directive> <expr><call><name pos:line="21" pos:column="5">defined<pos:position pos:line="21" pos:column="12"/></name><argument_list pos:line="21" pos:column="12">(<argument><expr><name pos:line="21" pos:column="13">USE_SSL<pos:position pos:line="21" pos:column="20"/></name></expr></argument>)<pos:position pos:line="21" pos:column="21"/></argument_list></call></expr></cpp:if>
    <comment type="block" pos:line="22" pos:column="5">/* Attempt STARTTLS if available and desired. */</comment>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">!<pos:position pos:line="23" pos:column="10"/></operator><name><name pos:line="23" pos:column="10">idata<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">-&gt;<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="17">conn<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">-&gt;<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="23">ssf<pos:position pos:line="23" pos:column="26"/></name></name> <operator pos:line="23" pos:column="27">&amp;&amp;<pos:position pos:line="23" pos:column="37"/></operator> <operator pos:line="23" pos:column="30">(<pos:position pos:line="23" pos:column="31"/></operator><call><name pos:line="23" pos:column="31">option<pos:position pos:line="23" pos:column="37"/></name><argument_list pos:line="23" pos:column="37">(<argument><expr><name pos:line="23" pos:column="38">OPTSSLFORCETLS<pos:position pos:line="23" pos:column="52"/></name></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call> <operator pos:line="23" pos:column="54">||<pos:position pos:line="23" pos:column="56"/></operator>
                              <call><name pos:line="24" pos:column="31">mutt_bit_isset<pos:position pos:line="24" pos:column="45"/></name> <argument_list pos:line="24" pos:column="46">(<argument><expr><name><name pos:line="24" pos:column="47">idata<pos:position pos:line="24" pos:column="52"/></name><operator pos:line="24" pos:column="52">-&gt;<pos:position pos:line="24" pos:column="57"/></operator><name pos:line="24" pos:column="54">capabilities<pos:position pos:line="24" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="68">STARTTLS<pos:position pos:line="24" pos:column="76"/></name></expr></argument>)<pos:position pos:line="24" pos:column="77"/></argument_list></call><operator pos:line="24" pos:column="77">)<pos:position pos:line="24" pos:column="78"/></operator></expr>)<pos:position pos:line="24" pos:column="79"/></condition><then pos:line="24" pos:column="79">
    <block pos:line="25" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="26" pos:column="7">int<pos:position pos:line="26" pos:column="10"/></name></type> <name pos:line="26" pos:column="11">rc<pos:position pos:line="26" pos:column="13"/></name></decl>;<pos:position pos:line="26" pos:column="14"/></decl_stmt>

      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><call><name pos:line="28" pos:column="11">option<pos:position pos:line="28" pos:column="17"/></name><argument_list pos:line="28" pos:column="17">(<argument><expr><name pos:line="28" pos:column="18">OPTSSLFORCETLS<pos:position pos:line="28" pos:column="32"/></name></expr></argument>)<pos:position pos:line="28" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="34"/></condition><then pos:line="28" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="9">rc<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <name pos:line="29" pos:column="14">MUTT_YES<pos:position pos:line="29" pos:column="22"/></name></expr>;<pos:position pos:line="29" pos:column="23"/></expr_stmt></block></then>
      <elseif pos:line="30" pos:column="7">else <if pos:line="30" pos:column="12">if <condition pos:line="30" pos:column="15">(<expr><operator pos:line="30" pos:column="16">(<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="17">rc<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <call><name pos:line="30" pos:column="22">query_quadoption<pos:position pos:line="30" pos:column="38"/></name> <argument_list pos:line="30" pos:column="39">(<argument><expr><name pos:line="30" pos:column="40">OPT_SSLSTARTTLS<pos:position pos:line="30" pos:column="55"/></name></expr></argument>,
        <argument><expr><call><name pos:line="31" pos:column="9">_<pos:position pos:line="31" pos:column="10"/></name><argument_list pos:line="31" pos:column="10">(<argument><expr><literal type="string" pos:line="31" pos:column="11">"Secure connection with TLS?"<pos:position pos:line="31" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="42"/></argument_list></call><operator pos:line="31" pos:column="42">)<pos:position pos:line="31" pos:column="43"/></operator> <operator pos:line="31" pos:column="44">==<pos:position pos:line="31" pos:column="46"/></operator> <operator pos:line="31" pos:column="47">-<pos:position pos:line="31" pos:column="48"/></operator><literal type="number" pos:line="31" pos:column="48">1<pos:position pos:line="31" pos:column="49"/></literal></expr>)<pos:position pos:line="31" pos:column="50"/></condition><then pos:line="31" pos:column="50">
	<block type="pseudo"><goto pos:line="32" pos:column="9">goto <name pos:line="32" pos:column="14">err_close_conn<pos:position pos:line="32" pos:column="28"/></name>;<pos:position pos:line="32" pos:column="29"/></goto></block></then></if></elseif></if>
      <if pos:line="33" pos:column="7">if <condition pos:line="33" pos:column="10">(<expr><name pos:line="33" pos:column="11">rc<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">==<pos:position pos:line="33" pos:column="16"/></operator> <name pos:line="33" pos:column="17">MUTT_YES<pos:position pos:line="33" pos:column="25"/></name></expr>)<pos:position pos:line="33" pos:column="26"/></condition><then pos:line="33" pos:column="26"> <block pos:line="33" pos:column="27">{
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">(<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">rc<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">=<pos:position pos:line="34" pos:column="18"/></operator> <call><name pos:line="34" pos:column="19">imap_exec<pos:position pos:line="34" pos:column="28"/></name> <argument_list pos:line="34" pos:column="29">(<argument><expr><name pos:line="34" pos:column="30">idata<pos:position pos:line="34" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="37">"STARTTLS"<pos:position pos:line="34" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="49">IMAP_CMD_FAIL_OK<pos:position pos:line="34" pos:column="65"/></name></expr></argument>)<pos:position pos:line="34" pos:column="66"/></argument_list></call><operator pos:line="34" pos:column="66">)<pos:position pos:line="34" pos:column="67"/></operator> <operator pos:line="34" pos:column="68">==<pos:position pos:line="34" pos:column="70"/></operator> <operator pos:line="34" pos:column="71">-<pos:position pos:line="34" pos:column="72"/></operator><literal type="number" pos:line="34" pos:column="72">1<pos:position pos:line="34" pos:column="73"/></literal></expr>)<pos:position pos:line="34" pos:column="74"/></condition><then pos:line="34" pos:column="74">
	  <block type="pseudo"><goto pos:line="35" pos:column="11">goto <name pos:line="35" pos:column="16">bail<pos:position pos:line="35" pos:column="20"/></name>;<pos:position pos:line="35" pos:column="21"/></goto></block></then></if>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">rc<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">!=<pos:position pos:line="36" pos:column="18"/></operator> <operator pos:line="36" pos:column="19">-<pos:position pos:line="36" pos:column="20"/></operator><literal type="number" pos:line="36" pos:column="20">2<pos:position pos:line="36" pos:column="21"/></literal></expr>)<pos:position pos:line="36" pos:column="22"/></condition><then pos:line="36" pos:column="22">
	<block pos:line="37" pos:column="9">{
	  <if pos:line="38" pos:column="11">if <condition pos:line="38" pos:column="14">(<expr><call><name pos:line="38" pos:column="15">mutt_ssl_starttls<pos:position pos:line="38" pos:column="32"/></name> <argument_list pos:line="38" pos:column="33">(<argument><expr><name><name pos:line="38" pos:column="34">idata<pos:position pos:line="38" pos:column="39"/></name><operator pos:line="38" pos:column="39">-&gt;<pos:position pos:line="38" pos:column="44"/></operator><name pos:line="38" pos:column="41">conn<pos:position pos:line="38" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="47"/></condition><then pos:line="38" pos:column="47">
	  <block pos:line="39" pos:column="11">{
	    <expr_stmt><expr><call><name pos:line="40" pos:column="13">mutt_error<pos:position pos:line="40" pos:column="23"/></name> <argument_list pos:line="40" pos:column="24">(<argument><expr><call><name pos:line="40" pos:column="25">_<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><literal type="string" pos:line="40" pos:column="27">"Could not negotiate TLS connection"<pos:position pos:line="40" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="66"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="41" pos:column="13">mutt_sleep<pos:position pos:line="41" pos:column="23"/></name> <argument_list pos:line="41" pos:column="24">(<argument><expr><literal type="number" pos:line="41" pos:column="25">1<pos:position pos:line="41" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="28"/></expr_stmt>
	    <goto pos:line="42" pos:column="13">goto <name pos:line="42" pos:column="18">err_close_conn<pos:position pos:line="42" pos:column="32"/></name>;<pos:position pos:line="42" pos:column="33"/></goto>
	  }<pos:position pos:line="43" pos:column="12"/></block></then>
	  <else pos:line="44" pos:column="11">else
	  <block pos:line="45" pos:column="11">{
	    <comment type="block" pos:line="46" pos:column="13">/* RFC 2595 demands we recheck CAPABILITY after TLS completes. */</comment>
	    <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><call><name pos:line="47" pos:column="17">imap_exec<pos:position pos:line="47" pos:column="26"/></name> <argument_list pos:line="47" pos:column="27">(<argument><expr><name pos:line="47" pos:column="28">idata<pos:position pos:line="47" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="35">"CAPABILITY"<pos:position pos:line="47" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="49">0<pos:position pos:line="47" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="52"/></condition><then pos:line="47" pos:column="52">
	      <block type="pseudo"><goto pos:line="48" pos:column="15">goto <name pos:line="48" pos:column="20">bail<pos:position pos:line="48" pos:column="24"/></name>;<pos:position pos:line="48" pos:column="25"/></goto></block></then></if>
	  }<pos:position pos:line="49" pos:column="12"/></block></else></if>
	}<pos:position pos:line="50" pos:column="10"/></block></then></if>
      }<pos:position pos:line="51" pos:column="8"/></block></then></if>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><call><name pos:line="54" pos:column="9">option<pos:position pos:line="54" pos:column="15"/></name><argument_list pos:line="54" pos:column="15">(<argument><expr><name pos:line="54" pos:column="16">OPTSSLFORCETLS<pos:position pos:line="54" pos:column="30"/></name></expr></argument>)<pos:position pos:line="54" pos:column="31"/></argument_list></call> <operator pos:line="54" pos:column="32">&amp;&amp;<pos:position pos:line="54" pos:column="42"/></operator> <operator pos:line="54" pos:column="35">!<pos:position pos:line="54" pos:column="36"/></operator> <name><name pos:line="54" pos:column="37">idata<pos:position pos:line="54" pos:column="42"/></name><operator pos:line="54" pos:column="42">-&gt;<pos:position pos:line="54" pos:column="47"/></operator><name pos:line="54" pos:column="44">conn<pos:position pos:line="54" pos:column="48"/></name><operator pos:line="54" pos:column="48">-&gt;<pos:position pos:line="54" pos:column="53"/></operator><name pos:line="54" pos:column="50">ssf<pos:position pos:line="54" pos:column="53"/></name></name></expr>)<pos:position pos:line="54" pos:column="54"/></condition><then pos:line="54" pos:column="54">
    <block pos:line="55" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="56" pos:column="7">mutt_error<pos:position pos:line="56" pos:column="17"/></name></type> <name pos:line="56" pos:column="18">_<pos:position pos:line="56" pos:column="19"/></name><argument_list pos:line="56" pos:column="19">(<argument><expr><literal type="string" pos:line="56" pos:column="20">"Encrypted connection unavailable"<pos:position pos:line="56" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="55"/></argument_list></decl>;<pos:position pos:line="56" pos:column="56"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="57" pos:column="7">mutt_sleep<pos:position pos:line="57" pos:column="17"/></name> <argument_list pos:line="57" pos:column="18">(<argument><expr><literal type="number" pos:line="57" pos:column="19">1<pos:position pos:line="57" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="22"/></expr_stmt>
      <goto pos:line="58" pos:column="7">goto <name pos:line="58" pos:column="12">err_close_conn<pos:position pos:line="58" pos:column="26"/></name>;<pos:position pos:line="58" pos:column="27"/></goto>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif<pos:position pos:line="60" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="61" pos:column="4"/></block></then>
  <elseif pos:line="62" pos:column="3">else <if pos:line="62" pos:column="8">if <condition pos:line="62" pos:column="11">(<expr><call><name pos:line="62" pos:column="12">ascii_strncasecmp<pos:position pos:line="62" pos:column="29"/></name> <argument_list pos:line="62" pos:column="30">(<argument><expr><literal type="string" pos:line="62" pos:column="31">"* PREAUTH"<pos:position pos:line="62" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="44">idata<pos:position pos:line="62" pos:column="49"/></name><operator pos:line="62" pos:column="49">-&gt;<pos:position pos:line="62" pos:column="54"/></operator><name pos:line="62" pos:column="51">buf<pos:position pos:line="62" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="56">9<pos:position pos:line="62" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="58"/></argument_list></call> <operator pos:line="62" pos:column="59">==<pos:position pos:line="62" pos:column="61"/></operator> <literal type="number" pos:line="62" pos:column="62">0<pos:position pos:line="62" pos:column="63"/></literal></expr>)<pos:position pos:line="62" pos:column="64"/></condition><then pos:line="62" pos:column="64">
  <block pos:line="63" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="64" pos:column="5">idata<pos:position pos:line="64" pos:column="10"/></name><operator pos:line="64" pos:column="10">-&gt;<pos:position pos:line="64" pos:column="15"/></operator><name pos:line="64" pos:column="12">state<pos:position pos:line="64" pos:column="17"/></name></name> <operator pos:line="64" pos:column="18">=<pos:position pos:line="64" pos:column="19"/></operator> <name pos:line="64" pos:column="20">IMAP_AUTHENTICATED<pos:position pos:line="64" pos:column="38"/></name></expr>;<pos:position pos:line="64" pos:column="39"/></expr_stmt>
    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><call><name pos:line="65" pos:column="9">imap_check_capabilities<pos:position pos:line="65" pos:column="32"/></name> <argument_list pos:line="65" pos:column="33">(<argument><expr><name pos:line="65" pos:column="34">idata<pos:position pos:line="65" pos:column="39"/></name></expr></argument>)<pos:position pos:line="65" pos:column="40"/></argument_list></call> <operator pos:line="65" pos:column="41">!=<pos:position pos:line="65" pos:column="43"/></operator> <literal type="number" pos:line="65" pos:column="44">0<pos:position pos:line="65" pos:column="45"/></literal></expr>)<pos:position pos:line="65" pos:column="46"/></condition><then pos:line="65" pos:column="46">
      <block type="pseudo"><goto pos:line="66" pos:column="7">goto <name pos:line="66" pos:column="12">bail<pos:position pos:line="66" pos:column="16"/></name>;<pos:position pos:line="66" pos:column="17"/></goto></block></then></if>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">FREE<pos:position pos:line="67" pos:column="9"/></name> <argument_list pos:line="67" pos:column="10">(<argument><expr><operator pos:line="67" pos:column="11">&amp;<pos:position pos:line="67" pos:column="16"/></operator><name><name pos:line="67" pos:column="12">idata<pos:position pos:line="67" pos:column="17"/></name><operator pos:line="67" pos:column="17">-&gt;<pos:position pos:line="67" pos:column="22"/></operator><name pos:line="67" pos:column="19">capstr<pos:position pos:line="67" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="68" pos:column="4"/></block></then></if></elseif>
  <else pos:line="69" pos:column="3">else
  <block pos:line="70" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">imap_error<pos:position pos:line="71" pos:column="15"/></name> <argument_list pos:line="71" pos:column="16">(<argument><expr><literal type="string" pos:line="71" pos:column="17">"imap_open_connection()"<pos:position pos:line="71" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="43">buf<pos:position pos:line="71" pos:column="46"/></name></expr></argument>)<pos:position pos:line="71" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="48"/></expr_stmt>
    <goto pos:line="72" pos:column="5">goto <name pos:line="72" pos:column="10">bail<pos:position pos:line="72" pos:column="14"/></name>;<pos:position pos:line="72" pos:column="15"/></goto>
  }<pos:position pos:line="73" pos:column="4"/></block></else></if>

  <return pos:line="75" pos:column="3">return <expr><literal type="number" pos:line="75" pos:column="10">0<pos:position pos:line="75" pos:column="11"/></literal></expr>;<pos:position pos:line="75" pos:column="12"/></return>

<cpp:if pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">if<pos:position pos:line="77" pos:column="4"/></cpp:directive> <expr><call><name pos:line="77" pos:column="5">defined<pos:position pos:line="77" pos:column="12"/></name><argument_list pos:line="77" pos:column="12">(<argument><expr><name pos:line="77" pos:column="13">USE_SSL<pos:position pos:line="77" pos:column="20"/></name></expr></argument>)<pos:position pos:line="77" pos:column="21"/></argument_list></call></expr></cpp:if>
 <label><name pos:line="78" pos:column="2">err_close_conn<pos:position pos:line="78" pos:column="16"/></name>:<pos:position pos:line="78" pos:column="17"/></label>
  <expr_stmt><expr><call><name pos:line="79" pos:column="3">imap_close_connection<pos:position pos:line="79" pos:column="24"/></name> <argument_list pos:line="79" pos:column="25">(<argument><expr><name pos:line="79" pos:column="26">idata<pos:position pos:line="79" pos:column="31"/></name></expr></argument>)<pos:position pos:line="79" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="33"/></expr_stmt>
<cpp:endif pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">endif<pos:position pos:line="80" pos:column="7"/></cpp:directive></cpp:endif>
 <label><name pos:line="81" pos:column="2">bail<pos:position pos:line="81" pos:column="6"/></name>:<pos:position pos:line="81" pos:column="7"/></label>
  <expr_stmt><expr><call><name pos:line="82" pos:column="3">FREE<pos:position pos:line="82" pos:column="7"/></name> <argument_list pos:line="82" pos:column="8">(<argument><expr><operator pos:line="82" pos:column="9">&amp;<pos:position pos:line="82" pos:column="14"/></operator><name><name pos:line="82" pos:column="10">idata<pos:position pos:line="82" pos:column="15"/></name><operator pos:line="82" pos:column="15">-&gt;<pos:position pos:line="82" pos:column="20"/></operator><name pos:line="82" pos:column="17">capstr<pos:position pos:line="82" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="25"/></expr_stmt>
  <return pos:line="83" pos:column="3">return <expr><operator pos:line="83" pos:column="10">-<pos:position pos:line="83" pos:column="11"/></operator><literal type="number" pos:line="83" pos:column="11">1<pos:position pos:line="83" pos:column="12"/></literal></expr>;<pos:position pos:line="83" pos:column="13"/></return>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

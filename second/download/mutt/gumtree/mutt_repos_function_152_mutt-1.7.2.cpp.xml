<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_152_mutt-1.7.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_search_command<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">int<pos:position pos:line="1" pos:column="29"/></name></type> <name pos:line="1" pos:column="30">cur<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">int<pos:position pos:line="1" pos:column="38"/></name></type> <name pos:line="1" pos:column="39">op<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="10">j<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buf<pos:position pos:line="4" pos:column="11"/></name><index pos:line="4" pos:column="11">[<expr><name pos:line="4" pos:column="12">STRING<pos:position pos:line="4" pos:column="18"/></name></expr>]<pos:position pos:line="4" pos:column="19"/></index></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">temp<pos:position pos:line="5" pos:column="12"/></name><index pos:line="5" pos:column="12">[<expr><name pos:line="5" pos:column="13">LONG_STRING<pos:position pos:line="5" pos:column="24"/></name></expr>]<pos:position pos:line="5" pos:column="25"/></index></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">incr<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">HEADER<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">h<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">progress_t<pos:position pos:line="8" pos:column="13"/></name></type> <name pos:line="8" pos:column="14">progress<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="9" pos:column="3">const<pos:position pos:line="9" pos:column="8"/></specifier> <name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name><modifier pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></modifier></type> <name pos:line="9" pos:column="15">msg<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><name pos:line="9" pos:column="21">NULL<pos:position pos:line="9" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">!<pos:position pos:line="11" pos:column="8"/></operator><operator pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></operator><name pos:line="11" pos:column="9">LastSearch<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">||<pos:position pos:line="11" pos:column="22"/></operator> <operator pos:line="11" pos:column="23">(<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="24">op<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">!=<pos:position pos:line="11" pos:column="29"/></operator> <name pos:line="11" pos:column="30">OP_SEARCH_NEXT<pos:position pos:line="11" pos:column="44"/></name> <operator pos:line="11" pos:column="45">&amp;&amp;<pos:position pos:line="11" pos:column="55"/></operator> <name pos:line="11" pos:column="48">op<pos:position pos:line="11" pos:column="50"/></name> <operator pos:line="11" pos:column="51">!=<pos:position pos:line="11" pos:column="53"/></operator> <name pos:line="11" pos:column="54">OP_SEARCH_OPPOSITE<pos:position pos:line="11" pos:column="72"/></name><operator pos:line="11" pos:column="72">)<pos:position pos:line="11" pos:column="73"/></operator></expr>)<pos:position pos:line="11" pos:column="74"/></condition><then pos:line="11" pos:column="74">
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">strfcpy<pos:position pos:line="13" pos:column="12"/></name> <argument_list pos:line="13" pos:column="13">(<argument><expr><name pos:line="13" pos:column="14">buf<pos:position pos:line="13" pos:column="17"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="13" pos:column="19">*<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="20">LastSearch<pos:position pos:line="13" pos:column="30"/></name></expr> ?<pos:position pos:line="13" pos:column="32"/></condition><then pos:line="13" pos:column="32"> <expr><name pos:line="13" pos:column="33">LastSearch<pos:position pos:line="13" pos:column="43"/></name></expr> <pos:position pos:line="13" pos:column="44"/></then><else pos:line="13" pos:column="44">: <expr><literal type="string" pos:line="13" pos:column="46">""<pos:position pos:line="13" pos:column="48"/></literal></expr></else></ternary></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="50">sizeof <argument_list pos:line="13" pos:column="57">(<argument><expr><name pos:line="13" pos:column="58">buf<pos:position pos:line="13" pos:column="61"/></name></expr></argument>)<pos:position pos:line="13" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="64"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><call><name pos:line="14" pos:column="9">mutt_get_field<pos:position pos:line="14" pos:column="23"/></name> <argument_list pos:line="14" pos:column="24">(<argument><expr><ternary><condition><expr><operator pos:line="14" pos:column="25">(<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">op<pos:position pos:line="14" pos:column="28"/></name> <operator pos:line="14" pos:column="29">==<pos:position pos:line="14" pos:column="31"/></operator> <name pos:line="14" pos:column="32">OP_SEARCH<pos:position pos:line="14" pos:column="41"/></name> <operator pos:line="14" pos:column="42">||<pos:position pos:line="14" pos:column="44"/></operator> <name pos:line="14" pos:column="45">op<pos:position pos:line="14" pos:column="47"/></name> <operator pos:line="14" pos:column="48">==<pos:position pos:line="14" pos:column="50"/></operator> <name pos:line="14" pos:column="51">OP_SEARCH_NEXT<pos:position pos:line="14" pos:column="65"/></name><operator pos:line="14" pos:column="65">)<pos:position pos:line="14" pos:column="66"/></operator></expr> ?<pos:position pos:line="14" pos:column="68"/></condition><then pos:line="14" pos:column="68">
			<expr><call><name pos:line="15" pos:column="25">_<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><literal type="string" pos:line="15" pos:column="27">"Search for: "<pos:position pos:line="15" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr> <pos:position pos:line="15" pos:column="43"/></then><else pos:line="15" pos:column="43">: <expr><call><name pos:line="15" pos:column="45">_<pos:position pos:line="15" pos:column="46"/></name><argument_list pos:line="15" pos:column="46">(<argument><expr><literal type="string" pos:line="15" pos:column="47">"Reverse search for: "<pos:position pos:line="15" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="70"/></argument_list></call></expr></else></ternary></expr></argument>,
			<argument><expr><name pos:line="16" pos:column="25">buf<pos:position pos:line="16" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="30">sizeof <argument_list pos:line="16" pos:column="37">(<argument><expr><name pos:line="16" pos:column="38">buf<pos:position pos:line="16" pos:column="41"/></name></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></sizeof></expr></argument>,
		      <argument><expr><name pos:line="17" pos:column="23">MUTT_CLEAR<pos:position pos:line="17" pos:column="33"/></name> <operator pos:line="17" pos:column="34">|<pos:position pos:line="17" pos:column="35"/></operator> <name pos:line="17" pos:column="36">MUTT_PATTERN<pos:position pos:line="17" pos:column="48"/></name></expr></argument>)<pos:position pos:line="17" pos:column="49"/></argument_list></call> <operator pos:line="17" pos:column="50">!=<pos:position pos:line="17" pos:column="52"/></operator> <literal type="number" pos:line="17" pos:column="53">0<pos:position pos:line="17" pos:column="54"/></literal> <operator pos:line="17" pos:column="55">||<pos:position pos:line="17" pos:column="57"/></operator> <operator pos:line="17" pos:column="58">!<pos:position pos:line="17" pos:column="59"/></operator><name><name pos:line="17" pos:column="59">buf<pos:position pos:line="17" pos:column="62"/></name><index pos:line="17" pos:column="62">[<expr><literal type="number" pos:line="17" pos:column="63">0<pos:position pos:line="17" pos:column="64"/></literal></expr>]<pos:position pos:line="17" pos:column="65"/></index></name></expr>)<pos:position pos:line="17" pos:column="66"/></condition><then pos:line="17" pos:column="66">
      <block type="pseudo"><return pos:line="18" pos:column="7">return <expr><operator pos:line="18" pos:column="14">(<pos:position pos:line="18" pos:column="15"/></operator><operator pos:line="18" pos:column="15">-<pos:position pos:line="18" pos:column="16"/></operator><literal type="number" pos:line="18" pos:column="16">1<pos:position pos:line="18" pos:column="17"/></literal><operator pos:line="18" pos:column="17">)<pos:position pos:line="18" pos:column="18"/></operator></expr>;<pos:position pos:line="18" pos:column="19"/></return></block></then></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">op<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">==<pos:position pos:line="20" pos:column="14"/></operator> <name pos:line="20" pos:column="15">OP_SEARCH<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">||<pos:position pos:line="20" pos:column="27"/></operator> <name pos:line="20" pos:column="28">op<pos:position pos:line="20" pos:column="30"/></name> <operator pos:line="20" pos:column="31">==<pos:position pos:line="20" pos:column="33"/></operator> <name pos:line="20" pos:column="34">OP_SEARCH_NEXT<pos:position pos:line="20" pos:column="48"/></name></expr>)<pos:position pos:line="20" pos:column="49"/></condition><then pos:line="20" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="7">unset_option<pos:position pos:line="21" pos:column="19"/></name> <argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">OPTSEARCHREVERSE<pos:position pos:line="21" pos:column="37"/></name></expr></argument>)<pos:position pos:line="21" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt></block></then>
    <else pos:line="22" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="7">set_option<pos:position pos:line="23" pos:column="17"/></name> <argument_list pos:line="23" pos:column="18">(<argument><expr><name pos:line="23" pos:column="19">OPTSEARCHREVERSE<pos:position pos:line="23" pos:column="35"/></name></expr></argument>)<pos:position pos:line="23" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="25" pos:column="5">/* compare the *expanded* version of the search pattern in case 
       $simple_search has changed while we were searching */</comment>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">strfcpy<pos:position pos:line="27" pos:column="12"/></name> <argument_list pos:line="27" pos:column="13">(<argument><expr><name pos:line="27" pos:column="14">temp<pos:position pos:line="27" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="20">buf<pos:position pos:line="27" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="25">sizeof <argument_list pos:line="27" pos:column="32">(<argument><expr><name pos:line="27" pos:column="33">temp<pos:position pos:line="27" pos:column="37"/></name></expr></argument>)<pos:position pos:line="27" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">mutt_check_simple<pos:position pos:line="28" pos:column="22"/></name> <argument_list pos:line="28" pos:column="23">(<argument><expr><name pos:line="28" pos:column="24">temp<pos:position pos:line="28" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="30">sizeof <argument_list pos:line="28" pos:column="37">(<argument><expr><name pos:line="28" pos:column="38">temp<pos:position pos:line="28" pos:column="42"/></name></expr></argument>)<pos:position pos:line="28" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="45">NONULL<pos:position pos:line="28" pos:column="51"/></name> <argument_list pos:line="28" pos:column="52">(<argument><expr><name pos:line="28" pos:column="53">SimpleSearch<pos:position pos:line="28" pos:column="65"/></name></expr></argument>)<pos:position pos:line="28" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="68"/></expr_stmt>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">!<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">SearchPattern<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">||<pos:position pos:line="30" pos:column="26"/></operator> <call><name pos:line="30" pos:column="27">mutt_strcmp<pos:position pos:line="30" pos:column="38"/></name> <argument_list pos:line="30" pos:column="39">(<argument><expr><name pos:line="30" pos:column="40">temp<pos:position pos:line="30" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="46">LastSearchExpn<pos:position pos:line="30" pos:column="60"/></name></expr></argument>)<pos:position pos:line="30" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="62"/></condition><then pos:line="30" pos:column="62">
    <block pos:line="31" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="32" pos:column="7">BUFFER<pos:position pos:line="32" pos:column="13"/></name></type> <name pos:line="32" pos:column="14">err<pos:position pos:line="32" pos:column="17"/></name></decl>;<pos:position pos:line="32" pos:column="18"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">mutt_buffer_init<pos:position pos:line="33" pos:column="23"/></name> <argument_list pos:line="33" pos:column="24">(<argument><expr><operator pos:line="33" pos:column="25">&amp;<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="26">err<pos:position pos:line="33" pos:column="29"/></name></expr></argument>)<pos:position pos:line="33" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">set_option<pos:position pos:line="34" pos:column="17"/></name> <argument_list pos:line="34" pos:column="18">(<argument><expr><name pos:line="34" pos:column="19">OPTSEARCHINVALID<pos:position pos:line="34" pos:column="35"/></name></expr></argument>)<pos:position pos:line="34" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="35" pos:column="7">strfcpy<pos:position pos:line="35" pos:column="14"/></name> <argument_list pos:line="35" pos:column="15">(<argument><expr><name pos:line="35" pos:column="16">LastSearch<pos:position pos:line="35" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="28">buf<pos:position pos:line="35" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="33">sizeof <argument_list pos:line="35" pos:column="40">(<argument><expr><name pos:line="35" pos:column="41">LastSearch<pos:position pos:line="35" pos:column="51"/></name></expr></argument>)<pos:position pos:line="35" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="54"/></expr_stmt>
      <decl_stmt><decl><type><name pos:line="36" pos:column="7">mutt_message<pos:position pos:line="36" pos:column="19"/></name></type> <name pos:line="36" pos:column="20">_<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><literal type="string" pos:line="36" pos:column="22">"Compiling search pattern..."<pos:position pos:line="36" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="52"/></argument_list></decl>;<pos:position pos:line="36" pos:column="53"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="37" pos:column="7">mutt_pattern_free<pos:position pos:line="37" pos:column="24"/></name> <argument_list pos:line="37" pos:column="25">(<argument><expr><operator pos:line="37" pos:column="26">&amp;<pos:position pos:line="37" pos:column="31"/></operator><name pos:line="37" pos:column="27">SearchPattern<pos:position pos:line="37" pos:column="40"/></name></expr></argument>)<pos:position pos:line="37" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="38" pos:column="7">err<pos:position pos:line="38" pos:column="10"/></name><operator pos:line="38" pos:column="10">.<pos:position pos:line="38" pos:column="11"/></operator><name pos:line="38" pos:column="11">dsize<pos:position pos:line="38" pos:column="16"/></name></name> <operator pos:line="38" pos:column="17">=<pos:position pos:line="38" pos:column="18"/></operator> <name pos:line="38" pos:column="19">STRING<pos:position pos:line="38" pos:column="25"/></name></expr>;<pos:position pos:line="38" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="39" pos:column="7">err<pos:position pos:line="39" pos:column="10"/></name><operator pos:line="39" pos:column="10">.<pos:position pos:line="39" pos:column="11"/></operator><name pos:line="39" pos:column="11">data<pos:position pos:line="39" pos:column="15"/></name></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <call><name pos:line="39" pos:column="18">safe_malloc<pos:position pos:line="39" pos:column="29"/></name> <argument_list pos:line="39" pos:column="30">(<argument><expr><name><name pos:line="39" pos:column="31">err<pos:position pos:line="39" pos:column="34"/></name><operator pos:line="39" pos:column="34">.<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="35">dsize<pos:position pos:line="39" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="42"/></expr_stmt>
      <if pos:line="40" pos:column="7">if <condition pos:line="40" pos:column="10">(<expr><operator pos:line="40" pos:column="11">(<pos:position pos:line="40" pos:column="12"/></operator><name pos:line="40" pos:column="12">SearchPattern<pos:position pos:line="40" pos:column="25"/></name> <operator pos:line="40" pos:column="26">=<pos:position pos:line="40" pos:column="27"/></operator> <call><name pos:line="40" pos:column="28">mutt_pattern_comp<pos:position pos:line="40" pos:column="45"/></name> <argument_list pos:line="40" pos:column="46">(<argument><expr><name pos:line="40" pos:column="47">temp<pos:position pos:line="40" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="53">MUTT_FULL_MSG<pos:position pos:line="40" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="68">&amp;<pos:position pos:line="40" pos:column="73"/></operator><name pos:line="40" pos:column="69">err<pos:position pos:line="40" pos:column="72"/></name></expr></argument>)<pos:position pos:line="40" pos:column="73"/></argument_list></call><operator pos:line="40" pos:column="73">)<pos:position pos:line="40" pos:column="74"/></operator> <operator pos:line="40" pos:column="75">==<pos:position pos:line="40" pos:column="77"/></operator> <name pos:line="40" pos:column="78">NULL<pos:position pos:line="40" pos:column="82"/></name></expr>)<pos:position pos:line="40" pos:column="83"/></condition><then pos:line="40" pos:column="83">
      <block pos:line="41" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">mutt_error<pos:position pos:line="42" pos:column="19"/></name> <argument_list pos:line="42" pos:column="20">(<argument><expr><literal type="string" pos:line="42" pos:column="21">"%s"<pos:position pos:line="42" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="27">err<pos:position pos:line="42" pos:column="30"/></name><operator pos:line="42" pos:column="30">.<pos:position pos:line="42" pos:column="31"/></operator><name pos:line="42" pos:column="31">data<pos:position pos:line="42" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">FREE<pos:position pos:line="43" pos:column="13"/></name> <argument_list pos:line="43" pos:column="14">(<argument><expr><operator pos:line="43" pos:column="15">&amp;<pos:position pos:line="43" pos:column="20"/></operator><name><name pos:line="43" pos:column="16">err<pos:position pos:line="43" pos:column="19"/></name><operator pos:line="43" pos:column="19">.<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="20">data<pos:position pos:line="43" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="44" pos:column="9">LastSearch<pos:position pos:line="44" pos:column="19"/></name><index pos:line="44" pos:column="19">[<expr><literal type="number" pos:line="44" pos:column="20">0<pos:position pos:line="44" pos:column="21"/></literal></expr>]<pos:position pos:line="44" pos:column="22"/></index></name> <operator pos:line="44" pos:column="23">=<pos:position pos:line="44" pos:column="24"/></operator> <literal type="char" pos:line="44" pos:column="25">'\0'<pos:position pos:line="44" pos:column="29"/></literal></expr>;<pos:position pos:line="44" pos:column="30"/></expr_stmt>
	<return pos:line="45" pos:column="9">return <expr><operator pos:line="45" pos:column="16">(<pos:position pos:line="45" pos:column="17"/></operator><operator pos:line="45" pos:column="17">-<pos:position pos:line="45" pos:column="18"/></operator><literal type="number" pos:line="45" pos:column="18">1<pos:position pos:line="45" pos:column="19"/></literal><operator pos:line="45" pos:column="19">)<pos:position pos:line="45" pos:column="20"/></operator></expr>;<pos:position pos:line="45" pos:column="21"/></return>
      }<pos:position pos:line="46" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="47" pos:column="7">mutt_clear_error<pos:position pos:line="47" pos:column="23"/></name> <argument_list pos:line="47" pos:column="24">()<pos:position pos:line="47" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>
  }<pos:position pos:line="49" pos:column="4"/></block></then></if>

  <if pos:line="51" pos:column="3">if <condition pos:line="51" pos:column="6">(<expr><call><name pos:line="51" pos:column="7">option<pos:position pos:line="51" pos:column="13"/></name> <argument_list pos:line="51" pos:column="14">(<argument><expr><name pos:line="51" pos:column="15">OPTSEARCHINVALID<pos:position pos:line="51" pos:column="31"/></name></expr></argument>)<pos:position pos:line="51" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="33"/></condition><then pos:line="51" pos:column="33">
  <block pos:line="52" pos:column="3">{
    <for pos:line="53" pos:column="5">for <control pos:line="53" pos:column="9">(<init><expr><name pos:line="53" pos:column="10">i<pos:position pos:line="53" pos:column="11"/></name> <operator pos:line="53" pos:column="12">=<pos:position pos:line="53" pos:column="13"/></operator> <literal type="number" pos:line="53" pos:column="14">0<pos:position pos:line="53" pos:column="15"/></literal></expr>;<pos:position pos:line="53" pos:column="16"/></init> <condition><expr><name pos:line="53" pos:column="17">i<pos:position pos:line="53" pos:column="18"/></name> <operator pos:line="53" pos:column="19">&lt;<pos:position pos:line="53" pos:column="23"/></operator> <name><name pos:line="53" pos:column="21">Context<pos:position pos:line="53" pos:column="28"/></name><operator pos:line="53" pos:column="28">-&gt;<pos:position pos:line="53" pos:column="33"/></operator><name pos:line="53" pos:column="30">msgcount<pos:position pos:line="53" pos:column="38"/></name></name></expr>;<pos:position pos:line="53" pos:column="39"/></condition> <incr><expr><name pos:line="53" pos:column="40">i<pos:position pos:line="53" pos:column="41"/></name><operator pos:line="53" pos:column="41">++<pos:position pos:line="53" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="53" pos:column="44"/></control>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="54" pos:column="7">Context<pos:position pos:line="54" pos:column="14"/></name><operator pos:line="54" pos:column="14">-&gt;<pos:position pos:line="54" pos:column="19"/></operator><name pos:line="54" pos:column="16">hdrs<pos:position pos:line="54" pos:column="20"/></name><index pos:line="54" pos:column="20">[<expr><name pos:line="54" pos:column="21">i<pos:position pos:line="54" pos:column="22"/></name></expr>]<pos:position pos:line="54" pos:column="23"/></index></name><operator pos:line="54" pos:column="23">-&gt;<pos:position pos:line="54" pos:column="28"/></operator><name pos:line="54" pos:column="25">searched<pos:position pos:line="54" pos:column="33"/></name> <operator pos:line="54" pos:column="34">=<pos:position pos:line="54" pos:column="35"/></operator> <literal type="number" pos:line="54" pos:column="36">0<pos:position pos:line="54" pos:column="37"/></literal></expr>;<pos:position pos:line="54" pos:column="38"/></expr_stmt></block></for>
<cpp:ifdef pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">ifdef<pos:position pos:line="55" pos:column="7"/></cpp:directive> <name pos:line="55" pos:column="8">USE_IMAP<pos:position pos:line="55" pos:column="16"/></name></cpp:ifdef>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name><name pos:line="56" pos:column="9">Context<pos:position pos:line="56" pos:column="16"/></name><operator pos:line="56" pos:column="16">-&gt;<pos:position pos:line="56" pos:column="21"/></operator><name pos:line="56" pos:column="18">magic<pos:position pos:line="56" pos:column="23"/></name></name> <operator pos:line="56" pos:column="24">==<pos:position pos:line="56" pos:column="26"/></operator> <name pos:line="56" pos:column="27">MUTT_IMAP<pos:position pos:line="56" pos:column="36"/></name> <operator pos:line="56" pos:column="37">&amp;&amp;<pos:position pos:line="56" pos:column="47"/></operator> <call><name pos:line="56" pos:column="40">imap_search<pos:position pos:line="56" pos:column="51"/></name> <argument_list pos:line="56" pos:column="52">(<argument><expr><name pos:line="56" pos:column="53">Context<pos:position pos:line="56" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="62">SearchPattern<pos:position pos:line="56" pos:column="75"/></name></expr></argument>)<pos:position pos:line="56" pos:column="76"/></argument_list></call> <operator pos:line="56" pos:column="77">&lt;<pos:position pos:line="56" pos:column="81"/></operator> <literal type="number" pos:line="56" pos:column="79">0<pos:position pos:line="56" pos:column="80"/></literal></expr>)<pos:position pos:line="56" pos:column="81"/></condition><then pos:line="56" pos:column="81">
      <block type="pseudo"><return pos:line="57" pos:column="7">return <expr><operator pos:line="57" pos:column="14">-<pos:position pos:line="57" pos:column="15"/></operator><literal type="number" pos:line="57" pos:column="15">1<pos:position pos:line="57" pos:column="16"/></literal></expr>;<pos:position pos:line="57" pos:column="17"/></return></block></then></if>
<cpp:endif pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">endif<pos:position pos:line="58" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">unset_option<pos:position pos:line="59" pos:column="17"/></name> <argument_list pos:line="59" pos:column="18">(<argument><expr><name pos:line="59" pos:column="19">OPTSEARCHINVALID<pos:position pos:line="59" pos:column="35"/></name></expr></argument>)<pos:position pos:line="59" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="60" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="62" pos:column="3">incr<pos:position pos:line="62" pos:column="7"/></name> <operator pos:line="62" pos:column="8">=<pos:position pos:line="62" pos:column="9"/></operator> <ternary><condition><expr><operator pos:line="62" pos:column="10">(<pos:position pos:line="62" pos:column="11"/></operator><call><name pos:line="62" pos:column="11">option<pos:position pos:line="62" pos:column="17"/></name> <argument_list pos:line="62" pos:column="18">(<argument><expr><name pos:line="62" pos:column="19">OPTSEARCHREVERSE<pos:position pos:line="62" pos:column="35"/></name></expr></argument>)<pos:position pos:line="62" pos:column="36"/></argument_list></call><operator pos:line="62" pos:column="36">)<pos:position pos:line="62" pos:column="37"/></operator></expr> ?<pos:position pos:line="62" pos:column="39"/></condition><then pos:line="62" pos:column="39"> <expr><operator pos:line="62" pos:column="40">-<pos:position pos:line="62" pos:column="41"/></operator><literal type="number" pos:line="62" pos:column="41">1<pos:position pos:line="62" pos:column="42"/></literal></expr> <pos:position pos:line="62" pos:column="43"/></then><else pos:line="62" pos:column="43">: <expr><literal type="number" pos:line="62" pos:column="45">1<pos:position pos:line="62" pos:column="46"/></literal></expr></else></ternary></expr>;<pos:position pos:line="62" pos:column="47"/></expr_stmt>
  <if pos:line="63" pos:column="3">if <condition pos:line="63" pos:column="6">(<expr><name pos:line="63" pos:column="7">op<pos:position pos:line="63" pos:column="9"/></name> <operator pos:line="63" pos:column="10">==<pos:position pos:line="63" pos:column="12"/></operator> <name pos:line="63" pos:column="13">OP_SEARCH_OPPOSITE<pos:position pos:line="63" pos:column="31"/></name></expr>)<pos:position pos:line="63" pos:column="32"/></condition><then pos:line="63" pos:column="32">
    <block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="5">incr<pos:position pos:line="64" pos:column="9"/></name> <operator pos:line="64" pos:column="10">=<pos:position pos:line="64" pos:column="11"/></operator> <operator pos:line="64" pos:column="12">-<pos:position pos:line="64" pos:column="13"/></operator><name pos:line="64" pos:column="13">incr<pos:position pos:line="64" pos:column="17"/></name></expr>;<pos:position pos:line="64" pos:column="18"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="66" pos:column="3">mutt_progress_init<pos:position pos:line="66" pos:column="21"/></name> <argument_list pos:line="66" pos:column="22">(<argument><expr><operator pos:line="66" pos:column="23">&amp;<pos:position pos:line="66" pos:column="28"/></operator><name pos:line="66" pos:column="24">progress<pos:position pos:line="66" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="66" pos:column="34">_<pos:position pos:line="66" pos:column="35"/></name><argument_list pos:line="66" pos:column="35">(<argument><expr><literal type="string" pos:line="66" pos:column="36">"Searching..."<pos:position pos:line="66" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="66" pos:column="53">MUTT_PROGRESS_MSG<pos:position pos:line="66" pos:column="70"/></name></expr></argument>,
		      <argument><expr><name pos:line="67" pos:column="23">ReadInc<pos:position pos:line="67" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="32">Context<pos:position pos:line="67" pos:column="39"/></name><operator pos:line="67" pos:column="39">-&gt;<pos:position pos:line="67" pos:column="44"/></operator><name pos:line="67" pos:column="41">vcount<pos:position pos:line="67" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="49"/></expr_stmt>

  <for pos:line="69" pos:column="3">for <control pos:line="69" pos:column="7">(<init><expr><name pos:line="69" pos:column="8">i<pos:position pos:line="69" pos:column="9"/></name> <operator pos:line="69" pos:column="10">=<pos:position pos:line="69" pos:column="11"/></operator> <name pos:line="69" pos:column="12">cur<pos:position pos:line="69" pos:column="15"/></name> <operator pos:line="69" pos:column="16">+<pos:position pos:line="69" pos:column="17"/></operator> <name pos:line="69" pos:column="18">incr<pos:position pos:line="69" pos:column="22"/></name></expr><operator pos:line="69" pos:column="22">,<pos:position pos:line="69" pos:column="23"/></operator> <expr><name pos:line="69" pos:column="24">j<pos:position pos:line="69" pos:column="25"/></name> <operator pos:line="69" pos:column="26">=<pos:position pos:line="69" pos:column="27"/></operator> <literal type="number" pos:line="69" pos:column="28">0<pos:position pos:line="69" pos:column="29"/></literal></expr> ;<pos:position pos:line="69" pos:column="31"/></init> <condition><expr><name pos:line="69" pos:column="32">j<pos:position pos:line="69" pos:column="33"/></name> <operator pos:line="69" pos:column="34">!=<pos:position pos:line="69" pos:column="36"/></operator> <name><name pos:line="69" pos:column="37">Context<pos:position pos:line="69" pos:column="44"/></name><operator pos:line="69" pos:column="44">-&gt;<pos:position pos:line="69" pos:column="49"/></operator><name pos:line="69" pos:column="46">vcount<pos:position pos:line="69" pos:column="52"/></name></name></expr>;<pos:position pos:line="69" pos:column="53"/></condition> <incr><expr><name pos:line="69" pos:column="54">j<pos:position pos:line="69" pos:column="55"/></name><operator pos:line="69" pos:column="55">++<pos:position pos:line="69" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="69" pos:column="58"/></control>
  <block pos:line="70" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">mutt_progress_update<pos:position pos:line="71" pos:column="25"/></name> <argument_list pos:line="71" pos:column="26">(<argument><expr><operator pos:line="71" pos:column="27">&amp;<pos:position pos:line="71" pos:column="32"/></operator><name pos:line="71" pos:column="28">progress<pos:position pos:line="71" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="38">j<pos:position pos:line="71" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="41">-<pos:position pos:line="71" pos:column="42"/></operator><literal type="number" pos:line="71" pos:column="42">1<pos:position pos:line="71" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="45"/></expr_stmt>
    <if pos:line="72" pos:column="5">if <condition pos:line="72" pos:column="8">(<expr><name pos:line="72" pos:column="9">i<pos:position pos:line="72" pos:column="10"/></name> <operator pos:line="72" pos:column="11">&gt;<pos:position pos:line="72" pos:column="15"/></operator> <name><name pos:line="72" pos:column="13">Context<pos:position pos:line="72" pos:column="20"/></name><operator pos:line="72" pos:column="20">-&gt;<pos:position pos:line="72" pos:column="25"/></operator><name pos:line="72" pos:column="22">vcount<pos:position pos:line="72" pos:column="28"/></name></name> <operator pos:line="72" pos:column="29">-<pos:position pos:line="72" pos:column="30"/></operator> <literal type="number" pos:line="72" pos:column="31">1<pos:position pos:line="72" pos:column="32"/></literal></expr>)<pos:position pos:line="72" pos:column="33"/></condition><then pos:line="72" pos:column="33">
    <block pos:line="73" pos:column="5">{
      <expr_stmt><expr><name pos:line="74" pos:column="7">i<pos:position pos:line="74" pos:column="8"/></name> <operator pos:line="74" pos:column="9">=<pos:position pos:line="74" pos:column="10"/></operator> <literal type="number" pos:line="74" pos:column="11">0<pos:position pos:line="74" pos:column="12"/></literal></expr>;<pos:position pos:line="74" pos:column="13"/></expr_stmt>
      <if pos:line="75" pos:column="7">if <condition pos:line="75" pos:column="10">(<expr><call><name pos:line="75" pos:column="11">option<pos:position pos:line="75" pos:column="17"/></name> <argument_list pos:line="75" pos:column="18">(<argument><expr><name pos:line="75" pos:column="19">OPTWRAPSEARCH<pos:position pos:line="75" pos:column="32"/></name></expr></argument>)<pos:position pos:line="75" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="75" pos:column="34"/></condition><then pos:line="75" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><name pos:line="76" pos:column="9">msg<pos:position pos:line="76" pos:column="12"/></name> <operator pos:line="76" pos:column="13">=<pos:position pos:line="76" pos:column="14"/></operator> <call><name pos:line="76" pos:column="15">_<pos:position pos:line="76" pos:column="16"/></name><argument_list pos:line="76" pos:column="16">(<argument><expr><literal type="string" pos:line="76" pos:column="17">"Search wrapped to top."<pos:position pos:line="76" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="43"/></expr_stmt></block></then>
      <else pos:line="77" pos:column="7">else 
      <block pos:line="78" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="79" pos:column="9">mutt_message<pos:position pos:line="79" pos:column="21"/></name></type> <name pos:line="79" pos:column="22">_<pos:position pos:line="79" pos:column="23"/></name><argument_list pos:line="79" pos:column="23">(<argument><expr><literal type="string" pos:line="79" pos:column="24">"Search hit bottom without finding match"<pos:position pos:line="79" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="66"/></argument_list></decl>;<pos:position pos:line="79" pos:column="67"/></decl_stmt>
	<return pos:line="80" pos:column="9">return <expr><operator pos:line="80" pos:column="16">(<pos:position pos:line="80" pos:column="17"/></operator><operator pos:line="80" pos:column="17">-<pos:position pos:line="80" pos:column="18"/></operator><literal type="number" pos:line="80" pos:column="18">1<pos:position pos:line="80" pos:column="19"/></literal><operator pos:line="80" pos:column="19">)<pos:position pos:line="80" pos:column="20"/></operator></expr>;<pos:position pos:line="80" pos:column="21"/></return>
      }<pos:position pos:line="81" pos:column="8"/></block></else></if>
    }<pos:position pos:line="82" pos:column="6"/></block></then>
    <elseif pos:line="83" pos:column="5">else <if pos:line="83" pos:column="10">if <condition pos:line="83" pos:column="13">(<expr><name pos:line="83" pos:column="14">i<pos:position pos:line="83" pos:column="15"/></name> <operator pos:line="83" pos:column="16">&lt;<pos:position pos:line="83" pos:column="20"/></operator> <literal type="number" pos:line="83" pos:column="18">0<pos:position pos:line="83" pos:column="19"/></literal></expr>)<pos:position pos:line="83" pos:column="20"/></condition><then pos:line="83" pos:column="20">
    <block pos:line="84" pos:column="5">{
      <expr_stmt><expr><name pos:line="85" pos:column="7">i<pos:position pos:line="85" pos:column="8"/></name> <operator pos:line="85" pos:column="9">=<pos:position pos:line="85" pos:column="10"/></operator> <name><name pos:line="85" pos:column="11">Context<pos:position pos:line="85" pos:column="18"/></name><operator pos:line="85" pos:column="18">-&gt;<pos:position pos:line="85" pos:column="23"/></operator><name pos:line="85" pos:column="20">vcount<pos:position pos:line="85" pos:column="26"/></name></name> <operator pos:line="85" pos:column="27">-<pos:position pos:line="85" pos:column="28"/></operator> <literal type="number" pos:line="85" pos:column="29">1<pos:position pos:line="85" pos:column="30"/></literal></expr>;<pos:position pos:line="85" pos:column="31"/></expr_stmt>
      <if pos:line="86" pos:column="7">if <condition pos:line="86" pos:column="10">(<expr><call><name pos:line="86" pos:column="11">option<pos:position pos:line="86" pos:column="17"/></name> <argument_list pos:line="86" pos:column="18">(<argument><expr><name pos:line="86" pos:column="19">OPTWRAPSEARCH<pos:position pos:line="86" pos:column="32"/></name></expr></argument>)<pos:position pos:line="86" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="86" pos:column="34"/></condition><then pos:line="86" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><name pos:line="87" pos:column="9">msg<pos:position pos:line="87" pos:column="12"/></name> <operator pos:line="87" pos:column="13">=<pos:position pos:line="87" pos:column="14"/></operator> <call><name pos:line="87" pos:column="15">_<pos:position pos:line="87" pos:column="16"/></name><argument_list pos:line="87" pos:column="16">(<argument><expr><literal type="string" pos:line="87" pos:column="17">"Search wrapped to bottom."<pos:position pos:line="87" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="46"/></expr_stmt></block></then>
      <else pos:line="88" pos:column="7">else 
      <block pos:line="89" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="90" pos:column="9">mutt_message<pos:position pos:line="90" pos:column="21"/></name></type> <name pos:line="90" pos:column="22">_<pos:position pos:line="90" pos:column="23"/></name><argument_list pos:line="90" pos:column="23">(<argument><expr><literal type="string" pos:line="90" pos:column="24">"Search hit top without finding match"<pos:position pos:line="90" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="63"/></argument_list></decl>;<pos:position pos:line="90" pos:column="64"/></decl_stmt>
	<return pos:line="91" pos:column="9">return <expr><operator pos:line="91" pos:column="16">(<pos:position pos:line="91" pos:column="17"/></operator><operator pos:line="91" pos:column="17">-<pos:position pos:line="91" pos:column="18"/></operator><literal type="number" pos:line="91" pos:column="18">1<pos:position pos:line="91" pos:column="19"/></literal><operator pos:line="91" pos:column="19">)<pos:position pos:line="91" pos:column="20"/></operator></expr>;<pos:position pos:line="91" pos:column="21"/></return>
      }<pos:position pos:line="92" pos:column="8"/></block></else></if>
    }<pos:position pos:line="93" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><name pos:line="95" pos:column="5">h<pos:position pos:line="95" pos:column="6"/></name> <operator pos:line="95" pos:column="7">=<pos:position pos:line="95" pos:column="8"/></operator> <name><name pos:line="95" pos:column="9">Context<pos:position pos:line="95" pos:column="16"/></name><operator pos:line="95" pos:column="16">-&gt;<pos:position pos:line="95" pos:column="21"/></operator><name pos:line="95" pos:column="18">hdrs<pos:position pos:line="95" pos:column="22"/></name><index pos:line="95" pos:column="22">[<expr><name><name pos:line="95" pos:column="23">Context<pos:position pos:line="95" pos:column="30"/></name><operator pos:line="95" pos:column="30">-&gt;<pos:position pos:line="95" pos:column="35"/></operator><name pos:line="95" pos:column="32">v2r<pos:position pos:line="95" pos:column="35"/></name><index pos:line="95" pos:column="35">[<expr><name pos:line="95" pos:column="36">i<pos:position pos:line="95" pos:column="37"/></name></expr>]<pos:position pos:line="95" pos:column="38"/></index></name></expr>]<pos:position pos:line="95" pos:column="39"/></index></name></expr>;<pos:position pos:line="95" pos:column="40"/></expr_stmt>
    <if pos:line="96" pos:column="5">if <condition pos:line="96" pos:column="8">(<expr><name><name pos:line="96" pos:column="9">h<pos:position pos:line="96" pos:column="10"/></name><operator pos:line="96" pos:column="10">-&gt;<pos:position pos:line="96" pos:column="15"/></operator><name pos:line="96" pos:column="12">searched<pos:position pos:line="96" pos:column="20"/></name></name></expr>)<pos:position pos:line="96" pos:column="21"/></condition><then pos:line="96" pos:column="21">
    <block pos:line="97" pos:column="5">{
      <comment type="block" pos:line="98" pos:column="7">/* if we've already evaluated this message, use the cached value */</comment>
      <if pos:line="99" pos:column="7">if <condition pos:line="99" pos:column="10">(<expr><name><name pos:line="99" pos:column="11">h<pos:position pos:line="99" pos:column="12"/></name><operator pos:line="99" pos:column="12">-&gt;<pos:position pos:line="99" pos:column="17"/></operator><name pos:line="99" pos:column="14">matched<pos:position pos:line="99" pos:column="21"/></name></name></expr>)<pos:position pos:line="99" pos:column="22"/></condition><then pos:line="99" pos:column="22">
      <block pos:line="100" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="101" pos:column="9">mutt_clear_error<pos:position pos:line="101" pos:column="25"/></name><argument_list pos:line="101" pos:column="25">()<pos:position pos:line="101" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="28"/></expr_stmt>
	<if pos:line="102" pos:column="9">if <condition pos:line="102" pos:column="12">(<expr><name pos:line="102" pos:column="13">msg<pos:position pos:line="102" pos:column="16"/></name> <operator pos:line="102" pos:column="17">&amp;&amp;<pos:position pos:line="102" pos:column="27"/></operator> <operator pos:line="102" pos:column="20">*<pos:position pos:line="102" pos:column="21"/></operator><name pos:line="102" pos:column="21">msg<pos:position pos:line="102" pos:column="24"/></name></expr>)<pos:position pos:line="102" pos:column="25"/></condition><then pos:line="102" pos:column="25">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="103" pos:column="11">mutt_message<pos:position pos:line="103" pos:column="23"/></name> <argument_list pos:line="103" pos:column="24">(<argument><expr><name pos:line="103" pos:column="25">msg<pos:position pos:line="103" pos:column="28"/></name></expr></argument>)<pos:position pos:line="103" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="30"/></expr_stmt></block></then></if>
	<return pos:line="104" pos:column="9">return <expr><name pos:line="104" pos:column="16">i<pos:position pos:line="104" pos:column="17"/></name></expr>;<pos:position pos:line="104" pos:column="18"/></return>
      }<pos:position pos:line="105" pos:column="8"/></block></then></if>
    }<pos:position pos:line="106" pos:column="6"/></block></then>
    <else pos:line="107" pos:column="5">else
    <block pos:line="108" pos:column="5">{
      <comment type="block" pos:line="109" pos:column="7">/* remember that we've already searched this message */</comment>
      <expr_stmt><expr><name><name pos:line="110" pos:column="7">h<pos:position pos:line="110" pos:column="8"/></name><operator pos:line="110" pos:column="8">-&gt;<pos:position pos:line="110" pos:column="13"/></operator><name pos:line="110" pos:column="10">searched<pos:position pos:line="110" pos:column="18"/></name></name> <operator pos:line="110" pos:column="19">=<pos:position pos:line="110" pos:column="20"/></operator> <literal type="number" pos:line="110" pos:column="21">1<pos:position pos:line="110" pos:column="22"/></literal></expr>;<pos:position pos:line="110" pos:column="23"/></expr_stmt>
      <if pos:line="111" pos:column="7">if <condition pos:line="111" pos:column="10">(<expr><operator pos:line="111" pos:column="11">(<pos:position pos:line="111" pos:column="12"/></operator><name><name pos:line="111" pos:column="12">h<pos:position pos:line="111" pos:column="13"/></name><operator pos:line="111" pos:column="13">-&gt;<pos:position pos:line="111" pos:column="18"/></operator><name pos:line="111" pos:column="15">matched<pos:position pos:line="111" pos:column="22"/></name></name> <operator pos:line="111" pos:column="23">=<pos:position pos:line="111" pos:column="24"/></operator> <operator pos:line="111" pos:column="25">(<pos:position pos:line="111" pos:column="26"/></operator><call><name pos:line="111" pos:column="26">mutt_pattern_exec<pos:position pos:line="111" pos:column="43"/></name> <argument_list pos:line="111" pos:column="44">(<argument><expr><name pos:line="111" pos:column="45">SearchPattern<pos:position pos:line="111" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="60">MUTT_MATCH_FULL_ADDRESS<pos:position pos:line="111" pos:column="83"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="85">Context<pos:position pos:line="111" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="94">h<pos:position pos:line="111" pos:column="95"/></name></expr></argument>)<pos:position pos:line="111" pos:column="96"/></argument_list></call> <operator pos:line="111" pos:column="97">&gt;<pos:position pos:line="111" pos:column="101"/></operator> <literal type="number" pos:line="111" pos:column="99">0<pos:position pos:line="111" pos:column="100"/></literal><operator pos:line="111" pos:column="100">)<pos:position pos:line="111" pos:column="101"/></operator><operator pos:line="111" pos:column="101">)<pos:position pos:line="111" pos:column="102"/></operator></expr>)<pos:position pos:line="111" pos:column="103"/></condition><then pos:line="111" pos:column="103">
      <block pos:line="112" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="113" pos:column="9">mutt_clear_error<pos:position pos:line="113" pos:column="25"/></name><argument_list pos:line="113" pos:column="25">()<pos:position pos:line="113" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="28"/></expr_stmt>
	<if pos:line="114" pos:column="9">if <condition pos:line="114" pos:column="12">(<expr><name pos:line="114" pos:column="13">msg<pos:position pos:line="114" pos:column="16"/></name> <operator pos:line="114" pos:column="17">&amp;&amp;<pos:position pos:line="114" pos:column="27"/></operator> <operator pos:line="114" pos:column="20">*<pos:position pos:line="114" pos:column="21"/></operator><name pos:line="114" pos:column="21">msg<pos:position pos:line="114" pos:column="24"/></name></expr>)<pos:position pos:line="114" pos:column="25"/></condition><then pos:line="114" pos:column="25">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="115" pos:column="11">mutt_message<pos:position pos:line="115" pos:column="23"/></name> <argument_list pos:line="115" pos:column="24">(<argument><expr><name pos:line="115" pos:column="25">msg<pos:position pos:line="115" pos:column="28"/></name></expr></argument>)<pos:position pos:line="115" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="30"/></expr_stmt></block></then></if>
	<return pos:line="116" pos:column="9">return <expr><name pos:line="116" pos:column="16">i<pos:position pos:line="116" pos:column="17"/></name></expr>;<pos:position pos:line="116" pos:column="18"/></return>
      }<pos:position pos:line="117" pos:column="8"/></block></then></if>
    }<pos:position pos:line="118" pos:column="6"/></block></else></if>

    <if pos:line="120" pos:column="5">if <condition pos:line="120" pos:column="8">(<expr><name pos:line="120" pos:column="9">SigInt<pos:position pos:line="120" pos:column="15"/></name></expr>)<pos:position pos:line="120" pos:column="16"/></condition><then pos:line="120" pos:column="16">
    <block pos:line="121" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="122" pos:column="7">mutt_error<pos:position pos:line="122" pos:column="17"/></name></type> <name pos:line="122" pos:column="18">_<pos:position pos:line="122" pos:column="19"/></name><argument_list pos:line="122" pos:column="19">(<argument><expr><literal type="string" pos:line="122" pos:column="20">"Search interrupted."<pos:position pos:line="122" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="42"/></argument_list></decl>;<pos:position pos:line="122" pos:column="43"/></decl_stmt>
      <expr_stmt><expr><name pos:line="123" pos:column="7">SigInt<pos:position pos:line="123" pos:column="13"/></name> <operator pos:line="123" pos:column="14">=<pos:position pos:line="123" pos:column="15"/></operator> <literal type="number" pos:line="123" pos:column="16">0<pos:position pos:line="123" pos:column="17"/></literal></expr>;<pos:position pos:line="123" pos:column="18"/></expr_stmt>
      <return pos:line="124" pos:column="7">return <expr><operator pos:line="124" pos:column="14">(<pos:position pos:line="124" pos:column="15"/></operator><operator pos:line="124" pos:column="15">-<pos:position pos:line="124" pos:column="16"/></operator><literal type="number" pos:line="124" pos:column="16">1<pos:position pos:line="124" pos:column="17"/></literal><operator pos:line="124" pos:column="17">)<pos:position pos:line="124" pos:column="18"/></operator></expr>;<pos:position pos:line="124" pos:column="19"/></return>
    }<pos:position pos:line="125" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="127" pos:column="5">i<pos:position pos:line="127" pos:column="6"/></name> <operator pos:line="127" pos:column="7">+=<pos:position pos:line="127" pos:column="9"/></operator> <name pos:line="127" pos:column="10">incr<pos:position pos:line="127" pos:column="14"/></name></expr>;<pos:position pos:line="127" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="128" pos:column="4"/></block></for>

  <decl_stmt><decl><type><name pos:line="130" pos:column="3">mutt_error<pos:position pos:line="130" pos:column="13"/></name></type> <name pos:line="130" pos:column="14">_<pos:position pos:line="130" pos:column="15"/></name><argument_list pos:line="130" pos:column="15">(<argument><expr><literal type="string" pos:line="130" pos:column="16">"Not found."<pos:position pos:line="130" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="29"/></argument_list></decl>;<pos:position pos:line="130" pos:column="30"/></decl_stmt>
  <return pos:line="131" pos:column="3">return <expr><operator pos:line="131" pos:column="10">(<pos:position pos:line="131" pos:column="11"/></operator><operator pos:line="131" pos:column="11">-<pos:position pos:line="131" pos:column="12"/></operator><literal type="number" pos:line="131" pos:column="12">1<pos:position pos:line="131" pos:column="13"/></literal><operator pos:line="131" pos:column="13">)<pos:position pos:line="131" pos:column="14"/></operator></expr>;<pos:position pos:line="131" pos:column="15"/></return>
}<pos:position pos:line="132" pos:column="2"/></block></function></unit>

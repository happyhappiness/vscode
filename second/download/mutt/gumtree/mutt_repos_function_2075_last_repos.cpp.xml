<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2075_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">imap_subscribe<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">path<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="33">int<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">subscribe<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">IMAP_DATA<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">idata<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buf<pos:position pos:line="4" pos:column="11"/></name><index pos:line="4" pos:column="11">[<expr><name pos:line="4" pos:column="12">LONG_STRING<pos:position pos:line="4" pos:column="23"/></name></expr>]<pos:position pos:line="4" pos:column="24"/></index></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">mbox<pos:position pos:line="5" pos:column="12"/></name><index pos:line="5" pos:column="12">[<expr><name pos:line="5" pos:column="13">LONG_STRING<pos:position pos:line="5" pos:column="24"/></name></expr>]<pos:position pos:line="5" pos:column="25"/></index></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">errstr<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[<expr><name pos:line="6" pos:column="15">STRING<pos:position pos:line="6" pos:column="21"/></name></expr>]<pos:position pos:line="6" pos:column="22"/></index></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">BUFFER<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">err<pos:position pos:line="7" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="15">token<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">IMAP_MBOX<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">mx<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">!<pos:position pos:line="10" pos:column="8"/></operator><call><name pos:line="10" pos:column="8">mx_is_imap<pos:position pos:line="10" pos:column="18"/></name> <argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">path<pos:position pos:line="10" pos:column="24"/></name></expr></argument>)<pos:position pos:line="10" pos:column="25"/></argument_list></call> <operator pos:line="10" pos:column="26">||<pos:position pos:line="10" pos:column="28"/></operator> <call><name pos:line="10" pos:column="29">imap_parse_path<pos:position pos:line="10" pos:column="44"/></name> <argument_list pos:line="10" pos:column="45">(<argument><expr><name pos:line="10" pos:column="46">path<pos:position pos:line="10" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="52">&amp;<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="53">mx<pos:position pos:line="10" pos:column="55"/></name></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call> <operator pos:line="10" pos:column="57">||<pos:position pos:line="10" pos:column="59"/></operator> <operator pos:line="10" pos:column="60">!<pos:position pos:line="10" pos:column="61"/></operator><name><name pos:line="10" pos:column="61">mx<pos:position pos:line="10" pos:column="63"/></name><operator pos:line="10" pos:column="63">.<pos:position pos:line="10" pos:column="64"/></operator><name pos:line="10" pos:column="64">mbox<pos:position pos:line="10" pos:column="68"/></name></name></expr>)<pos:position pos:line="10" pos:column="69"/></condition><then pos:line="10" pos:column="69">
  <block pos:line="11" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">mutt_error<pos:position pos:line="12" pos:column="15"/></name> <argument_list pos:line="12" pos:column="16">(<argument><expr><call><name pos:line="12" pos:column="17">_<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><literal type="string" pos:line="12" pos:column="19">"Bad mailbox name"<pos:position pos:line="12" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">-<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">1<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><operator pos:line="15" pos:column="7">!<pos:position pos:line="15" pos:column="8"/></operator><operator pos:line="15" pos:column="8">(<pos:position pos:line="15" pos:column="9"/></operator><name pos:line="15" pos:column="9">idata<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <call><name pos:line="15" pos:column="17">imap_conn_find<pos:position pos:line="15" pos:column="31"/></name> <argument_list pos:line="15" pos:column="32">(<argument><expr><operator pos:line="15" pos:column="33">&amp;<pos:position pos:line="15" pos:column="38"/></operator><operator pos:line="15" pos:column="34">(<pos:position pos:line="15" pos:column="35"/></operator><name><name pos:line="15" pos:column="35">mx<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">.<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="38">account<pos:position pos:line="15" pos:column="45"/></name></name><operator pos:line="15" pos:column="45">)<pos:position pos:line="15" pos:column="46"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="48">0<pos:position pos:line="15" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call><operator pos:line="15" pos:column="50">)<pos:position pos:line="15" pos:column="51"/></operator></expr>)<pos:position pos:line="15" pos:column="52"/></condition><then pos:line="15" pos:column="52">
    <block type="pseudo"><goto pos:line="16" pos:column="5">goto <name pos:line="16" pos:column="10">fail<pos:position pos:line="16" pos:column="14"/></name>;<pos:position pos:line="16" pos:column="15"/></goto></block></then></if>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">imap_fix_path<pos:position pos:line="18" pos:column="16"/></name> <argument_list pos:line="18" pos:column="17">(<argument><expr><name pos:line="18" pos:column="18">idata<pos:position pos:line="18" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="25">mx<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">.<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="28">mbox<pos:position pos:line="18" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="34">buf<pos:position pos:line="18" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="39">sizeof <argument_list pos:line="18" pos:column="46">(<argument><expr><name pos:line="18" pos:column="47">buf<pos:position pos:line="18" pos:column="50"/></name></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><operator pos:line="19" pos:column="7">!<pos:position pos:line="19" pos:column="8"/></operator><operator pos:line="19" pos:column="8">*<pos:position pos:line="19" pos:column="9"/></operator><name pos:line="19" pos:column="9">buf<pos:position pos:line="19" pos:column="12"/></name></expr>)<pos:position pos:line="19" pos:column="13"/></condition><then pos:line="19" pos:column="13">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="5">strfcpy<pos:position pos:line="20" pos:column="12"/></name> <argument_list pos:line="20" pos:column="13">(<argument><expr><name pos:line="20" pos:column="14">buf<pos:position pos:line="20" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="19">"INBOX"<pos:position pos:line="20" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="28">sizeof <argument_list pos:line="20" pos:column="35">(<argument><expr><name pos:line="20" pos:column="36">buf<pos:position pos:line="20" pos:column="39"/></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="42"/></expr_stmt></block></then></if>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><call><name pos:line="22" pos:column="7">option<pos:position pos:line="22" pos:column="13"/></name> <argument_list pos:line="22" pos:column="14">(<argument><expr><name pos:line="22" pos:column="15">OPTIMAPCHECKSUBSCRIBED<pos:position pos:line="22" pos:column="37"/></name></expr></argument>)<pos:position pos:line="22" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="39"/></condition><then pos:line="22" pos:column="39">
  <block pos:line="23" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">mutt_buffer_init<pos:position pos:line="24" pos:column="21"/></name> <argument_list pos:line="24" pos:column="22">(<argument><expr><operator pos:line="24" pos:column="23">&amp;<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="24">token<pos:position pos:line="24" pos:column="29"/></name></expr></argument>)<pos:position pos:line="24" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">mutt_buffer_init<pos:position pos:line="25" pos:column="21"/></name> <argument_list pos:line="25" pos:column="22">(<argument><expr><operator pos:line="25" pos:column="23">&amp;<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="24">err<pos:position pos:line="25" pos:column="27"/></name></expr></argument>)<pos:position pos:line="25" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">err<pos:position pos:line="26" pos:column="8"/></name><operator pos:line="26" pos:column="8">.<pos:position pos:line="26" pos:column="9"/></operator><name pos:line="26" pos:column="9">data<pos:position pos:line="26" pos:column="13"/></name></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <name pos:line="26" pos:column="16">errstr<pos:position pos:line="26" pos:column="22"/></name></expr>;<pos:position pos:line="26" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">err<pos:position pos:line="27" pos:column="8"/></name><operator pos:line="27" pos:column="8">.<pos:position pos:line="27" pos:column="9"/></operator><name pos:line="27" pos:column="9">dsize<pos:position pos:line="27" pos:column="14"/></name></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <sizeof pos:line="27" pos:column="17">sizeof <argument_list pos:line="27" pos:column="24">(<argument><expr><name pos:line="27" pos:column="25">errstr<pos:position pos:line="27" pos:column="31"/></name></expr></argument>)<pos:position pos:line="27" pos:column="32"/></argument_list></sizeof></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">snprintf<pos:position pos:line="28" pos:column="13"/></name> <argument_list pos:line="28" pos:column="14">(<argument><expr><name pos:line="28" pos:column="15">mbox<pos:position pos:line="28" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="21">sizeof <argument_list pos:line="28" pos:column="28">(<argument><expr><name pos:line="28" pos:column="29">mbox<pos:position pos:line="28" pos:column="33"/></name></expr></argument>)<pos:position pos:line="28" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="36">"%smailboxes \"%s\""<pos:position pos:line="28" pos:column="56"/></literal></expr></argument>,
              <argument><expr><ternary><condition><expr><name pos:line="29" pos:column="15">subscribe<pos:position pos:line="29" pos:column="24"/></name></expr> ?<pos:position pos:line="29" pos:column="26"/></condition><then pos:line="29" pos:column="26"> <expr><literal type="string" pos:line="29" pos:column="27">""<pos:position pos:line="29" pos:column="29"/></literal></expr> <pos:position pos:line="29" pos:column="30"/></then><else pos:line="29" pos:column="30">: <expr><literal type="string" pos:line="29" pos:column="32">"un"<pos:position pos:line="29" pos:column="36"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="29" pos:column="38">path<pos:position pos:line="29" pos:column="42"/></name></expr></argument>)<pos:position pos:line="29" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><call><name pos:line="30" pos:column="9">mutt_parse_rc_line<pos:position pos:line="30" pos:column="27"/></name> <argument_list pos:line="30" pos:column="28">(<argument><expr><name pos:line="30" pos:column="29">mbox<pos:position pos:line="30" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="35">&amp;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="36">token<pos:position pos:line="30" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="43">&amp;<pos:position pos:line="30" pos:column="48"/></operator><name pos:line="30" pos:column="44">err<pos:position pos:line="30" pos:column="47"/></name></expr></argument>)<pos:position pos:line="30" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="49"/></condition><then pos:line="30" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="7">dprint<pos:position pos:line="31" pos:column="13"/></name> <argument_list pos:line="31" pos:column="14">(<argument><expr><literal type="number" pos:line="31" pos:column="15">1<pos:position pos:line="31" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="31" pos:column="18">(<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="19">debugfile<pos:position pos:line="31" pos:column="28"/></name><operator pos:line="31" pos:column="28">,<pos:position pos:line="31" pos:column="29"/></operator> <literal type="string" pos:line="31" pos:column="30">"Error adding subscribed mailbox: %s\n"<pos:position pos:line="31" pos:column="69"/></literal><operator pos:line="31" pos:column="69">,<pos:position pos:line="31" pos:column="70"/></operator> <name pos:line="31" pos:column="71">errstr<pos:position pos:line="31" pos:column="77"/></name><operator pos:line="31" pos:column="77">)<pos:position pos:line="31" pos:column="78"/></operator></expr></argument>)<pos:position pos:line="31" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="80"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">FREE<pos:position pos:line="32" pos:column="9"/></name> <argument_list pos:line="32" pos:column="10">(<argument><expr><operator pos:line="32" pos:column="11">&amp;<pos:position pos:line="32" pos:column="16"/></operator><name><name pos:line="32" pos:column="12">token<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">.<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">data<pos:position pos:line="32" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>

  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><name pos:line="35" pos:column="7">subscribe<pos:position pos:line="35" pos:column="16"/></name></expr>)<pos:position pos:line="35" pos:column="17"/></condition><then pos:line="35" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="5">mutt_message<pos:position pos:line="36" pos:column="17"/></name> <argument_list pos:line="36" pos:column="18">(<argument><expr><call><name pos:line="36" pos:column="19">_<pos:position pos:line="36" pos:column="20"/></name><argument_list pos:line="36" pos:column="20">(<argument><expr><literal type="string" pos:line="36" pos:column="21">"Subscribing to %s..."<pos:position pos:line="36" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="36" pos:column="46">buf<pos:position pos:line="36" pos:column="49"/></name></expr></argument>)<pos:position pos:line="36" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="51"/></expr_stmt></block></then>
  <else pos:line="37" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="5">mutt_message<pos:position pos:line="38" pos:column="17"/></name> <argument_list pos:line="38" pos:column="18">(<argument><expr><call><name pos:line="38" pos:column="19">_<pos:position pos:line="38" pos:column="20"/></name><argument_list pos:line="38" pos:column="20">(<argument><expr><literal type="string" pos:line="38" pos:column="21">"Unsubscribing from %s..."<pos:position pos:line="38" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="38" pos:column="50">buf<pos:position pos:line="38" pos:column="53"/></name></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="55"/></expr_stmt></block></else></if>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">imap_munge_mbox_name<pos:position pos:line="39" pos:column="23"/></name> <argument_list pos:line="39" pos:column="24">(<argument><expr><name pos:line="39" pos:column="25">idata<pos:position pos:line="39" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="32">mbox<pos:position pos:line="39" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="38">sizeof<argument_list pos:line="39" pos:column="44">(<argument><expr><name pos:line="39" pos:column="45">mbox<pos:position pos:line="39" pos:column="49"/></name></expr></argument>)<pos:position pos:line="39" pos:column="50"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="39" pos:column="52">buf<pos:position pos:line="39" pos:column="55"/></name></expr></argument>)<pos:position pos:line="39" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="57"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="41" pos:column="3">snprintf<pos:position pos:line="41" pos:column="11"/></name> <argument_list pos:line="41" pos:column="12">(<argument><expr><name pos:line="41" pos:column="13">buf<pos:position pos:line="41" pos:column="16"/></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="18">sizeof <argument_list pos:line="41" pos:column="25">(<argument><expr><name pos:line="41" pos:column="26">buf<pos:position pos:line="41" pos:column="29"/></name></expr></argument>)<pos:position pos:line="41" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="32">"%sSUBSCRIBE %s"<pos:position pos:line="41" pos:column="48"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="41" pos:column="50">subscribe<pos:position pos:line="41" pos:column="59"/></name></expr> ?<pos:position pos:line="41" pos:column="61"/></condition><then pos:line="41" pos:column="61"> <expr><literal type="string" pos:line="41" pos:column="62">""<pos:position pos:line="41" pos:column="64"/></literal></expr> <pos:position pos:line="41" pos:column="65"/></then><else pos:line="41" pos:column="65">: <expr><literal type="string" pos:line="41" pos:column="67">"UN"<pos:position pos:line="41" pos:column="71"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="41" pos:column="73">mbox<pos:position pos:line="41" pos:column="77"/></name></expr></argument>)<pos:position pos:line="41" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="79"/></expr_stmt>

  <if pos:line="43" pos:column="3">if <condition pos:line="43" pos:column="6">(<expr><call><name pos:line="43" pos:column="7">imap_exec<pos:position pos:line="43" pos:column="16"/></name> <argument_list pos:line="43" pos:column="17">(<argument><expr><name pos:line="43" pos:column="18">idata<pos:position pos:line="43" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="25">buf<pos:position pos:line="43" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="30">0<pos:position pos:line="43" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="32"/></argument_list></call> <operator pos:line="43" pos:column="33">&lt;<pos:position pos:line="43" pos:column="37"/></operator> <literal type="number" pos:line="43" pos:column="35">0<pos:position pos:line="43" pos:column="36"/></literal></expr>)<pos:position pos:line="43" pos:column="37"/></condition><then pos:line="43" pos:column="37">
    <block type="pseudo"><goto pos:line="44" pos:column="5">goto <name pos:line="44" pos:column="10">fail<pos:position pos:line="44" pos:column="14"/></name>;<pos:position pos:line="44" pos:column="15"/></goto></block></then></if>

  <expr_stmt><expr><call><name pos:line="46" pos:column="3">imap_unmunge_mbox_name<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">(<argument><expr><name pos:line="46" pos:column="26">idata<pos:position pos:line="46" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="33">mx<pos:position pos:line="46" pos:column="35"/></name><operator pos:line="46" pos:column="35">.<pos:position pos:line="46" pos:column="36"/></operator><name pos:line="46" pos:column="36">mbox<pos:position pos:line="46" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="42"/></expr_stmt>
  <if pos:line="47" pos:column="3">if <condition pos:line="47" pos:column="6">(<expr><name pos:line="47" pos:column="7">subscribe<pos:position pos:line="47" pos:column="16"/></name></expr>)<pos:position pos:line="47" pos:column="17"/></condition><then pos:line="47" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="5">mutt_message<pos:position pos:line="48" pos:column="17"/></name> <argument_list pos:line="48" pos:column="18">(<argument><expr><call><name pos:line="48" pos:column="19">_<pos:position pos:line="48" pos:column="20"/></name><argument_list pos:line="48" pos:column="20">(<argument><expr><literal type="string" pos:line="48" pos:column="21">"Subscribed to %s"<pos:position pos:line="48" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="42">mx<pos:position pos:line="48" pos:column="44"/></name><operator pos:line="48" pos:column="44">.<pos:position pos:line="48" pos:column="45"/></operator><name pos:line="48" pos:column="45">mbox<pos:position pos:line="48" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="51"/></expr_stmt></block></then>
  <else pos:line="49" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="5">mutt_message<pos:position pos:line="50" pos:column="17"/></name> <argument_list pos:line="50" pos:column="18">(<argument><expr><call><name pos:line="50" pos:column="19">_<pos:position pos:line="50" pos:column="20"/></name><argument_list pos:line="50" pos:column="20">(<argument><expr><literal type="string" pos:line="50" pos:column="21">"Unsubscribed from %s"<pos:position pos:line="50" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="46">mx<pos:position pos:line="50" pos:column="48"/></name><operator pos:line="50" pos:column="48">.<pos:position pos:line="50" pos:column="49"/></operator><name pos:line="50" pos:column="49">mbox<pos:position pos:line="50" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="55"/></expr_stmt></block></else></if>
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">FREE<pos:position pos:line="51" pos:column="7"/></name> <argument_list pos:line="51" pos:column="8">(<argument><expr><operator pos:line="51" pos:column="9">&amp;<pos:position pos:line="51" pos:column="14"/></operator><name><name pos:line="51" pos:column="10">mx<pos:position pos:line="51" pos:column="12"/></name><operator pos:line="51" pos:column="12">.<pos:position pos:line="51" pos:column="13"/></operator><name pos:line="51" pos:column="13">mbox<pos:position pos:line="51" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="19"/></expr_stmt>
  <return pos:line="52" pos:column="3">return <expr><literal type="number" pos:line="52" pos:column="10">0<pos:position pos:line="52" pos:column="11"/></literal></expr>;<pos:position pos:line="52" pos:column="12"/></return>

 <label><name pos:line="54" pos:column="2">fail<pos:position pos:line="54" pos:column="6"/></name>:<pos:position pos:line="54" pos:column="7"/></label>
  <expr_stmt><expr><call><name pos:line="55" pos:column="3">FREE<pos:position pos:line="55" pos:column="7"/></name> <argument_list pos:line="55" pos:column="8">(<argument><expr><operator pos:line="55" pos:column="9">&amp;<pos:position pos:line="55" pos:column="14"/></operator><name><name pos:line="55" pos:column="10">mx<pos:position pos:line="55" pos:column="12"/></name><operator pos:line="55" pos:column="12">.<pos:position pos:line="55" pos:column="13"/></operator><name pos:line="55" pos:column="13">mbox<pos:position pos:line="55" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="19"/></expr_stmt>
  <return pos:line="56" pos:column="3">return <expr><operator pos:line="56" pos:column="10">-<pos:position pos:line="56" pos:column="11"/></operator><literal type="number" pos:line="56" pos:column="11">1<pos:position pos:line="56" pos:column="12"/></literal></expr>;<pos:position pos:line="56" pos:column="13"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

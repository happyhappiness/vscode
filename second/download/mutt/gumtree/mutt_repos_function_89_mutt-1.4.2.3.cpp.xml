<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_89_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_pattern_free<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">pattern_t<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier><modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">pat<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">pattern_t<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">tmp<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>

  <while pos:line="5" pos:column="3">while <condition pos:line="5" pos:column="9">(<expr><operator pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">pat<pos:position pos:line="5" pos:column="14"/></name></expr>)<pos:position pos:line="5" pos:column="15"/></condition>
  <block pos:line="6" pos:column="3">{
    <expr_stmt><expr><name pos:line="7" pos:column="5">tmp<pos:position pos:line="7" pos:column="8"/></name> <operator pos:line="7" pos:column="9">=<pos:position pos:line="7" pos:column="10"/></operator> <operator pos:line="7" pos:column="11">*<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="12">pat<pos:position pos:line="7" pos:column="15"/></name></expr>;<pos:position pos:line="7" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="8" pos:column="5">*<pos:position pos:line="8" pos:column="6"/></operator><name pos:line="8" pos:column="6">pat<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <name><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><operator pos:line="8" pos:column="13">*<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">pat<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">)<pos:position pos:line="8" pos:column="18"/></operator><operator pos:line="8" pos:column="18">-&gt;<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="20">next<pos:position pos:line="8" pos:column="24"/></name></name></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">tmp<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">rx<pos:position pos:line="10" pos:column="16"/></name></name></expr>)<pos:position pos:line="10" pos:column="17"/></condition><then pos:line="10" pos:column="17">
    <block pos:line="11" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">regfree<pos:position pos:line="12" pos:column="14"/></name> <argument_list pos:line="12" pos:column="15">(<argument><expr><name><name pos:line="12" pos:column="16">tmp<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">-&gt;<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="21">rx<pos:position pos:line="12" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="13" pos:column="7">safe_free<pos:position pos:line="13" pos:column="16"/></name> <argument_list pos:line="13" pos:column="17">(<argument><expr><operator pos:line="13" pos:column="18">(<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="19">void<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">*<pos:position pos:line="13" pos:column="25"/></operator><operator pos:line="13" pos:column="25">*<pos:position pos:line="13" pos:column="26"/></operator><operator pos:line="13" pos:column="26">)<pos:position pos:line="13" pos:column="27"/></operator> <operator pos:line="13" pos:column="28">&amp;<pos:position pos:line="13" pos:column="33"/></operator><name><name pos:line="13" pos:column="29">tmp<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">-&gt;<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="34">rx<pos:position pos:line="13" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">tmp<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">child<pos:position pos:line="15" pos:column="19"/></name></name></expr>)<pos:position pos:line="15" pos:column="20"/></condition><then pos:line="15" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="7">mutt_pattern_free<pos:position pos:line="16" pos:column="24"/></name> <argument_list pos:line="16" pos:column="25">(<argument><expr><operator pos:line="16" pos:column="26">&amp;<pos:position pos:line="16" pos:column="31"/></operator><name><name pos:line="16" pos:column="27">tmp<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">-&gt;<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="32">child<pos:position pos:line="16" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">safe_free<pos:position pos:line="17" pos:column="14"/></name> <argument_list pos:line="17" pos:column="15">(<argument><expr><operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">void<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">*<pos:position pos:line="17" pos:column="23"/></operator><operator pos:line="17" pos:column="23">*<pos:position pos:line="17" pos:column="24"/></operator><operator pos:line="17" pos:column="24">)<pos:position pos:line="17" pos:column="25"/></operator> <operator pos:line="17" pos:column="26">&amp;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="27">tmp<pos:position pos:line="17" pos:column="30"/></name></expr></argument>)<pos:position pos:line="17" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></while>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

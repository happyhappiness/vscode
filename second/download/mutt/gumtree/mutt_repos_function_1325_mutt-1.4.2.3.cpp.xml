<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1325_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">imap_free_idata<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">IMAP_DATA<pos:position pos:line="1" pos:column="32"/></name><modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier><modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type> <name pos:line="1" pos:column="35">idata<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list> <block pos:line="1" pos:column="42">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><operator pos:line="2" pos:column="7">!<pos:position pos:line="2" pos:column="8"/></operator><name pos:line="2" pos:column="8">idata<pos:position pos:line="2" pos:column="13"/></name></expr>)<pos:position pos:line="2" pos:column="14"/></condition><then pos:line="2" pos:column="14">
    <block type="pseudo"><return pos:line="3" pos:column="5">return;<pos:position pos:line="3" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">FREE<pos:position pos:line="5" pos:column="7"/></name> <argument_list pos:line="5" pos:column="8">(<argument><expr><operator pos:line="5" pos:column="9">&amp;<pos:position pos:line="5" pos:column="14"/></operator><name><operator pos:line="5" pos:column="10">(<pos:position pos:line="5" pos:column="11"/></operator><operator pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></operator><name pos:line="5" pos:column="12">idata<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">)<pos:position pos:line="5" pos:column="18"/></operator><operator pos:line="5" pos:column="18">-&gt;<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="20">capstr<pos:position pos:line="5" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">mutt_free_list<pos:position pos:line="6" pos:column="17"/></name> <argument_list pos:line="6" pos:column="18">(<argument><expr><operator pos:line="6" pos:column="19">&amp;<pos:position pos:line="6" pos:column="24"/></operator><name><operator pos:line="6" pos:column="20">(<pos:position pos:line="6" pos:column="21"/></operator><operator pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="22">idata<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">)<pos:position pos:line="6" pos:column="28"/></operator><operator pos:line="6" pos:column="28">-&gt;<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="30">flags<pos:position pos:line="6" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">FREE<pos:position pos:line="7" pos:column="7"/></name> <argument_list pos:line="7" pos:column="8">(<argument><expr><operator pos:line="7" pos:column="9">&amp;<pos:position pos:line="7" pos:column="14"/></operator><operator pos:line="7" pos:column="10">(<pos:position pos:line="7" pos:column="11"/></operator><name><operator pos:line="7" pos:column="11">(<pos:position pos:line="7" pos:column="12"/></operator><operator pos:line="7" pos:column="12">*<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">idata<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">)<pos:position pos:line="7" pos:column="19"/></operator><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name><name pos:line="7" pos:column="21">cmd<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">.<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="25">buf<pos:position pos:line="7" pos:column="28"/></name></name></name><operator pos:line="7" pos:column="28">)<pos:position pos:line="7" pos:column="29"/></operator></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">FREE<pos:position pos:line="8" pos:column="7"/></name> <argument_list pos:line="8" pos:column="8">(<argument><expr><name pos:line="8" pos:column="9">idata<pos:position pos:line="8" pos:column="14"/></name></expr></argument>)<pos:position pos:line="8" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="16"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

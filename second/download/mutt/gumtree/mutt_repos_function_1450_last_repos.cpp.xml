<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1450_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">FILE<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">mutt_open_read<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">path<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">pid_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">thepid<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">FILE<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">f<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">stat<pos:position pos:line="4" pos:column="14"/></name></name></type> <name pos:line="4" pos:column="15">s<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">len<pos:position pos:line="6" pos:column="10"/></name> <init pos:line="6" pos:column="11">= <expr><call><name pos:line="6" pos:column="13">mutt_strlen<pos:position pos:line="6" pos:column="24"/></name> <argument_list pos:line="6" pos:column="25">(<argument><expr><name pos:line="6" pos:column="26">path<pos:position pos:line="6" pos:column="30"/></name></expr></argument>)<pos:position pos:line="6" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name><name pos:line="8" pos:column="7">path<pos:position pos:line="8" pos:column="11"/></name><index pos:line="8" pos:column="11">[<expr><name pos:line="8" pos:column="12">len<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">-<pos:position pos:line="8" pos:column="17"/></operator> <literal type="number" pos:line="8" pos:column="18">1<pos:position pos:line="8" pos:column="19"/></literal></expr>]<pos:position pos:line="8" pos:column="20"/></index></name> <operator pos:line="8" pos:column="21">==<pos:position pos:line="8" pos:column="23"/></operator> <literal type="char" pos:line="8" pos:column="24">'|'<pos:position pos:line="8" pos:column="27"/></literal></expr>)<pos:position pos:line="8" pos:column="28"/></condition><then pos:line="8" pos:column="28">
  <block pos:line="9" pos:column="3">{
    <comment type="block" pos:line="10" pos:column="5">/* read from a pipe */</comment>

    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name> <modifier pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></modifier></type><name pos:line="12" pos:column="11">s<pos:position pos:line="12" pos:column="12"/></name> <init pos:line="12" pos:column="13">= <expr><call><name pos:line="12" pos:column="15">safe_strdup<pos:position pos:line="12" pos:column="26"/></name> <argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">path<pos:position pos:line="12" pos:column="32"/></name></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="34"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="14" pos:column="5">s<pos:position pos:line="14" pos:column="6"/></name><index pos:line="14" pos:column="6">[<expr><name pos:line="14" pos:column="7">len<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">-<pos:position pos:line="14" pos:column="12"/></operator> <literal type="number" pos:line="14" pos:column="13">1<pos:position pos:line="14" pos:column="14"/></literal></expr>]<pos:position pos:line="14" pos:column="15"/></index></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr>;<pos:position pos:line="14" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">mutt_endwin<pos:position pos:line="15" pos:column="16"/></name> <argument_list pos:line="15" pos:column="17">(<argument><expr><name pos:line="15" pos:column="18">NULL<pos:position pos:line="15" pos:column="22"/></name></expr></argument>)<pos:position pos:line="15" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="16" pos:column="5">*<pos:position pos:line="16" pos:column="6"/></operator><name pos:line="16" pos:column="6">thepid<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <call><name pos:line="16" pos:column="15">mutt_create_filter<pos:position pos:line="16" pos:column="33"/></name> <argument_list pos:line="16" pos:column="34">(<argument><expr><name pos:line="16" pos:column="35">s<pos:position pos:line="16" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="38">NULL<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="44">&amp;<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="45">f<pos:position pos:line="16" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="48">NULL<pos:position pos:line="16" pos:column="52"/></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">FREE<pos:position pos:line="17" pos:column="9"/></name> <argument_list pos:line="17" pos:column="10">(<argument><expr><operator pos:line="17" pos:column="11">&amp;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="12">s<pos:position pos:line="17" pos:column="13"/></name></expr></argument>)<pos:position pos:line="17" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></then>
  <else pos:line="19" pos:column="3">else
  <block pos:line="20" pos:column="3">{
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><call><name pos:line="21" pos:column="9">stat<pos:position pos:line="21" pos:column="13"/></name> <argument_list pos:line="21" pos:column="14">(<argument><expr><name pos:line="21" pos:column="15">path<pos:position pos:line="21" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="21">&amp;<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="22">s<pos:position pos:line="21" pos:column="23"/></name></expr></argument>)<pos:position pos:line="21" pos:column="24"/></argument_list></call> <operator pos:line="21" pos:column="25">&lt;<pos:position pos:line="21" pos:column="29"/></operator> <literal type="number" pos:line="21" pos:column="27">0<pos:position pos:line="21" pos:column="28"/></literal></expr>)<pos:position pos:line="21" pos:column="29"/></condition><then pos:line="21" pos:column="29">
      <block type="pseudo"><return pos:line="22" pos:column="7">return <expr><operator pos:line="22" pos:column="14">(<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">NULL<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">)<pos:position pos:line="22" pos:column="20"/></operator></expr>;<pos:position pos:line="22" pos:column="21"/></return></block></then></if>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><call><name pos:line="23" pos:column="9">S_ISDIR<pos:position pos:line="23" pos:column="16"/></name> <argument_list pos:line="23" pos:column="17">(<argument><expr><name><name pos:line="23" pos:column="18">s<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">.<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="20">st_mode<pos:position pos:line="23" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="29"/></condition><then pos:line="23" pos:column="29">
    <block pos:line="24" pos:column="5">{
      <expr_stmt><expr><name pos:line="25" pos:column="7">errno<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">=<pos:position pos:line="25" pos:column="14"/></operator> <name pos:line="25" pos:column="15">EINVAL<pos:position pos:line="25" pos:column="21"/></name></expr>;<pos:position pos:line="25" pos:column="22"/></expr_stmt>
      <return pos:line="26" pos:column="7">return <expr><operator pos:line="26" pos:column="14">(<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">NULL<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">)<pos:position pos:line="26" pos:column="20"/></operator></expr>;<pos:position pos:line="26" pos:column="21"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="28" pos:column="5">f<pos:position pos:line="28" pos:column="6"/></name> <operator pos:line="28" pos:column="7">=<pos:position pos:line="28" pos:column="8"/></operator> <call><name pos:line="28" pos:column="9">fopen<pos:position pos:line="28" pos:column="14"/></name> <argument_list pos:line="28" pos:column="15">(<argument><expr><name pos:line="28" pos:column="16">path<pos:position pos:line="28" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="22">"r"<pos:position pos:line="28" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="29" pos:column="5">*<pos:position pos:line="29" pos:column="6"/></operator><name pos:line="29" pos:column="6">thepid<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <operator pos:line="29" pos:column="15">-<pos:position pos:line="29" pos:column="16"/></operator><literal type="number" pos:line="29" pos:column="16">1<pos:position pos:line="29" pos:column="17"/></literal></expr>;<pos:position pos:line="29" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></else></if>
  <return pos:line="31" pos:column="3">return <expr><operator pos:line="31" pos:column="10">(<pos:position pos:line="31" pos:column="11"/></operator><name pos:line="31" pos:column="11">f<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">)<pos:position pos:line="31" pos:column="13"/></operator></expr>;<pos:position pos:line="31" pos:column="14"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

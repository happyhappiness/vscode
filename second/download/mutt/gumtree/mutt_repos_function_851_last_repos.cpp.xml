<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_851_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> 
<name pos:line="2" pos:column="1">add_pattern<pos:position pos:line="2" pos:column="12"/></name> <parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">COLOR_LINE<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier><modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">top<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">s<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">int<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">sensitive<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>,
	     <parameter><decl><type><name pos:line="3" pos:column="14">int<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">fg<pos:position pos:line="3" pos:column="20"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="22">int<pos:position pos:line="3" pos:column="25"/></name></type> <name pos:line="3" pos:column="26">bg<pos:position pos:line="3" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="30">int<pos:position pos:line="3" pos:column="33"/></name></type> <name pos:line="3" pos:column="34">attr<pos:position pos:line="3" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="40">BUFFER<pos:position pos:line="3" pos:column="46"/></name> <modifier pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></modifier></type><name pos:line="3" pos:column="48">err<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>,
	     <parameter><decl><type><name pos:line="4" pos:column="14">int<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">is_index<pos:position pos:line="4" pos:column="26"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="27"/></parameter_list>
<block pos:line="5" pos:column="1">{

  <comment type="block" pos:line="7" pos:column="3">/* is_index used to store compiled pattern
   * only for `index' color object 
   * when called from mutt_parse_color() */</comment>

  <decl_stmt><decl><type><name pos:line="11" pos:column="3">COLOR_LINE<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">tmp<pos:position pos:line="11" pos:column="18"/></name> <init pos:line="11" pos:column="19">= <expr><operator pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">top<pos:position pos:line="11" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="26"/></decl_stmt>

  <while pos:line="13" pos:column="3">while <condition pos:line="13" pos:column="9">(<expr><name pos:line="13" pos:column="10">tmp<pos:position pos:line="13" pos:column="13"/></name></expr>)<pos:position pos:line="13" pos:column="14"/></condition>
  <block pos:line="14" pos:column="3">{
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">sensitive<pos:position pos:line="15" pos:column="18"/></name></expr>)<pos:position pos:line="15" pos:column="19"/></condition><then pos:line="15" pos:column="19">
    <block pos:line="16" pos:column="5">{
      <if pos:line="17" pos:column="7">if <condition pos:line="17" pos:column="10">(<expr><call><name pos:line="17" pos:column="11">mutt_strcmp<pos:position pos:line="17" pos:column="22"/></name> <argument_list pos:line="17" pos:column="23">(<argument><expr><name pos:line="17" pos:column="24">s<pos:position pos:line="17" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="27">tmp<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">-&gt;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="32">pattern<pos:position pos:line="17" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call> <operator pos:line="17" pos:column="41">==<pos:position pos:line="17" pos:column="43"/></operator> <literal type="number" pos:line="17" pos:column="44">0<pos:position pos:line="17" pos:column="45"/></literal></expr>)<pos:position pos:line="17" pos:column="46"/></condition><then pos:line="17" pos:column="46">
	<block type="pseudo"><break pos:line="18" pos:column="9">break;<pos:position pos:line="18" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="19" pos:column="6"/></block></then>
    <else pos:line="20" pos:column="5">else
    <block pos:line="21" pos:column="5">{
      <if pos:line="22" pos:column="7">if <condition pos:line="22" pos:column="10">(<expr><call><name pos:line="22" pos:column="11">mutt_strcasecmp<pos:position pos:line="22" pos:column="26"/></name> <argument_list pos:line="22" pos:column="27">(<argument><expr><name pos:line="22" pos:column="28">s<pos:position pos:line="22" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="31">tmp<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">-&gt;<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="36">pattern<pos:position pos:line="22" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="44"/></argument_list></call> <operator pos:line="22" pos:column="45">==<pos:position pos:line="22" pos:column="47"/></operator> <literal type="number" pos:line="22" pos:column="48">0<pos:position pos:line="22" pos:column="49"/></literal></expr>)<pos:position pos:line="22" pos:column="50"/></condition><then pos:line="22" pos:column="50">
	<block type="pseudo"><break pos:line="23" pos:column="9">break;<pos:position pos:line="23" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="24" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="25" pos:column="5">tmp<pos:position pos:line="25" pos:column="8"/></name> <operator pos:line="25" pos:column="9">=<pos:position pos:line="25" pos:column="10"/></operator> <name><name pos:line="25" pos:column="11">tmp<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">-&gt;<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="16">next<pos:position pos:line="25" pos:column="20"/></name></name></expr>;<pos:position pos:line="25" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block></while>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">tmp<pos:position pos:line="28" pos:column="10"/></name></expr>)<pos:position pos:line="28" pos:column="11"/></condition><then pos:line="28" pos:column="11">
  <block pos:line="29" pos:column="3">{
<cpp:ifdef pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">ifdef<pos:position pos:line="30" pos:column="7"/></cpp:directive> <name pos:line="30" pos:column="8">HAVE_COLOR<pos:position pos:line="30" pos:column="18"/></name></cpp:ifdef>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">fg<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">!=<pos:position pos:line="31" pos:column="14"/></operator> <operator pos:line="31" pos:column="15">-<pos:position pos:line="31" pos:column="16"/></operator><literal type="number" pos:line="31" pos:column="16">1<pos:position pos:line="31" pos:column="17"/></literal> <operator pos:line="31" pos:column="18">&amp;&amp;<pos:position pos:line="31" pos:column="28"/></operator> <name pos:line="31" pos:column="21">bg<pos:position pos:line="31" pos:column="23"/></name> <operator pos:line="31" pos:column="24">!=<pos:position pos:line="31" pos:column="26"/></operator> <operator pos:line="31" pos:column="27">-<pos:position pos:line="31" pos:column="28"/></operator><literal type="number" pos:line="31" pos:column="28">1<pos:position pos:line="31" pos:column="29"/></literal></expr>)<pos:position pos:line="31" pos:column="30"/></condition><then pos:line="31" pos:column="30">
    <block pos:line="32" pos:column="5">{
      <if pos:line="33" pos:column="7">if <condition pos:line="33" pos:column="10">(<expr><name><name pos:line="33" pos:column="11">tmp<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">-&gt;<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="16">fg<pos:position pos:line="33" pos:column="18"/></name></name> <operator pos:line="33" pos:column="19">!=<pos:position pos:line="33" pos:column="21"/></operator> <name pos:line="33" pos:column="22">fg<pos:position pos:line="33" pos:column="24"/></name> <operator pos:line="33" pos:column="25">||<pos:position pos:line="33" pos:column="27"/></operator> <name><name pos:line="33" pos:column="28">tmp<pos:position pos:line="33" pos:column="31"/></name><operator pos:line="33" pos:column="31">-&gt;<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="33">bg<pos:position pos:line="33" pos:column="35"/></name></name> <operator pos:line="33" pos:column="36">!=<pos:position pos:line="33" pos:column="38"/></operator> <name pos:line="33" pos:column="39">bg<pos:position pos:line="33" pos:column="41"/></name></expr>)<pos:position pos:line="33" pos:column="42"/></condition><then pos:line="33" pos:column="42">
      <block pos:line="34" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">mutt_free_color<pos:position pos:line="35" pos:column="24"/></name> <argument_list pos:line="35" pos:column="25">(<argument><expr><name><name pos:line="35" pos:column="26">tmp<pos:position pos:line="35" pos:column="29"/></name><operator pos:line="35" pos:column="29">-&gt;<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="31">fg<pos:position pos:line="35" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="35">tmp<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">-&gt;<pos:position pos:line="35" pos:column="43"/></operator><name pos:line="35" pos:column="40">bg<pos:position pos:line="35" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="36" pos:column="9">tmp<pos:position pos:line="36" pos:column="12"/></name><operator pos:line="36" pos:column="12">-&gt;<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="14">fg<pos:position pos:line="36" pos:column="16"/></name></name> <operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator> <name pos:line="36" pos:column="19">fg<pos:position pos:line="36" pos:column="21"/></name></expr>;<pos:position pos:line="36" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="37" pos:column="9">tmp<pos:position pos:line="37" pos:column="12"/></name><operator pos:line="37" pos:column="12">-&gt;<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="14">bg<pos:position pos:line="37" pos:column="16"/></name></name> <operator pos:line="37" pos:column="17">=<pos:position pos:line="37" pos:column="18"/></operator> <name pos:line="37" pos:column="19">bg<pos:position pos:line="37" pos:column="21"/></name></expr>;<pos:position pos:line="37" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name pos:line="38" pos:column="9">attr<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">|=<pos:position pos:line="38" pos:column="16"/></operator> <call><name pos:line="38" pos:column="17">mutt_alloc_color<pos:position pos:line="38" pos:column="33"/></name> <argument_list pos:line="38" pos:column="34">(<argument><expr><name pos:line="38" pos:column="35">fg<pos:position pos:line="38" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="39">bg<pos:position pos:line="38" pos:column="41"/></name></expr></argument>)<pos:position pos:line="38" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="43"/></expr_stmt>
      }<pos:position pos:line="39" pos:column="8"/></block></then>
      <else pos:line="40" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="9">attr<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">|=<pos:position pos:line="41" pos:column="16"/></operator> <operator pos:line="41" pos:column="17">(<pos:position pos:line="41" pos:column="18"/></operator><name><name pos:line="41" pos:column="18">tmp<pos:position pos:line="41" pos:column="21"/></name><operator pos:line="41" pos:column="21">-&gt;<pos:position pos:line="41" pos:column="26"/></operator><name pos:line="41" pos:column="23">pair<pos:position pos:line="41" pos:column="27"/></name></name> <operator pos:line="41" pos:column="28">&amp;<pos:position pos:line="41" pos:column="33"/></operator> <operator pos:line="41" pos:column="30">~<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="31">A_BOLD<pos:position pos:line="41" pos:column="37"/></name><operator pos:line="41" pos:column="37">)<pos:position pos:line="41" pos:column="38"/></operator></expr>;<pos:position pos:line="41" pos:column="39"/></expr_stmt></block></else></if>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>
<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif<pos:position pos:line="43" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="43" pos:column="8">/* HAVE_COLOR */</comment>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">tmp<pos:position pos:line="44" pos:column="8"/></name><operator pos:line="44" pos:column="8">-&gt;<pos:position pos:line="44" pos:column="13"/></operator><name pos:line="44" pos:column="10">pair<pos:position pos:line="44" pos:column="14"/></name></name> <operator pos:line="44" pos:column="15">=<pos:position pos:line="44" pos:column="16"/></operator> <name pos:line="44" pos:column="17">attr<pos:position pos:line="44" pos:column="21"/></name></expr>;<pos:position pos:line="44" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="45" pos:column="4"/></block></then>
  <else pos:line="46" pos:column="3">else
  <block pos:line="47" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="48" pos:column="5">int<pos:position pos:line="48" pos:column="8"/></name></type> <name pos:line="48" pos:column="9">r<pos:position pos:line="48" pos:column="10"/></name></decl>;<pos:position pos:line="48" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="49" pos:column="5">char<pos:position pos:line="49" pos:column="9"/></name></type> <name><name pos:line="49" pos:column="10">buf<pos:position pos:line="49" pos:column="13"/></name><index pos:line="49" pos:column="13">[<expr><name pos:line="49" pos:column="14">LONG_STRING<pos:position pos:line="49" pos:column="25"/></name></expr>]<pos:position pos:line="49" pos:column="26"/></index></name></decl>;<pos:position pos:line="49" pos:column="27"/></decl_stmt>

    <expr_stmt><expr><name pos:line="51" pos:column="5">tmp<pos:position pos:line="51" pos:column="8"/></name> <operator pos:line="51" pos:column="9">=<pos:position pos:line="51" pos:column="10"/></operator> <call><name pos:line="51" pos:column="11">mutt_new_color_line<pos:position pos:line="51" pos:column="30"/></name> <argument_list pos:line="51" pos:column="31">()<pos:position pos:line="51" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="34"/></expr_stmt>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name pos:line="52" pos:column="9">is_index<pos:position pos:line="52" pos:column="17"/></name></expr>)<pos:position pos:line="52" pos:column="18"/></condition><then pos:line="52" pos:column="18"> 
    <block pos:line="53" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="54" pos:column="7">int<pos:position pos:line="54" pos:column="10"/></name></type> <name pos:line="54" pos:column="11">i<pos:position pos:line="54" pos:column="12"/></name></decl>;<pos:position pos:line="54" pos:column="13"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="56" pos:column="7">strfcpy<pos:position pos:line="56" pos:column="14"/></name><argument_list pos:line="56" pos:column="14">(<argument><expr><name pos:line="56" pos:column="15">buf<pos:position pos:line="56" pos:column="18"/></name></expr></argument>, <argument><expr><call><name pos:line="56" pos:column="20">NONULL<pos:position pos:line="56" pos:column="26"/></name><argument_list pos:line="56" pos:column="26">(<argument><expr><name pos:line="56" pos:column="27">s<pos:position pos:line="56" pos:column="28"/></name></expr></argument>)<pos:position pos:line="56" pos:column="29"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="56" pos:column="31">sizeof<argument_list pos:line="56" pos:column="37">(<argument><expr><name pos:line="56" pos:column="38">buf<pos:position pos:line="56" pos:column="41"/></name></expr></argument>)<pos:position pos:line="56" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="56" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="57" pos:column="7">mutt_check_simple<pos:position pos:line="57" pos:column="24"/></name> <argument_list pos:line="57" pos:column="25">(<argument><expr><name pos:line="57" pos:column="26">buf<pos:position pos:line="57" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="57" pos:column="31">sizeof <argument_list pos:line="57" pos:column="38">(<argument><expr><name pos:line="57" pos:column="39">buf<pos:position pos:line="57" pos:column="42"/></name></expr></argument>)<pos:position pos:line="57" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="57" pos:column="45">NONULL<pos:position pos:line="57" pos:column="51"/></name><argument_list pos:line="57" pos:column="51">(<argument><expr><name pos:line="57" pos:column="52">SimpleSearch<pos:position pos:line="57" pos:column="64"/></name></expr></argument>)<pos:position pos:line="57" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="57" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="67"/></expr_stmt>
      <if pos:line="58" pos:column="7">if<condition pos:line="58" pos:column="9">(<expr><operator pos:line="58" pos:column="10">(<pos:position pos:line="58" pos:column="11"/></operator><name><name pos:line="58" pos:column="11">tmp<pos:position pos:line="58" pos:column="14"/></name><operator pos:line="58" pos:column="14">-&gt;<pos:position pos:line="58" pos:column="19"/></operator><name pos:line="58" pos:column="16">color_pattern<pos:position pos:line="58" pos:column="29"/></name></name> <operator pos:line="58" pos:column="30">=<pos:position pos:line="58" pos:column="31"/></operator> <call><name pos:line="58" pos:column="32">mutt_pattern_comp<pos:position pos:line="58" pos:column="49"/></name> <argument_list pos:line="58" pos:column="50">(<argument><expr><name pos:line="58" pos:column="51">buf<pos:position pos:line="58" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="56">MUTT_FULL_MSG<pos:position pos:line="58" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="71">err<pos:position pos:line="58" pos:column="74"/></name></expr></argument>)<pos:position pos:line="58" pos:column="75"/></argument_list></call><operator pos:line="58" pos:column="75">)<pos:position pos:line="58" pos:column="76"/></operator> <operator pos:line="58" pos:column="77">==<pos:position pos:line="58" pos:column="79"/></operator> <name pos:line="58" pos:column="80">NULL<pos:position pos:line="58" pos:column="84"/></name></expr>)<pos:position pos:line="58" pos:column="85"/></condition><then pos:line="58" pos:column="85">
      <block pos:line="59" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="60" pos:column="9">mutt_free_color_line<pos:position pos:line="60" pos:column="29"/></name><argument_list pos:line="60" pos:column="29">(<argument><expr><operator pos:line="60" pos:column="30">&amp;<pos:position pos:line="60" pos:column="35"/></operator><name pos:line="60" pos:column="31">tmp<pos:position pos:line="60" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="36">1<pos:position pos:line="60" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="39"/></expr_stmt>
	<return pos:line="61" pos:column="9">return <expr><operator pos:line="61" pos:column="16">-<pos:position pos:line="61" pos:column="17"/></operator><literal type="number" pos:line="61" pos:column="17">1<pos:position pos:line="61" pos:column="18"/></literal></expr>;<pos:position pos:line="61" pos:column="19"/></return>
      }<pos:position pos:line="62" pos:column="8"/></block></then></if>
      <comment type="block" pos:line="63" pos:column="7">/* force re-caching of index colors */</comment>
      <for pos:line="64" pos:column="7">for <control pos:line="64" pos:column="11">(<init><expr><name pos:line="64" pos:column="12">i<pos:position pos:line="64" pos:column="13"/></name> <operator pos:line="64" pos:column="14">=<pos:position pos:line="64" pos:column="15"/></operator> <literal type="number" pos:line="64" pos:column="16">0<pos:position pos:line="64" pos:column="17"/></literal></expr>;<pos:position pos:line="64" pos:column="18"/></init> <condition><expr><name pos:line="64" pos:column="19">Context<pos:position pos:line="64" pos:column="26"/></name> <operator pos:line="64" pos:column="27">&amp;&amp;<pos:position pos:line="64" pos:column="37"/></operator> <name pos:line="64" pos:column="30">i<pos:position pos:line="64" pos:column="31"/></name> <operator pos:line="64" pos:column="32">&lt;<pos:position pos:line="64" pos:column="36"/></operator> <name><name pos:line="64" pos:column="34">Context<pos:position pos:line="64" pos:column="41"/></name><operator pos:line="64" pos:column="41">-&gt;<pos:position pos:line="64" pos:column="46"/></operator><name pos:line="64" pos:column="43">msgcount<pos:position pos:line="64" pos:column="51"/></name></name></expr>;<pos:position pos:line="64" pos:column="52"/></condition> <incr><expr><name pos:line="64" pos:column="53">i<pos:position pos:line="64" pos:column="54"/></name><operator pos:line="64" pos:column="54">++<pos:position pos:line="64" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="64" pos:column="57"/></control>
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="65" pos:column="9">Context<pos:position pos:line="65" pos:column="16"/></name><operator pos:line="65" pos:column="16">-&gt;<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="18">hdrs<pos:position pos:line="65" pos:column="22"/></name><index pos:line="65" pos:column="22">[<expr><name pos:line="65" pos:column="23">i<pos:position pos:line="65" pos:column="24"/></name></expr>]<pos:position pos:line="65" pos:column="25"/></index></name><operator pos:line="65" pos:column="25">-&gt;<pos:position pos:line="65" pos:column="30"/></operator><name pos:line="65" pos:column="27">pair<pos:position pos:line="65" pos:column="31"/></name> <operator pos:line="65" pos:column="32">=<pos:position pos:line="65" pos:column="33"/></operator> <literal type="number" pos:line="65" pos:column="34">0<pos:position pos:line="65" pos:column="35"/></literal></expr>;<pos:position pos:line="65" pos:column="36"/></expr_stmt></block></for>
    }<pos:position pos:line="66" pos:column="6"/></block></then>
    <elseif pos:line="67" pos:column="5">else <if pos:line="67" pos:column="10">if <condition pos:line="67" pos:column="13">(<expr><operator pos:line="67" pos:column="14">(<pos:position pos:line="67" pos:column="15"/></operator><name pos:line="67" pos:column="15">r<pos:position pos:line="67" pos:column="16"/></name> <operator pos:line="67" pos:column="17">=<pos:position pos:line="67" pos:column="18"/></operator> <call><name pos:line="67" pos:column="19">REGCOMP<pos:position pos:line="67" pos:column="26"/></name> <argument_list pos:line="67" pos:column="27">(<argument><expr><operator pos:line="67" pos:column="28">&amp;<pos:position pos:line="67" pos:column="33"/></operator><name><name pos:line="67" pos:column="29">tmp<pos:position pos:line="67" pos:column="32"/></name><operator pos:line="67" pos:column="32">-&gt;<pos:position pos:line="67" pos:column="37"/></operator><name pos:line="67" pos:column="34">rx<pos:position pos:line="67" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="38">s<pos:position pos:line="67" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="41">(<pos:position pos:line="67" pos:column="42"/></operator><ternary><condition><expr><name pos:line="67" pos:column="42">sensitive<pos:position pos:line="67" pos:column="51"/></name></expr> ?<pos:position pos:line="67" pos:column="53"/></condition><then pos:line="67" pos:column="53"> <expr><call><name pos:line="67" pos:column="54">mutt_which_case<pos:position pos:line="67" pos:column="69"/></name> <argument_list pos:line="67" pos:column="70">(<argument><expr><name pos:line="67" pos:column="71">s<pos:position pos:line="67" pos:column="72"/></name></expr></argument>)<pos:position pos:line="67" pos:column="73"/></argument_list></call></expr> <pos:position pos:line="67" pos:column="74"/></then><else pos:line="67" pos:column="74">: <expr><name pos:line="67" pos:column="76">REG_ICASE<pos:position pos:line="67" pos:column="85"/></name></expr></else></ternary><operator pos:line="67" pos:column="85">)<pos:position pos:line="67" pos:column="86"/></operator></expr></argument>)<pos:position pos:line="67" pos:column="87"/></argument_list></call><operator pos:line="67" pos:column="87">)<pos:position pos:line="67" pos:column="88"/></operator> <operator pos:line="67" pos:column="89">!=<pos:position pos:line="67" pos:column="91"/></operator> <literal type="number" pos:line="67" pos:column="92">0<pos:position pos:line="67" pos:column="93"/></literal></expr>)<pos:position pos:line="67" pos:column="94"/></condition><then pos:line="67" pos:column="94">
    <block pos:line="68" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="69" pos:column="7">regerror<pos:position pos:line="69" pos:column="15"/></name> <argument_list pos:line="69" pos:column="16">(<argument><expr><name pos:line="69" pos:column="17">r<pos:position pos:line="69" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="20">&amp;<pos:position pos:line="69" pos:column="25"/></operator><name><name pos:line="69" pos:column="21">tmp<pos:position pos:line="69" pos:column="24"/></name><operator pos:line="69" pos:column="24">-&gt;<pos:position pos:line="69" pos:column="29"/></operator><name pos:line="69" pos:column="26">rx<pos:position pos:line="69" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="30">err<pos:position pos:line="69" pos:column="33"/></name><operator pos:line="69" pos:column="33">-&gt;<pos:position pos:line="69" pos:column="38"/></operator><name pos:line="69" pos:column="35">data<pos:position pos:line="69" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="41">err<pos:position pos:line="69" pos:column="44"/></name><operator pos:line="69" pos:column="44">-&gt;<pos:position pos:line="69" pos:column="49"/></operator><name pos:line="69" pos:column="46">dsize<pos:position pos:line="69" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="70" pos:column="7">mutt_free_color_line<pos:position pos:line="70" pos:column="27"/></name><argument_list pos:line="70" pos:column="27">(<argument><expr><operator pos:line="70" pos:column="28">&amp;<pos:position pos:line="70" pos:column="33"/></operator><name pos:line="70" pos:column="29">tmp<pos:position pos:line="70" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="34">1<pos:position pos:line="70" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="37"/></expr_stmt>
      <return pos:line="71" pos:column="7">return <expr><operator pos:line="71" pos:column="14">(<pos:position pos:line="71" pos:column="15"/></operator><operator pos:line="71" pos:column="15">-<pos:position pos:line="71" pos:column="16"/></operator><literal type="number" pos:line="71" pos:column="16">1<pos:position pos:line="71" pos:column="17"/></literal><operator pos:line="71" pos:column="17">)<pos:position pos:line="71" pos:column="18"/></operator></expr>;<pos:position pos:line="71" pos:column="19"/></return>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if></elseif></if>
    <expr_stmt><expr><name><name pos:line="73" pos:column="5">tmp<pos:position pos:line="73" pos:column="8"/></name><operator pos:line="73" pos:column="8">-&gt;<pos:position pos:line="73" pos:column="13"/></operator><name pos:line="73" pos:column="10">next<pos:position pos:line="73" pos:column="14"/></name></name> <operator pos:line="73" pos:column="15">=<pos:position pos:line="73" pos:column="16"/></operator> <operator pos:line="73" pos:column="17">*<pos:position pos:line="73" pos:column="18"/></operator><name pos:line="73" pos:column="18">top<pos:position pos:line="73" pos:column="21"/></name></expr>;<pos:position pos:line="73" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="74" pos:column="5">tmp<pos:position pos:line="74" pos:column="8"/></name><operator pos:line="74" pos:column="8">-&gt;<pos:position pos:line="74" pos:column="13"/></operator><name pos:line="74" pos:column="10">pattern<pos:position pos:line="74" pos:column="17"/></name></name> <operator pos:line="74" pos:column="18">=<pos:position pos:line="74" pos:column="19"/></operator> <call><name pos:line="74" pos:column="20">safe_strdup<pos:position pos:line="74" pos:column="31"/></name> <argument_list pos:line="74" pos:column="32">(<argument><expr><name pos:line="74" pos:column="33">s<pos:position pos:line="74" pos:column="34"/></name></expr></argument>)<pos:position pos:line="74" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="36"/></expr_stmt>
<cpp:ifdef pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">ifdef<pos:position pos:line="75" pos:column="7"/></cpp:directive> <name pos:line="75" pos:column="8">HAVE_COLOR<pos:position pos:line="75" pos:column="18"/></name></cpp:ifdef>
    <if pos:line="76" pos:column="5">if<condition pos:line="76" pos:column="7">(<expr><name pos:line="76" pos:column="8">fg<pos:position pos:line="76" pos:column="10"/></name> <operator pos:line="76" pos:column="11">!=<pos:position pos:line="76" pos:column="13"/></operator> <operator pos:line="76" pos:column="14">-<pos:position pos:line="76" pos:column="15"/></operator><literal type="number" pos:line="76" pos:column="15">1<pos:position pos:line="76" pos:column="16"/></literal> <operator pos:line="76" pos:column="17">&amp;&amp;<pos:position pos:line="76" pos:column="27"/></operator> <name pos:line="76" pos:column="20">bg<pos:position pos:line="76" pos:column="22"/></name> <operator pos:line="76" pos:column="23">!=<pos:position pos:line="76" pos:column="25"/></operator> <operator pos:line="76" pos:column="26">-<pos:position pos:line="76" pos:column="27"/></operator><literal type="number" pos:line="76" pos:column="27">1<pos:position pos:line="76" pos:column="28"/></literal></expr>)<pos:position pos:line="76" pos:column="29"/></condition><then pos:line="76" pos:column="29">
    <block pos:line="77" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="78" pos:column="7">tmp<pos:position pos:line="78" pos:column="10"/></name><operator pos:line="78" pos:column="10">-&gt;<pos:position pos:line="78" pos:column="15"/></operator><name pos:line="78" pos:column="12">fg<pos:position pos:line="78" pos:column="14"/></name></name> <operator pos:line="78" pos:column="15">=<pos:position pos:line="78" pos:column="16"/></operator> <name pos:line="78" pos:column="17">fg<pos:position pos:line="78" pos:column="19"/></name></expr>;<pos:position pos:line="78" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="79" pos:column="7">tmp<pos:position pos:line="79" pos:column="10"/></name><operator pos:line="79" pos:column="10">-&gt;<pos:position pos:line="79" pos:column="15"/></operator><name pos:line="79" pos:column="12">bg<pos:position pos:line="79" pos:column="14"/></name></name> <operator pos:line="79" pos:column="15">=<pos:position pos:line="79" pos:column="16"/></operator> <name pos:line="79" pos:column="17">bg<pos:position pos:line="79" pos:column="19"/></name></expr>;<pos:position pos:line="79" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name pos:line="80" pos:column="7">attr<pos:position pos:line="80" pos:column="11"/></name> <operator pos:line="80" pos:column="12">|=<pos:position pos:line="80" pos:column="14"/></operator> <call><name pos:line="80" pos:column="15">mutt_alloc_color<pos:position pos:line="80" pos:column="31"/></name> <argument_list pos:line="80" pos:column="32">(<argument><expr><name pos:line="80" pos:column="33">fg<pos:position pos:line="80" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="37">bg<pos:position pos:line="80" pos:column="39"/></name></expr></argument>)<pos:position pos:line="80" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if>
<cpp:endif pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">endif<pos:position pos:line="82" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name><name pos:line="83" pos:column="5">tmp<pos:position pos:line="83" pos:column="8"/></name><operator pos:line="83" pos:column="8">-&gt;<pos:position pos:line="83" pos:column="13"/></operator><name pos:line="83" pos:column="10">pair<pos:position pos:line="83" pos:column="14"/></name></name> <operator pos:line="83" pos:column="15">=<pos:position pos:line="83" pos:column="16"/></operator> <name pos:line="83" pos:column="17">attr<pos:position pos:line="83" pos:column="21"/></name></expr>;<pos:position pos:line="83" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="84" pos:column="5">*<pos:position pos:line="84" pos:column="6"/></operator><name pos:line="84" pos:column="6">top<pos:position pos:line="84" pos:column="9"/></name> <operator pos:line="84" pos:column="10">=<pos:position pos:line="84" pos:column="11"/></operator> <name pos:line="84" pos:column="12">tmp<pos:position pos:line="84" pos:column="15"/></name></expr>;<pos:position pos:line="84" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="85" pos:column="4"/></block></else></if>

  <return pos:line="87" pos:column="3">return <expr><literal type="number" pos:line="87" pos:column="10">0<pos:position pos:line="87" pos:column="11"/></literal></expr>;<pos:position pos:line="87" pos:column="12"/></return>
}<pos:position pos:line="88" pos:column="2"/></block></function></unit>

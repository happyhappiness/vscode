<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1787_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">escape_string<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">dst<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">size_t<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">len<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name pos:line="1" pos:column="59">char<pos:position pos:line="1" pos:column="63"/></name><modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type> <name pos:line="1" pos:column="65">src<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name><modifier pos:line="3" pos:column="7">*<pos:position pos:line="3" pos:column="8"/></modifier></type> <name pos:line="3" pos:column="9">p<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><name pos:line="3" pos:column="13">dst<pos:position pos:line="3" pos:column="16"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">!<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">len<pos:position pos:line="5" pos:column="11"/></name></expr>)<pos:position pos:line="5" pos:column="12"/></condition><then pos:line="5" pos:column="12">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><literal type="number" pos:line="6" pos:column="12">0<pos:position pos:line="6" pos:column="13"/></literal></expr>;<pos:position pos:line="6" pos:column="14"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="7" pos:column="3">len<pos:position pos:line="7" pos:column="6"/></name><operator pos:line="7" pos:column="6">--<pos:position pos:line="7" pos:column="8"/></operator></expr>;<pos:position pos:line="7" pos:column="9"/></expr_stmt> <comment type="block" pos:line="7" pos:column="10">/* save room for \0 */</comment>
<cpp:define pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">define<pos:position pos:line="8" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="8" pos:column="9">ESC_CHAR<pos:position pos:line="8" pos:column="17"/></name><parameter_list pos:line="8" pos:column="17">(<parameter><type><name pos:line="8" pos:column="18">C<pos:position pos:line="8" pos:column="19"/></name></type></parameter>)<pos:position pos:line="8" pos:column="20"/></parameter_list></cpp:macro>	<cpp:value pos:line="8" pos:column="25">do { *p++ = '\\'; if (p - dst &lt; len) *p++ = C; } while(0)<pos:position pos:line="8" pos:column="82"/></cpp:value></cpp:define>
  <while pos:line="9" pos:column="3">while <condition pos:line="9" pos:column="9">(<expr><name pos:line="9" pos:column="10">p<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">-<pos:position pos:line="9" pos:column="13"/></operator> <name pos:line="9" pos:column="14">dst<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">&lt;<pos:position pos:line="9" pos:column="22"/></operator> <name pos:line="9" pos:column="20">len<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">&amp;&amp;<pos:position pos:line="9" pos:column="34"/></operator> <name pos:line="9" pos:column="27">src<pos:position pos:line="9" pos:column="30"/></name> <operator pos:line="9" pos:column="31">&amp;&amp;<pos:position pos:line="9" pos:column="41"/></operator> <operator pos:line="9" pos:column="34">*<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="35">src<pos:position pos:line="9" pos:column="38"/></name></expr>)<pos:position pos:line="9" pos:column="39"/></condition>
  <block pos:line="10" pos:column="3">{
    <switch pos:line="11" pos:column="5">switch <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">*<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">src<pos:position pos:line="11" pos:column="17"/></name></expr>)<pos:position pos:line="11" pos:column="18"/></condition>
    <block pos:line="12" pos:column="5">{
    <case pos:line="13" pos:column="5">case <expr><literal type="char" pos:line="13" pos:column="10">'\n'<pos:position pos:line="13" pos:column="14"/></literal></expr>:<pos:position pos:line="13" pos:column="15"/></case>
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">ESC_CHAR<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="char" pos:line="14" pos:column="16">'n'<pos:position pos:line="14" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
      <break pos:line="15" pos:column="7">break;<pos:position pos:line="15" pos:column="13"/></break>
    <case pos:line="16" pos:column="5">case <expr><literal type="char" pos:line="16" pos:column="10">'\r'<pos:position pos:line="16" pos:column="14"/></literal></expr>:<pos:position pos:line="16" pos:column="15"/></case>
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">ESC_CHAR<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="char" pos:line="17" pos:column="16">'r'<pos:position pos:line="17" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt>
      <break pos:line="18" pos:column="7">break;<pos:position pos:line="18" pos:column="13"/></break>
    <case pos:line="19" pos:column="5">case <expr><literal type="char" pos:line="19" pos:column="10">'\t'<pos:position pos:line="19" pos:column="14"/></literal></expr>:<pos:position pos:line="19" pos:column="15"/></case>
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">ESC_CHAR<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><literal type="char" pos:line="20" pos:column="16">'t'<pos:position pos:line="20" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>
      <break pos:line="21" pos:column="7">break;<pos:position pos:line="21" pos:column="13"/></break>
    <default pos:line="22" pos:column="5">default:<pos:position pos:line="22" pos:column="13"/></default>
      <if pos:line="23" pos:column="7">if <condition pos:line="23" pos:column="10">(<expr><operator pos:line="23" pos:column="11">(<pos:position pos:line="23" pos:column="12"/></operator><operator pos:line="23" pos:column="12">*<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">src<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">==<pos:position pos:line="23" pos:column="19"/></operator> <literal type="char" pos:line="23" pos:column="20">'\\'<pos:position pos:line="23" pos:column="24"/></literal> <operator pos:line="23" pos:column="25">||<pos:position pos:line="23" pos:column="27"/></operator> <operator pos:line="23" pos:column="28">*<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="29">src<pos:position pos:line="23" pos:column="32"/></name> <operator pos:line="23" pos:column="33">==<pos:position pos:line="23" pos:column="35"/></operator> <literal type="char" pos:line="23" pos:column="36">'"'<pos:position pos:line="23" pos:column="39"/></literal><operator pos:line="23" pos:column="39">)<pos:position pos:line="23" pos:column="40"/></operator> <operator pos:line="23" pos:column="41">&amp;&amp;<pos:position pos:line="23" pos:column="51"/></operator> <name pos:line="23" pos:column="44">p<pos:position pos:line="23" pos:column="45"/></name> <operator pos:line="23" pos:column="46">-<pos:position pos:line="23" pos:column="47"/></operator> <name pos:line="23" pos:column="48">dst<pos:position pos:line="23" pos:column="51"/></name> <operator pos:line="23" pos:column="52">&lt;<pos:position pos:line="23" pos:column="56"/></operator> <name pos:line="23" pos:column="54">len<pos:position pos:line="23" pos:column="57"/></name> <operator pos:line="23" pos:column="58">-<pos:position pos:line="23" pos:column="59"/></operator> <literal type="number" pos:line="23" pos:column="60">1<pos:position pos:line="23" pos:column="61"/></literal></expr>)<pos:position pos:line="23" pos:column="62"/></condition><then pos:line="23" pos:column="62">
	<block type="pseudo"><expr_stmt><expr><operator pos:line="24" pos:column="9">*<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">p<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">++<pos:position pos:line="24" pos:column="13"/></operator> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <literal type="char" pos:line="24" pos:column="16">'\\'<pos:position pos:line="24" pos:column="20"/></literal></expr>;<pos:position pos:line="24" pos:column="21"/></expr_stmt></block></then></if>
      <expr_stmt><expr><operator pos:line="25" pos:column="7">*<pos:position pos:line="25" pos:column="8"/></operator><name pos:line="25" pos:column="8">p<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">++<pos:position pos:line="25" pos:column="11"/></operator> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <operator pos:line="25" pos:column="14">*<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">src<pos:position pos:line="25" pos:column="18"/></name></expr>;<pos:position pos:line="25" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></switch>
    <expr_stmt><expr><name pos:line="27" pos:column="5">src<pos:position pos:line="27" pos:column="8"/></name><operator pos:line="27" pos:column="8">++<pos:position pos:line="27" pos:column="10"/></operator></expr>;<pos:position pos:line="27" pos:column="11"/></expr_stmt>
  }<pos:position pos:line="28" pos:column="4"/></block></while>
<cpp:undef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">undef<pos:position pos:line="29" pos:column="7"/></cpp:directive> <name pos:line="29" pos:column="8">ESC_CHAR<pos:position pos:line="29" pos:column="16"/></name></cpp:undef>
  <expr_stmt><expr><operator pos:line="30" pos:column="3">*<pos:position pos:line="30" pos:column="4"/></operator><name pos:line="30" pos:column="4">p<pos:position pos:line="30" pos:column="5"/></name> <operator pos:line="30" pos:column="6">=<pos:position pos:line="30" pos:column="7"/></operator> <literal type="char" pos:line="30" pos:column="8">'\0'<pos:position pos:line="30" pos:column="12"/></literal></expr>;<pos:position pos:line="30" pos:column="13"/></expr_stmt>
  <return pos:line="31" pos:column="3">return <expr><name pos:line="31" pos:column="10">p<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">-<pos:position pos:line="31" pos:column="13"/></operator> <name pos:line="31" pos:column="14">dst<pos:position pos:line="31" pos:column="17"/></name></expr>;<pos:position pos:line="31" pos:column="18"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

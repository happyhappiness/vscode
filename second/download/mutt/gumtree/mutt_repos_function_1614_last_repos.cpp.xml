<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1614_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">dotlock_deference_symlink<pos:position pos:line="2" pos:column="26"/></name> <parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><name pos:line="2" pos:column="28">char<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">d<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">size_t<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">l<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier> <name pos:line="2" pos:column="53">char<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">path<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">stat<pos:position pos:line="4" pos:column="14"/></name></name></type> <name pos:line="4" pos:column="15">sb<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">realpath<pos:position pos:line="5" pos:column="16"/></name><index pos:line="5" pos:column="16">[<expr><name pos:line="5" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="5" pos:column="32"/></name></expr>]<pos:position pos:line="5" pos:column="33"/></index></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">pathptr<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><name pos:line="6" pos:column="25">path<pos:position pos:line="6" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">count<pos:position pos:line="7" pos:column="12"/></name> <init pos:line="7" pos:column="13">= <expr><literal type="number" pos:line="7" pos:column="15">0<pos:position pos:line="7" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
  
  <while pos:line="9" pos:column="3">while <condition pos:line="9" pos:column="9">(<expr><name pos:line="9" pos:column="10">count<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">++<pos:position pos:line="9" pos:column="17"/></operator> <operator pos:line="9" pos:column="18">&lt;<pos:position pos:line="9" pos:column="22"/></operator> <name pos:line="9" pos:column="20">MAXLINKS<pos:position pos:line="9" pos:column="28"/></name></expr>)<pos:position pos:line="9" pos:column="29"/></condition>
  <block pos:line="10" pos:column="3">{
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">lstat<pos:position pos:line="11" pos:column="14"/></name> <argument_list pos:line="11" pos:column="15">(<argument><expr><name pos:line="11" pos:column="16">pathptr<pos:position pos:line="11" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="25">&amp;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="26">sb<pos:position pos:line="11" pos:column="28"/></name></expr></argument>)<pos:position pos:line="11" pos:column="29"/></argument_list></call> <operator pos:line="11" pos:column="30">==<pos:position pos:line="11" pos:column="32"/></operator> <operator pos:line="11" pos:column="33">-<pos:position pos:line="11" pos:column="34"/></operator><literal type="number" pos:line="11" pos:column="34">1<pos:position pos:line="11" pos:column="35"/></literal></expr>)<pos:position pos:line="11" pos:column="36"/></condition><then pos:line="11" pos:column="36">
    <block pos:line="12" pos:column="5">{
      <comment type="block" pos:line="13" pos:column="7">/* perror (pathptr); */</comment>
      <return pos:line="14" pos:column="7">return <expr><operator pos:line="14" pos:column="14">-<pos:position pos:line="14" pos:column="15"/></operator><literal type="number" pos:line="14" pos:column="15">1<pos:position pos:line="14" pos:column="16"/></literal></expr>;<pos:position pos:line="14" pos:column="17"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name pos:line="17" pos:column="9">S_ISLNK<pos:position pos:line="17" pos:column="16"/></name> <argument_list pos:line="17" pos:column="17">(<argument><expr><name><name pos:line="17" pos:column="18">sb<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">.<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="21">st_mode<pos:position pos:line="17" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="30"/></condition><then pos:line="17" pos:column="30">
    <block pos:line="18" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="19" pos:column="7">char<pos:position pos:line="19" pos:column="11"/></name></type> <name><name pos:line="19" pos:column="12">linkfile<pos:position pos:line="19" pos:column="20"/></name><index pos:line="19" pos:column="20">[<expr><name pos:line="19" pos:column="21">_POSIX_PATH_MAX<pos:position pos:line="19" pos:column="36"/></name></expr>]<pos:position pos:line="19" pos:column="37"/></index></name></decl>;<pos:position pos:line="19" pos:column="38"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="20" pos:column="7">char<pos:position pos:line="20" pos:column="11"/></name></type> <name><name pos:line="20" pos:column="12">linkpath<pos:position pos:line="20" pos:column="20"/></name><index pos:line="20" pos:column="20">[<expr><name pos:line="20" pos:column="21">_POSIX_PATH_MAX<pos:position pos:line="20" pos:column="36"/></name></expr>]<pos:position pos:line="20" pos:column="37"/></index></name></decl>;<pos:position pos:line="20" pos:column="38"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="21" pos:column="7">int<pos:position pos:line="21" pos:column="10"/></name></type> <name pos:line="21" pos:column="11">len<pos:position pos:line="21" pos:column="14"/></name></decl>;<pos:position pos:line="21" pos:column="15"/></decl_stmt>

      <if pos:line="23" pos:column="7">if <condition pos:line="23" pos:column="10">(<expr><operator pos:line="23" pos:column="11">(<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="12">len<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <call><name pos:line="23" pos:column="18">readlink<pos:position pos:line="23" pos:column="26"/></name> <argument_list pos:line="23" pos:column="27">(<argument><expr><name pos:line="23" pos:column="28">pathptr<pos:position pos:line="23" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="37">linkfile<pos:position pos:line="23" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="47">sizeof <argument_list pos:line="23" pos:column="54">(<argument><expr><name pos:line="23" pos:column="55">linkfile<pos:position pos:line="23" pos:column="63"/></name></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></sizeof> <operator pos:line="23" pos:column="65">-<pos:position pos:line="23" pos:column="66"/></operator> <literal type="number" pos:line="23" pos:column="67">1<pos:position pos:line="23" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="69"/></argument_list></call><operator pos:line="23" pos:column="69">)<pos:position pos:line="23" pos:column="70"/></operator> <operator pos:line="23" pos:column="71">==<pos:position pos:line="23" pos:column="73"/></operator> <operator pos:line="23" pos:column="74">-<pos:position pos:line="23" pos:column="75"/></operator><literal type="number" pos:line="23" pos:column="75">1<pos:position pos:line="23" pos:column="76"/></literal></expr>)<pos:position pos:line="23" pos:column="77"/></condition><then pos:line="23" pos:column="77">
      <block pos:line="24" pos:column="7">{
	<comment type="block" pos:line="25" pos:column="9">/* perror (pathptr); */</comment>
	<return pos:line="26" pos:column="9">return <expr><operator pos:line="26" pos:column="16">-<pos:position pos:line="26" pos:column="17"/></operator><literal type="number" pos:line="26" pos:column="17">1<pos:position pos:line="26" pos:column="18"/></literal></expr>;<pos:position pos:line="26" pos:column="19"/></return>
      }<pos:position pos:line="27" pos:column="8"/></block></then></if>
      
      <expr_stmt><expr><name><name pos:line="29" pos:column="7">linkfile<pos:position pos:line="29" pos:column="15"/></name><index pos:line="29" pos:column="15">[<expr><name pos:line="29" pos:column="16">len<pos:position pos:line="29" pos:column="19"/></name></expr>]<pos:position pos:line="29" pos:column="20"/></index></name> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <literal type="char" pos:line="29" pos:column="23">'\0'<pos:position pos:line="29" pos:column="27"/></literal></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">dotlock_expand_link<pos:position pos:line="30" pos:column="26"/></name> <argument_list pos:line="30" pos:column="27">(<argument><expr><name pos:line="30" pos:column="28">linkpath<pos:position pos:line="30" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="38">pathptr<pos:position pos:line="30" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="47">linkfile<pos:position pos:line="30" pos:column="55"/></name></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="57"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">strfcpy<pos:position pos:line="31" pos:column="14"/></name> <argument_list pos:line="31" pos:column="15">(<argument><expr><name pos:line="31" pos:column="16">realpath<pos:position pos:line="31" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="26">linkpath<pos:position pos:line="31" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="36">sizeof <argument_list pos:line="31" pos:column="43">(<argument><expr><name pos:line="31" pos:column="44">realpath<pos:position pos:line="31" pos:column="52"/></name></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name pos:line="32" pos:column="7">pathptr<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">=<pos:position pos:line="32" pos:column="16"/></operator> <name pos:line="32" pos:column="17">realpath<pos:position pos:line="32" pos:column="25"/></name></expr>;<pos:position pos:line="32" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then>
    <else pos:line="34" pos:column="5">else
      <block type="pseudo"><break pos:line="35" pos:column="7">break;<pos:position pos:line="35" pos:column="13"/></break></block></else></if>
  }<pos:position pos:line="36" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="38" pos:column="3">strfcpy<pos:position pos:line="38" pos:column="10"/></name> <argument_list pos:line="38" pos:column="11">(<argument><expr><name pos:line="38" pos:column="12">d<pos:position pos:line="38" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="15">pathptr<pos:position pos:line="38" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="24">l<pos:position pos:line="38" pos:column="25"/></name></expr></argument>)<pos:position pos:line="38" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt>
  <return pos:line="39" pos:column="3">return <expr><literal type="number" pos:line="39" pos:column="10">0<pos:position pos:line="39" pos:column="11"/></literal></expr>;<pos:position pos:line="39" pos:column="12"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

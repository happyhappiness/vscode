<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1788_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">pretty_var<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">dst<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">size_t<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">len<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">option<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="68">const<pos:position pos:line="1" pos:column="73"/></specifier> <name pos:line="1" pos:column="74">char<pos:position pos:line="1" pos:column="78"/></name> <modifier pos:line="1" pos:column="79">*<pos:position pos:line="1" pos:column="80"/></modifier></type><name pos:line="1" pos:column="80">val<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="84"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">p<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">!<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">len<pos:position pos:line="5" pos:column="11"/></name></expr>)<pos:position pos:line="5" pos:column="12"/></condition><then pos:line="5" pos:column="12">
    <block type="pseudo"><return pos:line="6" pos:column="5">return;<pos:position pos:line="6" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">strfcpy<pos:position pos:line="8" pos:column="10"/></name> <argument_list pos:line="8" pos:column="11">(<argument><expr><name pos:line="8" pos:column="12">dst<pos:position pos:line="8" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="17">option<pos:position pos:line="8" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="25">len<pos:position pos:line="8" pos:column="28"/></name></expr></argument>)<pos:position pos:line="8" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name pos:line="9" pos:column="3">len<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">--<pos:position pos:line="9" pos:column="8"/></operator></expr>;<pos:position pos:line="9" pos:column="9"/></expr_stmt> <comment type="block" pos:line="9" pos:column="10">/* save room for \0 */</comment>
  <expr_stmt><expr><name pos:line="10" pos:column="3">p<pos:position pos:line="10" pos:column="4"/></name> <operator pos:line="10" pos:column="5">=<pos:position pos:line="10" pos:column="6"/></operator> <name pos:line="10" pos:column="7">dst<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">+<pos:position pos:line="10" pos:column="12"/></operator> <call><name pos:line="10" pos:column="13">mutt_strlen<pos:position pos:line="10" pos:column="24"/></name> <argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">dst<pos:position pos:line="10" pos:column="29"/></name></expr></argument>)<pos:position pos:line="10" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">p<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">-<pos:position pos:line="12" pos:column="10"/></operator> <name pos:line="12" pos:column="11">dst<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">&lt;<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="17">len<pos:position pos:line="12" pos:column="20"/></name></expr>)<pos:position pos:line="12" pos:column="21"/></condition><then pos:line="12" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="13" pos:column="5">*<pos:position pos:line="13" pos:column="6"/></operator><name pos:line="13" pos:column="6">p<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">++<pos:position pos:line="13" pos:column="9"/></operator> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <literal type="char" pos:line="13" pos:column="12">'='<pos:position pos:line="13" pos:column="15"/></literal></expr>;<pos:position pos:line="13" pos:column="16"/></expr_stmt></block></then></if>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">p<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">-<pos:position pos:line="14" pos:column="10"/></operator> <name pos:line="14" pos:column="11">dst<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">&lt;<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="17">len<pos:position pos:line="14" pos:column="20"/></name></expr>)<pos:position pos:line="14" pos:column="21"/></condition><then pos:line="14" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="15" pos:column="5">*<pos:position pos:line="15" pos:column="6"/></operator><name pos:line="15" pos:column="6">p<pos:position pos:line="15" pos:column="7"/></name><operator pos:line="15" pos:column="7">++<pos:position pos:line="15" pos:column="9"/></operator> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <literal type="char" pos:line="15" pos:column="12">'"'<pos:position pos:line="15" pos:column="15"/></literal></expr>;<pos:position pos:line="15" pos:column="16"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name pos:line="16" pos:column="3">p<pos:position pos:line="16" pos:column="4"/></name> <operator pos:line="16" pos:column="5">+=<pos:position pos:line="16" pos:column="7"/></operator> <call><name pos:line="16" pos:column="8">escape_string<pos:position pos:line="16" pos:column="21"/></name> <argument_list pos:line="16" pos:column="22">(<argument><expr><name pos:line="16" pos:column="23">p<pos:position pos:line="16" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="26">len<pos:position pos:line="16" pos:column="29"/></name> <operator pos:line="16" pos:column="30">-<pos:position pos:line="16" pos:column="31"/></operator> <operator pos:line="16" pos:column="32">(<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="33">p<pos:position pos:line="16" pos:column="34"/></name> <operator pos:line="16" pos:column="35">-<pos:position pos:line="16" pos:column="36"/></operator> <name pos:line="16" pos:column="37">dst<pos:position pos:line="16" pos:column="40"/></name><operator pos:line="16" pos:column="40">)<pos:position pos:line="16" pos:column="41"/></operator> <operator pos:line="16" pos:column="42">+<pos:position pos:line="16" pos:column="43"/></operator> <literal type="number" pos:line="16" pos:column="44">1<pos:position pos:line="16" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="47">val<pos:position pos:line="16" pos:column="50"/></name></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="52"/></expr_stmt>	<comment type="block" pos:line="16" pos:column="57">/* \0 terminate it */</comment>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">p<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">-<pos:position pos:line="17" pos:column="10"/></operator> <name pos:line="17" pos:column="11">dst<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">&lt;<pos:position pos:line="17" pos:column="19"/></operator> <name pos:line="17" pos:column="17">len<pos:position pos:line="17" pos:column="20"/></name></expr>)<pos:position pos:line="17" pos:column="21"/></condition><then pos:line="17" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="18" pos:column="5">*<pos:position pos:line="18" pos:column="6"/></operator><name pos:line="18" pos:column="6">p<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">++<pos:position pos:line="18" pos:column="9"/></operator> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <literal type="char" pos:line="18" pos:column="12">'"'<pos:position pos:line="18" pos:column="15"/></literal></expr>;<pos:position pos:line="18" pos:column="16"/></expr_stmt></block></then></if>
  <expr_stmt><expr><operator pos:line="19" pos:column="3">*<pos:position pos:line="19" pos:column="4"/></operator><name pos:line="19" pos:column="4">p<pos:position pos:line="19" pos:column="5"/></name> <operator pos:line="19" pos:column="6">=<pos:position pos:line="19" pos:column="7"/></operator> <literal type="number" pos:line="19" pos:column="8">0<pos:position pos:line="19" pos:column="9"/></literal></expr>;<pos:position pos:line="19" pos:column="10"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

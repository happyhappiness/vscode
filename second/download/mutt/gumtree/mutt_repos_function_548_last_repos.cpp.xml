<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_548_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">MESSAGE<pos:position pos:line="1" pos:column="8"/></name> <modifier pos:line="1" pos:column="9">*<pos:position pos:line="1" pos:column="10"/></modifier></type><name pos:line="1" pos:column="10">mx_open_message<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">CONTEXT<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">ctx<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">int<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">msgno<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">MESSAGE<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">msg<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">!<pos:position pos:line="5" pos:column="8"/></operator><name><name pos:line="5" pos:column="8">ctx<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">-&gt;<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="13">mx_ops<pos:position pos:line="5" pos:column="19"/></name></name> <operator pos:line="5" pos:column="20">||<pos:position pos:line="5" pos:column="22"/></operator> <operator pos:line="5" pos:column="23">!<pos:position pos:line="5" pos:column="24"/></operator><name><name pos:line="5" pos:column="24">ctx<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">-&gt;<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="29">mx_ops<pos:position pos:line="5" pos:column="35"/></name><operator pos:line="5" pos:column="35">-&gt;<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="37">open_msg<pos:position pos:line="5" pos:column="45"/></name></name></expr>)<pos:position pos:line="5" pos:column="46"/></condition><then pos:line="5" pos:column="46">
  <block pos:line="6" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">dprint<pos:position pos:line="7" pos:column="11"/></name> <argument_list pos:line="7" pos:column="12">(<argument><expr><literal type="number" pos:line="7" pos:column="13">1<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="16">(<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">debugfile<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">,<pos:position pos:line="7" pos:column="27"/></operator> <literal type="string" pos:line="7" pos:column="28">"mx_open_message(): function not implemented for mailbox type %d.\n"<pos:position pos:line="7" pos:column="96"/></literal><operator pos:line="7" pos:column="96">,<pos:position pos:line="7" pos:column="97"/></operator> <name><name pos:line="7" pos:column="98">ctx<pos:position pos:line="7" pos:column="101"/></name><operator pos:line="7" pos:column="101">-&gt;<pos:position pos:line="7" pos:column="106"/></operator><name pos:line="7" pos:column="103">magic<pos:position pos:line="7" pos:column="108"/></name></name><operator pos:line="7" pos:column="108">)<pos:position pos:line="7" pos:column="109"/></operator></expr></argument>)<pos:position pos:line="7" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="111"/></expr_stmt>
    <return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">NULL<pos:position pos:line="8" pos:column="16"/></name></expr>;<pos:position pos:line="8" pos:column="17"/></return>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="11" pos:column="3">msg<pos:position pos:line="11" pos:column="6"/></name> <operator pos:line="11" pos:column="7">=<pos:position pos:line="11" pos:column="8"/></operator> <call><name pos:line="11" pos:column="9">safe_calloc<pos:position pos:line="11" pos:column="20"/></name> <argument_list pos:line="11" pos:column="21">(<argument><expr><literal type="number" pos:line="11" pos:column="22">1<pos:position pos:line="11" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="25">sizeof <argument_list pos:line="11" pos:column="32">(<argument><expr><name pos:line="11" pos:column="33">MESSAGE<pos:position pos:line="11" pos:column="40"/></name></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><call><name><name pos:line="12" pos:column="7">ctx<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">mx_ops<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">-&gt;<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="20">open_msg<pos:position pos:line="12" pos:column="28"/></name></name> <argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">ctx<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="35">msg<pos:position pos:line="12" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="40">msgno<pos:position pos:line="12" pos:column="45"/></name></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="47"/></condition><then pos:line="12" pos:column="47">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="5">FREE<pos:position pos:line="13" pos:column="9"/></name> <argument_list pos:line="13" pos:column="10">(<argument><expr><operator pos:line="13" pos:column="11">&amp;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="12">msg<pos:position pos:line="13" pos:column="15"/></name></expr></argument>)<pos:position pos:line="13" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="17"/></expr_stmt></block></then></if>

  <return pos:line="15" pos:column="3">return <expr><name pos:line="15" pos:column="10">msg<pos:position pos:line="15" pos:column="13"/></name></expr>;<pos:position pos:line="15" pos:column="14"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

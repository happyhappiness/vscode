<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_872_mutt-1.4.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">print_attachment_list<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">FILE<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">fp<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">int<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">tag<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">BODY<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">top<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">STATE<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">state<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">type<pos:position pos:line="3" pos:column="12"/></name> <index pos:line="3" pos:column="13">[<expr><name pos:line="3" pos:column="14">STRING<pos:position pos:line="3" pos:column="20"/></name></expr>]<pos:position pos:line="3" pos:column="21"/></index></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>


  <for pos:line="6" pos:column="3">for <control pos:line="6" pos:column="7">(<init pos:line="6" pos:column="8">;<pos:position pos:line="6" pos:column="9"/></init> <condition><expr><name pos:line="6" pos:column="10">top<pos:position pos:line="6" pos:column="13"/></name></expr>;<pos:position pos:line="6" pos:column="14"/></condition> <incr><expr><name pos:line="6" pos:column="15">top<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">=<pos:position pos:line="6" pos:column="20"/></operator> <name><name pos:line="6" pos:column="21">top<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">-&gt;<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="26">next<pos:position pos:line="6" pos:column="30"/></name></name></expr></incr>)<pos:position pos:line="6" pos:column="31"/></control>
  <block pos:line="7" pos:column="3">{
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">tag<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">||<pos:position pos:line="8" pos:column="16"/></operator> <name><name pos:line="8" pos:column="17">top<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">-&gt;<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="22">tagged<pos:position pos:line="8" pos:column="28"/></name></name></expr>)<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29">
    <block pos:line="9" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="10" pos:column="7">snprintf<pos:position pos:line="10" pos:column="15"/></name> <argument_list pos:line="10" pos:column="16">(<argument><expr><name pos:line="10" pos:column="17">type<pos:position pos:line="10" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="23">sizeof <argument_list pos:line="10" pos:column="30">(<argument><expr><name pos:line="10" pos:column="31">type<pos:position pos:line="10" pos:column="35"/></name></expr></argument>)<pos:position pos:line="10" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="38">"%s/%s"<pos:position pos:line="10" pos:column="45"/></literal></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="47">TYPE<pos:position pos:line="10" pos:column="51"/></name> <argument_list pos:line="10" pos:column="52">(<argument><expr><name pos:line="10" pos:column="53">top<pos:position pos:line="10" pos:column="56"/></name></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="59">top<pos:position pos:line="10" pos:column="62"/></name><operator pos:line="10" pos:column="62">-&gt;<pos:position pos:line="10" pos:column="67"/></operator><name pos:line="10" pos:column="64">subtype<pos:position pos:line="10" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="73"/></expr_stmt>
      <if pos:line="11" pos:column="7">if <condition pos:line="11" pos:column="10">(<expr><operator pos:line="11" pos:column="11">!<pos:position pos:line="11" pos:column="12"/></operator><call><name pos:line="11" pos:column="12">option<pos:position pos:line="11" pos:column="18"/></name> <argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">OPTATTACHSPLIT<pos:position pos:line="11" pos:column="34"/></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call> <operator pos:line="11" pos:column="36">&amp;&amp;<pos:position pos:line="11" pos:column="46"/></operator> <operator pos:line="11" pos:column="39">!<pos:position pos:line="11" pos:column="40"/></operator><call><name pos:line="11" pos:column="40">rfc1524_mailcap_lookup<pos:position pos:line="11" pos:column="62"/></name> <argument_list pos:line="11" pos:column="63">(<argument><expr><name pos:line="11" pos:column="64">top<pos:position pos:line="11" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="69">type<pos:position pos:line="11" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="75">NULL<pos:position pos:line="11" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="81">M_PRINT<pos:position pos:line="11" pos:column="88"/></name></expr></argument>)<pos:position pos:line="11" pos:column="89"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="90"/></condition><then pos:line="11" pos:column="90">
      <block pos:line="12" pos:column="7">{
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><call><name pos:line="13" pos:column="14">ascii_strcasecmp<pos:position pos:line="13" pos:column="30"/></name> <argument_list pos:line="13" pos:column="31">(<argument><expr><literal type="string" pos:line="13" pos:column="32">"text/plain"<pos:position pos:line="13" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="46">top<pos:position pos:line="13" pos:column="49"/></name><operator pos:line="13" pos:column="49">-&gt;<pos:position pos:line="13" pos:column="54"/></operator><name pos:line="13" pos:column="51">subtype<pos:position pos:line="13" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call> <operator pos:line="13" pos:column="60">||<pos:position pos:line="13" pos:column="62"/></operator>
	    <operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><call><name pos:line="14" pos:column="14">ascii_strcasecmp<pos:position pos:line="14" pos:column="30"/></name> <argument_list pos:line="14" pos:column="31">(<argument><expr><literal type="string" pos:line="14" pos:column="32">"application/postscript"<pos:position pos:line="14" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="58">top<pos:position pos:line="14" pos:column="61"/></name><operator pos:line="14" pos:column="61">-&gt;<pos:position pos:line="14" pos:column="66"/></operator><name pos:line="14" pos:column="63">subtype<pos:position pos:line="14" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="72"/></condition><then pos:line="14" pos:column="72">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="11">pipe_attachment<pos:position pos:line="15" pos:column="26"/></name> <argument_list pos:line="15" pos:column="27">(<argument><expr><name pos:line="15" pos:column="28">fp<pos:position pos:line="15" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="32">top<pos:position pos:line="15" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="37">state<pos:position pos:line="15" pos:column="42"/></name></expr></argument>)<pos:position pos:line="15" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="44"/></expr_stmt></block></then>
	<elseif pos:line="16" pos:column="9">else <if pos:line="16" pos:column="14">if <condition pos:line="16" pos:column="17">(<expr><call><name pos:line="16" pos:column="18">mutt_can_decode<pos:position pos:line="16" pos:column="33"/></name> <argument_list pos:line="16" pos:column="34">(<argument><expr><name pos:line="16" pos:column="35">top<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="40"/></condition><then pos:line="16" pos:column="40">
	<block pos:line="17" pos:column="9">{
	  <comment type="block" pos:line="18" pos:column="11">/* decode and print */</comment>

	  <decl_stmt><decl><type><name pos:line="20" pos:column="11">char<pos:position pos:line="20" pos:column="15"/></name></type> <name><name pos:line="20" pos:column="16">newfile<pos:position pos:line="20" pos:column="23"/></name><index pos:line="20" pos:column="23">[<expr><name pos:line="20" pos:column="24">_POSIX_PATH_MAX<pos:position pos:line="20" pos:column="39"/></name></expr>]<pos:position pos:line="20" pos:column="40"/></index></name> <init pos:line="20" pos:column="41">= <expr><literal type="string" pos:line="20" pos:column="43">""<pos:position pos:line="20" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="46"/></decl_stmt>
	  <decl_stmt><decl><type><name pos:line="21" pos:column="11">FILE<pos:position pos:line="21" pos:column="15"/></name> <modifier pos:line="21" pos:column="16">*<pos:position pos:line="21" pos:column="17"/></modifier></type><name pos:line="21" pos:column="17">ifp<pos:position pos:line="21" pos:column="20"/></name></decl>;<pos:position pos:line="21" pos:column="21"/></decl_stmt>

	  <expr_stmt><expr><call><name pos:line="23" pos:column="11">mutt_mktemp<pos:position pos:line="23" pos:column="22"/></name> <argument_list pos:line="23" pos:column="23">(<argument><expr><name pos:line="23" pos:column="24">newfile<pos:position pos:line="23" pos:column="31"/></name></expr></argument>)<pos:position pos:line="23" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="33"/></expr_stmt>
	  <if pos:line="24" pos:column="11">if <condition pos:line="24" pos:column="14">(<expr><call><name pos:line="24" pos:column="15">mutt_decode_save_attachment<pos:position pos:line="24" pos:column="42"/></name> <argument_list pos:line="24" pos:column="43">(<argument><expr><name pos:line="24" pos:column="44">fp<pos:position pos:line="24" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="48">top<pos:position pos:line="24" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="53">newfile<pos:position pos:line="24" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="62">M_PRINTING<pos:position pos:line="24" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="74">0<pos:position pos:line="24" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="76"/></argument_list></call> <operator pos:line="24" pos:column="77">==<pos:position pos:line="24" pos:column="79"/></operator> <literal type="number" pos:line="24" pos:column="80">0<pos:position pos:line="24" pos:column="81"/></literal></expr>)<pos:position pos:line="24" pos:column="82"/></condition><then pos:line="24" pos:column="82">
	  <block pos:line="25" pos:column="11">{
	    <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><operator pos:line="26" pos:column="17">(<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="18">ifp<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <call><name pos:line="26" pos:column="24">fopen<pos:position pos:line="26" pos:column="29"/></name> <argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">newfile<pos:position pos:line="26" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="40">"r"<pos:position pos:line="26" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call><operator pos:line="26" pos:column="44">)<pos:position pos:line="26" pos:column="45"/></operator> <operator pos:line="26" pos:column="46">!=<pos:position pos:line="26" pos:column="48"/></operator> <name pos:line="26" pos:column="49">NULL<pos:position pos:line="26" pos:column="53"/></name></expr>)<pos:position pos:line="26" pos:column="54"/></condition><then pos:line="26" pos:column="54">
	    <block pos:line="27" pos:column="13">{
	      <expr_stmt><expr><call><name pos:line="28" pos:column="15">mutt_copy_stream<pos:position pos:line="28" pos:column="31"/></name> <argument_list pos:line="28" pos:column="32">(<argument><expr><name pos:line="28" pos:column="33">ifp<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="38">state<pos:position pos:line="28" pos:column="43"/></name><operator pos:line="28" pos:column="43">-&gt;<pos:position pos:line="28" pos:column="48"/></operator><name pos:line="28" pos:column="45">fpout<pos:position pos:line="28" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="52"/></expr_stmt>
	      <expr_stmt><expr><call><name pos:line="29" pos:column="15">fclose<pos:position pos:line="29" pos:column="21"/></name> <argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">ifp<pos:position pos:line="29" pos:column="26"/></name></expr></argument>)<pos:position pos:line="29" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt>
	      <if pos:line="30" pos:column="15">if <condition pos:line="30" pos:column="18">(<expr><name pos:line="30" pos:column="19">AttachSep<pos:position pos:line="30" pos:column="28"/></name></expr>)<pos:position pos:line="30" pos:column="29"/></condition><then pos:line="30" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="17">state_puts<pos:position pos:line="31" pos:column="27"/></name> <argument_list pos:line="31" pos:column="28">(<argument><expr><name pos:line="31" pos:column="29">AttachSep<pos:position pos:line="31" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="40">state<pos:position pos:line="31" pos:column="45"/></name></expr></argument>)<pos:position pos:line="31" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="47"/></expr_stmt></block></then></if>
	    }<pos:position pos:line="32" pos:column="14"/></block></then></if>
	  }<pos:position pos:line="33" pos:column="12"/></block></then></if>
	  <expr_stmt><expr><call><name pos:line="34" pos:column="11">mutt_unlink<pos:position pos:line="34" pos:column="22"/></name> <argument_list pos:line="34" pos:column="23">(<argument><expr><name pos:line="34" pos:column="24">newfile<pos:position pos:line="34" pos:column="31"/></name></expr></argument>)<pos:position pos:line="34" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if></elseif></if>
      }<pos:position pos:line="36" pos:column="8"/></block></then>
      <else pos:line="37" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="9">mutt_print_attachment<pos:position pos:line="38" pos:column="30"/></name> <argument_list pos:line="38" pos:column="31">(<argument><expr><name pos:line="38" pos:column="32">fp<pos:position pos:line="38" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="36">top<pos:position pos:line="38" pos:column="39"/></name></expr></argument>)<pos:position pos:line="38" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt></block></else></if>
    }<pos:position pos:line="39" pos:column="6"/></block></then>
    <elseif pos:line="40" pos:column="5">else <if pos:line="40" pos:column="10">if <condition pos:line="40" pos:column="13">(<expr><name><name pos:line="40" pos:column="14">top<pos:position pos:line="40" pos:column="17"/></name><operator pos:line="40" pos:column="17">-&gt;<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="19">parts<pos:position pos:line="40" pos:column="24"/></name></name></expr>)<pos:position pos:line="40" pos:column="25"/></condition><then pos:line="40" pos:column="25">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="7">print_attachment_list<pos:position pos:line="41" pos:column="28"/></name> <argument_list pos:line="41" pos:column="29">(<argument><expr><name pos:line="41" pos:column="30">fp<pos:position pos:line="41" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="34">tag<pos:position pos:line="41" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="39">top<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">-&gt;<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="44">parts<pos:position pos:line="41" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="51">state<pos:position pos:line="41" pos:column="56"/></name></expr></argument>)<pos:position pos:line="41" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="58"/></expr_stmt></block></then></if></elseif></if>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><operator pos:line="42" pos:column="9">!<pos:position pos:line="42" pos:column="10"/></operator><name pos:line="42" pos:column="10">tag<pos:position pos:line="42" pos:column="13"/></name></expr>)<pos:position pos:line="42" pos:column="14"/></condition><then pos:line="42" pos:column="14">
      <block type="pseudo"><return pos:line="43" pos:column="7">return;<pos:position pos:line="43" pos:column="14"/></return></block></then></if>
  }<pos:position pos:line="44" pos:column="4"/></block></for>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

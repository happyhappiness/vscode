<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_979_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mix_send_message<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">LIST<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">chain<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">tempfile<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">cmd<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">HUGE_STRING<pos:position pos:line="3" pos:column="23"/></name></expr>]<pos:position pos:line="3" pos:column="24"/></index></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">tmp<pos:position pos:line="4" pos:column="11"/></name><index pos:line="4" pos:column="11">[<expr><name pos:line="4" pos:column="12">HUGE_STRING<pos:position pos:line="4" pos:column="23"/></name></expr>]<pos:position pos:line="4" pos:column="24"/></index></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">cd_quoted<pos:position pos:line="5" pos:column="17"/></name><index pos:line="5" pos:column="17">[<expr><name pos:line="5" pos:column="18">STRING<pos:position pos:line="5" pos:column="24"/></name></expr>]<pos:position pos:line="5" pos:column="25"/></index></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">i<pos:position pos:line="6" pos:column="8"/></name></decl>;<pos:position pos:line="6" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">snprintf<pos:position pos:line="8" pos:column="11"/></name> <argument_list pos:line="8" pos:column="12">(<argument><expr><name pos:line="8" pos:column="13">cmd<pos:position pos:line="8" pos:column="16"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="18">sizeof <argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">cmd<pos:position pos:line="8" pos:column="29"/></name></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="32">"cat %s | %s -m "<pos:position pos:line="8" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="51">tempfile<pos:position pos:line="8" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="61">Mixmaster<pos:position pos:line="8" pos:column="70"/></name></expr></argument>)<pos:position pos:line="8" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="72"/></expr_stmt>
  
  <for pos:line="10" pos:column="3">for <control pos:line="10" pos:column="7">(<init><expr><name pos:line="10" pos:column="8">i<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <literal type="number" pos:line="10" pos:column="12">0<pos:position pos:line="10" pos:column="13"/></literal></expr>;<pos:position pos:line="10" pos:column="14"/></init> <condition><expr><name pos:line="10" pos:column="15">chain<pos:position pos:line="10" pos:column="20"/></name></expr>;<pos:position pos:line="10" pos:column="21"/></condition> <incr><expr><name pos:line="10" pos:column="22">chain<pos:position pos:line="10" pos:column="27"/></name> <operator pos:line="10" pos:column="28">=<pos:position pos:line="10" pos:column="29"/></operator> <name><name pos:line="10" pos:column="30">chain<pos:position pos:line="10" pos:column="35"/></name><operator pos:line="10" pos:column="35">-&gt;<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="37">next<pos:position pos:line="10" pos:column="41"/></name></name></expr><operator pos:line="10" pos:column="41">,<pos:position pos:line="10" pos:column="42"/></operator> <expr><name pos:line="10" pos:column="43">i<pos:position pos:line="10" pos:column="44"/></name> <operator pos:line="10" pos:column="45">=<pos:position pos:line="10" pos:column="46"/></operator> <literal type="number" pos:line="10" pos:column="47">1<pos:position pos:line="10" pos:column="48"/></literal></expr></incr>)<pos:position pos:line="10" pos:column="49"/></control>
  <block pos:line="11" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">strfcpy<pos:position pos:line="12" pos:column="12"/></name> <argument_list pos:line="12" pos:column="13">(<argument><expr><name pos:line="12" pos:column="14">tmp<pos:position pos:line="12" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="19">cmd<pos:position pos:line="12" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="24">sizeof <argument_list pos:line="12" pos:column="31">(<argument><expr><name pos:line="12" pos:column="32">tmp<pos:position pos:line="12" pos:column="35"/></name></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">mutt_quote_filename<pos:position pos:line="13" pos:column="24"/></name> <argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">cd_quoted<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="37">sizeof <argument_list pos:line="13" pos:column="44">(<argument><expr><name pos:line="13" pos:column="45">cd_quoted<pos:position pos:line="13" pos:column="54"/></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="13" pos:column="57">(<pos:position pos:line="13" pos:column="58"/></operator><name pos:line="13" pos:column="58">char<pos:position pos:line="13" pos:column="62"/></name> <operator pos:line="13" pos:column="63">*<pos:position pos:line="13" pos:column="64"/></operator><operator pos:line="13" pos:column="64">)<pos:position pos:line="13" pos:column="65"/></operator> <name><name pos:line="13" pos:column="66">chain<pos:position pos:line="13" pos:column="71"/></name><operator pos:line="13" pos:column="71">-&gt;<pos:position pos:line="13" pos:column="76"/></operator><name pos:line="13" pos:column="73">data<pos:position pos:line="13" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="79"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">snprintf<pos:position pos:line="14" pos:column="13"/></name> <argument_list pos:line="14" pos:column="14">(<argument><expr><name pos:line="14" pos:column="15">cmd<pos:position pos:line="14" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="20">sizeof <argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">cmd<pos:position pos:line="14" pos:column="31"/></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="34">"%s%s%s"<pos:position pos:line="14" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="44">tmp<pos:position pos:line="14" pos:column="47"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="14" pos:column="49">i<pos:position pos:line="14" pos:column="50"/></name></expr> ?<pos:position pos:line="14" pos:column="52"/></condition><then pos:line="14" pos:column="52"> <expr><literal type="string" pos:line="14" pos:column="53">","<pos:position pos:line="14" pos:column="56"/></literal></expr> <pos:position pos:line="14" pos:column="57"/></then><else pos:line="14" pos:column="57">: <expr><literal type="string" pos:line="14" pos:column="59">" -l "<pos:position pos:line="14" pos:column="65"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="14" pos:column="67">cd_quoted<pos:position pos:line="14" pos:column="76"/></name></expr></argument>)<pos:position pos:line="14" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="78"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></for>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">!<pos:position pos:line="17" pos:column="8"/></operator><call><name pos:line="17" pos:column="8">option<pos:position pos:line="17" pos:column="14"/></name> <argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">OPTNOCURSES<pos:position pos:line="17" pos:column="27"/></name></expr></argument>)<pos:position pos:line="17" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="29"/></condition><then pos:line="17" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="5">mutt_endwin<pos:position pos:line="18" pos:column="16"/></name> <argument_list pos:line="18" pos:column="17">(<argument><expr><name pos:line="18" pos:column="18">NULL<pos:position pos:line="18" pos:column="22"/></name></expr></argument>)<pos:position pos:line="18" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt></block></then></if>
  
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><operator pos:line="20" pos:column="7">(<pos:position pos:line="20" pos:column="8"/></operator><name pos:line="20" pos:column="8">i<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator> <call><name pos:line="20" pos:column="12">mutt_system<pos:position pos:line="20" pos:column="23"/></name> <argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">cmd<pos:position pos:line="20" pos:column="28"/></name></expr></argument>)<pos:position pos:line="20" pos:column="29"/></argument_list></call><operator pos:line="20" pos:column="29">)<pos:position pos:line="20" pos:column="30"/></operator></expr>)<pos:position pos:line="20" pos:column="31"/></condition><then pos:line="20" pos:column="31">
  <block pos:line="21" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">fprintf<pos:position pos:line="22" pos:column="12"/></name> <argument_list pos:line="22" pos:column="13">(<argument><expr><name pos:line="22" pos:column="14">stderr<pos:position pos:line="22" pos:column="20"/></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="22">_<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">(<argument><expr><literal type="string" pos:line="22" pos:column="24">"Error sending message, child exited %d.\n"<pos:position pos:line="22" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="22" pos:column="70">i<pos:position pos:line="22" pos:column="71"/></name></expr></argument>)<pos:position pos:line="22" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="73"/></expr_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">!<pos:position pos:line="23" pos:column="10"/></operator><call><name pos:line="23" pos:column="10">option<pos:position pos:line="23" pos:column="16"/></name> <argument_list pos:line="23" pos:column="17">(<argument><expr><name pos:line="23" pos:column="18">OPTNOCURSES<pos:position pos:line="23" pos:column="29"/></name></expr></argument>)<pos:position pos:line="23" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="31"/></condition><then pos:line="23" pos:column="31">
    <block pos:line="24" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">mutt_any_key_to_continue<pos:position pos:line="25" pos:column="31"/></name> <argument_list pos:line="25" pos:column="32">(<argument><expr><name pos:line="25" pos:column="33">NULL<pos:position pos:line="25" pos:column="37"/></name></expr></argument>)<pos:position pos:line="25" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt>
      <decl_stmt><decl><type><name pos:line="26" pos:column="7">mutt_error<pos:position pos:line="26" pos:column="17"/></name></type> <name pos:line="26" pos:column="18">_<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><literal type="string" pos:line="26" pos:column="20">"Error sending message."<pos:position pos:line="26" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="45"/></argument_list></decl>;<pos:position pos:line="26" pos:column="46"/></decl_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="30" pos:column="3">unlink<pos:position pos:line="30" pos:column="9"/></name> <argument_list pos:line="30" pos:column="10">(<argument><expr><name pos:line="30" pos:column="11">tempfile<pos:position pos:line="30" pos:column="19"/></name></expr></argument>)<pos:position pos:line="30" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="21"/></expr_stmt>
  <return pos:line="31" pos:column="3">return <expr><name pos:line="31" pos:column="10">i<pos:position pos:line="31" pos:column="11"/></name></expr>;<pos:position pos:line="31" pos:column="12"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

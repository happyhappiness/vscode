<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_352_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">km_keyname<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">int<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">c<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="3" pos:column="3">static<pos:position pos:line="3" pos:column="9"/></specifier> <type><name pos:line="3" pos:column="10">char<pos:position pos:line="3" pos:column="14"/></name></type> <name><name pos:line="3" pos:column="15">buf<pos:position pos:line="3" pos:column="18"/></name><index pos:line="3" pos:column="18">[<expr><literal type="number" pos:line="3" pos:column="19">10<pos:position pos:line="3" pos:column="21"/></literal></expr>]<pos:position pos:line="3" pos:column="22"/></index></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">p<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">p<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <call><name pos:line="6" pos:column="12">mutt_getnamebyvalue<pos:position pos:line="6" pos:column="31"/></name> <argument_list pos:line="6" pos:column="32">(<argument><expr><name pos:line="6" pos:column="33">c<pos:position pos:line="6" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="36">KeyNames<pos:position pos:line="6" pos:column="44"/></name></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call><operator pos:line="6" pos:column="45">)<pos:position pos:line="6" pos:column="46"/></operator></expr>)<pos:position pos:line="6" pos:column="47"/></condition><then pos:line="6" pos:column="47">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">p<pos:position pos:line="7" pos:column="13"/></name></expr>;<pos:position pos:line="7" pos:column="14"/></return></block></then></if>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name><name pos:line="9" pos:column="7">c<pos:position pos:line="9" pos:column="8"/></name> <argument_list type="generic" pos:line="9" pos:column="9">&lt; <argument><expr><literal type="number" pos:line="9" pos:column="11">256<pos:position pos:line="9" pos:column="14"/></literal> <operator pos:line="9" pos:column="15">&amp;&amp;<pos:position pos:line="9" pos:column="25"/></operator> <name pos:line="9" pos:column="18">c<pos:position pos:line="9" pos:column="19"/></name></expr></argument> &gt;<pos:position pos:line="9" pos:column="24"/></argument_list></name> <operator pos:line="9" pos:column="22">-<pos:position pos:line="9" pos:column="23"/></operator><literal type="number" pos:line="9" pos:column="23">128<pos:position pos:line="9" pos:column="26"/></literal> <operator pos:line="9" pos:column="27">&amp;&amp;<pos:position pos:line="9" pos:column="37"/></operator> <call><name pos:line="9" pos:column="30">iscntrl<pos:position pos:line="9" pos:column="37"/></name> <argument_list pos:line="9" pos:column="38">(<argument><expr><operator pos:line="9" pos:column="39">(<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="40">unsigned<pos:position pos:line="9" pos:column="48"/></name> <name pos:line="9" pos:column="49">char<pos:position pos:line="9" pos:column="53"/></name><operator pos:line="9" pos:column="53">)<pos:position pos:line="9" pos:column="54"/></operator> <name pos:line="9" pos:column="55">c<pos:position pos:line="9" pos:column="56"/></name></expr></argument>)<pos:position pos:line="9" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="58"/></condition><then pos:line="9" pos:column="58">
  <block pos:line="10" pos:column="3">{
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">c<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">&lt;<pos:position pos:line="11" pos:column="15"/></operator> <literal type="number" pos:line="11" pos:column="13">0<pos:position pos:line="11" pos:column="14"/></literal></expr>)<pos:position pos:line="11" pos:column="15"/></condition><then pos:line="11" pos:column="15">
      <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="7">c<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">+=<pos:position pos:line="12" pos:column="11"/></operator> <literal type="number" pos:line="12" pos:column="12">256<pos:position pos:line="12" pos:column="15"/></literal></expr>;<pos:position pos:line="12" pos:column="16"/></expr_stmt></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">c<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">&lt;<pos:position pos:line="14" pos:column="15"/></operator> <literal type="number" pos:line="14" pos:column="13">128<pos:position pos:line="14" pos:column="16"/></literal></expr>)<pos:position pos:line="14" pos:column="17"/></condition><then pos:line="14" pos:column="17">
    <block pos:line="15" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="16" pos:column="7">buf<pos:position pos:line="16" pos:column="10"/></name><index pos:line="16" pos:column="10">[<expr><literal type="number" pos:line="16" pos:column="11">0<pos:position pos:line="16" pos:column="12"/></literal></expr>]<pos:position pos:line="16" pos:column="13"/></index></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <literal type="char" pos:line="16" pos:column="16">'^'<pos:position pos:line="16" pos:column="19"/></literal></expr>;<pos:position pos:line="16" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="17" pos:column="7">buf<pos:position pos:line="17" pos:column="10"/></name><index pos:line="17" pos:column="10">[<expr><literal type="number" pos:line="17" pos:column="11">1<pos:position pos:line="17" pos:column="12"/></literal></expr>]<pos:position pos:line="17" pos:column="13"/></index></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">c<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">+<pos:position pos:line="17" pos:column="20"/></operator> <literal type="char" pos:line="17" pos:column="21">'@'<pos:position pos:line="17" pos:column="24"/></literal><operator pos:line="17" pos:column="24">)<pos:position pos:line="17" pos:column="25"/></operator> <operator pos:line="17" pos:column="26">&amp;<pos:position pos:line="17" pos:column="31"/></operator> <literal type="number" pos:line="17" pos:column="28">0x7f<pos:position pos:line="17" pos:column="32"/></literal></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="18" pos:column="7">buf<pos:position pos:line="18" pos:column="10"/></name><index pos:line="18" pos:column="10">[<expr><literal type="number" pos:line="18" pos:column="11">2<pos:position pos:line="18" pos:column="12"/></literal></expr>]<pos:position pos:line="18" pos:column="13"/></index></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <literal type="number" pos:line="18" pos:column="16">0<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then>
    <else pos:line="20" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="7">snprintf<pos:position pos:line="21" pos:column="15"/></name> <argument_list pos:line="21" pos:column="16">(<argument><expr><name pos:line="21" pos:column="17">buf<pos:position pos:line="21" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="22">sizeof <argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">buf<pos:position pos:line="21" pos:column="33"/></name></expr></argument>)<pos:position pos:line="21" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="36">"\\%d%d%d"<pos:position pos:line="21" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="48">c<pos:position pos:line="21" pos:column="49"/></name> <operator pos:line="21" pos:column="50">&gt;&gt;<pos:position pos:line="21" pos:column="55"/></operator> <literal type="number" pos:line="21" pos:column="53">6<pos:position pos:line="21" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="56">(<pos:position pos:line="21" pos:column="57"/></operator><name pos:line="21" pos:column="57">c<pos:position pos:line="21" pos:column="58"/></name> <operator pos:line="21" pos:column="59">&gt;&gt;<pos:position pos:line="21" pos:column="64"/></operator> <literal type="number" pos:line="21" pos:column="62">3<pos:position pos:line="21" pos:column="63"/></literal><operator pos:line="21" pos:column="63">)<pos:position pos:line="21" pos:column="64"/></operator> <operator pos:line="21" pos:column="65">&amp;<pos:position pos:line="21" pos:column="70"/></operator> <literal type="number" pos:line="21" pos:column="67">7<pos:position pos:line="21" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="70">c<pos:position pos:line="21" pos:column="71"/></name> <operator pos:line="21" pos:column="72">&amp;<pos:position pos:line="21" pos:column="77"/></operator> <literal type="number" pos:line="21" pos:column="74">7<pos:position pos:line="21" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="77"/></expr_stmt></block></else></if>
  }<pos:position pos:line="22" pos:column="4"/></block></then>
  <elseif pos:line="23" pos:column="3">else <if pos:line="23" pos:column="8">if <condition pos:line="23" pos:column="11">(<expr><name pos:line="23" pos:column="12">c<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">&gt;=<pos:position pos:line="23" pos:column="19"/></operator> <name pos:line="23" pos:column="17">KEY_F0<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">&amp;&amp;<pos:position pos:line="23" pos:column="34"/></operator> <name pos:line="23" pos:column="27">c<pos:position pos:line="23" pos:column="28"/></name> <operator pos:line="23" pos:column="29">&lt;<pos:position pos:line="23" pos:column="33"/></operator> <call><name pos:line="23" pos:column="31">KEY_F<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">(<argument><expr><literal type="number" pos:line="23" pos:column="37">256<pos:position pos:line="23" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="42"/></condition><then pos:line="23" pos:column="42"> <comment type="block" pos:line="23" pos:column="43">/* this maximum is just a guess */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="5">sprintf<pos:position pos:line="24" pos:column="12"/></name> <argument_list pos:line="24" pos:column="13">(<argument><expr><name pos:line="24" pos:column="14">buf<pos:position pos:line="24" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="19">"&lt;F%d&gt;"<pos:position pos:line="24" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="28">c<pos:position pos:line="24" pos:column="29"/></name> <operator pos:line="24" pos:column="30">-<pos:position pos:line="24" pos:column="31"/></operator> <name pos:line="24" pos:column="32">KEY_F0<pos:position pos:line="24" pos:column="38"/></name></expr></argument>)<pos:position pos:line="24" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="40"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="25" pos:column="3">else <if pos:line="25" pos:column="8">if <condition pos:line="25" pos:column="11">(<expr><call><name pos:line="25" pos:column="12">IsPrint<pos:position pos:line="25" pos:column="19"/></name> <argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">c<pos:position pos:line="25" pos:column="22"/></name></expr></argument>)<pos:position pos:line="25" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="24"/></condition><then pos:line="25" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="5">snprintf<pos:position pos:line="26" pos:column="13"/></name> <argument_list pos:line="26" pos:column="14">(<argument><expr><name pos:line="26" pos:column="15">buf<pos:position pos:line="26" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="20">sizeof <argument_list pos:line="26" pos:column="27">(<argument><expr><name pos:line="26" pos:column="28">buf<pos:position pos:line="26" pos:column="31"/></name></expr></argument>)<pos:position pos:line="26" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="34">"%c"<pos:position pos:line="26" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="26" pos:column="40">(<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="41">unsigned<pos:position pos:line="26" pos:column="49"/></name> <name pos:line="26" pos:column="50">char<pos:position pos:line="26" pos:column="54"/></name><operator pos:line="26" pos:column="54">)<pos:position pos:line="26" pos:column="55"/></operator> <name pos:line="26" pos:column="56">c<pos:position pos:line="26" pos:column="57"/></name></expr></argument>)<pos:position pos:line="26" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="59"/></expr_stmt></block></then></if></elseif>
  <else pos:line="27" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="5">snprintf<pos:position pos:line="28" pos:column="13"/></name> <argument_list pos:line="28" pos:column="14">(<argument><expr><name pos:line="28" pos:column="15">buf<pos:position pos:line="28" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="20">sizeof <argument_list pos:line="28" pos:column="27">(<argument><expr><name pos:line="28" pos:column="28">buf<pos:position pos:line="28" pos:column="31"/></name></expr></argument>)<pos:position pos:line="28" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="34">"\\x%hx"<pos:position pos:line="28" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="28" pos:column="44">(<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="45">unsigned<pos:position pos:line="28" pos:column="53"/></name> <name pos:line="28" pos:column="54">short<pos:position pos:line="28" pos:column="59"/></name><operator pos:line="28" pos:column="59">)<pos:position pos:line="28" pos:column="60"/></operator> <name pos:line="28" pos:column="61">c<pos:position pos:line="28" pos:column="62"/></name></expr></argument>)<pos:position pos:line="28" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="64"/></expr_stmt></block></else></if>
  <return pos:line="29" pos:column="3">return <expr><operator pos:line="29" pos:column="10">(<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="11">buf<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">)<pos:position pos:line="29" pos:column="15"/></operator></expr>;<pos:position pos:line="29" pos:column="16"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1281_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">transform_to_7bit<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">BODY<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">a<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">FILE<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">fpin<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buff<pos:position pos:line="3" pos:column="12"/></name><index pos:line="3" pos:column="12">[<expr><name pos:line="3" pos:column="13">_POSIX_PATH_MAX<pos:position pos:line="3" pos:column="28"/></name></expr>]<pos:position pos:line="3" pos:column="29"/></index></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">STATE<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">s<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">stat<pos:position pos:line="5" pos:column="14"/></name></name></type> <name pos:line="5" pos:column="15">sb<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">memset<pos:position pos:line="7" pos:column="9"/></name> <argument_list pos:line="7" pos:column="10">(<argument><expr><operator pos:line="7" pos:column="11">&amp;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="12">s<pos:position pos:line="7" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="15">0<pos:position pos:line="7" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="18">sizeof <argument_list pos:line="7" pos:column="25">(<argument><expr><name pos:line="7" pos:column="26">s<pos:position pos:line="7" pos:column="27"/></name></expr></argument>)<pos:position pos:line="7" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>
  <for pos:line="8" pos:column="3">for <control pos:line="8" pos:column="7">(<init pos:line="8" pos:column="8">;<pos:position pos:line="8" pos:column="9"/></init> <condition><expr><name pos:line="8" pos:column="10">a<pos:position pos:line="8" pos:column="11"/></name></expr>;<pos:position pos:line="8" pos:column="12"/></condition> <incr><expr><name pos:line="8" pos:column="13">a<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <name><name pos:line="8" pos:column="17">a<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">-&gt;<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="20">next<pos:position pos:line="8" pos:column="24"/></name></name></expr></incr>)<pos:position pos:line="8" pos:column="25"/></control>
  <block pos:line="9" pos:column="3">{
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">a<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">type<pos:position pos:line="10" pos:column="16"/></name></name> <operator pos:line="10" pos:column="17">==<pos:position pos:line="10" pos:column="19"/></operator> <name pos:line="10" pos:column="20">TYPEMULTIPART<pos:position pos:line="10" pos:column="33"/></name></expr>)<pos:position pos:line="10" pos:column="34"/></condition><then pos:line="10" pos:column="34">
    <block pos:line="11" pos:column="5">{
      <if pos:line="12" pos:column="7">if <condition pos:line="12" pos:column="10">(<expr><name><name pos:line="12" pos:column="11">a<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">encoding<pos:position pos:line="12" pos:column="22"/></name></name> <operator pos:line="12" pos:column="23">!=<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="26">ENC7BIT<pos:position pos:line="12" pos:column="33"/></name></expr>)<pos:position pos:line="12" pos:column="34"/></condition><then pos:line="12" pos:column="34">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="9">a<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">encoding<pos:position pos:line="13" pos:column="20"/></name></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="23">ENC7BIT<pos:position pos:line="13" pos:column="30"/></name></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt></block></then></if>

      <expr_stmt><expr><call><name pos:line="15" pos:column="7">transform_to_7bit<pos:position pos:line="15" pos:column="24"/></name> <argument_list pos:line="15" pos:column="25">(<argument><expr><name><name pos:line="15" pos:column="26">a<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">-&gt;<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="29">parts<pos:position pos:line="15" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="36">fpin<pos:position pos:line="15" pos:column="40"/></name></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then>
    <elseif pos:line="17" pos:column="5">else <if pos:line="17" pos:column="10">if <condition pos:line="17" pos:column="13">(<expr><call><name pos:line="17" pos:column="14">mutt_is_message_type<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><name><name pos:line="17" pos:column="35">a<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">-&gt;<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="38">type<pos:position pos:line="17" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="44">a<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">-&gt;<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="47">subtype<pos:position pos:line="17" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="56"/></condition><then pos:line="17" pos:column="56">
    <block pos:line="18" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">mutt_message_to_7bit<pos:position pos:line="19" pos:column="27"/></name> <argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">a<pos:position pos:line="19" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="32">fpin<pos:position pos:line="19" pos:column="36"/></name></expr></argument>)<pos:position pos:line="19" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if></elseif>
    <else pos:line="21" pos:column="5">else
    <block pos:line="22" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="23" pos:column="7">a<pos:position pos:line="23" pos:column="8"/></name><operator pos:line="23" pos:column="8">-&gt;<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="10">noconv<pos:position pos:line="23" pos:column="16"/></name></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <literal type="number" pos:line="23" pos:column="19">1<pos:position pos:line="23" pos:column="20"/></literal></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="24" pos:column="7">a<pos:position pos:line="24" pos:column="8"/></name><operator pos:line="24" pos:column="8">-&gt;<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="10">force_charset<pos:position pos:line="24" pos:column="23"/></name></name> <operator pos:line="24" pos:column="24">=<pos:position pos:line="24" pos:column="25"/></operator> <literal type="number" pos:line="24" pos:column="26">1<pos:position pos:line="24" pos:column="27"/></literal></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="26" pos:column="7">mutt_mktemp<pos:position pos:line="26" pos:column="18"/></name> <argument_list pos:line="26" pos:column="19">(<argument><expr><name pos:line="26" pos:column="20">buff<pos:position pos:line="26" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="26">sizeof <argument_list pos:line="26" pos:column="33">(<argument><expr><name pos:line="26" pos:column="34">buff<pos:position pos:line="26" pos:column="38"/></name></expr></argument>)<pos:position pos:line="26" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt>
      <if pos:line="27" pos:column="7">if <condition pos:line="27" pos:column="10">(<expr><operator pos:line="27" pos:column="11">(<pos:position pos:line="27" pos:column="12"/></operator><name><name pos:line="27" pos:column="12">s<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">.<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">fpout<pos:position pos:line="27" pos:column="19"/></name></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <call><name pos:line="27" pos:column="22">safe_fopen<pos:position pos:line="27" pos:column="32"/></name> <argument_list pos:line="27" pos:column="33">(<argument><expr><name pos:line="27" pos:column="34">buff<pos:position pos:line="27" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="40">"w"<pos:position pos:line="27" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call><operator pos:line="27" pos:column="44">)<pos:position pos:line="27" pos:column="45"/></operator> <operator pos:line="27" pos:column="46">==<pos:position pos:line="27" pos:column="48"/></operator> <name pos:line="27" pos:column="49">NULL<pos:position pos:line="27" pos:column="53"/></name></expr>)<pos:position pos:line="27" pos:column="54"/></condition><then pos:line="27" pos:column="54">
      <block pos:line="28" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">mutt_perror<pos:position pos:line="29" pos:column="20"/></name> <argument_list pos:line="29" pos:column="21">(<argument><expr><literal type="string" pos:line="29" pos:column="22">"fopen"<pos:position pos:line="29" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>
	<return pos:line="30" pos:column="9">return;<pos:position pos:line="30" pos:column="16"/></return>
      }<pos:position pos:line="31" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="32" pos:column="7">s<pos:position pos:line="32" pos:column="8"/></name><operator pos:line="32" pos:column="8">.<pos:position pos:line="32" pos:column="9"/></operator><name pos:line="32" pos:column="9">fpin<pos:position pos:line="32" pos:column="13"/></name></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <name pos:line="32" pos:column="16">fpin<pos:position pos:line="32" pos:column="20"/></name></expr>;<pos:position pos:line="32" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">mutt_decode_attachment<pos:position pos:line="33" pos:column="29"/></name> <argument_list pos:line="33" pos:column="30">(<argument><expr><name pos:line="33" pos:column="31">a<pos:position pos:line="33" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="34">&amp;<pos:position pos:line="33" pos:column="39"/></operator><name pos:line="33" pos:column="35">s<pos:position pos:line="33" pos:column="36"/></name></expr></argument>)<pos:position pos:line="33" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">safe_fclose<pos:position pos:line="34" pos:column="18"/></name> <argument_list pos:line="34" pos:column="19">(<argument><expr><operator pos:line="34" pos:column="20">&amp;<pos:position pos:line="34" pos:column="25"/></operator><name><name pos:line="34" pos:column="21">s<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">.<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="23">fpout<pos:position pos:line="34" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="35" pos:column="7">FREE<pos:position pos:line="35" pos:column="11"/></name> <argument_list pos:line="35" pos:column="12">(<argument><expr><operator pos:line="35" pos:column="13">&amp;<pos:position pos:line="35" pos:column="18"/></operator><name><name pos:line="35" pos:column="14">a<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">-&gt;<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="17">d_filename<pos:position pos:line="35" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="36" pos:column="7">a<pos:position pos:line="36" pos:column="8"/></name><operator pos:line="36" pos:column="8">-&gt;<pos:position pos:line="36" pos:column="13"/></operator><name pos:line="36" pos:column="10">d_filename<pos:position pos:line="36" pos:column="20"/></name></name> <operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator> <name><name pos:line="36" pos:column="23">a<pos:position pos:line="36" pos:column="24"/></name><operator pos:line="36" pos:column="24">-&gt;<pos:position pos:line="36" pos:column="29"/></operator><name pos:line="36" pos:column="26">filename<pos:position pos:line="36" pos:column="34"/></name></name></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="37" pos:column="7">a<pos:position pos:line="37" pos:column="8"/></name><operator pos:line="37" pos:column="8">-&gt;<pos:position pos:line="37" pos:column="13"/></operator><name pos:line="37" pos:column="10">filename<pos:position pos:line="37" pos:column="18"/></name></name> <operator pos:line="37" pos:column="19">=<pos:position pos:line="37" pos:column="20"/></operator> <call><name pos:line="37" pos:column="21">safe_strdup<pos:position pos:line="37" pos:column="32"/></name> <argument_list pos:line="37" pos:column="33">(<argument><expr><name pos:line="37" pos:column="34">buff<pos:position pos:line="37" pos:column="38"/></name></expr></argument>)<pos:position pos:line="37" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="38" pos:column="7">a<pos:position pos:line="38" pos:column="8"/></name><operator pos:line="38" pos:column="8">-&gt;<pos:position pos:line="38" pos:column="13"/></operator><name pos:line="38" pos:column="10">unlink<pos:position pos:line="38" pos:column="16"/></name></name> <operator pos:line="38" pos:column="17">=<pos:position pos:line="38" pos:column="18"/></operator> <literal type="number" pos:line="38" pos:column="19">1<pos:position pos:line="38" pos:column="20"/></literal></expr>;<pos:position pos:line="38" pos:column="21"/></expr_stmt>
      <if pos:line="39" pos:column="7">if <condition pos:line="39" pos:column="10">(<expr><call><name pos:line="39" pos:column="11">stat<pos:position pos:line="39" pos:column="15"/></name> <argument_list pos:line="39" pos:column="16">(<argument><expr><name><name pos:line="39" pos:column="17">a<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">-&gt;<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="20">filename<pos:position pos:line="39" pos:column="28"/></name></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="30">&amp;<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="31">sb<pos:position pos:line="39" pos:column="33"/></name></expr></argument>)<pos:position pos:line="39" pos:column="34"/></argument_list></call> <operator pos:line="39" pos:column="35">==<pos:position pos:line="39" pos:column="37"/></operator> <operator pos:line="39" pos:column="38">-<pos:position pos:line="39" pos:column="39"/></operator><literal type="number" pos:line="39" pos:column="39">1<pos:position pos:line="39" pos:column="40"/></literal></expr>)<pos:position pos:line="39" pos:column="41"/></condition><then pos:line="39" pos:column="41">
      <block pos:line="40" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">mutt_perror<pos:position pos:line="41" pos:column="20"/></name> <argument_list pos:line="41" pos:column="21">(<argument><expr><literal type="string" pos:line="41" pos:column="22">"stat"<pos:position pos:line="41" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="30"/></expr_stmt>
	<return pos:line="42" pos:column="9">return;<pos:position pos:line="42" pos:column="16"/></return>
      }<pos:position pos:line="43" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="44" pos:column="7">a<pos:position pos:line="44" pos:column="8"/></name><operator pos:line="44" pos:column="8">-&gt;<pos:position pos:line="44" pos:column="13"/></operator><name pos:line="44" pos:column="10">length<pos:position pos:line="44" pos:column="16"/></name></name> <operator pos:line="44" pos:column="17">=<pos:position pos:line="44" pos:column="18"/></operator> <name><name pos:line="44" pos:column="19">sb<pos:position pos:line="44" pos:column="21"/></name><operator pos:line="44" pos:column="21">.<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="22">st_size<pos:position pos:line="44" pos:column="29"/></name></name></expr>;<pos:position pos:line="44" pos:column="30"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="46" pos:column="7">mutt_update_encoding<pos:position pos:line="46" pos:column="27"/></name> <argument_list pos:line="46" pos:column="28">(<argument><expr><name pos:line="46" pos:column="29">a<pos:position pos:line="46" pos:column="30"/></name></expr></argument>)<pos:position pos:line="46" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="32"/></expr_stmt>
      <if pos:line="47" pos:column="7">if <condition pos:line="47" pos:column="10">(<expr><name><name pos:line="47" pos:column="11">a<pos:position pos:line="47" pos:column="12"/></name><operator pos:line="47" pos:column="12">-&gt;<pos:position pos:line="47" pos:column="17"/></operator><name pos:line="47" pos:column="14">encoding<pos:position pos:line="47" pos:column="22"/></name></name> <operator pos:line="47" pos:column="23">==<pos:position pos:line="47" pos:column="25"/></operator> <name pos:line="47" pos:column="26">ENC8BIT<pos:position pos:line="47" pos:column="33"/></name></expr>)<pos:position pos:line="47" pos:column="34"/></condition><then pos:line="47" pos:column="34">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="48" pos:column="9">a<pos:position pos:line="48" pos:column="10"/></name><operator pos:line="48" pos:column="10">-&gt;<pos:position pos:line="48" pos:column="15"/></operator><name pos:line="48" pos:column="12">encoding<pos:position pos:line="48" pos:column="20"/></name></name> <operator pos:line="48" pos:column="21">=<pos:position pos:line="48" pos:column="22"/></operator> <name pos:line="48" pos:column="23">ENCQUOTEDPRINTABLE<pos:position pos:line="48" pos:column="41"/></name></expr>;<pos:position pos:line="48" pos:column="42"/></expr_stmt></block></then>
      <elseif pos:line="49" pos:column="7">else <if pos:line="49" pos:column="12">if<condition pos:line="49" pos:column="14">(<expr><name><name pos:line="49" pos:column="15">a<pos:position pos:line="49" pos:column="16"/></name><operator pos:line="49" pos:column="16">-&gt;<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="18">encoding<pos:position pos:line="49" pos:column="26"/></name></name> <operator pos:line="49" pos:column="27">==<pos:position pos:line="49" pos:column="29"/></operator> <name pos:line="49" pos:column="30">ENCBINARY<pos:position pos:line="49" pos:column="39"/></name></expr>)<pos:position pos:line="49" pos:column="40"/></condition><then pos:line="49" pos:column="40">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="50" pos:column="9">a<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">-&gt;<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="12">encoding<pos:position pos:line="50" pos:column="20"/></name></name> <operator pos:line="50" pos:column="21">=<pos:position pos:line="50" pos:column="22"/></operator> <name pos:line="50" pos:column="23">ENCBASE64<pos:position pos:line="50" pos:column="32"/></name></expr>;<pos:position pos:line="50" pos:column="33"/></expr_stmt></block></then></if></elseif></if>
    }<pos:position pos:line="51" pos:column="6"/></block></else></if>
  }<pos:position pos:line="52" pos:column="4"/></block></for>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

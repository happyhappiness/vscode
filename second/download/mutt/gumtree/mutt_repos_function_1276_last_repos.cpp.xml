<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1276_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">convert_file_to<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">FILE<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">file<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">fromcode<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
			       <parameter><decl><type><name pos:line="2" pos:column="32">int<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">ncodes<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="44">const<pos:position pos:line="2" pos:column="49"/></specifier> <name pos:line="2" pos:column="50">char<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier><modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">tocodes<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
			       <parameter><decl><type><name pos:line="3" pos:column="32">int<pos:position pos:line="3" pos:column="35"/></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">tocode<pos:position pos:line="3" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="45">CONTENT<pos:position pos:line="3" pos:column="52"/></name> <modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier></type><name pos:line="3" pos:column="54">info<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="59"/></parameter_list>
<block pos:line="4" pos:column="1">{
<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">HAVE_ICONV<pos:position pos:line="5" pos:column="18"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">iconv_t<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">cd1<pos:position pos:line="6" pos:column="14"/></name></decl>, <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="17">cd<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">bufi<pos:position pos:line="7" pos:column="12"/></name><index pos:line="7" pos:column="12">[<expr><literal type="number" pos:line="7" pos:column="13">256<pos:position pos:line="7" pos:column="16"/></literal></expr>]<pos:position pos:line="7" pos:column="17"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="7" pos:column="19">bufu<pos:position pos:line="7" pos:column="23"/></name><index pos:line="7" pos:column="23">[<expr><literal type="number" pos:line="7" pos:column="24">512<pos:position pos:line="7" pos:column="27"/></literal></expr>]<pos:position pos:line="7" pos:column="28"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="7" pos:column="30">bufo<pos:position pos:line="7" pos:column="34"/></name><index pos:line="7" pos:column="34">[<expr><literal type="number" pos:line="7" pos:column="35">4<pos:position pos:line="7" pos:column="36"/></literal> <operator pos:line="7" pos:column="37">*<pos:position pos:line="7" pos:column="38"/></operator> <sizeof pos:line="7" pos:column="39">sizeof <argument_list pos:line="7" pos:column="46">(<argument><expr><name pos:line="7" pos:column="47">bufi<pos:position pos:line="7" pos:column="51"/></name></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></sizeof></expr>]<pos:position pos:line="7" pos:column="53"/></index></name></decl>;<pos:position pos:line="7" pos:column="54"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">ICONV_CONST<pos:position pos:line="8" pos:column="14"/></name> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">ib<pos:position pos:line="8" pos:column="23"/></name></decl>, <modifier pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="26">ub<pos:position pos:line="8" pos:column="28"/></name></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">ob<pos:position pos:line="9" pos:column="11"/></name></decl>;<pos:position pos:line="9" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">size_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">ibl<pos:position pos:line="10" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="15">obl<pos:position pos:line="10" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="20">ubl<pos:position pos:line="10" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="25">ubl1<pos:position pos:line="10" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="31">n<pos:position pos:line="10" pos:column="32"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="34">ret<pos:position pos:line="10" pos:column="37"/></name></decl>;<pos:position pos:line="10" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">i<pos:position pos:line="11" pos:column="8"/></name></decl>;<pos:position pos:line="11" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">CONTENT<pos:position pos:line="12" pos:column="10"/></name> <modifier pos:line="12" pos:column="11">*<pos:position pos:line="12" pos:column="12"/></modifier></type><name pos:line="12" pos:column="12">infos<pos:position pos:line="12" pos:column="17"/></name></decl>;<pos:position pos:line="12" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">CONTENT_STATE<pos:position pos:line="13" pos:column="16"/></name> <modifier pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></modifier></type><name pos:line="13" pos:column="18">states<pos:position pos:line="13" pos:column="24"/></name></decl>;<pos:position pos:line="13" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">size_t<pos:position pos:line="14" pos:column="9"/></name> <modifier pos:line="14" pos:column="10">*<pos:position pos:line="14" pos:column="11"/></modifier></type><name pos:line="14" pos:column="11">score<pos:position pos:line="14" pos:column="16"/></name></decl>;<pos:position pos:line="14" pos:column="17"/></decl_stmt>

  <expr_stmt><expr><name pos:line="16" pos:column="3">cd1<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <call><name pos:line="16" pos:column="9">mutt_iconv_open<pos:position pos:line="16" pos:column="24"/></name> <argument_list pos:line="16" pos:column="25">(<argument><expr><literal type="string" pos:line="16" pos:column="26">"utf-8"<pos:position pos:line="16" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="35">fromcode<pos:position pos:line="16" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="45">0<pos:position pos:line="16" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="48"/></expr_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">cd1<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">==<pos:position pos:line="17" pos:column="13"/></operator> <call pos:line="17" pos:column="14">(<name pos:line="17" pos:column="15">iconv_t<pos:position pos:line="17" pos:column="22"/></name>)<argument_list pos:line="17" pos:column="23">(<argument><expr><operator pos:line="17" pos:column="24">-<pos:position pos:line="17" pos:column="25"/></operator><literal type="number" pos:line="17" pos:column="25">1<pos:position pos:line="17" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="28"/></condition><then pos:line="17" pos:column="28">
    <block type="pseudo"><return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">-<pos:position pos:line="18" pos:column="13"/></operator><literal type="number" pos:line="18" pos:column="13">1<pos:position pos:line="18" pos:column="14"/></literal></expr>;<pos:position pos:line="18" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="20" pos:column="3">cd<pos:position pos:line="20" pos:column="5"/></name>     <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator> <call><name pos:line="20" pos:column="12">safe_calloc<pos:position pos:line="20" pos:column="23"/></name> <argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">ncodes<pos:position pos:line="20" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="33">sizeof <argument_list pos:line="20" pos:column="40">(<argument><expr><name pos:line="20" pos:column="41">iconv_t<pos:position pos:line="20" pos:column="48"/></name></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><name pos:line="21" pos:column="3">score<pos:position pos:line="21" pos:column="8"/></name>  <operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator> <call><name pos:line="21" pos:column="12">safe_calloc<pos:position pos:line="21" pos:column="23"/></name> <argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">ncodes<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="33">sizeof <argument_list pos:line="21" pos:column="40">(<argument><expr><name pos:line="21" pos:column="41">size_t<pos:position pos:line="21" pos:column="47"/></name></expr></argument>)<pos:position pos:line="21" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><name pos:line="22" pos:column="3">states<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <call><name pos:line="22" pos:column="12">safe_calloc<pos:position pos:line="22" pos:column="23"/></name> <argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">ncodes<pos:position pos:line="22" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="33">sizeof <argument_list pos:line="22" pos:column="40">(<argument><expr><name pos:line="22" pos:column="41">CONTENT_STATE<pos:position pos:line="22" pos:column="54"/></name></expr></argument>)<pos:position pos:line="22" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="57"/></expr_stmt>
  <expr_stmt><expr><name pos:line="23" pos:column="3">infos<pos:position pos:line="23" pos:column="8"/></name>  <operator pos:line="23" pos:column="10">=<pos:position pos:line="23" pos:column="11"/></operator> <call><name pos:line="23" pos:column="12">safe_calloc<pos:position pos:line="23" pos:column="23"/></name> <argument_list pos:line="23" pos:column="24">(<argument><expr><name pos:line="23" pos:column="25">ncodes<pos:position pos:line="23" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="33">sizeof <argument_list pos:line="23" pos:column="40">(<argument><expr><name pos:line="23" pos:column="41">CONTENT<pos:position pos:line="23" pos:column="48"/></name></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="51"/></expr_stmt>

  <for pos:line="25" pos:column="3">for <control pos:line="25" pos:column="7">(<init><expr><name pos:line="25" pos:column="8">i<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <literal type="number" pos:line="25" pos:column="12">0<pos:position pos:line="25" pos:column="13"/></literal></expr>;<pos:position pos:line="25" pos:column="14"/></init> <condition><expr><name pos:line="25" pos:column="15">i<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">&lt;<pos:position pos:line="25" pos:column="21"/></operator> <name pos:line="25" pos:column="19">ncodes<pos:position pos:line="25" pos:column="25"/></name></expr>;<pos:position pos:line="25" pos:column="26"/></condition> <incr><expr><name pos:line="25" pos:column="27">i<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">++<pos:position pos:line="25" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="31"/></control>
    <block type="pseudo"><if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><call><name pos:line="26" pos:column="9">ascii_strcasecmp<pos:position pos:line="26" pos:column="25"/></name> <argument_list pos:line="26" pos:column="26">(<argument><expr><name><name pos:line="26" pos:column="27">tocodes<pos:position pos:line="26" pos:column="34"/></name><index pos:line="26" pos:column="34">[<expr><name pos:line="26" pos:column="35">i<pos:position pos:line="26" pos:column="36"/></name></expr>]<pos:position pos:line="26" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="39">"utf-8"<pos:position pos:line="26" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="48"/></condition><then pos:line="26" pos:column="48">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="7">cd<pos:position pos:line="27" pos:column="9"/></name><index pos:line="27" pos:column="9">[<expr><name pos:line="27" pos:column="10">i<pos:position pos:line="27" pos:column="11"/></name></expr>]<pos:position pos:line="27" pos:column="12"/></index></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <call><name pos:line="27" pos:column="15">mutt_iconv_open<pos:position pos:line="27" pos:column="30"/></name> <argument_list pos:line="27" pos:column="31">(<argument><expr><name><name pos:line="27" pos:column="32">tocodes<pos:position pos:line="27" pos:column="39"/></name><index pos:line="27" pos:column="39">[<expr><name pos:line="27" pos:column="40">i<pos:position pos:line="27" pos:column="41"/></name></expr>]<pos:position pos:line="27" pos:column="42"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="44">"utf-8"<pos:position pos:line="27" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="53">0<pos:position pos:line="27" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="56"/></expr_stmt></block></then>
    <else pos:line="28" pos:column="5">else
      <comment type="block" pos:line="29" pos:column="7">/* Special case for conversion to UTF-8 */</comment>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="7">cd<pos:position pos:line="30" pos:column="9"/></name><index pos:line="30" pos:column="9">[<expr><name pos:line="30" pos:column="10">i<pos:position pos:line="30" pos:column="11"/></name></expr>]<pos:position pos:line="30" pos:column="12"/></index></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <call pos:line="30" pos:column="15">(<name pos:line="30" pos:column="16">iconv_t<pos:position pos:line="30" pos:column="23"/></name>)<argument_list pos:line="30" pos:column="24">(<argument><expr><operator pos:line="30" pos:column="25">-<pos:position pos:line="30" pos:column="26"/></operator><literal type="number" pos:line="30" pos:column="26">1<pos:position pos:line="30" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="28"/></argument_list></call></expr><operator pos:line="30" pos:column="28">,<pos:position pos:line="30" pos:column="29"/></operator> <expr><name><name pos:line="30" pos:column="30">score<pos:position pos:line="30" pos:column="35"/></name><index pos:line="30" pos:column="35">[<expr><name pos:line="30" pos:column="36">i<pos:position pos:line="30" pos:column="37"/></name></expr>]<pos:position pos:line="30" pos:column="38"/></index></name> <operator pos:line="30" pos:column="39">=<pos:position pos:line="30" pos:column="40"/></operator> <call pos:line="30" pos:column="41">(<name pos:line="30" pos:column="42">size_t<pos:position pos:line="30" pos:column="48"/></name>)<argument_list pos:line="30" pos:column="49">(<argument><expr><operator pos:line="30" pos:column="50">-<pos:position pos:line="30" pos:column="51"/></operator><literal type="number" pos:line="30" pos:column="51">1<pos:position pos:line="30" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="54"/></expr_stmt></block></else></if></block></for>

  <expr_stmt><expr><call><name pos:line="32" pos:column="3">rewind<pos:position pos:line="32" pos:column="9"/></name> <argument_list pos:line="32" pos:column="10">(<argument><expr><name pos:line="32" pos:column="11">file<pos:position pos:line="32" pos:column="15"/></name></expr></argument>)<pos:position pos:line="32" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name pos:line="33" pos:column="3">ibl<pos:position pos:line="33" pos:column="6"/></name> <operator pos:line="33" pos:column="7">=<pos:position pos:line="33" pos:column="8"/></operator> <literal type="number" pos:line="33" pos:column="9">0<pos:position pos:line="33" pos:column="10"/></literal></expr>;<pos:position pos:line="33" pos:column="11"/></expr_stmt>
  <for pos:line="34" pos:column="3">for <control pos:line="34" pos:column="7">(<init pos:line="34" pos:column="8">;<pos:position pos:line="34" pos:column="9"/></init><condition pos:line="34" pos:column="9">;<pos:position pos:line="34" pos:column="10"/></condition><incr/>)<pos:position pos:line="34" pos:column="11"/></control>
  <block pos:line="35" pos:column="3">{

    <comment type="block" pos:line="37" pos:column="5">/* Try to fill input buffer */</comment>
    <expr_stmt><expr><name pos:line="38" pos:column="5">n<pos:position pos:line="38" pos:column="6"/></name> <operator pos:line="38" pos:column="7">=<pos:position pos:line="38" pos:column="8"/></operator> <call><name pos:line="38" pos:column="9">fread<pos:position pos:line="38" pos:column="14"/></name> <argument_list pos:line="38" pos:column="15">(<argument><expr><name pos:line="38" pos:column="16">bufi<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">+<pos:position pos:line="38" pos:column="22"/></operator> <name pos:line="38" pos:column="23">ibl<pos:position pos:line="38" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="28">1<pos:position pos:line="38" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="31">sizeof <argument_list pos:line="38" pos:column="38">(<argument><expr><name pos:line="38" pos:column="39">bufi<pos:position pos:line="38" pos:column="43"/></name></expr></argument>)<pos:position pos:line="38" pos:column="44"/></argument_list></sizeof> <operator pos:line="38" pos:column="45">-<pos:position pos:line="38" pos:column="46"/></operator> <name pos:line="38" pos:column="47">ibl<pos:position pos:line="38" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="52">file<pos:position pos:line="38" pos:column="56"/></name></expr></argument>)<pos:position pos:line="38" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><name pos:line="39" pos:column="5">ibl<pos:position pos:line="39" pos:column="8"/></name> <operator pos:line="39" pos:column="9">+=<pos:position pos:line="39" pos:column="11"/></operator> <name pos:line="39" pos:column="12">n<pos:position pos:line="39" pos:column="13"/></name></expr>;<pos:position pos:line="39" pos:column="14"/></expr_stmt>

    <comment type="block" pos:line="41" pos:column="5">/* Convert to UTF-8 */</comment>
    <expr_stmt><expr><name pos:line="42" pos:column="5">ib<pos:position pos:line="42" pos:column="7"/></name> <operator pos:line="42" pos:column="8">=<pos:position pos:line="42" pos:column="9"/></operator> <name pos:line="42" pos:column="10">bufi<pos:position pos:line="42" pos:column="14"/></name></expr>;<pos:position pos:line="42" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="43" pos:column="5">ob<pos:position pos:line="43" pos:column="7"/></name> <operator pos:line="43" pos:column="8">=<pos:position pos:line="43" pos:column="9"/></operator> <name pos:line="43" pos:column="10">bufu<pos:position pos:line="43" pos:column="14"/></name></expr><operator pos:line="43" pos:column="14">,<pos:position pos:line="43" pos:column="15"/></operator> <expr><name pos:line="43" pos:column="16">obl<pos:position pos:line="43" pos:column="19"/></name> <operator pos:line="43" pos:column="20">=<pos:position pos:line="43" pos:column="21"/></operator> <sizeof pos:line="43" pos:column="22">sizeof <argument_list pos:line="43" pos:column="29">(<argument><expr><name pos:line="43" pos:column="30">bufu<pos:position pos:line="43" pos:column="34"/></name></expr></argument>)<pos:position pos:line="43" pos:column="35"/></argument_list></sizeof></expr>;<pos:position pos:line="43" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="44" pos:column="5">n<pos:position pos:line="44" pos:column="6"/></name> <operator pos:line="44" pos:column="7">=<pos:position pos:line="44" pos:column="8"/></operator> <call><name pos:line="44" pos:column="9">iconv<pos:position pos:line="44" pos:column="14"/></name> <argument_list pos:line="44" pos:column="15">(<argument><expr><name pos:line="44" pos:column="16">cd1<pos:position pos:line="44" pos:column="19"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="44" pos:column="21">ibl<pos:position pos:line="44" pos:column="24"/></name></expr> ?<pos:position pos:line="44" pos:column="26"/></condition><then pos:line="44" pos:column="26"> <expr><operator pos:line="44" pos:column="27">&amp;<pos:position pos:line="44" pos:column="32"/></operator><name pos:line="44" pos:column="28">ib<pos:position pos:line="44" pos:column="30"/></name></expr> <pos:position pos:line="44" pos:column="31"/></then><else pos:line="44" pos:column="31">: <expr><literal type="number" pos:line="44" pos:column="33">0<pos:position pos:line="44" pos:column="34"/></literal></expr></else></ternary></expr></argument>, <argument><expr><operator pos:line="44" pos:column="36">&amp;<pos:position pos:line="44" pos:column="41"/></operator><name pos:line="44" pos:column="37">ibl<pos:position pos:line="44" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="42">&amp;<pos:position pos:line="44" pos:column="47"/></operator><name pos:line="44" pos:column="43">ob<pos:position pos:line="44" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="47">&amp;<pos:position pos:line="44" pos:column="52"/></operator><name pos:line="44" pos:column="48">obl<pos:position pos:line="44" pos:column="51"/></name></expr></argument>)<pos:position pos:line="44" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">assert<pos:position pos:line="45" pos:column="11"/></name> <argument_list pos:line="45" pos:column="12">(<argument><expr><name pos:line="45" pos:column="13">n<pos:position pos:line="45" pos:column="14"/></name> <operator pos:line="45" pos:column="15">==<pos:position pos:line="45" pos:column="17"/></operator> <call pos:line="45" pos:column="18">(<name pos:line="45" pos:column="19">size_t<pos:position pos:line="45" pos:column="25"/></name>)<argument_list pos:line="45" pos:column="26">(<argument><expr><operator pos:line="45" pos:column="27">-<pos:position pos:line="45" pos:column="28"/></operator><literal type="number" pos:line="45" pos:column="28">1<pos:position pos:line="45" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="30"/></argument_list></call> <operator pos:line="45" pos:column="31">||<pos:position pos:line="45" pos:column="33"/></operator> <operator pos:line="45" pos:column="34">!<pos:position pos:line="45" pos:column="35"/></operator><name pos:line="45" pos:column="35">n<pos:position pos:line="45" pos:column="36"/></name> <operator pos:line="45" pos:column="37">||<pos:position pos:line="45" pos:column="39"/></operator> <name pos:line="45" pos:column="40">ICONV_NONTRANS<pos:position pos:line="45" pos:column="54"/></name></expr></argument>)<pos:position pos:line="45" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="56"/></expr_stmt>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">n<pos:position pos:line="46" pos:column="10"/></name> <operator pos:line="46" pos:column="11">==<pos:position pos:line="46" pos:column="13"/></operator> <call pos:line="46" pos:column="14">(<name pos:line="46" pos:column="15">size_t<pos:position pos:line="46" pos:column="21"/></name>)<argument_list pos:line="46" pos:column="22">(<argument><expr><operator pos:line="46" pos:column="23">-<pos:position pos:line="46" pos:column="24"/></operator><literal type="number" pos:line="46" pos:column="24">1<pos:position pos:line="46" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="26"/></argument_list></call> <operator pos:line="46" pos:column="27">&amp;&amp;<pos:position pos:line="46" pos:column="37"/></operator>
	<operator pos:line="47" pos:column="9">(<pos:position pos:line="47" pos:column="10"/></operator><operator pos:line="47" pos:column="10">(<pos:position pos:line="47" pos:column="11"/></operator><name pos:line="47" pos:column="11">errno<pos:position pos:line="47" pos:column="16"/></name> <operator pos:line="47" pos:column="17">!=<pos:position pos:line="47" pos:column="19"/></operator> <name pos:line="47" pos:column="20">EINVAL<pos:position pos:line="47" pos:column="26"/></name> <operator pos:line="47" pos:column="27">&amp;&amp;<pos:position pos:line="47" pos:column="37"/></operator> <name pos:line="47" pos:column="30">errno<pos:position pos:line="47" pos:column="35"/></name> <operator pos:line="47" pos:column="36">!=<pos:position pos:line="47" pos:column="38"/></operator> <name pos:line="47" pos:column="39">E2BIG<pos:position pos:line="47" pos:column="44"/></name><operator pos:line="47" pos:column="44">)<pos:position pos:line="47" pos:column="45"/></operator> <operator pos:line="47" pos:column="46">||<pos:position pos:line="47" pos:column="48"/></operator> <name pos:line="47" pos:column="49">ib<pos:position pos:line="47" pos:column="51"/></name> <operator pos:line="47" pos:column="52">==<pos:position pos:line="47" pos:column="54"/></operator> <name pos:line="47" pos:column="55">bufi<pos:position pos:line="47" pos:column="59"/></name><operator pos:line="47" pos:column="59">)<pos:position pos:line="47" pos:column="60"/></operator></expr>)<pos:position pos:line="47" pos:column="61"/></condition><then pos:line="47" pos:column="61">
    <block pos:line="48" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">assert<pos:position pos:line="49" pos:column="13"/></name> <argument_list pos:line="49" pos:column="14">(<argument><expr><name pos:line="49" pos:column="15">errno<pos:position pos:line="49" pos:column="20"/></name> <operator pos:line="49" pos:column="21">==<pos:position pos:line="49" pos:column="23"/></operator> <name pos:line="49" pos:column="24">EILSEQ<pos:position pos:line="49" pos:column="30"/></name> <operator pos:line="49" pos:column="31">||<pos:position pos:line="49" pos:column="33"/></operator>
	      <operator pos:line="50" pos:column="15">(<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="16">errno<pos:position pos:line="50" pos:column="21"/></name> <operator pos:line="50" pos:column="22">==<pos:position pos:line="50" pos:column="24"/></operator> <name pos:line="50" pos:column="25">EINVAL<pos:position pos:line="50" pos:column="31"/></name> <operator pos:line="50" pos:column="32">&amp;&amp;<pos:position pos:line="50" pos:column="42"/></operator> <name pos:line="50" pos:column="35">ib<pos:position pos:line="50" pos:column="37"/></name> <operator pos:line="50" pos:column="38">==<pos:position pos:line="50" pos:column="40"/></operator> <name pos:line="50" pos:column="41">bufi<pos:position pos:line="50" pos:column="45"/></name> <operator pos:line="50" pos:column="46">&amp;&amp;<pos:position pos:line="50" pos:column="56"/></operator> <name pos:line="50" pos:column="49">ibl<pos:position pos:line="50" pos:column="52"/></name> <operator pos:line="50" pos:column="53">&lt;<pos:position pos:line="50" pos:column="57"/></operator> <sizeof pos:line="50" pos:column="55">sizeof <argument_list pos:line="50" pos:column="62">(<argument><expr><name pos:line="50" pos:column="63">bufi<pos:position pos:line="50" pos:column="67"/></name></expr></argument>)<pos:position pos:line="50" pos:column="68"/></argument_list></sizeof><operator pos:line="50" pos:column="68">)<pos:position pos:line="50" pos:column="69"/></operator></expr></argument>)<pos:position pos:line="50" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="71"/></expr_stmt>
      <expr_stmt><expr><name pos:line="51" pos:column="7">ret<pos:position pos:line="51" pos:column="10"/></name> <operator pos:line="51" pos:column="11">=<pos:position pos:line="51" pos:column="12"/></operator> <call pos:line="51" pos:column="13">(<name pos:line="51" pos:column="14">size_t<pos:position pos:line="51" pos:column="20"/></name>)<argument_list pos:line="51" pos:column="21">(<argument><expr><operator pos:line="51" pos:column="22">-<pos:position pos:line="51" pos:column="23"/></operator><literal type="number" pos:line="51" pos:column="23">1<pos:position pos:line="51" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="26"/></expr_stmt>
      <break pos:line="52" pos:column="7">break;<pos:position pos:line="52" pos:column="13"/></break>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="54" pos:column="5">ubl1<pos:position pos:line="54" pos:column="9"/></name> <operator pos:line="54" pos:column="10">=<pos:position pos:line="54" pos:column="11"/></operator> <name pos:line="54" pos:column="12">ob<pos:position pos:line="54" pos:column="14"/></name> <operator pos:line="54" pos:column="15">-<pos:position pos:line="54" pos:column="16"/></operator> <name pos:line="54" pos:column="17">bufu<pos:position pos:line="54" pos:column="21"/></name></expr>;<pos:position pos:line="54" pos:column="22"/></expr_stmt>

    <comment type="block" pos:line="56" pos:column="5">/* Convert from UTF-8 */</comment>
    <for pos:line="57" pos:column="5">for <control pos:line="57" pos:column="9">(<init><expr><name pos:line="57" pos:column="10">i<pos:position pos:line="57" pos:column="11"/></name> <operator pos:line="57" pos:column="12">=<pos:position pos:line="57" pos:column="13"/></operator> <literal type="number" pos:line="57" pos:column="14">0<pos:position pos:line="57" pos:column="15"/></literal></expr>;<pos:position pos:line="57" pos:column="16"/></init> <condition><expr><name pos:line="57" pos:column="17">i<pos:position pos:line="57" pos:column="18"/></name> <operator pos:line="57" pos:column="19">&lt;<pos:position pos:line="57" pos:column="23"/></operator> <name pos:line="57" pos:column="21">ncodes<pos:position pos:line="57" pos:column="27"/></name></expr>;<pos:position pos:line="57" pos:column="28"/></condition> <incr><expr><name pos:line="57" pos:column="29">i<pos:position pos:line="57" pos:column="30"/></name><operator pos:line="57" pos:column="30">++<pos:position pos:line="57" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="57" pos:column="33"/></control>
      <block type="pseudo"><if pos:line="58" pos:column="7">if <condition pos:line="58" pos:column="10">(<expr><name><name pos:line="58" pos:column="11">cd<pos:position pos:line="58" pos:column="13"/></name><index pos:line="58" pos:column="13">[<expr><name pos:line="58" pos:column="14">i<pos:position pos:line="58" pos:column="15"/></name></expr>]<pos:position pos:line="58" pos:column="16"/></index></name> <operator pos:line="58" pos:column="17">!=<pos:position pos:line="58" pos:column="19"/></operator> <call pos:line="58" pos:column="20">(<name pos:line="58" pos:column="21">iconv_t<pos:position pos:line="58" pos:column="28"/></name>)<argument_list pos:line="58" pos:column="29">(<argument><expr><operator pos:line="58" pos:column="30">-<pos:position pos:line="58" pos:column="31"/></operator><literal type="number" pos:line="58" pos:column="31">1<pos:position pos:line="58" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="33"/></argument_list></call> <operator pos:line="58" pos:column="34">&amp;&amp;<pos:position pos:line="58" pos:column="44"/></operator> <name><name pos:line="58" pos:column="37">score<pos:position pos:line="58" pos:column="42"/></name><index pos:line="58" pos:column="42">[<expr><name pos:line="58" pos:column="43">i<pos:position pos:line="58" pos:column="44"/></name></expr>]<pos:position pos:line="58" pos:column="45"/></index></name> <operator pos:line="58" pos:column="46">!=<pos:position pos:line="58" pos:column="48"/></operator> <call pos:line="58" pos:column="49">(<name pos:line="58" pos:column="50">size_t<pos:position pos:line="58" pos:column="56"/></name>)<argument_list pos:line="58" pos:column="57">(<argument><expr><operator pos:line="58" pos:column="58">-<pos:position pos:line="58" pos:column="59"/></operator><literal type="number" pos:line="58" pos:column="59">1<pos:position pos:line="58" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="62"/></condition><then pos:line="58" pos:column="62">
      <block pos:line="59" pos:column="7">{
	<expr_stmt><expr><name pos:line="60" pos:column="9">ub<pos:position pos:line="60" pos:column="11"/></name> <operator pos:line="60" pos:column="12">=<pos:position pos:line="60" pos:column="13"/></operator> <name pos:line="60" pos:column="14">bufu<pos:position pos:line="60" pos:column="18"/></name></expr><operator pos:line="60" pos:column="18">,<pos:position pos:line="60" pos:column="19"/></operator> <expr><name pos:line="60" pos:column="20">ubl<pos:position pos:line="60" pos:column="23"/></name> <operator pos:line="60" pos:column="24">=<pos:position pos:line="60" pos:column="25"/></operator> <name pos:line="60" pos:column="26">ubl1<pos:position pos:line="60" pos:column="30"/></name></expr>;<pos:position pos:line="60" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name pos:line="61" pos:column="9">ob<pos:position pos:line="61" pos:column="11"/></name> <operator pos:line="61" pos:column="12">=<pos:position pos:line="61" pos:column="13"/></operator> <name pos:line="61" pos:column="14">bufo<pos:position pos:line="61" pos:column="18"/></name></expr><operator pos:line="61" pos:column="18">,<pos:position pos:line="61" pos:column="19"/></operator> <expr><name pos:line="61" pos:column="20">obl<pos:position pos:line="61" pos:column="23"/></name> <operator pos:line="61" pos:column="24">=<pos:position pos:line="61" pos:column="25"/></operator> <sizeof pos:line="61" pos:column="26">sizeof <argument_list pos:line="61" pos:column="33">(<argument><expr><name pos:line="61" pos:column="34">bufo<pos:position pos:line="61" pos:column="38"/></name></expr></argument>)<pos:position pos:line="61" pos:column="39"/></argument_list></sizeof></expr>;<pos:position pos:line="61" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name pos:line="62" pos:column="9">n<pos:position pos:line="62" pos:column="10"/></name> <operator pos:line="62" pos:column="11">=<pos:position pos:line="62" pos:column="12"/></operator> <call><name pos:line="62" pos:column="13">iconv<pos:position pos:line="62" pos:column="18"/></name> <argument_list pos:line="62" pos:column="19">(<argument><expr><name><name pos:line="62" pos:column="20">cd<pos:position pos:line="62" pos:column="22"/></name><index pos:line="62" pos:column="22">[<expr><name pos:line="62" pos:column="23">i<pos:position pos:line="62" pos:column="24"/></name></expr>]<pos:position pos:line="62" pos:column="25"/></index></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="62" pos:column="27">(<pos:position pos:line="62" pos:column="28"/></operator><name pos:line="62" pos:column="28">ibl<pos:position pos:line="62" pos:column="31"/></name> <operator pos:line="62" pos:column="32">||<pos:position pos:line="62" pos:column="34"/></operator> <name pos:line="62" pos:column="35">ubl<pos:position pos:line="62" pos:column="38"/></name><operator pos:line="62" pos:column="38">)<pos:position pos:line="62" pos:column="39"/></operator></expr> ?<pos:position pos:line="62" pos:column="41"/></condition><then pos:line="62" pos:column="41"> <expr><operator pos:line="62" pos:column="42">&amp;<pos:position pos:line="62" pos:column="47"/></operator><name pos:line="62" pos:column="43">ub<pos:position pos:line="62" pos:column="45"/></name></expr> <pos:position pos:line="62" pos:column="46"/></then><else pos:line="62" pos:column="46">: <expr><literal type="number" pos:line="62" pos:column="48">0<pos:position pos:line="62" pos:column="49"/></literal></expr></else></ternary></expr></argument>, <argument><expr><operator pos:line="62" pos:column="51">&amp;<pos:position pos:line="62" pos:column="56"/></operator><name pos:line="62" pos:column="52">ubl<pos:position pos:line="62" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="57">&amp;<pos:position pos:line="62" pos:column="62"/></operator><name pos:line="62" pos:column="58">ob<pos:position pos:line="62" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="62">&amp;<pos:position pos:line="62" pos:column="67"/></operator><name pos:line="62" pos:column="63">obl<pos:position pos:line="62" pos:column="66"/></name></expr></argument>)<pos:position pos:line="62" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="68"/></expr_stmt>
	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">n<pos:position pos:line="63" pos:column="14"/></name> <operator pos:line="63" pos:column="15">==<pos:position pos:line="63" pos:column="17"/></operator> <call pos:line="63" pos:column="18">(<name pos:line="63" pos:column="19">size_t<pos:position pos:line="63" pos:column="25"/></name>)<argument_list pos:line="63" pos:column="26">(<argument><expr><operator pos:line="63" pos:column="27">-<pos:position pos:line="63" pos:column="28"/></operator><literal type="number" pos:line="63" pos:column="28">1<pos:position pos:line="63" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="31"/></condition><then pos:line="63" pos:column="31">
	<block pos:line="64" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="65" pos:column="11">assert<pos:position pos:line="65" pos:column="17"/></name> <argument_list pos:line="65" pos:column="18">(<argument><expr><name pos:line="65" pos:column="19">errno<pos:position pos:line="65" pos:column="24"/></name> <operator pos:line="65" pos:column="25">==<pos:position pos:line="65" pos:column="27"/></operator> <name pos:line="65" pos:column="28">E2BIG<pos:position pos:line="65" pos:column="33"/></name> <operator pos:line="65" pos:column="34">||<pos:position pos:line="65" pos:column="36"/></operator>
		  <operator pos:line="66" pos:column="19">(<pos:position pos:line="66" pos:column="20"/></operator><name pos:line="66" pos:column="20">BUGGY_ICONV<pos:position pos:line="66" pos:column="31"/></name> <operator pos:line="66" pos:column="32">&amp;&amp;<pos:position pos:line="66" pos:column="42"/></operator> <operator pos:line="66" pos:column="35">(<pos:position pos:line="66" pos:column="36"/></operator><name pos:line="66" pos:column="36">errno<pos:position pos:line="66" pos:column="41"/></name> <operator pos:line="66" pos:column="42">==<pos:position pos:line="66" pos:column="44"/></operator> <name pos:line="66" pos:column="45">EILSEQ<pos:position pos:line="66" pos:column="51"/></name> <operator pos:line="66" pos:column="52">||<pos:position pos:line="66" pos:column="54"/></operator> <name pos:line="66" pos:column="55">errno<pos:position pos:line="66" pos:column="60"/></name> <operator pos:line="66" pos:column="61">==<pos:position pos:line="66" pos:column="63"/></operator> <name pos:line="66" pos:column="64">ENOENT<pos:position pos:line="66" pos:column="70"/></name><operator pos:line="66" pos:column="70">)<pos:position pos:line="66" pos:column="71"/></operator><operator pos:line="66" pos:column="71">)<pos:position pos:line="66" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="66" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="74"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="67" pos:column="11">score<pos:position pos:line="67" pos:column="16"/></name><index pos:line="67" pos:column="16">[<expr><name pos:line="67" pos:column="17">i<pos:position pos:line="67" pos:column="18"/></name></expr>]<pos:position pos:line="67" pos:column="19"/></index></name> <operator pos:line="67" pos:column="20">=<pos:position pos:line="67" pos:column="21"/></operator> <call pos:line="67" pos:column="22">(<name pos:line="67" pos:column="23">size_t<pos:position pos:line="67" pos:column="29"/></name>)<argument_list pos:line="67" pos:column="30">(<argument><expr><operator pos:line="67" pos:column="31">-<pos:position pos:line="67" pos:column="32"/></operator><literal type="number" pos:line="67" pos:column="32">1<pos:position pos:line="67" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="68" pos:column="10"/></block></then>
	<else pos:line="69" pos:column="9">else
	<block pos:line="70" pos:column="9">{
	  <expr_stmt><expr><name><name pos:line="71" pos:column="11">score<pos:position pos:line="71" pos:column="16"/></name><index pos:line="71" pos:column="16">[<expr><name pos:line="71" pos:column="17">i<pos:position pos:line="71" pos:column="18"/></name></expr>]<pos:position pos:line="71" pos:column="19"/></index></name> <operator pos:line="71" pos:column="20">+=<pos:position pos:line="71" pos:column="22"/></operator> <name pos:line="71" pos:column="23">n<pos:position pos:line="71" pos:column="24"/></name></expr>;<pos:position pos:line="71" pos:column="25"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="72" pos:column="11">update_content_info<pos:position pos:line="72" pos:column="30"/></name> <argument_list pos:line="72" pos:column="31">(<argument><expr><operator pos:line="72" pos:column="32">&amp;<pos:position pos:line="72" pos:column="37"/></operator><name><name pos:line="72" pos:column="33">infos<pos:position pos:line="72" pos:column="38"/></name><index pos:line="72" pos:column="38">[<expr><name pos:line="72" pos:column="39">i<pos:position pos:line="72" pos:column="40"/></name></expr>]<pos:position pos:line="72" pos:column="41"/></index></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="43">&amp;<pos:position pos:line="72" pos:column="48"/></operator><name><name pos:line="72" pos:column="44">states<pos:position pos:line="72" pos:column="50"/></name><index pos:line="72" pos:column="50">[<expr><name pos:line="72" pos:column="51">i<pos:position pos:line="72" pos:column="52"/></name></expr>]<pos:position pos:line="72" pos:column="53"/></index></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="55">bufo<pos:position pos:line="72" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="61">ob<pos:position pos:line="72" pos:column="63"/></name> <operator pos:line="72" pos:column="64">-<pos:position pos:line="72" pos:column="65"/></operator> <name pos:line="72" pos:column="66">bufo<pos:position pos:line="72" pos:column="70"/></name></expr></argument>)<pos:position pos:line="72" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="72"/></expr_stmt>
	}<pos:position pos:line="73" pos:column="10"/></block></else></if>
      }<pos:position pos:line="74" pos:column="8"/></block></then>
      <elseif pos:line="75" pos:column="7">else <if pos:line="75" pos:column="12">if <condition pos:line="75" pos:column="15">(<expr><name><name pos:line="75" pos:column="16">cd<pos:position pos:line="75" pos:column="18"/></name><index pos:line="75" pos:column="18">[<expr><name pos:line="75" pos:column="19">i<pos:position pos:line="75" pos:column="20"/></name></expr>]<pos:position pos:line="75" pos:column="21"/></index></name> <operator pos:line="75" pos:column="22">==<pos:position pos:line="75" pos:column="24"/></operator> <call pos:line="75" pos:column="25">(<name pos:line="75" pos:column="26">iconv_t<pos:position pos:line="75" pos:column="33"/></name>)<argument_list pos:line="75" pos:column="34">(<argument><expr><operator pos:line="75" pos:column="35">-<pos:position pos:line="75" pos:column="36"/></operator><literal type="number" pos:line="75" pos:column="36">1<pos:position pos:line="75" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="38"/></argument_list></call> <operator pos:line="75" pos:column="39">&amp;&amp;<pos:position pos:line="75" pos:column="49"/></operator> <name><name pos:line="75" pos:column="42">score<pos:position pos:line="75" pos:column="47"/></name><index pos:line="75" pos:column="47">[<expr><name pos:line="75" pos:column="48">i<pos:position pos:line="75" pos:column="49"/></name></expr>]<pos:position pos:line="75" pos:column="50"/></index></name> <operator pos:line="75" pos:column="51">==<pos:position pos:line="75" pos:column="53"/></operator> <call pos:line="75" pos:column="54">(<name pos:line="75" pos:column="55">size_t<pos:position pos:line="75" pos:column="61"/></name>)<argument_list pos:line="75" pos:column="62">(<argument><expr><operator pos:line="75" pos:column="63">-<pos:position pos:line="75" pos:column="64"/></operator><literal type="number" pos:line="75" pos:column="64">1<pos:position pos:line="75" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="75" pos:column="67"/></condition><then pos:line="75" pos:column="67">
	<comment type="block" pos:line="76" pos:column="9">/* Special case for conversion to UTF-8 */</comment>
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="9">update_content_info<pos:position pos:line="77" pos:column="28"/></name> <argument_list pos:line="77" pos:column="29">(<argument><expr><operator pos:line="77" pos:column="30">&amp;<pos:position pos:line="77" pos:column="35"/></operator><name><name pos:line="77" pos:column="31">infos<pos:position pos:line="77" pos:column="36"/></name><index pos:line="77" pos:column="36">[<expr><name pos:line="77" pos:column="37">i<pos:position pos:line="77" pos:column="38"/></name></expr>]<pos:position pos:line="77" pos:column="39"/></index></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="41">&amp;<pos:position pos:line="77" pos:column="46"/></operator><name><name pos:line="77" pos:column="42">states<pos:position pos:line="77" pos:column="48"/></name><index pos:line="77" pos:column="48">[<expr><name pos:line="77" pos:column="49">i<pos:position pos:line="77" pos:column="50"/></name></expr>]<pos:position pos:line="77" pos:column="51"/></index></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="53">bufu<pos:position pos:line="77" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="59">ubl1<pos:position pos:line="77" pos:column="63"/></name></expr></argument>)<pos:position pos:line="77" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="65"/></expr_stmt></block></then></if></elseif></if></block></for>

    <if pos:line="79" pos:column="5">if <condition pos:line="79" pos:column="8">(<expr><name pos:line="79" pos:column="9">ibl<pos:position pos:line="79" pos:column="12"/></name></expr>)<pos:position pos:line="79" pos:column="13"/></condition><then pos:line="79" pos:column="13">
      <comment type="block" pos:line="80" pos:column="7">/* Save unused input */</comment>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="81" pos:column="7">memmove<pos:position pos:line="81" pos:column="14"/></name> <argument_list pos:line="81" pos:column="15">(<argument><expr><name pos:line="81" pos:column="16">bufi<pos:position pos:line="81" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="22">ib<pos:position pos:line="81" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="26">ibl<pos:position pos:line="81" pos:column="29"/></name></expr></argument>)<pos:position pos:line="81" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="31"/></expr_stmt></block></then>
    <elseif pos:line="82" pos:column="5">else <if pos:line="82" pos:column="10">if <condition pos:line="82" pos:column="13">(<expr><operator pos:line="82" pos:column="14">!<pos:position pos:line="82" pos:column="15"/></operator><name pos:line="82" pos:column="15">ubl1<pos:position pos:line="82" pos:column="19"/></name> <operator pos:line="82" pos:column="20">&amp;&amp;<pos:position pos:line="82" pos:column="30"/></operator> <name pos:line="82" pos:column="23">ib<pos:position pos:line="82" pos:column="25"/></name> <operator pos:line="82" pos:column="26">&lt;<pos:position pos:line="82" pos:column="30"/></operator> <name pos:line="82" pos:column="28">bufi<pos:position pos:line="82" pos:column="32"/></name> <operator pos:line="82" pos:column="33">+<pos:position pos:line="82" pos:column="34"/></operator> <sizeof pos:line="82" pos:column="35">sizeof <argument_list pos:line="82" pos:column="42">(<argument><expr><name pos:line="82" pos:column="43">bufi<pos:position pos:line="82" pos:column="47"/></name></expr></argument>)<pos:position pos:line="82" pos:column="48"/></argument_list></sizeof></expr>)<pos:position pos:line="82" pos:column="49"/></condition><then pos:line="82" pos:column="49">
    <block pos:line="83" pos:column="5">{
      <expr_stmt><expr><name pos:line="84" pos:column="7">ret<pos:position pos:line="84" pos:column="10"/></name> <operator pos:line="84" pos:column="11">=<pos:position pos:line="84" pos:column="12"/></operator> <literal type="number" pos:line="84" pos:column="13">0<pos:position pos:line="84" pos:column="14"/></literal></expr>;<pos:position pos:line="84" pos:column="15"/></expr_stmt>
      <break pos:line="85" pos:column="7">break;<pos:position pos:line="85" pos:column="13"/></break>
    }<pos:position pos:line="86" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="87" pos:column="4"/></block></for>

  <if pos:line="89" pos:column="3">if <condition pos:line="89" pos:column="6">(<expr><operator pos:line="89" pos:column="7">!<pos:position pos:line="89" pos:column="8"/></operator><name pos:line="89" pos:column="8">ret<pos:position pos:line="89" pos:column="11"/></name></expr>)<pos:position pos:line="89" pos:column="12"/></condition><then pos:line="89" pos:column="12">
  <block pos:line="90" pos:column="3">{
    <comment type="block" pos:line="91" pos:column="5">/* Find best score */</comment>
    <expr_stmt><expr><name pos:line="92" pos:column="5">ret<pos:position pos:line="92" pos:column="8"/></name> <operator pos:line="92" pos:column="9">=<pos:position pos:line="92" pos:column="10"/></operator> <call pos:line="92" pos:column="11">(<name pos:line="92" pos:column="12">size_t<pos:position pos:line="92" pos:column="18"/></name>)<argument_list pos:line="92" pos:column="19">(<argument><expr><operator pos:line="92" pos:column="20">-<pos:position pos:line="92" pos:column="21"/></operator><literal type="number" pos:line="92" pos:column="21">1<pos:position pos:line="92" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="24"/></expr_stmt>
    <for pos:line="93" pos:column="5">for <control pos:line="93" pos:column="9">(<init><expr><name pos:line="93" pos:column="10">i<pos:position pos:line="93" pos:column="11"/></name> <operator pos:line="93" pos:column="12">=<pos:position pos:line="93" pos:column="13"/></operator> <literal type="number" pos:line="93" pos:column="14">0<pos:position pos:line="93" pos:column="15"/></literal></expr>;<pos:position pos:line="93" pos:column="16"/></init> <condition><expr><name pos:line="93" pos:column="17">i<pos:position pos:line="93" pos:column="18"/></name> <operator pos:line="93" pos:column="19">&lt;<pos:position pos:line="93" pos:column="23"/></operator> <name pos:line="93" pos:column="21">ncodes<pos:position pos:line="93" pos:column="27"/></name></expr>;<pos:position pos:line="93" pos:column="28"/></condition> <incr><expr><name pos:line="93" pos:column="29">i<pos:position pos:line="93" pos:column="30"/></name><operator pos:line="93" pos:column="30">++<pos:position pos:line="93" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="93" pos:column="33"/></control>
    <block pos:line="94" pos:column="5">{
      <if pos:line="95" pos:column="7">if <condition pos:line="95" pos:column="10">(<expr><name><name pos:line="95" pos:column="11">cd<pos:position pos:line="95" pos:column="13"/></name><index pos:line="95" pos:column="13">[<expr><name pos:line="95" pos:column="14">i<pos:position pos:line="95" pos:column="15"/></name></expr>]<pos:position pos:line="95" pos:column="16"/></index></name> <operator pos:line="95" pos:column="17">==<pos:position pos:line="95" pos:column="19"/></operator> <call pos:line="95" pos:column="20">(<name pos:line="95" pos:column="21">iconv_t<pos:position pos:line="95" pos:column="28"/></name>)<argument_list pos:line="95" pos:column="29">(<argument><expr><operator pos:line="95" pos:column="30">-<pos:position pos:line="95" pos:column="31"/></operator><literal type="number" pos:line="95" pos:column="31">1<pos:position pos:line="95" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="33"/></argument_list></call> <operator pos:line="95" pos:column="34">&amp;&amp;<pos:position pos:line="95" pos:column="44"/></operator> <name><name pos:line="95" pos:column="37">score<pos:position pos:line="95" pos:column="42"/></name><index pos:line="95" pos:column="42">[<expr><name pos:line="95" pos:column="43">i<pos:position pos:line="95" pos:column="44"/></name></expr>]<pos:position pos:line="95" pos:column="45"/></index></name> <operator pos:line="95" pos:column="46">==<pos:position pos:line="95" pos:column="48"/></operator> <call pos:line="95" pos:column="49">(<name pos:line="95" pos:column="50">size_t<pos:position pos:line="95" pos:column="56"/></name>)<argument_list pos:line="95" pos:column="57">(<argument><expr><operator pos:line="95" pos:column="58">-<pos:position pos:line="95" pos:column="59"/></operator><literal type="number" pos:line="95" pos:column="59">1<pos:position pos:line="95" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="95" pos:column="62"/></condition><then pos:line="95" pos:column="62">
      <block pos:line="96" pos:column="7">{
	<comment type="block" pos:line="97" pos:column="9">/* Special case for conversion to UTF-8 */</comment>
	<expr_stmt><expr><operator pos:line="98" pos:column="9">*<pos:position pos:line="98" pos:column="10"/></operator><name pos:line="98" pos:column="10">tocode<pos:position pos:line="98" pos:column="16"/></name> <operator pos:line="98" pos:column="17">=<pos:position pos:line="98" pos:column="18"/></operator> <name pos:line="98" pos:column="19">i<pos:position pos:line="98" pos:column="20"/></name></expr>;<pos:position pos:line="98" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="99" pos:column="9">ret<pos:position pos:line="99" pos:column="12"/></name> <operator pos:line="99" pos:column="13">=<pos:position pos:line="99" pos:column="14"/></operator> <literal type="number" pos:line="99" pos:column="15">0<pos:position pos:line="99" pos:column="16"/></literal></expr>;<pos:position pos:line="99" pos:column="17"/></expr_stmt>
	<break pos:line="100" pos:column="9">break;<pos:position pos:line="100" pos:column="15"/></break>
      }<pos:position pos:line="101" pos:column="8"/></block></then>
      <elseif pos:line="102" pos:column="7">else <if pos:line="102" pos:column="12">if <condition pos:line="102" pos:column="15">(<expr><name><name pos:line="102" pos:column="16">cd<pos:position pos:line="102" pos:column="18"/></name><index pos:line="102" pos:column="18">[<expr><name pos:line="102" pos:column="19">i<pos:position pos:line="102" pos:column="20"/></name></expr>]<pos:position pos:line="102" pos:column="21"/></index></name> <operator pos:line="102" pos:column="22">==<pos:position pos:line="102" pos:column="24"/></operator> <call pos:line="102" pos:column="25">(<name pos:line="102" pos:column="26">iconv_t<pos:position pos:line="102" pos:column="33"/></name>)<argument_list pos:line="102" pos:column="34">(<argument><expr><operator pos:line="102" pos:column="35">-<pos:position pos:line="102" pos:column="36"/></operator><literal type="number" pos:line="102" pos:column="36">1<pos:position pos:line="102" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="38"/></argument_list></call> <operator pos:line="102" pos:column="39">||<pos:position pos:line="102" pos:column="41"/></operator> <name><name pos:line="102" pos:column="42">score<pos:position pos:line="102" pos:column="47"/></name><index pos:line="102" pos:column="47">[<expr><name pos:line="102" pos:column="48">i<pos:position pos:line="102" pos:column="49"/></name></expr>]<pos:position pos:line="102" pos:column="50"/></index></name> <operator pos:line="102" pos:column="51">==<pos:position pos:line="102" pos:column="53"/></operator> <call pos:line="102" pos:column="54">(<name pos:line="102" pos:column="55">size_t<pos:position pos:line="102" pos:column="61"/></name>)<argument_list pos:line="102" pos:column="62">(<argument><expr><operator pos:line="102" pos:column="63">-<pos:position pos:line="102" pos:column="64"/></operator><literal type="number" pos:line="102" pos:column="64">1<pos:position pos:line="102" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="102" pos:column="67"/></condition><then pos:line="102" pos:column="67">
	<block type="pseudo"><continue pos:line="103" pos:column="9">continue;<pos:position pos:line="103" pos:column="18"/></continue></block></then></if></elseif>
      <elseif pos:line="104" pos:column="7">else <if pos:line="104" pos:column="12">if <condition pos:line="104" pos:column="15">(<expr><name pos:line="104" pos:column="16">ret<pos:position pos:line="104" pos:column="19"/></name> <operator pos:line="104" pos:column="20">==<pos:position pos:line="104" pos:column="22"/></operator> <call pos:line="104" pos:column="23">(<name pos:line="104" pos:column="24">size_t<pos:position pos:line="104" pos:column="30"/></name>)<argument_list pos:line="104" pos:column="31">(<argument><expr><operator pos:line="104" pos:column="32">-<pos:position pos:line="104" pos:column="33"/></operator><literal type="number" pos:line="104" pos:column="33">1<pos:position pos:line="104" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="35"/></argument_list></call> <operator pos:line="104" pos:column="36">||<pos:position pos:line="104" pos:column="38"/></operator> <name><name pos:line="104" pos:column="39">score<pos:position pos:line="104" pos:column="44"/></name><index pos:line="104" pos:column="44">[<expr><name pos:line="104" pos:column="45">i<pos:position pos:line="104" pos:column="46"/></name></expr>]<pos:position pos:line="104" pos:column="47"/></index></name> <operator pos:line="104" pos:column="48">&lt;<pos:position pos:line="104" pos:column="52"/></operator> <name pos:line="104" pos:column="50">ret<pos:position pos:line="104" pos:column="53"/></name></expr>)<pos:position pos:line="104" pos:column="54"/></condition><then pos:line="104" pos:column="54">
      <block pos:line="105" pos:column="7">{
	<expr_stmt><expr><operator pos:line="106" pos:column="9">*<pos:position pos:line="106" pos:column="10"/></operator><name pos:line="106" pos:column="10">tocode<pos:position pos:line="106" pos:column="16"/></name> <operator pos:line="106" pos:column="17">=<pos:position pos:line="106" pos:column="18"/></operator> <name pos:line="106" pos:column="19">i<pos:position pos:line="106" pos:column="20"/></name></expr>;<pos:position pos:line="106" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="107" pos:column="9">ret<pos:position pos:line="107" pos:column="12"/></name> <operator pos:line="107" pos:column="13">=<pos:position pos:line="107" pos:column="14"/></operator> <name><name pos:line="107" pos:column="15">score<pos:position pos:line="107" pos:column="20"/></name><index pos:line="107" pos:column="20">[<expr><name pos:line="107" pos:column="21">i<pos:position pos:line="107" pos:column="22"/></name></expr>]<pos:position pos:line="107" pos:column="23"/></index></name></expr>;<pos:position pos:line="107" pos:column="24"/></expr_stmt>
	<if pos:line="108" pos:column="9">if <condition pos:line="108" pos:column="12">(<expr><operator pos:line="108" pos:column="13">!<pos:position pos:line="108" pos:column="14"/></operator><name pos:line="108" pos:column="14">ret<pos:position pos:line="108" pos:column="17"/></name></expr>)<pos:position pos:line="108" pos:column="18"/></condition><then pos:line="108" pos:column="18">
	  <block type="pseudo"><break pos:line="109" pos:column="11">break;<pos:position pos:line="109" pos:column="17"/></break></block></then></if>
      }<pos:position pos:line="110" pos:column="8"/></block></then></if></elseif></if>
    }<pos:position pos:line="111" pos:column="6"/></block></for>
    <if pos:line="112" pos:column="5">if <condition pos:line="112" pos:column="8">(<expr><name pos:line="112" pos:column="9">ret<pos:position pos:line="112" pos:column="12"/></name> <operator pos:line="112" pos:column="13">!=<pos:position pos:line="112" pos:column="15"/></operator> <call pos:line="112" pos:column="16">(<name pos:line="112" pos:column="17">size_t<pos:position pos:line="112" pos:column="23"/></name>)<argument_list pos:line="112" pos:column="24">(<argument><expr><operator pos:line="112" pos:column="25">-<pos:position pos:line="112" pos:column="26"/></operator><literal type="number" pos:line="112" pos:column="26">1<pos:position pos:line="112" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="112" pos:column="29"/></condition><then pos:line="112" pos:column="29">
    <block pos:line="113" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="114" pos:column="7">memcpy<pos:position pos:line="114" pos:column="13"/></name> <argument_list pos:line="114" pos:column="14">(<argument><expr><name pos:line="114" pos:column="15">info<pos:position pos:line="114" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="114" pos:column="21">&amp;<pos:position pos:line="114" pos:column="26"/></operator><name><name pos:line="114" pos:column="22">infos<pos:position pos:line="114" pos:column="27"/></name><index pos:line="114" pos:column="27">[<expr><operator pos:line="114" pos:column="28">*<pos:position pos:line="114" pos:column="29"/></operator><name pos:line="114" pos:column="29">tocode<pos:position pos:line="114" pos:column="35"/></name></expr>]<pos:position pos:line="114" pos:column="36"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="114" pos:column="38">sizeof<argument_list pos:line="114" pos:column="44">(<argument><expr><name pos:line="114" pos:column="45">CONTENT<pos:position pos:line="114" pos:column="52"/></name></expr></argument>)<pos:position pos:line="114" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="114" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="115" pos:column="7">update_content_info<pos:position pos:line="115" pos:column="26"/></name> <argument_list pos:line="115" pos:column="27">(<argument><expr><name pos:line="115" pos:column="28">info<pos:position pos:line="115" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="115" pos:column="34">&amp;<pos:position pos:line="115" pos:column="39"/></operator><name><name pos:line="115" pos:column="35">states<pos:position pos:line="115" pos:column="41"/></name><index pos:line="115" pos:column="41">[<expr><operator pos:line="115" pos:column="42">*<pos:position pos:line="115" pos:column="43"/></operator><name pos:line="115" pos:column="43">tocode<pos:position pos:line="115" pos:column="49"/></name></expr>]<pos:position pos:line="115" pos:column="50"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="115" pos:column="52">0<pos:position pos:line="115" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="115" pos:column="55">0<pos:position pos:line="115" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="58"/></expr_stmt> <comment type="block" pos:line="115" pos:column="59">/* EOF */</comment>
    }<pos:position pos:line="116" pos:column="6"/></block></then></if>
  }<pos:position pos:line="117" pos:column="4"/></block></then></if>

  <for pos:line="119" pos:column="3">for <control pos:line="119" pos:column="7">(<init><expr><name pos:line="119" pos:column="8">i<pos:position pos:line="119" pos:column="9"/></name> <operator pos:line="119" pos:column="10">=<pos:position pos:line="119" pos:column="11"/></operator> <literal type="number" pos:line="119" pos:column="12">0<pos:position pos:line="119" pos:column="13"/></literal></expr>;<pos:position pos:line="119" pos:column="14"/></init> <condition><expr><name pos:line="119" pos:column="15">i<pos:position pos:line="119" pos:column="16"/></name> <operator pos:line="119" pos:column="17">&lt;<pos:position pos:line="119" pos:column="21"/></operator> <name pos:line="119" pos:column="19">ncodes<pos:position pos:line="119" pos:column="25"/></name></expr>;<pos:position pos:line="119" pos:column="26"/></condition> <incr><expr><name pos:line="119" pos:column="27">i<pos:position pos:line="119" pos:column="28"/></name><operator pos:line="119" pos:column="28">++<pos:position pos:line="119" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="119" pos:column="31"/></control>
    <block type="pseudo"><if pos:line="120" pos:column="5">if <condition pos:line="120" pos:column="8">(<expr><name><name pos:line="120" pos:column="9">cd<pos:position pos:line="120" pos:column="11"/></name><index pos:line="120" pos:column="11">[<expr><name pos:line="120" pos:column="12">i<pos:position pos:line="120" pos:column="13"/></name></expr>]<pos:position pos:line="120" pos:column="14"/></index></name> <operator pos:line="120" pos:column="15">!=<pos:position pos:line="120" pos:column="17"/></operator> <call pos:line="120" pos:column="18">(<name pos:line="120" pos:column="19">iconv_t<pos:position pos:line="120" pos:column="26"/></name>)<argument_list pos:line="120" pos:column="27">(<argument><expr><operator pos:line="120" pos:column="28">-<pos:position pos:line="120" pos:column="29"/></operator><literal type="number" pos:line="120" pos:column="29">1<pos:position pos:line="120" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="120" pos:column="32"/></condition><then pos:line="120" pos:column="32">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="121" pos:column="7">iconv_close<pos:position pos:line="121" pos:column="18"/></name> <argument_list pos:line="121" pos:column="19">(<argument><expr><name><name pos:line="121" pos:column="20">cd<pos:position pos:line="121" pos:column="22"/></name><index pos:line="121" pos:column="22">[<expr><name pos:line="121" pos:column="23">i<pos:position pos:line="121" pos:column="24"/></name></expr>]<pos:position pos:line="121" pos:column="25"/></index></name></expr></argument>)<pos:position pos:line="121" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="27"/></expr_stmt></block></then></if></block></for>

  <expr_stmt><expr><call><name pos:line="123" pos:column="3">iconv_close<pos:position pos:line="123" pos:column="14"/></name> <argument_list pos:line="123" pos:column="15">(<argument><expr><name pos:line="123" pos:column="16">cd1<pos:position pos:line="123" pos:column="19"/></name></expr></argument>)<pos:position pos:line="123" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="124" pos:column="3">FREE<pos:position pos:line="124" pos:column="7"/></name> <argument_list pos:line="124" pos:column="8">(<argument><expr><operator pos:line="124" pos:column="9">&amp;<pos:position pos:line="124" pos:column="14"/></operator><name pos:line="124" pos:column="10">cd<pos:position pos:line="124" pos:column="12"/></name></expr></argument>)<pos:position pos:line="124" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="125" pos:column="3">FREE<pos:position pos:line="125" pos:column="7"/></name> <argument_list pos:line="125" pos:column="8">(<argument><expr><operator pos:line="125" pos:column="9">&amp;<pos:position pos:line="125" pos:column="14"/></operator><name pos:line="125" pos:column="10">infos<pos:position pos:line="125" pos:column="15"/></name></expr></argument>)<pos:position pos:line="125" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="126" pos:column="3">FREE<pos:position pos:line="126" pos:column="7"/></name> <argument_list pos:line="126" pos:column="8">(<argument><expr><operator pos:line="126" pos:column="9">&amp;<pos:position pos:line="126" pos:column="14"/></operator><name pos:line="126" pos:column="10">score<pos:position pos:line="126" pos:column="15"/></name></expr></argument>)<pos:position pos:line="126" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="127" pos:column="3">FREE<pos:position pos:line="127" pos:column="7"/></name> <argument_list pos:line="127" pos:column="8">(<argument><expr><operator pos:line="127" pos:column="9">&amp;<pos:position pos:line="127" pos:column="14"/></operator><name pos:line="127" pos:column="10">states<pos:position pos:line="127" pos:column="16"/></name></expr></argument>)<pos:position pos:line="127" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="18"/></expr_stmt>

  <return pos:line="129" pos:column="3">return <expr><name pos:line="129" pos:column="10">ret<pos:position pos:line="129" pos:column="13"/></name></expr>;<pos:position pos:line="129" pos:column="14"/></return>
<cpp:else pos:line="130" pos:column="1">#<cpp:directive pos:line="130" pos:column="2">else<pos:position pos:line="130" pos:column="6"/></cpp:directive></cpp:else>
  <return pos:line="131" pos:column="3">return <expr><operator pos:line="131" pos:column="10">-<pos:position pos:line="131" pos:column="11"/></operator><literal type="number" pos:line="131" pos:column="11">1<pos:position pos:line="131" pos:column="12"/></literal></expr>;<pos:position pos:line="131" pos:column="13"/></return>
<cpp:endif pos:line="132" pos:column="1">#<cpp:directive pos:line="132" pos:column="2">endif<pos:position pos:line="132" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="132" pos:column="8">/* !HAVE_ICONV */</comment>
}<pos:position pos:line="133" pos:column="2"/></block></function></unit>

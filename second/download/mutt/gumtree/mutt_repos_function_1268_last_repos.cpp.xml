<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1268_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">b64_flush<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">FILE<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">fout<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">short<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">i<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>

  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><operator pos:line="5" pos:column="6">!<pos:position pos:line="5" pos:column="7"/></operator><name pos:line="5" pos:column="7">b64_num<pos:position pos:line="5" pos:column="14"/></name></expr>)<pos:position pos:line="5" pos:column="15"/></condition><then pos:line="5" pos:column="15">
    <block type="pseudo"><return pos:line="6" pos:column="5">return;<pos:position pos:line="6" pos:column="12"/></return></block></then></if>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><name pos:line="8" pos:column="6">b64_linelen<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">&gt;=<pos:position pos:line="8" pos:column="23"/></operator> <literal type="number" pos:line="8" pos:column="21">72<pos:position pos:line="8" pos:column="23"/></literal></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24">
  <block pos:line="9" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">fputc<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><literal type="char" pos:line="10" pos:column="11">'\n'<pos:position pos:line="10" pos:column="15"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="17">fout<pos:position pos:line="10" pos:column="21"/></name></expr></argument>)<pos:position pos:line="10" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">b64_linelen<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <literal type="number" pos:line="11" pos:column="19">0<pos:position pos:line="11" pos:column="20"/></literal></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <for pos:line="14" pos:column="3">for<control pos:line="14" pos:column="6">(<init><expr><name pos:line="14" pos:column="7">i<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">=<pos:position pos:line="14" pos:column="10"/></operator> <name pos:line="14" pos:column="11">b64_num<pos:position pos:line="14" pos:column="18"/></name></expr>;<pos:position pos:line="14" pos:column="19"/></init> <condition><expr><name pos:line="14" pos:column="20">i<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">&lt;<pos:position pos:line="14" pos:column="26"/></operator> <literal type="number" pos:line="14" pos:column="24">3<pos:position pos:line="14" pos:column="25"/></literal></expr>;<pos:position pos:line="14" pos:column="26"/></condition> <incr><expr><name pos:line="14" pos:column="27">i<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">++<pos:position pos:line="14" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="31"/></control>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="15" pos:column="5">b64_buffer<pos:position pos:line="15" pos:column="15"/></name><index pos:line="15" pos:column="15">[<expr><name pos:line="15" pos:column="16">i<pos:position pos:line="15" pos:column="17"/></name></expr>]<pos:position pos:line="15" pos:column="18"/></index></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <literal type="char" pos:line="15" pos:column="21">'\0'<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt></block></for>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">fputc<pos:position pos:line="17" pos:column="8"/></name><argument_list pos:line="17" pos:column="8">(<argument><expr><name><name pos:line="17" pos:column="9">B64Chars<pos:position pos:line="17" pos:column="17"/></name><index pos:line="17" pos:column="17">[<expr><operator pos:line="17" pos:column="18">(<pos:position pos:line="17" pos:column="19"/></operator><name><name pos:line="17" pos:column="19">b64_buffer<pos:position pos:line="17" pos:column="29"/></name><index pos:line="17" pos:column="29">[<expr><literal type="number" pos:line="17" pos:column="30">0<pos:position pos:line="17" pos:column="31"/></literal></expr>]<pos:position pos:line="17" pos:column="32"/></index></name> <operator pos:line="17" pos:column="33">&gt;&gt;<pos:position pos:line="17" pos:column="38"/></operator> <literal type="number" pos:line="17" pos:column="36">2<pos:position pos:line="17" pos:column="37"/></literal><operator pos:line="17" pos:column="37">)<pos:position pos:line="17" pos:column="38"/></operator> <operator pos:line="17" pos:column="39">&amp;<pos:position pos:line="17" pos:column="44"/></operator> <literal type="number" pos:line="17" pos:column="41">0x3f<pos:position pos:line="17" pos:column="45"/></literal></expr>]<pos:position pos:line="17" pos:column="46"/></index></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="48">fout<pos:position pos:line="17" pos:column="52"/></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><name pos:line="18" pos:column="3">b64_linelen<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">++<pos:position pos:line="18" pos:column="16"/></operator></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">fputc<pos:position pos:line="19" pos:column="8"/></name><argument_list pos:line="19" pos:column="8">(<argument><expr><name><name pos:line="19" pos:column="9">B64Chars<pos:position pos:line="19" pos:column="17"/></name><index pos:line="19" pos:column="17">[<expr><operator pos:line="19" pos:column="18">(<pos:position pos:line="19" pos:column="19"/></operator><operator pos:line="19" pos:column="19">(<pos:position pos:line="19" pos:column="20"/></operator><name><name pos:line="19" pos:column="20">b64_buffer<pos:position pos:line="19" pos:column="30"/></name><index pos:line="19" pos:column="30">[<expr><literal type="number" pos:line="19" pos:column="31">0<pos:position pos:line="19" pos:column="32"/></literal></expr>]<pos:position pos:line="19" pos:column="33"/></index></name> <operator pos:line="19" pos:column="34">&amp;<pos:position pos:line="19" pos:column="39"/></operator> <literal type="number" pos:line="19" pos:column="36">0x3<pos:position pos:line="19" pos:column="39"/></literal><operator pos:line="19" pos:column="39">)<pos:position pos:line="19" pos:column="40"/></operator> <operator pos:line="19" pos:column="41">&lt;&lt;<pos:position pos:line="19" pos:column="49"/></operator> <literal type="number" pos:line="19" pos:column="44">4<pos:position pos:line="19" pos:column="45"/></literal><operator pos:line="19" pos:column="45">)<pos:position pos:line="19" pos:column="46"/></operator> <operator pos:line="19" pos:column="47">|<pos:position pos:line="19" pos:column="48"/></operator> <operator pos:line="19" pos:column="49">(<pos:position pos:line="19" pos:column="50"/></operator><operator pos:line="19" pos:column="50">(<pos:position pos:line="19" pos:column="51"/></operator><name><name pos:line="19" pos:column="51">b64_buffer<pos:position pos:line="19" pos:column="61"/></name><index pos:line="19" pos:column="61">[<expr><literal type="number" pos:line="19" pos:column="62">1<pos:position pos:line="19" pos:column="63"/></literal></expr>]<pos:position pos:line="19" pos:column="64"/></index></name> <operator pos:line="19" pos:column="65">&gt;&gt;<pos:position pos:line="19" pos:column="70"/></operator> <literal type="number" pos:line="19" pos:column="68">4<pos:position pos:line="19" pos:column="69"/></literal><operator pos:line="19" pos:column="69">)<pos:position pos:line="19" pos:column="70"/></operator> <operator pos:line="19" pos:column="71">&amp;<pos:position pos:line="19" pos:column="76"/></operator> <literal type="number" pos:line="19" pos:column="73">0xf<pos:position pos:line="19" pos:column="76"/></literal><operator pos:line="19" pos:column="76">)<pos:position pos:line="19" pos:column="77"/></operator></expr> ]<pos:position pos:line="19" pos:column="79"/></index></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="81">fout<pos:position pos:line="19" pos:column="85"/></name></expr></argument>)<pos:position pos:line="19" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="87"/></expr_stmt>
  <expr_stmt><expr><name pos:line="20" pos:column="3">b64_linelen<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">++<pos:position pos:line="20" pos:column="16"/></operator></expr>;<pos:position pos:line="20" pos:column="17"/></expr_stmt>

  <if pos:line="22" pos:column="3">if<condition pos:line="22" pos:column="5">(<expr><name pos:line="22" pos:column="6">b64_num<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">&gt;<pos:position pos:line="22" pos:column="18"/></operator> <literal type="number" pos:line="22" pos:column="16">1<pos:position pos:line="22" pos:column="17"/></literal></expr>)<pos:position pos:line="22" pos:column="18"/></condition><then pos:line="22" pos:column="18">
  <block pos:line="23" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">fputc<pos:position pos:line="24" pos:column="10"/></name><argument_list pos:line="24" pos:column="10">(<argument><expr><name><name pos:line="24" pos:column="11">B64Chars<pos:position pos:line="24" pos:column="19"/></name><index pos:line="24" pos:column="19">[<expr><operator pos:line="24" pos:column="20">(<pos:position pos:line="24" pos:column="21"/></operator><operator pos:line="24" pos:column="21">(<pos:position pos:line="24" pos:column="22"/></operator><name><name pos:line="24" pos:column="22">b64_buffer<pos:position pos:line="24" pos:column="32"/></name><index pos:line="24" pos:column="32">[<expr><literal type="number" pos:line="24" pos:column="33">1<pos:position pos:line="24" pos:column="34"/></literal></expr>]<pos:position pos:line="24" pos:column="35"/></index></name> <operator pos:line="24" pos:column="36">&amp;<pos:position pos:line="24" pos:column="41"/></operator> <literal type="number" pos:line="24" pos:column="38">0xf<pos:position pos:line="24" pos:column="41"/></literal><operator pos:line="24" pos:column="41">)<pos:position pos:line="24" pos:column="42"/></operator> <operator pos:line="24" pos:column="43">&lt;&lt;<pos:position pos:line="24" pos:column="51"/></operator> <literal type="number" pos:line="24" pos:column="46">2<pos:position pos:line="24" pos:column="47"/></literal><operator pos:line="24" pos:column="47">)<pos:position pos:line="24" pos:column="48"/></operator> <operator pos:line="24" pos:column="49">|<pos:position pos:line="24" pos:column="50"/></operator> <operator pos:line="24" pos:column="51">(<pos:position pos:line="24" pos:column="52"/></operator><operator pos:line="24" pos:column="52">(<pos:position pos:line="24" pos:column="53"/></operator><name><name pos:line="24" pos:column="53">b64_buffer<pos:position pos:line="24" pos:column="63"/></name><index pos:line="24" pos:column="63">[<expr><literal type="number" pos:line="24" pos:column="64">2<pos:position pos:line="24" pos:column="65"/></literal></expr>]<pos:position pos:line="24" pos:column="66"/></index></name> <operator pos:line="24" pos:column="67">&gt;&gt;<pos:position pos:line="24" pos:column="72"/></operator> <literal type="number" pos:line="24" pos:column="70">6<pos:position pos:line="24" pos:column="71"/></literal><operator pos:line="24" pos:column="71">)<pos:position pos:line="24" pos:column="72"/></operator> <operator pos:line="24" pos:column="73">&amp;<pos:position pos:line="24" pos:column="78"/></operator> <literal type="number" pos:line="24" pos:column="75">0x3<pos:position pos:line="24" pos:column="78"/></literal><operator pos:line="24" pos:column="78">)<pos:position pos:line="24" pos:column="79"/></operator></expr> ]<pos:position pos:line="24" pos:column="81"/></index></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="83">fout<pos:position pos:line="24" pos:column="87"/></name></expr></argument>)<pos:position pos:line="24" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="89"/></expr_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">b64_linelen<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">++<pos:position pos:line="25" pos:column="18"/></operator></expr>;<pos:position pos:line="25" pos:column="19"/></expr_stmt>
    <if pos:line="26" pos:column="5">if<condition pos:line="26" pos:column="7">(<expr><name pos:line="26" pos:column="8">b64_num<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">&gt;<pos:position pos:line="26" pos:column="20"/></operator> <literal type="number" pos:line="26" pos:column="18">2<pos:position pos:line="26" pos:column="19"/></literal></expr>)<pos:position pos:line="26" pos:column="20"/></condition><then pos:line="26" pos:column="20">
    <block pos:line="27" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="28" pos:column="7">fputc<pos:position pos:line="28" pos:column="12"/></name><argument_list pos:line="28" pos:column="12">(<argument><expr><name><name pos:line="28" pos:column="13">B64Chars<pos:position pos:line="28" pos:column="21"/></name><index pos:line="28" pos:column="21">[<expr><name><name pos:line="28" pos:column="22">b64_buffer<pos:position pos:line="28" pos:column="32"/></name><index pos:line="28" pos:column="32">[<expr><literal type="number" pos:line="28" pos:column="33">2<pos:position pos:line="28" pos:column="34"/></literal></expr>]<pos:position pos:line="28" pos:column="35"/></index></name> <operator pos:line="28" pos:column="36">&amp;<pos:position pos:line="28" pos:column="41"/></operator> <literal type="number" pos:line="28" pos:column="38">0x3f<pos:position pos:line="28" pos:column="42"/></literal></expr>]<pos:position pos:line="28" pos:column="43"/></index></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="45">fout<pos:position pos:line="28" pos:column="49"/></name></expr></argument>)<pos:position pos:line="28" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name pos:line="29" pos:column="7">b64_linelen<pos:position pos:line="29" pos:column="18"/></name><operator pos:line="29" pos:column="18">++<pos:position pos:line="29" pos:column="20"/></operator></expr>;<pos:position pos:line="29" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <while pos:line="33" pos:column="3">while<condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">b64_linelen<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">%<pos:position pos:line="33" pos:column="22"/></operator> <literal type="number" pos:line="33" pos:column="23">4<pos:position pos:line="33" pos:column="24"/></literal></expr>)<pos:position pos:line="33" pos:column="25"/></condition>
  <block pos:line="34" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">fputc<pos:position pos:line="35" pos:column="10"/></name><argument_list pos:line="35" pos:column="10">(<argument><expr><literal type="char" pos:line="35" pos:column="11">'='<pos:position pos:line="35" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="16">fout<pos:position pos:line="35" pos:column="20"/></name></expr></argument>)<pos:position pos:line="35" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="36" pos:column="5">b64_linelen<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">++<pos:position pos:line="36" pos:column="18"/></operator></expr>;<pos:position pos:line="36" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="37" pos:column="4"/></block></while>

  <expr_stmt><expr><name pos:line="39" pos:column="3">b64_num<pos:position pos:line="39" pos:column="10"/></name> <operator pos:line="39" pos:column="11">=<pos:position pos:line="39" pos:column="12"/></operator> <literal type="number" pos:line="39" pos:column="13">0<pos:position pos:line="39" pos:column="14"/></literal></expr>;<pos:position pos:line="39" pos:column="15"/></expr_stmt>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

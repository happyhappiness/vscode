<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1195_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">dotlock_unlink<pos:position pos:line="2" pos:column="15"/></name> <parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">realpath<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">stat<pos:position pos:line="4" pos:column="14"/></name></name></type> <name pos:line="4" pos:column="15">lsb<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name> <init pos:line="5" pos:column="9">= <expr><operator pos:line="5" pos:column="11">-<pos:position pos:line="5" pos:column="12"/></operator><literal type="number" pos:line="5" pos:column="12">1<pos:position pos:line="5" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><call><name pos:line="7" pos:column="7">dotlock_lock<pos:position pos:line="7" pos:column="19"/></name> <argument_list pos:line="7" pos:column="20">(<argument><expr><name pos:line="7" pos:column="21">realpath<pos:position pos:line="7" pos:column="29"/></name></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></call> <operator pos:line="7" pos:column="31">!=<pos:position pos:line="7" pos:column="33"/></operator> <name pos:line="7" pos:column="34">DL_EX_OK<pos:position pos:line="7" pos:column="42"/></name></expr>)<pos:position pos:line="7" pos:column="43"/></condition><then pos:line="7" pos:column="43">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">DL_EX_ERROR<pos:position pos:line="8" pos:column="23"/></name></expr>;<pos:position pos:line="8" pos:column="24"/></return></block></then></if>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">(<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">i<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <call><name pos:line="10" pos:column="12">lstat<pos:position pos:line="10" pos:column="17"/></name> <argument_list pos:line="10" pos:column="18">(<argument><expr><name pos:line="10" pos:column="19">realpath<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="29">&amp;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="30">lsb<pos:position pos:line="10" pos:column="33"/></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call><operator pos:line="10" pos:column="34">)<pos:position pos:line="10" pos:column="35"/></operator> <operator pos:line="10" pos:column="36">==<pos:position pos:line="10" pos:column="38"/></operator> <literal type="number" pos:line="10" pos:column="39">0<pos:position pos:line="10" pos:column="40"/></literal> <operator pos:line="10" pos:column="41">&amp;&amp;<pos:position pos:line="10" pos:column="51"/></operator> <name><name pos:line="10" pos:column="44">lsb<pos:position pos:line="10" pos:column="47"/></name><operator pos:line="10" pos:column="47">.<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="48">st_size<pos:position pos:line="10" pos:column="55"/></name></name> <operator pos:line="10" pos:column="56">==<pos:position pos:line="10" pos:column="58"/></operator> <literal type="number" pos:line="10" pos:column="59">0<pos:position pos:line="10" pos:column="60"/></literal></expr>)<pos:position pos:line="10" pos:column="61"/></condition><then pos:line="10" pos:column="61">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="5">unlink<pos:position pos:line="11" pos:column="11"/></name> <argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">realpath<pos:position pos:line="11" pos:column="21"/></name></expr></argument>)<pos:position pos:line="11" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">dotlock_unlock<pos:position pos:line="13" pos:column="17"/></name> <argument_list pos:line="13" pos:column="18">(<argument><expr><name pos:line="13" pos:column="19">realpath<pos:position pos:line="13" pos:column="27"/></name></expr></argument>)<pos:position pos:line="13" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>

  <return pos:line="15" pos:column="3">return <expr><ternary><condition><expr><operator pos:line="15" pos:column="10">(<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="11">i<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">==<pos:position pos:line="15" pos:column="15"/></operator> <literal type="number" pos:line="15" pos:column="16">0<pos:position pos:line="15" pos:column="17"/></literal><operator pos:line="15" pos:column="17">)<pos:position pos:line="15" pos:column="18"/></operator></expr> ?<pos:position pos:line="15" pos:column="20"/></condition><then pos:line="15" pos:column="20">  <expr><name pos:line="15" pos:column="22">DL_EX_OK<pos:position pos:line="15" pos:column="30"/></name></expr> <pos:position pos:line="15" pos:column="31"/></then><else pos:line="15" pos:column="31">: <expr><name pos:line="15" pos:column="33">DL_EX_ERROR<pos:position pos:line="15" pos:column="44"/></name></expr></else></ternary></expr>;<pos:position pos:line="15" pos:column="45"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1511_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">_mutt_system<pos:position pos:line="1" pos:column="17"/></name> <parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><specifier pos:line="1" pos:column="19">const<pos:position pos:line="1" pos:column="24"/></specifier> <name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">cmd<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">int<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">flags<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">rc<pos:position pos:line="3" pos:column="9"/></name> <init pos:line="3" pos:column="10">= <expr><operator pos:line="3" pos:column="12">-<pos:position pos:line="3" pos:column="13"/></operator><literal type="number" pos:line="3" pos:column="13">1<pos:position pos:line="3" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">sigaction<pos:position pos:line="4" pos:column="19"/></name></name></type> <name pos:line="4" pos:column="20">act<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">sigaction<pos:position pos:line="5" pos:column="19"/></name></name></type> <name pos:line="5" pos:column="20">oldtstp<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">sigaction<pos:position pos:line="6" pos:column="19"/></name></name></type> <name pos:line="6" pos:column="20">oldcont<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">sigset_t<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">set<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">pid_t<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">thepid<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">!<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">cmd<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">||<pos:position pos:line="10" pos:column="14"/></operator> <operator pos:line="10" pos:column="15">!<pos:position pos:line="10" pos:column="16"/></operator><operator pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">cmd<pos:position pos:line="10" pos:column="20"/></name></expr>)<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><literal type="number" pos:line="11" pos:column="13">0<pos:position pos:line="11" pos:column="14"/></literal><operator pos:line="11" pos:column="14">)<pos:position pos:line="11" pos:column="15"/></operator></expr>;<pos:position pos:line="11" pos:column="16"/></return></block></then></if>

  <comment type="block" pos:line="13" pos:column="3">/* must ignore SIGINT and SIGQUIT */</comment>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">mutt_block_signals_system<pos:position pos:line="15" pos:column="28"/></name> <argument_list pos:line="15" pos:column="29">()<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>

  <comment type="block" pos:line="17" pos:column="3">/* also don't want to be stopped right now */</comment>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">flags<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">&amp;<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="15">MUTT_DETACH_PROCESS<pos:position pos:line="18" pos:column="34"/></name></expr>)<pos:position pos:line="18" pos:column="35"/></condition><then pos:line="18" pos:column="35">
  <block pos:line="19" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">sigemptyset<pos:position pos:line="20" pos:column="16"/></name> <argument_list pos:line="20" pos:column="17">(<argument><expr><operator pos:line="20" pos:column="18">&amp;<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="19">set<pos:position pos:line="20" pos:column="22"/></name></expr></argument>)<pos:position pos:line="20" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">sigaddset<pos:position pos:line="21" pos:column="14"/></name> <argument_list pos:line="21" pos:column="15">(<argument><expr><operator pos:line="21" pos:column="16">&amp;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="17">set<pos:position pos:line="21" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="22">SIGTSTP<pos:position pos:line="21" pos:column="29"/></name></expr></argument>)<pos:position pos:line="21" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">sigprocmask<pos:position pos:line="22" pos:column="16"/></name> <argument_list pos:line="22" pos:column="17">(<argument><expr><name pos:line="22" pos:column="18">SIG_BLOCK<pos:position pos:line="22" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="29">&amp;<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="30">set<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="35">NULL<pos:position pos:line="22" pos:column="39"/></name></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></then>
  <else pos:line="24" pos:column="3">else
  <block pos:line="25" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">act<pos:position pos:line="26" pos:column="8"/></name><operator pos:line="26" pos:column="8">.<pos:position pos:line="26" pos:column="9"/></operator><name pos:line="26" pos:column="9">sa_handler<pos:position pos:line="26" pos:column="19"/></name></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <name pos:line="26" pos:column="22">SIG_DFL<pos:position pos:line="26" pos:column="29"/></name></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt>
    <comment type="block" pos:line="27" pos:column="5">/* we want to restart the waitpid() below */</comment>
<cpp:ifdef pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">ifdef<pos:position pos:line="28" pos:column="7"/></cpp:directive> <name pos:line="28" pos:column="8">SA_RESTART<pos:position pos:line="28" pos:column="18"/></name></cpp:ifdef>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">act<pos:position pos:line="29" pos:column="8"/></name><operator pos:line="29" pos:column="8">.<pos:position pos:line="29" pos:column="9"/></operator><name pos:line="29" pos:column="9">sa_flags<pos:position pos:line="29" pos:column="17"/></name></name> <operator pos:line="29" pos:column="18">=<pos:position pos:line="29" pos:column="19"/></operator> <name pos:line="29" pos:column="20">SA_RESTART<pos:position pos:line="29" pos:column="30"/></name></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">sigemptyset<pos:position pos:line="31" pos:column="16"/></name> <argument_list pos:line="31" pos:column="17">(<argument><expr><operator pos:line="31" pos:column="18">&amp;<pos:position pos:line="31" pos:column="23"/></operator><name><name pos:line="31" pos:column="19">act<pos:position pos:line="31" pos:column="22"/></name><operator pos:line="31" pos:column="22">.<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="23">sa_mask<pos:position pos:line="31" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">sigaction<pos:position pos:line="32" pos:column="14"/></name> <argument_list pos:line="32" pos:column="15">(<argument><expr><name pos:line="32" pos:column="16">SIGTSTP<pos:position pos:line="32" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="25">&amp;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="26">act<pos:position pos:line="32" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="31">&amp;<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="32">oldtstp<pos:position pos:line="32" pos:column="39"/></name></expr></argument>)<pos:position pos:line="32" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">sigaction<pos:position pos:line="33" pos:column="14"/></name> <argument_list pos:line="33" pos:column="15">(<argument><expr><name pos:line="33" pos:column="16">SIGCONT<pos:position pos:line="33" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="25">&amp;<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="26">act<pos:position pos:line="33" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="31">&amp;<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="32">oldcont<pos:position pos:line="33" pos:column="39"/></name></expr></argument>)<pos:position pos:line="33" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="34" pos:column="4"/></block></else></if>

  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><operator pos:line="36" pos:column="7">(<pos:position pos:line="36" pos:column="8"/></operator><name pos:line="36" pos:column="8">thepid<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <call><name pos:line="36" pos:column="17">fork<pos:position pos:line="36" pos:column="21"/></name> <argument_list pos:line="36" pos:column="22">()<pos:position pos:line="36" pos:column="24"/></argument_list></call><operator pos:line="36" pos:column="24">)<pos:position pos:line="36" pos:column="25"/></operator> <operator pos:line="36" pos:column="26">==<pos:position pos:line="36" pos:column="28"/></operator> <literal type="number" pos:line="36" pos:column="29">0<pos:position pos:line="36" pos:column="30"/></literal></expr>)<pos:position pos:line="36" pos:column="31"/></condition><then pos:line="36" pos:column="31">
  <block pos:line="37" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">act<pos:position pos:line="38" pos:column="8"/></name><operator pos:line="38" pos:column="8">.<pos:position pos:line="38" pos:column="9"/></operator><name pos:line="38" pos:column="9">sa_flags<pos:position pos:line="38" pos:column="17"/></name></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <literal type="number" pos:line="38" pos:column="20">0<pos:position pos:line="38" pos:column="21"/></literal></expr>;<pos:position pos:line="38" pos:column="22"/></expr_stmt>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">flags<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">&amp;<pos:position pos:line="40" pos:column="20"/></operator> <name pos:line="40" pos:column="17">MUTT_DETACH_PROCESS<pos:position pos:line="40" pos:column="36"/></name></expr>)<pos:position pos:line="40" pos:column="37"/></condition><then pos:line="40" pos:column="37">
    <block pos:line="41" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="42" pos:column="7">int<pos:position pos:line="42" pos:column="10"/></name></type> <name pos:line="42" pos:column="11">fd<pos:position pos:line="42" pos:column="13"/></name></decl>;<pos:position pos:line="42" pos:column="14"/></decl_stmt>

      <comment type="block" pos:line="44" pos:column="7">/* give up controlling terminal */</comment>
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">setsid<pos:position pos:line="45" pos:column="13"/></name> <argument_list pos:line="45" pos:column="14">()<pos:position pos:line="45" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="17"/></expr_stmt>

      <switch pos:line="47" pos:column="7">switch <condition pos:line="47" pos:column="14">(<expr><call><name pos:line="47" pos:column="15">fork<pos:position pos:line="47" pos:column="19"/></name> <argument_list pos:line="47" pos:column="20">()<pos:position pos:line="47" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="23"/></condition>
      <block pos:line="48" pos:column="7">{
	<case pos:line="49" pos:column="9">case <expr><literal type="number" pos:line="49" pos:column="14">0<pos:position pos:line="49" pos:column="15"/></literal></expr>:<pos:position pos:line="49" pos:column="16"/></case>
<cpp:if pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">if<pos:position pos:line="50" pos:column="4"/></cpp:directive> <expr><call><name pos:line="50" pos:column="5">defined<pos:position pos:line="50" pos:column="12"/></name><argument_list pos:line="50" pos:column="12">(<argument><expr><name pos:line="50" pos:column="13">OPEN_MAX<pos:position pos:line="50" pos:column="21"/></name></expr></argument>)<pos:position pos:line="50" pos:column="22"/></argument_list></call></expr></cpp:if>
	  <for pos:line="51" pos:column="11">for <control pos:line="51" pos:column="15">(<init><expr><name pos:line="51" pos:column="16">fd<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">=<pos:position pos:line="51" pos:column="20"/></operator> <literal type="number" pos:line="51" pos:column="21">0<pos:position pos:line="51" pos:column="22"/></literal></expr>;<pos:position pos:line="51" pos:column="23"/></init> <condition><expr><name pos:line="51" pos:column="24">fd<pos:position pos:line="51" pos:column="26"/></name> <operator pos:line="51" pos:column="27">&lt;<pos:position pos:line="51" pos:column="31"/></operator> <name pos:line="51" pos:column="29">OPEN_MAX<pos:position pos:line="51" pos:column="37"/></name></expr>;<pos:position pos:line="51" pos:column="38"/></condition> <incr><expr><name pos:line="51" pos:column="39">fd<pos:position pos:line="51" pos:column="41"/></name><operator pos:line="51" pos:column="41">++<pos:position pos:line="51" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="51" pos:column="44"/></control>
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="13">close<pos:position pos:line="52" pos:column="18"/></name> <argument_list pos:line="52" pos:column="19">(<argument><expr><name pos:line="52" pos:column="20">fd<pos:position pos:line="52" pos:column="22"/></name></expr></argument>)<pos:position pos:line="52" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="24"/></expr_stmt></block></for>
<cpp:elif pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">elif<pos:position pos:line="53" pos:column="6"/></cpp:directive> <expr><call><name pos:line="53" pos:column="7">defined<pos:position pos:line="53" pos:column="14"/></name><argument_list pos:line="53" pos:column="14">(<argument><expr><name pos:line="53" pos:column="15">_POSIX_OPEN_MAX<pos:position pos:line="53" pos:column="30"/></name></expr></argument>)<pos:position pos:line="53" pos:column="31"/></argument_list></call></expr></cpp:elif>
	  <for pos:line="54" pos:column="11">for <control pos:line="54" pos:column="15">(<init><expr><name pos:line="54" pos:column="16">fd<pos:position pos:line="54" pos:column="18"/></name> <operator pos:line="54" pos:column="19">=<pos:position pos:line="54" pos:column="20"/></operator> <literal type="number" pos:line="54" pos:column="21">0<pos:position pos:line="54" pos:column="22"/></literal></expr>;<pos:position pos:line="54" pos:column="23"/></init> <condition><expr><name pos:line="54" pos:column="24">fd<pos:position pos:line="54" pos:column="26"/></name> <operator pos:line="54" pos:column="27">&lt;<pos:position pos:line="54" pos:column="31"/></operator> <name pos:line="54" pos:column="29">_POSIX_OPEN_MAX<pos:position pos:line="54" pos:column="44"/></name></expr>;<pos:position pos:line="54" pos:column="45"/></condition> <incr><expr><name pos:line="54" pos:column="46">fd<pos:position pos:line="54" pos:column="48"/></name><operator pos:line="54" pos:column="48">++<pos:position pos:line="54" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="54" pos:column="51"/></control>
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="13">close<pos:position pos:line="55" pos:column="18"/></name> <argument_list pos:line="55" pos:column="19">(<argument><expr><name pos:line="55" pos:column="20">fd<pos:position pos:line="55" pos:column="22"/></name></expr></argument>)<pos:position pos:line="55" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="24"/></expr_stmt></block></for>
<cpp:else pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">else<pos:position pos:line="56" pos:column="6"/></cpp:directive></cpp:else>
	  <expr_stmt><expr><call><name pos:line="57" pos:column="11">close<pos:position pos:line="57" pos:column="16"/></name> <argument_list pos:line="57" pos:column="17">(<argument><expr><literal type="number" pos:line="57" pos:column="18">0<pos:position pos:line="57" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="21"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="58" pos:column="11">close<pos:position pos:line="58" pos:column="16"/></name> <argument_list pos:line="58" pos:column="17">(<argument><expr><literal type="number" pos:line="58" pos:column="18">1<pos:position pos:line="58" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="21"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="59" pos:column="11">close<pos:position pos:line="59" pos:column="16"/></name> <argument_list pos:line="59" pos:column="17">(<argument><expr><literal type="number" pos:line="59" pos:column="18">2<pos:position pos:line="59" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="21"/></expr_stmt>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif<pos:position pos:line="60" pos:column="7"/></cpp:directive></cpp:endif>
	  <expr_stmt><expr><call><name pos:line="61" pos:column="11">chdir<pos:position pos:line="61" pos:column="16"/></name> <argument_list pos:line="61" pos:column="17">(<argument><expr><literal type="string" pos:line="61" pos:column="18">"/"<pos:position pos:line="61" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="23"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="62" pos:column="11">act<pos:position pos:line="62" pos:column="14"/></name><operator pos:line="62" pos:column="14">.<pos:position pos:line="62" pos:column="15"/></operator><name pos:line="62" pos:column="15">sa_handler<pos:position pos:line="62" pos:column="25"/></name></name> <operator pos:line="62" pos:column="26">=<pos:position pos:line="62" pos:column="27"/></operator> <name pos:line="62" pos:column="28">SIG_DFL<pos:position pos:line="62" pos:column="35"/></name></expr>;<pos:position pos:line="62" pos:column="36"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="63" pos:column="11">sigaction<pos:position pos:line="63" pos:column="20"/></name> <argument_list pos:line="63" pos:column="21">(<argument><expr><name pos:line="63" pos:column="22">SIGCHLD<pos:position pos:line="63" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="31">&amp;<pos:position pos:line="63" pos:column="36"/></operator><name pos:line="63" pos:column="32">act<pos:position pos:line="63" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="37">NULL<pos:position pos:line="63" pos:column="41"/></name></expr></argument>)<pos:position pos:line="63" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="43"/></expr_stmt>
	  <break pos:line="64" pos:column="11">break;<pos:position pos:line="64" pos:column="17"/></break>

	<case pos:line="66" pos:column="9">case <expr><operator pos:line="66" pos:column="14">-<pos:position pos:line="66" pos:column="15"/></operator><literal type="number" pos:line="66" pos:column="15">1<pos:position pos:line="66" pos:column="16"/></literal></expr>:<pos:position pos:line="66" pos:column="17"/></case>
	  <expr_stmt><expr><call><name pos:line="67" pos:column="11">_exit<pos:position pos:line="67" pos:column="16"/></name> <argument_list pos:line="67" pos:column="17">(<argument><expr><literal type="number" pos:line="67" pos:column="18">127<pos:position pos:line="67" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="23"/></expr_stmt>

	<default pos:line="69" pos:column="9">default:<pos:position pos:line="69" pos:column="17"/></default>
	  <expr_stmt><expr><call><name pos:line="70" pos:column="11">_exit<pos:position pos:line="70" pos:column="16"/></name> <argument_list pos:line="70" pos:column="17">(<argument><expr><literal type="number" pos:line="70" pos:column="18">0<pos:position pos:line="70" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="71" pos:column="8"/></block></switch>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="74" pos:column="5">/* reset signals for the child; not really needed, but... */</comment>
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">mutt_unblock_signals_system<pos:position pos:line="75" pos:column="32"/></name> <argument_list pos:line="75" pos:column="33">(<argument><expr><literal type="number" pos:line="75" pos:column="34">0<pos:position pos:line="75" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="76" pos:column="5">act<pos:position pos:line="76" pos:column="8"/></name><operator pos:line="76" pos:column="8">.<pos:position pos:line="76" pos:column="9"/></operator><name pos:line="76" pos:column="9">sa_handler<pos:position pos:line="76" pos:column="19"/></name></name> <operator pos:line="76" pos:column="20">=<pos:position pos:line="76" pos:column="21"/></operator> <name pos:line="76" pos:column="22">SIG_DFL<pos:position pos:line="76" pos:column="29"/></name></expr>;<pos:position pos:line="76" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="77" pos:column="5">act<pos:position pos:line="77" pos:column="8"/></name><operator pos:line="77" pos:column="8">.<pos:position pos:line="77" pos:column="9"/></operator><name pos:line="77" pos:column="9">sa_flags<pos:position pos:line="77" pos:column="17"/></name></name> <operator pos:line="77" pos:column="18">=<pos:position pos:line="77" pos:column="19"/></operator> <literal type="number" pos:line="77" pos:column="20">0<pos:position pos:line="77" pos:column="21"/></literal></expr>;<pos:position pos:line="77" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="78" pos:column="5">sigemptyset<pos:position pos:line="78" pos:column="16"/></name> <argument_list pos:line="78" pos:column="17">(<argument><expr><operator pos:line="78" pos:column="18">&amp;<pos:position pos:line="78" pos:column="23"/></operator><name><name pos:line="78" pos:column="19">act<pos:position pos:line="78" pos:column="22"/></name><operator pos:line="78" pos:column="22">.<pos:position pos:line="78" pos:column="23"/></operator><name pos:line="78" pos:column="23">sa_mask<pos:position pos:line="78" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">sigaction<pos:position pos:line="79" pos:column="14"/></name> <argument_list pos:line="79" pos:column="15">(<argument><expr><name pos:line="79" pos:column="16">SIGTERM<pos:position pos:line="79" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="25">&amp;<pos:position pos:line="79" pos:column="30"/></operator><name pos:line="79" pos:column="26">act<pos:position pos:line="79" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="31">NULL<pos:position pos:line="79" pos:column="35"/></name></expr></argument>)<pos:position pos:line="79" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="80" pos:column="5">sigaction<pos:position pos:line="80" pos:column="14"/></name> <argument_list pos:line="80" pos:column="15">(<argument><expr><name pos:line="80" pos:column="16">SIGTSTP<pos:position pos:line="80" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="25">&amp;<pos:position pos:line="80" pos:column="30"/></operator><name pos:line="80" pos:column="26">act<pos:position pos:line="80" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="31">NULL<pos:position pos:line="80" pos:column="35"/></name></expr></argument>)<pos:position pos:line="80" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="81" pos:column="5">sigaction<pos:position pos:line="81" pos:column="14"/></name> <argument_list pos:line="81" pos:column="15">(<argument><expr><name pos:line="81" pos:column="16">SIGCONT<pos:position pos:line="81" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="81" pos:column="25">&amp;<pos:position pos:line="81" pos:column="30"/></operator><name pos:line="81" pos:column="26">act<pos:position pos:line="81" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="31">NULL<pos:position pos:line="81" pos:column="35"/></name></expr></argument>)<pos:position pos:line="81" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="83" pos:column="5">execle<pos:position pos:line="83" pos:column="11"/></name> <argument_list pos:line="83" pos:column="12">(<argument><expr><name pos:line="83" pos:column="13">EXECSHELL<pos:position pos:line="83" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="24">"sh"<pos:position pos:line="83" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="30">"-c"<pos:position pos:line="83" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="83" pos:column="36">cmd<pos:position pos:line="83" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="41">NULL<pos:position pos:line="83" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="83" pos:column="47">mutt_envlist<pos:position pos:line="83" pos:column="59"/></name> <argument_list pos:line="83" pos:column="60">()<pos:position pos:line="83" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="83" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">_exit<pos:position pos:line="84" pos:column="10"/></name> <argument_list pos:line="84" pos:column="11">(<argument><expr><literal type="number" pos:line="84" pos:column="12">127<pos:position pos:line="84" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="17"/></expr_stmt> <comment type="block" pos:line="84" pos:column="18">/* execl error */</comment>
  }<pos:position pos:line="85" pos:column="4"/></block></then>
  <elseif pos:line="86" pos:column="3">else <if pos:line="86" pos:column="8">if <condition pos:line="86" pos:column="11">(<expr><name pos:line="86" pos:column="12">thepid<pos:position pos:line="86" pos:column="18"/></name> <operator pos:line="86" pos:column="19">!=<pos:position pos:line="86" pos:column="21"/></operator> <operator pos:line="86" pos:column="22">-<pos:position pos:line="86" pos:column="23"/></operator><literal type="number" pos:line="86" pos:column="23">1<pos:position pos:line="86" pos:column="24"/></literal></expr>)<pos:position pos:line="86" pos:column="25"/></condition><then pos:line="86" pos:column="25">
  <block pos:line="87" pos:column="3">{
<cpp:ifndef pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">ifndef<pos:position pos:line="88" pos:column="8"/></cpp:directive> <name pos:line="88" pos:column="9">USE_IMAP<pos:position pos:line="88" pos:column="17"/></name></cpp:ifndef>
    <comment type="block" pos:line="89" pos:column="5">/* wait for the (first) child process to finish */</comment>
    <expr_stmt><expr><call><name pos:line="90" pos:column="5">waitpid<pos:position pos:line="90" pos:column="12"/></name> <argument_list pos:line="90" pos:column="13">(<argument><expr><name pos:line="90" pos:column="14">thepid<pos:position pos:line="90" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="22">&amp;<pos:position pos:line="90" pos:column="27"/></operator><name pos:line="90" pos:column="23">rc<pos:position pos:line="90" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="90" pos:column="27">0<pos:position pos:line="90" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="30"/></expr_stmt>
<cpp:else pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">else<pos:position pos:line="91" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name pos:line="92" pos:column="5">rc<pos:position pos:line="92" pos:column="7"/></name> <operator pos:line="92" pos:column="8">=<pos:position pos:line="92" pos:column="9"/></operator> <call><name pos:line="92" pos:column="10">imap_wait_keepalive<pos:position pos:line="92" pos:column="29"/></name> <argument_list pos:line="92" pos:column="30">(<argument><expr><name pos:line="92" pos:column="31">thepid<pos:position pos:line="92" pos:column="37"/></name></expr></argument>)<pos:position pos:line="92" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="39"/></expr_stmt>
<cpp:endif pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">endif<pos:position pos:line="93" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="94" pos:column="4"/></block></then></if></elseif></if>

  <expr_stmt><expr><call><name pos:line="96" pos:column="3">sigaction<pos:position pos:line="96" pos:column="12"/></name> <argument_list pos:line="96" pos:column="13">(<argument><expr><name pos:line="96" pos:column="14">SIGCONT<pos:position pos:line="96" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="96" pos:column="23">&amp;<pos:position pos:line="96" pos:column="28"/></operator><name pos:line="96" pos:column="24">oldcont<pos:position pos:line="96" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="33">NULL<pos:position pos:line="96" pos:column="37"/></name></expr></argument>)<pos:position pos:line="96" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="97" pos:column="3">sigaction<pos:position pos:line="97" pos:column="12"/></name> <argument_list pos:line="97" pos:column="13">(<argument><expr><name pos:line="97" pos:column="14">SIGTSTP<pos:position pos:line="97" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="97" pos:column="23">&amp;<pos:position pos:line="97" pos:column="28"/></operator><name pos:line="97" pos:column="24">oldtstp<pos:position pos:line="97" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="33">NULL<pos:position pos:line="97" pos:column="37"/></name></expr></argument>)<pos:position pos:line="97" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="39"/></expr_stmt>

  <comment type="block" pos:line="99" pos:column="3">/* reset SIGINT, SIGQUIT and SIGCHLD */</comment>
  <expr_stmt><expr><call><name pos:line="100" pos:column="3">mutt_unblock_signals_system<pos:position pos:line="100" pos:column="30"/></name> <argument_list pos:line="100" pos:column="31">(<argument><expr><literal type="number" pos:line="100" pos:column="32">1<pos:position pos:line="100" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="35"/></expr_stmt>
  <if pos:line="101" pos:column="3">if <condition pos:line="101" pos:column="6">(<expr><name pos:line="101" pos:column="7">flags<pos:position pos:line="101" pos:column="12"/></name> <operator pos:line="101" pos:column="13">&amp;<pos:position pos:line="101" pos:column="18"/></operator> <name pos:line="101" pos:column="15">MUTT_DETACH_PROCESS<pos:position pos:line="101" pos:column="34"/></name></expr>)<pos:position pos:line="101" pos:column="35"/></condition><then pos:line="101" pos:column="35">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="102" pos:column="5">sigprocmask<pos:position pos:line="102" pos:column="16"/></name> <argument_list pos:line="102" pos:column="17">(<argument><expr><name pos:line="102" pos:column="18">SIG_UNBLOCK<pos:position pos:line="102" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="102" pos:column="31">&amp;<pos:position pos:line="102" pos:column="36"/></operator><name pos:line="102" pos:column="32">set<pos:position pos:line="102" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="37">NULL<pos:position pos:line="102" pos:column="41"/></name></expr></argument>)<pos:position pos:line="102" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="43"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="104" pos:column="3">rc<pos:position pos:line="104" pos:column="5"/></name> <operator pos:line="104" pos:column="6">=<pos:position pos:line="104" pos:column="7"/></operator> <ternary><condition><expr><operator pos:line="104" pos:column="8">(<pos:position pos:line="104" pos:column="9"/></operator><name pos:line="104" pos:column="9">thepid<pos:position pos:line="104" pos:column="15"/></name> <operator pos:line="104" pos:column="16">!=<pos:position pos:line="104" pos:column="18"/></operator> <operator pos:line="104" pos:column="19">-<pos:position pos:line="104" pos:column="20"/></operator><literal type="number" pos:line="104" pos:column="20">1<pos:position pos:line="104" pos:column="21"/></literal><operator pos:line="104" pos:column="21">)<pos:position pos:line="104" pos:column="22"/></operator></expr> ?<pos:position pos:line="104" pos:column="24"/></condition><then pos:line="104" pos:column="24"> <expr><operator pos:line="104" pos:column="25">(<pos:position pos:line="104" pos:column="26"/></operator><ternary><condition><expr><call><name pos:line="104" pos:column="26">WIFEXITED<pos:position pos:line="104" pos:column="35"/></name> <argument_list pos:line="104" pos:column="36">(<argument><expr><name pos:line="104" pos:column="37">rc<pos:position pos:line="104" pos:column="39"/></name></expr></argument>)<pos:position pos:line="104" pos:column="40"/></argument_list></call></expr> ?<pos:position pos:line="104" pos:column="42"/></condition><then pos:line="104" pos:column="42"> <expr><call><name pos:line="104" pos:column="43">WEXITSTATUS<pos:position pos:line="104" pos:column="54"/></name> <argument_list pos:line="104" pos:column="55">(<argument><expr><name pos:line="104" pos:column="56">rc<pos:position pos:line="104" pos:column="58"/></name></expr></argument>)<pos:position pos:line="104" pos:column="59"/></argument_list></call></expr> <pos:position pos:line="104" pos:column="60"/></then><else pos:line="104" pos:column="60">: <expr><operator pos:line="104" pos:column="62">-<pos:position pos:line="104" pos:column="63"/></operator><literal type="number" pos:line="104" pos:column="63">1<pos:position pos:line="104" pos:column="64"/></literal></expr></else></ternary><operator pos:line="104" pos:column="64">)<pos:position pos:line="104" pos:column="65"/></operator></expr> <pos:position pos:line="104" pos:column="66"/></then><else pos:line="104" pos:column="66">: <expr><operator pos:line="104" pos:column="68">-<pos:position pos:line="104" pos:column="69"/></operator><literal type="number" pos:line="104" pos:column="69">1<pos:position pos:line="104" pos:column="70"/></literal></expr></else></ternary></expr>;<pos:position pos:line="104" pos:column="71"/></expr_stmt>

  <return pos:line="106" pos:column="3">return <expr><operator pos:line="106" pos:column="10">(<pos:position pos:line="106" pos:column="11"/></operator><name pos:line="106" pos:column="11">rc<pos:position pos:line="106" pos:column="13"/></name><operator pos:line="106" pos:column="13">)<pos:position pos:line="106" pos:column="14"/></operator></expr>;<pos:position pos:line="106" pos:column="15"/></return>
}<pos:position pos:line="107" pos:column="2"/></block></function></unit>

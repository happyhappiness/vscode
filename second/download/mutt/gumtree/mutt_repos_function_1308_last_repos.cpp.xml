<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1308_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">send_msg<pos:position pos:line="2" pos:column="9"/></name> <parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><specifier pos:line="2" pos:column="11">const<pos:position pos:line="2" pos:column="16"/></specifier> <name pos:line="2" pos:column="17">char<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">path<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier><modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">args<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name pos:line="2" pos:column="48">char<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">msg<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">char<pos:position pos:line="2" pos:column="63"/></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier><modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">tempfile<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">sigset_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">set<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">fd<pos:position pos:line="5" pos:column="9"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="11">st<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">pid_t<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">pid<pos:position pos:line="6" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="14">ppid<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">mutt_block_signals_system<pos:position pos:line="8" pos:column="28"/></name> <argument_list pos:line="8" pos:column="29">()<pos:position pos:line="8" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">sigemptyset<pos:position pos:line="10" pos:column="14"/></name> <argument_list pos:line="10" pos:column="15">(<argument><expr><operator pos:line="10" pos:column="16">&amp;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="17">set<pos:position pos:line="10" pos:column="20"/></name></expr></argument>)<pos:position pos:line="10" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="22"/></expr_stmt>
  <comment type="block" pos:line="11" pos:column="3">/* we also don't want to be stopped right now */</comment>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">sigaddset<pos:position pos:line="12" pos:column="12"/></name> <argument_list pos:line="12" pos:column="13">(<argument><expr><operator pos:line="12" pos:column="14">&amp;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="15">set<pos:position pos:line="12" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="20">SIGTSTP<pos:position pos:line="12" pos:column="27"/></name></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">sigprocmask<pos:position pos:line="13" pos:column="14"/></name> <argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">SIG_BLOCK<pos:position pos:line="13" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="27">&amp;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="28">set<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="33">NULL<pos:position pos:line="13" pos:column="37"/></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">SendmailWait<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">&gt;=<pos:position pos:line="15" pos:column="25"/></operator> <literal type="number" pos:line="15" pos:column="23">0<pos:position pos:line="15" pos:column="24"/></literal> <operator pos:line="15" pos:column="25">&amp;&amp;<pos:position pos:line="15" pos:column="35"/></operator> <name pos:line="15" pos:column="28">tempfile<pos:position pos:line="15" pos:column="36"/></name></expr>)<pos:position pos:line="15" pos:column="37"/></condition><then pos:line="15" pos:column="37">
  <block pos:line="16" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">char<pos:position pos:line="17" pos:column="9"/></name></type> <name><name pos:line="17" pos:column="10">tmp<pos:position pos:line="17" pos:column="13"/></name><index pos:line="17" pos:column="13">[<expr><name pos:line="17" pos:column="14">_POSIX_PATH_MAX<pos:position pos:line="17" pos:column="29"/></name></expr>]<pos:position pos:line="17" pos:column="30"/></index></name></decl>;<pos:position pos:line="17" pos:column="31"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">mutt_mktemp<pos:position pos:line="19" pos:column="16"/></name> <argument_list pos:line="19" pos:column="17">(<argument><expr><name pos:line="19" pos:column="18">tmp<pos:position pos:line="19" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="23">sizeof <argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">tmp<pos:position pos:line="19" pos:column="34"/></name></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="20" pos:column="5">*<pos:position pos:line="20" pos:column="6"/></operator><name pos:line="20" pos:column="6">tempfile<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <call><name pos:line="20" pos:column="17">safe_strdup<pos:position pos:line="20" pos:column="28"/></name> <argument_list pos:line="20" pos:column="29">(<argument><expr><name pos:line="20" pos:column="30">tmp<pos:position pos:line="20" pos:column="33"/></name></expr></argument>)<pos:position pos:line="20" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><operator pos:line="23" pos:column="7">(<pos:position pos:line="23" pos:column="8"/></operator><name pos:line="23" pos:column="8">pid<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <call><name pos:line="23" pos:column="14">fork<pos:position pos:line="23" pos:column="18"/></name> <argument_list pos:line="23" pos:column="19">()<pos:position pos:line="23" pos:column="21"/></argument_list></call><operator pos:line="23" pos:column="21">)<pos:position pos:line="23" pos:column="22"/></operator> <operator pos:line="23" pos:column="23">==<pos:position pos:line="23" pos:column="25"/></operator> <literal type="number" pos:line="23" pos:column="26">0<pos:position pos:line="23" pos:column="27"/></literal></expr>)<pos:position pos:line="23" pos:column="28"/></condition><then pos:line="23" pos:column="28">
  <block pos:line="24" pos:column="3">{
    <decl_stmt><decl><type><name><name pos:line="25" pos:column="5">struct<pos:position pos:line="25" pos:column="11"/></name> <name pos:line="25" pos:column="12">sigaction<pos:position pos:line="25" pos:column="21"/></name></name></type> <name pos:line="25" pos:column="22">act<pos:position pos:line="25" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="25" pos:column="27">oldalrm<pos:position pos:line="25" pos:column="34"/></name></decl>;<pos:position pos:line="25" pos:column="35"/></decl_stmt>

    <comment type="block" pos:line="27" pos:column="5">/* save parent's ID before setsid() */</comment>
    <expr_stmt><expr><name pos:line="28" pos:column="5">ppid<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <call><name pos:line="28" pos:column="12">getppid<pos:position pos:line="28" pos:column="19"/></name> <argument_list pos:line="28" pos:column="20">()<pos:position pos:line="28" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="23"/></expr_stmt>

    <comment type="block" pos:line="30" pos:column="5">/* we want the delivery to continue even after the main process dies,
     * so we put ourselves into another session right away
     */</comment>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">setsid<pos:position pos:line="33" pos:column="11"/></name> <argument_list pos:line="33" pos:column="12">()<pos:position pos:line="33" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="15"/></expr_stmt>

    <comment type="block" pos:line="35" pos:column="5">/* next we close all open files */</comment>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">close<pos:position pos:line="36" pos:column="10"/></name> <argument_list pos:line="36" pos:column="11">(<argument><expr><literal type="number" pos:line="36" pos:column="12">0<pos:position pos:line="36" pos:column="13"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="15"/></expr_stmt>
<cpp:if pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">if<pos:position pos:line="37" pos:column="4"/></cpp:directive> <expr><call><name pos:line="37" pos:column="5">defined<pos:position pos:line="37" pos:column="12"/></name><argument_list pos:line="37" pos:column="12">(<argument><expr><name pos:line="37" pos:column="13">OPEN_MAX<pos:position pos:line="37" pos:column="21"/></name></expr></argument>)<pos:position pos:line="37" pos:column="22"/></argument_list></call></expr></cpp:if>
    <for pos:line="38" pos:column="5">for <control pos:line="38" pos:column="9">(<init><expr><name pos:line="38" pos:column="10">fd<pos:position pos:line="38" pos:column="12"/></name> <operator pos:line="38" pos:column="13">=<pos:position pos:line="38" pos:column="14"/></operator> <ternary><condition><expr><name pos:line="38" pos:column="15">tempfile<pos:position pos:line="38" pos:column="23"/></name></expr> ?<pos:position pos:line="38" pos:column="25"/></condition><then pos:line="38" pos:column="25"> <expr><literal type="number" pos:line="38" pos:column="26">1<pos:position pos:line="38" pos:column="27"/></literal></expr> <pos:position pos:line="38" pos:column="28"/></then><else pos:line="38" pos:column="28">: <expr><literal type="number" pos:line="38" pos:column="30">3<pos:position pos:line="38" pos:column="31"/></literal></expr></else></ternary></expr>;<pos:position pos:line="38" pos:column="32"/></init> <condition><expr><name pos:line="38" pos:column="33">fd<pos:position pos:line="38" pos:column="35"/></name> <operator pos:line="38" pos:column="36">&lt;<pos:position pos:line="38" pos:column="40"/></operator> <name pos:line="38" pos:column="38">OPEN_MAX<pos:position pos:line="38" pos:column="46"/></name></expr>;<pos:position pos:line="38" pos:column="47"/></condition> <incr><expr><name pos:line="38" pos:column="48">fd<pos:position pos:line="38" pos:column="50"/></name><operator pos:line="38" pos:column="50">++<pos:position pos:line="38" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="38" pos:column="53"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="7">close<pos:position pos:line="39" pos:column="12"/></name> <argument_list pos:line="39" pos:column="13">(<argument><expr><name pos:line="39" pos:column="14">fd<pos:position pos:line="39" pos:column="16"/></name></expr></argument>)<pos:position pos:line="39" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="18"/></expr_stmt></block></for>
<cpp:elif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">elif<pos:position pos:line="40" pos:column="6"/></cpp:directive> <expr><call><name pos:line="40" pos:column="7">defined<pos:position pos:line="40" pos:column="14"/></name><argument_list pos:line="40" pos:column="14">(<argument><expr><name pos:line="40" pos:column="15">_POSIX_OPEN_MAX<pos:position pos:line="40" pos:column="30"/></name></expr></argument>)<pos:position pos:line="40" pos:column="31"/></argument_list></call></expr></cpp:elif>
    <for pos:line="41" pos:column="5">for <control pos:line="41" pos:column="9">(<init><expr><name pos:line="41" pos:column="10">fd<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">=<pos:position pos:line="41" pos:column="14"/></operator> <ternary><condition><expr><name pos:line="41" pos:column="15">tempfile<pos:position pos:line="41" pos:column="23"/></name></expr> ?<pos:position pos:line="41" pos:column="25"/></condition><then pos:line="41" pos:column="25"> <expr><literal type="number" pos:line="41" pos:column="26">1<pos:position pos:line="41" pos:column="27"/></literal></expr> <pos:position pos:line="41" pos:column="28"/></then><else pos:line="41" pos:column="28">: <expr><literal type="number" pos:line="41" pos:column="30">3<pos:position pos:line="41" pos:column="31"/></literal></expr></else></ternary></expr>;<pos:position pos:line="41" pos:column="32"/></init> <condition><expr><name pos:line="41" pos:column="33">fd<pos:position pos:line="41" pos:column="35"/></name> <operator pos:line="41" pos:column="36">&lt;<pos:position pos:line="41" pos:column="40"/></operator> <name pos:line="41" pos:column="38">_POSIX_OPEN_MAX<pos:position pos:line="41" pos:column="53"/></name></expr>;<pos:position pos:line="41" pos:column="54"/></condition> <incr><expr><name pos:line="41" pos:column="55">fd<pos:position pos:line="41" pos:column="57"/></name><operator pos:line="41" pos:column="57">++<pos:position pos:line="41" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="41" pos:column="60"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="7">close<pos:position pos:line="42" pos:column="12"/></name> <argument_list pos:line="42" pos:column="13">(<argument><expr><name pos:line="42" pos:column="14">fd<pos:position pos:line="42" pos:column="16"/></name></expr></argument>)<pos:position pos:line="42" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="18"/></expr_stmt></block></for>
<cpp:else pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">else<pos:position pos:line="43" pos:column="6"/></cpp:directive></cpp:else>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">tempfile<pos:position pos:line="44" pos:column="17"/></name></expr>)<pos:position pos:line="44" pos:column="18"/></condition><then pos:line="44" pos:column="18">
    <block pos:line="45" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">close<pos:position pos:line="46" pos:column="12"/></name> <argument_list pos:line="46" pos:column="13">(<argument><expr><literal type="number" pos:line="46" pos:column="14">1<pos:position pos:line="46" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="47" pos:column="7">close<pos:position pos:line="47" pos:column="12"/></name> <argument_list pos:line="47" pos:column="13">(<argument><expr><literal type="number" pos:line="47" pos:column="14">2<pos:position pos:line="47" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>
<cpp:endif pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">endif<pos:position pos:line="49" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="51" pos:column="5">/* now the second fork() */</comment>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><operator pos:line="52" pos:column="9">(<pos:position pos:line="52" pos:column="10"/></operator><name pos:line="52" pos:column="10">pid<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">=<pos:position pos:line="52" pos:column="15"/></operator> <call><name pos:line="52" pos:column="16">fork<pos:position pos:line="52" pos:column="20"/></name> <argument_list pos:line="52" pos:column="21">()<pos:position pos:line="52" pos:column="23"/></argument_list></call><operator pos:line="52" pos:column="23">)<pos:position pos:line="52" pos:column="24"/></operator> <operator pos:line="52" pos:column="25">==<pos:position pos:line="52" pos:column="27"/></operator> <literal type="number" pos:line="52" pos:column="28">0<pos:position pos:line="52" pos:column="29"/></literal></expr>)<pos:position pos:line="52" pos:column="30"/></condition><then pos:line="52" pos:column="30">
    <block pos:line="53" pos:column="5">{
      <comment type="block" pos:line="54" pos:column="7">/* "msg" will be opened as stdin */</comment>
      <if pos:line="55" pos:column="7">if <condition pos:line="55" pos:column="10">(<expr><call><name pos:line="55" pos:column="11">open<pos:position pos:line="55" pos:column="15"/></name> <argument_list pos:line="55" pos:column="16">(<argument><expr><name pos:line="55" pos:column="17">msg<pos:position pos:line="55" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="22">O_RDONLY<pos:position pos:line="55" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="32">0<pos:position pos:line="55" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="34"/></argument_list></call> <operator pos:line="55" pos:column="35">&lt;<pos:position pos:line="55" pos:column="39"/></operator> <literal type="number" pos:line="55" pos:column="37">0<pos:position pos:line="55" pos:column="38"/></literal></expr>)<pos:position pos:line="55" pos:column="39"/></condition><then pos:line="55" pos:column="39">
      <block pos:line="56" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="57" pos:column="9">unlink<pos:position pos:line="57" pos:column="15"/></name> <argument_list pos:line="57" pos:column="16">(<argument><expr><name pos:line="57" pos:column="17">msg<pos:position pos:line="57" pos:column="20"/></name></expr></argument>)<pos:position pos:line="57" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="58" pos:column="9">_exit<pos:position pos:line="58" pos:column="14"/></name> <argument_list pos:line="58" pos:column="15">(<argument><expr><name pos:line="58" pos:column="16">S_ERR<pos:position pos:line="58" pos:column="21"/></name></expr></argument>)<pos:position pos:line="58" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="23"/></expr_stmt>
      }<pos:position pos:line="59" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="60" pos:column="7">unlink<pos:position pos:line="60" pos:column="13"/></name> <argument_list pos:line="60" pos:column="14">(<argument><expr><name pos:line="60" pos:column="15">msg<pos:position pos:line="60" pos:column="18"/></name></expr></argument>)<pos:position pos:line="60" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="20"/></expr_stmt>

      <if pos:line="62" pos:column="7">if <condition pos:line="62" pos:column="10">(<expr><name pos:line="62" pos:column="11">SendmailWait<pos:position pos:line="62" pos:column="23"/></name> <operator pos:line="62" pos:column="24">&gt;=<pos:position pos:line="62" pos:column="29"/></operator> <literal type="number" pos:line="62" pos:column="27">0<pos:position pos:line="62" pos:column="28"/></literal> <operator pos:line="62" pos:column="29">&amp;&amp;<pos:position pos:line="62" pos:column="39"/></operator> <name pos:line="62" pos:column="32">tempfile<pos:position pos:line="62" pos:column="40"/></name> <operator pos:line="62" pos:column="41">&amp;&amp;<pos:position pos:line="62" pos:column="51"/></operator> <operator pos:line="62" pos:column="44">*<pos:position pos:line="62" pos:column="45"/></operator><name pos:line="62" pos:column="45">tempfile<pos:position pos:line="62" pos:column="53"/></name></expr>)<pos:position pos:line="62" pos:column="54"/></condition><then pos:line="62" pos:column="54">
      <block pos:line="63" pos:column="7">{
	<comment type="block" pos:line="64" pos:column="9">/* *tempfile will be opened as stdout */</comment>
	<if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><call><name pos:line="65" pos:column="13">open<pos:position pos:line="65" pos:column="17"/></name> <argument_list pos:line="65" pos:column="18">(<argument><expr><operator pos:line="65" pos:column="19">*<pos:position pos:line="65" pos:column="20"/></operator><name pos:line="65" pos:column="20">tempfile<pos:position pos:line="65" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="30">O_WRONLY<pos:position pos:line="65" pos:column="38"/></name> <operator pos:line="65" pos:column="39">|<pos:position pos:line="65" pos:column="40"/></operator> <name pos:line="65" pos:column="41">O_APPEND<pos:position pos:line="65" pos:column="49"/></name> <operator pos:line="65" pos:column="50">|<pos:position pos:line="65" pos:column="51"/></operator> <name pos:line="65" pos:column="52">O_CREAT<pos:position pos:line="65" pos:column="59"/></name> <operator pos:line="65" pos:column="60">|<pos:position pos:line="65" pos:column="61"/></operator> <name pos:line="65" pos:column="62">O_EXCL<pos:position pos:line="65" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="70">0600<pos:position pos:line="65" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="75"/></argument_list></call> <operator pos:line="65" pos:column="76">&lt;<pos:position pos:line="65" pos:column="80"/></operator> <literal type="number" pos:line="65" pos:column="78">0<pos:position pos:line="65" pos:column="79"/></literal></expr>)<pos:position pos:line="65" pos:column="80"/></condition><then pos:line="65" pos:column="80">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="11">_exit<pos:position pos:line="66" pos:column="16"/></name> <argument_list pos:line="66" pos:column="17">(<argument><expr><name pos:line="66" pos:column="18">S_ERR<pos:position pos:line="66" pos:column="23"/></name></expr></argument>)<pos:position pos:line="66" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="25"/></expr_stmt></block></then></if>
	<comment type="block" pos:line="67" pos:column="9">/* redirect stderr to *tempfile too */</comment>
	<if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><call><name pos:line="68" pos:column="13">dup<pos:position pos:line="68" pos:column="16"/></name> <argument_list pos:line="68" pos:column="17">(<argument><expr><literal type="number" pos:line="68" pos:column="18">1<pos:position pos:line="68" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="20"/></argument_list></call> <operator pos:line="68" pos:column="21">&lt;<pos:position pos:line="68" pos:column="25"/></operator> <literal type="number" pos:line="68" pos:column="23">0<pos:position pos:line="68" pos:column="24"/></literal></expr>)<pos:position pos:line="68" pos:column="25"/></condition><then pos:line="68" pos:column="25">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="11">_exit<pos:position pos:line="69" pos:column="16"/></name> <argument_list pos:line="69" pos:column="17">(<argument><expr><name pos:line="69" pos:column="18">S_ERR<pos:position pos:line="69" pos:column="23"/></name></expr></argument>)<pos:position pos:line="69" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="25"/></expr_stmt></block></then></if>
      }<pos:position pos:line="70" pos:column="8"/></block></then>
      <elseif pos:line="71" pos:column="7">else <if pos:line="71" pos:column="12">if <condition pos:line="71" pos:column="15">(<expr><name pos:line="71" pos:column="16">tempfile<pos:position pos:line="71" pos:column="24"/></name></expr>)<pos:position pos:line="71" pos:column="25"/></condition><then pos:line="71" pos:column="25">
      <block pos:line="72" pos:column="7">{
	<if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><call><name pos:line="73" pos:column="13">open<pos:position pos:line="73" pos:column="17"/></name> <argument_list pos:line="73" pos:column="18">(<argument><expr><literal type="string" pos:line="73" pos:column="19">"/dev/null"<pos:position pos:line="73" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="32">O_WRONLY<pos:position pos:line="73" pos:column="40"/></name> <operator pos:line="73" pos:column="41">|<pos:position pos:line="73" pos:column="42"/></operator> <name pos:line="73" pos:column="43">O_APPEND<pos:position pos:line="73" pos:column="51"/></name></expr></argument>)<pos:position pos:line="73" pos:column="52"/></argument_list></call> <operator pos:line="73" pos:column="53">&lt;<pos:position pos:line="73" pos:column="57"/></operator> <literal type="number" pos:line="73" pos:column="55">0<pos:position pos:line="73" pos:column="56"/></literal></expr>)<pos:position pos:line="73" pos:column="57"/></condition><then pos:line="73" pos:column="57">	<comment type="block" pos:line="73" pos:column="65">/* stdout */</comment>
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="11">_exit<pos:position pos:line="74" pos:column="16"/></name> <argument_list pos:line="74" pos:column="17">(<argument><expr><name pos:line="74" pos:column="18">S_ERR<pos:position pos:line="74" pos:column="23"/></name></expr></argument>)<pos:position pos:line="74" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="25"/></expr_stmt></block></then></if>
	<if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><call><name pos:line="75" pos:column="13">open<pos:position pos:line="75" pos:column="17"/></name> <argument_list pos:line="75" pos:column="18">(<argument><expr><literal type="string" pos:line="75" pos:column="19">"/dev/null"<pos:position pos:line="75" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="32">O_RDWR<pos:position pos:line="75" pos:column="38"/></name> <operator pos:line="75" pos:column="39">|<pos:position pos:line="75" pos:column="40"/></operator> <name pos:line="75" pos:column="41">O_APPEND<pos:position pos:line="75" pos:column="49"/></name></expr></argument>)<pos:position pos:line="75" pos:column="50"/></argument_list></call> <operator pos:line="75" pos:column="51">&lt;<pos:position pos:line="75" pos:column="55"/></operator> <literal type="number" pos:line="75" pos:column="53">0<pos:position pos:line="75" pos:column="54"/></literal></expr>)<pos:position pos:line="75" pos:column="55"/></condition><then pos:line="75" pos:column="55">		<comment type="block" pos:line="75" pos:column="65">/* stderr */</comment>
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="11">_exit<pos:position pos:line="76" pos:column="16"/></name> <argument_list pos:line="76" pos:column="17">(<argument><expr><name pos:line="76" pos:column="18">S_ERR<pos:position pos:line="76" pos:column="23"/></name></expr></argument>)<pos:position pos:line="76" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="25"/></expr_stmt></block></then></if>
      }<pos:position pos:line="77" pos:column="8"/></block></then></if></elseif></if>

      <comment type="block" pos:line="79" pos:column="7">/* execvpe is a glibc extension */</comment>
      <comment type="block" pos:line="80" pos:column="7">/* execvpe (path, args, mutt_envlist ()); */</comment>
      <expr_stmt><expr><call><name pos:line="81" pos:column="7">execvp<pos:position pos:line="81" pos:column="13"/></name> <argument_list pos:line="81" pos:column="14">(<argument><expr><name pos:line="81" pos:column="15">path<pos:position pos:line="81" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="21">args<pos:position pos:line="81" pos:column="25"/></name></expr></argument>)<pos:position pos:line="81" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="82" pos:column="7">_exit<pos:position pos:line="82" pos:column="12"/></name> <argument_list pos:line="82" pos:column="13">(<argument><expr><name pos:line="82" pos:column="14">S_ERR<pos:position pos:line="82" pos:column="19"/></name></expr></argument>)<pos:position pos:line="82" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></then>
    <elseif pos:line="84" pos:column="5">else <if pos:line="84" pos:column="10">if <condition pos:line="84" pos:column="13">(<expr><name pos:line="84" pos:column="14">pid<pos:position pos:line="84" pos:column="17"/></name> <operator pos:line="84" pos:column="18">==<pos:position pos:line="84" pos:column="20"/></operator> <operator pos:line="84" pos:column="21">-<pos:position pos:line="84" pos:column="22"/></operator><literal type="number" pos:line="84" pos:column="22">1<pos:position pos:line="84" pos:column="23"/></literal></expr>)<pos:position pos:line="84" pos:column="24"/></condition><then pos:line="84" pos:column="24">
    <block pos:line="85" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="86" pos:column="7">unlink<pos:position pos:line="86" pos:column="13"/></name> <argument_list pos:line="86" pos:column="14">(<argument><expr><name pos:line="86" pos:column="15">msg<pos:position pos:line="86" pos:column="18"/></name></expr></argument>)<pos:position pos:line="86" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="20"/></expr_stmt>
      <if pos:line="87" pos:column="7">if <condition pos:line="87" pos:column="10">(<expr><name pos:line="87" pos:column="11">tempfile<pos:position pos:line="87" pos:column="19"/></name></expr>)<pos:position pos:line="87" pos:column="20"/></condition><then pos:line="87" pos:column="20">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="88" pos:column="9">FREE<pos:position pos:line="88" pos:column="13"/></name> <argument_list pos:line="88" pos:column="14">(<argument><expr><name pos:line="88" pos:column="15">tempfile<pos:position pos:line="88" pos:column="23"/></name></expr></argument>)<pos:position pos:line="88" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="25"/></expr_stmt></block></then></if>		<comment type="block" pos:line="88" pos:column="41">/* __FREE_CHECKED__ */</comment>
      <expr_stmt><expr><call><name pos:line="89" pos:column="7">_exit<pos:position pos:line="89" pos:column="12"/></name> <argument_list pos:line="89" pos:column="13">(<argument><expr><name pos:line="89" pos:column="14">S_ERR<pos:position pos:line="89" pos:column="19"/></name></expr></argument>)<pos:position pos:line="89" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="92" pos:column="5">/* SendmailWait &gt; 0: interrupt waitpid() after SendmailWait seconds
     * SendmailWait = 0: wait forever
     * SendmailWait &lt; 0: don't wait
     */</comment>
    <if pos:line="96" pos:column="5">if <condition pos:line="96" pos:column="8">(<expr><name pos:line="96" pos:column="9">SendmailWait<pos:position pos:line="96" pos:column="21"/></name> <operator pos:line="96" pos:column="22">&gt;<pos:position pos:line="96" pos:column="26"/></operator> <literal type="number" pos:line="96" pos:column="24">0<pos:position pos:line="96" pos:column="25"/></literal></expr>)<pos:position pos:line="96" pos:column="26"/></condition><then pos:line="96" pos:column="26">
    <block pos:line="97" pos:column="5">{
      <expr_stmt><expr><name pos:line="98" pos:column="7">SigAlrm<pos:position pos:line="98" pos:column="14"/></name> <operator pos:line="98" pos:column="15">=<pos:position pos:line="98" pos:column="16"/></operator> <literal type="number" pos:line="98" pos:column="17">0<pos:position pos:line="98" pos:column="18"/></literal></expr>;<pos:position pos:line="98" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="99" pos:column="7">act<pos:position pos:line="99" pos:column="10"/></name><operator pos:line="99" pos:column="10">.<pos:position pos:line="99" pos:column="11"/></operator><name pos:line="99" pos:column="11">sa_handler<pos:position pos:line="99" pos:column="21"/></name></name> <operator pos:line="99" pos:column="22">=<pos:position pos:line="99" pos:column="23"/></operator> <name pos:line="99" pos:column="24">alarm_handler<pos:position pos:line="99" pos:column="37"/></name></expr>;<pos:position pos:line="99" pos:column="38"/></expr_stmt>
<cpp:ifdef pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">ifdef<pos:position pos:line="100" pos:column="7"/></cpp:directive> <name pos:line="100" pos:column="8">SA_INTERRUPT<pos:position pos:line="100" pos:column="20"/></name></cpp:ifdef>
      <comment type="block" pos:line="101" pos:column="7">/* need to make sure waitpid() is interrupted on SIGALRM */</comment>
      <expr_stmt><expr><name><name pos:line="102" pos:column="7">act<pos:position pos:line="102" pos:column="10"/></name><operator pos:line="102" pos:column="10">.<pos:position pos:line="102" pos:column="11"/></operator><name pos:line="102" pos:column="11">sa_flags<pos:position pos:line="102" pos:column="19"/></name></name> <operator pos:line="102" pos:column="20">=<pos:position pos:line="102" pos:column="21"/></operator> <name pos:line="102" pos:column="22">SA_INTERRUPT<pos:position pos:line="102" pos:column="34"/></name></expr>;<pos:position pos:line="102" pos:column="35"/></expr_stmt>
<cpp:else pos:line="103" pos:column="1">#<cpp:directive pos:line="103" pos:column="2">else<pos:position pos:line="103" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><name><name pos:line="104" pos:column="7">act<pos:position pos:line="104" pos:column="10"/></name><operator pos:line="104" pos:column="10">.<pos:position pos:line="104" pos:column="11"/></operator><name pos:line="104" pos:column="11">sa_flags<pos:position pos:line="104" pos:column="19"/></name></name> <operator pos:line="104" pos:column="20">=<pos:position pos:line="104" pos:column="21"/></operator> <literal type="number" pos:line="104" pos:column="22">0<pos:position pos:line="104" pos:column="23"/></literal></expr>;<pos:position pos:line="104" pos:column="24"/></expr_stmt>
<cpp:endif pos:line="105" pos:column="1">#<cpp:directive pos:line="105" pos:column="2">endif<pos:position pos:line="105" pos:column="7"/></cpp:directive></cpp:endif>
      <expr_stmt><expr><call><name pos:line="106" pos:column="7">sigemptyset<pos:position pos:line="106" pos:column="18"/></name> <argument_list pos:line="106" pos:column="19">(<argument><expr><operator pos:line="106" pos:column="20">&amp;<pos:position pos:line="106" pos:column="25"/></operator><name><name pos:line="106" pos:column="21">act<pos:position pos:line="106" pos:column="24"/></name><operator pos:line="106" pos:column="24">.<pos:position pos:line="106" pos:column="25"/></operator><name pos:line="106" pos:column="25">sa_mask<pos:position pos:line="106" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="107" pos:column="7">sigaction<pos:position pos:line="107" pos:column="16"/></name> <argument_list pos:line="107" pos:column="17">(<argument><expr><name pos:line="107" pos:column="18">SIGALRM<pos:position pos:line="107" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="107" pos:column="27">&amp;<pos:position pos:line="107" pos:column="32"/></operator><name pos:line="107" pos:column="28">act<pos:position pos:line="107" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="107" pos:column="33">&amp;<pos:position pos:line="107" pos:column="38"/></operator><name pos:line="107" pos:column="34">oldalrm<pos:position pos:line="107" pos:column="41"/></name></expr></argument>)<pos:position pos:line="107" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="108" pos:column="7">alarm<pos:position pos:line="108" pos:column="12"/></name> <argument_list pos:line="108" pos:column="13">(<argument><expr><name pos:line="108" pos:column="14">SendmailWait<pos:position pos:line="108" pos:column="26"/></name></expr></argument>)<pos:position pos:line="108" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="109" pos:column="6"/></block></then>
    <elseif pos:line="110" pos:column="5">else <if pos:line="110" pos:column="10">if <condition pos:line="110" pos:column="13">(<expr><name pos:line="110" pos:column="14">SendmailWait<pos:position pos:line="110" pos:column="26"/></name> <operator pos:line="110" pos:column="27">&lt;<pos:position pos:line="110" pos:column="31"/></operator> <literal type="number" pos:line="110" pos:column="29">0<pos:position pos:line="110" pos:column="30"/></literal></expr>)<pos:position pos:line="110" pos:column="31"/></condition><then pos:line="110" pos:column="31">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="111" pos:column="7">_exit<pos:position pos:line="111" pos:column="12"/></name> <argument_list pos:line="111" pos:column="13">(<argument><expr><literal type="number" pos:line="111" pos:column="14">0xff<pos:position pos:line="111" pos:column="18"/></literal> <operator pos:line="111" pos:column="19">&amp;<pos:position pos:line="111" pos:column="24"/></operator> <name pos:line="111" pos:column="21">EX_OK<pos:position pos:line="111" pos:column="26"/></name></expr></argument>)<pos:position pos:line="111" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="28"/></expr_stmt></block></then></if></elseif></if>

    <if pos:line="113" pos:column="5">if <condition pos:line="113" pos:column="8">(<expr><call><name pos:line="113" pos:column="9">waitpid<pos:position pos:line="113" pos:column="16"/></name> <argument_list pos:line="113" pos:column="17">(<argument><expr><name pos:line="113" pos:column="18">pid<pos:position pos:line="113" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="113" pos:column="23">&amp;<pos:position pos:line="113" pos:column="28"/></operator><name pos:line="113" pos:column="24">st<pos:position pos:line="113" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="113" pos:column="28">0<pos:position pos:line="113" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="30"/></argument_list></call> <operator pos:line="113" pos:column="31">&gt;<pos:position pos:line="113" pos:column="35"/></operator> <literal type="number" pos:line="113" pos:column="33">0<pos:position pos:line="113" pos:column="34"/></literal></expr>)<pos:position pos:line="113" pos:column="35"/></condition><then pos:line="113" pos:column="35">
    <block pos:line="114" pos:column="5">{
      <expr_stmt><expr><name pos:line="115" pos:column="7">st<pos:position pos:line="115" pos:column="9"/></name> <operator pos:line="115" pos:column="10">=<pos:position pos:line="115" pos:column="11"/></operator> <ternary><condition><expr><call><name pos:line="115" pos:column="12">WIFEXITED<pos:position pos:line="115" pos:column="21"/></name> <argument_list pos:line="115" pos:column="22">(<argument><expr><name pos:line="115" pos:column="23">st<pos:position pos:line="115" pos:column="25"/></name></expr></argument>)<pos:position pos:line="115" pos:column="26"/></argument_list></call></expr> ?<pos:position pos:line="115" pos:column="28"/></condition><then pos:line="115" pos:column="28"> <expr><call><name pos:line="115" pos:column="29">WEXITSTATUS<pos:position pos:line="115" pos:column="40"/></name> <argument_list pos:line="115" pos:column="41">(<argument><expr><name pos:line="115" pos:column="42">st<pos:position pos:line="115" pos:column="44"/></name></expr></argument>)<pos:position pos:line="115" pos:column="45"/></argument_list></call></expr> <pos:position pos:line="115" pos:column="46"/></then><else pos:line="115" pos:column="46">: <expr><name pos:line="115" pos:column="48">S_ERR<pos:position pos:line="115" pos:column="53"/></name></expr></else></ternary></expr>;<pos:position pos:line="115" pos:column="54"/></expr_stmt>
      <if pos:line="116" pos:column="7">if <condition pos:line="116" pos:column="10">(<expr><name pos:line="116" pos:column="11">SendmailWait<pos:position pos:line="116" pos:column="23"/></name> <operator pos:line="116" pos:column="24">&amp;&amp;<pos:position pos:line="116" pos:column="34"/></operator> <name pos:line="116" pos:column="27">st<pos:position pos:line="116" pos:column="29"/></name> <operator pos:line="116" pos:column="30">==<pos:position pos:line="116" pos:column="32"/></operator> <operator pos:line="116" pos:column="33">(<pos:position pos:line="116" pos:column="34"/></operator><literal type="number" pos:line="116" pos:column="34">0xff<pos:position pos:line="116" pos:column="38"/></literal> <operator pos:line="116" pos:column="39">&amp;<pos:position pos:line="116" pos:column="44"/></operator> <name pos:line="116" pos:column="41">EX_OK<pos:position pos:line="116" pos:column="46"/></name><operator pos:line="116" pos:column="46">)<pos:position pos:line="116" pos:column="47"/></operator> <operator pos:line="116" pos:column="48">&amp;&amp;<pos:position pos:line="116" pos:column="58"/></operator> <name pos:line="116" pos:column="51">tempfile<pos:position pos:line="116" pos:column="59"/></name> <operator pos:line="116" pos:column="60">&amp;&amp;<pos:position pos:line="116" pos:column="70"/></operator> <operator pos:line="116" pos:column="63">*<pos:position pos:line="116" pos:column="64"/></operator><name pos:line="116" pos:column="64">tempfile<pos:position pos:line="116" pos:column="72"/></name></expr>)<pos:position pos:line="116" pos:column="73"/></condition><then pos:line="116" pos:column="73">
      <block pos:line="117" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="118" pos:column="9">unlink<pos:position pos:line="118" pos:column="15"/></name> <argument_list pos:line="118" pos:column="16">(<argument><expr><operator pos:line="118" pos:column="17">*<pos:position pos:line="118" pos:column="18"/></operator><name pos:line="118" pos:column="18">tempfile<pos:position pos:line="118" pos:column="26"/></name></expr></argument>)<pos:position pos:line="118" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="28"/></expr_stmt> <comment type="block" pos:line="118" pos:column="29">/* no longer needed */</comment>
	<expr_stmt><expr><call><name pos:line="119" pos:column="9">FREE<pos:position pos:line="119" pos:column="13"/></name> <argument_list pos:line="119" pos:column="14">(<argument><expr><name pos:line="119" pos:column="15">tempfile<pos:position pos:line="119" pos:column="23"/></name></expr></argument>)<pos:position pos:line="119" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="25"/></expr_stmt>		<comment type="block" pos:line="119" pos:column="41">/* __FREE_CHECKED__ */</comment>
      }<pos:position pos:line="120" pos:column="8"/></block></then></if>
    }<pos:position pos:line="121" pos:column="6"/></block></then>
    <else pos:line="122" pos:column="5">else
    <block pos:line="123" pos:column="5">{
      <expr_stmt><expr><name pos:line="124" pos:column="7">st<pos:position pos:line="124" pos:column="9"/></name> <operator pos:line="124" pos:column="10">=<pos:position pos:line="124" pos:column="11"/></operator> <ternary><condition><expr><operator pos:line="124" pos:column="12">(<pos:position pos:line="124" pos:column="13"/></operator><name pos:line="124" pos:column="13">SendmailWait<pos:position pos:line="124" pos:column="25"/></name> <operator pos:line="124" pos:column="26">&gt;<pos:position pos:line="124" pos:column="30"/></operator> <literal type="number" pos:line="124" pos:column="28">0<pos:position pos:line="124" pos:column="29"/></literal> <operator pos:line="124" pos:column="30">&amp;&amp;<pos:position pos:line="124" pos:column="40"/></operator> <name pos:line="124" pos:column="33">errno<pos:position pos:line="124" pos:column="38"/></name> <operator pos:line="124" pos:column="39">==<pos:position pos:line="124" pos:column="41"/></operator> <name pos:line="124" pos:column="42">EINTR<pos:position pos:line="124" pos:column="47"/></name> <operator pos:line="124" pos:column="48">&amp;&amp;<pos:position pos:line="124" pos:column="58"/></operator> <name pos:line="124" pos:column="51">SigAlrm<pos:position pos:line="124" pos:column="58"/></name><operator pos:line="124" pos:column="58">)<pos:position pos:line="124" pos:column="59"/></operator></expr> ?<pos:position pos:line="124" pos:column="61"/></condition><then pos:line="124" pos:column="61">
	      <expr><name pos:line="125" pos:column="15">S_BKG<pos:position pos:line="125" pos:column="20"/></name></expr> <pos:position pos:line="125" pos:column="21"/></then><else pos:line="125" pos:column="21">: <expr><name pos:line="125" pos:column="23">S_ERR<pos:position pos:line="125" pos:column="28"/></name></expr></else></ternary></expr>;<pos:position pos:line="125" pos:column="29"/></expr_stmt>
      <if pos:line="126" pos:column="7">if <condition pos:line="126" pos:column="10">(<expr><name pos:line="126" pos:column="11">SendmailWait<pos:position pos:line="126" pos:column="23"/></name> <operator pos:line="126" pos:column="24">&gt;<pos:position pos:line="126" pos:column="28"/></operator> <literal type="number" pos:line="126" pos:column="26">0<pos:position pos:line="126" pos:column="27"/></literal> <operator pos:line="126" pos:column="28">&amp;&amp;<pos:position pos:line="126" pos:column="38"/></operator> <name pos:line="126" pos:column="31">tempfile<pos:position pos:line="126" pos:column="39"/></name> <operator pos:line="126" pos:column="40">&amp;&amp;<pos:position pos:line="126" pos:column="50"/></operator> <operator pos:line="126" pos:column="43">*<pos:position pos:line="126" pos:column="44"/></operator><name pos:line="126" pos:column="44">tempfile<pos:position pos:line="126" pos:column="52"/></name></expr>)<pos:position pos:line="126" pos:column="53"/></condition><then pos:line="126" pos:column="53">
      <block pos:line="127" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="128" pos:column="9">unlink<pos:position pos:line="128" pos:column="15"/></name> <argument_list pos:line="128" pos:column="16">(<argument><expr><operator pos:line="128" pos:column="17">*<pos:position pos:line="128" pos:column="18"/></operator><name pos:line="128" pos:column="18">tempfile<pos:position pos:line="128" pos:column="26"/></name></expr></argument>)<pos:position pos:line="128" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="129" pos:column="9">FREE<pos:position pos:line="129" pos:column="13"/></name> <argument_list pos:line="129" pos:column="14">(<argument><expr><name pos:line="129" pos:column="15">tempfile<pos:position pos:line="129" pos:column="23"/></name></expr></argument>)<pos:position pos:line="129" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="25"/></expr_stmt>		<comment type="block" pos:line="129" pos:column="41">/* __FREE_CHECKED__ */</comment>
      }<pos:position pos:line="130" pos:column="8"/></block></then></if>
    }<pos:position pos:line="131" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="133" pos:column="5">/* reset alarm; not really needed, but... */</comment>
    <expr_stmt><expr><call><name pos:line="134" pos:column="5">alarm<pos:position pos:line="134" pos:column="10"/></name> <argument_list pos:line="134" pos:column="11">(<argument><expr><literal type="number" pos:line="134" pos:column="12">0<pos:position pos:line="134" pos:column="13"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="135" pos:column="5">sigaction<pos:position pos:line="135" pos:column="14"/></name> <argument_list pos:line="135" pos:column="15">(<argument><expr><name pos:line="135" pos:column="16">SIGALRM<pos:position pos:line="135" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="135" pos:column="25">&amp;<pos:position pos:line="135" pos:column="30"/></operator><name pos:line="135" pos:column="26">oldalrm<pos:position pos:line="135" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="35">NULL<pos:position pos:line="135" pos:column="39"/></name></expr></argument>)<pos:position pos:line="135" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="41"/></expr_stmt>

    <if pos:line="137" pos:column="5">if <condition pos:line="137" pos:column="8">(<expr><call><name pos:line="137" pos:column="9">kill<pos:position pos:line="137" pos:column="13"/></name> <argument_list pos:line="137" pos:column="14">(<argument><expr><name pos:line="137" pos:column="15">ppid<pos:position pos:line="137" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="137" pos:column="21">0<pos:position pos:line="137" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="23"/></argument_list></call> <operator pos:line="137" pos:column="24">==<pos:position pos:line="137" pos:column="26"/></operator> <operator pos:line="137" pos:column="27">-<pos:position pos:line="137" pos:column="28"/></operator><literal type="number" pos:line="137" pos:column="28">1<pos:position pos:line="137" pos:column="29"/></literal> <operator pos:line="137" pos:column="30">&amp;&amp;<pos:position pos:line="137" pos:column="40"/></operator> <name pos:line="137" pos:column="33">errno<pos:position pos:line="137" pos:column="38"/></name> <operator pos:line="137" pos:column="39">==<pos:position pos:line="137" pos:column="41"/></operator> <name pos:line="137" pos:column="42">ESRCH<pos:position pos:line="137" pos:column="47"/></name> <operator pos:line="137" pos:column="48">&amp;&amp;<pos:position pos:line="137" pos:column="58"/></operator> <name pos:line="137" pos:column="51">tempfile<pos:position pos:line="137" pos:column="59"/></name> <operator pos:line="137" pos:column="60">&amp;&amp;<pos:position pos:line="137" pos:column="70"/></operator> <operator pos:line="137" pos:column="63">*<pos:position pos:line="137" pos:column="64"/></operator><name pos:line="137" pos:column="64">tempfile<pos:position pos:line="137" pos:column="72"/></name></expr>)<pos:position pos:line="137" pos:column="73"/></condition><then pos:line="137" pos:column="73">
    <block pos:line="138" pos:column="5">{
      <comment type="block" pos:line="139" pos:column="7">/* the parent is already dead */</comment>
      <expr_stmt><expr><call><name pos:line="140" pos:column="7">unlink<pos:position pos:line="140" pos:column="13"/></name> <argument_list pos:line="140" pos:column="14">(<argument><expr><operator pos:line="140" pos:column="15">*<pos:position pos:line="140" pos:column="16"/></operator><name pos:line="140" pos:column="16">tempfile<pos:position pos:line="140" pos:column="24"/></name></expr></argument>)<pos:position pos:line="140" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="141" pos:column="7">FREE<pos:position pos:line="141" pos:column="11"/></name> <argument_list pos:line="141" pos:column="12">(<argument><expr><name pos:line="141" pos:column="13">tempfile<pos:position pos:line="141" pos:column="21"/></name></expr></argument>)<pos:position pos:line="141" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="23"/></expr_stmt>		<comment type="block" pos:line="141" pos:column="33">/* __FREE_CHECKED__ */</comment>
    }<pos:position pos:line="142" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="144" pos:column="5">_exit<pos:position pos:line="144" pos:column="10"/></name> <argument_list pos:line="144" pos:column="11">(<argument><expr><name pos:line="144" pos:column="12">st<pos:position pos:line="144" pos:column="14"/></name></expr></argument>)<pos:position pos:line="144" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="145" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="147" pos:column="3">sigprocmask<pos:position pos:line="147" pos:column="14"/></name> <argument_list pos:line="147" pos:column="15">(<argument><expr><name pos:line="147" pos:column="16">SIG_UNBLOCK<pos:position pos:line="147" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="147" pos:column="29">&amp;<pos:position pos:line="147" pos:column="34"/></operator><name pos:line="147" pos:column="30">set<pos:position pos:line="147" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="35">NULL<pos:position pos:line="147" pos:column="39"/></name></expr></argument>)<pos:position pos:line="147" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="41"/></expr_stmt>

  <if pos:line="149" pos:column="3">if <condition pos:line="149" pos:column="6">(<expr><name pos:line="149" pos:column="7">pid<pos:position pos:line="149" pos:column="10"/></name> <operator pos:line="149" pos:column="11">!=<pos:position pos:line="149" pos:column="13"/></operator> <operator pos:line="149" pos:column="14">-<pos:position pos:line="149" pos:column="15"/></operator><literal type="number" pos:line="149" pos:column="15">1<pos:position pos:line="149" pos:column="16"/></literal> <operator pos:line="149" pos:column="17">&amp;&amp;<pos:position pos:line="149" pos:column="27"/></operator> <call><name pos:line="149" pos:column="20">waitpid<pos:position pos:line="149" pos:column="27"/></name> <argument_list pos:line="149" pos:column="28">(<argument><expr><name pos:line="149" pos:column="29">pid<pos:position pos:line="149" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="149" pos:column="34">&amp;<pos:position pos:line="149" pos:column="39"/></operator><name pos:line="149" pos:column="35">st<pos:position pos:line="149" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="149" pos:column="39">0<pos:position pos:line="149" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="149" pos:column="41"/></argument_list></call> <operator pos:line="149" pos:column="42">&gt;<pos:position pos:line="149" pos:column="46"/></operator> <literal type="number" pos:line="149" pos:column="44">0<pos:position pos:line="149" pos:column="45"/></literal></expr>)<pos:position pos:line="149" pos:column="46"/></condition><then pos:line="149" pos:column="46">
    <block type="pseudo"><expr_stmt><expr><name pos:line="150" pos:column="5">st<pos:position pos:line="150" pos:column="7"/></name> <operator pos:line="150" pos:column="8">=<pos:position pos:line="150" pos:column="9"/></operator> <ternary><condition><expr><call><name pos:line="150" pos:column="10">WIFEXITED<pos:position pos:line="150" pos:column="19"/></name> <argument_list pos:line="150" pos:column="20">(<argument><expr><name pos:line="150" pos:column="21">st<pos:position pos:line="150" pos:column="23"/></name></expr></argument>)<pos:position pos:line="150" pos:column="24"/></argument_list></call></expr> ?<pos:position pos:line="150" pos:column="26"/></condition><then pos:line="150" pos:column="26"> <expr><call><name pos:line="150" pos:column="27">WEXITSTATUS<pos:position pos:line="150" pos:column="38"/></name> <argument_list pos:line="150" pos:column="39">(<argument><expr><name pos:line="150" pos:column="40">st<pos:position pos:line="150" pos:column="42"/></name></expr></argument>)<pos:position pos:line="150" pos:column="43"/></argument_list></call></expr> <pos:position pos:line="150" pos:column="44"/></then><else pos:line="150" pos:column="44">: <expr><name pos:line="150" pos:column="46">S_ERR<pos:position pos:line="150" pos:column="51"/></name></expr></else></ternary></expr>;<pos:position pos:line="150" pos:column="52"/></expr_stmt></block></then> <comment type="block" pos:line="150" pos:column="53">/* return child status */</comment>
  <else pos:line="151" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="152" pos:column="5">st<pos:position pos:line="152" pos:column="7"/></name> <operator pos:line="152" pos:column="8">=<pos:position pos:line="152" pos:column="9"/></operator> <name pos:line="152" pos:column="10">S_ERR<pos:position pos:line="152" pos:column="15"/></name></expr>;<pos:position pos:line="152" pos:column="16"/></expr_stmt></block></else></if>	<comment type="block" pos:line="152" pos:column="17">/* error */</comment>

  <expr_stmt><expr><call><name pos:line="154" pos:column="3">mutt_unblock_signals_system<pos:position pos:line="154" pos:column="30"/></name> <argument_list pos:line="154" pos:column="31">(<argument><expr><literal type="number" pos:line="154" pos:column="32">1<pos:position pos:line="154" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="154" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="35"/></expr_stmt>

  <return pos:line="156" pos:column="3">return <expr><operator pos:line="156" pos:column="10">(<pos:position pos:line="156" pos:column="11"/></operator><name pos:line="156" pos:column="11">st<pos:position pos:line="156" pos:column="13"/></name><operator pos:line="156" pos:column="13">)<pos:position pos:line="156" pos:column="14"/></operator></expr>;<pos:position pos:line="156" pos:column="15"/></return>
}<pos:position pos:line="157" pos:column="2"/></block></function></unit>

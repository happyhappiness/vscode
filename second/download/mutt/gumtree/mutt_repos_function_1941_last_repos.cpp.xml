<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1941_last_repos.cpp" pos:tabs="8"><function_decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">expression<pos:position pos:line="1" pos:column="25"/></name></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type>
<name pos:line="2" pos:column="1">new_exp<pos:position pos:line="2" pos:column="8"/></name> <parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name pos:line="2" pos:column="10">nargs<pos:position pos:line="2" pos:column="15"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="17">op<pos:position pos:line="2" pos:column="19"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="21">args<pos:position pos:line="2" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="26"/></parameter_list>
     <decl_stmt><decl><type><name pos:line="3" pos:column="6">int<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">nargs<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
     <decl_stmt><decl><type><name><name pos:line="4" pos:column="6">enum<pos:position pos:line="4" pos:column="10"/></name> <name pos:line="4" pos:column="11">operator <name pos:line="4" pos:column="20">op;
     struct expression * const *args;
{
  int i;
  struct expression *newp;

  <comment type="block" pos:line="10" pos:column="3">/* If any of the argument could not be malloc'ed, just return NULL.  */</comment>
  for<pos:position pos:line="11" pos:column="6"/></name></name></name></type></decl> (i = nargs - 1;<pos:position pos:line="11" pos:column="22"/></decl_stmt></function_decl> <expr_stmt><expr><name pos:line="11" pos:column="23">i<pos:position pos:line="11" pos:column="24"/></name> <operator pos:line="11" pos:column="25">&gt;=<pos:position pos:line="11" pos:column="30"/></operator> <literal type="number" pos:line="11" pos:column="28">0<pos:position pos:line="11" pos:column="29"/></literal></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt> <expr_stmt><expr><name pos:line="11" pos:column="31">i<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">--<pos:position pos:line="11" pos:column="34"/></operator></expr></expr_stmt>)
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">args<pos:position pos:line="12" pos:column="13"/></name><index pos:line="12" pos:column="13">[<expr><name pos:line="12" pos:column="14">i<pos:position pos:line="12" pos:column="15"/></name></expr>]<pos:position pos:line="12" pos:column="16"/></index></name> <operator pos:line="12" pos:column="17">==<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="20">NULL<pos:position pos:line="12" pos:column="24"/></name></expr>)<pos:position pos:line="12" pos:column="25"/></condition><then pos:line="12" pos:column="25">
      <block type="pseudo"><goto pos:line="13" pos:column="7">goto <name pos:line="13" pos:column="12">fail<pos:position pos:line="13" pos:column="16"/></name>;<pos:position pos:line="13" pos:column="17"/></goto></block></then></if>

  <comment type="block" pos:line="15" pos:column="3">/* Allocate a new expression.  */</comment>
  <expr_stmt><expr><name pos:line="16" pos:column="3">newp<pos:position pos:line="16" pos:column="7"/></name> <operator pos:line="16" pos:column="8">=<pos:position pos:line="16" pos:column="9"/></operator> <operator pos:line="16" pos:column="10">(<pos:position pos:line="16" pos:column="11"/></operator>struct <name pos:line="16" pos:column="18">expression<pos:position pos:line="16" pos:column="28"/></name> <operator pos:line="16" pos:column="29">*<pos:position pos:line="16" pos:column="30"/></operator><operator pos:line="16" pos:column="30">)<pos:position pos:line="16" pos:column="31"/></operator> <call><name pos:line="16" pos:column="32">malloc<pos:position pos:line="16" pos:column="38"/></name> <argument_list pos:line="16" pos:column="39">(<argument><expr><sizeof pos:line="16" pos:column="40">sizeof <argument_list pos:line="16" pos:column="47">(<argument><expr><operator pos:line="16" pos:column="48">*<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="49">newp<pos:position pos:line="16" pos:column="53"/></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">newp<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">!=<pos:position pos:line="17" pos:column="14"/></operator> <name pos:line="17" pos:column="15">NULL<pos:position pos:line="17" pos:column="19"/></name></expr>)<pos:position pos:line="17" pos:column="20"/></condition><then pos:line="17" pos:column="20">
    <block pos:line="18" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="19" pos:column="7">newp<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">nargs<pos:position pos:line="19" pos:column="18"/></name></name> <operator pos:line="19" pos:column="19">=<pos:position pos:line="19" pos:column="20"/></operator> <name pos:line="19" pos:column="21">nargs<pos:position pos:line="19" pos:column="26"/></name></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="20" pos:column="7">newp<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">-&gt;<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="13">operation<pos:position pos:line="20" pos:column="22"/></name></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <name pos:line="20" pos:column="25">op<pos:position pos:line="20" pos:column="27"/></name></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt>
      <for pos:line="21" pos:column="7">for <control pos:line="21" pos:column="11">(<init><expr><name pos:line="21" pos:column="12">i<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <name pos:line="21" pos:column="16">nargs<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">-<pos:position pos:line="21" pos:column="23"/></operator> <literal type="number" pos:line="21" pos:column="24">1<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></init> <condition><expr><name pos:line="21" pos:column="27">i<pos:position pos:line="21" pos:column="28"/></name> <operator pos:line="21" pos:column="29">&gt;=<pos:position pos:line="21" pos:column="34"/></operator> <literal type="number" pos:line="21" pos:column="32">0<pos:position pos:line="21" pos:column="33"/></literal></expr>;<pos:position pos:line="21" pos:column="34"/></condition> <incr><expr><name pos:line="21" pos:column="35">i<pos:position pos:line="21" pos:column="36"/></name><operator pos:line="21" pos:column="36">--<pos:position pos:line="21" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="39"/></control>
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="22" pos:column="9">newp<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">-&gt;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="15">val<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">.<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="19">args<pos:position pos:line="22" pos:column="23"/></name><index pos:line="22" pos:column="23">[<expr><name pos:line="22" pos:column="24">i<pos:position pos:line="22" pos:column="25"/></name></expr>]<pos:position pos:line="22" pos:column="26"/></index></name> <operator pos:line="22" pos:column="27">=<pos:position pos:line="22" pos:column="28"/></operator> <name><name pos:line="22" pos:column="29">args<pos:position pos:line="22" pos:column="33"/></name><index pos:line="22" pos:column="33">[<expr><name pos:line="22" pos:column="34">i<pos:position pos:line="22" pos:column="35"/></name></expr>]<pos:position pos:line="22" pos:column="36"/></index></name></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt></block></for>
      <return pos:line="23" pos:column="7">return <expr><name pos:line="23" pos:column="14">newp<pos:position pos:line="23" pos:column="18"/></name></expr>;<pos:position pos:line="23" pos:column="19"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

 <label><name pos:line="26" pos:column="2">fail<pos:position pos:line="26" pos:column="6"/></name>:<pos:position pos:line="26" pos:column="7"/></label>
  <for pos:line="27" pos:column="3">for <control pos:line="27" pos:column="7">(<init><expr><name pos:line="27" pos:column="8">i<pos:position pos:line="27" pos:column="9"/></name> <operator pos:line="27" pos:column="10">=<pos:position pos:line="27" pos:column="11"/></operator> <name pos:line="27" pos:column="12">nargs<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">-<pos:position pos:line="27" pos:column="19"/></operator> <literal type="number" pos:line="27" pos:column="20">1<pos:position pos:line="27" pos:column="21"/></literal></expr>;<pos:position pos:line="27" pos:column="22"/></init> <condition><expr><name pos:line="27" pos:column="23">i<pos:position pos:line="27" pos:column="24"/></name> <operator pos:line="27" pos:column="25">&gt;=<pos:position pos:line="27" pos:column="30"/></operator> <literal type="number" pos:line="27" pos:column="28">0<pos:position pos:line="27" pos:column="29"/></literal></expr>;<pos:position pos:line="27" pos:column="30"/></condition> <incr><expr><name pos:line="27" pos:column="31">i<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">--<pos:position pos:line="27" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="27" pos:column="35"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="5">FREE_EXPRESSION<pos:position pos:line="28" pos:column="20"/></name> <argument_list pos:line="28" pos:column="21">(<argument><expr><name><name pos:line="28" pos:column="22">args<pos:position pos:line="28" pos:column="26"/></name><index pos:line="28" pos:column="26">[<expr><name pos:line="28" pos:column="27">i<pos:position pos:line="28" pos:column="28"/></name></expr>]<pos:position pos:line="28" pos:column="29"/></index></name></expr></argument>)<pos:position pos:line="28" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt></block></for>

  <return pos:line="30" pos:column="3">return <expr><name pos:line="30" pos:column="10">NULL<pos:position pos:line="30" pos:column="14"/></name></expr>;<pos:position pos:line="30" pos:column="15"/></return>
}</unit>

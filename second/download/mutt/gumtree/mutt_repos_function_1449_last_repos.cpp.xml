<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1449_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_FormatString<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">dest<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>,		<comment type="block" pos:line="1" pos:column="49">/* output buffer */</comment>
			<parameter><decl><type><name pos:line="2" pos:column="25">size_t<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">destlen<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>,		<comment type="block" pos:line="2" pos:column="49">/* output buffer len */</comment>
			<parameter><decl><type><name pos:line="3" pos:column="25">size_t<pos:position pos:line="3" pos:column="31"/></name></type> <name pos:line="3" pos:column="32">col<pos:position pos:line="3" pos:column="35"/></name></decl></parameter>,		<comment type="block" pos:line="3" pos:column="49">/* starting column (nonzero when called recursively) */</comment>
                        <parameter><decl><type><name pos:line="4" pos:column="25">int<pos:position pos:line="4" pos:column="28"/></name></type> <name pos:line="4" pos:column="29">cols<pos:position pos:line="4" pos:column="33"/></name></decl></parameter>,               <comment type="block" pos:line="4" pos:column="49">/* maximum columns */</comment>
			<parameter><decl><type><specifier pos:line="5" pos:column="25">const<pos:position pos:line="5" pos:column="30"/></specifier> <name pos:line="5" pos:column="31">char<pos:position pos:line="5" pos:column="35"/></name> <modifier pos:line="5" pos:column="36">*<pos:position pos:line="5" pos:column="37"/></modifier></type><name pos:line="5" pos:column="37">src<pos:position pos:line="5" pos:column="40"/></name></decl></parameter>,	<comment type="block" pos:line="5" pos:column="49">/* template string */</comment>
			<parameter><decl><type><name pos:line="6" pos:column="25">format_t<pos:position pos:line="6" pos:column="33"/></name> <modifier pos:line="6" pos:column="34">*<pos:position pos:line="6" pos:column="35"/></modifier></type><name pos:line="6" pos:column="35">callback<pos:position pos:line="6" pos:column="43"/></name></decl></parameter>,	<comment type="block" pos:line="6" pos:column="49">/* callback for processing */</comment>
			<parameter><decl><type><name pos:line="7" pos:column="25">unsigned<pos:position pos:line="7" pos:column="33"/></name> <name pos:line="7" pos:column="34">long<pos:position pos:line="7" pos:column="38"/></name></type> <name pos:line="7" pos:column="39">data<pos:position pos:line="7" pos:column="43"/></name></decl></parameter>,	<comment type="block" pos:line="7" pos:column="49">/* callback data */</comment>
			<parameter><decl><type><name pos:line="8" pos:column="25">format_flag<pos:position pos:line="8" pos:column="36"/></name></type> <name pos:line="8" pos:column="37">flags<pos:position pos:line="8" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="8" pos:column="43"/></parameter_list>	<comment type="block" pos:line="8" pos:column="49">/* callback flags */</comment>
<block pos:line="9" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name></type> <name><name pos:line="10" pos:column="8">prefix<pos:position pos:line="10" pos:column="14"/></name><index pos:line="10" pos:column="14">[<expr><name pos:line="10" pos:column="15">SHORT_STRING<pos:position pos:line="10" pos:column="27"/></name></expr>]<pos:position pos:line="10" pos:column="28"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="10" pos:column="30">buf<pos:position pos:line="10" pos:column="33"/></name><index pos:line="10" pos:column="33">[<expr><name pos:line="10" pos:column="34">LONG_STRING<pos:position pos:line="10" pos:column="45"/></name></expr>]<pos:position pos:line="10" pos:column="46"/></index></name></decl>, <modifier pos:line="10" pos:column="48">*<pos:position pos:line="10" pos:column="49"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="49">cp<pos:position pos:line="10" pos:column="51"/></name></decl>, <modifier pos:line="10" pos:column="53">*<pos:position pos:line="10" pos:column="54"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="54">wptr<pos:position pos:line="10" pos:column="58"/></name> <init pos:line="10" pos:column="59">= <expr><name pos:line="10" pos:column="61">dest<pos:position pos:line="10" pos:column="65"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="67">ch<pos:position pos:line="10" pos:column="69"/></name></decl>;<pos:position pos:line="10" pos:column="70"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name></type> <name><name pos:line="11" pos:column="8">ifstring<pos:position pos:line="11" pos:column="16"/></name><index pos:line="11" pos:column="16">[<expr><name pos:line="11" pos:column="17">SHORT_STRING<pos:position pos:line="11" pos:column="29"/></name></expr>]<pos:position pos:line="11" pos:column="30"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="11" pos:column="32">elsestring<pos:position pos:line="11" pos:column="42"/></name><index pos:line="11" pos:column="42">[<expr><name pos:line="11" pos:column="43">SHORT_STRING<pos:position pos:line="11" pos:column="55"/></name></expr>]<pos:position pos:line="11" pos:column="56"/></index></name></decl>;<pos:position pos:line="11" pos:column="57"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">size_t<pos:position pos:line="12" pos:column="9"/></name></type> <name pos:line="12" pos:column="10">wlen<pos:position pos:line="12" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="16">count<pos:position pos:line="12" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="23">len<pos:position pos:line="12" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="28">wid<pos:position pos:line="12" pos:column="31"/></name></decl>;<pos:position pos:line="12" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">pid_t<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">pid<pos:position pos:line="13" pos:column="12"/></name></decl>;<pos:position pos:line="13" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">FILE<pos:position pos:line="14" pos:column="7"/></name> <modifier pos:line="14" pos:column="8">*<pos:position pos:line="14" pos:column="9"/></modifier></type><name pos:line="14" pos:column="9">filter<pos:position pos:line="14" pos:column="15"/></name></decl>;<pos:position pos:line="14" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type> <name pos:line="15" pos:column="7">n<pos:position pos:line="15" pos:column="8"/></name></decl>;<pos:position pos:line="15" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">char<pos:position pos:line="16" pos:column="7"/></name> <modifier pos:line="16" pos:column="8">*<pos:position pos:line="16" pos:column="9"/></modifier></type><name pos:line="16" pos:column="9">recycler<pos:position pos:line="16" pos:column="17"/></name></decl>;<pos:position pos:line="16" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="18" pos:column="3">prefix<pos:position pos:line="18" pos:column="9"/></name><index pos:line="18" pos:column="9">[<expr><literal type="number" pos:line="18" pos:column="10">0<pos:position pos:line="18" pos:column="11"/></literal></expr>]<pos:position pos:line="18" pos:column="12"/></index></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <literal type="char" pos:line="18" pos:column="15">'\0'<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name pos:line="19" pos:column="3">destlen<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">--<pos:position pos:line="19" pos:column="12"/></operator></expr>;<pos:position pos:line="19" pos:column="13"/></expr_stmt> <comment type="block" pos:line="19" pos:column="14">/* save room for the terminal \0 */</comment>
  <expr_stmt><expr><name pos:line="20" pos:column="3">wlen<pos:position pos:line="20" pos:column="7"/></name> <operator pos:line="20" pos:column="8">=<pos:position pos:line="20" pos:column="9"/></operator> <ternary><condition><expr><operator pos:line="20" pos:column="10">(<pos:position pos:line="20" pos:column="11"/></operator><operator pos:line="20" pos:column="11">(<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="12">flags<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">&amp;<pos:position pos:line="20" pos:column="23"/></operator> <name pos:line="20" pos:column="20">MUTT_FORMAT_ARROWCURSOR<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">)<pos:position pos:line="20" pos:column="44"/></operator> <operator pos:line="20" pos:column="45">&amp;&amp;<pos:position pos:line="20" pos:column="55"/></operator> <call><name pos:line="20" pos:column="48">option<pos:position pos:line="20" pos:column="54"/></name> <argument_list pos:line="20" pos:column="55">(<argument><expr><name pos:line="20" pos:column="56">OPTARROWCURSOR<pos:position pos:line="20" pos:column="70"/></name></expr></argument>)<pos:position pos:line="20" pos:column="71"/></argument_list></call><operator pos:line="20" pos:column="71">)<pos:position pos:line="20" pos:column="72"/></operator></expr> ?<pos:position pos:line="20" pos:column="74"/></condition><then pos:line="20" pos:column="74"> <expr><literal type="number" pos:line="20" pos:column="75">3<pos:position pos:line="20" pos:column="76"/></literal></expr> <pos:position pos:line="20" pos:column="77"/></then><else pos:line="20" pos:column="77">: <expr><literal type="number" pos:line="20" pos:column="79">0<pos:position pos:line="20" pos:column="80"/></literal></expr></else></ternary></expr>;<pos:position pos:line="20" pos:column="81"/></expr_stmt>
  <expr_stmt><expr><name pos:line="21" pos:column="3">col<pos:position pos:line="21" pos:column="6"/></name> <operator pos:line="21" pos:column="7">+=<pos:position pos:line="21" pos:column="9"/></operator> <name pos:line="21" pos:column="10">wlen<pos:position pos:line="21" pos:column="14"/></name></expr>;<pos:position pos:line="21" pos:column="15"/></expr_stmt>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><operator pos:line="23" pos:column="7">(<pos:position pos:line="23" pos:column="8"/></operator><name pos:line="23" pos:column="8">flags<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">&amp;<pos:position pos:line="23" pos:column="19"/></operator> <name pos:line="23" pos:column="16">MUTT_FORMAT_NOFILTER<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">)<pos:position pos:line="23" pos:column="37"/></operator> <operator pos:line="23" pos:column="38">==<pos:position pos:line="23" pos:column="40"/></operator> <literal type="number" pos:line="23" pos:column="41">0<pos:position pos:line="23" pos:column="42"/></literal></expr>)<pos:position pos:line="23" pos:column="43"/></condition><then pos:line="23" pos:column="43">
  <block pos:line="24" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">int<pos:position pos:line="25" pos:column="8"/></name></type> <name pos:line="25" pos:column="9">off<pos:position pos:line="25" pos:column="12"/></name> <init pos:line="25" pos:column="13">= <expr><operator pos:line="25" pos:column="15">-<pos:position pos:line="25" pos:column="16"/></operator><literal type="number" pos:line="25" pos:column="16">1<pos:position pos:line="25" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="18"/></decl_stmt>

    <comment type="block" pos:line="27" pos:column="5">/* Do not consider filters if no pipe at end */</comment>
    <expr_stmt><expr><name pos:line="28" pos:column="5">n<pos:position pos:line="28" pos:column="6"/></name> <operator pos:line="28" pos:column="7">=<pos:position pos:line="28" pos:column="8"/></operator> <call><name pos:line="28" pos:column="9">mutt_strlen<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">src<pos:position pos:line="28" pos:column="24"/></name></expr></argument>)<pos:position pos:line="28" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="26"/></expr_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">n<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">&gt;<pos:position pos:line="29" pos:column="15"/></operator> <literal type="number" pos:line="29" pos:column="13">1<pos:position pos:line="29" pos:column="14"/></literal> <operator pos:line="29" pos:column="15">&amp;&amp;<pos:position pos:line="29" pos:column="25"/></operator> <name><name pos:line="29" pos:column="18">src<pos:position pos:line="29" pos:column="21"/></name><index pos:line="29" pos:column="21">[<expr><name pos:line="29" pos:column="22">n<pos:position pos:line="29" pos:column="23"/></name><operator pos:line="29" pos:column="23">-<pos:position pos:line="29" pos:column="24"/></operator><literal type="number" pos:line="29" pos:column="24">1<pos:position pos:line="29" pos:column="25"/></literal></expr>]<pos:position pos:line="29" pos:column="26"/></index></name> <operator pos:line="29" pos:column="27">==<pos:position pos:line="29" pos:column="29"/></operator> <literal type="char" pos:line="29" pos:column="30">'|'<pos:position pos:line="29" pos:column="33"/></literal></expr>)<pos:position pos:line="29" pos:column="34"/></condition><then pos:line="29" pos:column="34">
    <block pos:line="30" pos:column="5">{
      <comment type="block" pos:line="31" pos:column="7">/* Scan backwards for backslashes */</comment>
      <expr_stmt><expr><name pos:line="32" pos:column="7">off<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">=<pos:position pos:line="32" pos:column="12"/></operator> <name pos:line="32" pos:column="13">n<pos:position pos:line="32" pos:column="14"/></name></expr>;<pos:position pos:line="32" pos:column="15"/></expr_stmt>
      <while pos:line="33" pos:column="7">while <condition pos:line="33" pos:column="13">(<expr><name pos:line="33" pos:column="14">off<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">&gt;<pos:position pos:line="33" pos:column="22"/></operator> <literal type="number" pos:line="33" pos:column="20">0<pos:position pos:line="33" pos:column="21"/></literal> <operator pos:line="33" pos:column="22">&amp;&amp;<pos:position pos:line="33" pos:column="32"/></operator> <name><name pos:line="33" pos:column="25">src<pos:position pos:line="33" pos:column="28"/></name><index pos:line="33" pos:column="28">[<expr><name pos:line="33" pos:column="29">off<pos:position pos:line="33" pos:column="32"/></name><operator pos:line="33" pos:column="32">-<pos:position pos:line="33" pos:column="33"/></operator><literal type="number" pos:line="33" pos:column="33">2<pos:position pos:line="33" pos:column="34"/></literal></expr>]<pos:position pos:line="33" pos:column="35"/></index></name> <operator pos:line="33" pos:column="36">==<pos:position pos:line="33" pos:column="38"/></operator> <literal type="char" pos:line="33" pos:column="39">'\\'<pos:position pos:line="33" pos:column="43"/></literal></expr>)<pos:position pos:line="33" pos:column="44"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="9">off<pos:position pos:line="34" pos:column="12"/></name><operator pos:line="34" pos:column="12">--<pos:position pos:line="34" pos:column="14"/></operator></expr>;<pos:position pos:line="34" pos:column="15"/></expr_stmt></block></while>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="37" pos:column="5">/* If number of backslashes is even, the pipe is real. */</comment>
    <comment type="block" pos:line="38" pos:column="5">/* n-off is the number of backslashes. */</comment>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">off<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">&gt;<pos:position pos:line="39" pos:column="17"/></operator> <literal type="number" pos:line="39" pos:column="15">0<pos:position pos:line="39" pos:column="16"/></literal> <operator pos:line="39" pos:column="17">&amp;&amp;<pos:position pos:line="39" pos:column="27"/></operator> <operator pos:line="39" pos:column="20">(<pos:position pos:line="39" pos:column="21"/></operator><operator pos:line="39" pos:column="21">(<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">n<pos:position pos:line="39" pos:column="23"/></name><operator pos:line="39" pos:column="23">-<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="24">off<pos:position pos:line="39" pos:column="27"/></name><operator pos:line="39" pos:column="27">)<pos:position pos:line="39" pos:column="28"/></operator> <operator pos:line="39" pos:column="29">%<pos:position pos:line="39" pos:column="30"/></operator> <literal type="number" pos:line="39" pos:column="31">2<pos:position pos:line="39" pos:column="32"/></literal><operator pos:line="39" pos:column="32">)<pos:position pos:line="39" pos:column="33"/></operator> <operator pos:line="39" pos:column="34">==<pos:position pos:line="39" pos:column="36"/></operator> <literal type="number" pos:line="39" pos:column="37">0<pos:position pos:line="39" pos:column="38"/></literal></expr>)<pos:position pos:line="39" pos:column="39"/></condition><then pos:line="39" pos:column="39">
    <block pos:line="40" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="41" pos:column="7">BUFFER<pos:position pos:line="41" pos:column="13"/></name> <modifier pos:line="41" pos:column="14">*<pos:position pos:line="41" pos:column="15"/></modifier></type><name pos:line="41" pos:column="15">srcbuf<pos:position pos:line="41" pos:column="21"/></name></decl>, <modifier pos:line="41" pos:column="23">*<pos:position pos:line="41" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="41" pos:column="24">word<pos:position pos:line="41" pos:column="28"/></name></decl>, <modifier pos:line="41" pos:column="30">*<pos:position pos:line="41" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="41" pos:column="31">command<pos:position pos:line="41" pos:column="38"/></name></decl>;<pos:position pos:line="41" pos:column="39"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="42" pos:column="7">char<pos:position pos:line="42" pos:column="11"/></name></type>    <name><name pos:line="42" pos:column="15">srccopy<pos:position pos:line="42" pos:column="22"/></name><index pos:line="42" pos:column="22">[<expr><name pos:line="42" pos:column="23">LONG_STRING<pos:position pos:line="42" pos:column="34"/></name></expr>]<pos:position pos:line="42" pos:column="35"/></index></name></decl>;<pos:position pos:line="42" pos:column="36"/></decl_stmt>
<cpp:ifdef pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">ifdef<pos:position pos:line="43" pos:column="7"/></cpp:directive> <name pos:line="43" pos:column="8">DEBUG<pos:position pos:line="43" pos:column="13"/></name></cpp:ifdef>
      <decl_stmt><decl><type><name pos:line="44" pos:column="7">int<pos:position pos:line="44" pos:column="10"/></name></type>     <name pos:line="44" pos:column="15">i<pos:position pos:line="44" pos:column="16"/></name> <init pos:line="44" pos:column="17">= <expr><literal type="number" pos:line="44" pos:column="19">0<pos:position pos:line="44" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="44" pos:column="21"/></decl_stmt>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>

      <expr_stmt><expr><call><name pos:line="47" pos:column="7">dprint<pos:position pos:line="47" pos:column="13"/></name><argument_list pos:line="47" pos:column="13">(<argument><expr><literal type="number" pos:line="47" pos:column="14">3<pos:position pos:line="47" pos:column="15"/></literal></expr></argument>, <argument><expr><operator pos:line="47" pos:column="17">(<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="18">debugfile<pos:position pos:line="47" pos:column="27"/></name><operator pos:line="47" pos:column="27">,<pos:position pos:line="47" pos:column="28"/></operator> <literal type="string" pos:line="47" pos:column="29">"fmtpipe = %s\n"<pos:position pos:line="47" pos:column="45"/></literal><operator pos:line="47" pos:column="45">,<pos:position pos:line="47" pos:column="46"/></operator> <name pos:line="47" pos:column="47">src<pos:position pos:line="47" pos:column="50"/></name><operator pos:line="47" pos:column="50">)<pos:position pos:line="47" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="47" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="53"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="49" pos:column="7">strncpy<pos:position pos:line="49" pos:column="14"/></name><argument_list pos:line="49" pos:column="14">(<argument><expr><name pos:line="49" pos:column="15">srccopy<pos:position pos:line="49" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="24">src<pos:position pos:line="49" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="29">n<pos:position pos:line="49" pos:column="30"/></name></expr></argument>)<pos:position pos:line="49" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="50" pos:column="7">srccopy<pos:position pos:line="50" pos:column="14"/></name><index pos:line="50" pos:column="14">[<expr><name pos:line="50" pos:column="15">n<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">-<pos:position pos:line="50" pos:column="17"/></operator><literal type="number" pos:line="50" pos:column="17">1<pos:position pos:line="50" pos:column="18"/></literal></expr>]<pos:position pos:line="50" pos:column="19"/></index></name> <operator pos:line="50" pos:column="20">=<pos:position pos:line="50" pos:column="21"/></operator> <literal type="char" pos:line="50" pos:column="22">'\0'<pos:position pos:line="50" pos:column="26"/></literal></expr>;<pos:position pos:line="50" pos:column="27"/></expr_stmt>

      <comment type="block" pos:line="52" pos:column="7">/* prepare BUFFERs */</comment>
      <expr_stmt><expr><name pos:line="53" pos:column="7">srcbuf<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">=<pos:position pos:line="53" pos:column="15"/></operator> <call><name pos:line="53" pos:column="16">mutt_buffer_from<pos:position pos:line="53" pos:column="32"/></name> <argument_list pos:line="53" pos:column="33">(<argument><expr><name pos:line="53" pos:column="34">srccopy<pos:position pos:line="53" pos:column="41"/></name></expr></argument>)<pos:position pos:line="53" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="54" pos:column="7">srcbuf<pos:position pos:line="54" pos:column="13"/></name><operator pos:line="54" pos:column="13">-&gt;<pos:position pos:line="54" pos:column="18"/></operator><name pos:line="54" pos:column="15">dptr<pos:position pos:line="54" pos:column="19"/></name></name> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <name><name pos:line="54" pos:column="22">srcbuf<pos:position pos:line="54" pos:column="28"/></name><operator pos:line="54" pos:column="28">-&gt;<pos:position pos:line="54" pos:column="33"/></operator><name pos:line="54" pos:column="30">data<pos:position pos:line="54" pos:column="34"/></name></name></expr>;<pos:position pos:line="54" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name pos:line="55" pos:column="7">word<pos:position pos:line="55" pos:column="11"/></name> <operator pos:line="55" pos:column="12">=<pos:position pos:line="55" pos:column="13"/></operator> <call><name pos:line="55" pos:column="14">mutt_buffer_new<pos:position pos:line="55" pos:column="29"/></name> <argument_list pos:line="55" pos:column="30">()<pos:position pos:line="55" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name pos:line="56" pos:column="7">command<pos:position pos:line="56" pos:column="14"/></name> <operator pos:line="56" pos:column="15">=<pos:position pos:line="56" pos:column="16"/></operator> <call><name pos:line="56" pos:column="17">mutt_buffer_new<pos:position pos:line="56" pos:column="32"/></name> <argument_list pos:line="56" pos:column="33">()<pos:position pos:line="56" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="36"/></expr_stmt>

      <comment type="block" pos:line="58" pos:column="7">/* Iterate expansions across successive arguments */</comment>
      <do pos:line="59" pos:column="7">do <block pos:line="59" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="60" pos:column="9">char<pos:position pos:line="60" pos:column="13"/></name> <modifier pos:line="60" pos:column="14">*<pos:position pos:line="60" pos:column="15"/></modifier></type><name pos:line="60" pos:column="15">p<pos:position pos:line="60" pos:column="16"/></name></decl>;<pos:position pos:line="60" pos:column="17"/></decl_stmt>

        <comment type="block" pos:line="62" pos:column="9">/* Extract the command name and copy to command line */</comment>
        <expr_stmt><expr><call><name pos:line="63" pos:column="9">dprint<pos:position pos:line="63" pos:column="15"/></name><argument_list pos:line="63" pos:column="15">(<argument><expr><literal type="number" pos:line="63" pos:column="16">3<pos:position pos:line="63" pos:column="17"/></literal></expr></argument>, <argument><expr><operator pos:line="63" pos:column="19">(<pos:position pos:line="63" pos:column="20"/></operator><name pos:line="63" pos:column="20">debugfile<pos:position pos:line="63" pos:column="29"/></name><operator pos:line="63" pos:column="29">,<pos:position pos:line="63" pos:column="30"/></operator> <literal type="string" pos:line="63" pos:column="31">"fmtpipe +++: %s\n"<pos:position pos:line="63" pos:column="50"/></literal><operator pos:line="63" pos:column="50">,<pos:position pos:line="63" pos:column="51"/></operator> <name><name pos:line="63" pos:column="52">srcbuf<pos:position pos:line="63" pos:column="58"/></name><operator pos:line="63" pos:column="58">-&gt;<pos:position pos:line="63" pos:column="63"/></operator><name pos:line="63" pos:column="60">dptr<pos:position pos:line="63" pos:column="64"/></name></name><operator pos:line="63" pos:column="64">)<pos:position pos:line="63" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="63" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="67"/></expr_stmt>
        <if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name><name pos:line="64" pos:column="13">word<pos:position pos:line="64" pos:column="17"/></name><operator pos:line="64" pos:column="17">-&gt;<pos:position pos:line="64" pos:column="22"/></operator><name pos:line="64" pos:column="19">data<pos:position pos:line="64" pos:column="23"/></name></name></expr>)<pos:position pos:line="64" pos:column="24"/></condition><then pos:line="64" pos:column="24">
          <block type="pseudo"><expr_stmt><expr><operator pos:line="65" pos:column="11">*<pos:position pos:line="65" pos:column="12"/></operator><name><name pos:line="65" pos:column="12">word<pos:position pos:line="65" pos:column="16"/></name><operator pos:line="65" pos:column="16">-&gt;<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="18">data<pos:position pos:line="65" pos:column="22"/></name></name> <operator pos:line="65" pos:column="23">=<pos:position pos:line="65" pos:column="24"/></operator> <literal type="char" pos:line="65" pos:column="25">'\0'<pos:position pos:line="65" pos:column="29"/></literal></expr>;<pos:position pos:line="65" pos:column="30"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">mutt_extract_token<pos:position pos:line="66" pos:column="27"/></name><argument_list pos:line="66" pos:column="27">(<argument><expr><name pos:line="66" pos:column="28">word<pos:position pos:line="66" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="34">srcbuf<pos:position pos:line="66" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="42">0<pos:position pos:line="66" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">dprint<pos:position pos:line="67" pos:column="15"/></name><argument_list pos:line="67" pos:column="15">(<argument><expr><literal type="number" pos:line="67" pos:column="16">3<pos:position pos:line="67" pos:column="17"/></literal></expr></argument>, <argument><expr><operator pos:line="67" pos:column="19">(<pos:position pos:line="67" pos:column="20"/></operator><name pos:line="67" pos:column="20">debugfile<pos:position pos:line="67" pos:column="29"/></name><operator pos:line="67" pos:column="29">,<pos:position pos:line="67" pos:column="30"/></operator> <literal type="string" pos:line="67" pos:column="31">"fmtpipe %2d: %s\n"<pos:position pos:line="67" pos:column="50"/></literal><operator pos:line="67" pos:column="50">,<pos:position pos:line="67" pos:column="51"/></operator> <name pos:line="67" pos:column="52">i<pos:position pos:line="67" pos:column="53"/></name><operator pos:line="67" pos:column="53">++<pos:position pos:line="67" pos:column="55"/></operator><operator pos:line="67" pos:column="55">,<pos:position pos:line="67" pos:column="56"/></operator> <name><name pos:line="67" pos:column="57">word<pos:position pos:line="67" pos:column="61"/></name><operator pos:line="67" pos:column="61">-&gt;<pos:position pos:line="67" pos:column="66"/></operator><name pos:line="67" pos:column="63">data<pos:position pos:line="67" pos:column="67"/></name></name><operator pos:line="67" pos:column="67">)<pos:position pos:line="67" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="67" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">mutt_buffer_addch<pos:position pos:line="68" pos:column="26"/></name><argument_list pos:line="68" pos:column="26">(<argument><expr><name pos:line="68" pos:column="27">command<pos:position pos:line="68" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="68" pos:column="36">'\''<pos:position pos:line="68" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">mutt_FormatString<pos:position pos:line="69" pos:column="26"/></name><argument_list pos:line="69" pos:column="26">(<argument><expr><name pos:line="69" pos:column="27">buf<pos:position pos:line="69" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="69" pos:column="32">sizeof<argument_list pos:line="69" pos:column="38">(<argument><expr><name pos:line="69" pos:column="39">buf<pos:position pos:line="69" pos:column="42"/></name></expr></argument>)<pos:position pos:line="69" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="45">0<pos:position pos:line="69" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="48">cols<pos:position pos:line="69" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="54">word<pos:position pos:line="69" pos:column="58"/></name><operator pos:line="69" pos:column="58">-&gt;<pos:position pos:line="69" pos:column="63"/></operator><name pos:line="69" pos:column="60">data<pos:position pos:line="69" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="66">callback<pos:position pos:line="69" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="76">data<pos:position pos:line="69" pos:column="80"/></name></expr></argument>,
                          <argument><expr><name pos:line="70" pos:column="27">flags<pos:position pos:line="70" pos:column="32"/></name> <operator pos:line="70" pos:column="33">|<pos:position pos:line="70" pos:column="34"/></operator> <name pos:line="70" pos:column="35">MUTT_FORMAT_NOFILTER<pos:position pos:line="70" pos:column="55"/></name></expr></argument>)<pos:position pos:line="70" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="57"/></expr_stmt>
        <for pos:line="71" pos:column="9">for <control pos:line="71" pos:column="13">(<init><expr><name pos:line="71" pos:column="14">p<pos:position pos:line="71" pos:column="15"/></name> <operator pos:line="71" pos:column="16">=<pos:position pos:line="71" pos:column="17"/></operator> <name pos:line="71" pos:column="18">buf<pos:position pos:line="71" pos:column="21"/></name></expr>;<pos:position pos:line="71" pos:column="22"/></init> <condition><expr><name pos:line="71" pos:column="23">p<pos:position pos:line="71" pos:column="24"/></name> <operator pos:line="71" pos:column="25">&amp;&amp;<pos:position pos:line="71" pos:column="35"/></operator> <operator pos:line="71" pos:column="28">*<pos:position pos:line="71" pos:column="29"/></operator><name pos:line="71" pos:column="29">p<pos:position pos:line="71" pos:column="30"/></name></expr>;<pos:position pos:line="71" pos:column="31"/></condition> <incr><expr><name pos:line="71" pos:column="32">p<pos:position pos:line="71" pos:column="33"/></name><operator pos:line="71" pos:column="33">++<pos:position pos:line="71" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="71" pos:column="36"/></control>
        <block pos:line="72" pos:column="9">{
          <if pos:line="73" pos:column="11">if <condition pos:line="73" pos:column="14">(<expr><operator pos:line="73" pos:column="15">*<pos:position pos:line="73" pos:column="16"/></operator><name pos:line="73" pos:column="16">p<pos:position pos:line="73" pos:column="17"/></name> <operator pos:line="73" pos:column="18">==<pos:position pos:line="73" pos:column="20"/></operator> <literal type="char" pos:line="73" pos:column="21">'\''<pos:position pos:line="73" pos:column="25"/></literal></expr>)<pos:position pos:line="73" pos:column="26"/></condition><then pos:line="73" pos:column="26">
            <comment type="block" pos:line="74" pos:column="13">/* shell quoting doesn't permit escaping a single quote within
             * single-quoted material.  double-quoting instead will lead
             * shell variable expansions, so break out of the single-quoted
             * span, insert a double-quoted single quote, and resume. */</comment>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="13">mutt_buffer_addstr<pos:position pos:line="78" pos:column="31"/></name><argument_list pos:line="78" pos:column="31">(<argument><expr><name pos:line="78" pos:column="32">command<pos:position pos:line="78" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="41">"'\"'\"'"<pos:position pos:line="78" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="52"/></expr_stmt></block></then>
          <else pos:line="79" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="80" pos:column="13">mutt_buffer_addch<pos:position pos:line="80" pos:column="30"/></name><argument_list pos:line="80" pos:column="30">(<argument><expr><name pos:line="80" pos:column="31">command<pos:position pos:line="80" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="40">*<pos:position pos:line="80" pos:column="41"/></operator><name pos:line="80" pos:column="41">p<pos:position pos:line="80" pos:column="42"/></name></expr></argument>)<pos:position pos:line="80" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="44"/></expr_stmt></block></else></if>
        }<pos:position pos:line="81" pos:column="10"/></block></for>
        <expr_stmt><expr><call><name pos:line="82" pos:column="9">mutt_buffer_addch<pos:position pos:line="82" pos:column="26"/></name><argument_list pos:line="82" pos:column="26">(<argument><expr><name pos:line="82" pos:column="27">command<pos:position pos:line="82" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="82" pos:column="36">'\''<pos:position pos:line="82" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="83" pos:column="9">mutt_buffer_addch<pos:position pos:line="83" pos:column="26"/></name><argument_list pos:line="83" pos:column="26">(<argument><expr><name pos:line="83" pos:column="27">command<pos:position pos:line="83" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="83" pos:column="36">' '<pos:position pos:line="83" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="41"/></expr_stmt>
      }<pos:position pos:line="84" pos:column="8"/></block> while <condition pos:line="84" pos:column="15">(<expr><call><name pos:line="84" pos:column="16">MoreArgs<pos:position pos:line="84" pos:column="24"/></name><argument_list pos:line="84" pos:column="24">(<argument><expr><name pos:line="84" pos:column="25">srcbuf<pos:position pos:line="84" pos:column="31"/></name></expr></argument>)<pos:position pos:line="84" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="84" pos:column="33"/></condition>;<pos:position pos:line="84" pos:column="34"/></do>

      <expr_stmt><expr><call><name pos:line="86" pos:column="7">dprint<pos:position pos:line="86" pos:column="13"/></name><argument_list pos:line="86" pos:column="13">(<argument><expr><literal type="number" pos:line="86" pos:column="14">3<pos:position pos:line="86" pos:column="15"/></literal></expr></argument>, <argument><expr><operator pos:line="86" pos:column="17">(<pos:position pos:line="86" pos:column="18"/></operator><name pos:line="86" pos:column="18">debugfile<pos:position pos:line="86" pos:column="27"/></name><operator pos:line="86" pos:column="27">,<pos:position pos:line="86" pos:column="28"/></operator> <literal type="string" pos:line="86" pos:column="29">"fmtpipe &gt; %s\n"<pos:position pos:line="86" pos:column="48"/></literal><operator pos:line="86" pos:column="45">,<pos:position pos:line="86" pos:column="46"/></operator> <name><name pos:line="86" pos:column="47">command<pos:position pos:line="86" pos:column="54"/></name><operator pos:line="86" pos:column="54">-&gt;<pos:position pos:line="86" pos:column="59"/></operator><name pos:line="86" pos:column="56">data<pos:position pos:line="86" pos:column="60"/></name></name><operator pos:line="86" pos:column="60">)<pos:position pos:line="86" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="86" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="63"/></expr_stmt>

      <expr_stmt><expr><name pos:line="88" pos:column="7">col<pos:position pos:line="88" pos:column="10"/></name> <operator pos:line="88" pos:column="11">-=<pos:position pos:line="88" pos:column="13"/></operator> <name pos:line="88" pos:column="14">wlen<pos:position pos:line="88" pos:column="18"/></name></expr>;<pos:position pos:line="88" pos:column="19"/></expr_stmt>	<comment type="block" pos:line="88" pos:column="25">/* reset to passed in value */</comment>
      <expr_stmt><expr><name pos:line="89" pos:column="7">wptr<pos:position pos:line="89" pos:column="11"/></name> <operator pos:line="89" pos:column="12">=<pos:position pos:line="89" pos:column="13"/></operator> <name pos:line="89" pos:column="14">dest<pos:position pos:line="89" pos:column="18"/></name></expr>;<pos:position pos:line="89" pos:column="19"/></expr_stmt>      <comment type="block" pos:line="89" pos:column="25">/* reset write ptr */</comment>
      <expr_stmt><expr><name pos:line="90" pos:column="7">wlen<pos:position pos:line="90" pos:column="11"/></name> <operator pos:line="90" pos:column="12">=<pos:position pos:line="90" pos:column="13"/></operator> <ternary><condition><expr><operator pos:line="90" pos:column="14">(<pos:position pos:line="90" pos:column="15"/></operator><operator pos:line="90" pos:column="15">(<pos:position pos:line="90" pos:column="16"/></operator><name pos:line="90" pos:column="16">flags<pos:position pos:line="90" pos:column="21"/></name> <operator pos:line="90" pos:column="22">&amp;<pos:position pos:line="90" pos:column="27"/></operator> <name pos:line="90" pos:column="24">MUTT_FORMAT_ARROWCURSOR<pos:position pos:line="90" pos:column="47"/></name><operator pos:line="90" pos:column="47">)<pos:position pos:line="90" pos:column="48"/></operator> <operator pos:line="90" pos:column="49">&amp;&amp;<pos:position pos:line="90" pos:column="59"/></operator> <call><name pos:line="90" pos:column="52">option<pos:position pos:line="90" pos:column="58"/></name> <argument_list pos:line="90" pos:column="59">(<argument><expr><name pos:line="90" pos:column="60">OPTARROWCURSOR<pos:position pos:line="90" pos:column="74"/></name></expr></argument>)<pos:position pos:line="90" pos:column="75"/></argument_list></call><operator pos:line="90" pos:column="75">)<pos:position pos:line="90" pos:column="76"/></operator></expr> ?<pos:position pos:line="90" pos:column="78"/></condition><then pos:line="90" pos:column="78"> <expr><literal type="number" pos:line="90" pos:column="79">3<pos:position pos:line="90" pos:column="80"/></literal></expr> <pos:position pos:line="90" pos:column="81"/></then><else pos:line="90" pos:column="81">: <expr><literal type="number" pos:line="90" pos:column="83">0<pos:position pos:line="90" pos:column="84"/></literal></expr></else></ternary></expr>;<pos:position pos:line="90" pos:column="85"/></expr_stmt>
      <if pos:line="91" pos:column="7">if <condition pos:line="91" pos:column="10">(<expr><operator pos:line="91" pos:column="11">(<pos:position pos:line="91" pos:column="12"/></operator><name pos:line="91" pos:column="12">pid<pos:position pos:line="91" pos:column="15"/></name> <operator pos:line="91" pos:column="16">=<pos:position pos:line="91" pos:column="17"/></operator> <call><name pos:line="91" pos:column="18">mutt_create_filter<pos:position pos:line="91" pos:column="36"/></name><argument_list pos:line="91" pos:column="36">(<argument><expr><name><name pos:line="91" pos:column="37">command<pos:position pos:line="91" pos:column="44"/></name><operator pos:line="91" pos:column="44">-&gt;<pos:position pos:line="91" pos:column="49"/></operator><name pos:line="91" pos:column="46">data<pos:position pos:line="91" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="52">NULL<pos:position pos:line="91" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="58">&amp;<pos:position pos:line="91" pos:column="63"/></operator><name pos:line="91" pos:column="59">filter<pos:position pos:line="91" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="67">NULL<pos:position pos:line="91" pos:column="71"/></name></expr></argument>)<pos:position pos:line="91" pos:column="72"/></argument_list></call><operator pos:line="91" pos:column="72">)<pos:position pos:line="91" pos:column="73"/></operator> <operator pos:line="91" pos:column="74">!=<pos:position pos:line="91" pos:column="76"/></operator> <operator pos:line="91" pos:column="77">-<pos:position pos:line="91" pos:column="78"/></operator><literal type="number" pos:line="91" pos:column="78">1<pos:position pos:line="91" pos:column="79"/></literal></expr>)<pos:position pos:line="91" pos:column="80"/></condition><then pos:line="91" pos:column="80">
      <block pos:line="92" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="93" pos:column="9">int<pos:position pos:line="93" pos:column="12"/></name></type> <name pos:line="93" pos:column="13">rc<pos:position pos:line="93" pos:column="15"/></name></decl>;<pos:position pos:line="93" pos:column="16"/></decl_stmt>

        <expr_stmt><expr><name pos:line="95" pos:column="9">n<pos:position pos:line="95" pos:column="10"/></name> <operator pos:line="95" pos:column="11">=<pos:position pos:line="95" pos:column="12"/></operator> <call><name pos:line="95" pos:column="13">fread<pos:position pos:line="95" pos:column="18"/></name><argument_list pos:line="95" pos:column="18">(<argument><expr><name pos:line="95" pos:column="19">dest<pos:position pos:line="95" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="95" pos:column="25">1<pos:position pos:line="95" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="95" pos:column="28">destlen<pos:position pos:line="95" pos:column="35"/></name></expr></argument> <comment type="block" pos:line="95" pos:column="36">/* already decremented */</comment>, <argument><expr><name pos:line="95" pos:column="63">filter<pos:position pos:line="95" pos:column="69"/></name></expr></argument>)<pos:position pos:line="95" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="96" pos:column="9">safe_fclose<pos:position pos:line="96" pos:column="20"/></name> <argument_list pos:line="96" pos:column="21">(<argument><expr><operator pos:line="96" pos:column="22">&amp;<pos:position pos:line="96" pos:column="27"/></operator><name pos:line="96" pos:column="23">filter<pos:position pos:line="96" pos:column="29"/></name></expr></argument>)<pos:position pos:line="96" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name pos:line="97" pos:column="9">rc<pos:position pos:line="97" pos:column="11"/></name> <operator pos:line="97" pos:column="12">=<pos:position pos:line="97" pos:column="13"/></operator> <call><name pos:line="97" pos:column="14">mutt_wait_filter<pos:position pos:line="97" pos:column="30"/></name><argument_list pos:line="97" pos:column="30">(<argument><expr><name pos:line="97" pos:column="31">pid<pos:position pos:line="97" pos:column="34"/></name></expr></argument>)<pos:position pos:line="97" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="36"/></expr_stmt>
	<if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><name pos:line="98" pos:column="13">rc<pos:position pos:line="98" pos:column="15"/></name> <operator pos:line="98" pos:column="16">!=<pos:position pos:line="98" pos:column="18"/></operator> <literal type="number" pos:line="98" pos:column="19">0<pos:position pos:line="98" pos:column="20"/></literal></expr>)<pos:position pos:line="98" pos:column="21"/></condition><then pos:line="98" pos:column="21">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="99" pos:column="11">dprint<pos:position pos:line="99" pos:column="17"/></name><argument_list pos:line="99" pos:column="17">(<argument><expr><literal type="number" pos:line="99" pos:column="18">1<pos:position pos:line="99" pos:column="19"/></literal></expr></argument>, <argument><expr><operator pos:line="99" pos:column="21">(<pos:position pos:line="99" pos:column="22"/></operator><name pos:line="99" pos:column="22">debugfile<pos:position pos:line="99" pos:column="31"/></name><operator pos:line="99" pos:column="31">,<pos:position pos:line="99" pos:column="32"/></operator> <literal type="string" pos:line="99" pos:column="33">"format pipe command exited code %d\n"<pos:position pos:line="99" pos:column="71"/></literal><operator pos:line="99" pos:column="71">,<pos:position pos:line="99" pos:column="72"/></operator> <name pos:line="99" pos:column="73">rc<pos:position pos:line="99" pos:column="75"/></name><operator pos:line="99" pos:column="75">)<pos:position pos:line="99" pos:column="76"/></operator></expr></argument>)<pos:position pos:line="99" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="78"/></expr_stmt></block></then></if>
	<if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">n<pos:position pos:line="100" pos:column="14"/></name> <operator pos:line="100" pos:column="15">&gt;<pos:position pos:line="100" pos:column="19"/></operator> <literal type="number" pos:line="100" pos:column="17">0<pos:position pos:line="100" pos:column="18"/></literal></expr>)<pos:position pos:line="100" pos:column="19"/></condition><then pos:line="100" pos:column="19"> <block pos:line="100" pos:column="20">{
	  <expr_stmt><expr><name><name pos:line="101" pos:column="11">dest<pos:position pos:line="101" pos:column="15"/></name><index pos:line="101" pos:column="15">[<expr><name pos:line="101" pos:column="16">n<pos:position pos:line="101" pos:column="17"/></name></expr>]<pos:position pos:line="101" pos:column="18"/></index></name> <operator pos:line="101" pos:column="19">=<pos:position pos:line="101" pos:column="20"/></operator> <literal type="number" pos:line="101" pos:column="21">0<pos:position pos:line="101" pos:column="22"/></literal></expr>;<pos:position pos:line="101" pos:column="23"/></expr_stmt>
	  <while pos:line="102" pos:column="11">while <condition pos:line="102" pos:column="17">(<expr><operator pos:line="102" pos:column="18">(<pos:position pos:line="102" pos:column="19"/></operator><name pos:line="102" pos:column="19">n<pos:position pos:line="102" pos:column="20"/></name> <operator pos:line="102" pos:column="21">&gt;<pos:position pos:line="102" pos:column="25"/></operator> <literal type="number" pos:line="102" pos:column="23">0<pos:position pos:line="102" pos:column="24"/></literal><operator pos:line="102" pos:column="24">)<pos:position pos:line="102" pos:column="25"/></operator> <operator pos:line="102" pos:column="26">&amp;&amp;<pos:position pos:line="102" pos:column="36"/></operator> <operator pos:line="102" pos:column="29">(<pos:position pos:line="102" pos:column="30"/></operator><name><name pos:line="102" pos:column="30">dest<pos:position pos:line="102" pos:column="34"/></name><index pos:line="102" pos:column="34">[<expr><name pos:line="102" pos:column="35">n<pos:position pos:line="102" pos:column="36"/></name><operator pos:line="102" pos:column="36">-<pos:position pos:line="102" pos:column="37"/></operator><literal type="number" pos:line="102" pos:column="37">1<pos:position pos:line="102" pos:column="38"/></literal></expr>]<pos:position pos:line="102" pos:column="39"/></index></name> <operator pos:line="102" pos:column="40">==<pos:position pos:line="102" pos:column="42"/></operator> <literal type="char" pos:line="102" pos:column="43">'\n'<pos:position pos:line="102" pos:column="47"/></literal> <operator pos:line="102" pos:column="48">||<pos:position pos:line="102" pos:column="50"/></operator> <name><name pos:line="102" pos:column="51">dest<pos:position pos:line="102" pos:column="55"/></name><index pos:line="102" pos:column="55">[<expr><name pos:line="102" pos:column="56">n<pos:position pos:line="102" pos:column="57"/></name><operator pos:line="102" pos:column="57">-<pos:position pos:line="102" pos:column="58"/></operator><literal type="number" pos:line="102" pos:column="58">1<pos:position pos:line="102" pos:column="59"/></literal></expr>]<pos:position pos:line="102" pos:column="60"/></index></name> <operator pos:line="102" pos:column="61">==<pos:position pos:line="102" pos:column="63"/></operator> <literal type="char" pos:line="102" pos:column="64">'\r'<pos:position pos:line="102" pos:column="68"/></literal><operator pos:line="102" pos:column="68">)<pos:position pos:line="102" pos:column="69"/></operator></expr>)<pos:position pos:line="102" pos:column="70"/></condition>
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="103" pos:column="13">dest<pos:position pos:line="103" pos:column="17"/></name><index pos:line="103" pos:column="17">[<expr><operator pos:line="103" pos:column="18">--<pos:position pos:line="103" pos:column="20"/></operator><name pos:line="103" pos:column="20">n<pos:position pos:line="103" pos:column="21"/></name></expr>]<pos:position pos:line="103" pos:column="22"/></index></name> <operator pos:line="103" pos:column="23">=<pos:position pos:line="103" pos:column="24"/></operator> <literal type="char" pos:line="103" pos:column="25">'\0'<pos:position pos:line="103" pos:column="29"/></literal></expr>;<pos:position pos:line="103" pos:column="30"/></expr_stmt></block></while>
	  <expr_stmt><expr><call><name pos:line="104" pos:column="11">dprint<pos:position pos:line="104" pos:column="17"/></name><argument_list pos:line="104" pos:column="17">(<argument><expr><literal type="number" pos:line="104" pos:column="18">3<pos:position pos:line="104" pos:column="19"/></literal></expr></argument>, <argument><expr><operator pos:line="104" pos:column="21">(<pos:position pos:line="104" pos:column="22"/></operator><name pos:line="104" pos:column="22">debugfile<pos:position pos:line="104" pos:column="31"/></name><operator pos:line="104" pos:column="31">,<pos:position pos:line="104" pos:column="32"/></operator> <literal type="string" pos:line="104" pos:column="33">"fmtpipe &lt; %s\n"<pos:position pos:line="104" pos:column="52"/></literal><operator pos:line="104" pos:column="49">,<pos:position pos:line="104" pos:column="50"/></operator> <name pos:line="104" pos:column="51">dest<pos:position pos:line="104" pos:column="55"/></name><operator pos:line="104" pos:column="55">)<pos:position pos:line="104" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="104" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="58"/></expr_stmt>

	  <comment type="block" pos:line="106" pos:column="11">/* If the result ends with '%', this indicates that the filter
	   * generated %-tokens that mutt can expand.  Eliminate the '%'
	   * marker and recycle the string through mutt_FormatString().
	   * To literally end with "%", use "%%". */</comment>
	  <if pos:line="110" pos:column="11">if <condition pos:line="110" pos:column="14">(<expr><operator pos:line="110" pos:column="15">(<pos:position pos:line="110" pos:column="16"/></operator><name pos:line="110" pos:column="16">n<pos:position pos:line="110" pos:column="17"/></name> <operator pos:line="110" pos:column="18">&gt;<pos:position pos:line="110" pos:column="22"/></operator> <literal type="number" pos:line="110" pos:column="20">0<pos:position pos:line="110" pos:column="21"/></literal><operator pos:line="110" pos:column="21">)<pos:position pos:line="110" pos:column="22"/></operator> <operator pos:line="110" pos:column="23">&amp;&amp;<pos:position pos:line="110" pos:column="33"/></operator> <name><name pos:line="110" pos:column="26">dest<pos:position pos:line="110" pos:column="30"/></name><index pos:line="110" pos:column="30">[<expr><name pos:line="110" pos:column="31">n<pos:position pos:line="110" pos:column="32"/></name><operator pos:line="110" pos:column="32">-<pos:position pos:line="110" pos:column="33"/></operator><literal type="number" pos:line="110" pos:column="33">1<pos:position pos:line="110" pos:column="34"/></literal></expr>]<pos:position pos:line="110" pos:column="35"/></index></name> <operator pos:line="110" pos:column="36">==<pos:position pos:line="110" pos:column="38"/></operator> <literal type="char" pos:line="110" pos:column="39">'%'<pos:position pos:line="110" pos:column="42"/></literal></expr>)<pos:position pos:line="110" pos:column="43"/></condition><then pos:line="110" pos:column="43">
	  <block pos:line="111" pos:column="11">{
	    <expr_stmt><expr><operator pos:line="112" pos:column="13">--<pos:position pos:line="112" pos:column="15"/></operator><name pos:line="112" pos:column="15">n<pos:position pos:line="112" pos:column="16"/></name></expr>;<pos:position pos:line="112" pos:column="17"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="113" pos:column="13">dest<pos:position pos:line="113" pos:column="17"/></name><index pos:line="113" pos:column="17">[<expr><name pos:line="113" pos:column="18">n<pos:position pos:line="113" pos:column="19"/></name></expr>]<pos:position pos:line="113" pos:column="20"/></index></name> <operator pos:line="113" pos:column="21">=<pos:position pos:line="113" pos:column="22"/></operator> <literal type="char" pos:line="113" pos:column="23">'\0'<pos:position pos:line="113" pos:column="27"/></literal></expr>;<pos:position pos:line="113" pos:column="28"/></expr_stmt>               <comment type="block" pos:line="113" pos:column="43">/* remove '%' */</comment>
	    <if pos:line="114" pos:column="13">if <condition pos:line="114" pos:column="16">(<expr><operator pos:line="114" pos:column="17">(<pos:position pos:line="114" pos:column="18"/></operator><name pos:line="114" pos:column="18">n<pos:position pos:line="114" pos:column="19"/></name> <operator pos:line="114" pos:column="20">&gt;<pos:position pos:line="114" pos:column="24"/></operator> <literal type="number" pos:line="114" pos:column="22">0<pos:position pos:line="114" pos:column="23"/></literal><operator pos:line="114" pos:column="23">)<pos:position pos:line="114" pos:column="24"/></operator> <operator pos:line="114" pos:column="25">&amp;&amp;<pos:position pos:line="114" pos:column="35"/></operator> <name><name pos:line="114" pos:column="28">dest<pos:position pos:line="114" pos:column="32"/></name><index pos:line="114" pos:column="32">[<expr><name pos:line="114" pos:column="33">n<pos:position pos:line="114" pos:column="34"/></name><operator pos:line="114" pos:column="34">-<pos:position pos:line="114" pos:column="35"/></operator><literal type="number" pos:line="114" pos:column="35">1<pos:position pos:line="114" pos:column="36"/></literal></expr>]<pos:position pos:line="114" pos:column="37"/></index></name> <operator pos:line="114" pos:column="38">!=<pos:position pos:line="114" pos:column="40"/></operator> <literal type="char" pos:line="114" pos:column="41">'%'<pos:position pos:line="114" pos:column="44"/></literal></expr>)<pos:position pos:line="114" pos:column="45"/></condition><then pos:line="114" pos:column="45">
	    <block pos:line="115" pos:column="13">{
	      <expr_stmt><expr><name pos:line="116" pos:column="15">recycler<pos:position pos:line="116" pos:column="23"/></name> <operator pos:line="116" pos:column="24">=<pos:position pos:line="116" pos:column="25"/></operator> <call><name pos:line="116" pos:column="26">safe_strdup<pos:position pos:line="116" pos:column="37"/></name><argument_list pos:line="116" pos:column="37">(<argument><expr><name pos:line="116" pos:column="38">dest<pos:position pos:line="116" pos:column="42"/></name></expr></argument>)<pos:position pos:line="116" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="44"/></expr_stmt>
	      <if pos:line="117" pos:column="15">if <condition pos:line="117" pos:column="18">(<expr><name pos:line="117" pos:column="19">recycler<pos:position pos:line="117" pos:column="27"/></name></expr>)<pos:position pos:line="117" pos:column="28"/></condition><then pos:line="117" pos:column="28">
	      <block pos:line="118" pos:column="15">{
		<comment type="block" pos:line="119" pos:column="17">/* destlen is decremented at the start of this function
		 * to save space for the terminal nul char.  We can add
		 * it back for the recursive call since the expansion of
		 * format pipes does not try to append a nul itself.
		 */</comment>
		<expr_stmt><expr><call><name pos:line="124" pos:column="17">mutt_FormatString<pos:position pos:line="124" pos:column="34"/></name><argument_list pos:line="124" pos:column="34">(<argument><expr><name pos:line="124" pos:column="35">dest<pos:position pos:line="124" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="41">destlen<pos:position pos:line="124" pos:column="48"/></name><operator pos:line="124" pos:column="48">+<pos:position pos:line="124" pos:column="49"/></operator><literal type="number" pos:line="124" pos:column="49">1<pos:position pos:line="124" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="124" pos:column="52">col<pos:position pos:line="124" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="57">cols<pos:position pos:line="124" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="63">recycler<pos:position pos:line="124" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="73">callback<pos:position pos:line="124" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="83">data<pos:position pos:line="124" pos:column="87"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="89">flags<pos:position pos:line="124" pos:column="94"/></name></expr></argument>)<pos:position pos:line="124" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="96"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="125" pos:column="17">FREE<pos:position pos:line="125" pos:column="21"/></name><argument_list pos:line="125" pos:column="21">(<argument><expr><operator pos:line="125" pos:column="22">&amp;<pos:position pos:line="125" pos:column="27"/></operator><name pos:line="125" pos:column="23">recycler<pos:position pos:line="125" pos:column="31"/></name></expr></argument>)<pos:position pos:line="125" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="33"/></expr_stmt>
	      }<pos:position pos:line="126" pos:column="16"/></block></then></if>
	    }<pos:position pos:line="127" pos:column="14"/></block></then></if>
	  }<pos:position pos:line="128" pos:column="12"/></block></then></if>
	}<pos:position pos:line="129" pos:column="10"/></block></then>
	<else pos:line="130" pos:column="9">else
	<block pos:line="131" pos:column="9">{
	  <comment type="block" pos:line="132" pos:column="11">/* read error */</comment>
	  <expr_stmt><expr><call><name pos:line="133" pos:column="11">dprint<pos:position pos:line="133" pos:column="17"/></name><argument_list pos:line="133" pos:column="17">(<argument><expr><literal type="number" pos:line="133" pos:column="18">1<pos:position pos:line="133" pos:column="19"/></literal></expr></argument>, <argument><expr><operator pos:line="133" pos:column="21">(<pos:position pos:line="133" pos:column="22"/></operator><name pos:line="133" pos:column="22">debugfile<pos:position pos:line="133" pos:column="31"/></name><operator pos:line="133" pos:column="31">,<pos:position pos:line="133" pos:column="32"/></operator> <literal type="string" pos:line="133" pos:column="33">"error reading from fmtpipe: %s (errno=%d)\n"<pos:position pos:line="133" pos:column="78"/></literal><operator pos:line="133" pos:column="78">,<pos:position pos:line="133" pos:column="79"/></operator> <call><name pos:line="133" pos:column="80">strerror<pos:position pos:line="133" pos:column="88"/></name><argument_list pos:line="133" pos:column="88">(<argument><expr><name pos:line="133" pos:column="89">errno<pos:position pos:line="133" pos:column="94"/></name></expr></argument>)<pos:position pos:line="133" pos:column="95"/></argument_list></call><operator pos:line="133" pos:column="95">,<pos:position pos:line="133" pos:column="96"/></operator> <name pos:line="133" pos:column="97">errno<pos:position pos:line="133" pos:column="102"/></name><operator pos:line="133" pos:column="102">)<pos:position pos:line="133" pos:column="103"/></operator></expr></argument>)<pos:position pos:line="133" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="105"/></expr_stmt>
	  <expr_stmt><expr><operator pos:line="134" pos:column="11">*<pos:position pos:line="134" pos:column="12"/></operator><name pos:line="134" pos:column="12">wptr<pos:position pos:line="134" pos:column="16"/></name> <operator pos:line="134" pos:column="17">=<pos:position pos:line="134" pos:column="18"/></operator> <literal type="number" pos:line="134" pos:column="19">0<pos:position pos:line="134" pos:column="20"/></literal></expr>;<pos:position pos:line="134" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="135" pos:column="10"/></block></else></if>
      }<pos:position pos:line="136" pos:column="8"/></block></then>
      <else pos:line="137" pos:column="7">else
      <block pos:line="138" pos:column="7">{
        <comment type="block" pos:line="139" pos:column="9">/* Filter failed; erase write buffer */</comment>
        <expr_stmt><expr><operator pos:line="140" pos:column="9">*<pos:position pos:line="140" pos:column="10"/></operator><name pos:line="140" pos:column="10">wptr<pos:position pos:line="140" pos:column="14"/></name> <operator pos:line="140" pos:column="15">=<pos:position pos:line="140" pos:column="16"/></operator> <literal type="char" pos:line="140" pos:column="17">'\0'<pos:position pos:line="140" pos:column="21"/></literal></expr>;<pos:position pos:line="140" pos:column="22"/></expr_stmt>
      }<pos:position pos:line="141" pos:column="8"/></block></else></if>

      <expr_stmt><expr><call><name pos:line="143" pos:column="7">mutt_buffer_free<pos:position pos:line="143" pos:column="23"/></name><argument_list pos:line="143" pos:column="23">(<argument><expr><operator pos:line="143" pos:column="24">&amp;<pos:position pos:line="143" pos:column="29"/></operator><name pos:line="143" pos:column="25">command<pos:position pos:line="143" pos:column="32"/></name></expr></argument>)<pos:position pos:line="143" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="144" pos:column="7">mutt_buffer_free<pos:position pos:line="144" pos:column="23"/></name><argument_list pos:line="144" pos:column="23">(<argument><expr><operator pos:line="144" pos:column="24">&amp;<pos:position pos:line="144" pos:column="29"/></operator><name pos:line="144" pos:column="25">srcbuf<pos:position pos:line="144" pos:column="31"/></name></expr></argument>)<pos:position pos:line="144" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="145" pos:column="7">mutt_buffer_free<pos:position pos:line="145" pos:column="23"/></name><argument_list pos:line="145" pos:column="23">(<argument><expr><operator pos:line="145" pos:column="24">&amp;<pos:position pos:line="145" pos:column="29"/></operator><name pos:line="145" pos:column="25">word<pos:position pos:line="145" pos:column="29"/></name></expr></argument>)<pos:position pos:line="145" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="31"/></expr_stmt>
      <return pos:line="146" pos:column="7">return;<pos:position pos:line="146" pos:column="14"/></return>
    }<pos:position pos:line="147" pos:column="6"/></block></then></if>
  }<pos:position pos:line="148" pos:column="4"/></block></then></if>

  <while pos:line="150" pos:column="3">while <condition pos:line="150" pos:column="9">(<expr><operator pos:line="150" pos:column="10">*<pos:position pos:line="150" pos:column="11"/></operator><name pos:line="150" pos:column="11">src<pos:position pos:line="150" pos:column="14"/></name> <operator pos:line="150" pos:column="15">&amp;&amp;<pos:position pos:line="150" pos:column="25"/></operator> <name pos:line="150" pos:column="18">wlen<pos:position pos:line="150" pos:column="22"/></name> <operator pos:line="150" pos:column="23">&lt;<pos:position pos:line="150" pos:column="27"/></operator> <name pos:line="150" pos:column="25">destlen<pos:position pos:line="150" pos:column="32"/></name></expr>)<pos:position pos:line="150" pos:column="33"/></condition>
  <block pos:line="151" pos:column="3">{
    <if pos:line="152" pos:column="5">if <condition pos:line="152" pos:column="8">(<expr><operator pos:line="152" pos:column="9">*<pos:position pos:line="152" pos:column="10"/></operator><name pos:line="152" pos:column="10">src<pos:position pos:line="152" pos:column="13"/></name> <operator pos:line="152" pos:column="14">==<pos:position pos:line="152" pos:column="16"/></operator> <literal type="char" pos:line="152" pos:column="17">'%'<pos:position pos:line="152" pos:column="20"/></literal></expr>)<pos:position pos:line="152" pos:column="21"/></condition><then pos:line="152" pos:column="21">
    <block pos:line="153" pos:column="5">{
      <if pos:line="154" pos:column="7">if <condition pos:line="154" pos:column="10">(<expr><operator pos:line="154" pos:column="11">*<pos:position pos:line="154" pos:column="12"/></operator><operator pos:line="154" pos:column="12">++<pos:position pos:line="154" pos:column="14"/></operator><name pos:line="154" pos:column="14">src<pos:position pos:line="154" pos:column="17"/></name> <operator pos:line="154" pos:column="18">==<pos:position pos:line="154" pos:column="20"/></operator> <literal type="char" pos:line="154" pos:column="21">'%'<pos:position pos:line="154" pos:column="24"/></literal></expr>)<pos:position pos:line="154" pos:column="25"/></condition><then pos:line="154" pos:column="25">
      <block pos:line="155" pos:column="7">{
	<expr_stmt><expr><operator pos:line="156" pos:column="9">*<pos:position pos:line="156" pos:column="10"/></operator><name pos:line="156" pos:column="10">wptr<pos:position pos:line="156" pos:column="14"/></name><operator pos:line="156" pos:column="14">++<pos:position pos:line="156" pos:column="16"/></operator> <operator pos:line="156" pos:column="17">=<pos:position pos:line="156" pos:column="18"/></operator> <literal type="char" pos:line="156" pos:column="19">'%'<pos:position pos:line="156" pos:column="22"/></literal></expr>;<pos:position pos:line="156" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name pos:line="157" pos:column="9">wlen<pos:position pos:line="157" pos:column="13"/></name><operator pos:line="157" pos:column="13">++<pos:position pos:line="157" pos:column="15"/></operator></expr>;<pos:position pos:line="157" pos:column="16"/></expr_stmt>
	<expr_stmt><expr><name pos:line="158" pos:column="9">col<pos:position pos:line="158" pos:column="12"/></name><operator pos:line="158" pos:column="12">++<pos:position pos:line="158" pos:column="14"/></operator></expr>;<pos:position pos:line="158" pos:column="15"/></expr_stmt>
	<expr_stmt><expr><name pos:line="159" pos:column="9">src<pos:position pos:line="159" pos:column="12"/></name><operator pos:line="159" pos:column="12">++<pos:position pos:line="159" pos:column="14"/></operator></expr>;<pos:position pos:line="159" pos:column="15"/></expr_stmt>
	<continue pos:line="160" pos:column="9">continue;<pos:position pos:line="160" pos:column="18"/></continue>
      }<pos:position pos:line="161" pos:column="8"/></block></then></if>

      <if pos:line="163" pos:column="7">if <condition pos:line="163" pos:column="10">(<expr><operator pos:line="163" pos:column="11">*<pos:position pos:line="163" pos:column="12"/></operator><name pos:line="163" pos:column="12">src<pos:position pos:line="163" pos:column="15"/></name> <operator pos:line="163" pos:column="16">==<pos:position pos:line="163" pos:column="18"/></operator> <literal type="char" pos:line="163" pos:column="19">'?'<pos:position pos:line="163" pos:column="22"/></literal></expr>)<pos:position pos:line="163" pos:column="23"/></condition><then pos:line="163" pos:column="23">
      <block pos:line="164" pos:column="7">{
	<expr_stmt><expr><name pos:line="165" pos:column="9">flags<pos:position pos:line="165" pos:column="14"/></name> <operator pos:line="165" pos:column="15">|=<pos:position pos:line="165" pos:column="17"/></operator> <name pos:line="165" pos:column="18">MUTT_FORMAT_OPTIONAL<pos:position pos:line="165" pos:column="38"/></name></expr>;<pos:position pos:line="165" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name pos:line="166" pos:column="9">src<pos:position pos:line="166" pos:column="12"/></name><operator pos:line="166" pos:column="12">++<pos:position pos:line="166" pos:column="14"/></operator></expr>;<pos:position pos:line="166" pos:column="15"/></expr_stmt>
      }<pos:position pos:line="167" pos:column="8"/></block></then>
      <else pos:line="168" pos:column="7">else
      <block pos:line="169" pos:column="7">{
	<expr_stmt><expr><name pos:line="170" pos:column="9">flags<pos:position pos:line="170" pos:column="14"/></name> <operator pos:line="170" pos:column="15">&amp;=<pos:position pos:line="170" pos:column="21"/></operator> <operator pos:line="170" pos:column="18">~<pos:position pos:line="170" pos:column="19"/></operator><name pos:line="170" pos:column="19">MUTT_FORMAT_OPTIONAL<pos:position pos:line="170" pos:column="39"/></name></expr>;<pos:position pos:line="170" pos:column="40"/></expr_stmt>

	<comment type="block" pos:line="172" pos:column="9">/* eat the format string */</comment>
	<expr_stmt><expr><name pos:line="173" pos:column="9">cp<pos:position pos:line="173" pos:column="11"/></name> <operator pos:line="173" pos:column="12">=<pos:position pos:line="173" pos:column="13"/></operator> <name pos:line="173" pos:column="14">prefix<pos:position pos:line="173" pos:column="20"/></name></expr>;<pos:position pos:line="173" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="174" pos:column="9">count<pos:position pos:line="174" pos:column="14"/></name> <operator pos:line="174" pos:column="15">=<pos:position pos:line="174" pos:column="16"/></operator> <literal type="number" pos:line="174" pos:column="17">0<pos:position pos:line="174" pos:column="18"/></literal></expr>;<pos:position pos:line="174" pos:column="19"/></expr_stmt>
	<while pos:line="175" pos:column="9">while <condition pos:line="175" pos:column="15">(<expr><name pos:line="175" pos:column="16">count<pos:position pos:line="175" pos:column="21"/></name> <operator pos:line="175" pos:column="22">&lt;<pos:position pos:line="175" pos:column="26"/></operator> <sizeof pos:line="175" pos:column="24">sizeof <argument_list pos:line="175" pos:column="31">(<argument><expr><name pos:line="175" pos:column="32">prefix<pos:position pos:line="175" pos:column="38"/></name></expr></argument>)<pos:position pos:line="175" pos:column="39"/></argument_list></sizeof> <operator pos:line="175" pos:column="40">&amp;&amp;<pos:position pos:line="175" pos:column="50"/></operator>
	       <operator pos:line="176" pos:column="16">(<pos:position pos:line="176" pos:column="17"/></operator><call><name pos:line="176" pos:column="17">isdigit<pos:position pos:line="176" pos:column="24"/></name> <argument_list pos:line="176" pos:column="25">(<argument><expr><operator pos:line="176" pos:column="26">(<pos:position pos:line="176" pos:column="27"/></operator><name pos:line="176" pos:column="27">unsigned<pos:position pos:line="176" pos:column="35"/></name> <name pos:line="176" pos:column="36">char<pos:position pos:line="176" pos:column="40"/></name><operator pos:line="176" pos:column="40">)<pos:position pos:line="176" pos:column="41"/></operator> <operator pos:line="176" pos:column="42">*<pos:position pos:line="176" pos:column="43"/></operator><name pos:line="176" pos:column="43">src<pos:position pos:line="176" pos:column="46"/></name></expr></argument>)<pos:position pos:line="176" pos:column="47"/></argument_list></call> <operator pos:line="176" pos:column="48">||<pos:position pos:line="176" pos:column="50"/></operator> <operator pos:line="176" pos:column="51">*<pos:position pos:line="176" pos:column="52"/></operator><name pos:line="176" pos:column="52">src<pos:position pos:line="176" pos:column="55"/></name> <operator pos:line="176" pos:column="56">==<pos:position pos:line="176" pos:column="58"/></operator> <literal type="char" pos:line="176" pos:column="59">'.'<pos:position pos:line="176" pos:column="62"/></literal> <operator pos:line="176" pos:column="63">||<pos:position pos:line="176" pos:column="65"/></operator> <operator pos:line="176" pos:column="66">*<pos:position pos:line="176" pos:column="67"/></operator><name pos:line="176" pos:column="67">src<pos:position pos:line="176" pos:column="70"/></name> <operator pos:line="176" pos:column="71">==<pos:position pos:line="176" pos:column="73"/></operator> <literal type="char" pos:line="176" pos:column="74">'-'<pos:position pos:line="176" pos:column="77"/></literal> <operator pos:line="176" pos:column="78">||<pos:position pos:line="176" pos:column="80"/></operator> <operator pos:line="176" pos:column="81">*<pos:position pos:line="176" pos:column="82"/></operator><name pos:line="176" pos:column="82">src<pos:position pos:line="176" pos:column="85"/></name> <operator pos:line="176" pos:column="86">==<pos:position pos:line="176" pos:column="88"/></operator> <literal type="char" pos:line="176" pos:column="89">'='<pos:position pos:line="176" pos:column="92"/></literal><operator pos:line="176" pos:column="92">)<pos:position pos:line="176" pos:column="93"/></operator></expr>)<pos:position pos:line="176" pos:column="94"/></condition>
	<block pos:line="177" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="178" pos:column="11">*<pos:position pos:line="178" pos:column="12"/></operator><name pos:line="178" pos:column="12">cp<pos:position pos:line="178" pos:column="14"/></name><operator pos:line="178" pos:column="14">++<pos:position pos:line="178" pos:column="16"/></operator> <operator pos:line="178" pos:column="17">=<pos:position pos:line="178" pos:column="18"/></operator> <operator pos:line="178" pos:column="19">*<pos:position pos:line="178" pos:column="20"/></operator><name pos:line="178" pos:column="20">src<pos:position pos:line="178" pos:column="23"/></name><operator pos:line="178" pos:column="23">++<pos:position pos:line="178" pos:column="25"/></operator></expr>;<pos:position pos:line="178" pos:column="26"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="179" pos:column="11">count<pos:position pos:line="179" pos:column="16"/></name><operator pos:line="179" pos:column="16">++<pos:position pos:line="179" pos:column="18"/></operator></expr>;<pos:position pos:line="179" pos:column="19"/></expr_stmt>
	}<pos:position pos:line="180" pos:column="10"/></block></while>
	<expr_stmt><expr><operator pos:line="181" pos:column="9">*<pos:position pos:line="181" pos:column="10"/></operator><name pos:line="181" pos:column="10">cp<pos:position pos:line="181" pos:column="12"/></name> <operator pos:line="181" pos:column="13">=<pos:position pos:line="181" pos:column="14"/></operator> <literal type="number" pos:line="181" pos:column="15">0<pos:position pos:line="181" pos:column="16"/></literal></expr>;<pos:position pos:line="181" pos:column="17"/></expr_stmt>
      }<pos:position pos:line="182" pos:column="8"/></block></else></if>

      <if pos:line="184" pos:column="7">if <condition pos:line="184" pos:column="10">(<expr><operator pos:line="184" pos:column="11">!<pos:position pos:line="184" pos:column="12"/></operator><operator pos:line="184" pos:column="12">*<pos:position pos:line="184" pos:column="13"/></operator><name pos:line="184" pos:column="13">src<pos:position pos:line="184" pos:column="16"/></name></expr>)<pos:position pos:line="184" pos:column="17"/></condition><then pos:line="184" pos:column="17">
	<block type="pseudo"><break pos:line="185" pos:column="9">break;<pos:position pos:line="185" pos:column="15"/></break></block></then></if> <comment type="block" pos:line="185" pos:column="16">/* bad format */</comment>

      <expr_stmt><expr><name pos:line="187" pos:column="7">ch<pos:position pos:line="187" pos:column="9"/></name> <operator pos:line="187" pos:column="10">=<pos:position pos:line="187" pos:column="11"/></operator> <operator pos:line="187" pos:column="12">*<pos:position pos:line="187" pos:column="13"/></operator><name pos:line="187" pos:column="13">src<pos:position pos:line="187" pos:column="16"/></name><operator pos:line="187" pos:column="16">++<pos:position pos:line="187" pos:column="18"/></operator></expr>;<pos:position pos:line="187" pos:column="19"/></expr_stmt> <comment type="block" pos:line="187" pos:column="20">/* save the character to switch on */</comment>

      <if pos:line="189" pos:column="7">if <condition pos:line="189" pos:column="10">(<expr><name pos:line="189" pos:column="11">flags<pos:position pos:line="189" pos:column="16"/></name> <operator pos:line="189" pos:column="17">&amp;<pos:position pos:line="189" pos:column="22"/></operator> <name pos:line="189" pos:column="19">MUTT_FORMAT_OPTIONAL<pos:position pos:line="189" pos:column="39"/></name></expr>)<pos:position pos:line="189" pos:column="40"/></condition><then pos:line="189" pos:column="40">
      <block pos:line="190" pos:column="7">{
        <if pos:line="191" pos:column="9">if <condition pos:line="191" pos:column="12">(<expr><operator pos:line="191" pos:column="13">*<pos:position pos:line="191" pos:column="14"/></operator><name pos:line="191" pos:column="14">src<pos:position pos:line="191" pos:column="17"/></name> <operator pos:line="191" pos:column="18">!=<pos:position pos:line="191" pos:column="20"/></operator> <literal type="char" pos:line="191" pos:column="21">'?'<pos:position pos:line="191" pos:column="24"/></literal></expr>)<pos:position pos:line="191" pos:column="25"/></condition><then pos:line="191" pos:column="25">
          <block type="pseudo"><break pos:line="192" pos:column="11">break;<pos:position pos:line="192" pos:column="17"/></break></block></then></if> <comment type="block" pos:line="192" pos:column="18">/* bad format */</comment>
        <expr_stmt><expr><name pos:line="193" pos:column="9">src<pos:position pos:line="193" pos:column="12"/></name><operator pos:line="193" pos:column="12">++<pos:position pos:line="193" pos:column="14"/></operator></expr>;<pos:position pos:line="193" pos:column="15"/></expr_stmt>

        <comment type="block" pos:line="195" pos:column="9">/* eat the `if' part of the string */</comment>
        <expr_stmt><expr><name pos:line="196" pos:column="9">cp<pos:position pos:line="196" pos:column="11"/></name> <operator pos:line="196" pos:column="12">=<pos:position pos:line="196" pos:column="13"/></operator> <name pos:line="196" pos:column="14">ifstring<pos:position pos:line="196" pos:column="22"/></name></expr>;<pos:position pos:line="196" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name pos:line="197" pos:column="9">count<pos:position pos:line="197" pos:column="14"/></name> <operator pos:line="197" pos:column="15">=<pos:position pos:line="197" pos:column="16"/></operator> <literal type="number" pos:line="197" pos:column="17">0<pos:position pos:line="197" pos:column="18"/></literal></expr>;<pos:position pos:line="197" pos:column="19"/></expr_stmt>
        <while pos:line="198" pos:column="9">while <condition pos:line="198" pos:column="15">(<expr><name pos:line="198" pos:column="16">count<pos:position pos:line="198" pos:column="21"/></name> <operator pos:line="198" pos:column="22">&lt;<pos:position pos:line="198" pos:column="26"/></operator> <sizeof pos:line="198" pos:column="24">sizeof <argument_list pos:line="198" pos:column="31">(<argument><expr><name pos:line="198" pos:column="32">ifstring<pos:position pos:line="198" pos:column="40"/></name></expr></argument>)<pos:position pos:line="198" pos:column="41"/></argument_list></sizeof> <operator pos:line="198" pos:column="42">&amp;&amp;<pos:position pos:line="198" pos:column="52"/></operator> <operator pos:line="198" pos:column="45">*<pos:position pos:line="198" pos:column="46"/></operator><name pos:line="198" pos:column="46">src<pos:position pos:line="198" pos:column="49"/></name> <operator pos:line="198" pos:column="50">&amp;&amp;<pos:position pos:line="198" pos:column="60"/></operator> <operator pos:line="198" pos:column="53">*<pos:position pos:line="198" pos:column="54"/></operator><name pos:line="198" pos:column="54">src<pos:position pos:line="198" pos:column="57"/></name> <operator pos:line="198" pos:column="58">!=<pos:position pos:line="198" pos:column="60"/></operator> <literal type="char" pos:line="198" pos:column="61">'?'<pos:position pos:line="198" pos:column="64"/></literal> <operator pos:line="198" pos:column="65">&amp;&amp;<pos:position pos:line="198" pos:column="75"/></operator> <operator pos:line="198" pos:column="68">*<pos:position pos:line="198" pos:column="69"/></operator><name pos:line="198" pos:column="69">src<pos:position pos:line="198" pos:column="72"/></name> <operator pos:line="198" pos:column="73">!=<pos:position pos:line="198" pos:column="75"/></operator> <literal type="char" pos:line="198" pos:column="76">'&amp;'<pos:position pos:line="198" pos:column="83"/></literal></expr>)<pos:position pos:line="198" pos:column="80"/></condition>
	<block pos:line="199" pos:column="9">{
          <expr_stmt><expr><operator pos:line="200" pos:column="11">*<pos:position pos:line="200" pos:column="12"/></operator><name pos:line="200" pos:column="12">cp<pos:position pos:line="200" pos:column="14"/></name><operator pos:line="200" pos:column="14">++<pos:position pos:line="200" pos:column="16"/></operator> <operator pos:line="200" pos:column="17">=<pos:position pos:line="200" pos:column="18"/></operator> <operator pos:line="200" pos:column="19">*<pos:position pos:line="200" pos:column="20"/></operator><name pos:line="200" pos:column="20">src<pos:position pos:line="200" pos:column="23"/></name><operator pos:line="200" pos:column="23">++<pos:position pos:line="200" pos:column="25"/></operator></expr>;<pos:position pos:line="200" pos:column="26"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="201" pos:column="11">count<pos:position pos:line="201" pos:column="16"/></name><operator pos:line="201" pos:column="16">++<pos:position pos:line="201" pos:column="18"/></operator></expr>;<pos:position pos:line="201" pos:column="19"/></expr_stmt>
	}<pos:position pos:line="202" pos:column="10"/></block></while>
        <expr_stmt><expr><operator pos:line="203" pos:column="9">*<pos:position pos:line="203" pos:column="10"/></operator><name pos:line="203" pos:column="10">cp<pos:position pos:line="203" pos:column="12"/></name> <operator pos:line="203" pos:column="13">=<pos:position pos:line="203" pos:column="14"/></operator> <literal type="number" pos:line="203" pos:column="15">0<pos:position pos:line="203" pos:column="16"/></literal></expr>;<pos:position pos:line="203" pos:column="17"/></expr_stmt>

	<comment type="block" pos:line="205" pos:column="9">/* eat the `else' part of the string (optional) */</comment>
	<if pos:line="206" pos:column="9">if <condition pos:line="206" pos:column="12">(<expr><operator pos:line="206" pos:column="13">*<pos:position pos:line="206" pos:column="14"/></operator><name pos:line="206" pos:column="14">src<pos:position pos:line="206" pos:column="17"/></name> <operator pos:line="206" pos:column="18">==<pos:position pos:line="206" pos:column="20"/></operator> <literal type="char" pos:line="206" pos:column="21">'&amp;'<pos:position pos:line="206" pos:column="28"/></literal></expr>)<pos:position pos:line="206" pos:column="25"/></condition><then pos:line="206" pos:column="25">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="207" pos:column="11">src<pos:position pos:line="207" pos:column="14"/></name><operator pos:line="207" pos:column="14">++<pos:position pos:line="207" pos:column="16"/></operator></expr>;<pos:position pos:line="207" pos:column="17"/></expr_stmt></block></then></if> <comment type="block" pos:line="207" pos:column="18">/* skip the &amp; */</comment>
	<expr_stmt><expr><name pos:line="208" pos:column="9">cp<pos:position pos:line="208" pos:column="11"/></name> <operator pos:line="208" pos:column="12">=<pos:position pos:line="208" pos:column="13"/></operator> <name pos:line="208" pos:column="14">elsestring<pos:position pos:line="208" pos:column="24"/></name></expr>;<pos:position pos:line="208" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name pos:line="209" pos:column="9">count<pos:position pos:line="209" pos:column="14"/></name> <operator pos:line="209" pos:column="15">=<pos:position pos:line="209" pos:column="16"/></operator> <literal type="number" pos:line="209" pos:column="17">0<pos:position pos:line="209" pos:column="18"/></literal></expr>;<pos:position pos:line="209" pos:column="19"/></expr_stmt>
	<while pos:line="210" pos:column="9">while <condition pos:line="210" pos:column="15">(<expr><name pos:line="210" pos:column="16">count<pos:position pos:line="210" pos:column="21"/></name> <operator pos:line="210" pos:column="22">&lt;<pos:position pos:line="210" pos:column="26"/></operator> <sizeof pos:line="210" pos:column="24">sizeof <argument_list pos:line="210" pos:column="31">(<argument><expr><name pos:line="210" pos:column="32">elsestring<pos:position pos:line="210" pos:column="42"/></name></expr></argument>)<pos:position pos:line="210" pos:column="43"/></argument_list></sizeof> <operator pos:line="210" pos:column="44">&amp;&amp;<pos:position pos:line="210" pos:column="54"/></operator> <operator pos:line="210" pos:column="47">*<pos:position pos:line="210" pos:column="48"/></operator><name pos:line="210" pos:column="48">src<pos:position pos:line="210" pos:column="51"/></name> <operator pos:line="210" pos:column="52">&amp;&amp;<pos:position pos:line="210" pos:column="62"/></operator> <operator pos:line="210" pos:column="55">*<pos:position pos:line="210" pos:column="56"/></operator><name pos:line="210" pos:column="56">src<pos:position pos:line="210" pos:column="59"/></name> <operator pos:line="210" pos:column="60">!=<pos:position pos:line="210" pos:column="62"/></operator> <literal type="char" pos:line="210" pos:column="63">'?'<pos:position pos:line="210" pos:column="66"/></literal></expr>)<pos:position pos:line="210" pos:column="67"/></condition>
	<block pos:line="211" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="212" pos:column="11">*<pos:position pos:line="212" pos:column="12"/></operator><name pos:line="212" pos:column="12">cp<pos:position pos:line="212" pos:column="14"/></name><operator pos:line="212" pos:column="14">++<pos:position pos:line="212" pos:column="16"/></operator> <operator pos:line="212" pos:column="17">=<pos:position pos:line="212" pos:column="18"/></operator> <operator pos:line="212" pos:column="19">*<pos:position pos:line="212" pos:column="20"/></operator><name pos:line="212" pos:column="20">src<pos:position pos:line="212" pos:column="23"/></name><operator pos:line="212" pos:column="23">++<pos:position pos:line="212" pos:column="25"/></operator></expr>;<pos:position pos:line="212" pos:column="26"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="213" pos:column="11">count<pos:position pos:line="213" pos:column="16"/></name><operator pos:line="213" pos:column="16">++<pos:position pos:line="213" pos:column="18"/></operator></expr>;<pos:position pos:line="213" pos:column="19"/></expr_stmt>
	}<pos:position pos:line="214" pos:column="10"/></block></while>
	<expr_stmt><expr><operator pos:line="215" pos:column="9">*<pos:position pos:line="215" pos:column="10"/></operator><name pos:line="215" pos:column="10">cp<pos:position pos:line="215" pos:column="12"/></name> <operator pos:line="215" pos:column="13">=<pos:position pos:line="215" pos:column="14"/></operator> <literal type="number" pos:line="215" pos:column="15">0<pos:position pos:line="215" pos:column="16"/></literal></expr>;<pos:position pos:line="215" pos:column="17"/></expr_stmt>

	<if pos:line="217" pos:column="9">if <condition pos:line="217" pos:column="12">(<expr><operator pos:line="217" pos:column="13">!<pos:position pos:line="217" pos:column="14"/></operator><operator pos:line="217" pos:column="14">*<pos:position pos:line="217" pos:column="15"/></operator><name pos:line="217" pos:column="15">src<pos:position pos:line="217" pos:column="18"/></name></expr>)<pos:position pos:line="217" pos:column="19"/></condition><then pos:line="217" pos:column="19">
	  <block type="pseudo"><break pos:line="218" pos:column="11">break;<pos:position pos:line="218" pos:column="17"/></break></block></then></if> <comment type="block" pos:line="218" pos:column="18">/* bad format */</comment>

        <expr_stmt><expr><name pos:line="220" pos:column="9">src<pos:position pos:line="220" pos:column="12"/></name><operator pos:line="220" pos:column="12">++<pos:position pos:line="220" pos:column="14"/></operator></expr>;<pos:position pos:line="220" pos:column="15"/></expr_stmt> <comment type="block" pos:line="220" pos:column="16">/* move past the trailing `?' */</comment>
      }<pos:position pos:line="221" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="223" pos:column="7">/* handle generic cases first */</comment>
      <if pos:line="224" pos:column="7">if <condition pos:line="224" pos:column="10">(<expr><name pos:line="224" pos:column="11">ch<pos:position pos:line="224" pos:column="13"/></name> <operator pos:line="224" pos:column="14">==<pos:position pos:line="224" pos:column="16"/></operator> <literal type="char" pos:line="224" pos:column="17">'&gt;'<pos:position pos:line="224" pos:column="23"/></literal> <operator pos:line="224" pos:column="21">||<pos:position pos:line="224" pos:column="23"/></operator> <name pos:line="224" pos:column="24">ch<pos:position pos:line="224" pos:column="26"/></name> <operator pos:line="224" pos:column="27">==<pos:position pos:line="224" pos:column="29"/></operator> <literal type="char" pos:line="224" pos:column="30">'*'<pos:position pos:line="224" pos:column="33"/></literal></expr>)<pos:position pos:line="224" pos:column="34"/></condition><then pos:line="224" pos:column="34">
      <block pos:line="225" pos:column="7">{
	<comment type="block" pos:line="226" pos:column="9">/* %&gt;X: right justify to EOL, left takes precedence
	 * %*X: right justify to EOL, right takes precedence */</comment>
	<decl_stmt><decl><type><name pos:line="228" pos:column="9">int<pos:position pos:line="228" pos:column="12"/></name></type> <name pos:line="228" pos:column="13">soft<pos:position pos:line="228" pos:column="17"/></name> <init pos:line="228" pos:column="18">= <expr><name pos:line="228" pos:column="20">ch<pos:position pos:line="228" pos:column="22"/></name> <operator pos:line="228" pos:column="23">==<pos:position pos:line="228" pos:column="25"/></operator> <literal type="char" pos:line="228" pos:column="26">'*'<pos:position pos:line="228" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="228" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="229" pos:column="9">int<pos:position pos:line="229" pos:column="12"/></name></type> <name pos:line="229" pos:column="13">pl<pos:position pos:line="229" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="229" pos:column="17">pw<pos:position pos:line="229" pos:column="19"/></name></decl>;<pos:position pos:line="229" pos:column="20"/></decl_stmt>
	<if pos:line="230" pos:column="9">if <condition pos:line="230" pos:column="12">(<expr><operator pos:line="230" pos:column="13">(<pos:position pos:line="230" pos:column="14"/></operator><name pos:line="230" pos:column="14">pl<pos:position pos:line="230" pos:column="16"/></name> <operator pos:line="230" pos:column="17">=<pos:position pos:line="230" pos:column="18"/></operator> <call><name pos:line="230" pos:column="19">mutt_charlen<pos:position pos:line="230" pos:column="31"/></name> <argument_list pos:line="230" pos:column="32">(<argument><expr><name pos:line="230" pos:column="33">src<pos:position pos:line="230" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="230" pos:column="38">&amp;<pos:position pos:line="230" pos:column="43"/></operator><name pos:line="230" pos:column="39">pw<pos:position pos:line="230" pos:column="41"/></name></expr></argument>)<pos:position pos:line="230" pos:column="42"/></argument_list></call><operator pos:line="230" pos:column="42">)<pos:position pos:line="230" pos:column="43"/></operator> <operator pos:line="230" pos:column="44">&lt;=<pos:position pos:line="230" pos:column="49"/></operator> <literal type="number" pos:line="230" pos:column="47">0<pos:position pos:line="230" pos:column="48"/></literal></expr>)<pos:position pos:line="230" pos:column="49"/></condition><then pos:line="230" pos:column="49">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="231" pos:column="11">pl<pos:position pos:line="231" pos:column="13"/></name> <operator pos:line="231" pos:column="14">=<pos:position pos:line="231" pos:column="15"/></operator> <name pos:line="231" pos:column="16">pw<pos:position pos:line="231" pos:column="18"/></name> <operator pos:line="231" pos:column="19">=<pos:position pos:line="231" pos:column="20"/></operator> <literal type="number" pos:line="231" pos:column="21">1<pos:position pos:line="231" pos:column="22"/></literal></expr>;<pos:position pos:line="231" pos:column="23"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="233" pos:column="9">/* see if there's room to add content, else ignore */</comment>
	<if pos:line="234" pos:column="9">if <condition pos:line="234" pos:column="12">(<expr><operator pos:line="234" pos:column="13">(<pos:position pos:line="234" pos:column="14"/></operator><name pos:line="234" pos:column="14">col<pos:position pos:line="234" pos:column="17"/></name> <operator pos:line="234" pos:column="18">&lt;<pos:position pos:line="234" pos:column="22"/></operator> <name pos:line="234" pos:column="20">cols<pos:position pos:line="234" pos:column="24"/></name> <operator pos:line="234" pos:column="25">&amp;&amp;<pos:position pos:line="234" pos:column="35"/></operator> <name pos:line="234" pos:column="28">wlen<pos:position pos:line="234" pos:column="32"/></name> <operator pos:line="234" pos:column="33">&lt;<pos:position pos:line="234" pos:column="37"/></operator> <name pos:line="234" pos:column="35">destlen<pos:position pos:line="234" pos:column="42"/></name><operator pos:line="234" pos:column="42">)<pos:position pos:line="234" pos:column="43"/></operator> <operator pos:line="234" pos:column="44">||<pos:position pos:line="234" pos:column="46"/></operator> <name pos:line="234" pos:column="47">soft<pos:position pos:line="234" pos:column="51"/></name></expr>)<pos:position pos:line="234" pos:column="52"/></condition><then pos:line="234" pos:column="52">
	<block pos:line="235" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="236" pos:column="11">int<pos:position pos:line="236" pos:column="14"/></name></type> <name pos:line="236" pos:column="15">pad<pos:position pos:line="236" pos:column="18"/></name></decl>;<pos:position pos:line="236" pos:column="19"/></decl_stmt>

	  <comment type="block" pos:line="238" pos:column="11">/* get contents after padding */</comment>
	  <expr_stmt><expr><call><name pos:line="239" pos:column="11">mutt_FormatString<pos:position pos:line="239" pos:column="28"/></name> <argument_list pos:line="239" pos:column="29">(<argument><expr><name pos:line="239" pos:column="30">buf<pos:position pos:line="239" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="239" pos:column="35">sizeof <argument_list pos:line="239" pos:column="42">(<argument><expr><name pos:line="239" pos:column="43">buf<pos:position pos:line="239" pos:column="46"/></name></expr></argument>)<pos:position pos:line="239" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="239" pos:column="49">0<pos:position pos:line="239" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="239" pos:column="52">cols<pos:position pos:line="239" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="239" pos:column="58">src<pos:position pos:line="239" pos:column="61"/></name> <operator pos:line="239" pos:column="62">+<pos:position pos:line="239" pos:column="63"/></operator> <name pos:line="239" pos:column="64">pl<pos:position pos:line="239" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="239" pos:column="68">callback<pos:position pos:line="239" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="239" pos:column="78">data<pos:position pos:line="239" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="239" pos:column="84">flags<pos:position pos:line="239" pos:column="89"/></name></expr></argument>)<pos:position pos:line="239" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="91"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="240" pos:column="11">len<pos:position pos:line="240" pos:column="14"/></name> <operator pos:line="240" pos:column="15">=<pos:position pos:line="240" pos:column="16"/></operator> <call><name pos:line="240" pos:column="17">mutt_strlen<pos:position pos:line="240" pos:column="28"/></name> <argument_list pos:line="240" pos:column="29">(<argument><expr><name pos:line="240" pos:column="30">buf<pos:position pos:line="240" pos:column="33"/></name></expr></argument>)<pos:position pos:line="240" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="35"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="241" pos:column="11">wid<pos:position pos:line="241" pos:column="14"/></name> <operator pos:line="241" pos:column="15">=<pos:position pos:line="241" pos:column="16"/></operator> <call><name pos:line="241" pos:column="17">mutt_strwidth<pos:position pos:line="241" pos:column="30"/></name> <argument_list pos:line="241" pos:column="31">(<argument><expr><name pos:line="241" pos:column="32">buf<pos:position pos:line="241" pos:column="35"/></name></expr></argument>)<pos:position pos:line="241" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="37"/></expr_stmt>

	  <expr_stmt><expr><name pos:line="243" pos:column="11">pad<pos:position pos:line="243" pos:column="14"/></name> <operator pos:line="243" pos:column="15">=<pos:position pos:line="243" pos:column="16"/></operator> <operator pos:line="243" pos:column="17">(<pos:position pos:line="243" pos:column="18"/></operator><name pos:line="243" pos:column="18">cols<pos:position pos:line="243" pos:column="22"/></name> <operator pos:line="243" pos:column="23">-<pos:position pos:line="243" pos:column="24"/></operator> <name pos:line="243" pos:column="25">col<pos:position pos:line="243" pos:column="28"/></name> <operator pos:line="243" pos:column="29">-<pos:position pos:line="243" pos:column="30"/></operator> <name pos:line="243" pos:column="31">wid<pos:position pos:line="243" pos:column="34"/></name><operator pos:line="243" pos:column="34">)<pos:position pos:line="243" pos:column="35"/></operator> <operator pos:line="243" pos:column="36">/<pos:position pos:line="243" pos:column="37"/></operator> <name pos:line="243" pos:column="38">pw<pos:position pos:line="243" pos:column="40"/></name></expr>;<pos:position pos:line="243" pos:column="41"/></expr_stmt>
	  <if pos:line="244" pos:column="11">if <condition pos:line="244" pos:column="14">(<expr><name pos:line="244" pos:column="15">pad<pos:position pos:line="244" pos:column="18"/></name> <operator pos:line="244" pos:column="19">&gt;=<pos:position pos:line="244" pos:column="24"/></operator> <literal type="number" pos:line="244" pos:column="22">0<pos:position pos:line="244" pos:column="23"/></literal></expr>)<pos:position pos:line="244" pos:column="24"/></condition><then pos:line="244" pos:column="24">
	  <block pos:line="245" pos:column="11">{
            <comment type="block" pos:line="246" pos:column="13">/* try to consume as many columns as we can, if we don't have
             * memory for that, use as much memory as possible */</comment>
            <if pos:line="248" pos:column="13">if <condition pos:line="248" pos:column="16">(<expr><name pos:line="248" pos:column="17">wlen<pos:position pos:line="248" pos:column="21"/></name> <operator pos:line="248" pos:column="22">+<pos:position pos:line="248" pos:column="23"/></operator> <operator pos:line="248" pos:column="24">(<pos:position pos:line="248" pos:column="25"/></operator><name pos:line="248" pos:column="25">pad<pos:position pos:line="248" pos:column="28"/></name> <operator pos:line="248" pos:column="29">*<pos:position pos:line="248" pos:column="30"/></operator> <name pos:line="248" pos:column="31">pl<pos:position pos:line="248" pos:column="33"/></name><operator pos:line="248" pos:column="33">)<pos:position pos:line="248" pos:column="34"/></operator> <operator pos:line="248" pos:column="35">+<pos:position pos:line="248" pos:column="36"/></operator> <name pos:line="248" pos:column="37">len<pos:position pos:line="248" pos:column="40"/></name> <operator pos:line="248" pos:column="41">&gt;<pos:position pos:line="248" pos:column="45"/></operator> <name pos:line="248" pos:column="43">destlen<pos:position pos:line="248" pos:column="50"/></name></expr>)<pos:position pos:line="248" pos:column="51"/></condition><then pos:line="248" pos:column="51">
              <block type="pseudo"><expr_stmt><expr><name pos:line="249" pos:column="15">pad<pos:position pos:line="249" pos:column="18"/></name> <operator pos:line="249" pos:column="19">=<pos:position pos:line="249" pos:column="20"/></operator> <ternary><condition><expr><operator pos:line="249" pos:column="21">(<pos:position pos:line="249" pos:column="22"/></operator><name pos:line="249" pos:column="22">destlen<pos:position pos:line="249" pos:column="29"/></name> <operator pos:line="249" pos:column="30">&gt;<pos:position pos:line="249" pos:column="34"/></operator> <name pos:line="249" pos:column="32">wlen<pos:position pos:line="249" pos:column="36"/></name> <operator pos:line="249" pos:column="37">+<pos:position pos:line="249" pos:column="38"/></operator> <name pos:line="249" pos:column="39">len<pos:position pos:line="249" pos:column="42"/></name><operator pos:line="249" pos:column="42">)<pos:position pos:line="249" pos:column="43"/></operator></expr> ?<pos:position pos:line="249" pos:column="45"/></condition><then pos:line="249" pos:column="45"> <expr><operator pos:line="249" pos:column="46">(<pos:position pos:line="249" pos:column="47"/></operator><operator pos:line="249" pos:column="47">(<pos:position pos:line="249" pos:column="48"/></operator><name pos:line="249" pos:column="48">destlen<pos:position pos:line="249" pos:column="55"/></name> <operator pos:line="249" pos:column="56">-<pos:position pos:line="249" pos:column="57"/></operator> <name pos:line="249" pos:column="58">wlen<pos:position pos:line="249" pos:column="62"/></name> <operator pos:line="249" pos:column="63">-<pos:position pos:line="249" pos:column="64"/></operator> <name pos:line="249" pos:column="65">len<pos:position pos:line="249" pos:column="68"/></name><operator pos:line="249" pos:column="68">)<pos:position pos:line="249" pos:column="69"/></operator> <operator pos:line="249" pos:column="70">/<pos:position pos:line="249" pos:column="71"/></operator> <name pos:line="249" pos:column="72">pl<pos:position pos:line="249" pos:column="74"/></name><operator pos:line="249" pos:column="74">)<pos:position pos:line="249" pos:column="75"/></operator></expr> <pos:position pos:line="249" pos:column="76"/></then><else pos:line="249" pos:column="76">: <expr><literal type="number" pos:line="249" pos:column="78">0<pos:position pos:line="249" pos:column="79"/></literal></expr></else></ternary></expr>;<pos:position pos:line="249" pos:column="80"/></expr_stmt></block></then>
            <else pos:line="250" pos:column="13">else
            <block pos:line="251" pos:column="13">{
              <comment type="block" pos:line="252" pos:column="15">/* Add pre-spacing to make multi-column pad characters and
               * the contents after padding line up */</comment>
              <while pos:line="254" pos:column="15">while <condition pos:line="254" pos:column="21">(<expr><operator pos:line="254" pos:column="22">(<pos:position pos:line="254" pos:column="23"/></operator><name pos:line="254" pos:column="23">col<pos:position pos:line="254" pos:column="26"/></name> <operator pos:line="254" pos:column="27">+<pos:position pos:line="254" pos:column="28"/></operator> <operator pos:line="254" pos:column="29">(<pos:position pos:line="254" pos:column="30"/></operator><name pos:line="254" pos:column="30">pad<pos:position pos:line="254" pos:column="33"/></name> <operator pos:line="254" pos:column="34">*<pos:position pos:line="254" pos:column="35"/></operator> <name pos:line="254" pos:column="36">pw<pos:position pos:line="254" pos:column="38"/></name><operator pos:line="254" pos:column="38">)<pos:position pos:line="254" pos:column="39"/></operator> <operator pos:line="254" pos:column="40">+<pos:position pos:line="254" pos:column="41"/></operator> <name pos:line="254" pos:column="42">wid<pos:position pos:line="254" pos:column="45"/></name> <operator pos:line="254" pos:column="46">&lt;<pos:position pos:line="254" pos:column="50"/></operator> <name pos:line="254" pos:column="48">cols<pos:position pos:line="254" pos:column="52"/></name><operator pos:line="254" pos:column="52">)<pos:position pos:line="254" pos:column="53"/></operator> <operator pos:line="254" pos:column="54">&amp;&amp;<pos:position pos:line="254" pos:column="64"/></operator>
                     <operator pos:line="255" pos:column="22">(<pos:position pos:line="255" pos:column="23"/></operator><name pos:line="255" pos:column="23">wlen<pos:position pos:line="255" pos:column="27"/></name> <operator pos:line="255" pos:column="28">+<pos:position pos:line="255" pos:column="29"/></operator> <operator pos:line="255" pos:column="30">(<pos:position pos:line="255" pos:column="31"/></operator><name pos:line="255" pos:column="31">pad<pos:position pos:line="255" pos:column="34"/></name> <operator pos:line="255" pos:column="35">*<pos:position pos:line="255" pos:column="36"/></operator> <name pos:line="255" pos:column="37">pl<pos:position pos:line="255" pos:column="39"/></name><operator pos:line="255" pos:column="39">)<pos:position pos:line="255" pos:column="40"/></operator> <operator pos:line="255" pos:column="41">+<pos:position pos:line="255" pos:column="42"/></operator> <name pos:line="255" pos:column="43">len<pos:position pos:line="255" pos:column="46"/></name> <operator pos:line="255" pos:column="47">&lt;<pos:position pos:line="255" pos:column="51"/></operator> <name pos:line="255" pos:column="49">destlen<pos:position pos:line="255" pos:column="56"/></name><operator pos:line="255" pos:column="56">)<pos:position pos:line="255" pos:column="57"/></operator></expr>)<pos:position pos:line="255" pos:column="58"/></condition>
              <block pos:line="256" pos:column="15">{
                <expr_stmt><expr><operator pos:line="257" pos:column="17">*<pos:position pos:line="257" pos:column="18"/></operator><name pos:line="257" pos:column="18">wptr<pos:position pos:line="257" pos:column="22"/></name><operator pos:line="257" pos:column="22">++<pos:position pos:line="257" pos:column="24"/></operator> <operator pos:line="257" pos:column="25">=<pos:position pos:line="257" pos:column="26"/></operator> <literal type="char" pos:line="257" pos:column="27">' '<pos:position pos:line="257" pos:column="30"/></literal></expr>;<pos:position pos:line="257" pos:column="31"/></expr_stmt>
                <expr_stmt><expr><name pos:line="258" pos:column="17">wlen<pos:position pos:line="258" pos:column="21"/></name><operator pos:line="258" pos:column="21">++<pos:position pos:line="258" pos:column="23"/></operator></expr>;<pos:position pos:line="258" pos:column="24"/></expr_stmt>
                <expr_stmt><expr><name pos:line="259" pos:column="17">col<pos:position pos:line="259" pos:column="20"/></name><operator pos:line="259" pos:column="20">++<pos:position pos:line="259" pos:column="22"/></operator></expr>;<pos:position pos:line="259" pos:column="23"/></expr_stmt>
              }<pos:position pos:line="260" pos:column="16"/></block></while>
            }<pos:position pos:line="261" pos:column="14"/></block></else></if>
	    <while pos:line="262" pos:column="13">while <condition pos:line="262" pos:column="19">(<expr><name pos:line="262" pos:column="20">pad<pos:position pos:line="262" pos:column="23"/></name><operator pos:line="262" pos:column="23">--<pos:position pos:line="262" pos:column="25"/></operator> <operator pos:line="262" pos:column="26">&gt;<pos:position pos:line="262" pos:column="30"/></operator> <literal type="number" pos:line="262" pos:column="28">0<pos:position pos:line="262" pos:column="29"/></literal></expr>)<pos:position pos:line="262" pos:column="30"/></condition>
	    <block pos:line="263" pos:column="13">{
	      <expr_stmt><expr><call><name pos:line="264" pos:column="15">memcpy<pos:position pos:line="264" pos:column="21"/></name> <argument_list pos:line="264" pos:column="22">(<argument><expr><name pos:line="264" pos:column="23">wptr<pos:position pos:line="264" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="264" pos:column="29">src<pos:position pos:line="264" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="264" pos:column="34">pl<pos:position pos:line="264" pos:column="36"/></name></expr></argument>)<pos:position pos:line="264" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="38"/></expr_stmt>
	      <expr_stmt><expr><name pos:line="265" pos:column="15">wptr<pos:position pos:line="265" pos:column="19"/></name> <operator pos:line="265" pos:column="20">+=<pos:position pos:line="265" pos:column="22"/></operator> <name pos:line="265" pos:column="23">pl<pos:position pos:line="265" pos:column="25"/></name></expr>;<pos:position pos:line="265" pos:column="26"/></expr_stmt>
	      <expr_stmt><expr><name pos:line="266" pos:column="15">wlen<pos:position pos:line="266" pos:column="19"/></name> <operator pos:line="266" pos:column="20">+=<pos:position pos:line="266" pos:column="22"/></operator> <name pos:line="266" pos:column="23">pl<pos:position pos:line="266" pos:column="25"/></name></expr>;<pos:position pos:line="266" pos:column="26"/></expr_stmt>
	      <expr_stmt><expr><name pos:line="267" pos:column="15">col<pos:position pos:line="267" pos:column="18"/></name> <operator pos:line="267" pos:column="19">+=<pos:position pos:line="267" pos:column="21"/></operator> <name pos:line="267" pos:column="22">pw<pos:position pos:line="267" pos:column="24"/></name></expr>;<pos:position pos:line="267" pos:column="25"/></expr_stmt>
	    }<pos:position pos:line="268" pos:column="14"/></block></while>
	  }<pos:position pos:line="269" pos:column="12"/></block></then>
	  <elseif pos:line="270" pos:column="11">else <if pos:line="270" pos:column="16">if <condition pos:line="270" pos:column="19">(<expr><name pos:line="270" pos:column="20">soft<pos:position pos:line="270" pos:column="24"/></name> <operator pos:line="270" pos:column="25">&amp;&amp;<pos:position pos:line="270" pos:column="35"/></operator> <name pos:line="270" pos:column="28">pad<pos:position pos:line="270" pos:column="31"/></name> <operator pos:line="270" pos:column="32">&lt;<pos:position pos:line="270" pos:column="36"/></operator> <literal type="number" pos:line="270" pos:column="34">0<pos:position pos:line="270" pos:column="35"/></literal></expr>)<pos:position pos:line="270" pos:column="36"/></condition><then pos:line="270" pos:column="36">
	  <block pos:line="271" pos:column="11">{
	    <decl_stmt><decl><type><name pos:line="272" pos:column="13">int<pos:position pos:line="272" pos:column="16"/></name></type> <name pos:line="272" pos:column="17">offset<pos:position pos:line="272" pos:column="23"/></name> <init pos:line="272" pos:column="24">= <expr><ternary><condition><expr><operator pos:line="272" pos:column="26">(<pos:position pos:line="272" pos:column="27"/></operator><operator pos:line="272" pos:column="27">(<pos:position pos:line="272" pos:column="28"/></operator><name pos:line="272" pos:column="28">flags<pos:position pos:line="272" pos:column="33"/></name> <operator pos:line="272" pos:column="34">&amp;<pos:position pos:line="272" pos:column="39"/></operator> <name pos:line="272" pos:column="36">MUTT_FORMAT_ARROWCURSOR<pos:position pos:line="272" pos:column="59"/></name><operator pos:line="272" pos:column="59">)<pos:position pos:line="272" pos:column="60"/></operator> <operator pos:line="272" pos:column="61">&amp;&amp;<pos:position pos:line="272" pos:column="71"/></operator> <call><name pos:line="272" pos:column="64">option<pos:position pos:line="272" pos:column="70"/></name> <argument_list pos:line="272" pos:column="71">(<argument><expr><name pos:line="272" pos:column="72">OPTARROWCURSOR<pos:position pos:line="272" pos:column="86"/></name></expr></argument>)<pos:position pos:line="272" pos:column="87"/></argument_list></call><operator pos:line="272" pos:column="87">)<pos:position pos:line="272" pos:column="88"/></operator></expr> ?<pos:position pos:line="272" pos:column="90"/></condition><then pos:line="272" pos:column="90"> <expr><literal type="number" pos:line="272" pos:column="91">3<pos:position pos:line="272" pos:column="92"/></literal></expr> <pos:position pos:line="272" pos:column="93"/></then><else pos:line="272" pos:column="93">: <expr><literal type="number" pos:line="272" pos:column="95">0<pos:position pos:line="272" pos:column="96"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="272" pos:column="97"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="273" pos:column="13">int<pos:position pos:line="273" pos:column="16"/></name></type> <name pos:line="273" pos:column="17">avail_cols<pos:position pos:line="273" pos:column="27"/></name> <init pos:line="273" pos:column="28">= <expr><ternary><condition><expr><operator pos:line="273" pos:column="30">(<pos:position pos:line="273" pos:column="31"/></operator><name pos:line="273" pos:column="31">cols<pos:position pos:line="273" pos:column="35"/></name> <operator pos:line="273" pos:column="36">&gt;<pos:position pos:line="273" pos:column="40"/></operator> <name pos:line="273" pos:column="38">offset<pos:position pos:line="273" pos:column="44"/></name><operator pos:line="273" pos:column="44">)<pos:position pos:line="273" pos:column="45"/></operator></expr> ?<pos:position pos:line="273" pos:column="47"/></condition><then pos:line="273" pos:column="47"> <expr><operator pos:line="273" pos:column="48">(<pos:position pos:line="273" pos:column="49"/></operator><name pos:line="273" pos:column="49">cols<pos:position pos:line="273" pos:column="53"/></name> <operator pos:line="273" pos:column="54">-<pos:position pos:line="273" pos:column="55"/></operator> <name pos:line="273" pos:column="56">offset<pos:position pos:line="273" pos:column="62"/></name><operator pos:line="273" pos:column="62">)<pos:position pos:line="273" pos:column="63"/></operator></expr> <pos:position pos:line="273" pos:column="64"/></then><else pos:line="273" pos:column="64">: <expr><literal type="number" pos:line="273" pos:column="66">0<pos:position pos:line="273" pos:column="67"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="273" pos:column="68"/></decl_stmt>
	    <comment type="block" pos:line="274" pos:column="13">/* \0-terminate dest for length computation in mutt_wstr_trunc() */</comment>
	    <expr_stmt><expr><operator pos:line="275" pos:column="13">*<pos:position pos:line="275" pos:column="14"/></operator><name pos:line="275" pos:column="14">wptr<pos:position pos:line="275" pos:column="18"/></name> <operator pos:line="275" pos:column="19">=<pos:position pos:line="275" pos:column="20"/></operator> <literal type="number" pos:line="275" pos:column="21">0<pos:position pos:line="275" pos:column="22"/></literal></expr>;<pos:position pos:line="275" pos:column="23"/></expr_stmt>
	    <comment type="block" pos:line="276" pos:column="13">/* make sure right part is at most as wide as display */</comment>
	    <expr_stmt><expr><name pos:line="277" pos:column="13">len<pos:position pos:line="277" pos:column="16"/></name> <operator pos:line="277" pos:column="17">=<pos:position pos:line="277" pos:column="18"/></operator> <call><name pos:line="277" pos:column="19">mutt_wstr_trunc<pos:position pos:line="277" pos:column="34"/></name> <argument_list pos:line="277" pos:column="35">(<argument><expr><name pos:line="277" pos:column="36">buf<pos:position pos:line="277" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="277" pos:column="41">destlen<pos:position pos:line="277" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="277" pos:column="50">avail_cols<pos:position pos:line="277" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="277" pos:column="62">&amp;<pos:position pos:line="277" pos:column="67"/></operator><name pos:line="277" pos:column="63">wid<pos:position pos:line="277" pos:column="66"/></name></expr></argument>)<pos:position pos:line="277" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="277" pos:column="68"/></expr_stmt>
	    <comment type="block" pos:line="278" pos:column="13">/* truncate left so that right part fits completely in */</comment>
	    <expr_stmt><expr><name pos:line="279" pos:column="13">wlen<pos:position pos:line="279" pos:column="17"/></name> <operator pos:line="279" pos:column="18">=<pos:position pos:line="279" pos:column="19"/></operator> <call><name pos:line="279" pos:column="20">mutt_wstr_trunc<pos:position pos:line="279" pos:column="35"/></name> <argument_list pos:line="279" pos:column="36">(<argument><expr><name pos:line="279" pos:column="37">dest<pos:position pos:line="279" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="279" pos:column="43">destlen<pos:position pos:line="279" pos:column="50"/></name> <operator pos:line="279" pos:column="51">-<pos:position pos:line="279" pos:column="52"/></operator> <name pos:line="279" pos:column="53">len<pos:position pos:line="279" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="279" pos:column="58">avail_cols<pos:position pos:line="279" pos:column="68"/></name> <operator pos:line="279" pos:column="69">-<pos:position pos:line="279" pos:column="70"/></operator> <name pos:line="279" pos:column="71">wid<pos:position pos:line="279" pos:column="74"/></name></expr></argument>, <argument><expr><operator pos:line="279" pos:column="76">&amp;<pos:position pos:line="279" pos:column="81"/></operator><name pos:line="279" pos:column="77">col<pos:position pos:line="279" pos:column="80"/></name></expr></argument>)<pos:position pos:line="279" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="279" pos:column="82"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="280" pos:column="13">wptr<pos:position pos:line="280" pos:column="17"/></name> <operator pos:line="280" pos:column="18">=<pos:position pos:line="280" pos:column="19"/></operator> <name pos:line="280" pos:column="20">dest<pos:position pos:line="280" pos:column="24"/></name> <operator pos:line="280" pos:column="25">+<pos:position pos:line="280" pos:column="26"/></operator> <name pos:line="280" pos:column="27">wlen<pos:position pos:line="280" pos:column="31"/></name></expr>;<pos:position pos:line="280" pos:column="32"/></expr_stmt>
            <comment type="block" pos:line="281" pos:column="13">/* Multi-column characters may be truncated in the middle.
             * Add spacing so the right hand side lines up. */</comment>
            <while pos:line="283" pos:column="13">while <condition pos:line="283" pos:column="19">(<expr><operator pos:line="283" pos:column="20">(<pos:position pos:line="283" pos:column="21"/></operator><name pos:line="283" pos:column="21">col<pos:position pos:line="283" pos:column="24"/></name> <operator pos:line="283" pos:column="25">+<pos:position pos:line="283" pos:column="26"/></operator> <name pos:line="283" pos:column="27">wid<pos:position pos:line="283" pos:column="30"/></name> <operator pos:line="283" pos:column="31">&lt;<pos:position pos:line="283" pos:column="35"/></operator> <name pos:line="283" pos:column="33">avail_cols<pos:position pos:line="283" pos:column="43"/></name><operator pos:line="283" pos:column="43">)<pos:position pos:line="283" pos:column="44"/></operator> <operator pos:line="283" pos:column="45">&amp;&amp;<pos:position pos:line="283" pos:column="55"/></operator> <operator pos:line="283" pos:column="48">(<pos:position pos:line="283" pos:column="49"/></operator><name pos:line="283" pos:column="49">wlen<pos:position pos:line="283" pos:column="53"/></name> <operator pos:line="283" pos:column="54">+<pos:position pos:line="283" pos:column="55"/></operator> <name pos:line="283" pos:column="56">len<pos:position pos:line="283" pos:column="59"/></name> <operator pos:line="283" pos:column="60">&lt;<pos:position pos:line="283" pos:column="64"/></operator> <name pos:line="283" pos:column="62">destlen<pos:position pos:line="283" pos:column="69"/></name><operator pos:line="283" pos:column="69">)<pos:position pos:line="283" pos:column="70"/></operator></expr>)<pos:position pos:line="283" pos:column="71"/></condition>
            <block pos:line="284" pos:column="13">{
              <expr_stmt><expr><operator pos:line="285" pos:column="15">*<pos:position pos:line="285" pos:column="16"/></operator><name pos:line="285" pos:column="16">wptr<pos:position pos:line="285" pos:column="20"/></name><operator pos:line="285" pos:column="20">++<pos:position pos:line="285" pos:column="22"/></operator> <operator pos:line="285" pos:column="23">=<pos:position pos:line="285" pos:column="24"/></operator> <literal type="char" pos:line="285" pos:column="25">' '<pos:position pos:line="285" pos:column="28"/></literal></expr>;<pos:position pos:line="285" pos:column="29"/></expr_stmt>
              <expr_stmt><expr><name pos:line="286" pos:column="15">wlen<pos:position pos:line="286" pos:column="19"/></name><operator pos:line="286" pos:column="19">++<pos:position pos:line="286" pos:column="21"/></operator></expr>;<pos:position pos:line="286" pos:column="22"/></expr_stmt>
              <expr_stmt><expr><name pos:line="287" pos:column="15">col<pos:position pos:line="287" pos:column="18"/></name><operator pos:line="287" pos:column="18">++<pos:position pos:line="287" pos:column="20"/></operator></expr>;<pos:position pos:line="287" pos:column="21"/></expr_stmt>
            }<pos:position pos:line="288" pos:column="14"/></block></while>
	  }<pos:position pos:line="289" pos:column="12"/></block></then></if></elseif></if>
	  <if pos:line="290" pos:column="11">if <condition pos:line="290" pos:column="14">(<expr><name pos:line="290" pos:column="15">len<pos:position pos:line="290" pos:column="18"/></name> <operator pos:line="290" pos:column="19">+<pos:position pos:line="290" pos:column="20"/></operator> <name pos:line="290" pos:column="21">wlen<pos:position pos:line="290" pos:column="25"/></name> <operator pos:line="290" pos:column="26">&gt;<pos:position pos:line="290" pos:column="30"/></operator> <name pos:line="290" pos:column="28">destlen<pos:position pos:line="290" pos:column="35"/></name></expr>)<pos:position pos:line="290" pos:column="36"/></condition><then pos:line="290" pos:column="36">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="291" pos:column="13">len<pos:position pos:line="291" pos:column="16"/></name> <operator pos:line="291" pos:column="17">=<pos:position pos:line="291" pos:column="18"/></operator> <call><name pos:line="291" pos:column="19">mutt_wstr_trunc<pos:position pos:line="291" pos:column="34"/></name> <argument_list pos:line="291" pos:column="35">(<argument><expr><name pos:line="291" pos:column="36">buf<pos:position pos:line="291" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="291" pos:column="41">destlen<pos:position pos:line="291" pos:column="48"/></name> <operator pos:line="291" pos:column="49">-<pos:position pos:line="291" pos:column="50"/></operator> <name pos:line="291" pos:column="51">wlen<pos:position pos:line="291" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="291" pos:column="57">cols<pos:position pos:line="291" pos:column="61"/></name> <operator pos:line="291" pos:column="62">-<pos:position pos:line="291" pos:column="63"/></operator> <name pos:line="291" pos:column="64">col<pos:position pos:line="291" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="291" pos:column="69">NULL<pos:position pos:line="291" pos:column="73"/></name></expr></argument>)<pos:position pos:line="291" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="75"/></expr_stmt></block></then></if>
	  <expr_stmt><expr><call><name pos:line="292" pos:column="11">memcpy<pos:position pos:line="292" pos:column="17"/></name> <argument_list pos:line="292" pos:column="18">(<argument><expr><name pos:line="292" pos:column="19">wptr<pos:position pos:line="292" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="292" pos:column="25">buf<pos:position pos:line="292" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="292" pos:column="30">len<pos:position pos:line="292" pos:column="33"/></name></expr></argument>)<pos:position pos:line="292" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="35"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="293" pos:column="11">wptr<pos:position pos:line="293" pos:column="15"/></name> <operator pos:line="293" pos:column="16">+=<pos:position pos:line="293" pos:column="18"/></operator> <name pos:line="293" pos:column="19">len<pos:position pos:line="293" pos:column="22"/></name></expr>;<pos:position pos:line="293" pos:column="23"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="294" pos:column="11">wlen<pos:position pos:line="294" pos:column="15"/></name> <operator pos:line="294" pos:column="16">+=<pos:position pos:line="294" pos:column="18"/></operator> <name pos:line="294" pos:column="19">len<pos:position pos:line="294" pos:column="22"/></name></expr>;<pos:position pos:line="294" pos:column="23"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="295" pos:column="11">col<pos:position pos:line="295" pos:column="14"/></name> <operator pos:line="295" pos:column="15">+=<pos:position pos:line="295" pos:column="17"/></operator> <name pos:line="295" pos:column="18">wid<pos:position pos:line="295" pos:column="21"/></name></expr>;<pos:position pos:line="295" pos:column="22"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="296" pos:column="11">src<pos:position pos:line="296" pos:column="14"/></name> <operator pos:line="296" pos:column="15">+=<pos:position pos:line="296" pos:column="17"/></operator> <name pos:line="296" pos:column="18">pl<pos:position pos:line="296" pos:column="20"/></name></expr>;<pos:position pos:line="296" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="297" pos:column="10"/></block></then></if>
	<break pos:line="298" pos:column="9">break;<pos:position pos:line="298" pos:column="15"/></break> <comment type="block" pos:line="298" pos:column="16">/* skip rest of input */</comment>
      }<pos:position pos:line="299" pos:column="8"/></block></then>
      <elseif pos:line="300" pos:column="7">else <if pos:line="300" pos:column="12">if <condition pos:line="300" pos:column="15">(<expr><name pos:line="300" pos:column="16">ch<pos:position pos:line="300" pos:column="18"/></name> <operator pos:line="300" pos:column="19">==<pos:position pos:line="300" pos:column="21"/></operator> <literal type="char" pos:line="300" pos:column="22">'|'<pos:position pos:line="300" pos:column="25"/></literal></expr>)<pos:position pos:line="300" pos:column="26"/></condition><then pos:line="300" pos:column="26">
      <block pos:line="301" pos:column="7">{
	<comment type="block" pos:line="302" pos:column="9">/* pad to EOL */</comment>
	<decl_stmt><decl><type><name pos:line="303" pos:column="9">int<pos:position pos:line="303" pos:column="12"/></name></type> <name pos:line="303" pos:column="13">pl<pos:position pos:line="303" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="303" pos:column="17">pw<pos:position pos:line="303" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="303" pos:column="21">c<pos:position pos:line="303" pos:column="22"/></name></decl>;<pos:position pos:line="303" pos:column="23"/></decl_stmt>
	<if pos:line="304" pos:column="9">if <condition pos:line="304" pos:column="12">(<expr><operator pos:line="304" pos:column="13">(<pos:position pos:line="304" pos:column="14"/></operator><name pos:line="304" pos:column="14">pl<pos:position pos:line="304" pos:column="16"/></name> <operator pos:line="304" pos:column="17">=<pos:position pos:line="304" pos:column="18"/></operator> <call><name pos:line="304" pos:column="19">mutt_charlen<pos:position pos:line="304" pos:column="31"/></name> <argument_list pos:line="304" pos:column="32">(<argument><expr><name pos:line="304" pos:column="33">src<pos:position pos:line="304" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="304" pos:column="38">&amp;<pos:position pos:line="304" pos:column="43"/></operator><name pos:line="304" pos:column="39">pw<pos:position pos:line="304" pos:column="41"/></name></expr></argument>)<pos:position pos:line="304" pos:column="42"/></argument_list></call><operator pos:line="304" pos:column="42">)<pos:position pos:line="304" pos:column="43"/></operator> <operator pos:line="304" pos:column="44">&lt;=<pos:position pos:line="304" pos:column="49"/></operator> <literal type="number" pos:line="304" pos:column="47">0<pos:position pos:line="304" pos:column="48"/></literal></expr>)<pos:position pos:line="304" pos:column="49"/></condition><then pos:line="304" pos:column="49">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="305" pos:column="11">pl<pos:position pos:line="305" pos:column="13"/></name> <operator pos:line="305" pos:column="14">=<pos:position pos:line="305" pos:column="15"/></operator> <name pos:line="305" pos:column="16">pw<pos:position pos:line="305" pos:column="18"/></name> <operator pos:line="305" pos:column="19">=<pos:position pos:line="305" pos:column="20"/></operator> <literal type="number" pos:line="305" pos:column="21">1<pos:position pos:line="305" pos:column="22"/></literal></expr>;<pos:position pos:line="305" pos:column="23"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="307" pos:column="9">/* see if there's room to add content, else ignore */</comment>
	<if pos:line="308" pos:column="9">if <condition pos:line="308" pos:column="12">(<expr><name pos:line="308" pos:column="13">col<pos:position pos:line="308" pos:column="16"/></name> <operator pos:line="308" pos:column="17">&lt;<pos:position pos:line="308" pos:column="21"/></operator> <name pos:line="308" pos:column="19">cols<pos:position pos:line="308" pos:column="23"/></name> <operator pos:line="308" pos:column="24">&amp;&amp;<pos:position pos:line="308" pos:column="34"/></operator> <name pos:line="308" pos:column="27">wlen<pos:position pos:line="308" pos:column="31"/></name> <operator pos:line="308" pos:column="32">&lt;<pos:position pos:line="308" pos:column="36"/></operator> <name pos:line="308" pos:column="34">destlen<pos:position pos:line="308" pos:column="41"/></name></expr>)<pos:position pos:line="308" pos:column="42"/></condition><then pos:line="308" pos:column="42">
	<block pos:line="309" pos:column="9">{
	  <expr_stmt><expr><name pos:line="310" pos:column="11">c<pos:position pos:line="310" pos:column="12"/></name> <operator pos:line="310" pos:column="13">=<pos:position pos:line="310" pos:column="14"/></operator> <operator pos:line="310" pos:column="15">(<pos:position pos:line="310" pos:column="16"/></operator><name pos:line="310" pos:column="16">cols<pos:position pos:line="310" pos:column="20"/></name> <operator pos:line="310" pos:column="21">-<pos:position pos:line="310" pos:column="22"/></operator> <name pos:line="310" pos:column="23">col<pos:position pos:line="310" pos:column="26"/></name><operator pos:line="310" pos:column="26">)<pos:position pos:line="310" pos:column="27"/></operator> <operator pos:line="310" pos:column="28">/<pos:position pos:line="310" pos:column="29"/></operator> <name pos:line="310" pos:column="30">pw<pos:position pos:line="310" pos:column="32"/></name></expr>;<pos:position pos:line="310" pos:column="33"/></expr_stmt>
	  <if pos:line="311" pos:column="11">if <condition pos:line="311" pos:column="14">(<expr><name pos:line="311" pos:column="15">c<pos:position pos:line="311" pos:column="16"/></name> <operator pos:line="311" pos:column="17">&gt;<pos:position pos:line="311" pos:column="21"/></operator> <literal type="number" pos:line="311" pos:column="19">0<pos:position pos:line="311" pos:column="20"/></literal> <operator pos:line="311" pos:column="21">&amp;&amp;<pos:position pos:line="311" pos:column="31"/></operator> <name pos:line="311" pos:column="24">wlen<pos:position pos:line="311" pos:column="28"/></name> <operator pos:line="311" pos:column="29">+<pos:position pos:line="311" pos:column="30"/></operator> <operator pos:line="311" pos:column="31">(<pos:position pos:line="311" pos:column="32"/></operator><name pos:line="311" pos:column="32">c<pos:position pos:line="311" pos:column="33"/></name> <operator pos:line="311" pos:column="34">*<pos:position pos:line="311" pos:column="35"/></operator> <name pos:line="311" pos:column="36">pl<pos:position pos:line="311" pos:column="38"/></name><operator pos:line="311" pos:column="38">)<pos:position pos:line="311" pos:column="39"/></operator> <operator pos:line="311" pos:column="40">&gt;<pos:position pos:line="311" pos:column="44"/></operator> <name pos:line="311" pos:column="42">destlen<pos:position pos:line="311" pos:column="49"/></name></expr>)<pos:position pos:line="311" pos:column="50"/></condition><then pos:line="311" pos:column="50">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="312" pos:column="13">c<pos:position pos:line="312" pos:column="14"/></name> <operator pos:line="312" pos:column="15">=<pos:position pos:line="312" pos:column="16"/></operator> <operator pos:line="312" pos:column="17">(<pos:position pos:line="312" pos:column="18"/></operator><call pos:line="312" pos:column="18">(<name pos:line="312" pos:column="19">signed<pos:position pos:line="312" pos:column="25"/></name>)<argument_list pos:line="312" pos:column="26">(<argument><expr><name pos:line="312" pos:column="27">destlen<pos:position pos:line="312" pos:column="34"/></name> <operator pos:line="312" pos:column="35">-<pos:position pos:line="312" pos:column="36"/></operator> <name pos:line="312" pos:column="37">wlen<pos:position pos:line="312" pos:column="41"/></name></expr></argument>)<pos:position pos:line="312" pos:column="42"/></argument_list></call><operator pos:line="312" pos:column="42">)<pos:position pos:line="312" pos:column="43"/></operator> <operator pos:line="312" pos:column="44">/<pos:position pos:line="312" pos:column="45"/></operator> <name pos:line="312" pos:column="46">pl<pos:position pos:line="312" pos:column="48"/></name></expr>;<pos:position pos:line="312" pos:column="49"/></expr_stmt></block></then></if>
	  <while pos:line="313" pos:column="11">while <condition pos:line="313" pos:column="17">(<expr><name pos:line="313" pos:column="18">c<pos:position pos:line="313" pos:column="19"/></name> <operator pos:line="313" pos:column="20">&gt;<pos:position pos:line="313" pos:column="24"/></operator> <literal type="number" pos:line="313" pos:column="22">0<pos:position pos:line="313" pos:column="23"/></literal></expr>)<pos:position pos:line="313" pos:column="24"/></condition>
	  <block pos:line="314" pos:column="11">{
	    <expr_stmt><expr><call><name pos:line="315" pos:column="13">memcpy<pos:position pos:line="315" pos:column="19"/></name> <argument_list pos:line="315" pos:column="20">(<argument><expr><name pos:line="315" pos:column="21">wptr<pos:position pos:line="315" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="315" pos:column="27">src<pos:position pos:line="315" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="315" pos:column="32">pl<pos:position pos:line="315" pos:column="34"/></name></expr></argument>)<pos:position pos:line="315" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="315" pos:column="36"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="316" pos:column="13">wptr<pos:position pos:line="316" pos:column="17"/></name> <operator pos:line="316" pos:column="18">+=<pos:position pos:line="316" pos:column="20"/></operator> <name pos:line="316" pos:column="21">pl<pos:position pos:line="316" pos:column="23"/></name></expr>;<pos:position pos:line="316" pos:column="24"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="317" pos:column="13">wlen<pos:position pos:line="317" pos:column="17"/></name> <operator pos:line="317" pos:column="18">+=<pos:position pos:line="317" pos:column="20"/></operator> <name pos:line="317" pos:column="21">pl<pos:position pos:line="317" pos:column="23"/></name></expr>;<pos:position pos:line="317" pos:column="24"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="318" pos:column="13">col<pos:position pos:line="318" pos:column="16"/></name> <operator pos:line="318" pos:column="17">+=<pos:position pos:line="318" pos:column="19"/></operator> <name pos:line="318" pos:column="20">pw<pos:position pos:line="318" pos:column="22"/></name></expr>;<pos:position pos:line="318" pos:column="23"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="319" pos:column="13">c<pos:position pos:line="319" pos:column="14"/></name><operator pos:line="319" pos:column="14">--<pos:position pos:line="319" pos:column="16"/></operator></expr>;<pos:position pos:line="319" pos:column="17"/></expr_stmt>
	  }<pos:position pos:line="320" pos:column="12"/></block></while>
	  <expr_stmt><expr><name pos:line="321" pos:column="11">src<pos:position pos:line="321" pos:column="14"/></name> <operator pos:line="321" pos:column="15">+=<pos:position pos:line="321" pos:column="17"/></operator> <name pos:line="321" pos:column="18">pl<pos:position pos:line="321" pos:column="20"/></name></expr>;<pos:position pos:line="321" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="322" pos:column="10"/></block></then></if>
	<break pos:line="323" pos:column="9">break;<pos:position pos:line="323" pos:column="15"/></break> <comment type="block" pos:line="323" pos:column="16">/* skip rest of input */</comment>
      }<pos:position pos:line="324" pos:column="8"/></block></then></if></elseif>
      <else pos:line="325" pos:column="7">else
      <block pos:line="326" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="327" pos:column="9">short<pos:position pos:line="327" pos:column="14"/></name></type> <name pos:line="327" pos:column="15">tolower<pos:position pos:line="327" pos:column="22"/></name> <init pos:line="327" pos:column="23">=  <expr><literal type="number" pos:line="327" pos:column="26">0<pos:position pos:line="327" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="327" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="328" pos:column="9">short<pos:position pos:line="328" pos:column="14"/></name></type> <name pos:line="328" pos:column="15">nodots<pos:position pos:line="328" pos:column="21"/></name>  <init pos:line="328" pos:column="23">= <expr><literal type="number" pos:line="328" pos:column="25">0<pos:position pos:line="328" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="328" pos:column="27"/></decl_stmt>
	
	<while pos:line="330" pos:column="9">while <condition pos:line="330" pos:column="15">(<expr><name pos:line="330" pos:column="16">ch<pos:position pos:line="330" pos:column="18"/></name> <operator pos:line="330" pos:column="19">==<pos:position pos:line="330" pos:column="21"/></operator> <literal type="char" pos:line="330" pos:column="22">'_'<pos:position pos:line="330" pos:column="25"/></literal> <operator pos:line="330" pos:column="26">||<pos:position pos:line="330" pos:column="28"/></operator> <name pos:line="330" pos:column="29">ch<pos:position pos:line="330" pos:column="31"/></name> <operator pos:line="330" pos:column="32">==<pos:position pos:line="330" pos:column="34"/></operator> <literal type="char" pos:line="330" pos:column="35">':'<pos:position pos:line="330" pos:column="38"/></literal></expr>)<pos:position pos:line="330" pos:column="39"/></condition> 
	<block pos:line="331" pos:column="9">{
	  <if pos:line="332" pos:column="11">if <condition pos:line="332" pos:column="14">(<expr><name pos:line="332" pos:column="15">ch<pos:position pos:line="332" pos:column="17"/></name> <operator pos:line="332" pos:column="18">==<pos:position pos:line="332" pos:column="20"/></operator> <literal type="char" pos:line="332" pos:column="21">'_'<pos:position pos:line="332" pos:column="24"/></literal></expr>)<pos:position pos:line="332" pos:column="25"/></condition><then pos:line="332" pos:column="25">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="333" pos:column="13">tolower<pos:position pos:line="333" pos:column="20"/></name> <operator pos:line="333" pos:column="21">=<pos:position pos:line="333" pos:column="22"/></operator> <literal type="number" pos:line="333" pos:column="23">1<pos:position pos:line="333" pos:column="24"/></literal></expr>;<pos:position pos:line="333" pos:column="25"/></expr_stmt></block></then>
	  <elseif pos:line="334" pos:column="11">else <if pos:line="334" pos:column="16">if <condition pos:line="334" pos:column="19">(<expr><name pos:line="334" pos:column="20">ch<pos:position pos:line="334" pos:column="22"/></name> <operator pos:line="334" pos:column="23">==<pos:position pos:line="334" pos:column="25"/></operator> <literal type="char" pos:line="334" pos:column="26">':'<pos:position pos:line="334" pos:column="29"/></literal></expr>)<pos:position pos:line="334" pos:column="30"/></condition><then pos:line="334" pos:column="30"> 
	    <block type="pseudo"><expr_stmt><expr><name pos:line="335" pos:column="13">nodots<pos:position pos:line="335" pos:column="19"/></name> <operator pos:line="335" pos:column="20">=<pos:position pos:line="335" pos:column="21"/></operator> <literal type="number" pos:line="335" pos:column="22">1<pos:position pos:line="335" pos:column="23"/></literal></expr>;<pos:position pos:line="335" pos:column="24"/></expr_stmt></block></then></if></elseif></if>
	  
	  <expr_stmt><expr><name pos:line="337" pos:column="11">ch<pos:position pos:line="337" pos:column="13"/></name> <operator pos:line="337" pos:column="14">=<pos:position pos:line="337" pos:column="15"/></operator> <operator pos:line="337" pos:column="16">*<pos:position pos:line="337" pos:column="17"/></operator><name pos:line="337" pos:column="17">src<pos:position pos:line="337" pos:column="20"/></name><operator pos:line="337" pos:column="20">++<pos:position pos:line="337" pos:column="22"/></operator></expr>;<pos:position pos:line="337" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="338" pos:column="10"/></block></while>
	
	<comment type="block" pos:line="340" pos:column="9">/* use callback function to handle this case */</comment>
	<expr_stmt><expr><name pos:line="341" pos:column="9">src<pos:position pos:line="341" pos:column="12"/></name> <operator pos:line="341" pos:column="13">=<pos:position pos:line="341" pos:column="14"/></operator> <call><name pos:line="341" pos:column="15">callback<pos:position pos:line="341" pos:column="23"/></name> <argument_list pos:line="341" pos:column="24">(<argument><expr><name pos:line="341" pos:column="25">buf<pos:position pos:line="341" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="341" pos:column="30">sizeof <argument_list pos:line="341" pos:column="37">(<argument><expr><name pos:line="341" pos:column="38">buf<pos:position pos:line="341" pos:column="41"/></name></expr></argument>)<pos:position pos:line="341" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="341" pos:column="44">col<pos:position pos:line="341" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="341" pos:column="49">cols<pos:position pos:line="341" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="341" pos:column="55">ch<pos:position pos:line="341" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="341" pos:column="59">src<pos:position pos:line="341" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="341" pos:column="64">prefix<pos:position pos:line="341" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="341" pos:column="72">ifstring<pos:position pos:line="341" pos:column="80"/></name></expr></argument>, <argument><expr><name pos:line="341" pos:column="82">elsestring<pos:position pos:line="341" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="341" pos:column="94">data<pos:position pos:line="341" pos:column="98"/></name></expr></argument>, <argument><expr><name pos:line="341" pos:column="100">flags<pos:position pos:line="341" pos:column="105"/></name></expr></argument>)<pos:position pos:line="341" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="341" pos:column="107"/></expr_stmt>

	<if pos:line="343" pos:column="9">if <condition pos:line="343" pos:column="12">(<expr><name pos:line="343" pos:column="13">tolower<pos:position pos:line="343" pos:column="20"/></name></expr>)<pos:position pos:line="343" pos:column="21"/></condition><then pos:line="343" pos:column="21">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="344" pos:column="11">mutt_strlower<pos:position pos:line="344" pos:column="24"/></name> <argument_list pos:line="344" pos:column="25">(<argument><expr><name pos:line="344" pos:column="26">buf<pos:position pos:line="344" pos:column="29"/></name></expr></argument>)<pos:position pos:line="344" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="344" pos:column="31"/></expr_stmt></block></then></if>
	<if pos:line="345" pos:column="9">if <condition pos:line="345" pos:column="12">(<expr><name pos:line="345" pos:column="13">nodots<pos:position pos:line="345" pos:column="19"/></name></expr>)<pos:position pos:line="345" pos:column="20"/></condition><then pos:line="345" pos:column="20"> 
	<block pos:line="346" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="347" pos:column="11">char<pos:position pos:line="347" pos:column="15"/></name> <modifier pos:line="347" pos:column="16">*<pos:position pos:line="347" pos:column="17"/></modifier></type><name pos:line="347" pos:column="17">p<pos:position pos:line="347" pos:column="18"/></name> <init pos:line="347" pos:column="19">= <expr><name pos:line="347" pos:column="21">buf<pos:position pos:line="347" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="347" pos:column="25"/></decl_stmt>
	  <for pos:line="348" pos:column="11">for <control pos:line="348" pos:column="15">(<init pos:line="348" pos:column="16">;<pos:position pos:line="348" pos:column="17"/></init> <condition><expr><operator pos:line="348" pos:column="18">*<pos:position pos:line="348" pos:column="19"/></operator><name pos:line="348" pos:column="19">p<pos:position pos:line="348" pos:column="20"/></name></expr>;<pos:position pos:line="348" pos:column="21"/></condition> <incr><expr><name pos:line="348" pos:column="22">p<pos:position pos:line="348" pos:column="23"/></name><operator pos:line="348" pos:column="23">++<pos:position pos:line="348" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="348" pos:column="26"/></control>
	    <block type="pseudo"><if pos:line="349" pos:column="13">if <condition pos:line="349" pos:column="16">(<expr><operator pos:line="349" pos:column="17">*<pos:position pos:line="349" pos:column="18"/></operator><name pos:line="349" pos:column="18">p<pos:position pos:line="349" pos:column="19"/></name> <operator pos:line="349" pos:column="20">==<pos:position pos:line="349" pos:column="22"/></operator> <literal type="char" pos:line="349" pos:column="23">'.'<pos:position pos:line="349" pos:column="26"/></literal></expr>)<pos:position pos:line="349" pos:column="27"/></condition><then pos:line="349" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="350" pos:column="17">*<pos:position pos:line="350" pos:column="18"/></operator><name pos:line="350" pos:column="18">p<pos:position pos:line="350" pos:column="19"/></name> <operator pos:line="350" pos:column="20">=<pos:position pos:line="350" pos:column="21"/></operator> <literal type="char" pos:line="350" pos:column="22">'_'<pos:position pos:line="350" pos:column="25"/></literal></expr>;<pos:position pos:line="350" pos:column="26"/></expr_stmt></block></then></if></block></for>
	}<pos:position pos:line="351" pos:column="10"/></block></then></if>
	
	<if pos:line="353" pos:column="9">if <condition pos:line="353" pos:column="12">(<expr><operator pos:line="353" pos:column="13">(<pos:position pos:line="353" pos:column="14"/></operator><name pos:line="353" pos:column="14">len<pos:position pos:line="353" pos:column="17"/></name> <operator pos:line="353" pos:column="18">=<pos:position pos:line="353" pos:column="19"/></operator> <call><name pos:line="353" pos:column="20">mutt_strlen<pos:position pos:line="353" pos:column="31"/></name> <argument_list pos:line="353" pos:column="32">(<argument><expr><name pos:line="353" pos:column="33">buf<pos:position pos:line="353" pos:column="36"/></name></expr></argument>)<pos:position pos:line="353" pos:column="37"/></argument_list></call><operator pos:line="353" pos:column="37">)<pos:position pos:line="353" pos:column="38"/></operator> <operator pos:line="353" pos:column="39">+<pos:position pos:line="353" pos:column="40"/></operator> <name pos:line="353" pos:column="41">wlen<pos:position pos:line="353" pos:column="45"/></name> <operator pos:line="353" pos:column="46">&gt;<pos:position pos:line="353" pos:column="50"/></operator> <name pos:line="353" pos:column="48">destlen<pos:position pos:line="353" pos:column="55"/></name></expr>)<pos:position pos:line="353" pos:column="56"/></condition><then pos:line="353" pos:column="56">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="354" pos:column="11">len<pos:position pos:line="354" pos:column="14"/></name> <operator pos:line="354" pos:column="15">=<pos:position pos:line="354" pos:column="16"/></operator> <call><name pos:line="354" pos:column="17">mutt_wstr_trunc<pos:position pos:line="354" pos:column="32"/></name> <argument_list pos:line="354" pos:column="33">(<argument><expr><name pos:line="354" pos:column="34">buf<pos:position pos:line="354" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="354" pos:column="39">destlen<pos:position pos:line="354" pos:column="46"/></name> <operator pos:line="354" pos:column="47">-<pos:position pos:line="354" pos:column="48"/></operator> <name pos:line="354" pos:column="49">wlen<pos:position pos:line="354" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="354" pos:column="55">cols<pos:position pos:line="354" pos:column="59"/></name> <operator pos:line="354" pos:column="60">-<pos:position pos:line="354" pos:column="61"/></operator> <name pos:line="354" pos:column="62">col<pos:position pos:line="354" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="354" pos:column="67">NULL<pos:position pos:line="354" pos:column="71"/></name></expr></argument>)<pos:position pos:line="354" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="354" pos:column="73"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="356" pos:column="9">memcpy<pos:position pos:line="356" pos:column="15"/></name> <argument_list pos:line="356" pos:column="16">(<argument><expr><name pos:line="356" pos:column="17">wptr<pos:position pos:line="356" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="356" pos:column="23">buf<pos:position pos:line="356" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="356" pos:column="28">len<pos:position pos:line="356" pos:column="31"/></name></expr></argument>)<pos:position pos:line="356" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="356" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name pos:line="357" pos:column="9">wptr<pos:position pos:line="357" pos:column="13"/></name> <operator pos:line="357" pos:column="14">+=<pos:position pos:line="357" pos:column="16"/></operator> <name pos:line="357" pos:column="17">len<pos:position pos:line="357" pos:column="20"/></name></expr>;<pos:position pos:line="357" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="358" pos:column="9">wlen<pos:position pos:line="358" pos:column="13"/></name> <operator pos:line="358" pos:column="14">+=<pos:position pos:line="358" pos:column="16"/></operator> <name pos:line="358" pos:column="17">len<pos:position pos:line="358" pos:column="20"/></name></expr>;<pos:position pos:line="358" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="359" pos:column="9">col<pos:position pos:line="359" pos:column="12"/></name> <operator pos:line="359" pos:column="13">+=<pos:position pos:line="359" pos:column="15"/></operator> <call><name pos:line="359" pos:column="16">mutt_strwidth<pos:position pos:line="359" pos:column="29"/></name> <argument_list pos:line="359" pos:column="30">(<argument><expr><name pos:line="359" pos:column="31">buf<pos:position pos:line="359" pos:column="34"/></name></expr></argument>)<pos:position pos:line="359" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="359" pos:column="36"/></expr_stmt>
      }<pos:position pos:line="360" pos:column="8"/></block></else></if>
    }<pos:position pos:line="361" pos:column="6"/></block></then>
    <elseif pos:line="362" pos:column="5">else <if pos:line="362" pos:column="10">if <condition pos:line="362" pos:column="13">(<expr><operator pos:line="362" pos:column="14">*<pos:position pos:line="362" pos:column="15"/></operator><name pos:line="362" pos:column="15">src<pos:position pos:line="362" pos:column="18"/></name> <operator pos:line="362" pos:column="19">==<pos:position pos:line="362" pos:column="21"/></operator> <literal type="char" pos:line="362" pos:column="22">'\\'<pos:position pos:line="362" pos:column="26"/></literal></expr>)<pos:position pos:line="362" pos:column="27"/></condition><then pos:line="362" pos:column="27">
    <block pos:line="363" pos:column="5">{
      <if pos:line="364" pos:column="7">if <condition pos:line="364" pos:column="10">(<expr><operator pos:line="364" pos:column="11">!<pos:position pos:line="364" pos:column="12"/></operator><operator pos:line="364" pos:column="12">*<pos:position pos:line="364" pos:column="13"/></operator><operator pos:line="364" pos:column="13">++<pos:position pos:line="364" pos:column="15"/></operator><name pos:line="364" pos:column="15">src<pos:position pos:line="364" pos:column="18"/></name></expr>)<pos:position pos:line="364" pos:column="19"/></condition><then pos:line="364" pos:column="19">
	<block type="pseudo"><break pos:line="365" pos:column="9">break;<pos:position pos:line="365" pos:column="15"/></break></block></then></if>
      <switch pos:line="366" pos:column="7">switch <condition pos:line="366" pos:column="14">(<expr><operator pos:line="366" pos:column="15">*<pos:position pos:line="366" pos:column="16"/></operator><name pos:line="366" pos:column="16">src<pos:position pos:line="366" pos:column="19"/></name></expr>)<pos:position pos:line="366" pos:column="20"/></condition>
      <block pos:line="367" pos:column="7">{
	<case pos:line="368" pos:column="9">case <expr><literal type="char" pos:line="368" pos:column="14">'n'<pos:position pos:line="368" pos:column="17"/></literal></expr>:<pos:position pos:line="368" pos:column="18"/></case>
	  <expr_stmt><expr><operator pos:line="369" pos:column="11">*<pos:position pos:line="369" pos:column="12"/></operator><name pos:line="369" pos:column="12">wptr<pos:position pos:line="369" pos:column="16"/></name> <operator pos:line="369" pos:column="17">=<pos:position pos:line="369" pos:column="18"/></operator> <literal type="char" pos:line="369" pos:column="19">'\n'<pos:position pos:line="369" pos:column="23"/></literal></expr>;<pos:position pos:line="369" pos:column="24"/></expr_stmt>
	  <break pos:line="370" pos:column="11">break;<pos:position pos:line="370" pos:column="17"/></break>
	<case pos:line="371" pos:column="9">case <expr><literal type="char" pos:line="371" pos:column="14">'t'<pos:position pos:line="371" pos:column="17"/></literal></expr>:<pos:position pos:line="371" pos:column="18"/></case>
	  <expr_stmt><expr><operator pos:line="372" pos:column="11">*<pos:position pos:line="372" pos:column="12"/></operator><name pos:line="372" pos:column="12">wptr<pos:position pos:line="372" pos:column="16"/></name> <operator pos:line="372" pos:column="17">=<pos:position pos:line="372" pos:column="18"/></operator> <literal type="char" pos:line="372" pos:column="19">'\t'<pos:position pos:line="372" pos:column="23"/></literal></expr>;<pos:position pos:line="372" pos:column="24"/></expr_stmt>
	  <break pos:line="373" pos:column="11">break;<pos:position pos:line="373" pos:column="17"/></break>
	<case pos:line="374" pos:column="9">case <expr><literal type="char" pos:line="374" pos:column="14">'r'<pos:position pos:line="374" pos:column="17"/></literal></expr>:<pos:position pos:line="374" pos:column="18"/></case>
	  <expr_stmt><expr><operator pos:line="375" pos:column="11">*<pos:position pos:line="375" pos:column="12"/></operator><name pos:line="375" pos:column="12">wptr<pos:position pos:line="375" pos:column="16"/></name> <operator pos:line="375" pos:column="17">=<pos:position pos:line="375" pos:column="18"/></operator> <literal type="char" pos:line="375" pos:column="19">'\r'<pos:position pos:line="375" pos:column="23"/></literal></expr>;<pos:position pos:line="375" pos:column="24"/></expr_stmt>
	  <break pos:line="376" pos:column="11">break;<pos:position pos:line="376" pos:column="17"/></break>
	<case pos:line="377" pos:column="9">case <expr><literal type="char" pos:line="377" pos:column="14">'f'<pos:position pos:line="377" pos:column="17"/></literal></expr>:<pos:position pos:line="377" pos:column="18"/></case>
	  <expr_stmt><expr><operator pos:line="378" pos:column="11">*<pos:position pos:line="378" pos:column="12"/></operator><name pos:line="378" pos:column="12">wptr<pos:position pos:line="378" pos:column="16"/></name> <operator pos:line="378" pos:column="17">=<pos:position pos:line="378" pos:column="18"/></operator> <literal type="char" pos:line="378" pos:column="19">'\f'<pos:position pos:line="378" pos:column="23"/></literal></expr>;<pos:position pos:line="378" pos:column="24"/></expr_stmt>
	  <break pos:line="379" pos:column="11">break;<pos:position pos:line="379" pos:column="17"/></break>
	<case pos:line="380" pos:column="9">case <expr><literal type="char" pos:line="380" pos:column="14">'v'<pos:position pos:line="380" pos:column="17"/></literal></expr>:<pos:position pos:line="380" pos:column="18"/></case>
	  <expr_stmt><expr><operator pos:line="381" pos:column="11">*<pos:position pos:line="381" pos:column="12"/></operator><name pos:line="381" pos:column="12">wptr<pos:position pos:line="381" pos:column="16"/></name> <operator pos:line="381" pos:column="17">=<pos:position pos:line="381" pos:column="18"/></operator> <literal type="char" pos:line="381" pos:column="19">'\v'<pos:position pos:line="381" pos:column="23"/></literal></expr>;<pos:position pos:line="381" pos:column="24"/></expr_stmt>
	  <break pos:line="382" pos:column="11">break;<pos:position pos:line="382" pos:column="17"/></break>
	<default pos:line="383" pos:column="9">default:<pos:position pos:line="383" pos:column="17"/></default>
	  <expr_stmt><expr><operator pos:line="384" pos:column="11">*<pos:position pos:line="384" pos:column="12"/></operator><name pos:line="384" pos:column="12">wptr<pos:position pos:line="384" pos:column="16"/></name> <operator pos:line="384" pos:column="17">=<pos:position pos:line="384" pos:column="18"/></operator> <operator pos:line="384" pos:column="19">*<pos:position pos:line="384" pos:column="20"/></operator><name pos:line="384" pos:column="20">src<pos:position pos:line="384" pos:column="23"/></name></expr>;<pos:position pos:line="384" pos:column="24"/></expr_stmt>
	  <break pos:line="385" pos:column="11">break;<pos:position pos:line="385" pos:column="17"/></break>
      }<pos:position pos:line="386" pos:column="8"/></block></switch>
      <expr_stmt><expr><name pos:line="387" pos:column="7">src<pos:position pos:line="387" pos:column="10"/></name><operator pos:line="387" pos:column="10">++<pos:position pos:line="387" pos:column="12"/></operator></expr>;<pos:position pos:line="387" pos:column="13"/></expr_stmt>
      <expr_stmt><expr><name pos:line="388" pos:column="7">wptr<pos:position pos:line="388" pos:column="11"/></name><operator pos:line="388" pos:column="11">++<pos:position pos:line="388" pos:column="13"/></operator></expr>;<pos:position pos:line="388" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><name pos:line="389" pos:column="7">wlen<pos:position pos:line="389" pos:column="11"/></name><operator pos:line="389" pos:column="11">++<pos:position pos:line="389" pos:column="13"/></operator></expr>;<pos:position pos:line="389" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><name pos:line="390" pos:column="7">col<pos:position pos:line="390" pos:column="10"/></name><operator pos:line="390" pos:column="10">++<pos:position pos:line="390" pos:column="12"/></operator></expr>;<pos:position pos:line="390" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="391" pos:column="6"/></block></then></if></elseif>
    <else pos:line="392" pos:column="5">else
    <block pos:line="393" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="394" pos:column="7">int<pos:position pos:line="394" pos:column="10"/></name></type> <name pos:line="394" pos:column="11">tmp<pos:position pos:line="394" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="394" pos:column="16">w<pos:position pos:line="394" pos:column="17"/></name></decl>;<pos:position pos:line="394" pos:column="18"/></decl_stmt>
      <comment type="block" pos:line="395" pos:column="7">/* in case of error, simply copy byte */</comment>
      <if pos:line="396" pos:column="7">if <condition pos:line="396" pos:column="10">(<expr><operator pos:line="396" pos:column="11">(<pos:position pos:line="396" pos:column="12"/></operator><name pos:line="396" pos:column="12">tmp<pos:position pos:line="396" pos:column="15"/></name> <operator pos:line="396" pos:column="16">=<pos:position pos:line="396" pos:column="17"/></operator> <call><name pos:line="396" pos:column="18">mutt_charlen<pos:position pos:line="396" pos:column="30"/></name> <argument_list pos:line="396" pos:column="31">(<argument><expr><name pos:line="396" pos:column="32">src<pos:position pos:line="396" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="396" pos:column="37">&amp;<pos:position pos:line="396" pos:column="42"/></operator><name pos:line="396" pos:column="38">w<pos:position pos:line="396" pos:column="39"/></name></expr></argument>)<pos:position pos:line="396" pos:column="40"/></argument_list></call><operator pos:line="396" pos:column="40">)<pos:position pos:line="396" pos:column="41"/></operator> <operator pos:line="396" pos:column="42">&lt;<pos:position pos:line="396" pos:column="46"/></operator> <literal type="number" pos:line="396" pos:column="44">0<pos:position pos:line="396" pos:column="45"/></literal></expr>)<pos:position pos:line="396" pos:column="46"/></condition><then pos:line="396" pos:column="46">
	<block type="pseudo"><expr_stmt><expr><name pos:line="397" pos:column="9">tmp<pos:position pos:line="397" pos:column="12"/></name> <operator pos:line="397" pos:column="13">=<pos:position pos:line="397" pos:column="14"/></operator> <name pos:line="397" pos:column="15">w<pos:position pos:line="397" pos:column="16"/></name> <operator pos:line="397" pos:column="17">=<pos:position pos:line="397" pos:column="18"/></operator> <literal type="number" pos:line="397" pos:column="19">1<pos:position pos:line="397" pos:column="20"/></literal></expr>;<pos:position pos:line="397" pos:column="21"/></expr_stmt></block></then></if>
      <if pos:line="398" pos:column="7">if <condition pos:line="398" pos:column="10">(<expr><name pos:line="398" pos:column="11">tmp<pos:position pos:line="398" pos:column="14"/></name> <operator pos:line="398" pos:column="15">&gt;<pos:position pos:line="398" pos:column="19"/></operator> <literal type="number" pos:line="398" pos:column="17">0<pos:position pos:line="398" pos:column="18"/></literal> <operator pos:line="398" pos:column="19">&amp;&amp;<pos:position pos:line="398" pos:column="29"/></operator> <name pos:line="398" pos:column="22">wlen<pos:position pos:line="398" pos:column="26"/></name> <operator pos:line="398" pos:column="27">+<pos:position pos:line="398" pos:column="28"/></operator> <name pos:line="398" pos:column="29">tmp<pos:position pos:line="398" pos:column="32"/></name> <operator pos:line="398" pos:column="33">&lt;<pos:position pos:line="398" pos:column="37"/></operator> <name pos:line="398" pos:column="35">destlen<pos:position pos:line="398" pos:column="42"/></name></expr>)<pos:position pos:line="398" pos:column="43"/></condition><then pos:line="398" pos:column="43">
      <block pos:line="399" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="400" pos:column="9">memcpy<pos:position pos:line="400" pos:column="15"/></name> <argument_list pos:line="400" pos:column="16">(<argument><expr><name pos:line="400" pos:column="17">wptr<pos:position pos:line="400" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="400" pos:column="23">src<pos:position pos:line="400" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="400" pos:column="28">tmp<pos:position pos:line="400" pos:column="31"/></name></expr></argument>)<pos:position pos:line="400" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="400" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="401" pos:column="9">wptr<pos:position pos:line="401" pos:column="13"/></name> <operator pos:line="401" pos:column="14">+=<pos:position pos:line="401" pos:column="16"/></operator> <name pos:line="401" pos:column="17">tmp<pos:position pos:line="401" pos:column="20"/></name></expr>;<pos:position pos:line="401" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="402" pos:column="9">src<pos:position pos:line="402" pos:column="12"/></name> <operator pos:line="402" pos:column="13">+=<pos:position pos:line="402" pos:column="15"/></operator> <name pos:line="402" pos:column="16">tmp<pos:position pos:line="402" pos:column="19"/></name></expr>;<pos:position pos:line="402" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="403" pos:column="9">wlen<pos:position pos:line="403" pos:column="13"/></name> <operator pos:line="403" pos:column="14">+=<pos:position pos:line="403" pos:column="16"/></operator> <name pos:line="403" pos:column="17">tmp<pos:position pos:line="403" pos:column="20"/></name></expr>;<pos:position pos:line="403" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="404" pos:column="9">col<pos:position pos:line="404" pos:column="12"/></name> <operator pos:line="404" pos:column="13">+=<pos:position pos:line="404" pos:column="15"/></operator> <name pos:line="404" pos:column="16">w<pos:position pos:line="404" pos:column="17"/></name></expr>;<pos:position pos:line="404" pos:column="18"/></expr_stmt>
      }<pos:position pos:line="405" pos:column="8"/></block></then>
      <else pos:line="406" pos:column="7">else
      <block pos:line="407" pos:column="7">{
	<expr_stmt><expr><name pos:line="408" pos:column="9">src<pos:position pos:line="408" pos:column="12"/></name> <operator pos:line="408" pos:column="13">+=<pos:position pos:line="408" pos:column="15"/></operator> <name pos:line="408" pos:column="16">destlen<pos:position pos:line="408" pos:column="23"/></name> <operator pos:line="408" pos:column="24">-<pos:position pos:line="408" pos:column="25"/></operator> <name pos:line="408" pos:column="26">wlen<pos:position pos:line="408" pos:column="30"/></name></expr>;<pos:position pos:line="408" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name pos:line="409" pos:column="9">wlen<pos:position pos:line="409" pos:column="13"/></name> <operator pos:line="409" pos:column="14">=<pos:position pos:line="409" pos:column="15"/></operator> <name pos:line="409" pos:column="16">destlen<pos:position pos:line="409" pos:column="23"/></name></expr>;<pos:position pos:line="409" pos:column="24"/></expr_stmt>
      }<pos:position pos:line="410" pos:column="8"/></block></else></if>
    }<pos:position pos:line="411" pos:column="6"/></block></else></if>
  }<pos:position pos:line="412" pos:column="4"/></block></while>
  <expr_stmt><expr><operator pos:line="413" pos:column="3">*<pos:position pos:line="413" pos:column="4"/></operator><name pos:line="413" pos:column="4">wptr<pos:position pos:line="413" pos:column="8"/></name> <operator pos:line="413" pos:column="9">=<pos:position pos:line="413" pos:column="10"/></operator> <literal type="number" pos:line="413" pos:column="11">0<pos:position pos:line="413" pos:column="12"/></literal></expr>;<pos:position pos:line="413" pos:column="13"/></expr_stmt>

<cpp:if pos:line="415" pos:column="1">#<cpp:directive pos:line="415" pos:column="2">if<pos:position pos:line="415" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="415" pos:column="5">0<pos:position pos:line="415" pos:column="6"/></literal></expr></cpp:if>
  if (flags &amp; MUTT_FORMAT_MAKEPRINT)
  {
    <comment type="block" pos:line="418" pos:column="5">/* Make sure that the string is printable by changing all non-printable
       chars to dots, or spaces for non-printable whitespace */</comment>
    for (cp = dest ; *cp ; cp++)
      if (!IsPrint (*cp) &amp;&amp;
	  !((flags &amp; MUTT_FORMAT_TREE) &amp;&amp; (*cp &lt;= MUTT_TREE_MAX)))
	*cp = isspace ((unsigned char) *cp) ? ' ' : '.';
  }
<cpp:endif pos:line="425" pos:column="1">#<cpp:directive pos:line="425" pos:column="2">endif<pos:position pos:line="425" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="426" pos:column="2"/></block></function></unit>

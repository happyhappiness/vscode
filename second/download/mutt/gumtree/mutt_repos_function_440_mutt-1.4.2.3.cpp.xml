<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_440_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">url_parse_mailto<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">ENVELOPE<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">e<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier><modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">body<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">src<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">t<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">tmp<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">headers<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">tag<pos:position pos:line="6" pos:column="12"/></name></decl>, <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="15">value<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">scratch<pos:position pos:line="7" pos:column="15"/></name><index pos:line="7" pos:column="15">[<expr><name pos:line="7" pos:column="16">HUGE_STRING<pos:position pos:line="7" pos:column="27"/></name></expr>]<pos:position pos:line="7" pos:column="28"/></index></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">taglen<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="11" pos:column="3">LIST<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">last<pos:position pos:line="11" pos:column="13"/></name> <init pos:line="11" pos:column="14">= <expr><name pos:line="11" pos:column="16">NULL<pos:position pos:line="11" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
  
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><operator pos:line="13" pos:column="7">!<pos:position pos:line="13" pos:column="8"/></operator><operator pos:line="13" pos:column="8">(<pos:position pos:line="13" pos:column="9"/></operator><name pos:line="13" pos:column="9">t<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <call><name pos:line="13" pos:column="13">strchr<pos:position pos:line="13" pos:column="19"/></name> <argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">src<pos:position pos:line="13" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="13" pos:column="26">':'<pos:position pos:line="13" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="30"/></argument_list></call><operator pos:line="13" pos:column="30">)<pos:position pos:line="13" pos:column="31"/></operator></expr>)<pos:position pos:line="13" pos:column="32"/></condition><then pos:line="13" pos:column="32">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">-<pos:position pos:line="14" pos:column="13"/></operator><literal type="number" pos:line="14" pos:column="13">1<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></return></block></then></if>
  
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><operator pos:line="16" pos:column="7">(<pos:position pos:line="16" pos:column="8"/></operator><name pos:line="16" pos:column="8">tmp<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <call><name pos:line="16" pos:column="14">safe_strdup<pos:position pos:line="16" pos:column="25"/></name> <argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">t<pos:position pos:line="16" pos:column="28"/></name> <operator pos:line="16" pos:column="29">+<pos:position pos:line="16" pos:column="30"/></operator> <literal type="number" pos:line="16" pos:column="31">1<pos:position pos:line="16" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call><operator pos:line="16" pos:column="33">)<pos:position pos:line="16" pos:column="34"/></operator> <operator pos:line="16" pos:column="35">==<pos:position pos:line="16" pos:column="37"/></operator> <name pos:line="16" pos:column="38">NULL<pos:position pos:line="16" pos:column="42"/></name></expr>)<pos:position pos:line="16" pos:column="43"/></condition><then pos:line="16" pos:column="43">
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">-<pos:position pos:line="17" pos:column="13"/></operator><literal type="number" pos:line="17" pos:column="13">1<pos:position pos:line="17" pos:column="14"/></literal></expr>;<pos:position pos:line="17" pos:column="15"/></return></block></then></if>

  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><operator pos:line="19" pos:column="7">(<pos:position pos:line="19" pos:column="8"/></operator><name pos:line="19" pos:column="8">headers<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <call><name pos:line="19" pos:column="18">strchr<pos:position pos:line="19" pos:column="24"/></name> <argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">tmp<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="19" pos:column="31">'?'<pos:position pos:line="19" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call><operator pos:line="19" pos:column="35">)<pos:position pos:line="19" pos:column="36"/></operator></expr>)<pos:position pos:line="19" pos:column="37"/></condition><then pos:line="19" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="20" pos:column="5">*<pos:position pos:line="20" pos:column="6"/></operator><name pos:line="20" pos:column="6">headers<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">++<pos:position pos:line="20" pos:column="15"/></operator> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <literal type="char" pos:line="20" pos:column="18">'\0'<pos:position pos:line="20" pos:column="22"/></literal></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">url_pct_decode<pos:position pos:line="22" pos:column="17"/></name> <argument_list pos:line="22" pos:column="18">(<argument><expr><name pos:line="22" pos:column="19">tmp<pos:position pos:line="22" pos:column="22"/></name></expr></argument>)<pos:position pos:line="22" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">e<pos:position pos:line="23" pos:column="4"/></name><operator pos:line="23" pos:column="4">-&gt;<pos:position pos:line="23" pos:column="9"/></operator><name pos:line="23" pos:column="6">to<pos:position pos:line="23" pos:column="8"/></name></name> <operator pos:line="23" pos:column="9">=<pos:position pos:line="23" pos:column="10"/></operator> <call><name pos:line="23" pos:column="11">rfc822_parse_adrlist<pos:position pos:line="23" pos:column="31"/></name> <argument_list pos:line="23" pos:column="32">(<argument><expr><name><name pos:line="23" pos:column="33">e<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">-&gt;<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="36">to<pos:position pos:line="23" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="40">tmp<pos:position pos:line="23" pos:column="43"/></name></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="45"/></expr_stmt>

  <expr_stmt><expr><name pos:line="25" pos:column="3">tag<pos:position pos:line="25" pos:column="6"/></name> <operator pos:line="25" pos:column="7">=<pos:position pos:line="25" pos:column="8"/></operator> <ternary><condition><expr><name pos:line="25" pos:column="9">headers<pos:position pos:line="25" pos:column="16"/></name></expr> ?<pos:position pos:line="25" pos:column="18"/></condition><then pos:line="25" pos:column="18"> <expr><call><name pos:line="25" pos:column="19">strtok<pos:position pos:line="25" pos:column="25"/></name> <argument_list pos:line="25" pos:column="26">(<argument><expr><name pos:line="25" pos:column="27">headers<pos:position pos:line="25" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="36">"&amp;"<pos:position pos:line="25" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call></expr> <pos:position pos:line="25" pos:column="41"/></then><else pos:line="25" pos:column="41">: <expr><name pos:line="25" pos:column="43">NULL<pos:position pos:line="25" pos:column="47"/></name></expr></else></ternary></expr>;<pos:position pos:line="25" pos:column="48"/></expr_stmt>
  
  <for pos:line="27" pos:column="3">for <control pos:line="27" pos:column="7">(<init pos:line="27" pos:column="8">;<pos:position pos:line="27" pos:column="9"/></init> <condition><expr><name pos:line="27" pos:column="10">tag<pos:position pos:line="27" pos:column="13"/></name></expr>;<pos:position pos:line="27" pos:column="14"/></condition> <incr><expr><name pos:line="27" pos:column="15">tag<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <call><name pos:line="27" pos:column="21">strtok<pos:position pos:line="27" pos:column="27"/></name> <argument_list pos:line="27" pos:column="28">(<argument><expr><name pos:line="27" pos:column="29">NULL<pos:position pos:line="27" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="35">"&amp;"<pos:position pos:line="27" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call></expr></incr>)<pos:position pos:line="27" pos:column="40"/></control>
  <block pos:line="28" pos:column="3">{
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">(<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">value<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <call><name pos:line="29" pos:column="18">strchr<pos:position pos:line="29" pos:column="24"/></name> <argument_list pos:line="29" pos:column="25">(<argument><expr><name pos:line="29" pos:column="26">tag<pos:position pos:line="29" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="29" pos:column="31">'='<pos:position pos:line="29" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="35"/></argument_list></call><operator pos:line="29" pos:column="35">)<pos:position pos:line="29" pos:column="36"/></operator></expr>)<pos:position pos:line="29" pos:column="37"/></condition><then pos:line="29" pos:column="37">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="30" pos:column="7">*<pos:position pos:line="30" pos:column="8"/></operator><name pos:line="30" pos:column="8">value<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">++<pos:position pos:line="30" pos:column="15"/></operator> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <literal type="char" pos:line="30" pos:column="18">'\0'<pos:position pos:line="30" pos:column="22"/></literal></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt></block></then></if>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><operator pos:line="31" pos:column="9">!<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="10">value<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">||<pos:position pos:line="31" pos:column="18"/></operator> <operator pos:line="31" pos:column="19">!<pos:position pos:line="31" pos:column="20"/></operator><operator pos:line="31" pos:column="20">*<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="21">value<pos:position pos:line="31" pos:column="26"/></name></expr>)<pos:position pos:line="31" pos:column="27"/></condition><then pos:line="31" pos:column="27">
      <block type="pseudo"><continue pos:line="32" pos:column="7">continue;<pos:position pos:line="32" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><call><name pos:line="34" pos:column="5">url_pct_decode<pos:position pos:line="34" pos:column="19"/></name> <argument_list pos:line="34" pos:column="20">(<argument><expr><name pos:line="34" pos:column="21">tag<pos:position pos:line="34" pos:column="24"/></name></expr></argument>)<pos:position pos:line="34" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">url_pct_decode<pos:position pos:line="35" pos:column="19"/></name> <argument_list pos:line="35" pos:column="20">(<argument><expr><name pos:line="35" pos:column="21">value<pos:position pos:line="35" pos:column="26"/></name></expr></argument>)<pos:position pos:line="35" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="28"/></expr_stmt>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><operator pos:line="37" pos:column="9">!<pos:position pos:line="37" pos:column="10"/></operator><call><name pos:line="37" pos:column="10">ascii_strcasecmp<pos:position pos:line="37" pos:column="26"/></name> <argument_list pos:line="37" pos:column="27">(<argument><expr><name pos:line="37" pos:column="28">tag<pos:position pos:line="37" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="33">"body"<pos:position pos:line="37" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="41"/></condition><then pos:line="37" pos:column="41">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="7">mutt_str_replace<pos:position pos:line="38" pos:column="23"/></name> <argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">body<pos:position pos:line="38" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="31">value<pos:position pos:line="38" pos:column="36"/></name></expr></argument>)<pos:position pos:line="38" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="38"/></expr_stmt></block></then>
    <else pos:line="39" pos:column="5">else 
    <block pos:line="40" pos:column="5">{
      <expr_stmt><expr><name pos:line="41" pos:column="7">taglen<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <call><name pos:line="41" pos:column="16">strlen<pos:position pos:line="41" pos:column="22"/></name> <argument_list pos:line="41" pos:column="23">(<argument><expr><name pos:line="41" pos:column="24">tag<pos:position pos:line="41" pos:column="27"/></name></expr></argument>)<pos:position pos:line="41" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="29"/></expr_stmt>
      <comment type="block" pos:line="42" pos:column="7">/* mutt_parse_rfc822_line makes some assumptions */</comment>
      <expr_stmt><expr><call><name pos:line="43" pos:column="7">snprintf<pos:position pos:line="43" pos:column="15"/></name> <argument_list pos:line="43" pos:column="16">(<argument><expr><name pos:line="43" pos:column="17">scratch<pos:position pos:line="43" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="26">sizeof <argument_list pos:line="43" pos:column="33">(<argument><expr><name pos:line="43" pos:column="34">scratch<pos:position pos:line="43" pos:column="41"/></name></expr></argument>)<pos:position pos:line="43" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="44">"%s: %s"<pos:position pos:line="43" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="54">tag<pos:position pos:line="43" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="59">value<pos:position pos:line="43" pos:column="64"/></name></expr></argument>)<pos:position pos:line="43" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="66"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="44" pos:column="7">scratch<pos:position pos:line="44" pos:column="14"/></name><index pos:line="44" pos:column="14">[<expr><name pos:line="44" pos:column="15">taglen<pos:position pos:line="44" pos:column="21"/></name></expr>]<pos:position pos:line="44" pos:column="22"/></index></name> <operator pos:line="44" pos:column="23">=<pos:position pos:line="44" pos:column="24"/></operator> <literal type="char" pos:line="44" pos:column="25">'\0'<pos:position pos:line="44" pos:column="29"/></literal></expr>;<pos:position pos:line="44" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name pos:line="45" pos:column="7">value<pos:position pos:line="45" pos:column="12"/></name> <operator pos:line="45" pos:column="13">=<pos:position pos:line="45" pos:column="14"/></operator> <operator pos:line="45" pos:column="15">&amp;<pos:position pos:line="45" pos:column="20"/></operator><name><name pos:line="45" pos:column="16">scratch<pos:position pos:line="45" pos:column="23"/></name><index pos:line="45" pos:column="23">[<expr><name pos:line="45" pos:column="24">taglen<pos:position pos:line="45" pos:column="30"/></name><operator pos:line="45" pos:column="30">+<pos:position pos:line="45" pos:column="31"/></operator><literal type="number" pos:line="45" pos:column="31">1<pos:position pos:line="45" pos:column="32"/></literal></expr>]<pos:position pos:line="45" pos:column="33"/></index></name></expr>;<pos:position pos:line="45" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">SKIPWS<pos:position pos:line="46" pos:column="13"/></name> <argument_list pos:line="46" pos:column="14">(<argument><expr><name pos:line="46" pos:column="15">value<pos:position pos:line="46" pos:column="20"/></name></expr></argument>)<pos:position pos:line="46" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="47" pos:column="7">mutt_parse_rfc822_line<pos:position pos:line="47" pos:column="29"/></name> <argument_list pos:line="47" pos:column="30">(<argument><expr><name pos:line="47" pos:column="31">e<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="34">NULL<pos:position pos:line="47" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="40">scratch<pos:position pos:line="47" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="49">value<pos:position pos:line="47" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="56">1<pos:position pos:line="47" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="59">0<pos:position pos:line="47" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="62">0<pos:position pos:line="47" pos:column="63"/></literal></expr></argument>, <argument><expr><operator pos:line="47" pos:column="65">&amp;<pos:position pos:line="47" pos:column="70"/></operator><name pos:line="47" pos:column="66">last<pos:position pos:line="47" pos:column="70"/></name></expr></argument>)<pos:position pos:line="47" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="72"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></else></if>
  }<pos:position pos:line="49" pos:column="4"/></block></for>
  
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">safe_free<pos:position pos:line="51" pos:column="12"/></name> <argument_list pos:line="51" pos:column="13">(<argument><expr><operator pos:line="51" pos:column="14">(<pos:position pos:line="51" pos:column="15"/></operator><name pos:line="51" pos:column="15">void<pos:position pos:line="51" pos:column="19"/></name> <operator pos:line="51" pos:column="20">*<pos:position pos:line="51" pos:column="21"/></operator><operator pos:line="51" pos:column="21">*<pos:position pos:line="51" pos:column="22"/></operator><operator pos:line="51" pos:column="22">)<pos:position pos:line="51" pos:column="23"/></operator> <operator pos:line="51" pos:column="24">&amp;<pos:position pos:line="51" pos:column="29"/></operator><name pos:line="51" pos:column="25">tmp<pos:position pos:line="51" pos:column="28"/></name></expr></argument>)<pos:position pos:line="51" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="30"/></expr_stmt>
  <return pos:line="52" pos:column="3">return <expr><literal type="number" pos:line="52" pos:column="10">0<pos:position pos:line="52" pos:column="11"/></literal></expr>;<pos:position pos:line="52" pos:column="12"/></return>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

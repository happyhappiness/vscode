<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_869_mutt-1.7.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_certificate_by_digest<pos:position pos:line="1" pos:column="39"/></name> <parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">X509<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">peercert<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">unsigned<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">char<pos:position pos:line="3" pos:column="16"/></name></type> <name><name pos:line="3" pos:column="17">peermd<pos:position pos:line="3" pos:column="23"/></name><index pos:line="3" pos:column="23">[<expr><name pos:line="3" pos:column="24">EVP_MAX_MD_SIZE<pos:position pos:line="3" pos:column="39"/></name></expr>]<pos:position pos:line="3" pos:column="40"/></index></name></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">unsigned<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">int<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">peermdlen<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">X509<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">cert<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><name pos:line="5" pos:column="16">NULL<pos:position pos:line="5" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">pass<pos:position pos:line="6" pos:column="11"/></name> <init pos:line="6" pos:column="12">= <expr><literal type="number" pos:line="6" pos:column="14">0<pos:position pos:line="6" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">FILE<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">fp<pos:position pos:line="7" pos:column="11"/></name></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* expiration check */</comment>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><call><name pos:line="10" pos:column="7">option<pos:position pos:line="10" pos:column="13"/></name> <argument_list pos:line="10" pos:column="14">(<argument><expr><name pos:line="10" pos:column="15">OPTSSLVERIFYDATES<pos:position pos:line="10" pos:column="32"/></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call> <operator pos:line="10" pos:column="34">!=<pos:position pos:line="10" pos:column="36"/></operator> <name pos:line="10" pos:column="37">MUTT_NO<pos:position pos:line="10" pos:column="44"/></name></expr>)<pos:position pos:line="10" pos:column="45"/></condition><then pos:line="10" pos:column="45">
  <block pos:line="11" pos:column="3">{
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">X509_cmp_current_time<pos:position pos:line="12" pos:column="30"/></name> <argument_list pos:line="12" pos:column="31">(<argument><expr><call><name pos:line="12" pos:column="32">X509_get_notBefore<pos:position pos:line="12" pos:column="50"/></name> <argument_list pos:line="12" pos:column="51">(<argument><expr><name pos:line="12" pos:column="52">peercert<pos:position pos:line="12" pos:column="60"/></name></expr></argument>)<pos:position pos:line="12" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="62"/></argument_list></call> <operator pos:line="12" pos:column="63">&gt;=<pos:position pos:line="12" pos:column="68"/></operator> <literal type="number" pos:line="12" pos:column="66">0<pos:position pos:line="12" pos:column="67"/></literal></expr>)<pos:position pos:line="12" pos:column="68"/></condition><then pos:line="12" pos:column="68">
    <block pos:line="13" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">dprint<pos:position pos:line="14" pos:column="13"/></name> <argument_list pos:line="14" pos:column="14">(<argument><expr><literal type="number" pos:line="14" pos:column="15">2<pos:position pos:line="14" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="18">(<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="19">debugfile<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">,<pos:position pos:line="14" pos:column="29"/></operator> <literal type="string" pos:line="14" pos:column="30">"Server certificate is not yet valid\n"<pos:position pos:line="14" pos:column="69"/></literal><operator pos:line="14" pos:column="69">)<pos:position pos:line="14" pos:column="70"/></operator></expr></argument>)<pos:position pos:line="14" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="72"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">mutt_error<pos:position pos:line="15" pos:column="17"/></name> <argument_list pos:line="15" pos:column="18">(<argument><expr><call><name pos:line="15" pos:column="19">_<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><literal type="string" pos:line="15" pos:column="21">"Server certificate is not yet valid"<pos:position pos:line="15" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="61"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">mutt_sleep<pos:position pos:line="16" pos:column="17"/></name> <argument_list pos:line="16" pos:column="18">(<argument><expr><literal type="number" pos:line="16" pos:column="19">2<pos:position pos:line="16" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
      <return pos:line="17" pos:column="7">return <expr><literal type="number" pos:line="17" pos:column="14">0<pos:position pos:line="17" pos:column="15"/></literal></expr>;<pos:position pos:line="17" pos:column="16"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name pos:line="19" pos:column="9">X509_cmp_current_time<pos:position pos:line="19" pos:column="30"/></name> <argument_list pos:line="19" pos:column="31">(<argument><expr><call><name pos:line="19" pos:column="32">X509_get_notAfter<pos:position pos:line="19" pos:column="49"/></name> <argument_list pos:line="19" pos:column="50">(<argument><expr><name pos:line="19" pos:column="51">peercert<pos:position pos:line="19" pos:column="59"/></name></expr></argument>)<pos:position pos:line="19" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call> <operator pos:line="19" pos:column="62">&lt;=<pos:position pos:line="19" pos:column="67"/></operator> <literal type="number" pos:line="19" pos:column="65">0<pos:position pos:line="19" pos:column="66"/></literal></expr>)<pos:position pos:line="19" pos:column="67"/></condition><then pos:line="19" pos:column="67">
    <block pos:line="20" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">dprint<pos:position pos:line="21" pos:column="13"/></name> <argument_list pos:line="21" pos:column="14">(<argument><expr><literal type="number" pos:line="21" pos:column="15">2<pos:position pos:line="21" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="18">(<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">debugfile<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">,<pos:position pos:line="21" pos:column="29"/></operator> <literal type="string" pos:line="21" pos:column="30">"Server certificate has expired"<pos:position pos:line="21" pos:column="62"/></literal><operator pos:line="21" pos:column="62">)<pos:position pos:line="21" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="65"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">mutt_error<pos:position pos:line="22" pos:column="17"/></name> <argument_list pos:line="22" pos:column="18">(<argument><expr><call><name pos:line="22" pos:column="19">_<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><literal type="string" pos:line="22" pos:column="21">"Server certificate has expired"<pos:position pos:line="22" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="56"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">mutt_sleep<pos:position pos:line="23" pos:column="17"/></name> <argument_list pos:line="23" pos:column="18">(<argument><expr><literal type="number" pos:line="23" pos:column="19">2<pos:position pos:line="23" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="22"/></expr_stmt>
      <return pos:line="24" pos:column="7">return <expr><literal type="number" pos:line="24" pos:column="14">0<pos:position pos:line="24" pos:column="15"/></literal></expr>;<pos:position pos:line="24" pos:column="16"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><operator pos:line="28" pos:column="7">(<pos:position pos:line="28" pos:column="8"/></operator><name pos:line="28" pos:column="8">fp<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <call><name pos:line="28" pos:column="13">fopen<pos:position pos:line="28" pos:column="18"/></name> <argument_list pos:line="28" pos:column="19">(<argument><expr><name pos:line="28" pos:column="20">SslCertFile<pos:position pos:line="28" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="33">"rt"<pos:position pos:line="28" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="38"/></argument_list></call><operator pos:line="28" pos:column="38">)<pos:position pos:line="28" pos:column="39"/></operator> <operator pos:line="28" pos:column="40">==<pos:position pos:line="28" pos:column="42"/></operator> <name pos:line="28" pos:column="43">NULL<pos:position pos:line="28" pos:column="47"/></name></expr>)<pos:position pos:line="28" pos:column="48"/></condition><then pos:line="28" pos:column="48">
    <block type="pseudo"><return pos:line="29" pos:column="5">return <expr><literal type="number" pos:line="29" pos:column="12">0<pos:position pos:line="29" pos:column="13"/></literal></expr>;<pos:position pos:line="29" pos:column="14"/></return></block></then></if>

  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><operator pos:line="31" pos:column="7">!<pos:position pos:line="31" pos:column="8"/></operator><call><name pos:line="31" pos:column="8">X509_digest<pos:position pos:line="31" pos:column="19"/></name> <argument_list pos:line="31" pos:column="20">(<argument><expr><name pos:line="31" pos:column="21">peercert<pos:position pos:line="31" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="31">EVP_sha1<pos:position pos:line="31" pos:column="39"/></name><argument_list pos:line="31" pos:column="39">()<pos:position pos:line="31" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="31" pos:column="43">peermd<pos:position pos:line="31" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="51">&amp;<pos:position pos:line="31" pos:column="56"/></operator><name pos:line="31" pos:column="52">peermdlen<pos:position pos:line="31" pos:column="61"/></name></expr></argument>)<pos:position pos:line="31" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="63"/></condition><then pos:line="31" pos:column="63">
  <block pos:line="32" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">safe_fclose<pos:position pos:line="33" pos:column="16"/></name> <argument_list pos:line="33" pos:column="17">(<argument><expr><operator pos:line="33" pos:column="18">&amp;<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="19">fp<pos:position pos:line="33" pos:column="21"/></name></expr></argument>)<pos:position pos:line="33" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="23"/></expr_stmt>
    <return pos:line="34" pos:column="5">return <expr><literal type="number" pos:line="34" pos:column="12">0<pos:position pos:line="34" pos:column="13"/></literal></expr>;<pos:position pos:line="34" pos:column="14"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <while pos:line="37" pos:column="3">while <condition pos:line="37" pos:column="9">(<expr><operator pos:line="37" pos:column="10">(<pos:position pos:line="37" pos:column="11"/></operator><name pos:line="37" pos:column="11">cert<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <call><name pos:line="37" pos:column="18">PEM_read_X509<pos:position pos:line="37" pos:column="31"/></name> <argument_list pos:line="37" pos:column="32">(<argument><expr><name pos:line="37" pos:column="33">fp<pos:position pos:line="37" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="37">&amp;<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="38">cert<pos:position pos:line="37" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="44">NULL<pos:position pos:line="37" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="50">NULL<pos:position pos:line="37" pos:column="54"/></name></expr></argument>)<pos:position pos:line="37" pos:column="55"/></argument_list></call><operator pos:line="37" pos:column="55">)<pos:position pos:line="37" pos:column="56"/></operator> <operator pos:line="37" pos:column="57">!=<pos:position pos:line="37" pos:column="59"/></operator> <name pos:line="37" pos:column="60">NULL<pos:position pos:line="37" pos:column="64"/></name></expr>)<pos:position pos:line="37" pos:column="65"/></condition>
  <block pos:line="38" pos:column="3">{
    <expr_stmt><expr><name pos:line="39" pos:column="5">pass<pos:position pos:line="39" pos:column="9"/></name> <operator pos:line="39" pos:column="10">=<pos:position pos:line="39" pos:column="11"/></operator> <ternary><condition><expr><call><name pos:line="39" pos:column="12">compare_certificates<pos:position pos:line="39" pos:column="32"/></name> <argument_list pos:line="39" pos:column="33">(<argument><expr><name pos:line="39" pos:column="34">cert<pos:position pos:line="39" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="40">peercert<pos:position pos:line="39" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="50">peermd<pos:position pos:line="39" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="58">peermdlen<pos:position pos:line="39" pos:column="67"/></name></expr></argument>)<pos:position pos:line="39" pos:column="68"/></argument_list></call></expr> ?<pos:position pos:line="39" pos:column="70"/></condition><then pos:line="39" pos:column="70"> <expr><literal type="number" pos:line="39" pos:column="71">0<pos:position pos:line="39" pos:column="72"/></literal></expr> <pos:position pos:line="39" pos:column="73"/></then><else pos:line="39" pos:column="73">: <expr><literal type="number" pos:line="39" pos:column="75">1<pos:position pos:line="39" pos:column="76"/></literal></expr></else></ternary></expr>;<pos:position pos:line="39" pos:column="77"/></expr_stmt>

    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name pos:line="41" pos:column="9">pass<pos:position pos:line="41" pos:column="13"/></name></expr>)<pos:position pos:line="41" pos:column="14"/></condition><then pos:line="41" pos:column="14">
      <block type="pseudo"><break pos:line="42" pos:column="7">break;<pos:position pos:line="42" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="43" pos:column="4"/></block></while>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">X509_free<pos:position pos:line="44" pos:column="12"/></name> <argument_list pos:line="44" pos:column="13">(<argument><expr><name pos:line="44" pos:column="14">cert<pos:position pos:line="44" pos:column="18"/></name></expr></argument>)<pos:position pos:line="44" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">safe_fclose<pos:position pos:line="45" pos:column="14"/></name> <argument_list pos:line="45" pos:column="15">(<argument><expr><operator pos:line="45" pos:column="16">&amp;<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="17">fp<pos:position pos:line="45" pos:column="19"/></name></expr></argument>)<pos:position pos:line="45" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="21"/></expr_stmt>

  <return pos:line="47" pos:column="3">return <expr><name pos:line="47" pos:column="10">pass<pos:position pos:line="47" pos:column="14"/></name></expr>;<pos:position pos:line="47" pos:column="15"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

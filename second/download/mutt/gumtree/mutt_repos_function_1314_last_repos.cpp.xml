<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1314_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">_mutt_bounce_message<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">FILE<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">fp<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">HEADER<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">h<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">ADDRESS<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">to<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="68">const<pos:position pos:line="1" pos:column="73"/></specifier> <name pos:line="1" pos:column="74">char<pos:position pos:line="1" pos:column="78"/></name> <modifier pos:line="1" pos:column="79">*<pos:position pos:line="1" pos:column="80"/></modifier></type><name pos:line="1" pos:column="80">resent_from<pos:position pos:line="1" pos:column="91"/></name></decl></parameter>,
				  <parameter><decl><type><name pos:line="2" pos:column="35">ADDRESS<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">env_from<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="10">ret<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">f<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">date<pos:position pos:line="6" pos:column="12"/></name><index pos:line="6" pos:column="12">[<expr><name pos:line="6" pos:column="13">SHORT_STRING<pos:position pos:line="6" pos:column="25"/></name></expr>]<pos:position pos:line="6" pos:column="26"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="6" pos:column="28">tempfile<pos:position pos:line="6" pos:column="36"/></name><index pos:line="6" pos:column="36">[<expr><name pos:line="6" pos:column="37">_POSIX_PATH_MAX<pos:position pos:line="6" pos:column="52"/></name></expr>]<pos:position pos:line="6" pos:column="53"/></index></name></decl>;<pos:position pos:line="6" pos:column="54"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">MESSAGE<pos:position pos:line="7" pos:column="10"/></name> <modifier pos:line="7" pos:column="11">*<pos:position pos:line="7" pos:column="12"/></modifier></type><name pos:line="7" pos:column="12">msg<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><name pos:line="7" pos:column="18">NULL<pos:position pos:line="7" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">!<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">h<pos:position pos:line="9" pos:column="9"/></name></expr>)<pos:position pos:line="9" pos:column="10"/></condition><then pos:line="9" pos:column="10">
  <block pos:line="10" pos:column="3">{
	  <comment type="block" pos:line="11" pos:column="11">/* Try to bounce each message out, aborting if we get any failures. */</comment>
    <for pos:line="12" pos:column="5">for <control pos:line="12" pos:column="9">(<init><expr><name pos:line="12" pos:column="10">i<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator><literal type="number" pos:line="12" pos:column="12">0<pos:position pos:line="12" pos:column="13"/></literal></expr>;<pos:position pos:line="12" pos:column="14"/></init> <condition><expr><name pos:line="12" pos:column="15">i<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">&lt;<pos:position pos:line="12" pos:column="20"/></operator><name><name pos:line="12" pos:column="17">Context<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">-&gt;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="26">msgcount<pos:position pos:line="12" pos:column="34"/></name></name></expr>;<pos:position pos:line="12" pos:column="35"/></condition> <incr><expr><name pos:line="12" pos:column="36">i<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">++<pos:position pos:line="12" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="40"/></control>
      <block type="pseudo"><if pos:line="13" pos:column="7">if <condition pos:line="13" pos:column="10">(<expr><name><name pos:line="13" pos:column="11">Context<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">hdrs<pos:position pos:line="13" pos:column="24"/></name><index pos:line="13" pos:column="24">[<expr><name pos:line="13" pos:column="25">i<pos:position pos:line="13" pos:column="26"/></name></expr>]<pos:position pos:line="13" pos:column="27"/></index></name><operator pos:line="13" pos:column="27">-&gt;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="29">tagged<pos:position pos:line="13" pos:column="35"/></name></expr>)<pos:position pos:line="13" pos:column="36"/></condition><then pos:line="13" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="9">ret<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">|=<pos:position pos:line="14" pos:column="15"/></operator> <call><name pos:line="14" pos:column="16">_mutt_bounce_message<pos:position pos:line="14" pos:column="36"/></name> <argument_list pos:line="14" pos:column="37">(<argument><expr><name pos:line="14" pos:column="38">fp<pos:position pos:line="14" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="42">Context<pos:position pos:line="14" pos:column="49"/></name><operator pos:line="14" pos:column="49">-&gt;<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="51">hdrs<pos:position pos:line="14" pos:column="55"/></name><index pos:line="14" pos:column="55">[<expr><name pos:line="14" pos:column="56">i<pos:position pos:line="14" pos:column="57"/></name></expr>]<pos:position pos:line="14" pos:column="58"/></index></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="60">to<pos:position pos:line="14" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="64">resent_from<pos:position pos:line="14" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="77">env_from<pos:position pos:line="14" pos:column="85"/></name></expr></argument>)<pos:position pos:line="14" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="87"/></expr_stmt></block></then></if></block></for>
    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">ret<pos:position pos:line="15" pos:column="15"/></name></expr>;<pos:position pos:line="15" pos:column="16"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="18" pos:column="3">/* If we failed to open a message, return with error */</comment>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><operator pos:line="19" pos:column="7">!<pos:position pos:line="19" pos:column="8"/></operator><name pos:line="19" pos:column="8">fp<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">&amp;&amp;<pos:position pos:line="19" pos:column="21"/></operator> <operator pos:line="19" pos:column="14">(<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">msg<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">=<pos:position pos:line="19" pos:column="20"/></operator> <call><name pos:line="19" pos:column="21">mx_open_message<pos:position pos:line="19" pos:column="36"/></name> <argument_list pos:line="19" pos:column="37">(<argument><expr><name pos:line="19" pos:column="38">Context<pos:position pos:line="19" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="47">h<pos:position pos:line="19" pos:column="48"/></name><operator pos:line="19" pos:column="48">-&gt;<pos:position pos:line="19" pos:column="53"/></operator><name pos:line="19" pos:column="50">msgno<pos:position pos:line="19" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="56"/></argument_list></call><operator pos:line="19" pos:column="56">)<pos:position pos:line="19" pos:column="57"/></operator> <operator pos:line="19" pos:column="58">==<pos:position pos:line="19" pos:column="60"/></operator> <name pos:line="19" pos:column="61">NULL<pos:position pos:line="19" pos:column="65"/></name></expr>)<pos:position pos:line="19" pos:column="66"/></condition><then pos:line="19" pos:column="66">
    <block type="pseudo"><return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">-<pos:position pos:line="20" pos:column="13"/></operator><literal type="number" pos:line="20" pos:column="13">1<pos:position pos:line="20" pos:column="14"/></literal></expr>;<pos:position pos:line="20" pos:column="15"/></return></block></then></if>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><operator pos:line="22" pos:column="7">!<pos:position pos:line="22" pos:column="8"/></operator><name pos:line="22" pos:column="8">fp<pos:position pos:line="22" pos:column="10"/></name></expr>)<pos:position pos:line="22" pos:column="11"/></condition><then pos:line="22" pos:column="11"> <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="12">fp<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <name><name pos:line="22" pos:column="17">msg<pos:position pos:line="22" pos:column="20"/></name><operator pos:line="22" pos:column="20">-&gt;<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="22">fp<pos:position pos:line="22" pos:column="24"/></name></name></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="24" pos:column="3">mutt_mktemp<pos:position pos:line="24" pos:column="14"/></name> <argument_list pos:line="24" pos:column="15">(<argument><expr><name pos:line="24" pos:column="16">tempfile<pos:position pos:line="24" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="26">sizeof <argument_list pos:line="24" pos:column="33">(<argument><expr><name pos:line="24" pos:column="34">tempfile<pos:position pos:line="24" pos:column="42"/></name></expr></argument>)<pos:position pos:line="24" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="45"/></expr_stmt>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><operator pos:line="25" pos:column="7">(<pos:position pos:line="25" pos:column="8"/></operator><name pos:line="25" pos:column="8">f<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <call><name pos:line="25" pos:column="12">safe_fopen<pos:position pos:line="25" pos:column="22"/></name> <argument_list pos:line="25" pos:column="23">(<argument><expr><name pos:line="25" pos:column="24">tempfile<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="34">"w"<pos:position pos:line="25" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="38"/></argument_list></call><operator pos:line="25" pos:column="38">)<pos:position pos:line="25" pos:column="39"/></operator> <operator pos:line="25" pos:column="40">!=<pos:position pos:line="25" pos:column="42"/></operator> <name pos:line="25" pos:column="43">NULL<pos:position pos:line="25" pos:column="47"/></name></expr>)<pos:position pos:line="25" pos:column="48"/></condition><then pos:line="25" pos:column="48">
  <block pos:line="26" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">int<pos:position pos:line="27" pos:column="8"/></name></type> <name pos:line="27" pos:column="9">ch_flags<pos:position pos:line="27" pos:column="17"/></name> <init pos:line="27" pos:column="18">= <expr><name pos:line="27" pos:column="20">CH_XMIT<pos:position pos:line="27" pos:column="27"/></name> <operator pos:line="27" pos:column="28">|<pos:position pos:line="27" pos:column="29"/></operator> <name pos:line="27" pos:column="30">CH_NONEWLINE<pos:position pos:line="27" pos:column="42"/></name> <operator pos:line="27" pos:column="43">|<pos:position pos:line="27" pos:column="44"/></operator> <name pos:line="27" pos:column="45">CH_NOQFROM<pos:position pos:line="27" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">char<pos:position pos:line="28" pos:column="9"/></name><modifier pos:line="28" pos:column="9">*<pos:position pos:line="28" pos:column="10"/></modifier></type> <name pos:line="28" pos:column="11">msgid_str<pos:position pos:line="28" pos:column="20"/></name></decl>;<pos:position pos:line="28" pos:column="21"/></decl_stmt>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">!<pos:position pos:line="30" pos:column="10"/></operator><call><name pos:line="30" pos:column="10">option<pos:position pos:line="30" pos:column="16"/></name> <argument_list pos:line="30" pos:column="17">(<argument><expr><name pos:line="30" pos:column="18">OPTBOUNCEDELIVERED<pos:position pos:line="30" pos:column="36"/></name></expr></argument>)<pos:position pos:line="30" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="38"/></condition><then pos:line="30" pos:column="38">
      <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="7">ch_flags<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">|=<pos:position pos:line="31" pos:column="18"/></operator> <name pos:line="31" pos:column="19">CH_WEED_DELIVERED<pos:position pos:line="31" pos:column="36"/></name></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="33" pos:column="5">fseeko<pos:position pos:line="33" pos:column="11"/></name> <argument_list pos:line="33" pos:column="12">(<argument><expr><name pos:line="33" pos:column="13">fp<pos:position pos:line="33" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="17">h<pos:position pos:line="33" pos:column="18"/></name><operator pos:line="33" pos:column="18">-&gt;<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="20">offset<pos:position pos:line="33" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="28">0<pos:position pos:line="33" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">fprintf<pos:position pos:line="34" pos:column="12"/></name> <argument_list pos:line="34" pos:column="13">(<argument><expr><name pos:line="34" pos:column="14">f<pos:position pos:line="34" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="17">"Resent-From: %s"<pos:position pos:line="34" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="36">resent_from<pos:position pos:line="34" pos:column="47"/></name></expr></argument>)<pos:position pos:line="34" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">fprintf<pos:position pos:line="35" pos:column="12"/></name> <argument_list pos:line="35" pos:column="13">(<argument><expr><name pos:line="35" pos:column="14">f<pos:position pos:line="35" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="17">"\nResent-%s"<pos:position pos:line="35" pos:column="30"/></literal></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="32">mutt_make_date<pos:position pos:line="35" pos:column="46"/></name> <argument_list pos:line="35" pos:column="47">(<argument><expr><name pos:line="35" pos:column="48">date<pos:position pos:line="35" pos:column="52"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="54">sizeof<argument_list pos:line="35" pos:column="60">(<argument><expr><name pos:line="35" pos:column="61">date<pos:position pos:line="35" pos:column="65"/></name></expr></argument>)<pos:position pos:line="35" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><name pos:line="36" pos:column="5">msgid_str<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <call><name pos:line="36" pos:column="17">mutt_gen_msgid<pos:position pos:line="36" pos:column="31"/></name><argument_list pos:line="36" pos:column="31">()<pos:position pos:line="36" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">fprintf<pos:position pos:line="37" pos:column="12"/></name> <argument_list pos:line="37" pos:column="13">(<argument><expr><name pos:line="37" pos:column="14">f<pos:position pos:line="37" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="17">"Resent-Message-ID: %s\n"<pos:position pos:line="37" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="44">msgid_str<pos:position pos:line="37" pos:column="53"/></name></expr></argument>)<pos:position pos:line="37" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">fputs<pos:position pos:line="38" pos:column="10"/></name> <argument_list pos:line="38" pos:column="11">(<argument><expr><literal type="string" pos:line="38" pos:column="12">"Resent-To: "<pos:position pos:line="38" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="27">f<pos:position pos:line="38" pos:column="28"/></name></expr></argument>)<pos:position pos:line="38" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">mutt_write_address_list<pos:position pos:line="39" pos:column="28"/></name> <argument_list pos:line="39" pos:column="29">(<argument><expr><name pos:line="39" pos:column="30">to<pos:position pos:line="39" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="34">f<pos:position pos:line="39" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="37">11<pos:position pos:line="39" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="41">0<pos:position pos:line="39" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">mutt_copy_header<pos:position pos:line="40" pos:column="21"/></name> <argument_list pos:line="40" pos:column="22">(<argument><expr><name pos:line="40" pos:column="23">fp<pos:position pos:line="40" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="27">h<pos:position pos:line="40" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="30">f<pos:position pos:line="40" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="33">ch_flags<pos:position pos:line="40" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="43">NULL<pos:position pos:line="40" pos:column="47"/></name></expr></argument>)<pos:position pos:line="40" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">fputc<pos:position pos:line="41" pos:column="10"/></name> <argument_list pos:line="41" pos:column="11">(<argument><expr><literal type="char" pos:line="41" pos:column="12">'\n'<pos:position pos:line="41" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="18">f<pos:position pos:line="41" pos:column="19"/></name></expr></argument>)<pos:position pos:line="41" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">mutt_copy_bytes<pos:position pos:line="42" pos:column="20"/></name> <argument_list pos:line="42" pos:column="21">(<argument><expr><name pos:line="42" pos:column="22">fp<pos:position pos:line="42" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="26">f<pos:position pos:line="42" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="29">h<pos:position pos:line="42" pos:column="30"/></name><operator pos:line="42" pos:column="30">-&gt;<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="32">content<pos:position pos:line="42" pos:column="39"/></name><operator pos:line="42" pos:column="39">-&gt;<pos:position pos:line="42" pos:column="44"/></operator><name pos:line="42" pos:column="41">length<pos:position pos:line="42" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">safe_fclose<pos:position pos:line="43" pos:column="16"/></name> <argument_list pos:line="43" pos:column="17">(<argument><expr><operator pos:line="43" pos:column="18">&amp;<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="19">f<pos:position pos:line="43" pos:column="20"/></name></expr></argument>)<pos:position pos:line="43" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">FREE<pos:position pos:line="44" pos:column="9"/></name> <argument_list pos:line="44" pos:column="10">(<argument><expr><operator pos:line="44" pos:column="11">&amp;<pos:position pos:line="44" pos:column="16"/></operator><name pos:line="44" pos:column="12">msgid_str<pos:position pos:line="44" pos:column="21"/></name></expr></argument>)<pos:position pos:line="44" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="23"/></expr_stmt>

<cpp:if pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">if<pos:position pos:line="46" pos:column="4"/></cpp:directive> <expr><name pos:line="46" pos:column="5">USE_SMTP<pos:position pos:line="46" pos:column="13"/></name></expr></cpp:if>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name pos:line="47" pos:column="9">SmtpUrl<pos:position pos:line="47" pos:column="16"/></name></expr>)<pos:position pos:line="47" pos:column="17"/></condition><then pos:line="47" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="7">ret<pos:position pos:line="48" pos:column="10"/></name> <operator pos:line="48" pos:column="11">=<pos:position pos:line="48" pos:column="12"/></operator> <call><name pos:line="48" pos:column="13">mutt_smtp_send<pos:position pos:line="48" pos:column="27"/></name> <argument_list pos:line="48" pos:column="28">(<argument><expr><name pos:line="48" pos:column="29">env_from<pos:position pos:line="48" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="39">to<pos:position pos:line="48" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="43">NULL<pos:position pos:line="48" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="49">NULL<pos:position pos:line="48" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="55">tempfile<pos:position pos:line="48" pos:column="63"/></name></expr></argument>,
                            <argument><expr><name><name pos:line="49" pos:column="29">h<pos:position pos:line="49" pos:column="30"/></name><operator pos:line="49" pos:column="30">-&gt;<pos:position pos:line="49" pos:column="35"/></operator><name pos:line="49" pos:column="32">content<pos:position pos:line="49" pos:column="39"/></name><operator pos:line="49" pos:column="39">-&gt;<pos:position pos:line="49" pos:column="44"/></operator><name pos:line="49" pos:column="41">encoding<pos:position pos:line="49" pos:column="49"/></name></name> <operator pos:line="49" pos:column="50">==<pos:position pos:line="49" pos:column="52"/></operator> <name pos:line="49" pos:column="53">ENC8BIT<pos:position pos:line="49" pos:column="60"/></name></expr></argument>)<pos:position pos:line="49" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="62"/></expr_stmt></block></then>
    <else pos:line="50" pos:column="5">else
<cpp:endif pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">endif<pos:position pos:line="51" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="51" pos:column="8">/* USE_SMTP */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="5">ret<pos:position pos:line="52" pos:column="8"/></name> <operator pos:line="52" pos:column="9">=<pos:position pos:line="52" pos:column="10"/></operator> <call><name pos:line="52" pos:column="11">mutt_invoke_sendmail<pos:position pos:line="52" pos:column="31"/></name> <argument_list pos:line="52" pos:column="32">(<argument><expr><name pos:line="52" pos:column="33">env_from<pos:position pos:line="52" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="43">to<pos:position pos:line="52" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="47">NULL<pos:position pos:line="52" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="53">NULL<pos:position pos:line="52" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="59">tempfile<pos:position pos:line="52" pos:column="67"/></name></expr></argument>,
			  	<argument><expr><name><name pos:line="53" pos:column="33">h<pos:position pos:line="53" pos:column="34"/></name><operator pos:line="53" pos:column="34">-&gt;<pos:position pos:line="53" pos:column="39"/></operator><name pos:line="53" pos:column="36">content<pos:position pos:line="53" pos:column="43"/></name><operator pos:line="53" pos:column="43">-&gt;<pos:position pos:line="53" pos:column="48"/></operator><name pos:line="53" pos:column="45">encoding<pos:position pos:line="53" pos:column="53"/></name></name> <operator pos:line="53" pos:column="54">==<pos:position pos:line="53" pos:column="56"/></operator> <name pos:line="53" pos:column="57">ENC8BIT<pos:position pos:line="53" pos:column="64"/></name></expr></argument>)<pos:position pos:line="53" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="66"/></expr_stmt></block></else></if>
  }<pos:position pos:line="54" pos:column="4"/></block></then></if>

  <if pos:line="56" pos:column="3">if <condition pos:line="56" pos:column="6">(<expr><name pos:line="56" pos:column="7">msg<pos:position pos:line="56" pos:column="10"/></name></expr>)<pos:position pos:line="56" pos:column="11"/></condition><then pos:line="56" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="5">mx_close_message<pos:position pos:line="57" pos:column="21"/></name> <argument_list pos:line="57" pos:column="22">(<argument><expr><name pos:line="57" pos:column="23">Context<pos:position pos:line="57" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="32">&amp;<pos:position pos:line="57" pos:column="37"/></operator><name pos:line="57" pos:column="33">msg<pos:position pos:line="57" pos:column="36"/></name></expr></argument>)<pos:position pos:line="57" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="38"/></expr_stmt></block></then></if>

  <return pos:line="59" pos:column="3">return <expr><name pos:line="59" pos:column="10">ret<pos:position pos:line="59" pos:column="13"/></name></expr>;<pos:position pos:line="59" pos:column="14"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

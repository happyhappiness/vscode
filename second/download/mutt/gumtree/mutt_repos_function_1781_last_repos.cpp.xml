<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1781_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_alias<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">BUFFER<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">buf<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">BUFFER<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">s<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">unsigned<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">long<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">data<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="69">BUFFER<pos:position pos:line="1" pos:column="75"/></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">err<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">ALIAS<pos:position pos:line="3" pos:column="8"/></name> <modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">tmp<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><name pos:line="3" pos:column="16">Aliases<pos:position pos:line="3" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">ALIAS<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">last<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><name pos:line="4" pos:column="17">NULL<pos:position pos:line="4" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">estr<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><name pos:line="5" pos:column="16">NULL<pos:position pos:line="5" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">group_context_t<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">gc<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><name pos:line="6" pos:column="25">NULL<pos:position pos:line="6" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
  
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><call><name pos:line="8" pos:column="8">MoreArgs<pos:position pos:line="8" pos:column="16"/></name> <argument_list pos:line="8" pos:column="17">(<argument><expr><name pos:line="8" pos:column="18">s<pos:position pos:line="8" pos:column="19"/></name></expr></argument>)<pos:position pos:line="8" pos:column="20"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="21"/></condition><then pos:line="8" pos:column="21">
  <block pos:line="9" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">strfcpy<pos:position pos:line="10" pos:column="12"/></name> <argument_list pos:line="10" pos:column="13">(<argument><expr><name><name pos:line="10" pos:column="14">err<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-&gt;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="19">data<pos:position pos:line="10" pos:column="23"/></name></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="25">_<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><literal type="string" pos:line="10" pos:column="27">"alias: no address"<pos:position pos:line="10" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="49">err<pos:position pos:line="10" pos:column="52"/></name><operator pos:line="10" pos:column="52">-&gt;<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="54">dsize<pos:position pos:line="10" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="61"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><operator pos:line="11" pos:column="13">-<pos:position pos:line="11" pos:column="14"/></operator><literal type="number" pos:line="11" pos:column="14">1<pos:position pos:line="11" pos:column="15"/></literal><operator pos:line="11" pos:column="15">)<pos:position pos:line="11" pos:column="16"/></operator></expr>;<pos:position pos:line="11" pos:column="17"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">mutt_extract_token<pos:position pos:line="14" pos:column="21"/></name> <argument_list pos:line="14" pos:column="22">(<argument><expr><name pos:line="14" pos:column="23">buf<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="28">s<pos:position pos:line="14" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="31">0<pos:position pos:line="14" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><call><name pos:line="16" pos:column="7">parse_group_context<pos:position pos:line="16" pos:column="26"/></name> <argument_list pos:line="16" pos:column="27">(<argument><expr><operator pos:line="16" pos:column="28">&amp;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="29">gc<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">buf<pos:position pos:line="16" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="38">s<pos:position pos:line="16" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="41">data<pos:position pos:line="16" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="47">err<pos:position pos:line="16" pos:column="50"/></name></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></call> <operator pos:line="16" pos:column="52">==<pos:position pos:line="16" pos:column="54"/></operator> <operator pos:line="16" pos:column="55">-<pos:position pos:line="16" pos:column="56"/></operator><literal type="number" pos:line="16" pos:column="56">1<pos:position pos:line="16" pos:column="57"/></literal></expr>)<pos:position pos:line="16" pos:column="58"/></condition><then pos:line="16" pos:column="58">
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">-<pos:position pos:line="17" pos:column="13"/></operator><literal type="number" pos:line="17" pos:column="13">1<pos:position pos:line="17" pos:column="14"/></literal></expr>;<pos:position pos:line="17" pos:column="15"/></return></block></then></if>
  
  <comment type="block" pos:line="19" pos:column="3">/* check to see if an alias with this name already exists */</comment>
  <for pos:line="20" pos:column="3">for <control pos:line="20" pos:column="7">(<init pos:line="20" pos:column="8">;<pos:position pos:line="20" pos:column="9"/></init> <condition><expr><name pos:line="20" pos:column="10">tmp<pos:position pos:line="20" pos:column="13"/></name></expr>;<pos:position pos:line="20" pos:column="14"/></condition> <incr><expr><name pos:line="20" pos:column="15">tmp<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <name><name pos:line="20" pos:column="21">tmp<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">-&gt;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="26">next<pos:position pos:line="20" pos:column="30"/></name></name></expr></incr>)<pos:position pos:line="20" pos:column="31"/></control>
  <block pos:line="21" pos:column="3">{
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator><call><name pos:line="22" pos:column="10">mutt_strcasecmp<pos:position pos:line="22" pos:column="25"/></name> <argument_list pos:line="22" pos:column="26">(<argument><expr><name><name pos:line="22" pos:column="27">tmp<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">-&gt;<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="32">name<pos:position pos:line="22" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="38">buf<pos:position pos:line="22" pos:column="41"/></name><operator pos:line="22" pos:column="41">-&gt;<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="43">data<pos:position pos:line="22" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="49"/></condition><then pos:line="22" pos:column="49">
      <block type="pseudo"><break pos:line="23" pos:column="7">break;<pos:position pos:line="23" pos:column="13"/></break></block></then></if>
    <expr_stmt><expr><name pos:line="24" pos:column="5">last<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator> <name pos:line="24" pos:column="12">tmp<pos:position pos:line="24" pos:column="15"/></name></expr>;<pos:position pos:line="24" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></for>

  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><operator pos:line="27" pos:column="7">!<pos:position pos:line="27" pos:column="8"/></operator><name pos:line="27" pos:column="8">tmp<pos:position pos:line="27" pos:column="11"/></name></expr>)<pos:position pos:line="27" pos:column="12"/></condition><then pos:line="27" pos:column="12">
  <block pos:line="28" pos:column="3">{
    <comment type="block" pos:line="29" pos:column="5">/* create a new alias */</comment>
    <expr_stmt><expr><name pos:line="30" pos:column="5">tmp<pos:position pos:line="30" pos:column="8"/></name> <operator pos:line="30" pos:column="9">=<pos:position pos:line="30" pos:column="10"/></operator> <operator pos:line="30" pos:column="11">(<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="12">ALIAS<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">*<pos:position pos:line="30" pos:column="19"/></operator><operator pos:line="30" pos:column="19">)<pos:position pos:line="30" pos:column="20"/></operator> <call><name pos:line="30" pos:column="21">safe_calloc<pos:position pos:line="30" pos:column="32"/></name> <argument_list pos:line="30" pos:column="33">(<argument><expr><literal type="number" pos:line="30" pos:column="34">1<pos:position pos:line="30" pos:column="35"/></literal></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="37">sizeof <argument_list pos:line="30" pos:column="44">(<argument><expr><name pos:line="30" pos:column="45">ALIAS<pos:position pos:line="30" pos:column="50"/></name></expr></argument>)<pos:position pos:line="30" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">tmp<pos:position pos:line="31" pos:column="8"/></name><operator pos:line="31" pos:column="8">-&gt;<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="10">self<pos:position pos:line="31" pos:column="14"/></name></name> <operator pos:line="31" pos:column="15">=<pos:position pos:line="31" pos:column="16"/></operator> <name pos:line="31" pos:column="17">tmp<pos:position pos:line="31" pos:column="20"/></name></expr>;<pos:position pos:line="31" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">tmp<pos:position pos:line="32" pos:column="8"/></name><operator pos:line="32" pos:column="8">-&gt;<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="10">name<pos:position pos:line="32" pos:column="14"/></name></name> <operator pos:line="32" pos:column="15">=<pos:position pos:line="32" pos:column="16"/></operator> <call><name pos:line="32" pos:column="17">safe_strdup<pos:position pos:line="32" pos:column="28"/></name> <argument_list pos:line="32" pos:column="29">(<argument><expr><name><name pos:line="32" pos:column="30">buf<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">-&gt;<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="35">data<pos:position pos:line="32" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>
    <comment type="block" pos:line="33" pos:column="5">/* give the main addressbook code a chance */</comment>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">CurrentMenu<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">==<pos:position pos:line="34" pos:column="23"/></operator> <name pos:line="34" pos:column="24">MENU_ALIAS<pos:position pos:line="34" pos:column="34"/></name></expr>)<pos:position pos:line="34" pos:column="35"/></condition><then pos:line="34" pos:column="35">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="7">set_option<pos:position pos:line="35" pos:column="17"/></name> <argument_list pos:line="35" pos:column="18">(<argument><expr><name pos:line="35" pos:column="19">OPTMENUCALLER<pos:position pos:line="35" pos:column="32"/></name></expr></argument>)<pos:position pos:line="35" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt></block></then></if>
  }<pos:position pos:line="36" pos:column="4"/></block></then>
  <else pos:line="37" pos:column="3">else
  <block pos:line="38" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">mutt_alias_delete_reverse<pos:position pos:line="39" pos:column="30"/></name> <argument_list pos:line="39" pos:column="31">(<argument><expr><name pos:line="39" pos:column="32">tmp<pos:position pos:line="39" pos:column="35"/></name></expr></argument>)<pos:position pos:line="39" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="37"/></expr_stmt>
    <comment type="block" pos:line="40" pos:column="5">/* override the previous value */</comment>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">rfc822_free_address<pos:position pos:line="41" pos:column="24"/></name> <argument_list pos:line="41" pos:column="25">(<argument><expr><operator pos:line="41" pos:column="26">&amp;<pos:position pos:line="41" pos:column="31"/></operator><name><name pos:line="41" pos:column="27">tmp<pos:position pos:line="41" pos:column="30"/></name><operator pos:line="41" pos:column="30">-&gt;<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="32">addr<pos:position pos:line="41" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="38"/></expr_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">CurrentMenu<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">==<pos:position pos:line="42" pos:column="23"/></operator> <name pos:line="42" pos:column="24">MENU_ALIAS<pos:position pos:line="42" pos:column="34"/></name></expr>)<pos:position pos:line="42" pos:column="35"/></condition><then pos:line="42" pos:column="35">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="7">mutt_set_current_menu_redraw_full<pos:position pos:line="43" pos:column="40"/></name> <argument_list pos:line="43" pos:column="41">()<pos:position pos:line="43" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="44"/></expr_stmt></block></then></if>
  }<pos:position pos:line="44" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="46" pos:column="3">mutt_extract_token<pos:position pos:line="46" pos:column="21"/></name> <argument_list pos:line="46" pos:column="22">(<argument><expr><name pos:line="46" pos:column="23">buf<pos:position pos:line="46" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="28">s<pos:position pos:line="46" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="31">MUTT_TOKEN_QUOTE<pos:position pos:line="46" pos:column="47"/></name> <operator pos:line="46" pos:column="48">|<pos:position pos:line="46" pos:column="49"/></operator> <name pos:line="46" pos:column="50">MUTT_TOKEN_SPACE<pos:position pos:line="46" pos:column="66"/></name> <operator pos:line="46" pos:column="67">|<pos:position pos:line="46" pos:column="68"/></operator> <name pos:line="46" pos:column="69">MUTT_TOKEN_SEMICOLON<pos:position pos:line="46" pos:column="89"/></name></expr></argument>)<pos:position pos:line="46" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="91"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">dprint<pos:position pos:line="47" pos:column="9"/></name> <argument_list pos:line="47" pos:column="10">(<argument><expr><literal type="number" pos:line="47" pos:column="11">3<pos:position pos:line="47" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="47" pos:column="14">(<pos:position pos:line="47" pos:column="15"/></operator><name pos:line="47" pos:column="15">debugfile<pos:position pos:line="47" pos:column="24"/></name><operator pos:line="47" pos:column="24">,<pos:position pos:line="47" pos:column="25"/></operator> <literal type="string" pos:line="47" pos:column="26">"parse_alias: Second token is '%s'.\n"<pos:position pos:line="47" pos:column="64"/></literal><operator pos:line="47" pos:column="64">,<pos:position pos:line="47" pos:column="65"/></operator>
	      <name><name pos:line="48" pos:column="15">buf<pos:position pos:line="48" pos:column="18"/></name><operator pos:line="48" pos:column="18">-&gt;<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="20">data<pos:position pos:line="48" pos:column="24"/></name></name><operator pos:line="48" pos:column="24">)<pos:position pos:line="48" pos:column="25"/></operator></expr></argument>)<pos:position pos:line="48" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="27"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="50" pos:column="3">tmp<pos:position pos:line="50" pos:column="6"/></name><operator pos:line="50" pos:column="6">-&gt;<pos:position pos:line="50" pos:column="11"/></operator><name pos:line="50" pos:column="8">addr<pos:position pos:line="50" pos:column="12"/></name></name> <operator pos:line="50" pos:column="13">=<pos:position pos:line="50" pos:column="14"/></operator> <call><name pos:line="50" pos:column="15">mutt_parse_adrlist<pos:position pos:line="50" pos:column="33"/></name> <argument_list pos:line="50" pos:column="34">(<argument><expr><name><name pos:line="50" pos:column="35">tmp<pos:position pos:line="50" pos:column="38"/></name><operator pos:line="50" pos:column="38">-&gt;<pos:position pos:line="50" pos:column="43"/></operator><name pos:line="50" pos:column="40">addr<pos:position pos:line="50" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="46">buf<pos:position pos:line="50" pos:column="49"/></name><operator pos:line="50" pos:column="49">-&gt;<pos:position pos:line="50" pos:column="54"/></operator><name pos:line="50" pos:column="51">data<pos:position pos:line="50" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="57"/></expr_stmt>

  <if pos:line="52" pos:column="3">if <condition pos:line="52" pos:column="6">(<expr><name pos:line="52" pos:column="7">last<pos:position pos:line="52" pos:column="11"/></name></expr>)<pos:position pos:line="52" pos:column="12"/></condition><then pos:line="52" pos:column="12">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="53" pos:column="5">last<pos:position pos:line="53" pos:column="9"/></name><operator pos:line="53" pos:column="9">-&gt;<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="11">next<pos:position pos:line="53" pos:column="15"/></name></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <name pos:line="53" pos:column="18">tmp<pos:position pos:line="53" pos:column="21"/></name></expr>;<pos:position pos:line="53" pos:column="22"/></expr_stmt></block></then>
  <else pos:line="54" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="5">Aliases<pos:position pos:line="55" pos:column="12"/></name> <operator pos:line="55" pos:column="13">=<pos:position pos:line="55" pos:column="14"/></operator> <name pos:line="55" pos:column="15">tmp<pos:position pos:line="55" pos:column="18"/></name></expr>;<pos:position pos:line="55" pos:column="19"/></expr_stmt></block></else></if>
  <if pos:line="56" pos:column="3">if <condition pos:line="56" pos:column="6">(<expr><call><name pos:line="56" pos:column="7">mutt_addrlist_to_intl<pos:position pos:line="56" pos:column="28"/></name> <argument_list pos:line="56" pos:column="29">(<argument><expr><name><name pos:line="56" pos:column="30">tmp<pos:position pos:line="56" pos:column="33"/></name><operator pos:line="56" pos:column="33">-&gt;<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="35">addr<pos:position pos:line="56" pos:column="39"/></name></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="41">&amp;<pos:position pos:line="56" pos:column="46"/></operator><name pos:line="56" pos:column="42">estr<pos:position pos:line="56" pos:column="46"/></name></expr></argument>)<pos:position pos:line="56" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="48"/></condition><then pos:line="56" pos:column="48">
  <block pos:line="57" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">snprintf<pos:position pos:line="58" pos:column="13"/></name> <argument_list pos:line="58" pos:column="14">(<argument><expr><name><name pos:line="58" pos:column="15">err<pos:position pos:line="58" pos:column="18"/></name><operator pos:line="58" pos:column="18">-&gt;<pos:position pos:line="58" pos:column="23"/></operator><name pos:line="58" pos:column="20">data<pos:position pos:line="58" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="26">err<pos:position pos:line="58" pos:column="29"/></name><operator pos:line="58" pos:column="29">-&gt;<pos:position pos:line="58" pos:column="34"/></operator><name pos:line="58" pos:column="31">dsize<pos:position pos:line="58" pos:column="36"/></name></name></expr></argument>, <argument><expr><call><name pos:line="58" pos:column="38">_<pos:position pos:line="58" pos:column="39"/></name><argument_list pos:line="58" pos:column="39">(<argument><expr><literal type="string" pos:line="58" pos:column="40">"Warning: Bad IDN '%s' in alias '%s'.\n"<pos:position pos:line="58" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="81"/></argument_list></call></expr></argument>,
	      <argument><expr><name pos:line="59" pos:column="15">estr<pos:position pos:line="59" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="21">tmp<pos:position pos:line="59" pos:column="24"/></name><operator pos:line="59" pos:column="24">-&gt;<pos:position pos:line="59" pos:column="29"/></operator><name pos:line="59" pos:column="26">name<pos:position pos:line="59" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="32"/></expr_stmt>
    <goto pos:line="60" pos:column="5">goto <name pos:line="60" pos:column="10">bail<pos:position pos:line="60" pos:column="14"/></name>;<pos:position pos:line="60" pos:column="15"/></goto>
  }<pos:position pos:line="61" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="63" pos:column="3">mutt_group_context_add_adrlist<pos:position pos:line="63" pos:column="33"/></name> <argument_list pos:line="63" pos:column="34">(<argument><expr><name pos:line="63" pos:column="35">gc<pos:position pos:line="63" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="39">tmp<pos:position pos:line="63" pos:column="42"/></name><operator pos:line="63" pos:column="42">-&gt;<pos:position pos:line="63" pos:column="47"/></operator><name pos:line="63" pos:column="44">addr<pos:position pos:line="63" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="64" pos:column="3">mutt_alias_add_reverse<pos:position pos:line="64" pos:column="25"/></name> <argument_list pos:line="64" pos:column="26">(<argument><expr><name pos:line="64" pos:column="27">tmp<pos:position pos:line="64" pos:column="30"/></name></expr></argument>)<pos:position pos:line="64" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="32"/></expr_stmt>

<cpp:ifdef pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">ifdef<pos:position pos:line="66" pos:column="7"/></cpp:directive> <name pos:line="66" pos:column="8">DEBUG<pos:position pos:line="66" pos:column="13"/></name></cpp:ifdef>
  <if pos:line="67" pos:column="3">if <condition pos:line="67" pos:column="6">(<expr><name pos:line="67" pos:column="7">debuglevel<pos:position pos:line="67" pos:column="17"/></name> <operator pos:line="67" pos:column="18">&gt;=<pos:position pos:line="67" pos:column="23"/></operator> <literal type="number" pos:line="67" pos:column="21">2<pos:position pos:line="67" pos:column="22"/></literal></expr>)<pos:position pos:line="67" pos:column="23"/></condition><then pos:line="67" pos:column="23"> 
  <block pos:line="68" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="69" pos:column="5">ADDRESS<pos:position pos:line="69" pos:column="12"/></name> <modifier pos:line="69" pos:column="13">*<pos:position pos:line="69" pos:column="14"/></modifier></type><name pos:line="69" pos:column="14">a<pos:position pos:line="69" pos:column="15"/></name></decl>;<pos:position pos:line="69" pos:column="16"/></decl_stmt>
    <comment type="block" pos:line="70" pos:column="5">/* A group is terminated with an empty address, so check a-&gt;mailbox */</comment>
    <for pos:line="71" pos:column="5">for <control pos:line="71" pos:column="9">(<init><expr><name pos:line="71" pos:column="10">a<pos:position pos:line="71" pos:column="11"/></name> <operator pos:line="71" pos:column="12">=<pos:position pos:line="71" pos:column="13"/></operator> <name><name pos:line="71" pos:column="14">tmp<pos:position pos:line="71" pos:column="17"/></name><operator pos:line="71" pos:column="17">-&gt;<pos:position pos:line="71" pos:column="22"/></operator><name pos:line="71" pos:column="19">addr<pos:position pos:line="71" pos:column="23"/></name></name></expr>;<pos:position pos:line="71" pos:column="24"/></init> <condition><expr><name pos:line="71" pos:column="25">a<pos:position pos:line="71" pos:column="26"/></name> <operator pos:line="71" pos:column="27">&amp;&amp;<pos:position pos:line="71" pos:column="37"/></operator> <name><name pos:line="71" pos:column="30">a<pos:position pos:line="71" pos:column="31"/></name><operator pos:line="71" pos:column="31">-&gt;<pos:position pos:line="71" pos:column="36"/></operator><name pos:line="71" pos:column="33">mailbox<pos:position pos:line="71" pos:column="40"/></name></name></expr>;<pos:position pos:line="71" pos:column="41"/></condition> <incr><expr><name pos:line="71" pos:column="42">a<pos:position pos:line="71" pos:column="43"/></name> <operator pos:line="71" pos:column="44">=<pos:position pos:line="71" pos:column="45"/></operator> <name><name pos:line="71" pos:column="46">a<pos:position pos:line="71" pos:column="47"/></name><operator pos:line="71" pos:column="47">-&gt;<pos:position pos:line="71" pos:column="52"/></operator><name pos:line="71" pos:column="49">next<pos:position pos:line="71" pos:column="53"/></name></name></expr></incr>)<pos:position pos:line="71" pos:column="54"/></control>
    <block pos:line="72" pos:column="5">{
      <if pos:line="73" pos:column="7">if <condition pos:line="73" pos:column="10">(<expr><operator pos:line="73" pos:column="11">!<pos:position pos:line="73" pos:column="12"/></operator><name><name pos:line="73" pos:column="12">a<pos:position pos:line="73" pos:column="13"/></name><operator pos:line="73" pos:column="13">-&gt;<pos:position pos:line="73" pos:column="18"/></operator><name pos:line="73" pos:column="15">group<pos:position pos:line="73" pos:column="20"/></name></name></expr>)<pos:position pos:line="73" pos:column="21"/></condition><then pos:line="73" pos:column="21">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="9">dprint<pos:position pos:line="74" pos:column="15"/></name> <argument_list pos:line="74" pos:column="16">(<argument><expr><literal type="number" pos:line="74" pos:column="17">3<pos:position pos:line="74" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="74" pos:column="20">(<pos:position pos:line="74" pos:column="21"/></operator><name pos:line="74" pos:column="21">debugfile<pos:position pos:line="74" pos:column="30"/></name><operator pos:line="74" pos:column="30">,<pos:position pos:line="74" pos:column="31"/></operator> <literal type="string" pos:line="74" pos:column="32">"parse_alias:   %s\n"<pos:position pos:line="74" pos:column="53"/></literal><operator pos:line="74" pos:column="53">,<pos:position pos:line="74" pos:column="54"/></operator>
		    <name><name pos:line="75" pos:column="21">a<pos:position pos:line="75" pos:column="22"/></name><operator pos:line="75" pos:column="22">-&gt;<pos:position pos:line="75" pos:column="27"/></operator><name pos:line="75" pos:column="24">mailbox<pos:position pos:line="75" pos:column="31"/></name></name><operator pos:line="75" pos:column="31">)<pos:position pos:line="75" pos:column="32"/></operator></expr></argument>)<pos:position pos:line="75" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="34"/></expr_stmt></block></then>
      <else pos:line="76" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="9">dprint<pos:position pos:line="77" pos:column="15"/></name> <argument_list pos:line="77" pos:column="16">(<argument><expr><literal type="number" pos:line="77" pos:column="17">3<pos:position pos:line="77" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="77" pos:column="20">(<pos:position pos:line="77" pos:column="21"/></operator><name pos:line="77" pos:column="21">debugfile<pos:position pos:line="77" pos:column="30"/></name><operator pos:line="77" pos:column="30">,<pos:position pos:line="77" pos:column="31"/></operator> <literal type="string" pos:line="77" pos:column="32">"parse_alias:   Group %s\n"<pos:position pos:line="77" pos:column="59"/></literal><operator pos:line="77" pos:column="59">,<pos:position pos:line="77" pos:column="60"/></operator>
		    <name><name pos:line="78" pos:column="21">a<pos:position pos:line="78" pos:column="22"/></name><operator pos:line="78" pos:column="22">-&gt;<pos:position pos:line="78" pos:column="27"/></operator><name pos:line="78" pos:column="24">mailbox<pos:position pos:line="78" pos:column="31"/></name></name><operator pos:line="78" pos:column="31">)<pos:position pos:line="78" pos:column="32"/></operator></expr></argument>)<pos:position pos:line="78" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="34"/></expr_stmt></block></else></if>
    }<pos:position pos:line="79" pos:column="6"/></block></for>
  }<pos:position pos:line="80" pos:column="4"/></block></then></if>
<cpp:endif pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">endif<pos:position pos:line="81" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><call><name pos:line="82" pos:column="3">mutt_group_context_destroy<pos:position pos:line="82" pos:column="29"/></name> <argument_list pos:line="82" pos:column="30">(<argument><expr><operator pos:line="82" pos:column="31">&amp;<pos:position pos:line="82" pos:column="36"/></operator><name pos:line="82" pos:column="32">gc<pos:position pos:line="82" pos:column="34"/></name></expr></argument>)<pos:position pos:line="82" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="36"/></expr_stmt>
  <return pos:line="83" pos:column="3">return <expr><literal type="number" pos:line="83" pos:column="10">0<pos:position pos:line="83" pos:column="11"/></literal></expr>;<pos:position pos:line="83" pos:column="12"/></return>
  
  <label><name pos:line="85" pos:column="3">bail<pos:position pos:line="85" pos:column="7"/></name>:<pos:position pos:line="85" pos:column="8"/></label>
  <expr_stmt><expr><call><name pos:line="86" pos:column="3">mutt_group_context_destroy<pos:position pos:line="86" pos:column="29"/></name> <argument_list pos:line="86" pos:column="30">(<argument><expr><operator pos:line="86" pos:column="31">&amp;<pos:position pos:line="86" pos:column="36"/></operator><name pos:line="86" pos:column="32">gc<pos:position pos:line="86" pos:column="34"/></name></expr></argument>)<pos:position pos:line="86" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="36"/></expr_stmt>
  <return pos:line="87" pos:column="3">return <expr><operator pos:line="87" pos:column="10">-<pos:position pos:line="87" pos:column="11"/></operator><literal type="number" pos:line="87" pos:column="11">1<pos:position pos:line="87" pos:column="12"/></literal></expr>;<pos:position pos:line="87" pos:column="13"/></return>
}<pos:position pos:line="88" pos:column="2"/></block></function></unit>

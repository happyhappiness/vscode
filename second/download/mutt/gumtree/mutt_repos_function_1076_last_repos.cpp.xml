<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1076_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">mutt_hcache_fetch<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">header_cache_t<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">h<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">filename<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>,
		  <parameter><function_decl><type><name pos:line="3" pos:column="19">size_t<pos:position pos:line="3" pos:column="25"/></name></type>(<modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier><name pos:line="3" pos:column="27">keylen<pos:position pos:line="3" pos:column="33"/></name>) <parameter_list pos:line="3" pos:column="35">(<parameter><decl><type><specifier pos:line="3" pos:column="36">const<pos:position pos:line="3" pos:column="41"/></specifier> <name pos:line="3" pos:column="42">char<pos:position pos:line="3" pos:column="46"/></name> <modifier pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></modifier></type><name pos:line="3" pos:column="48">fn<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="51"/></parameter_list></function_decl></parameter>)<pos:position pos:line="3" pos:column="52"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">void<pos:position pos:line="5" pos:column="7"/></name><modifier pos:line="5" pos:column="7">*<pos:position pos:line="5" pos:column="8"/></modifier></type> <name pos:line="5" pos:column="9">data<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">data<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">=<pos:position pos:line="7" pos:column="9"/></operator> <call><name pos:line="7" pos:column="10">mutt_hcache_fetch_raw<pos:position pos:line="7" pos:column="31"/></name> <argument_list pos:line="7" pos:column="32">(<argument><expr><name pos:line="7" pos:column="33">h<pos:position pos:line="7" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="36">filename<pos:position pos:line="7" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="46">keylen<pos:position pos:line="7" pos:column="52"/></name></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="54"/></expr_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">!<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">data<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">||<pos:position pos:line="9" pos:column="15"/></operator> <operator pos:line="9" pos:column="16">!<pos:position pos:line="9" pos:column="17"/></operator><call><name pos:line="9" pos:column="17">crc_matches<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><name pos:line="9" pos:column="29">data<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="35">h<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">-&gt;<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="38">crc<pos:position pos:line="9" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="43"/></condition><then pos:line="9" pos:column="43">
  <block pos:line="10" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">mutt_hcache_free<pos:position pos:line="11" pos:column="21"/></name> <argument_list pos:line="11" pos:column="22">(<argument><expr><operator pos:line="11" pos:column="23">&amp;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="24">data<pos:position pos:line="11" pos:column="28"/></name></expr></argument>)<pos:position pos:line="11" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">NULL<pos:position pos:line="12" pos:column="16"/></name></expr>;<pos:position pos:line="12" pos:column="17"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>
  
  <return pos:line="15" pos:column="3">return <expr><name pos:line="15" pos:column="10">data<pos:position pos:line="15" pos:column="14"/></name></expr>;<pos:position pos:line="15" pos:column="15"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

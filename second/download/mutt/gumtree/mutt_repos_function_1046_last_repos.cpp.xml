<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1046_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">run_decode_and_handler<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">BODY<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">b<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">STATE<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">s<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">handler_t<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">handler<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="74">int<pos:position pos:line="1" pos:column="77"/></name></type> <name pos:line="1" pos:column="78">plaintext<pos:position pos:line="1" pos:column="87"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="88"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">origType<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">savePrefix<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name pos:line="4" pos:column="22">NULL<pos:position pos:line="4" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">fp<pos:position pos:line="5" pos:column="11"/></name> <init pos:line="5" pos:column="12">= <expr><name pos:line="5" pos:column="14">NULL<pos:position pos:line="5" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">tempfile<pos:position pos:line="6" pos:column="16"/></name><index pos:line="6" pos:column="16">[<expr><name pos:line="6" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="6" pos:column="32"/></name></expr>]<pos:position pos:line="6" pos:column="33"/></index></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">tmplength<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><literal type="number" pos:line="7" pos:column="22">0<pos:position pos:line="7" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">LOFF_T<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">tmpoffset<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><literal type="number" pos:line="8" pos:column="22">0<pos:position pos:line="8" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">decode<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><literal type="number" pos:line="9" pos:column="16">0<pos:position pos:line="9" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">rc<pos:position pos:line="10" pos:column="9"/></name> <init pos:line="10" pos:column="10">= <expr><literal type="number" pos:line="10" pos:column="12">0<pos:position pos:line="10" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">fseeko<pos:position pos:line="12" pos:column="9"/></name> <argument_list pos:line="12" pos:column="10">(<argument><expr><name><name pos:line="12" pos:column="11">s<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">fpin<pos:position pos:line="12" pos:column="18"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="20">b<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">-&gt;<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="23">offset<pos:position pos:line="12" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="31">0<pos:position pos:line="12" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt>

  <comment type="block" pos:line="14" pos:column="3">/* see if we need to decode this part before processing it */</comment>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name><name pos:line="15" pos:column="7">b<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">-&gt;<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="10">encoding<pos:position pos:line="15" pos:column="18"/></name></name> <operator pos:line="15" pos:column="19">==<pos:position pos:line="15" pos:column="21"/></operator> <name pos:line="15" pos:column="22">ENCBASE64<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">||<pos:position pos:line="15" pos:column="34"/></operator> <name><name pos:line="15" pos:column="35">b<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">-&gt;<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="38">encoding<pos:position pos:line="15" pos:column="46"/></name></name> <operator pos:line="15" pos:column="47">==<pos:position pos:line="15" pos:column="49"/></operator> <name pos:line="15" pos:column="50">ENCQUOTEDPRINTABLE<pos:position pos:line="15" pos:column="68"/></name> <operator pos:line="15" pos:column="69">||<pos:position pos:line="15" pos:column="71"/></operator>
      <name><name pos:line="16" pos:column="7">b<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">-&gt;<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="10">encoding<pos:position pos:line="16" pos:column="18"/></name></name> <operator pos:line="16" pos:column="19">==<pos:position pos:line="16" pos:column="21"/></operator> <name pos:line="16" pos:column="22">ENCUUENCODED<pos:position pos:line="16" pos:column="34"/></name> <operator pos:line="16" pos:column="35">||<pos:position pos:line="16" pos:column="37"/></operator> <name pos:line="16" pos:column="38">plaintext<pos:position pos:line="16" pos:column="47"/></name> <operator pos:line="16" pos:column="48">||<pos:position pos:line="16" pos:column="50"/></operator>
      <call><name pos:line="17" pos:column="7">mutt_is_text_part<pos:position pos:line="17" pos:column="24"/></name> <argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">b<pos:position pos:line="17" pos:column="27"/></name></expr></argument>)<pos:position pos:line="17" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="29"/></condition><then pos:line="17" pos:column="29">				<comment type="block" pos:line="17" pos:column="57">/* text subtypes may
                                                        * require character
                                                        * set conversion even
                                                        * with 8bit encoding.
                                                        */</comment>
  <block pos:line="22" pos:column="3">{
    <expr_stmt><expr><name pos:line="23" pos:column="5">origType<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <name><name pos:line="23" pos:column="16">b<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">-&gt;<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="19">type<pos:position pos:line="23" pos:column="23"/></name></name></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">!<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">plaintext<pos:position pos:line="25" pos:column="19"/></name></expr>)<pos:position pos:line="25" pos:column="20"/></condition><then pos:line="25" pos:column="20">
    <block pos:line="26" pos:column="5">{
      <comment type="block" pos:line="27" pos:column="7">/* decode to a tempfile, saving the original destination */</comment>
      <expr_stmt><expr><name pos:line="28" pos:column="7">fp<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <name><name pos:line="28" pos:column="12">s<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">-&gt;<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="15">fpout<pos:position pos:line="28" pos:column="20"/></name></name></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">mutt_mktemp<pos:position pos:line="29" pos:column="18"/></name> <argument_list pos:line="29" pos:column="19">(<argument><expr><name pos:line="29" pos:column="20">tempfile<pos:position pos:line="29" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="30">sizeof <argument_list pos:line="29" pos:column="37">(<argument><expr><name pos:line="29" pos:column="38">tempfile<pos:position pos:line="29" pos:column="46"/></name></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="49"/></expr_stmt>
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><operator pos:line="30" pos:column="11">(<pos:position pos:line="30" pos:column="12"/></operator><name><name pos:line="30" pos:column="12">s<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">-&gt;<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="15">fpout<pos:position pos:line="30" pos:column="20"/></name></name> <operator pos:line="30" pos:column="21">=<pos:position pos:line="30" pos:column="22"/></operator> <call><name pos:line="30" pos:column="23">safe_fopen<pos:position pos:line="30" pos:column="33"/></name> <argument_list pos:line="30" pos:column="34">(<argument><expr><name pos:line="30" pos:column="35">tempfile<pos:position pos:line="30" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="45">"w"<pos:position pos:line="30" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></call><operator pos:line="30" pos:column="49">)<pos:position pos:line="30" pos:column="50"/></operator> <operator pos:line="30" pos:column="51">==<pos:position pos:line="30" pos:column="53"/></operator> <name pos:line="30" pos:column="54">NULL<pos:position pos:line="30" pos:column="58"/></name></expr>)<pos:position pos:line="30" pos:column="59"/></condition><then pos:line="30" pos:column="59">
      <block pos:line="31" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="32" pos:column="9">mutt_error<pos:position pos:line="32" pos:column="19"/></name></type> <name pos:line="32" pos:column="20">_<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><literal type="string" pos:line="32" pos:column="22">"Unable to open temporary file!"<pos:position pos:line="32" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="55"/></argument_list></decl>;<pos:position pos:line="32" pos:column="56"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">dprint<pos:position pos:line="33" pos:column="15"/></name> <argument_list pos:line="33" pos:column="16">(<argument><expr><literal type="number" pos:line="33" pos:column="17">1<pos:position pos:line="33" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="33" pos:column="20">(<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="21">debugfile<pos:position pos:line="33" pos:column="30"/></name><operator pos:line="33" pos:column="30">,<pos:position pos:line="33" pos:column="31"/></operator> <literal type="string" pos:line="33" pos:column="32">"Can't open %s.\n"<pos:position pos:line="33" pos:column="50"/></literal><operator pos:line="33" pos:column="50">,<pos:position pos:line="33" pos:column="51"/></operator> <name pos:line="33" pos:column="52">tempfile<pos:position pos:line="33" pos:column="60"/></name><operator pos:line="33" pos:column="60">)<pos:position pos:line="33" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="33" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="63"/></expr_stmt>
        <return pos:line="34" pos:column="9">return <expr><operator pos:line="34" pos:column="16">-<pos:position pos:line="34" pos:column="17"/></operator><literal type="number" pos:line="34" pos:column="17">1<pos:position pos:line="34" pos:column="18"/></literal></expr>;<pos:position pos:line="34" pos:column="19"/></return>
      }<pos:position pos:line="35" pos:column="8"/></block></then></if>
      <comment type="block" pos:line="36" pos:column="7">/* decoding the attachment changes the size and offset, so save a copy
        * of the "real" values now, and restore them after processing
        */</comment>
      <expr_stmt><expr><name pos:line="39" pos:column="7">tmplength<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">=<pos:position pos:line="39" pos:column="18"/></operator> <name><name pos:line="39" pos:column="19">b<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">-&gt;<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="22">length<pos:position pos:line="39" pos:column="28"/></name></name></expr>;<pos:position pos:line="39" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name pos:line="40" pos:column="7">tmpoffset<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">=<pos:position pos:line="40" pos:column="18"/></operator> <name><name pos:line="40" pos:column="19">b<pos:position pos:line="40" pos:column="20"/></name><operator pos:line="40" pos:column="20">-&gt;<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="22">offset<pos:position pos:line="40" pos:column="28"/></name></name></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>

      <comment type="block" pos:line="42" pos:column="7">/* if we are decoding binary bodies, we don't want to prefix each
        * line with the prefix or else the data will get corrupted.
        */</comment>
      <expr_stmt><expr><name pos:line="45" pos:column="7">savePrefix<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">=<pos:position pos:line="45" pos:column="19"/></operator> <name><name pos:line="45" pos:column="20">s<pos:position pos:line="45" pos:column="21"/></name><operator pos:line="45" pos:column="21">-&gt;<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="23">prefix<pos:position pos:line="45" pos:column="29"/></name></name></expr>;<pos:position pos:line="45" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="46" pos:column="7">s<pos:position pos:line="46" pos:column="8"/></name><operator pos:line="46" pos:column="8">-&gt;<pos:position pos:line="46" pos:column="13"/></operator><name pos:line="46" pos:column="10">prefix<pos:position pos:line="46" pos:column="16"/></name></name> <operator pos:line="46" pos:column="17">=<pos:position pos:line="46" pos:column="18"/></operator> <name pos:line="46" pos:column="19">NULL<pos:position pos:line="46" pos:column="23"/></name></expr>;<pos:position pos:line="46" pos:column="24"/></expr_stmt>

      <expr_stmt><expr><name pos:line="48" pos:column="7">decode<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">=<pos:position pos:line="48" pos:column="15"/></operator> <literal type="number" pos:line="48" pos:column="16">1<pos:position pos:line="48" pos:column="17"/></literal></expr>;<pos:position pos:line="48" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></then>
    <else pos:line="50" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="51" pos:column="7">b<pos:position pos:line="51" pos:column="8"/></name><operator pos:line="51" pos:column="8">-&gt;<pos:position pos:line="51" pos:column="13"/></operator><name pos:line="51" pos:column="10">type<pos:position pos:line="51" pos:column="14"/></name></name> <operator pos:line="51" pos:column="15">=<pos:position pos:line="51" pos:column="16"/></operator> <name pos:line="51" pos:column="17">TYPETEXT<pos:position pos:line="51" pos:column="25"/></name></expr>;<pos:position pos:line="51" pos:column="26"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name pos:line="53" pos:column="5">mutt_decode_attachment<pos:position pos:line="53" pos:column="27"/></name> <argument_list pos:line="53" pos:column="28">(<argument><expr><name pos:line="53" pos:column="29">b<pos:position pos:line="53" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="32">s<pos:position pos:line="53" pos:column="33"/></name></expr></argument>)<pos:position pos:line="53" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="35"/></expr_stmt>

    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name pos:line="55" pos:column="9">decode<pos:position pos:line="55" pos:column="15"/></name></expr>)<pos:position pos:line="55" pos:column="16"/></condition><then pos:line="55" pos:column="16">
    <block pos:line="56" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="57" pos:column="7">b<pos:position pos:line="57" pos:column="8"/></name><operator pos:line="57" pos:column="8">-&gt;<pos:position pos:line="57" pos:column="13"/></operator><name pos:line="57" pos:column="10">length<pos:position pos:line="57" pos:column="16"/></name></name> <operator pos:line="57" pos:column="17">=<pos:position pos:line="57" pos:column="18"/></operator> <call><name pos:line="57" pos:column="19">ftello<pos:position pos:line="57" pos:column="25"/></name> <argument_list pos:line="57" pos:column="26">(<argument><expr><name><name pos:line="57" pos:column="27">s<pos:position pos:line="57" pos:column="28"/></name><operator pos:line="57" pos:column="28">-&gt;<pos:position pos:line="57" pos:column="33"/></operator><name pos:line="57" pos:column="30">fpout<pos:position pos:line="57" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="58" pos:column="7">b<pos:position pos:line="58" pos:column="8"/></name><operator pos:line="58" pos:column="8">-&gt;<pos:position pos:line="58" pos:column="13"/></operator><name pos:line="58" pos:column="10">offset<pos:position pos:line="58" pos:column="16"/></name></name> <operator pos:line="58" pos:column="17">=<pos:position pos:line="58" pos:column="18"/></operator> <literal type="number" pos:line="58" pos:column="19">0<pos:position pos:line="58" pos:column="20"/></literal></expr>;<pos:position pos:line="58" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="59" pos:column="7">safe_fclose<pos:position pos:line="59" pos:column="18"/></name> <argument_list pos:line="59" pos:column="19">(<argument><expr><operator pos:line="59" pos:column="20">&amp;<pos:position pos:line="59" pos:column="25"/></operator><name><name pos:line="59" pos:column="21">s<pos:position pos:line="59" pos:column="22"/></name><operator pos:line="59" pos:column="22">-&gt;<pos:position pos:line="59" pos:column="27"/></operator><name pos:line="59" pos:column="24">fpout<pos:position pos:line="59" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="31"/></expr_stmt>

      <comment type="block" pos:line="61" pos:column="7">/* restore final destination and substitute the tempfile for input */</comment>
      <expr_stmt><expr><name><name pos:line="62" pos:column="7">s<pos:position pos:line="62" pos:column="8"/></name><operator pos:line="62" pos:column="8">-&gt;<pos:position pos:line="62" pos:column="13"/></operator><name pos:line="62" pos:column="10">fpout<pos:position pos:line="62" pos:column="15"/></name></name> <operator pos:line="62" pos:column="16">=<pos:position pos:line="62" pos:column="17"/></operator> <name pos:line="62" pos:column="18">fp<pos:position pos:line="62" pos:column="20"/></name></expr>;<pos:position pos:line="62" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name pos:line="63" pos:column="7">fp<pos:position pos:line="63" pos:column="9"/></name> <operator pos:line="63" pos:column="10">=<pos:position pos:line="63" pos:column="11"/></operator> <name><name pos:line="63" pos:column="12">s<pos:position pos:line="63" pos:column="13"/></name><operator pos:line="63" pos:column="13">-&gt;<pos:position pos:line="63" pos:column="18"/></operator><name pos:line="63" pos:column="15">fpin<pos:position pos:line="63" pos:column="19"/></name></name></expr>;<pos:position pos:line="63" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="64" pos:column="7">s<pos:position pos:line="64" pos:column="8"/></name><operator pos:line="64" pos:column="8">-&gt;<pos:position pos:line="64" pos:column="13"/></operator><name pos:line="64" pos:column="10">fpin<pos:position pos:line="64" pos:column="14"/></name></name> <operator pos:line="64" pos:column="15">=<pos:position pos:line="64" pos:column="16"/></operator> <call><name pos:line="64" pos:column="17">fopen<pos:position pos:line="64" pos:column="22"/></name> <argument_list pos:line="64" pos:column="23">(<argument><expr><name pos:line="64" pos:column="24">tempfile<pos:position pos:line="64" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="34">"r"<pos:position pos:line="64" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="65" pos:column="7">unlink<pos:position pos:line="65" pos:column="13"/></name> <argument_list pos:line="65" pos:column="14">(<argument><expr><name pos:line="65" pos:column="15">tempfile<pos:position pos:line="65" pos:column="23"/></name></expr></argument>)<pos:position pos:line="65" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="25"/></expr_stmt>

      <comment type="block" pos:line="67" pos:column="7">/* restore the prefix */</comment>
      <expr_stmt><expr><name><name pos:line="68" pos:column="7">s<pos:position pos:line="68" pos:column="8"/></name><operator pos:line="68" pos:column="8">-&gt;<pos:position pos:line="68" pos:column="13"/></operator><name pos:line="68" pos:column="10">prefix<pos:position pos:line="68" pos:column="16"/></name></name> <operator pos:line="68" pos:column="17">=<pos:position pos:line="68" pos:column="18"/></operator> <name pos:line="68" pos:column="19">savePrefix<pos:position pos:line="68" pos:column="29"/></name></expr>;<pos:position pos:line="68" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="71" pos:column="5">b<pos:position pos:line="71" pos:column="6"/></name><operator pos:line="71" pos:column="6">-&gt;<pos:position pos:line="71" pos:column="11"/></operator><name pos:line="71" pos:column="8">type<pos:position pos:line="71" pos:column="12"/></name></name> <operator pos:line="71" pos:column="13">=<pos:position pos:line="71" pos:column="14"/></operator> <name pos:line="71" pos:column="15">origType<pos:position pos:line="71" pos:column="23"/></name></expr>;<pos:position pos:line="71" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="72" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="74" pos:column="3">/* process the (decoded) body part */</comment>
  <if pos:line="75" pos:column="3">if <condition pos:line="75" pos:column="6">(<expr><name pos:line="75" pos:column="7">handler<pos:position pos:line="75" pos:column="14"/></name></expr>)<pos:position pos:line="75" pos:column="15"/></condition><then pos:line="75" pos:column="15">
  <block pos:line="76" pos:column="3">{
    <expr_stmt><expr><name pos:line="77" pos:column="5">rc<pos:position pos:line="77" pos:column="7"/></name> <operator pos:line="77" pos:column="8">=<pos:position pos:line="77" pos:column="9"/></operator> <call><name pos:line="77" pos:column="10">handler<pos:position pos:line="77" pos:column="17"/></name> <argument_list pos:line="77" pos:column="18">(<argument><expr><name pos:line="77" pos:column="19">b<pos:position pos:line="77" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="22">s<pos:position pos:line="77" pos:column="23"/></name></expr></argument>)<pos:position pos:line="77" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="25"/></expr_stmt>

    <if pos:line="79" pos:column="5">if <condition pos:line="79" pos:column="8">(<expr><name pos:line="79" pos:column="9">rc<pos:position pos:line="79" pos:column="11"/></name></expr>)<pos:position pos:line="79" pos:column="12"/></condition><then pos:line="79" pos:column="12">
    <block pos:line="80" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="81" pos:column="7">dprint<pos:position pos:line="81" pos:column="13"/></name> <argument_list pos:line="81" pos:column="14">(<argument><expr><literal type="number" pos:line="81" pos:column="15">1<pos:position pos:line="81" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="81" pos:column="18">(<pos:position pos:line="81" pos:column="19"/></operator><name pos:line="81" pos:column="19">debugfile<pos:position pos:line="81" pos:column="28"/></name><operator pos:line="81" pos:column="28">,<pos:position pos:line="81" pos:column="29"/></operator> <literal type="string" pos:line="81" pos:column="30">"Failed on attachment of type %s/%s.\n"<pos:position pos:line="81" pos:column="69"/></literal><operator pos:line="81" pos:column="69">,<pos:position pos:line="81" pos:column="70"/></operator> <call><name pos:line="81" pos:column="71">TYPE<pos:position pos:line="81" pos:column="75"/></name><argument_list pos:line="81" pos:column="75">(<argument><expr><name pos:line="81" pos:column="76">b<pos:position pos:line="81" pos:column="77"/></name></expr></argument>)<pos:position pos:line="81" pos:column="78"/></argument_list></call><operator pos:line="81" pos:column="78">,<pos:position pos:line="81" pos:column="79"/></operator> <call><name pos:line="81" pos:column="80">NONULL<pos:position pos:line="81" pos:column="86"/></name> <argument_list pos:line="81" pos:column="87">(<argument><expr><name><name pos:line="81" pos:column="88">b<pos:position pos:line="81" pos:column="89"/></name><operator pos:line="81" pos:column="89">-&gt;<pos:position pos:line="81" pos:column="94"/></operator><name pos:line="81" pos:column="91">subtype<pos:position pos:line="81" pos:column="98"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="99"/></argument_list></call><operator pos:line="81" pos:column="99">)<pos:position pos:line="81" pos:column="100"/></operator></expr></argument>)<pos:position pos:line="81" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="102"/></expr_stmt>
    }<pos:position pos:line="82" pos:column="6"/></block></then></if>

    <if pos:line="84" pos:column="5">if <condition pos:line="84" pos:column="8">(<expr><name pos:line="84" pos:column="9">decode<pos:position pos:line="84" pos:column="15"/></name></expr>)<pos:position pos:line="84" pos:column="16"/></condition><then pos:line="84" pos:column="16">
    <block pos:line="85" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="86" pos:column="7">b<pos:position pos:line="86" pos:column="8"/></name><operator pos:line="86" pos:column="8">-&gt;<pos:position pos:line="86" pos:column="13"/></operator><name pos:line="86" pos:column="10">length<pos:position pos:line="86" pos:column="16"/></name></name> <operator pos:line="86" pos:column="17">=<pos:position pos:line="86" pos:column="18"/></operator> <name pos:line="86" pos:column="19">tmplength<pos:position pos:line="86" pos:column="28"/></name></expr>;<pos:position pos:line="86" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="87" pos:column="7">b<pos:position pos:line="87" pos:column="8"/></name><operator pos:line="87" pos:column="8">-&gt;<pos:position pos:line="87" pos:column="13"/></operator><name pos:line="87" pos:column="10">offset<pos:position pos:line="87" pos:column="16"/></name></name> <operator pos:line="87" pos:column="17">=<pos:position pos:line="87" pos:column="18"/></operator> <name pos:line="87" pos:column="19">tmpoffset<pos:position pos:line="87" pos:column="28"/></name></expr>;<pos:position pos:line="87" pos:column="29"/></expr_stmt>

      <comment type="block" pos:line="89" pos:column="7">/* restore the original source stream */</comment>
      <expr_stmt><expr><call><name pos:line="90" pos:column="7">safe_fclose<pos:position pos:line="90" pos:column="18"/></name> <argument_list pos:line="90" pos:column="19">(<argument><expr><operator pos:line="90" pos:column="20">&amp;<pos:position pos:line="90" pos:column="25"/></operator><name><name pos:line="90" pos:column="21">s<pos:position pos:line="90" pos:column="22"/></name><operator pos:line="90" pos:column="22">-&gt;<pos:position pos:line="90" pos:column="27"/></operator><name pos:line="90" pos:column="24">fpin<pos:position pos:line="90" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="91" pos:column="7">s<pos:position pos:line="91" pos:column="8"/></name><operator pos:line="91" pos:column="8">-&gt;<pos:position pos:line="91" pos:column="13"/></operator><name pos:line="91" pos:column="10">fpin<pos:position pos:line="91" pos:column="14"/></name></name> <operator pos:line="91" pos:column="15">=<pos:position pos:line="91" pos:column="16"/></operator> <name pos:line="91" pos:column="17">fp<pos:position pos:line="91" pos:column="19"/></name></expr>;<pos:position pos:line="91" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="92" pos:column="6"/></block></then></if>
  }<pos:position pos:line="93" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="94" pos:column="3">s<pos:position pos:line="94" pos:column="4"/></name><operator pos:line="94" pos:column="4">-&gt;<pos:position pos:line="94" pos:column="9"/></operator><name pos:line="94" pos:column="6">flags<pos:position pos:line="94" pos:column="11"/></name></name> <operator pos:line="94" pos:column="12">|=<pos:position pos:line="94" pos:column="14"/></operator> <name pos:line="94" pos:column="15">MUTT_FIRSTDONE<pos:position pos:line="94" pos:column="29"/></name></expr>;<pos:position pos:line="94" pos:column="30"/></expr_stmt>

  <return pos:line="96" pos:column="3">return <expr><name pos:line="96" pos:column="10">rc<pos:position pos:line="96" pos:column="12"/></name></expr>;<pos:position pos:line="96" pos:column="13"/></return>
}<pos:position pos:line="97" pos:column="2"/></block></function></unit>

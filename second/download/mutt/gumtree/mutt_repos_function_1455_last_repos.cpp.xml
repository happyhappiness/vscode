<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1455_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">state_attach_puts<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">t<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">STATE<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">s<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><operator pos:line="3" pos:column="7">*<pos:position pos:line="3" pos:column="8"/></operator><name pos:line="3" pos:column="8">t<pos:position pos:line="3" pos:column="9"/></name> <operator pos:line="3" pos:column="10">!=<pos:position pos:line="3" pos:column="12"/></operator> <literal type="char" pos:line="3" pos:column="13">'\n'<pos:position pos:line="3" pos:column="17"/></literal></expr>)<pos:position pos:line="3" pos:column="18"/></condition><then pos:line="3" pos:column="18"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="3" pos:column="19">state_mark_attach<pos:position pos:line="3" pos:column="36"/></name> <argument_list pos:line="3" pos:column="37">(<argument><expr><name pos:line="3" pos:column="38">s<pos:position pos:line="3" pos:column="39"/></name></expr></argument>)<pos:position pos:line="3" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="41"/></expr_stmt></block></then></if>
  <while pos:line="4" pos:column="3">while <condition pos:line="4" pos:column="9">(<expr><operator pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">t<pos:position pos:line="4" pos:column="12"/></name></expr>)<pos:position pos:line="4" pos:column="13"/></condition>
  <block pos:line="5" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">state_putc<pos:position pos:line="6" pos:column="15"/></name> <argument_list pos:line="6" pos:column="16">(<argument><expr><operator pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="18">t<pos:position pos:line="6" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="21">s<pos:position pos:line="6" pos:column="22"/></name></expr></argument>)<pos:position pos:line="6" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="24"/></expr_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">t<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">++<pos:position pos:line="7" pos:column="13"/></operator> <operator pos:line="7" pos:column="14">==<pos:position pos:line="7" pos:column="16"/></operator> <literal type="char" pos:line="7" pos:column="17">'\n'<pos:position pos:line="7" pos:column="21"/></literal> <operator pos:line="7" pos:column="22">&amp;&amp;<pos:position pos:line="7" pos:column="32"/></operator> <operator pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">t<pos:position pos:line="7" pos:column="27"/></name></expr>)<pos:position pos:line="7" pos:column="28"/></condition><then pos:line="7" pos:column="28">
      <block type="pseudo"><if pos:line="8" pos:column="7">if <condition pos:line="8" pos:column="10">(<expr><operator pos:line="8" pos:column="11">*<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="12">t<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">!=<pos:position pos:line="8" pos:column="16"/></operator> <literal type="char" pos:line="8" pos:column="17">'\n'<pos:position pos:line="8" pos:column="21"/></literal></expr>)<pos:position pos:line="8" pos:column="22"/></condition><then pos:line="8" pos:column="22"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="23">state_mark_attach<pos:position pos:line="8" pos:column="40"/></name> <argument_list pos:line="8" pos:column="41">(<argument><expr><name pos:line="8" pos:column="42">s<pos:position pos:line="8" pos:column="43"/></name></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="45"/></expr_stmt></block></then></if></block></then></if>
  }<pos:position pos:line="9" pos:column="4"/></block></while>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_923_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">my_wcstombs<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">dest<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">size_t<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">dlen<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">wchar_t<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">src<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="71">size_t<pos:position pos:line="1" pos:column="77"/></name></type> <name pos:line="1" pos:column="78">slen<pos:position pos:line="1" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="83"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">mbstate_t<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">st<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">k<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>

  <comment type="block" pos:line="6" pos:column="3">/* First convert directly into the destination buffer */</comment>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">memset<pos:position pos:line="7" pos:column="9"/></name> <argument_list pos:line="7" pos:column="10">(<argument><expr><operator pos:line="7" pos:column="11">&amp;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="12">st<pos:position pos:line="7" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="16">0<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="19">sizeof <argument_list pos:line="7" pos:column="26">(<argument><expr><name pos:line="7" pos:column="27">st<pos:position pos:line="7" pos:column="29"/></name></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>
  <for pos:line="8" pos:column="3">for <control pos:line="8" pos:column="7">(<init pos:line="8" pos:column="8">;<pos:position pos:line="8" pos:column="9"/></init> <condition><expr><name pos:line="8" pos:column="10">slen<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">&amp;&amp;<pos:position pos:line="8" pos:column="25"/></operator> <name pos:line="8" pos:column="18">dlen<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">&gt;=<pos:position pos:line="8" pos:column="28"/></operator> <name pos:line="8" pos:column="26">MB_LEN_MAX<pos:position pos:line="8" pos:column="36"/></name></expr>;<pos:position pos:line="8" pos:column="37"/></condition> <incr><expr><name pos:line="8" pos:column="38">dest<pos:position pos:line="8" pos:column="42"/></name> <operator pos:line="8" pos:column="43">+=<pos:position pos:line="8" pos:column="45"/></operator> <name pos:line="8" pos:column="46">k<pos:position pos:line="8" pos:column="47"/></name></expr><operator pos:line="8" pos:column="47">,<pos:position pos:line="8" pos:column="48"/></operator> <expr><name pos:line="8" pos:column="49">dlen<pos:position pos:line="8" pos:column="53"/></name> <operator pos:line="8" pos:column="54">-=<pos:position pos:line="8" pos:column="56"/></operator> <name pos:line="8" pos:column="57">k<pos:position pos:line="8" pos:column="58"/></name></expr><operator pos:line="8" pos:column="58">,<pos:position pos:line="8" pos:column="59"/></operator> <expr><name pos:line="8" pos:column="60">src<pos:position pos:line="8" pos:column="63"/></name><operator pos:line="8" pos:column="63">++<pos:position pos:line="8" pos:column="65"/></operator></expr><operator pos:line="8" pos:column="65">,<pos:position pos:line="8" pos:column="66"/></operator> <expr><name pos:line="8" pos:column="67">slen<pos:position pos:line="8" pos:column="71"/></name><operator pos:line="8" pos:column="71">--<pos:position pos:line="8" pos:column="73"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="74"/></control>
    <block type="pseudo"><if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">k<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">wcrtomb<pos:position pos:line="9" pos:column="21"/></name> <argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">dest<pos:position pos:line="9" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="29">*<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="30">src<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="35">&amp;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="36">st<pos:position pos:line="9" pos:column="38"/></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call><operator pos:line="9" pos:column="39">)<pos:position pos:line="9" pos:column="40"/></operator> <operator pos:line="9" pos:column="41">==<pos:position pos:line="9" pos:column="43"/></operator> <call pos:line="9" pos:column="44">(<name pos:line="9" pos:column="45">size_t<pos:position pos:line="9" pos:column="51"/></name>)<argument_list pos:line="9" pos:column="52">(<argument><expr><operator pos:line="9" pos:column="53">-<pos:position pos:line="9" pos:column="54"/></operator><literal type="number" pos:line="9" pos:column="54">1<pos:position pos:line="9" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="57"/></condition><then pos:line="9" pos:column="57">
      <block type="pseudo"><break pos:line="10" pos:column="7">break;<pos:position pos:line="10" pos:column="13"/></break></block></then></if></block></for>

  <comment type="block" pos:line="12" pos:column="3">/* If this works, we can stop now */</comment>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">dlen<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">&gt;=<pos:position pos:line="13" pos:column="17"/></operator> <name pos:line="13" pos:column="15">MB_LEN_MAX<pos:position pos:line="13" pos:column="25"/></name></expr>)<pos:position pos:line="13" pos:column="26"/></condition><then pos:line="13" pos:column="26"> <block pos:line="13" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">wcrtomb<pos:position pos:line="14" pos:column="12"/></name> <argument_list pos:line="14" pos:column="13">(<argument><expr><name pos:line="14" pos:column="14">dest<pos:position pos:line="14" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="20">0<pos:position pos:line="14" pos:column="21"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="23">&amp;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="24">st<pos:position pos:line="14" pos:column="26"/></name></expr></argument>)<pos:position pos:line="14" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>
    <return pos:line="15" pos:column="5">return;<pos:position pos:line="15" pos:column="12"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="18" pos:column="3">/* Otherwise convert any remaining data into a local buffer */</comment>
  <block pos:line="19" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">char<pos:position pos:line="20" pos:column="9"/></name></type> <name><name pos:line="20" pos:column="10">buf<pos:position pos:line="20" pos:column="13"/></name><index pos:line="20" pos:column="13">[<expr><literal type="number" pos:line="20" pos:column="14">3<pos:position pos:line="20" pos:column="15"/></literal> <operator pos:line="20" pos:column="16">*<pos:position pos:line="20" pos:column="17"/></operator> <name pos:line="20" pos:column="18">MB_LEN_MAX<pos:position pos:line="20" pos:column="28"/></name></expr>]<pos:position pos:line="20" pos:column="29"/></index></name></decl>;<pos:position pos:line="20" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">char<pos:position pos:line="21" pos:column="9"/></name> <modifier pos:line="21" pos:column="10">*<pos:position pos:line="21" pos:column="11"/></modifier></type><name pos:line="21" pos:column="11">p<pos:position pos:line="21" pos:column="12"/></name> <init pos:line="21" pos:column="13">= <expr><name pos:line="21" pos:column="15">buf<pos:position pos:line="21" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="19"/></decl_stmt>

    <for pos:line="23" pos:column="5">for <control pos:line="23" pos:column="9">(<init pos:line="23" pos:column="10">;<pos:position pos:line="23" pos:column="11"/></init> <condition><expr><name pos:line="23" pos:column="12">slen<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">&amp;&amp;<pos:position pos:line="23" pos:column="27"/></operator> <name pos:line="23" pos:column="20">p<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">-<pos:position pos:line="23" pos:column="23"/></operator> <name pos:line="23" pos:column="24">buf<pos:position pos:line="23" pos:column="27"/></name> <operator pos:line="23" pos:column="28">&lt;<pos:position pos:line="23" pos:column="32"/></operator> <name pos:line="23" pos:column="30">dlen<pos:position pos:line="23" pos:column="34"/></name></expr>;<pos:position pos:line="23" pos:column="35"/></condition> <incr><expr><name pos:line="23" pos:column="36">p<pos:position pos:line="23" pos:column="37"/></name> <operator pos:line="23" pos:column="38">+=<pos:position pos:line="23" pos:column="40"/></operator> <name pos:line="23" pos:column="41">k<pos:position pos:line="23" pos:column="42"/></name></expr><operator pos:line="23" pos:column="42">,<pos:position pos:line="23" pos:column="43"/></operator> <expr><name pos:line="23" pos:column="44">src<pos:position pos:line="23" pos:column="47"/></name><operator pos:line="23" pos:column="47">++<pos:position pos:line="23" pos:column="49"/></operator></expr><operator pos:line="23" pos:column="49">,<pos:position pos:line="23" pos:column="50"/></operator> <expr><name pos:line="23" pos:column="51">slen<pos:position pos:line="23" pos:column="55"/></name><operator pos:line="23" pos:column="55">--<pos:position pos:line="23" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="58"/></control>
      <block type="pseudo"><if pos:line="24" pos:column="7">if <condition pos:line="24" pos:column="10">(<expr><operator pos:line="24" pos:column="11">(<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="12">k<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <call><name pos:line="24" pos:column="16">wcrtomb<pos:position pos:line="24" pos:column="23"/></name> <argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">p<pos:position pos:line="24" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="28">*<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="29">src<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="34">&amp;<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="35">st<pos:position pos:line="24" pos:column="37"/></name></expr></argument>)<pos:position pos:line="24" pos:column="38"/></argument_list></call><operator pos:line="24" pos:column="38">)<pos:position pos:line="24" pos:column="39"/></operator> <operator pos:line="24" pos:column="40">==<pos:position pos:line="24" pos:column="42"/></operator> <call pos:line="24" pos:column="43">(<name pos:line="24" pos:column="44">size_t<pos:position pos:line="24" pos:column="50"/></name>)<argument_list pos:line="24" pos:column="51">(<argument><expr><operator pos:line="24" pos:column="52">-<pos:position pos:line="24" pos:column="53"/></operator><literal type="number" pos:line="24" pos:column="53">1<pos:position pos:line="24" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="56"/></condition><then pos:line="24" pos:column="56">
	<block type="pseudo"><break pos:line="25" pos:column="9">break;<pos:position pos:line="25" pos:column="15"/></break></block></then></if></block></for>
    <expr_stmt><expr><name pos:line="26" pos:column="5">p<pos:position pos:line="26" pos:column="6"/></name> <operator pos:line="26" pos:column="7">+=<pos:position pos:line="26" pos:column="9"/></operator> <call><name pos:line="26" pos:column="10">wcrtomb<pos:position pos:line="26" pos:column="17"/></name> <argument_list pos:line="26" pos:column="18">(<argument><expr><name pos:line="26" pos:column="19">p<pos:position pos:line="26" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="22">0<pos:position pos:line="26" pos:column="23"/></literal></expr></argument>, <argument><expr><operator pos:line="26" pos:column="25">&amp;<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="26">st<pos:position pos:line="26" pos:column="28"/></name></expr></argument>)<pos:position pos:line="26" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="28" pos:column="5">/* If it fits into the destination buffer, we can stop now */</comment>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">p<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">-<pos:position pos:line="29" pos:column="12"/></operator> <name pos:line="29" pos:column="13">buf<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">&lt;=<pos:position pos:line="29" pos:column="22"/></operator> <name pos:line="29" pos:column="20">dlen<pos:position pos:line="29" pos:column="24"/></name></expr>)<pos:position pos:line="29" pos:column="25"/></condition><then pos:line="29" pos:column="25"> <block pos:line="29" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">memcpy<pos:position pos:line="30" pos:column="13"/></name> <argument_list pos:line="30" pos:column="14">(<argument><expr><name pos:line="30" pos:column="15">dest<pos:position pos:line="30" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="21">buf<pos:position pos:line="30" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="26">p<pos:position pos:line="30" pos:column="27"/></name> <operator pos:line="30" pos:column="28">-<pos:position pos:line="30" pos:column="29"/></operator> <name pos:line="30" pos:column="30">buf<pos:position pos:line="30" pos:column="33"/></name></expr></argument>)<pos:position pos:line="30" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="35"/></expr_stmt>
      <return pos:line="31" pos:column="7">return;<pos:position pos:line="31" pos:column="14"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="34" pos:column="5">/* Otherwise we truncate the string in an ugly fashion */</comment>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">memcpy<pos:position pos:line="35" pos:column="11"/></name> <argument_list pos:line="35" pos:column="12">(<argument><expr><name pos:line="35" pos:column="13">dest<pos:position pos:line="35" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="19">buf<pos:position pos:line="35" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="24">dlen<pos:position pos:line="35" pos:column="28"/></name></expr></argument>)<pos:position pos:line="35" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">dest<pos:position pos:line="36" pos:column="9"/></name><index pos:line="36" pos:column="9">[<expr><name pos:line="36" pos:column="10">dlen<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">-<pos:position pos:line="36" pos:column="16"/></operator> <literal type="number" pos:line="36" pos:column="17">1<pos:position pos:line="36" pos:column="18"/></literal></expr>]<pos:position pos:line="36" pos:column="19"/></index></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <literal type="char" pos:line="36" pos:column="22">'\0'<pos:position pos:line="36" pos:column="26"/></literal></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt> <comment type="block" pos:line="36" pos:column="28">/* assume original dlen &gt; 0 */</comment>
  }<pos:position pos:line="37" pos:column="4"/></block>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

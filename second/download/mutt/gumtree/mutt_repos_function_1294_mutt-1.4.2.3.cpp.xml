<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1294_mutt-1.4.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">imap_get_delim<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">IMAP_DATA<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">idata<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">s<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">rc<pos:position pos:line="4" pos:column="9"/></name></decl>;<pos:position pos:line="4" pos:column="10"/></decl_stmt>

  <comment type="block" pos:line="6" pos:column="3">/* assume that the delim is /.  If this fails, we're in bigger trouble
   * than getting the delim wrong */</comment>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">idata<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">-&gt;<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="10">delim<pos:position pos:line="8" pos:column="15"/></name></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <literal type="char" pos:line="8" pos:column="18">'/'<pos:position pos:line="8" pos:column="21"/></literal></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">imap_cmd_start<pos:position pos:line="10" pos:column="17"/></name> <argument_list pos:line="10" pos:column="18">(<argument><expr><name pos:line="10" pos:column="19">idata<pos:position pos:line="10" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="26">"LIST \"\" \"\""<pos:position pos:line="10" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>

  <do pos:line="12" pos:column="3">do 
  <block pos:line="13" pos:column="3">{
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">rc<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">imap_cmd_step<pos:position pos:line="14" pos:column="28"/></name> <argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">idata<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call><operator pos:line="14" pos:column="36">)<pos:position pos:line="14" pos:column="37"/></operator> <operator pos:line="14" pos:column="38">!=<pos:position pos:line="14" pos:column="40"/></operator> <name pos:line="14" pos:column="41">IMAP_CMD_CONTINUE<pos:position pos:line="14" pos:column="58"/></name></expr>)<pos:position pos:line="14" pos:column="59"/></condition><then pos:line="14" pos:column="59">
      <block type="pseudo"><break pos:line="15" pos:column="7">break;<pos:position pos:line="15" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name pos:line="17" pos:column="5">s<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <call><name pos:line="17" pos:column="9">imap_next_word<pos:position pos:line="17" pos:column="23"/></name> <argument_list pos:line="17" pos:column="24">(<argument><expr><name><name pos:line="17" pos:column="25">idata<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">-&gt;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="32">cmd<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">.<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="36">buf<pos:position pos:line="17" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name pos:line="18" pos:column="9">ascii_strncasecmp<pos:position pos:line="18" pos:column="26"/></name> <argument_list pos:line="18" pos:column="27">(<argument><expr><literal type="string" pos:line="18" pos:column="28">"LIST"<pos:position pos:line="18" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="36">s<pos:position pos:line="18" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="39">4<pos:position pos:line="18" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="41"/></argument_list></call> <operator pos:line="18" pos:column="42">==<pos:position pos:line="18" pos:column="44"/></operator> <literal type="number" pos:line="18" pos:column="45">0<pos:position pos:line="18" pos:column="46"/></literal></expr>)<pos:position pos:line="18" pos:column="47"/></condition><then pos:line="18" pos:column="47">
    <block pos:line="19" pos:column="5">{
      <expr_stmt><expr><name pos:line="20" pos:column="7">s<pos:position pos:line="20" pos:column="8"/></name> <operator pos:line="20" pos:column="9">=<pos:position pos:line="20" pos:column="10"/></operator> <call><name pos:line="20" pos:column="11">imap_next_word<pos:position pos:line="20" pos:column="25"/></name> <argument_list pos:line="20" pos:column="26">(<argument><expr><name pos:line="20" pos:column="27">s<pos:position pos:line="20" pos:column="28"/></name></expr></argument>)<pos:position pos:line="20" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name pos:line="21" pos:column="7">s<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">=<pos:position pos:line="21" pos:column="10"/></operator> <call><name pos:line="21" pos:column="11">imap_next_word<pos:position pos:line="21" pos:column="25"/></name> <argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">s<pos:position pos:line="21" pos:column="28"/></name></expr></argument>)<pos:position pos:line="21" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
      <if pos:line="22" pos:column="7">if <condition pos:line="22" pos:column="10">(<expr><name pos:line="22" pos:column="11">s<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">&amp;&amp;<pos:position pos:line="22" pos:column="23"/></operator> <name><name pos:line="22" pos:column="16">s<pos:position pos:line="22" pos:column="17"/></name><index pos:line="22" pos:column="17">[<expr><literal type="number" pos:line="22" pos:column="18">0<pos:position pos:line="22" pos:column="19"/></literal></expr>]<pos:position pos:line="22" pos:column="20"/></index></name> <operator pos:line="22" pos:column="21">==<pos:position pos:line="22" pos:column="23"/></operator> <literal type="char" pos:line="22" pos:column="24">'\"'<pos:position pos:line="22" pos:column="28"/></literal> <operator pos:line="22" pos:column="29">&amp;&amp;<pos:position pos:line="22" pos:column="39"/></operator> <name><name pos:line="22" pos:column="32">s<pos:position pos:line="22" pos:column="33"/></name><index pos:line="22" pos:column="33">[<expr><literal type="number" pos:line="22" pos:column="34">1<pos:position pos:line="22" pos:column="35"/></literal></expr>]<pos:position pos:line="22" pos:column="36"/></index></name> <operator pos:line="22" pos:column="37">&amp;&amp;<pos:position pos:line="22" pos:column="47"/></operator> <name><name pos:line="22" pos:column="40">s<pos:position pos:line="22" pos:column="41"/></name><index pos:line="22" pos:column="41">[<expr><literal type="number" pos:line="22" pos:column="42">2<pos:position pos:line="22" pos:column="43"/></literal></expr>]<pos:position pos:line="22" pos:column="44"/></index></name> <operator pos:line="22" pos:column="45">==<pos:position pos:line="22" pos:column="47"/></operator> <literal type="char" pos:line="22" pos:column="48">'\"'<pos:position pos:line="22" pos:column="52"/></literal></expr>)<pos:position pos:line="22" pos:column="53"/></condition><then pos:line="22" pos:column="53">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="9">idata<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">-&gt;<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="16">delim<pos:position pos:line="23" pos:column="21"/></name></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <name><name pos:line="23" pos:column="24">s<pos:position pos:line="23" pos:column="25"/></name><index pos:line="23" pos:column="25">[<expr><literal type="number" pos:line="23" pos:column="26">1<pos:position pos:line="23" pos:column="27"/></literal></expr>]<pos:position pos:line="23" pos:column="28"/></index></name></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt></block></then>
      <elseif pos:line="24" pos:column="7">else <if pos:line="24" pos:column="12">if <condition pos:line="24" pos:column="15">(<expr><name pos:line="24" pos:column="16">s<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">&amp;&amp;<pos:position pos:line="24" pos:column="28"/></operator> <name><name pos:line="24" pos:column="21">s<pos:position pos:line="24" pos:column="22"/></name><index pos:line="24" pos:column="22">[<expr><literal type="number" pos:line="24" pos:column="23">0<pos:position pos:line="24" pos:column="24"/></literal></expr>]<pos:position pos:line="24" pos:column="25"/></index></name> <operator pos:line="24" pos:column="26">==<pos:position pos:line="24" pos:column="28"/></operator> <literal type="char" pos:line="24" pos:column="29">'\"'<pos:position pos:line="24" pos:column="33"/></literal> <operator pos:line="24" pos:column="34">&amp;&amp;<pos:position pos:line="24" pos:column="44"/></operator> <name><name pos:line="24" pos:column="37">s<pos:position pos:line="24" pos:column="38"/></name><index pos:line="24" pos:column="38">[<expr><literal type="number" pos:line="24" pos:column="39">1<pos:position pos:line="24" pos:column="40"/></literal></expr>]<pos:position pos:line="24" pos:column="41"/></index></name> <operator pos:line="24" pos:column="42">&amp;&amp;<pos:position pos:line="24" pos:column="52"/></operator> <name><name pos:line="24" pos:column="45">s<pos:position pos:line="24" pos:column="46"/></name><index pos:line="24" pos:column="46">[<expr><literal type="number" pos:line="24" pos:column="47">1<pos:position pos:line="24" pos:column="48"/></literal></expr>]<pos:position pos:line="24" pos:column="49"/></index></name> <operator pos:line="24" pos:column="50">==<pos:position pos:line="24" pos:column="52"/></operator> <literal type="char" pos:line="24" pos:column="53">'\\'<pos:position pos:line="24" pos:column="57"/></literal> <operator pos:line="24" pos:column="58">&amp;&amp;<pos:position pos:line="24" pos:column="68"/></operator> <name><name pos:line="24" pos:column="61">s<pos:position pos:line="24" pos:column="62"/></name><index pos:line="24" pos:column="62">[<expr><literal type="number" pos:line="24" pos:column="63">2<pos:position pos:line="24" pos:column="64"/></literal></expr>]<pos:position pos:line="24" pos:column="65"/></index></name> <operator pos:line="24" pos:column="66">&amp;&amp;<pos:position pos:line="24" pos:column="76"/></operator> <name><name pos:line="24" pos:column="69">s<pos:position pos:line="24" pos:column="70"/></name><index pos:line="24" pos:column="70">[<expr><literal type="number" pos:line="24" pos:column="71">3<pos:position pos:line="24" pos:column="72"/></literal></expr>]<pos:position pos:line="24" pos:column="73"/></index></name> <operator pos:line="24" pos:column="74">==<pos:position pos:line="24" pos:column="76"/></operator> <literal type="char" pos:line="24" pos:column="77">'\"'<pos:position pos:line="24" pos:column="81"/></literal></expr>)<pos:position pos:line="24" pos:column="82"/></condition><then pos:line="24" pos:column="82">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="25" pos:column="9">idata<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">-&gt;<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="16">delim<pos:position pos:line="25" pos:column="21"/></name></name> <operator pos:line="25" pos:column="22">=<pos:position pos:line="25" pos:column="23"/></operator> <name><name pos:line="25" pos:column="24">s<pos:position pos:line="25" pos:column="25"/></name><index pos:line="25" pos:column="25">[<expr><literal type="number" pos:line="25" pos:column="26">2<pos:position pos:line="25" pos:column="27"/></literal></expr>]<pos:position pos:line="25" pos:column="28"/></index></name></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt></block></then></if></elseif></if>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
  }<pos:position pos:line="27" pos:column="4"/></block>
  while <condition pos:line="28" pos:column="9">(<expr><name pos:line="28" pos:column="10">rc<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">==<pos:position pos:line="28" pos:column="15"/></operator> <name pos:line="28" pos:column="16">IMAP_CMD_CONTINUE<pos:position pos:line="28" pos:column="33"/></name></expr>)<pos:position pos:line="28" pos:column="34"/></condition>;<pos:position pos:line="28" pos:column="35"/></do>

  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name pos:line="30" pos:column="7">rc<pos:position pos:line="30" pos:column="9"/></name> <operator pos:line="30" pos:column="10">!=<pos:position pos:line="30" pos:column="12"/></operator> <name pos:line="30" pos:column="13">IMAP_CMD_OK<pos:position pos:line="30" pos:column="24"/></name></expr>)<pos:position pos:line="30" pos:column="25"/></condition><then pos:line="30" pos:column="25">
  <block pos:line="31" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">dprint<pos:position pos:line="32" pos:column="11"/></name> <argument_list pos:line="32" pos:column="12">(<argument><expr><literal type="number" pos:line="32" pos:column="13">1<pos:position pos:line="32" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="32" pos:column="16">(<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="17">debugfile<pos:position pos:line="32" pos:column="26"/></name><operator pos:line="32" pos:column="26">,<pos:position pos:line="32" pos:column="27"/></operator> <literal type="string" pos:line="32" pos:column="28">"imap_get_delim: failed.\n"<pos:position pos:line="32" pos:column="55"/></literal><operator pos:line="32" pos:column="55">)<pos:position pos:line="32" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="32" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="58"/></expr_stmt>
    <return pos:line="33" pos:column="5">return <expr><operator pos:line="33" pos:column="12">-<pos:position pos:line="33" pos:column="13"/></operator><literal type="number" pos:line="33" pos:column="13">1<pos:position pos:line="33" pos:column="14"/></literal></expr>;<pos:position pos:line="33" pos:column="15"/></return>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="36" pos:column="3">dprint<pos:position pos:line="36" pos:column="9"/></name> <argument_list pos:line="36" pos:column="10">(<argument><expr><literal type="number" pos:line="36" pos:column="11">2<pos:position pos:line="36" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="36" pos:column="14">(<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="15">debugfile<pos:position pos:line="36" pos:column="24"/></name><operator pos:line="36" pos:column="24">,<pos:position pos:line="36" pos:column="25"/></operator> <literal type="string" pos:line="36" pos:column="26">"Delimiter: %c\n"<pos:position pos:line="36" pos:column="43"/></literal><operator pos:line="36" pos:column="43">,<pos:position pos:line="36" pos:column="44"/></operator> <name><name pos:line="36" pos:column="45">idata<pos:position pos:line="36" pos:column="50"/></name><operator pos:line="36" pos:column="50">-&gt;<pos:position pos:line="36" pos:column="55"/></operator><name pos:line="36" pos:column="52">delim<pos:position pos:line="36" pos:column="57"/></name></name><operator pos:line="36" pos:column="57">)<pos:position pos:line="36" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="60"/></expr_stmt>

  <return pos:line="38" pos:column="3">return <expr><operator pos:line="38" pos:column="10">-<pos:position pos:line="38" pos:column="11"/></operator><literal type="number" pos:line="38" pos:column="11">1<pos:position pos:line="38" pos:column="12"/></literal></expr>;<pos:position pos:line="38" pos:column="13"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_435_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">smime_decrypt_mime<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">FILE<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">fpin<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">FILE<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier><modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">fpout<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">BODY<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">b<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">BODY<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier><modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">cur<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{


  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">tempfile<pos:position pos:line="5" pos:column="16"/></name><index pos:line="5" pos:column="16">[<expr><name pos:line="5" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="5" pos:column="32"/></name></expr>]<pos:position pos:line="5" pos:column="33"/></index></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">STATE<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">s<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">LOFF_T<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">tmpoffset<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><name><name pos:line="7" pos:column="22">b<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">-&gt;<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="25">offset<pos:position pos:line="7" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">tmplength<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><name><name pos:line="8" pos:column="22">b<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">length<pos:position pos:line="8" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">origType<pos:position pos:line="9" pos:column="15"/></name> <init pos:line="9" pos:column="16">= <expr><name><name pos:line="9" pos:column="18">b<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">-&gt;<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="21">type<pos:position pos:line="9" pos:column="25"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">FILE<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">tmpfp<pos:position pos:line="10" pos:column="14"/></name><init pos:line="10" pos:column="14">=<expr><name pos:line="10" pos:column="15">NULL<pos:position pos:line="10" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">rv<pos:position pos:line="11" pos:column="9"/></name> <init pos:line="11" pos:column="10">= <expr><literal type="number" pos:line="11" pos:column="12">0<pos:position pos:line="11" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="14"/></decl_stmt>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><operator pos:line="13" pos:column="7">!<pos:position pos:line="13" pos:column="8"/></operator><call><name pos:line="13" pos:column="8">mutt_is_application_smime<pos:position pos:line="13" pos:column="33"/></name> <argument_list pos:line="13" pos:column="34">(<argument><expr><name pos:line="13" pos:column="35">b<pos:position pos:line="13" pos:column="36"/></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="38"/></condition><then pos:line="13" pos:column="38">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">-<pos:position pos:line="14" pos:column="13"/></operator><literal type="number" pos:line="14" pos:column="13">1<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></return></block></then></if>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name><name pos:line="16" pos:column="7">b<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">-&gt;<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="10">parts<pos:position pos:line="16" pos:column="15"/></name></name></expr>)<pos:position pos:line="16" pos:column="16"/></condition><then pos:line="16" pos:column="16">
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">-<pos:position pos:line="17" pos:column="13"/></operator><literal type="number" pos:line="17" pos:column="13">1<pos:position pos:line="17" pos:column="14"/></literal></expr>;<pos:position pos:line="17" pos:column="15"/></return></block></then></if>
  
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">memset<pos:position pos:line="19" pos:column="9"/></name> <argument_list pos:line="19" pos:column="10">(<argument><expr><operator pos:line="19" pos:column="11">&amp;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="12">s<pos:position pos:line="19" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="15">0<pos:position pos:line="19" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="18">sizeof <argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">s<pos:position pos:line="19" pos:column="27"/></name></expr></argument>)<pos:position pos:line="19" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">s<pos:position pos:line="20" pos:column="4"/></name><operator pos:line="20" pos:column="4">.<pos:position pos:line="20" pos:column="5"/></operator><name pos:line="20" pos:column="5">fpin<pos:position pos:line="20" pos:column="9"/></name></name> <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator> <name pos:line="20" pos:column="12">fpin<pos:position pos:line="20" pos:column="16"/></name></expr>;<pos:position pos:line="20" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">fseeko<pos:position pos:line="21" pos:column="9"/></name> <argument_list pos:line="21" pos:column="10">(<argument><expr><name><name pos:line="21" pos:column="11">s<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">.<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">fpin<pos:position pos:line="21" pos:column="17"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="19">b<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">offset<pos:position pos:line="21" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="30">0<pos:position pos:line="21" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">mutt_mktemp<pos:position pos:line="23" pos:column="14"/></name> <argument_list pos:line="23" pos:column="15">(<argument><expr><name pos:line="23" pos:column="16">tempfile<pos:position pos:line="23" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="26">sizeof <argument_list pos:line="23" pos:column="33">(<argument><expr><name pos:line="23" pos:column="34">tempfile<pos:position pos:line="23" pos:column="42"/></name></expr></argument>)<pos:position pos:line="23" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="45"/></expr_stmt>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><operator pos:line="24" pos:column="7">(<pos:position pos:line="24" pos:column="8"/></operator><name pos:line="24" pos:column="8">tmpfp<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <call><name pos:line="24" pos:column="16">safe_fopen<pos:position pos:line="24" pos:column="26"/></name> <argument_list pos:line="24" pos:column="27">(<argument><expr><name pos:line="24" pos:column="28">tempfile<pos:position pos:line="24" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="38">"w+"<pos:position pos:line="24" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="43"/></argument_list></call><operator pos:line="24" pos:column="43">)<pos:position pos:line="24" pos:column="44"/></operator> <operator pos:line="24" pos:column="45">==<pos:position pos:line="24" pos:column="47"/></operator> <name pos:line="24" pos:column="48">NULL<pos:position pos:line="24" pos:column="52"/></name></expr>)<pos:position pos:line="24" pos:column="53"/></condition><then pos:line="24" pos:column="53">
  <block pos:line="25" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">mutt_perror<pos:position pos:line="26" pos:column="16"/></name> <argument_list pos:line="26" pos:column="17">(<argument><expr><name pos:line="26" pos:column="18">tempfile<pos:position pos:line="26" pos:column="26"/></name></expr></argument>)<pos:position pos:line="26" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="28"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><operator pos:line="27" pos:column="12">(<pos:position pos:line="27" pos:column="13"/></operator><operator pos:line="27" pos:column="13">-<pos:position pos:line="27" pos:column="14"/></operator><literal type="number" pos:line="27" pos:column="14">1<pos:position pos:line="27" pos:column="15"/></literal><operator pos:line="27" pos:column="15">)<pos:position pos:line="27" pos:column="16"/></operator></expr>;<pos:position pos:line="27" pos:column="17"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="30" pos:column="3">mutt_unlink<pos:position pos:line="30" pos:column="14"/></name> <argument_list pos:line="30" pos:column="15">(<argument><expr><name pos:line="30" pos:column="16">tempfile<pos:position pos:line="30" pos:column="24"/></name></expr></argument>)<pos:position pos:line="30" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="31" pos:column="3">s<pos:position pos:line="31" pos:column="4"/></name><operator pos:line="31" pos:column="4">.<pos:position pos:line="31" pos:column="5"/></operator><name pos:line="31" pos:column="5">fpout<pos:position pos:line="31" pos:column="10"/></name></name> <operator pos:line="31" pos:column="11">=<pos:position pos:line="31" pos:column="12"/></operator> <name pos:line="31" pos:column="13">tmpfp<pos:position pos:line="31" pos:column="18"/></name></expr>;<pos:position pos:line="31" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">mutt_decode_attachment<pos:position pos:line="32" pos:column="25"/></name> <argument_list pos:line="32" pos:column="26">(<argument><expr><name pos:line="32" pos:column="27">b<pos:position pos:line="32" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="30">&amp;<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="31">s<pos:position pos:line="32" pos:column="32"/></name></expr></argument>)<pos:position pos:line="32" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">fflush<pos:position pos:line="33" pos:column="9"/></name> <argument_list pos:line="33" pos:column="10">(<argument><expr><name pos:line="33" pos:column="11">tmpfp<pos:position pos:line="33" pos:column="16"/></name></expr></argument>)<pos:position pos:line="33" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="34" pos:column="3">b<pos:position pos:line="34" pos:column="4"/></name><operator pos:line="34" pos:column="4">-&gt;<pos:position pos:line="34" pos:column="9"/></operator><name pos:line="34" pos:column="6">length<pos:position pos:line="34" pos:column="12"/></name></name> <operator pos:line="34" pos:column="13">=<pos:position pos:line="34" pos:column="14"/></operator> <call><name pos:line="34" pos:column="15">ftello<pos:position pos:line="34" pos:column="21"/></name> <argument_list pos:line="34" pos:column="22">(<argument><expr><name><name pos:line="34" pos:column="23">s<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">.<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="25">fpout<pos:position pos:line="34" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="35" pos:column="3">b<pos:position pos:line="35" pos:column="4"/></name><operator pos:line="35" pos:column="4">-&gt;<pos:position pos:line="35" pos:column="9"/></operator><name pos:line="35" pos:column="6">offset<pos:position pos:line="35" pos:column="12"/></name></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <literal type="number" pos:line="35" pos:column="15">0<pos:position pos:line="35" pos:column="16"/></literal></expr>;<pos:position pos:line="35" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">rewind<pos:position pos:line="36" pos:column="9"/></name> <argument_list pos:line="36" pos:column="10">(<argument><expr><name pos:line="36" pos:column="11">tmpfp<pos:position pos:line="36" pos:column="16"/></name></expr></argument>)<pos:position pos:line="36" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="37" pos:column="3">s<pos:position pos:line="37" pos:column="4"/></name><operator pos:line="37" pos:column="4">.<pos:position pos:line="37" pos:column="5"/></operator><name pos:line="37" pos:column="5">fpin<pos:position pos:line="37" pos:column="9"/></name></name> <operator pos:line="37" pos:column="10">=<pos:position pos:line="37" pos:column="11"/></operator> <name pos:line="37" pos:column="12">tmpfp<pos:position pos:line="37" pos:column="17"/></name></expr>;<pos:position pos:line="37" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="38" pos:column="3">s<pos:position pos:line="38" pos:column="4"/></name><operator pos:line="38" pos:column="4">.<pos:position pos:line="38" pos:column="5"/></operator><name pos:line="38" pos:column="5">fpout<pos:position pos:line="38" pos:column="10"/></name></name> <operator pos:line="38" pos:column="11">=<pos:position pos:line="38" pos:column="12"/></operator> <literal type="number" pos:line="38" pos:column="13">0<pos:position pos:line="38" pos:column="14"/></literal></expr>;<pos:position pos:line="38" pos:column="15"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="40" pos:column="3">mutt_mktemp<pos:position pos:line="40" pos:column="14"/></name> <argument_list pos:line="40" pos:column="15">(<argument><expr><name pos:line="40" pos:column="16">tempfile<pos:position pos:line="40" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="26">sizeof <argument_list pos:line="40" pos:column="33">(<argument><expr><name pos:line="40" pos:column="34">tempfile<pos:position pos:line="40" pos:column="42"/></name></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="45"/></expr_stmt>
  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><operator pos:line="41" pos:column="7">(<pos:position pos:line="41" pos:column="8"/></operator><operator pos:line="41" pos:column="8">*<pos:position pos:line="41" pos:column="9"/></operator><name pos:line="41" pos:column="9">fpout<pos:position pos:line="41" pos:column="14"/></name> <operator pos:line="41" pos:column="15">=<pos:position pos:line="41" pos:column="16"/></operator> <call><name pos:line="41" pos:column="17">safe_fopen<pos:position pos:line="41" pos:column="27"/></name> <argument_list pos:line="41" pos:column="28">(<argument><expr><name pos:line="41" pos:column="29">tempfile<pos:position pos:line="41" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="39">"w+"<pos:position pos:line="41" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="44"/></argument_list></call><operator pos:line="41" pos:column="44">)<pos:position pos:line="41" pos:column="45"/></operator> <operator pos:line="41" pos:column="46">==<pos:position pos:line="41" pos:column="48"/></operator> <name pos:line="41" pos:column="49">NULL<pos:position pos:line="41" pos:column="53"/></name></expr>)<pos:position pos:line="41" pos:column="54"/></condition><then pos:line="41" pos:column="54">
  <block pos:line="42" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">mutt_perror<pos:position pos:line="43" pos:column="16"/></name> <argument_list pos:line="43" pos:column="17">(<argument><expr><name pos:line="43" pos:column="18">tempfile<pos:position pos:line="43" pos:column="26"/></name></expr></argument>)<pos:position pos:line="43" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="44" pos:column="5">rv<pos:position pos:line="44" pos:column="7"/></name> <operator pos:line="44" pos:column="8">=<pos:position pos:line="44" pos:column="9"/></operator> <operator pos:line="44" pos:column="10">-<pos:position pos:line="44" pos:column="11"/></operator><literal type="number" pos:line="44" pos:column="11">1<pos:position pos:line="44" pos:column="12"/></literal></expr>;<pos:position pos:line="44" pos:column="13"/></expr_stmt>
    <goto pos:line="45" pos:column="5">goto <name pos:line="45" pos:column="10">bail<pos:position pos:line="45" pos:column="14"/></name>;<pos:position pos:line="45" pos:column="15"/></goto>
  }<pos:position pos:line="46" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">mutt_unlink<pos:position pos:line="47" pos:column="14"/></name> <argument_list pos:line="47" pos:column="15">(<argument><expr><name pos:line="47" pos:column="16">tempfile<pos:position pos:line="47" pos:column="24"/></name></expr></argument>)<pos:position pos:line="47" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="26"/></expr_stmt>

  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><operator pos:line="49" pos:column="7">!<pos:position pos:line="49" pos:column="8"/></operator><operator pos:line="49" pos:column="8">(<pos:position pos:line="49" pos:column="9"/></operator><operator pos:line="49" pos:column="9">*<pos:position pos:line="49" pos:column="10"/></operator><name pos:line="49" pos:column="10">cur<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">=<pos:position pos:line="49" pos:column="15"/></operator> <call><name pos:line="49" pos:column="16">smime_handle_entity<pos:position pos:line="49" pos:column="35"/></name> <argument_list pos:line="49" pos:column="36">(<argument><expr><name pos:line="49" pos:column="37">b<pos:position pos:line="49" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="40">&amp;<pos:position pos:line="49" pos:column="45"/></operator><name pos:line="49" pos:column="41">s<pos:position pos:line="49" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="44">*<pos:position pos:line="49" pos:column="45"/></operator><name pos:line="49" pos:column="45">fpout<pos:position pos:line="49" pos:column="50"/></name></expr></argument>)<pos:position pos:line="49" pos:column="51"/></argument_list></call><operator pos:line="49" pos:column="51">)<pos:position pos:line="49" pos:column="52"/></operator></expr>)<pos:position pos:line="49" pos:column="53"/></condition><then pos:line="49" pos:column="53">
  <block pos:line="50" pos:column="3">{
    <expr_stmt><expr><name pos:line="51" pos:column="5">rv<pos:position pos:line="51" pos:column="7"/></name> <operator pos:line="51" pos:column="8">=<pos:position pos:line="51" pos:column="9"/></operator> <operator pos:line="51" pos:column="10">-<pos:position pos:line="51" pos:column="11"/></operator><literal type="number" pos:line="51" pos:column="11">1<pos:position pos:line="51" pos:column="12"/></literal></expr>;<pos:position pos:line="51" pos:column="13"/></expr_stmt>
    <goto pos:line="52" pos:column="5">goto <name pos:line="52" pos:column="10">bail<pos:position pos:line="52" pos:column="14"/></name>;<pos:position pos:line="52" pos:column="15"/></goto>
  }<pos:position pos:line="53" pos:column="4"/></block></then></if>
    
  <expr_stmt><expr><name><operator pos:line="55" pos:column="3">(<pos:position pos:line="55" pos:column="4"/></operator><operator pos:line="55" pos:column="4">*<pos:position pos:line="55" pos:column="5"/></operator><name pos:line="55" pos:column="5">cur<pos:position pos:line="55" pos:column="8"/></name><operator pos:line="55" pos:column="8">)<pos:position pos:line="55" pos:column="9"/></operator><operator pos:line="55" pos:column="9">-&gt;<pos:position pos:line="55" pos:column="14"/></operator><name pos:line="55" pos:column="11">goodsig<pos:position pos:line="55" pos:column="18"/></name></name> <operator pos:line="55" pos:column="19">=<pos:position pos:line="55" pos:column="20"/></operator> <name><name pos:line="55" pos:column="21">b<pos:position pos:line="55" pos:column="22"/></name><operator pos:line="55" pos:column="22">-&gt;<pos:position pos:line="55" pos:column="27"/></operator><name pos:line="55" pos:column="24">goodsig<pos:position pos:line="55" pos:column="31"/></name></name></expr>;<pos:position pos:line="55" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><operator pos:line="56" pos:column="3">(<pos:position pos:line="56" pos:column="4"/></operator><operator pos:line="56" pos:column="4">*<pos:position pos:line="56" pos:column="5"/></operator><name pos:line="56" pos:column="5">cur<pos:position pos:line="56" pos:column="8"/></name><operator pos:line="56" pos:column="8">)<pos:position pos:line="56" pos:column="9"/></operator><operator pos:line="56" pos:column="9">-&gt;<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="11">badsig<pos:position pos:line="56" pos:column="17"/></name></name>  <operator pos:line="56" pos:column="19">=<pos:position pos:line="56" pos:column="20"/></operator> <name><name pos:line="56" pos:column="21">b<pos:position pos:line="56" pos:column="22"/></name><operator pos:line="56" pos:column="22">-&gt;<pos:position pos:line="56" pos:column="27"/></operator><name pos:line="56" pos:column="24">badsig<pos:position pos:line="56" pos:column="30"/></name></name></expr>;<pos:position pos:line="56" pos:column="31"/></expr_stmt>

<label><name pos:line="58" pos:column="1">bail<pos:position pos:line="58" pos:column="5"/></name>:<pos:position pos:line="58" pos:column="6"/></label>
  <expr_stmt><expr><name><name pos:line="59" pos:column="3">b<pos:position pos:line="59" pos:column="4"/></name><operator pos:line="59" pos:column="4">-&gt;<pos:position pos:line="59" pos:column="9"/></operator><name pos:line="59" pos:column="6">type<pos:position pos:line="59" pos:column="10"/></name></name> <operator pos:line="59" pos:column="11">=<pos:position pos:line="59" pos:column="12"/></operator> <name pos:line="59" pos:column="13">origType<pos:position pos:line="59" pos:column="21"/></name></expr>;<pos:position pos:line="59" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="60" pos:column="3">b<pos:position pos:line="60" pos:column="4"/></name><operator pos:line="60" pos:column="4">-&gt;<pos:position pos:line="60" pos:column="9"/></operator><name pos:line="60" pos:column="6">length<pos:position pos:line="60" pos:column="12"/></name></name> <operator pos:line="60" pos:column="13">=<pos:position pos:line="60" pos:column="14"/></operator> <name pos:line="60" pos:column="15">tmplength<pos:position pos:line="60" pos:column="24"/></name></expr>;<pos:position pos:line="60" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="61" pos:column="3">b<pos:position pos:line="61" pos:column="4"/></name><operator pos:line="61" pos:column="4">-&gt;<pos:position pos:line="61" pos:column="9"/></operator><name pos:line="61" pos:column="6">offset<pos:position pos:line="61" pos:column="12"/></name></name> <operator pos:line="61" pos:column="13">=<pos:position pos:line="61" pos:column="14"/></operator> <name pos:line="61" pos:column="15">tmpoffset<pos:position pos:line="61" pos:column="24"/></name></expr>;<pos:position pos:line="61" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="62" pos:column="3">safe_fclose<pos:position pos:line="62" pos:column="14"/></name> <argument_list pos:line="62" pos:column="15">(<argument><expr><operator pos:line="62" pos:column="16">&amp;<pos:position pos:line="62" pos:column="21"/></operator><name pos:line="62" pos:column="17">tmpfp<pos:position pos:line="62" pos:column="22"/></name></expr></argument>)<pos:position pos:line="62" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="24"/></expr_stmt>
  <if pos:line="63" pos:column="3">if <condition pos:line="63" pos:column="6">(<expr><operator pos:line="63" pos:column="7">*<pos:position pos:line="63" pos:column="8"/></operator><name pos:line="63" pos:column="8">fpout<pos:position pos:line="63" pos:column="13"/></name></expr>)<pos:position pos:line="63" pos:column="14"/></condition><then pos:line="63" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="5">rewind<pos:position pos:line="64" pos:column="11"/></name> <argument_list pos:line="64" pos:column="12">(<argument><expr><operator pos:line="64" pos:column="13">*<pos:position pos:line="64" pos:column="14"/></operator><name pos:line="64" pos:column="14">fpout<pos:position pos:line="64" pos:column="19"/></name></expr></argument>)<pos:position pos:line="64" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="21"/></expr_stmt></block></then></if>
  
  <return pos:line="66" pos:column="3">return <expr><name pos:line="66" pos:column="10">rv<pos:position pos:line="66" pos:column="12"/></name></expr>;<pos:position pos:line="66" pos:column="13"/></return>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1307_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">imap_close_mailbox<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">CONTEXT<pos:position pos:line="1" pos:column="33"/></name><modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type> <name pos:line="1" pos:column="35">ctx<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">IMAP_DATA<pos:position pos:line="3" pos:column="12"/></name><modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type> <name pos:line="3" pos:column="14">idata<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">idata<pos:position pos:line="6" pos:column="8"/></name> <operator pos:line="6" pos:column="9">=<pos:position pos:line="6" pos:column="10"/></operator> <operator pos:line="6" pos:column="11">(<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="12">IMAP_DATA<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></operator><operator pos:line="6" pos:column="22">)<pos:position pos:line="6" pos:column="23"/></operator> <name><name pos:line="6" pos:column="24">ctx<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">-&gt;<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="29">data<pos:position pos:line="6" pos:column="33"/></name></name></expr>;<pos:position pos:line="6" pos:column="34"/></expr_stmt>
  <comment type="block" pos:line="7" pos:column="3">/* Check to see if the mailbox is actually open */</comment>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">idata<pos:position pos:line="8" pos:column="13"/></name></expr>)<pos:position pos:line="8" pos:column="14"/></condition><then pos:line="8" pos:column="14">
    <block type="pseudo"><return pos:line="9" pos:column="5">return;<pos:position pos:line="9" pos:column="12"/></return></block></then></if>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">(<pos:position pos:line="11" pos:column="8"/></operator><name><name pos:line="11" pos:column="8">idata<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">status<pos:position pos:line="11" pos:column="21"/></name></name> <operator pos:line="11" pos:column="22">!=<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="25">IMAP_FATAL<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">)<pos:position pos:line="11" pos:column="36"/></operator> <operator pos:line="11" pos:column="37">&amp;&amp;<pos:position pos:line="11" pos:column="47"/></operator>
      <operator pos:line="12" pos:column="7">(<pos:position pos:line="12" pos:column="8"/></operator><name><name pos:line="12" pos:column="8">idata<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">state<pos:position pos:line="12" pos:column="20"/></name></name> <operator pos:line="12" pos:column="21">==<pos:position pos:line="12" pos:column="23"/></operator> <name pos:line="12" pos:column="24">IMAP_SELECTED<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">)<pos:position pos:line="12" pos:column="38"/></operator> <operator pos:line="12" pos:column="39">&amp;&amp;<pos:position pos:line="12" pos:column="49"/></operator>
      <operator pos:line="13" pos:column="7">(<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">ctx<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">==<pos:position pos:line="13" pos:column="14"/></operator> <name><name pos:line="13" pos:column="15">idata<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="22">ctx<pos:position pos:line="13" pos:column="25"/></name></name><operator pos:line="13" pos:column="25">)<pos:position pos:line="13" pos:column="26"/></operator></expr>)<pos:position pos:line="13" pos:column="27"/></condition><then pos:line="13" pos:column="27">
  <block pos:line="14" pos:column="3">{
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><operator pos:line="15" pos:column="10">(<pos:position pos:line="15" pos:column="11"/></operator><name><name pos:line="15" pos:column="11">idata<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">-&gt;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="18">noclose<pos:position pos:line="15" pos:column="25"/></name></name><operator pos:line="15" pos:column="25">)<pos:position pos:line="15" pos:column="26"/></operator> <operator pos:line="15" pos:column="27">&amp;&amp;<pos:position pos:line="15" pos:column="37"/></operator> <call><name pos:line="15" pos:column="30">imap_exec<pos:position pos:line="15" pos:column="39"/></name> <argument_list pos:line="15" pos:column="40">(<argument><expr><name pos:line="15" pos:column="41">idata<pos:position pos:line="15" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="48">"CLOSE"<pos:position pos:line="15" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="57">0<pos:position pos:line="15" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="60"/></condition><then pos:line="15" pos:column="60">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="7">mutt_error<pos:position pos:line="16" pos:column="17"/></name> <argument_list pos:line="16" pos:column="18">(<argument><expr><call><name pos:line="16" pos:column="19">_<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><literal type="string" pos:line="16" pos:column="21">"CLOSE failed"<pos:position pos:line="16" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="38"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="18" pos:column="5">idata<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">reopen<pos:position pos:line="18" pos:column="18"/></name></name> <operator pos:line="18" pos:column="19">&amp;=<pos:position pos:line="18" pos:column="25"/></operator> <name pos:line="18" pos:column="22">IMAP_REOPEN_ALLOW<pos:position pos:line="18" pos:column="39"/></name></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">idata<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">-&gt;<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="12">state<pos:position pos:line="19" pos:column="17"/></name></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <name pos:line="19" pos:column="20">IMAP_AUTHENTICATED<pos:position pos:line="19" pos:column="38"/></name></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">FREE<pos:position pos:line="20" pos:column="9"/></name> <argument_list pos:line="20" pos:column="10">(<argument><expr><operator pos:line="20" pos:column="11">&amp;<pos:position pos:line="20" pos:column="16"/></operator><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><name><name pos:line="20" pos:column="13">idata<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">-&gt;<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="20">mailbox<pos:position pos:line="20" pos:column="27"/></name></name><operator pos:line="20" pos:column="27">)<pos:position pos:line="20" pos:column="28"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">mutt_free_list<pos:position pos:line="21" pos:column="19"/></name> <argument_list pos:line="21" pos:column="20">(<argument><expr><operator pos:line="21" pos:column="21">&amp;<pos:position pos:line="21" pos:column="26"/></operator><name><name pos:line="21" pos:column="22">idata<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">-&gt;<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="29">flags<pos:position pos:line="21" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="24" pos:column="3">/* free IMAP part of headers */</comment>
  <for pos:line="25" pos:column="3">for <control pos:line="25" pos:column="7">(<init><expr><name pos:line="25" pos:column="8">i<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <literal type="number" pos:line="25" pos:column="12">0<pos:position pos:line="25" pos:column="13"/></literal></expr>;<pos:position pos:line="25" pos:column="14"/></init> <condition><expr><name pos:line="25" pos:column="15">i<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">&lt;<pos:position pos:line="25" pos:column="21"/></operator> <name><name pos:line="25" pos:column="19">ctx<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">msgcount<pos:position pos:line="25" pos:column="32"/></name></name></expr>;<pos:position pos:line="25" pos:column="33"/></condition> <incr><expr><name pos:line="25" pos:column="34">i<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">++<pos:position pos:line="25" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="38"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="5">imap_free_header_data<pos:position pos:line="26" pos:column="26"/></name> <argument_list pos:line="26" pos:column="27">(<argument><expr><operator pos:line="26" pos:column="28">&amp;<pos:position pos:line="26" pos:column="33"/></operator><operator pos:line="26" pos:column="29">(<pos:position pos:line="26" pos:column="30"/></operator><name><name pos:line="26" pos:column="30">ctx<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">-&gt;<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="35">hdrs<pos:position pos:line="26" pos:column="39"/></name><index pos:line="26" pos:column="39">[<expr><name pos:line="26" pos:column="40">i<pos:position pos:line="26" pos:column="41"/></name></expr>]<pos:position pos:line="26" pos:column="42"/></index></name><operator pos:line="26" pos:column="42">-&gt;<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="44">data<pos:position pos:line="26" pos:column="48"/></name><operator pos:line="26" pos:column="48">)<pos:position pos:line="26" pos:column="49"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="51"/></expr_stmt></block></for>

  <for pos:line="28" pos:column="3">for <control pos:line="28" pos:column="7">(<init><expr><name pos:line="28" pos:column="8">i<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <literal type="number" pos:line="28" pos:column="12">0<pos:position pos:line="28" pos:column="13"/></literal></expr>;<pos:position pos:line="28" pos:column="14"/></init> <condition><expr><name pos:line="28" pos:column="15">i<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">&lt;<pos:position pos:line="28" pos:column="21"/></operator> <name pos:line="28" pos:column="19">IMAP_CACHE_LEN<pos:position pos:line="28" pos:column="33"/></name></expr>;<pos:position pos:line="28" pos:column="34"/></condition> <incr><expr><name pos:line="28" pos:column="35">i<pos:position pos:line="28" pos:column="36"/></name><operator pos:line="28" pos:column="36">++<pos:position pos:line="28" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="28" pos:column="39"/></control>
  <block pos:line="29" pos:column="3">{
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name><name pos:line="30" pos:column="9">idata<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">-&gt;<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="16">cache<pos:position pos:line="30" pos:column="21"/></name><index pos:line="30" pos:column="21">[<expr><name pos:line="30" pos:column="22">i<pos:position pos:line="30" pos:column="23"/></name></expr>]<pos:position pos:line="30" pos:column="24"/></index></name><operator pos:line="30" pos:column="24">.<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="25">path<pos:position pos:line="30" pos:column="29"/></name></expr>)<pos:position pos:line="30" pos:column="30"/></condition><then pos:line="30" pos:column="30">
    <block pos:line="31" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">unlink<pos:position pos:line="32" pos:column="13"/></name> <argument_list pos:line="32" pos:column="14">(<argument><expr><name><name pos:line="32" pos:column="15">idata<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="22">cache<pos:position pos:line="32" pos:column="27"/></name><index pos:line="32" pos:column="27">[<expr><name pos:line="32" pos:column="28">i<pos:position pos:line="32" pos:column="29"/></name></expr>]<pos:position pos:line="32" pos:column="30"/></index></name><operator pos:line="32" pos:column="30">.<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="31">path<pos:position pos:line="32" pos:column="35"/></name></expr></argument>)<pos:position pos:line="32" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">safe_free<pos:position pos:line="33" pos:column="16"/></name> <argument_list pos:line="33" pos:column="17">(<argument><expr><operator pos:line="33" pos:column="18">(<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="19">void<pos:position pos:line="33" pos:column="23"/></name> <operator pos:line="33" pos:column="24">*<pos:position pos:line="33" pos:column="25"/></operator><operator pos:line="33" pos:column="25">*<pos:position pos:line="33" pos:column="26"/></operator><operator pos:line="33" pos:column="26">)<pos:position pos:line="33" pos:column="27"/></operator> <operator pos:line="33" pos:column="28">&amp;<pos:position pos:line="33" pos:column="33"/></operator><name><name pos:line="33" pos:column="29">idata<pos:position pos:line="33" pos:column="34"/></name><operator pos:line="33" pos:column="34">-&gt;<pos:position pos:line="33" pos:column="39"/></operator><name pos:line="33" pos:column="36">cache<pos:position pos:line="33" pos:column="41"/></name><index pos:line="33" pos:column="41">[<expr><name pos:line="33" pos:column="42">i<pos:position pos:line="33" pos:column="43"/></name></expr>]<pos:position pos:line="33" pos:column="44"/></index></name><operator pos:line="33" pos:column="44">.<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="45">path<pos:position pos:line="33" pos:column="49"/></name></expr></argument>)<pos:position pos:line="33" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
  }<pos:position pos:line="35" pos:column="4"/></block></for>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2115_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">imap_wait_keepalive<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">pid_t<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">pid<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">sigaction<pos:position pos:line="3" pos:column="19"/></name></name></type> <name pos:line="3" pos:column="20">oldalrm<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">sigaction<pos:position pos:line="4" pos:column="19"/></name></name></type> <name pos:line="4" pos:column="20">act<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">sigset_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">oldmask<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">rc<pos:position pos:line="6" pos:column="9"/></name></decl>;<pos:position pos:line="6" pos:column="10"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">short<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">imap_passive<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><call><name pos:line="8" pos:column="24">option<pos:position pos:line="8" pos:column="30"/></name> <argument_list pos:line="8" pos:column="31">(<argument><expr><name pos:line="8" pos:column="32">OPTIMAPPASSIVE<pos:position pos:line="8" pos:column="46"/></name></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="48"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">set_option<pos:position pos:line="10" pos:column="13"/></name> <argument_list pos:line="10" pos:column="14">(<argument><expr><name pos:line="10" pos:column="15">OPTIMAPPASSIVE<pos:position pos:line="10" pos:column="29"/></name></expr></argument>)<pos:position pos:line="10" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">set_option<pos:position pos:line="11" pos:column="13"/></name> <argument_list pos:line="11" pos:column="14">(<argument><expr><name pos:line="11" pos:column="15">OPTKEEPQUIET<pos:position pos:line="11" pos:column="27"/></name></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">sigprocmask<pos:position pos:line="13" pos:column="14"/></name> <argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">SIG_SETMASK<pos:position pos:line="13" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="29">NULL<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="35">&amp;<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="36">oldmask<pos:position pos:line="13" pos:column="43"/></name></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="45"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">sigemptyset<pos:position pos:line="15" pos:column="14"/></name> <argument_list pos:line="15" pos:column="15">(<argument><expr><operator pos:line="15" pos:column="16">&amp;<pos:position pos:line="15" pos:column="21"/></operator><name><name pos:line="15" pos:column="17">act<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">.<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="21">sa_mask<pos:position pos:line="15" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">act<pos:position pos:line="16" pos:column="6"/></name><operator pos:line="16" pos:column="6">.<pos:position pos:line="16" pos:column="7"/></operator><name pos:line="16" pos:column="7">sa_handler<pos:position pos:line="16" pos:column="17"/></name></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <name pos:line="16" pos:column="20">alrm_handler<pos:position pos:line="16" pos:column="32"/></name></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
<cpp:ifdef pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">ifdef<pos:position pos:line="17" pos:column="7"/></cpp:directive> <name pos:line="17" pos:column="8">SA_INTERRUPT<pos:position pos:line="17" pos:column="20"/></name></cpp:ifdef>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">act<pos:position pos:line="18" pos:column="6"/></name><operator pos:line="18" pos:column="6">.<pos:position pos:line="18" pos:column="7"/></operator><name pos:line="18" pos:column="7">sa_flags<pos:position pos:line="18" pos:column="15"/></name></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">SA_INTERRUPT<pos:position pos:line="18" pos:column="30"/></name></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
<cpp:else pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">else<pos:position pos:line="19" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">act<pos:position pos:line="20" pos:column="6"/></name><operator pos:line="20" pos:column="6">.<pos:position pos:line="20" pos:column="7"/></operator><name pos:line="20" pos:column="7">sa_flags<pos:position pos:line="20" pos:column="15"/></name></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <literal type="number" pos:line="20" pos:column="18">0<pos:position pos:line="20" pos:column="19"/></literal></expr>;<pos:position pos:line="20" pos:column="20"/></expr_stmt>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">sigaction<pos:position pos:line="23" pos:column="12"/></name> <argument_list pos:line="23" pos:column="13">(<argument><expr><name pos:line="23" pos:column="14">SIGALRM<pos:position pos:line="23" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="23">&amp;<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="24">act<pos:position pos:line="23" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="29">&amp;<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="30">oldalrm<pos:position pos:line="23" pos:column="37"/></name></expr></argument>)<pos:position pos:line="23" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="39"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">alarm<pos:position pos:line="25" pos:column="8"/></name> <argument_list pos:line="25" pos:column="9">(<argument><expr><name pos:line="25" pos:column="10">ImapKeepalive<pos:position pos:line="25" pos:column="23"/></name></expr></argument>)<pos:position pos:line="25" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>
  <while pos:line="26" pos:column="3">while <condition pos:line="26" pos:column="9">(<expr><call><name pos:line="26" pos:column="10">waitpid<pos:position pos:line="26" pos:column="17"/></name> <argument_list pos:line="26" pos:column="18">(<argument><expr><name pos:line="26" pos:column="19">pid<pos:position pos:line="26" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="24">&amp;<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="25">rc<pos:position pos:line="26" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="29">0<pos:position pos:line="26" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="31"/></argument_list></call> <operator pos:line="26" pos:column="32">&lt;<pos:position pos:line="26" pos:column="36"/></operator> <literal type="number" pos:line="26" pos:column="34">0<pos:position pos:line="26" pos:column="35"/></literal> <operator pos:line="26" pos:column="36">&amp;&amp;<pos:position pos:line="26" pos:column="46"/></operator> <name pos:line="26" pos:column="39">errno<pos:position pos:line="26" pos:column="44"/></name> <operator pos:line="26" pos:column="45">==<pos:position pos:line="26" pos:column="47"/></operator> <name pos:line="26" pos:column="48">EINTR<pos:position pos:line="26" pos:column="53"/></name></expr>)<pos:position pos:line="26" pos:column="54"/></condition>
  <block pos:line="27" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">alarm<pos:position pos:line="28" pos:column="10"/></name> <argument_list pos:line="28" pos:column="11">(<argument><expr><literal type="number" pos:line="28" pos:column="12">0<pos:position pos:line="28" pos:column="13"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="15"/></expr_stmt> <comment type="block" pos:line="28" pos:column="16">/* cancel a possibly pending alarm */</comment>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">imap_keepalive<pos:position pos:line="29" pos:column="19"/></name> <argument_list pos:line="29" pos:column="20">()<pos:position pos:line="29" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">alarm<pos:position pos:line="30" pos:column="10"/></name> <argument_list pos:line="30" pos:column="11">(<argument><expr><name pos:line="30" pos:column="12">ImapKeepalive<pos:position pos:line="30" pos:column="25"/></name></expr></argument>)<pos:position pos:line="30" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="31" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="33" pos:column="3">alarm<pos:position pos:line="33" pos:column="8"/></name> <argument_list pos:line="33" pos:column="9">(<argument><expr><literal type="number" pos:line="33" pos:column="10">0<pos:position pos:line="33" pos:column="11"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="13"/></expr_stmt>	<comment type="block" pos:line="33" pos:column="17">/* cancel a possibly pending alarm */</comment>

  <expr_stmt><expr><call><name pos:line="35" pos:column="3">sigaction<pos:position pos:line="35" pos:column="12"/></name> <argument_list pos:line="35" pos:column="13">(<argument><expr><name pos:line="35" pos:column="14">SIGALRM<pos:position pos:line="35" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="23">&amp;<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="24">oldalrm<pos:position pos:line="35" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="33">NULL<pos:position pos:line="35" pos:column="37"/></name></expr></argument>)<pos:position pos:line="35" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">sigprocmask<pos:position pos:line="36" pos:column="14"/></name> <argument_list pos:line="36" pos:column="15">(<argument><expr><name pos:line="36" pos:column="16">SIG_SETMASK<pos:position pos:line="36" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="29">&amp;<pos:position pos:line="36" pos:column="34"/></operator><name pos:line="36" pos:column="30">oldmask<pos:position pos:line="36" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="39">NULL<pos:position pos:line="36" pos:column="43"/></name></expr></argument>)<pos:position pos:line="36" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="45"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="38" pos:column="3">unset_option<pos:position pos:line="38" pos:column="15"/></name> <argument_list pos:line="38" pos:column="16">(<argument><expr><name pos:line="38" pos:column="17">OPTKEEPQUIET<pos:position pos:line="38" pos:column="29"/></name></expr></argument>)<pos:position pos:line="38" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt>
  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><operator pos:line="39" pos:column="7">!<pos:position pos:line="39" pos:column="8"/></operator><name pos:line="39" pos:column="8">imap_passive<pos:position pos:line="39" pos:column="20"/></name></expr>)<pos:position pos:line="39" pos:column="21"/></condition><then pos:line="39" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="5">unset_option<pos:position pos:line="40" pos:column="17"/></name> <argument_list pos:line="40" pos:column="18">(<argument><expr><name pos:line="40" pos:column="19">OPTIMAPPASSIVE<pos:position pos:line="40" pos:column="33"/></name></expr></argument>)<pos:position pos:line="40" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="35"/></expr_stmt></block></then></if>

  <return pos:line="42" pos:column="3">return <expr><name pos:line="42" pos:column="10">rc<pos:position pos:line="42" pos:column="12"/></name></expr>;<pos:position pos:line="42" pos:column="13"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

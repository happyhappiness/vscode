<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_648_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">be_barf_file<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">path<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier><modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">buf<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">int<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">buflen<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">FILE<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">f<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>
  
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">f<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <call><name pos:line="6" pos:column="12">fopen<pos:position pos:line="6" pos:column="17"/></name> <argument_list pos:line="6" pos:column="18">(<argument><expr><name pos:line="6" pos:column="19">path<pos:position pos:line="6" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="25">"w"<pos:position pos:line="6" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="29"/></argument_list></call><operator pos:line="6" pos:column="29">)<pos:position pos:line="6" pos:column="30"/></operator> <operator pos:line="6" pos:column="31">==<pos:position pos:line="6" pos:column="33"/></operator> <name pos:line="6" pos:column="34">NULL<pos:position pos:line="6" pos:column="38"/></name></expr>)<pos:position pos:line="6" pos:column="39"/></condition><then pos:line="6" pos:column="39">		<comment type="block" pos:line="6" pos:column="49">/* __FOPEN_CHECKED__ */</comment>
  <block pos:line="7" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">addstr<pos:position pos:line="8" pos:column="11"/></name> <argument_list pos:line="8" pos:column="12">(<argument><expr><call><name pos:line="8" pos:column="13">strerror<pos:position pos:line="8" pos:column="21"/></name> <argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">errno<pos:position pos:line="8" pos:column="28"/></name></expr></argument>)<pos:position pos:line="8" pos:column="29"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">addch<pos:position pos:line="9" pos:column="10"/></name> <argument_list pos:line="9" pos:column="11">(<argument><expr><literal type="char" pos:line="9" pos:column="12">'\n'<pos:position pos:line="9" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="18"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><operator pos:line="10" pos:column="13">-<pos:position pos:line="10" pos:column="14"/></operator><literal type="number" pos:line="10" pos:column="14">1<pos:position pos:line="10" pos:column="15"/></literal><operator pos:line="10" pos:column="15">)<pos:position pos:line="10" pos:column="16"/></operator></expr>;<pos:position pos:line="10" pos:column="17"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>
  <for pos:line="12" pos:column="3">for <control pos:line="12" pos:column="7">(<init><expr><name pos:line="12" pos:column="8">i<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <literal type="number" pos:line="12" pos:column="12">0<pos:position pos:line="12" pos:column="13"/></literal></expr>;<pos:position pos:line="12" pos:column="14"/></init> <condition><expr><name pos:line="12" pos:column="15">i<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">&lt;<pos:position pos:line="12" pos:column="21"/></operator> <name pos:line="12" pos:column="19">buflen<pos:position pos:line="12" pos:column="25"/></name></expr>;<pos:position pos:line="12" pos:column="26"/></condition> <incr><expr><name pos:line="12" pos:column="27">i<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">++<pos:position pos:line="12" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="31"/></control> <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="32">fputs<pos:position pos:line="12" pos:column="37"/></name> <argument_list pos:line="12" pos:column="38">(<argument><expr><name><name pos:line="12" pos:column="39">buf<pos:position pos:line="12" pos:column="42"/></name><index pos:line="12" pos:column="42">[<expr><name pos:line="12" pos:column="43">i<pos:position pos:line="12" pos:column="44"/></name></expr>]<pos:position pos:line="12" pos:column="45"/></index></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="47">f<pos:position pos:line="12" pos:column="48"/></name></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="50"/></expr_stmt></block></for>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><call><name pos:line="13" pos:column="7">fclose<pos:position pos:line="13" pos:column="13"/></name> <argument_list pos:line="13" pos:column="14">(<argument><expr><name pos:line="13" pos:column="15">f<pos:position pos:line="13" pos:column="16"/></name></expr></argument>)<pos:position pos:line="13" pos:column="17"/></argument_list></call> <operator pos:line="13" pos:column="18">==<pos:position pos:line="13" pos:column="20"/></operator> <literal type="number" pos:line="13" pos:column="21">0<pos:position pos:line="13" pos:column="22"/></literal></expr>)<pos:position pos:line="13" pos:column="23"/></condition><then pos:line="13" pos:column="23"> <block type="pseudo"><return pos:line="13" pos:column="24">return <expr><literal type="number" pos:line="13" pos:column="31">0<pos:position pos:line="13" pos:column="32"/></literal></expr>;<pos:position pos:line="13" pos:column="33"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">printw<pos:position pos:line="14" pos:column="9"/></name> <argument_list pos:line="14" pos:column="10">(<argument><expr><literal type="string" pos:line="14" pos:column="11">"fclose: %s\n"<pos:position pos:line="14" pos:column="25"/></literal></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="27">strerror<pos:position pos:line="14" pos:column="35"/></name> <argument_list pos:line="14" pos:column="36">(<argument><expr><name pos:line="14" pos:column="37">errno<pos:position pos:line="14" pos:column="42"/></name></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></expr_stmt>
  <return pos:line="15" pos:column="3">return <expr><operator pos:line="15" pos:column="10">(<pos:position pos:line="15" pos:column="11"/></operator><operator pos:line="15" pos:column="11">-<pos:position pos:line="15" pos:column="12"/></operator><literal type="number" pos:line="15" pos:column="12">1<pos:position pos:line="15" pos:column="13"/></literal><operator pos:line="15" pos:column="13">)<pos:position pos:line="15" pos:column="14"/></operator></expr>;<pos:position pos:line="15" pos:column="15"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

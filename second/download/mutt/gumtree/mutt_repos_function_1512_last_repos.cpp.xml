<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1512_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">mkdtemp<pos:position pos:line="1" pos:column="14"/></name> <parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">char<pos:position pos:line="1" pos:column="20"/></name> <modifier pos:line="1" pos:column="21">*<pos:position pos:line="1" pos:column="22"/></modifier></type><name pos:line="1" pos:column="22">tmpl<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="3" pos:column="5">static<pos:position pos:line="3" pos:column="11"/></specifier> <type><specifier pos:line="3" pos:column="12">const<pos:position pos:line="3" pos:column="17"/></specifier> <name pos:line="3" pos:column="18">char<pos:position pos:line="3" pos:column="22"/></name></type> <name><name pos:line="3" pos:column="23">LETTERS<pos:position pos:line="3" pos:column="30"/></name><index pos:line="3" pos:column="30">[]<pos:position pos:line="3" pos:column="32"/></index></name> <init pos:line="3" pos:column="33">= <expr><literal type="string" pos:line="3" pos:column="35">"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"<pos:position pos:line="3" pos:column="99"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="100"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">long<pos:position pos:line="4" pos:column="16"/></name></type>       <name pos:line="4" pos:column="23">value<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><literal type="number" pos:line="4" pos:column="31">0<pos:position pos:line="4" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">long<pos:position pos:line="5" pos:column="9"/></name></type>              <name pos:line="5" pos:column="23">v<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type>               <name pos:line="6" pos:column="23">len<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type>               <name pos:line="7" pos:column="23">i<pos:position pos:line="7" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="26">j<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">len<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator> <call><name pos:line="9" pos:column="11">strlen<pos:position pos:line="9" pos:column="17"/></name> <argument_list pos:line="9" pos:column="18">(<argument><expr><name pos:line="9" pos:column="19">tmpl<pos:position pos:line="9" pos:column="23"/></name></expr></argument>)<pos:position pos:line="9" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">len<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">&lt;<pos:position pos:line="10" pos:column="17"/></operator> <literal type="number" pos:line="10" pos:column="15">6<pos:position pos:line="10" pos:column="16"/></literal> <operator pos:line="10" pos:column="17">||<pos:position pos:line="10" pos:column="19"/></operator> <call><name pos:line="10" pos:column="20">strcmp<pos:position pos:line="10" pos:column="26"/></name> <argument_list pos:line="10" pos:column="27">(<argument><expr><operator pos:line="10" pos:column="28">&amp;<pos:position pos:line="10" pos:column="33"/></operator><name><name pos:line="10" pos:column="29">tmpl<pos:position pos:line="10" pos:column="33"/></name><index pos:line="10" pos:column="33">[<expr><name pos:line="10" pos:column="34">len<pos:position pos:line="10" pos:column="37"/></name> <operator pos:line="10" pos:column="38">-<pos:position pos:line="10" pos:column="39"/></operator> <literal type="number" pos:line="10" pos:column="40">6<pos:position pos:line="10" pos:column="41"/></literal></expr>]<pos:position pos:line="10" pos:column="42"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="44">"XXXXXX"<pos:position pos:line="10" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call> <operator pos:line="10" pos:column="54">!=<pos:position pos:line="10" pos:column="56"/></operator> <literal type="number" pos:line="10" pos:column="57">0<pos:position pos:line="10" pos:column="58"/></literal></expr>)<pos:position pos:line="10" pos:column="59"/></condition><then pos:line="10" pos:column="59">
    <block pos:line="11" pos:column="5">{
        <expr_stmt><expr><name pos:line="12" pos:column="9">errno<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <name pos:line="12" pos:column="17">EINVAL<pos:position pos:line="12" pos:column="23"/></name></expr>;<pos:position pos:line="12" pos:column="24"/></expr_stmt>
        <return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">NULL<pos:position pos:line="13" pos:column="20"/></name></expr>;<pos:position pos:line="13" pos:column="21"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="16" pos:column="5">value<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">+=<pos:position pos:line="16" pos:column="13"/></operator> <operator pos:line="16" pos:column="14">(<pos:position pos:line="16" pos:column="15"/></operator><operator pos:line="16" pos:column="15">(<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="16">long<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">)<pos:position pos:line="16" pos:column="21"/></operator> <call><name pos:line="16" pos:column="22">time<pos:position pos:line="16" pos:column="26"/></name> <argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">NULL<pos:position pos:line="16" pos:column="32"/></name></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call><operator pos:line="16" pos:column="33">)<pos:position pos:line="16" pos:column="34"/></operator> <operator pos:line="16" pos:column="35">^<pos:position pos:line="16" pos:column="36"/></operator> <call><name pos:line="16" pos:column="37">getpid<pos:position pos:line="16" pos:column="43"/></name> <argument_list pos:line="16" pos:column="44">()<pos:position pos:line="16" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt>

    <for pos:line="18" pos:column="5">for <control pos:line="18" pos:column="9">(<init><expr><name pos:line="18" pos:column="10">i<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <literal type="number" pos:line="18" pos:column="14">0<pos:position pos:line="18" pos:column="15"/></literal></expr>;<pos:position pos:line="18" pos:column="16"/></init> <condition><expr><name pos:line="18" pos:column="17">i<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">&lt;<pos:position pos:line="18" pos:column="23"/></operator> <literal type="number" pos:line="18" pos:column="21">7<pos:position pos:line="18" pos:column="22"/></literal></expr> ;<pos:position pos:line="18" pos:column="24"/></condition> <incr><expr><operator pos:line="18" pos:column="25">++<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="27">i<pos:position pos:line="18" pos:column="28"/></name></expr><operator pos:line="18" pos:column="28">,<pos:position pos:line="18" pos:column="29"/></operator> <expr><name pos:line="18" pos:column="30">value<pos:position pos:line="18" pos:column="35"/></name> <operator pos:line="18" pos:column="36">+=<pos:position pos:line="18" pos:column="38"/></operator> <literal type="number" pos:line="18" pos:column="39">7777<pos:position pos:line="18" pos:column="43"/></literal></expr></incr>)<pos:position pos:line="18" pos:column="44"/></control>
    <block pos:line="19" pos:column="5">{
        <comment type="block" pos:line="20" pos:column="9">/* fill in the random bits */</comment>
        <for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">j<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="18">0<pos:position pos:line="21" pos:column="19"/></literal></expr><operator pos:line="21" pos:column="19">,<pos:position pos:line="21" pos:column="20"/></operator> <expr><name pos:line="21" pos:column="21">v<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">=<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">value<pos:position pos:line="21" pos:column="30"/></name></expr>;<pos:position pos:line="21" pos:column="31"/></init> <condition><expr><name pos:line="21" pos:column="32">j<pos:position pos:line="21" pos:column="33"/></name> <operator pos:line="21" pos:column="34">&lt;<pos:position pos:line="21" pos:column="38"/></operator> <literal type="number" pos:line="21" pos:column="36">6<pos:position pos:line="21" pos:column="37"/></literal></expr>;<pos:position pos:line="21" pos:column="38"/></condition> <incr><expr><operator pos:line="21" pos:column="39">++<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="41">j<pos:position pos:line="21" pos:column="42"/></name></expr></incr>)<pos:position pos:line="21" pos:column="43"/></control>
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="22" pos:column="13">tmpl<pos:position pos:line="22" pos:column="17"/></name><index pos:line="22" pos:column="17">[<expr><operator pos:line="22" pos:column="18">(<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="19">len<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">-<pos:position pos:line="22" pos:column="24"/></operator> <literal type="number" pos:line="22" pos:column="25">6<pos:position pos:line="22" pos:column="26"/></literal><operator pos:line="22" pos:column="26">)<pos:position pos:line="22" pos:column="27"/></operator> <operator pos:line="22" pos:column="28">+<pos:position pos:line="22" pos:column="29"/></operator> <name pos:line="22" pos:column="30">j<pos:position pos:line="22" pos:column="31"/></name></expr>]<pos:position pos:line="22" pos:column="32"/></index></name> <operator pos:line="22" pos:column="33">=<pos:position pos:line="22" pos:column="34"/></operator> <name><name pos:line="22" pos:column="35">LETTERS<pos:position pos:line="22" pos:column="42"/></name><index pos:line="22" pos:column="42">[<expr><name pos:line="22" pos:column="43">v<pos:position pos:line="22" pos:column="44"/></name> <operator pos:line="22" pos:column="45">%<pos:position pos:line="22" pos:column="46"/></operator> <literal type="number" pos:line="22" pos:column="47">62<pos:position pos:line="22" pos:column="49"/></literal></expr>]<pos:position pos:line="22" pos:column="50"/></index></name></expr>;<pos:position pos:line="22" pos:column="51"/></expr_stmt></block></for> <expr_stmt><expr><name pos:line="22" pos:column="52">v<pos:position pos:line="22" pos:column="53"/></name> <operator pos:line="22" pos:column="54">/=<pos:position pos:line="22" pos:column="56"/></operator> <literal type="number" pos:line="22" pos:column="57">62<pos:position pos:line="22" pos:column="59"/></literal></expr>;<pos:position pos:line="22" pos:column="60"/></expr_stmt>

        <comment type="block" pos:line="24" pos:column="9">/* try to create the directory */</comment>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">mkdir<pos:position pos:line="25" pos:column="18"/></name> <argument_list pos:line="25" pos:column="19">(<argument><expr><name pos:line="25" pos:column="20">tmpl<pos:position pos:line="25" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="26">0700<pos:position pos:line="25" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="31"/></argument_list></call> <operator pos:line="25" pos:column="32">==<pos:position pos:line="25" pos:column="34"/></operator> <literal type="number" pos:line="25" pos:column="35">0<pos:position pos:line="25" pos:column="36"/></literal></expr>)<pos:position pos:line="25" pos:column="37"/></condition><then pos:line="25" pos:column="37">
            <block type="pseudo"><return pos:line="26" pos:column="13">return <expr><name pos:line="26" pos:column="20">tmpl<pos:position pos:line="26" pos:column="24"/></name></expr>;<pos:position pos:line="26" pos:column="25"/></return></block></then>
        <elseif pos:line="27" pos:column="9">else <if pos:line="27" pos:column="14">if <condition pos:line="27" pos:column="17">(<expr><name pos:line="27" pos:column="18">errno<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">!=<pos:position pos:line="27" pos:column="26"/></operator> <name pos:line="27" pos:column="27">EEXIST<pos:position pos:line="27" pos:column="33"/></name></expr>)<pos:position pos:line="27" pos:column="34"/></condition><then pos:line="27" pos:column="34">
            <block type="pseudo"><return pos:line="28" pos:column="13">return <expr><name pos:line="28" pos:column="20">NULL<pos:position pos:line="28" pos:column="24"/></name></expr>;<pos:position pos:line="28" pos:column="25"/></return></block></then></if></elseif></if>
    }<pos:position pos:line="29" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="31" pos:column="5">errno<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">=<pos:position pos:line="31" pos:column="12"/></operator> <name pos:line="31" pos:column="13">EEXIST<pos:position pos:line="31" pos:column="19"/></name></expr>;<pos:position pos:line="31" pos:column="20"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><name pos:line="32" pos:column="12">NULL<pos:position pos:line="32" pos:column="16"/></name></expr>;<pos:position pos:line="32" pos:column="17"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1932_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">unsigned<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">long<pos:position pos:line="1" pos:column="21"/></name> <name pos:line="1" pos:column="22">int<pos:position pos:line="1" pos:column="25"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">plural_eval<pos:position pos:line="3" pos:column="12"/></name> <argument_list pos:line="3" pos:column="13">(<argument><expr><name pos:line="3" pos:column="14">pexp<pos:position pos:line="3" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="20">n<pos:position pos:line="3" pos:column="21"/></name></expr></argument>)<pos:position pos:line="3" pos:column="22"/></argument_list>
     struct <name pos:line="4" pos:column="13">expression<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier><name pos:line="4" pos:column="25">pexp<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="5" pos:column="6">unsigned<pos:position pos:line="5" pos:column="14"/></name> <name pos:line="5" pos:column="15">long<pos:position pos:line="5" pos:column="19"/></name> <name pos:line="5" pos:column="20">int<pos:position pos:line="5" pos:column="23"/></name></type> <name pos:line="5" pos:column="24">n<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
<block pos:line="6" pos:column="1">{
  <switch pos:line="7" pos:column="3">switch <condition pos:line="7" pos:column="10">(<expr><name><name pos:line="7" pos:column="11">pexp<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">nargs<pos:position pos:line="7" pos:column="22"/></name></name></expr>)<pos:position pos:line="7" pos:column="23"/></condition>
    <block pos:line="8" pos:column="5">{
    <case pos:line="9" pos:column="5">case <expr><literal type="number" pos:line="9" pos:column="10">0<pos:position pos:line="9" pos:column="11"/></literal></expr>:<pos:position pos:line="9" pos:column="12"/></case>
      <switch pos:line="10" pos:column="7">switch <condition pos:line="10" pos:column="14">(<expr><name><name pos:line="10" pos:column="15">pexp<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">operation<pos:position pos:line="10" pos:column="30"/></name></name></expr>)<pos:position pos:line="10" pos:column="31"/></condition>
	<block pos:line="11" pos:column="9">{
	<case pos:line="12" pos:column="9">case <expr><name pos:line="12" pos:column="14">var<pos:position pos:line="12" pos:column="17"/></name></expr>:<pos:position pos:line="12" pos:column="18"/></case>
	  <return pos:line="13" pos:column="11">return <expr><name pos:line="13" pos:column="18">n<pos:position pos:line="13" pos:column="19"/></name></expr>;<pos:position pos:line="13" pos:column="20"/></return>
	<case pos:line="14" pos:column="9">case <expr><name pos:line="14" pos:column="14">num<pos:position pos:line="14" pos:column="17"/></name></expr>:<pos:position pos:line="14" pos:column="18"/></case>
	  <return pos:line="15" pos:column="11">return <expr><name><name pos:line="15" pos:column="18">pexp<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">val<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">.<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="28">num<pos:position pos:line="15" pos:column="31"/></name></name></expr>;<pos:position pos:line="15" pos:column="32"/></return>
	<default pos:line="16" pos:column="9">default:<pos:position pos:line="16" pos:column="17"/></default>
	  <break pos:line="17" pos:column="11">break;<pos:position pos:line="17" pos:column="17"/></break>
	}<pos:position pos:line="18" pos:column="10"/></block></switch>
      <comment type="block" pos:line="19" pos:column="7">/* NOTREACHED */</comment>
      <break pos:line="20" pos:column="7">break;<pos:position pos:line="20" pos:column="13"/></break>
    <case pos:line="21" pos:column="5">case <expr><literal type="number" pos:line="21" pos:column="10">1<pos:position pos:line="21" pos:column="11"/></literal></expr>:<pos:position pos:line="21" pos:column="12"/></case>
      <block pos:line="22" pos:column="7">{
	<comment type="block" pos:line="23" pos:column="9">/* pexp-&gt;operation must be lnot.  */</comment>
	<decl_stmt><decl><type><name pos:line="24" pos:column="9">unsigned<pos:position pos:line="24" pos:column="17"/></name> <name pos:line="24" pos:column="18">long<pos:position pos:line="24" pos:column="22"/></name> <name pos:line="24" pos:column="23">int<pos:position pos:line="24" pos:column="26"/></name></type> <name pos:line="24" pos:column="27">arg<pos:position pos:line="24" pos:column="30"/></name> <init pos:line="24" pos:column="31">= <expr><call><name pos:line="24" pos:column="33">plural_eval<pos:position pos:line="24" pos:column="44"/></name> <argument_list pos:line="24" pos:column="45">(<argument><expr><name><name pos:line="24" pos:column="46">pexp<pos:position pos:line="24" pos:column="50"/></name><operator pos:line="24" pos:column="50">-&gt;<pos:position pos:line="24" pos:column="55"/></operator><name pos:line="24" pos:column="52">val<pos:position pos:line="24" pos:column="55"/></name><operator pos:line="24" pos:column="55">.<pos:position pos:line="24" pos:column="56"/></operator><name pos:line="24" pos:column="56">args<pos:position pos:line="24" pos:column="60"/></name><index pos:line="24" pos:column="60">[<expr><literal type="number" pos:line="24" pos:column="61">0<pos:position pos:line="24" pos:column="62"/></literal></expr>]<pos:position pos:line="24" pos:column="63"/></index></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="65">n<pos:position pos:line="24" pos:column="66"/></name></expr></argument>)<pos:position pos:line="24" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="68"/></decl_stmt>
	<return pos:line="25" pos:column="9">return <expr><operator pos:line="25" pos:column="16">!<pos:position pos:line="25" pos:column="17"/></operator> <name pos:line="25" pos:column="18">arg<pos:position pos:line="25" pos:column="21"/></name></expr>;<pos:position pos:line="25" pos:column="22"/></return>
      }<pos:position pos:line="26" pos:column="8"/></block>
    <case pos:line="27" pos:column="5">case <expr><literal type="number" pos:line="27" pos:column="10">2<pos:position pos:line="27" pos:column="11"/></literal></expr>:<pos:position pos:line="27" pos:column="12"/></case>
      <block pos:line="28" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="29" pos:column="9">unsigned<pos:position pos:line="29" pos:column="17"/></name> <name pos:line="29" pos:column="18">long<pos:position pos:line="29" pos:column="22"/></name> <name pos:line="29" pos:column="23">int<pos:position pos:line="29" pos:column="26"/></name></type> <name pos:line="29" pos:column="27">leftarg<pos:position pos:line="29" pos:column="34"/></name> <init pos:line="29" pos:column="35">= <expr><call><name pos:line="29" pos:column="37">plural_eval<pos:position pos:line="29" pos:column="48"/></name> <argument_list pos:line="29" pos:column="49">(<argument><expr><name><name pos:line="29" pos:column="50">pexp<pos:position pos:line="29" pos:column="54"/></name><operator pos:line="29" pos:column="54">-&gt;<pos:position pos:line="29" pos:column="59"/></operator><name pos:line="29" pos:column="56">val<pos:position pos:line="29" pos:column="59"/></name><operator pos:line="29" pos:column="59">.<pos:position pos:line="29" pos:column="60"/></operator><name pos:line="29" pos:column="60">args<pos:position pos:line="29" pos:column="64"/></name><index pos:line="29" pos:column="64">[<expr><literal type="number" pos:line="29" pos:column="65">0<pos:position pos:line="29" pos:column="66"/></literal></expr>]<pos:position pos:line="29" pos:column="67"/></index></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="69">n<pos:position pos:line="29" pos:column="70"/></name></expr></argument>)<pos:position pos:line="29" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="29" pos:column="72"/></decl_stmt>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name><name pos:line="30" pos:column="13">pexp<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">-&gt;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="19">operation<pos:position pos:line="30" pos:column="28"/></name></name> <operator pos:line="30" pos:column="29">==<pos:position pos:line="30" pos:column="31"/></operator> <name pos:line="30" pos:column="32">lor<pos:position pos:line="30" pos:column="35"/></name></expr>)<pos:position pos:line="30" pos:column="36"/></condition><then pos:line="30" pos:column="36">
	  <block type="pseudo"><return pos:line="31" pos:column="11">return <expr><name pos:line="31" pos:column="18">leftarg<pos:position pos:line="31" pos:column="25"/></name> <operator pos:line="31" pos:column="26">||<pos:position pos:line="31" pos:column="28"/></operator> <call><name pos:line="31" pos:column="29">plural_eval<pos:position pos:line="31" pos:column="40"/></name> <argument_list pos:line="31" pos:column="41">(<argument><expr><name><name pos:line="31" pos:column="42">pexp<pos:position pos:line="31" pos:column="46"/></name><operator pos:line="31" pos:column="46">-&gt;<pos:position pos:line="31" pos:column="51"/></operator><name pos:line="31" pos:column="48">val<pos:position pos:line="31" pos:column="51"/></name><operator pos:line="31" pos:column="51">.<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="52">args<pos:position pos:line="31" pos:column="56"/></name><index pos:line="31" pos:column="56">[<expr><literal type="number" pos:line="31" pos:column="57">1<pos:position pos:line="31" pos:column="58"/></literal></expr>]<pos:position pos:line="31" pos:column="59"/></index></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="61">n<pos:position pos:line="31" pos:column="62"/></name></expr></argument>)<pos:position pos:line="31" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="64"/></return></block></then>
	<elseif pos:line="32" pos:column="9">else <if pos:line="32" pos:column="14">if <condition pos:line="32" pos:column="17">(<expr><name><name pos:line="32" pos:column="18">pexp<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">-&gt;<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="24">operation<pos:position pos:line="32" pos:column="33"/></name></name> <operator pos:line="32" pos:column="34">==<pos:position pos:line="32" pos:column="36"/></operator> <name pos:line="32" pos:column="37">land<pos:position pos:line="32" pos:column="41"/></name></expr>)<pos:position pos:line="32" pos:column="42"/></condition><then pos:line="32" pos:column="42">
	  <block type="pseudo"><return pos:line="33" pos:column="11">return <expr><name pos:line="33" pos:column="18">leftarg<pos:position pos:line="33" pos:column="25"/></name> <operator pos:line="33" pos:column="26">&amp;&amp;<pos:position pos:line="33" pos:column="36"/></operator> <call><name pos:line="33" pos:column="29">plural_eval<pos:position pos:line="33" pos:column="40"/></name> <argument_list pos:line="33" pos:column="41">(<argument><expr><name><name pos:line="33" pos:column="42">pexp<pos:position pos:line="33" pos:column="46"/></name><operator pos:line="33" pos:column="46">-&gt;<pos:position pos:line="33" pos:column="51"/></operator><name pos:line="33" pos:column="48">val<pos:position pos:line="33" pos:column="51"/></name><operator pos:line="33" pos:column="51">.<pos:position pos:line="33" pos:column="52"/></operator><name pos:line="33" pos:column="52">args<pos:position pos:line="33" pos:column="56"/></name><index pos:line="33" pos:column="56">[<expr><literal type="number" pos:line="33" pos:column="57">1<pos:position pos:line="33" pos:column="58"/></literal></expr>]<pos:position pos:line="33" pos:column="59"/></index></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="61">n<pos:position pos:line="33" pos:column="62"/></name></expr></argument>)<pos:position pos:line="33" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="64"/></return></block></then></if></elseif>
	<else pos:line="34" pos:column="9">else
	  <block pos:line="35" pos:column="11">{
	    <decl_stmt><decl><type><name pos:line="36" pos:column="13">unsigned<pos:position pos:line="36" pos:column="21"/></name> <name pos:line="36" pos:column="22">long<pos:position pos:line="36" pos:column="26"/></name> <name pos:line="36" pos:column="27">int<pos:position pos:line="36" pos:column="30"/></name></type> <name pos:line="36" pos:column="31">rightarg<pos:position pos:line="36" pos:column="39"/></name> <init pos:line="36" pos:column="40">= <expr><call><name pos:line="36" pos:column="42">plural_eval<pos:position pos:line="36" pos:column="53"/></name> <argument_list pos:line="36" pos:column="54">(<argument><expr><name><name pos:line="36" pos:column="55">pexp<pos:position pos:line="36" pos:column="59"/></name><operator pos:line="36" pos:column="59">-&gt;<pos:position pos:line="36" pos:column="64"/></operator><name pos:line="36" pos:column="61">val<pos:position pos:line="36" pos:column="64"/></name><operator pos:line="36" pos:column="64">.<pos:position pos:line="36" pos:column="65"/></operator><name pos:line="36" pos:column="65">args<pos:position pos:line="36" pos:column="69"/></name><index pos:line="36" pos:column="69">[<expr><literal type="number" pos:line="36" pos:column="70">1<pos:position pos:line="36" pos:column="71"/></literal></expr>]<pos:position pos:line="36" pos:column="72"/></index></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="74">n<pos:position pos:line="36" pos:column="75"/></name></expr></argument>)<pos:position pos:line="36" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="36" pos:column="77"/></decl_stmt>

	    <switch pos:line="38" pos:column="13">switch <condition pos:line="38" pos:column="20">(<expr><name><name pos:line="38" pos:column="21">pexp<pos:position pos:line="38" pos:column="25"/></name><operator pos:line="38" pos:column="25">-&gt;<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="27">operation<pos:position pos:line="38" pos:column="36"/></name></name></expr>)<pos:position pos:line="38" pos:column="37"/></condition>
	      <block pos:line="39" pos:column="15">{
	      <case pos:line="40" pos:column="15">case <expr><name pos:line="40" pos:column="20">mult<pos:position pos:line="40" pos:column="24"/></name></expr>:<pos:position pos:line="40" pos:column="25"/></case>
		<return pos:line="41" pos:column="17">return <expr><name pos:line="41" pos:column="24">leftarg<pos:position pos:line="41" pos:column="31"/></name> <operator pos:line="41" pos:column="32">*<pos:position pos:line="41" pos:column="33"/></operator> <name pos:line="41" pos:column="34">rightarg<pos:position pos:line="41" pos:column="42"/></name></expr>;<pos:position pos:line="41" pos:column="43"/></return>
	      <case pos:line="42" pos:column="15">case <expr><name pos:line="42" pos:column="20">divide<pos:position pos:line="42" pos:column="26"/></name></expr>:<pos:position pos:line="42" pos:column="27"/></case>
		<return pos:line="43" pos:column="17">return <expr><name pos:line="43" pos:column="24">leftarg<pos:position pos:line="43" pos:column="31"/></name> <operator pos:line="43" pos:column="32">/<pos:position pos:line="43" pos:column="33"/></operator> <name pos:line="43" pos:column="34">rightarg<pos:position pos:line="43" pos:column="42"/></name></expr>;<pos:position pos:line="43" pos:column="43"/></return>
	      <case pos:line="44" pos:column="15">case <expr><name pos:line="44" pos:column="20">module<pos:position pos:line="44" pos:column="26"/></name></expr>:<pos:position pos:line="44" pos:column="27"/></case>
		<return pos:line="45" pos:column="17">return <expr><name pos:line="45" pos:column="24">leftarg<pos:position pos:line="45" pos:column="31"/></name> <operator pos:line="45" pos:column="32">%<pos:position pos:line="45" pos:column="33"/></operator> <name pos:line="45" pos:column="34">rightarg<pos:position pos:line="45" pos:column="42"/></name></expr>;<pos:position pos:line="45" pos:column="43"/></return>
	      <case pos:line="46" pos:column="15">case <expr><name pos:line="46" pos:column="20">plus<pos:position pos:line="46" pos:column="24"/></name></expr>:<pos:position pos:line="46" pos:column="25"/></case>
		<return pos:line="47" pos:column="17">return <expr><name pos:line="47" pos:column="24">leftarg<pos:position pos:line="47" pos:column="31"/></name> <operator pos:line="47" pos:column="32">+<pos:position pos:line="47" pos:column="33"/></operator> <name pos:line="47" pos:column="34">rightarg<pos:position pos:line="47" pos:column="42"/></name></expr>;<pos:position pos:line="47" pos:column="43"/></return>
	      <case pos:line="48" pos:column="15">case <expr><name pos:line="48" pos:column="20">minus<pos:position pos:line="48" pos:column="25"/></name></expr>:<pos:position pos:line="48" pos:column="26"/></case>
		<return pos:line="49" pos:column="17">return <expr><name pos:line="49" pos:column="24">leftarg<pos:position pos:line="49" pos:column="31"/></name> <operator pos:line="49" pos:column="32">-<pos:position pos:line="49" pos:column="33"/></operator> <name pos:line="49" pos:column="34">rightarg<pos:position pos:line="49" pos:column="42"/></name></expr>;<pos:position pos:line="49" pos:column="43"/></return>
	      <case pos:line="50" pos:column="15">case <expr><name pos:line="50" pos:column="20">less_than<pos:position pos:line="50" pos:column="29"/></name></expr>:<pos:position pos:line="50" pos:column="30"/></case>
		<return pos:line="51" pos:column="17">return <expr><name pos:line="51" pos:column="24">leftarg<pos:position pos:line="51" pos:column="31"/></name> <operator pos:line="51" pos:column="32">&lt;<pos:position pos:line="51" pos:column="36"/></operator> <name pos:line="51" pos:column="34">rightarg<pos:position pos:line="51" pos:column="42"/></name></expr>;<pos:position pos:line="51" pos:column="43"/></return>
	      <case pos:line="52" pos:column="15">case <expr><name pos:line="52" pos:column="20">greater_than<pos:position pos:line="52" pos:column="32"/></name></expr>:<pos:position pos:line="52" pos:column="33"/></case>
		<return pos:line="53" pos:column="17">return <expr><name pos:line="53" pos:column="24">leftarg<pos:position pos:line="53" pos:column="31"/></name> <operator pos:line="53" pos:column="32">&gt;<pos:position pos:line="53" pos:column="36"/></operator> <name pos:line="53" pos:column="34">rightarg<pos:position pos:line="53" pos:column="42"/></name></expr>;<pos:position pos:line="53" pos:column="43"/></return>
	      <case pos:line="54" pos:column="15">case <expr><name pos:line="54" pos:column="20">less_or_equal<pos:position pos:line="54" pos:column="33"/></name></expr>:<pos:position pos:line="54" pos:column="34"/></case>
		<return pos:line="55" pos:column="17">return <expr><name pos:line="55" pos:column="24">leftarg<pos:position pos:line="55" pos:column="31"/></name> <operator pos:line="55" pos:column="32">&lt;=<pos:position pos:line="55" pos:column="37"/></operator> <name pos:line="55" pos:column="35">rightarg<pos:position pos:line="55" pos:column="43"/></name></expr>;<pos:position pos:line="55" pos:column="44"/></return>
	      <case pos:line="56" pos:column="15">case <expr><name pos:line="56" pos:column="20">greater_or_equal<pos:position pos:line="56" pos:column="36"/></name></expr>:<pos:position pos:line="56" pos:column="37"/></case>
		<return pos:line="57" pos:column="17">return <expr><name pos:line="57" pos:column="24">leftarg<pos:position pos:line="57" pos:column="31"/></name> <operator pos:line="57" pos:column="32">&gt;=<pos:position pos:line="57" pos:column="37"/></operator> <name pos:line="57" pos:column="35">rightarg<pos:position pos:line="57" pos:column="43"/></name></expr>;<pos:position pos:line="57" pos:column="44"/></return>
	      <case pos:line="58" pos:column="15">case <expr><name pos:line="58" pos:column="20">equal<pos:position pos:line="58" pos:column="25"/></name></expr>:<pos:position pos:line="58" pos:column="26"/></case>
		<return pos:line="59" pos:column="17">return <expr><name pos:line="59" pos:column="24">leftarg<pos:position pos:line="59" pos:column="31"/></name> <operator pos:line="59" pos:column="32">==<pos:position pos:line="59" pos:column="34"/></operator> <name pos:line="59" pos:column="35">rightarg<pos:position pos:line="59" pos:column="43"/></name></expr>;<pos:position pos:line="59" pos:column="44"/></return>
	      <case pos:line="60" pos:column="15">case <expr><name pos:line="60" pos:column="20">not_equal<pos:position pos:line="60" pos:column="29"/></name></expr>:<pos:position pos:line="60" pos:column="30"/></case>
		<return pos:line="61" pos:column="17">return <expr><name pos:line="61" pos:column="24">leftarg<pos:position pos:line="61" pos:column="31"/></name> <operator pos:line="61" pos:column="32">!=<pos:position pos:line="61" pos:column="34"/></operator> <name pos:line="61" pos:column="35">rightarg<pos:position pos:line="61" pos:column="43"/></name></expr>;<pos:position pos:line="61" pos:column="44"/></return>
	      <default pos:line="62" pos:column="15">default:<pos:position pos:line="62" pos:column="23"/></default>
		<break pos:line="63" pos:column="17">break;<pos:position pos:line="63" pos:column="23"/></break>
	      }<pos:position pos:line="64" pos:column="16"/></block></switch>
	  }<pos:position pos:line="65" pos:column="12"/></block></else></if>
	<comment type="block" pos:line="66" pos:column="9">/* NOTREACHED */</comment>
	<break pos:line="67" pos:column="9">break;<pos:position pos:line="67" pos:column="15"/></break>
      }<pos:position pos:line="68" pos:column="8"/></block>
    <case pos:line="69" pos:column="5">case <expr><literal type="number" pos:line="69" pos:column="10">3<pos:position pos:line="69" pos:column="11"/></literal></expr>:<pos:position pos:line="69" pos:column="12"/></case>
      <block pos:line="70" pos:column="7">{
	<comment type="block" pos:line="71" pos:column="9">/* pexp-&gt;operation must be qmop.  */</comment>
	<decl_stmt><decl><type><name pos:line="72" pos:column="9">unsigned<pos:position pos:line="72" pos:column="17"/></name> <name pos:line="72" pos:column="18">long<pos:position pos:line="72" pos:column="22"/></name> <name pos:line="72" pos:column="23">int<pos:position pos:line="72" pos:column="26"/></name></type> <name pos:line="72" pos:column="27">boolarg<pos:position pos:line="72" pos:column="34"/></name> <init pos:line="72" pos:column="35">= <expr><call><name pos:line="72" pos:column="37">plural_eval<pos:position pos:line="72" pos:column="48"/></name> <argument_list pos:line="72" pos:column="49">(<argument><expr><name><name pos:line="72" pos:column="50">pexp<pos:position pos:line="72" pos:column="54"/></name><operator pos:line="72" pos:column="54">-&gt;<pos:position pos:line="72" pos:column="59"/></operator><name pos:line="72" pos:column="56">val<pos:position pos:line="72" pos:column="59"/></name><operator pos:line="72" pos:column="59">.<pos:position pos:line="72" pos:column="60"/></operator><name pos:line="72" pos:column="60">args<pos:position pos:line="72" pos:column="64"/></name><index pos:line="72" pos:column="64">[<expr><literal type="number" pos:line="72" pos:column="65">0<pos:position pos:line="72" pos:column="66"/></literal></expr>]<pos:position pos:line="72" pos:column="67"/></index></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="69">n<pos:position pos:line="72" pos:column="70"/></name></expr></argument>)<pos:position pos:line="72" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="72" pos:column="72"/></decl_stmt>
	<return pos:line="73" pos:column="9">return <expr><call><name pos:line="73" pos:column="16">plural_eval<pos:position pos:line="73" pos:column="27"/></name> <argument_list pos:line="73" pos:column="28">(<argument><expr><name><name pos:line="73" pos:column="29">pexp<pos:position pos:line="73" pos:column="33"/></name><operator pos:line="73" pos:column="33">-&gt;<pos:position pos:line="73" pos:column="38"/></operator><name pos:line="73" pos:column="35">val<pos:position pos:line="73" pos:column="38"/></name><operator pos:line="73" pos:column="38">.<pos:position pos:line="73" pos:column="39"/></operator><name pos:line="73" pos:column="39">args<pos:position pos:line="73" pos:column="43"/></name><index pos:line="73" pos:column="43">[<expr><ternary><condition><expr><name pos:line="73" pos:column="44">boolarg<pos:position pos:line="73" pos:column="51"/></name></expr> ?<pos:position pos:line="73" pos:column="53"/></condition><then pos:line="73" pos:column="53"> <expr><literal type="number" pos:line="73" pos:column="54">1<pos:position pos:line="73" pos:column="55"/></literal></expr> <pos:position pos:line="73" pos:column="56"/></then><else pos:line="73" pos:column="56">: <expr><literal type="number" pos:line="73" pos:column="58">2<pos:position pos:line="73" pos:column="59"/></literal></expr></else></ternary></expr>]<pos:position pos:line="73" pos:column="60"/></index></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="62">n<pos:position pos:line="73" pos:column="63"/></name></expr></argument>)<pos:position pos:line="73" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="65"/></return>
      }<pos:position pos:line="74" pos:column="8"/></block>
    }<pos:position pos:line="75" pos:column="6"/></block></switch>
  <comment type="block" pos:line="76" pos:column="3">/* NOTREACHED */</comment>
  <return pos:line="77" pos:column="3">return <expr><literal type="number" pos:line="77" pos:column="10">0<pos:position pos:line="77" pos:column="11"/></literal></expr>;<pos:position pos:line="77" pos:column="12"/></return>
}<pos:position pos:line="78" pos:column="2"/></block></unit>

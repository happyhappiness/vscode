<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1045_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">text_plain_handler<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">BODY<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">b<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">STATE<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">s<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">buf<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><name pos:line="3" pos:column="15">NULL<pos:position pos:line="3" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">l<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><literal type="number" pos:line="4" pos:column="14">0<pos:position pos:line="4" pos:column="15"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="17">sz<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>

  <while pos:line="6" pos:column="3">while <condition pos:line="6" pos:column="9">(<expr><operator pos:line="6" pos:column="10">(<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">buf<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">=<pos:position pos:line="6" pos:column="16"/></operator> <call><name pos:line="6" pos:column="17">mutt_read_line<pos:position pos:line="6" pos:column="31"/></name> <argument_list pos:line="6" pos:column="32">(<argument><expr><name pos:line="6" pos:column="33">buf<pos:position pos:line="6" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="38">&amp;<pos:position pos:line="6" pos:column="43"/></operator><name pos:line="6" pos:column="39">sz<pos:position pos:line="6" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="43">s<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">-&gt;<pos:position pos:line="6" pos:column="49"/></operator><name pos:line="6" pos:column="46">fpin<pos:position pos:line="6" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="52">NULL<pos:position pos:line="6" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="58">0<pos:position pos:line="6" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="60"/></argument_list></call><operator pos:line="6" pos:column="60">)<pos:position pos:line="6" pos:column="61"/></operator></expr>)<pos:position pos:line="6" pos:column="62"/></condition>
  <block pos:line="7" pos:column="3">{
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name pos:line="8" pos:column="9">mutt_strcmp<pos:position pos:line="8" pos:column="20"/></name> <argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">buf<pos:position pos:line="8" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="27">"-- "<pos:position pos:line="8" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call> <operator pos:line="8" pos:column="34">!=<pos:position pos:line="8" pos:column="36"/></operator> <literal type="number" pos:line="8" pos:column="37">0<pos:position pos:line="8" pos:column="38"/></literal> <operator pos:line="8" pos:column="39">&amp;&amp;<pos:position pos:line="8" pos:column="49"/></operator> <call><name pos:line="8" pos:column="42">option<pos:position pos:line="8" pos:column="48"/></name> <argument_list pos:line="8" pos:column="49">(<argument><expr><name pos:line="8" pos:column="50">OPTTEXTFLOWED<pos:position pos:line="8" pos:column="63"/></name></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="65"/></condition><then pos:line="8" pos:column="65">
    <block pos:line="9" pos:column="5">{
      <expr_stmt><expr><name pos:line="10" pos:column="7">l<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <call><name pos:line="10" pos:column="11">mutt_strlen<pos:position pos:line="10" pos:column="22"/></name> <argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">buf<pos:position pos:line="10" pos:column="27"/></name></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt>
      <while pos:line="11" pos:column="7">while <condition pos:line="11" pos:column="13">(<expr><name pos:line="11" pos:column="14">l<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">&gt;<pos:position pos:line="11" pos:column="20"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal> <operator pos:line="11" pos:column="20">&amp;&amp;<pos:position pos:line="11" pos:column="30"/></operator> <name><name pos:line="11" pos:column="23">buf<pos:position pos:line="11" pos:column="26"/></name><index pos:line="11" pos:column="26">[<expr><name pos:line="11" pos:column="27">l<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">-<pos:position pos:line="11" pos:column="29"/></operator><literal type="number" pos:line="11" pos:column="29">1<pos:position pos:line="11" pos:column="30"/></literal></expr>]<pos:position pos:line="11" pos:column="31"/></index></name> <operator pos:line="11" pos:column="32">==<pos:position pos:line="11" pos:column="34"/></operator> <literal type="char" pos:line="11" pos:column="35">' '<pos:position pos:line="11" pos:column="38"/></literal></expr>)<pos:position pos:line="11" pos:column="39"/></condition>
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="12" pos:column="9">buf<pos:position pos:line="12" pos:column="12"/></name><index pos:line="12" pos:column="12">[<expr><operator pos:line="12" pos:column="13">--<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">l<pos:position pos:line="12" pos:column="16"/></name></expr>]<pos:position pos:line="12" pos:column="17"/></index></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <literal type="number" pos:line="12" pos:column="20">0<pos:position pos:line="12" pos:column="21"/></literal></expr>;<pos:position pos:line="12" pos:column="22"/></expr_stmt></block></while>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name><name pos:line="14" pos:column="9">s<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">prefix<pos:position pos:line="14" pos:column="18"/></name></name></expr>)<pos:position pos:line="14" pos:column="19"/></condition><then pos:line="14" pos:column="19">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="7">state_puts<pos:position pos:line="15" pos:column="17"/></name> <argument_list pos:line="15" pos:column="18">(<argument><expr><name><name pos:line="15" pos:column="19">s<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">-&gt;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="22">prefix<pos:position pos:line="15" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="30">s<pos:position pos:line="15" pos:column="31"/></name></expr></argument>)<pos:position pos:line="15" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">state_puts<pos:position pos:line="16" pos:column="15"/></name> <argument_list pos:line="16" pos:column="16">(<argument><expr><name pos:line="16" pos:column="17">buf<pos:position pos:line="16" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="22">s<pos:position pos:line="16" pos:column="23"/></name></expr></argument>)<pos:position pos:line="16" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">state_putc<pos:position pos:line="17" pos:column="15"/></name> <argument_list pos:line="17" pos:column="16">(<argument><expr><literal type="char" pos:line="17" pos:column="17">'\n'<pos:position pos:line="17" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="23">s<pos:position pos:line="17" pos:column="24"/></name></expr></argument>)<pos:position pos:line="17" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">FREE<pos:position pos:line="20" pos:column="7"/></name> <argument_list pos:line="20" pos:column="8">(<argument><expr><operator pos:line="20" pos:column="9">&amp;<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="10">buf<pos:position pos:line="20" pos:column="13"/></name></expr></argument>)<pos:position pos:line="20" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="15"/></expr_stmt>
  <return pos:line="21" pos:column="3">return <expr><literal type="number" pos:line="21" pos:column="10">0<pos:position pos:line="21" pos:column="11"/></literal></expr>;<pos:position pos:line="21" pos:column="12"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

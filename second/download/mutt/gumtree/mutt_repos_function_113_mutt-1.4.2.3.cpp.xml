<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_113_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_unlink<pos:position pos:line="1" pos:column="17"/></name> <parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><specifier pos:line="1" pos:column="19">const<pos:position pos:line="1" pos:column="24"/></specifier> <name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">s<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">FILE<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">f<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">stat<pos:position pos:line="4" pos:column="14"/></name></name></type> <name pos:line="4" pos:column="15">sb<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">buf<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><literal type="number" pos:line="5" pos:column="12">2048<pos:position pos:line="5" pos:column="16"/></literal></expr>]<pos:position pos:line="5" pos:column="17"/></index></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
  
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><call><name pos:line="7" pos:column="7">stat<pos:position pos:line="7" pos:column="11"/></name> <argument_list pos:line="7" pos:column="12">(<argument><expr><name pos:line="7" pos:column="13">s<pos:position pos:line="7" pos:column="14"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="16">&amp;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="17">sb<pos:position pos:line="7" pos:column="19"/></name></expr></argument>)<pos:position pos:line="7" pos:column="20"/></argument_list></call> <operator pos:line="7" pos:column="21">==<pos:position pos:line="7" pos:column="23"/></operator> <literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr>)<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26">
  <block pos:line="8" pos:column="3">{
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">f<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">fopen<pos:position pos:line="9" pos:column="19"/></name> <argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">s<pos:position pos:line="9" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="24">"r+"<pos:position pos:line="9" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="29"/></argument_list></call><operator pos:line="9" pos:column="29">)<pos:position pos:line="9" pos:column="30"/></operator></expr>)<pos:position pos:line="9" pos:column="31"/></condition><then pos:line="9" pos:column="31">
    <block pos:line="10" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="11" pos:column="7">unlink<pos:position pos:line="11" pos:column="13"/></name> <argument_list pos:line="11" pos:column="14">(<argument><expr><name pos:line="11" pos:column="15">s<pos:position pos:line="11" pos:column="16"/></name></expr></argument>)<pos:position pos:line="11" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">memset<pos:position pos:line="12" pos:column="13"/></name> <argument_list pos:line="12" pos:column="14">(<argument><expr><name pos:line="12" pos:column="15">buf<pos:position pos:line="12" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="20">0<pos:position pos:line="12" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="23">sizeof <argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">buf<pos:position pos:line="12" pos:column="34"/></name></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="37"/></expr_stmt>
      <while pos:line="13" pos:column="7">while <condition pos:line="13" pos:column="13">(<expr><name><name pos:line="13" pos:column="14">sb<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">.<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">st_size<pos:position pos:line="13" pos:column="24"/></name></name> <operator pos:line="13" pos:column="25">&gt;<pos:position pos:line="13" pos:column="29"/></operator> <literal type="number" pos:line="13" pos:column="27">0<pos:position pos:line="13" pos:column="28"/></literal></expr>)<pos:position pos:line="13" pos:column="29"/></condition>
      <block pos:line="14" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">fwrite<pos:position pos:line="15" pos:column="15"/></name> <argument_list pos:line="15" pos:column="16">(<argument><expr><name pos:line="15" pos:column="17">buf<pos:position pos:line="15" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="22">1<pos:position pos:line="15" pos:column="23"/></literal></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="25">MIN<pos:position pos:line="15" pos:column="28"/></name> <argument_list pos:line="15" pos:column="29">(<argument><expr><sizeof pos:line="15" pos:column="30">sizeof <argument_list pos:line="15" pos:column="37">(<argument><expr><name pos:line="15" pos:column="38">buf<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="44">sb<pos:position pos:line="15" pos:column="46"/></name><operator pos:line="15" pos:column="46">.<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="47">st_size<pos:position pos:line="15" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="15" pos:column="57">f<pos:position pos:line="15" pos:column="58"/></name></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">sb<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">.<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">st_size<pos:position pos:line="16" pos:column="19"/></name></name> <operator pos:line="16" pos:column="20">-=<pos:position pos:line="16" pos:column="22"/></operator> <call><name pos:line="16" pos:column="23">MIN<pos:position pos:line="16" pos:column="26"/></name> <argument_list pos:line="16" pos:column="27">(<argument><expr><sizeof pos:line="16" pos:column="28">sizeof <argument_list pos:line="16" pos:column="35">(<argument><expr><name pos:line="16" pos:column="36">buf<pos:position pos:line="16" pos:column="39"/></name></expr></argument>)<pos:position pos:line="16" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="42">sb<pos:position pos:line="16" pos:column="44"/></name><operator pos:line="16" pos:column="44">.<pos:position pos:line="16" pos:column="45"/></operator><name pos:line="16" pos:column="45">st_size<pos:position pos:line="16" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt>
      }<pos:position pos:line="17" pos:column="8"/></block></while>
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">fclose<pos:position pos:line="18" pos:column="13"/></name> <argument_list pos:line="18" pos:column="14">(<argument><expr><name pos:line="18" pos:column="15">f<pos:position pos:line="18" pos:column="16"/></name></expr></argument>)<pos:position pos:line="18" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1297_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">IMAP_DATA<pos:position pos:line="1" pos:column="10"/></name><modifier pos:line="1" pos:column="10">*<pos:position pos:line="1" pos:column="11"/></modifier></type> <name pos:line="1" pos:column="12">imap_conn_find<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">ACCOUNT<pos:position pos:line="1" pos:column="41"/></name><modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type> <name pos:line="1" pos:column="43">account<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">int<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">flags<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CONNECTION<pos:position pos:line="3" pos:column="13"/></name><modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type> <name pos:line="3" pos:column="15">conn<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">IMAP_DATA<pos:position pos:line="4" pos:column="12"/></name><modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type> <name pos:line="4" pos:column="14">idata<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">ACCOUNT<pos:position pos:line="5" pos:column="10"/></name><modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type> <name pos:line="5" pos:column="12">creds<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">!<pos:position pos:line="7" pos:column="8"/></operator><operator pos:line="7" pos:column="8">(<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="9">conn<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">=<pos:position pos:line="7" pos:column="15"/></operator> <call><name pos:line="7" pos:column="16">mutt_conn_find<pos:position pos:line="7" pos:column="30"/></name> <argument_list pos:line="7" pos:column="31">(<argument><expr><name pos:line="7" pos:column="32">NULL<pos:position pos:line="7" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="38">account<pos:position pos:line="7" pos:column="45"/></name></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></call><operator pos:line="7" pos:column="46">)<pos:position pos:line="7" pos:column="47"/></operator></expr>)<pos:position pos:line="7" pos:column="48"/></condition><then pos:line="7" pos:column="48">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">NULL<pos:position pos:line="8" pos:column="16"/></name></expr>;<pos:position pos:line="8" pos:column="17"/></return></block></then></if>

  <comment type="block" pos:line="10" pos:column="3">/* if opening a new UNSELECTED connection, preserve existing creds */</comment>
  <expr_stmt><expr><name pos:line="11" pos:column="3">creds<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <operator pos:line="11" pos:column="11">&amp;<pos:position pos:line="11" pos:column="16"/></operator><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><name><name pos:line="11" pos:column="13">conn<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">account<pos:position pos:line="11" pos:column="26"/></name></name><operator pos:line="11" pos:column="26">)<pos:position pos:line="11" pos:column="27"/></operator></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>

  <comment type="block" pos:line="13" pos:column="3">/* make sure this connection is not in SELECTED state, if neccessary */</comment>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">flags<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">&amp;<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="15">M_IMAP_CONN_NOSELECT<pos:position pos:line="14" pos:column="35"/></name></expr>)<pos:position pos:line="14" pos:column="36"/></condition><then pos:line="14" pos:column="36">
    <block type="pseudo"><while pos:line="15" pos:column="5">while <condition pos:line="15" pos:column="11">(<expr><name><name pos:line="15" pos:column="12">conn<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">-&gt;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="18">data<pos:position pos:line="15" pos:column="22"/></name></name> <operator pos:line="15" pos:column="23">&amp;&amp;<pos:position pos:line="15" pos:column="33"/></operator> <operator pos:line="15" pos:column="26">(<pos:position pos:line="15" pos:column="27"/></operator><operator pos:line="15" pos:column="27">(<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="28">IMAP_DATA<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">*<pos:position pos:line="15" pos:column="38"/></operator><operator pos:line="15" pos:column="38">)<pos:position pos:line="15" pos:column="39"/></operator> <name><name pos:line="15" pos:column="40">conn<pos:position pos:line="15" pos:column="44"/></name><operator pos:line="15" pos:column="44">-&gt;<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="46">data<pos:position pos:line="15" pos:column="50"/></name></name><operator pos:line="15" pos:column="50">)<pos:position pos:line="15" pos:column="51"/></operator><operator pos:line="15" pos:column="51">-&gt;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="53">state<pos:position pos:line="15" pos:column="58"/></name> <operator pos:line="15" pos:column="59">==<pos:position pos:line="15" pos:column="61"/></operator> <name pos:line="15" pos:column="62">IMAP_SELECTED<pos:position pos:line="15" pos:column="75"/></name></expr>)<pos:position pos:line="15" pos:column="76"/></condition>
    <block pos:line="16" pos:column="5">{
      <if pos:line="17" pos:column="7">if <condition pos:line="17" pos:column="10">(<expr><operator pos:line="17" pos:column="11">!<pos:position pos:line="17" pos:column="12"/></operator><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">conn<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <call><name pos:line="17" pos:column="20">mutt_conn_find<pos:position pos:line="17" pos:column="34"/></name> <argument_list pos:line="17" pos:column="35">(<argument><expr><name pos:line="17" pos:column="36">conn<pos:position pos:line="17" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="42">account<pos:position pos:line="17" pos:column="49"/></name></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></call><operator pos:line="17" pos:column="50">)<pos:position pos:line="17" pos:column="51"/></operator></expr>)<pos:position pos:line="17" pos:column="52"/></condition><then pos:line="17" pos:column="52">
	<block type="pseudo"><return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">NULL<pos:position pos:line="18" pos:column="20"/></name></expr>;<pos:position pos:line="18" pos:column="21"/></return></block></then></if>
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">memcpy<pos:position pos:line="19" pos:column="13"/></name> <argument_list pos:line="19" pos:column="14">(<argument><expr><operator pos:line="19" pos:column="15">&amp;<pos:position pos:line="19" pos:column="20"/></operator><operator pos:line="19" pos:column="16">(<pos:position pos:line="19" pos:column="17"/></operator><name><name pos:line="19" pos:column="17">conn<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">-&gt;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="23">account<pos:position pos:line="19" pos:column="30"/></name></name><operator pos:line="19" pos:column="30">)<pos:position pos:line="19" pos:column="31"/></operator></expr></argument>, <argument><expr><name pos:line="19" pos:column="33">creds<pos:position pos:line="19" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="40">sizeof <argument_list pos:line="19" pos:column="47">(<argument><expr><name pos:line="19" pos:column="48">ACCOUNT<pos:position pos:line="19" pos:column="55"/></name></expr></argument>)<pos:position pos:line="19" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></while></block></then></if>
  
  <expr_stmt><expr><name pos:line="22" pos:column="3">idata<pos:position pos:line="22" pos:column="8"/></name> <operator pos:line="22" pos:column="9">=<pos:position pos:line="22" pos:column="10"/></operator> <operator pos:line="22" pos:column="11">(<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="12">IMAP_DATA<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">*<pos:position pos:line="22" pos:column="22"/></operator><operator pos:line="22" pos:column="22">)<pos:position pos:line="22" pos:column="23"/></operator> <name><name pos:line="22" pos:column="24">conn<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">-&gt;<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="30">data<pos:position pos:line="22" pos:column="34"/></name></name></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt>

  <comment type="block" pos:line="24" pos:column="3">/* don't open a new connection if one isn't wanted */</comment>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">flags<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">&amp;<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="15">M_IMAP_CONN_NONEW<pos:position pos:line="25" pos:column="32"/></name></expr>)<pos:position pos:line="25" pos:column="33"/></condition><then pos:line="25" pos:column="33">
    <block type="pseudo"><if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">!<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">idata<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">||<pos:position pos:line="26" pos:column="18"/></operator> <name><name pos:line="26" pos:column="19">idata<pos:position pos:line="26" pos:column="24"/></name><operator pos:line="26" pos:column="24">-&gt;<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="26">state<pos:position pos:line="26" pos:column="31"/></name></name> <operator pos:line="26" pos:column="32">==<pos:position pos:line="26" pos:column="34"/></operator> <name pos:line="26" pos:column="35">IMAP_DISCONNECTED<pos:position pos:line="26" pos:column="52"/></name></expr>)<pos:position pos:line="26" pos:column="53"/></condition><then pos:line="26" pos:column="53">
      <block type="pseudo"><goto pos:line="27" pos:column="7">goto <name pos:line="27" pos:column="12">err_conn<pos:position pos:line="27" pos:column="20"/></name>;<pos:position pos:line="27" pos:column="21"/></goto></block></then></if></block></then></if>
  
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><operator pos:line="29" pos:column="7">!<pos:position pos:line="29" pos:column="8"/></operator><name pos:line="29" pos:column="8">idata<pos:position pos:line="29" pos:column="13"/></name></expr>)<pos:position pos:line="29" pos:column="14"/></condition><then pos:line="29" pos:column="14">
  <block pos:line="30" pos:column="3">{
    <comment type="block" pos:line="31" pos:column="5">/* The current connection is a new connection */</comment>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><operator pos:line="32" pos:column="9">!<pos:position pos:line="32" pos:column="10"/></operator> <operator pos:line="32" pos:column="11">(<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="12">idata<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">=<pos:position pos:line="32" pos:column="19"/></operator> <call><name pos:line="32" pos:column="20">imap_new_idata<pos:position pos:line="32" pos:column="34"/></name> <argument_list pos:line="32" pos:column="35">()<pos:position pos:line="32" pos:column="37"/></argument_list></call><operator pos:line="32" pos:column="37">)<pos:position pos:line="32" pos:column="38"/></operator></expr>)<pos:position pos:line="32" pos:column="39"/></condition><then pos:line="32" pos:column="39">
      <block type="pseudo"><goto pos:line="33" pos:column="7">goto <name pos:line="33" pos:column="12">err_conn<pos:position pos:line="33" pos:column="20"/></name>;<pos:position pos:line="33" pos:column="21"/></goto></block></then></if>

    <expr_stmt><expr><name><name pos:line="35" pos:column="5">conn<pos:position pos:line="35" pos:column="9"/></name><operator pos:line="35" pos:column="9">-&gt;<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="11">data<pos:position pos:line="35" pos:column="15"/></name></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <name pos:line="35" pos:column="18">idata<pos:position pos:line="35" pos:column="23"/></name></expr>;<pos:position pos:line="35" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">idata<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">-&gt;<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="12">conn<pos:position pos:line="36" pos:column="16"/></name></name> <operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator> <name pos:line="36" pos:column="19">conn<pos:position pos:line="36" pos:column="23"/></name></expr>;<pos:position pos:line="36" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>
  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><name><name pos:line="38" pos:column="7">idata<pos:position pos:line="38" pos:column="12"/></name><operator pos:line="38" pos:column="12">-&gt;<pos:position pos:line="38" pos:column="17"/></operator><name pos:line="38" pos:column="14">state<pos:position pos:line="38" pos:column="19"/></name></name> <operator pos:line="38" pos:column="20">==<pos:position pos:line="38" pos:column="22"/></operator> <name pos:line="38" pos:column="23">IMAP_DISCONNECTED<pos:position pos:line="38" pos:column="40"/></name></expr>)<pos:position pos:line="38" pos:column="41"/></condition><then pos:line="38" pos:column="41">
    <block type="pseudo"><if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><call><name pos:line="39" pos:column="9">imap_open_connection<pos:position pos:line="39" pos:column="29"/></name> <argument_list pos:line="39" pos:column="30">(<argument><expr><name pos:line="39" pos:column="31">idata<pos:position pos:line="39" pos:column="36"/></name></expr></argument>)<pos:position pos:line="39" pos:column="37"/></argument_list></call> <operator pos:line="39" pos:column="38">!=<pos:position pos:line="39" pos:column="40"/></operator> <literal type="number" pos:line="39" pos:column="41">0<pos:position pos:line="39" pos:column="42"/></literal></expr>)<pos:position pos:line="39" pos:column="43"/></condition><then pos:line="39" pos:column="43">
      <block type="pseudo"><goto pos:line="40" pos:column="7">goto <name pos:line="40" pos:column="12">err_idata<pos:position pos:line="40" pos:column="21"/></name>;<pos:position pos:line="40" pos:column="22"/></goto></block></then></if></block></then></if>
  
  <return pos:line="42" pos:column="3">return <expr><name pos:line="42" pos:column="10">idata<pos:position pos:line="42" pos:column="15"/></name></expr>;<pos:position pos:line="42" pos:column="16"/></return>

 <label><name pos:line="44" pos:column="2">err_idata<pos:position pos:line="44" pos:column="11"/></name>:<pos:position pos:line="44" pos:column="12"/></label>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">imap_free_idata<pos:position pos:line="45" pos:column="18"/></name> <argument_list pos:line="45" pos:column="19">(<argument><expr><operator pos:line="45" pos:column="20">&amp;<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="21">idata<pos:position pos:line="45" pos:column="26"/></name></expr></argument>)<pos:position pos:line="45" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="28"/></expr_stmt>
 <label><name pos:line="46" pos:column="2">err_conn<pos:position pos:line="46" pos:column="10"/></name>:<pos:position pos:line="46" pos:column="11"/></label>
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">mutt_socket_free<pos:position pos:line="47" pos:column="19"/></name> <argument_list pos:line="47" pos:column="20">(<argument><expr><name pos:line="47" pos:column="21">conn<pos:position pos:line="47" pos:column="25"/></name></expr></argument>)<pos:position pos:line="47" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="27"/></expr_stmt>

  <return pos:line="49" pos:column="3">return <expr><name pos:line="49" pos:column="10">NULL<pos:position pos:line="49" pos:column="14"/></name></expr>;<pos:position pos:line="49" pos:column="15"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

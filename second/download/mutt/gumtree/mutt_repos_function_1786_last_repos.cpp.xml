<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1786_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">mutt_restore_default<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">option_t<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">p<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <switch pos:line="3" pos:column="3">switch <condition pos:line="3" pos:column="10">(<expr><name><name pos:line="3" pos:column="11">p<pos:position pos:line="3" pos:column="12"/></name><operator pos:line="3" pos:column="12">-&gt;<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="14">type<pos:position pos:line="3" pos:column="18"/></name></name> <operator pos:line="3" pos:column="19">&amp;<pos:position pos:line="3" pos:column="24"/></operator> <name pos:line="3" pos:column="21">DT_MASK<pos:position pos:line="3" pos:column="28"/></name></expr>)<pos:position pos:line="3" pos:column="29"/></condition>
  <block pos:line="4" pos:column="3">{
    <case pos:line="5" pos:column="5">case <expr><name pos:line="5" pos:column="10">DT_STR<pos:position pos:line="5" pos:column="16"/></name></expr>:<pos:position pos:line="5" pos:column="17"/></case>
      <expr_stmt><expr><call><name pos:line="6" pos:column="7">mutt_str_replace<pos:position pos:line="6" pos:column="23"/></name> <argument_list pos:line="6" pos:column="24">(<argument><expr><operator pos:line="6" pos:column="25">(<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">char<pos:position pos:line="6" pos:column="30"/></name> <operator pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></operator><operator pos:line="6" pos:column="32">*<pos:position pos:line="6" pos:column="33"/></operator><operator pos:line="6" pos:column="33">)<pos:position pos:line="6" pos:column="34"/></operator> <name><name pos:line="6" pos:column="35">p<pos:position pos:line="6" pos:column="36"/></name><operator pos:line="6" pos:column="36">-&gt;<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="38">data<pos:position pos:line="6" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="44">(<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="45">char<pos:position pos:line="6" pos:column="49"/></name> <operator pos:line="6" pos:column="50">*<pos:position pos:line="6" pos:column="51"/></operator><operator pos:line="6" pos:column="51">)<pos:position pos:line="6" pos:column="52"/></operator> <name><name pos:line="6" pos:column="53">p<pos:position pos:line="6" pos:column="54"/></name><operator pos:line="6" pos:column="54">-&gt;<pos:position pos:line="6" pos:column="59"/></operator><name pos:line="6" pos:column="56">init<pos:position pos:line="6" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="62"/></expr_stmt> 
      <break pos:line="7" pos:column="7">break;<pos:position pos:line="7" pos:column="13"/></break>
    <case pos:line="8" pos:column="5">case <expr><name pos:line="8" pos:column="10">DT_MBCHARTBL<pos:position pos:line="8" pos:column="22"/></name></expr>:<pos:position pos:line="8" pos:column="23"/></case>
      <expr_stmt><expr><call><name pos:line="9" pos:column="7">free_mbchar_table<pos:position pos:line="9" pos:column="24"/></name> <argument_list pos:line="9" pos:column="25">(<argument><expr><operator pos:line="9" pos:column="26">(<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">mbchar_table<pos:position pos:line="9" pos:column="39"/></name> <operator pos:line="9" pos:column="40">*<pos:position pos:line="9" pos:column="41"/></operator><operator pos:line="9" pos:column="41">*<pos:position pos:line="9" pos:column="42"/></operator><operator pos:line="9" pos:column="42">)<pos:position pos:line="9" pos:column="43"/></operator><name><name pos:line="9" pos:column="43">p<pos:position pos:line="9" pos:column="44"/></name><operator pos:line="9" pos:column="44">-&gt;<pos:position pos:line="9" pos:column="49"/></operator><name pos:line="9" pos:column="46">data<pos:position pos:line="9" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="10" pos:column="7">*<pos:position pos:line="10" pos:column="8"/></operator><operator pos:line="10" pos:column="8">(<pos:position pos:line="10" pos:column="9"/></operator><operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">mbchar_table<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">*<pos:position pos:line="10" pos:column="24"/></operator><operator pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></operator><operator pos:line="10" pos:column="25">)<pos:position pos:line="10" pos:column="26"/></operator> <name><name pos:line="10" pos:column="27">p<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">-&gt;<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="30">data<pos:position pos:line="10" pos:column="34"/></name></name><operator pos:line="10" pos:column="34">)<pos:position pos:line="10" pos:column="35"/></operator> <operator pos:line="10" pos:column="36">=<pos:position pos:line="10" pos:column="37"/></operator> <call><name pos:line="10" pos:column="38">parse_mbchar_table<pos:position pos:line="10" pos:column="56"/></name> <argument_list pos:line="10" pos:column="57">(<argument><expr><operator pos:line="10" pos:column="58">(<pos:position pos:line="10" pos:column="59"/></operator><name pos:line="10" pos:column="59">char<pos:position pos:line="10" pos:column="63"/></name> <operator pos:line="10" pos:column="64">*<pos:position pos:line="10" pos:column="65"/></operator><operator pos:line="10" pos:column="65">)<pos:position pos:line="10" pos:column="66"/></operator> <name><name pos:line="10" pos:column="67">p<pos:position pos:line="10" pos:column="68"/></name><operator pos:line="10" pos:column="68">-&gt;<pos:position pos:line="10" pos:column="73"/></operator><name pos:line="10" pos:column="70">init<pos:position pos:line="10" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="76"/></expr_stmt>
      <break pos:line="11" pos:column="7">break;<pos:position pos:line="11" pos:column="13"/></break>
    <case pos:line="12" pos:column="5">case <expr><name pos:line="12" pos:column="10">DT_PATH<pos:position pos:line="12" pos:column="17"/></name></expr>:<pos:position pos:line="12" pos:column="18"/></case>
      <expr_stmt><expr><call><name pos:line="13" pos:column="7">FREE<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">char<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">*<pos:position pos:line="13" pos:column="19"/></operator><operator pos:line="13" pos:column="19">*<pos:position pos:line="13" pos:column="20"/></operator><operator pos:line="13" pos:column="20">)<pos:position pos:line="13" pos:column="21"/></operator> <name><name pos:line="13" pos:column="22">p<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">-&gt;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="25">data<pos:position pos:line="13" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>		<comment type="block" pos:line="13" pos:column="41">/* __FREE_CHECKED__ */</comment>
      <if pos:line="14" pos:column="7">if <condition pos:line="14" pos:column="10">(<expr><name><name pos:line="14" pos:column="11">p<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">init<pos:position pos:line="14" pos:column="18"/></name></name></expr>)<pos:position pos:line="14" pos:column="19"/></condition><then pos:line="14" pos:column="19">
      <block pos:line="15" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="16" pos:column="9">char<pos:position pos:line="16" pos:column="13"/></name></type> <name><name pos:line="16" pos:column="14">path<pos:position pos:line="16" pos:column="18"/></name><index pos:line="16" pos:column="18">[<expr><name pos:line="16" pos:column="19">_POSIX_PATH_MAX<pos:position pos:line="16" pos:column="34"/></name></expr>]<pos:position pos:line="16" pos:column="35"/></index></name></decl>;<pos:position pos:line="16" pos:column="36"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">strfcpy<pos:position pos:line="17" pos:column="16"/></name> <argument_list pos:line="17" pos:column="17">(<argument><expr><name pos:line="17" pos:column="18">path<pos:position pos:line="17" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="24">(<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">char<pos:position pos:line="17" pos:column="29"/></name> <operator pos:line="17" pos:column="30">*<pos:position pos:line="17" pos:column="31"/></operator><operator pos:line="17" pos:column="31">)<pos:position pos:line="17" pos:column="32"/></operator> <name><name pos:line="17" pos:column="33">p<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">-&gt;<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="36">init<pos:position pos:line="17" pos:column="40"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="42">sizeof <argument_list pos:line="17" pos:column="49">(<argument><expr><name pos:line="17" pos:column="50">path<pos:position pos:line="17" pos:column="54"/></name></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">mutt_expand_path<pos:position pos:line="18" pos:column="25"/></name> <argument_list pos:line="18" pos:column="26">(<argument><expr><name pos:line="18" pos:column="27">path<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="33">sizeof <argument_list pos:line="18" pos:column="40">(<argument><expr><name pos:line="18" pos:column="41">path<pos:position pos:line="18" pos:column="45"/></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="19" pos:column="9">*<pos:position pos:line="19" pos:column="10"/></operator><operator pos:line="19" pos:column="10">(<pos:position pos:line="19" pos:column="11"/></operator><operator pos:line="19" pos:column="11">(<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="12">char<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">*<pos:position pos:line="19" pos:column="18"/></operator><operator pos:line="19" pos:column="18">*<pos:position pos:line="19" pos:column="19"/></operator><operator pos:line="19" pos:column="19">)<pos:position pos:line="19" pos:column="20"/></operator> <name><name pos:line="19" pos:column="21">p<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">-&gt;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="24">data<pos:position pos:line="19" pos:column="28"/></name></name><operator pos:line="19" pos:column="28">)<pos:position pos:line="19" pos:column="29"/></operator> <operator pos:line="19" pos:column="30">=<pos:position pos:line="19" pos:column="31"/></operator> <call><name pos:line="19" pos:column="32">safe_strdup<pos:position pos:line="19" pos:column="43"/></name> <argument_list pos:line="19" pos:column="44">(<argument><expr><name pos:line="19" pos:column="45">path<pos:position pos:line="19" pos:column="49"/></name></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="51"/></expr_stmt>
      }<pos:position pos:line="20" pos:column="8"/></block></then></if>
      <break pos:line="21" pos:column="7">break;<pos:position pos:line="21" pos:column="13"/></break>
    <case pos:line="22" pos:column="5">case <expr><name pos:line="22" pos:column="10">DT_ADDR<pos:position pos:line="22" pos:column="17"/></name></expr>:<pos:position pos:line="22" pos:column="18"/></case>
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">rfc822_free_address<pos:position pos:line="23" pos:column="26"/></name> <argument_list pos:line="23" pos:column="27">(<argument><expr><operator pos:line="23" pos:column="28">(<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="29">ADDRESS<pos:position pos:line="23" pos:column="36"/></name> <operator pos:line="23" pos:column="37">*<pos:position pos:line="23" pos:column="38"/></operator><operator pos:line="23" pos:column="38">*<pos:position pos:line="23" pos:column="39"/></operator><operator pos:line="23" pos:column="39">)<pos:position pos:line="23" pos:column="40"/></operator> <name><name pos:line="23" pos:column="41">p<pos:position pos:line="23" pos:column="42"/></name><operator pos:line="23" pos:column="42">-&gt;<pos:position pos:line="23" pos:column="47"/></operator><name pos:line="23" pos:column="44">data<pos:position pos:line="23" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="50"/></expr_stmt>
      <if pos:line="24" pos:column="7">if <condition pos:line="24" pos:column="10">(<expr><name><name pos:line="24" pos:column="11">p<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">-&gt;<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="14">init<pos:position pos:line="24" pos:column="18"/></name></name></expr>)<pos:position pos:line="24" pos:column="19"/></condition><then pos:line="24" pos:column="19">
	<block type="pseudo"><expr_stmt><expr><operator pos:line="25" pos:column="9">*<pos:position pos:line="25" pos:column="10"/></operator><operator pos:line="25" pos:column="10">(<pos:position pos:line="25" pos:column="11"/></operator><operator pos:line="25" pos:column="11">(<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="12">ADDRESS<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">*<pos:position pos:line="25" pos:column="21"/></operator><operator pos:line="25" pos:column="21">*<pos:position pos:line="25" pos:column="22"/></operator><operator pos:line="25" pos:column="22">)<pos:position pos:line="25" pos:column="23"/></operator> <name><name pos:line="25" pos:column="24">p<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">-&gt;<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="27">data<pos:position pos:line="25" pos:column="31"/></name></name><operator pos:line="25" pos:column="31">)<pos:position pos:line="25" pos:column="32"/></operator> <operator pos:line="25" pos:column="33">=<pos:position pos:line="25" pos:column="34"/></operator> <call><name pos:line="25" pos:column="35">rfc822_parse_adrlist<pos:position pos:line="25" pos:column="55"/></name> <argument_list pos:line="25" pos:column="56">(<argument><expr><name pos:line="25" pos:column="57">NULL<pos:position pos:line="25" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="63">(<pos:position pos:line="25" pos:column="64"/></operator><name pos:line="25" pos:column="64">char<pos:position pos:line="25" pos:column="68"/></name> <operator pos:line="25" pos:column="69">*<pos:position pos:line="25" pos:column="70"/></operator><operator pos:line="25" pos:column="70">)<pos:position pos:line="25" pos:column="71"/></operator> <name><name pos:line="25" pos:column="72">p<pos:position pos:line="25" pos:column="73"/></name><operator pos:line="25" pos:column="73">-&gt;<pos:position pos:line="25" pos:column="78"/></operator><name pos:line="25" pos:column="75">init<pos:position pos:line="25" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="81"/></expr_stmt></block></then></if>
      <break pos:line="26" pos:column="7">break;<pos:position pos:line="26" pos:column="13"/></break>
    <case pos:line="27" pos:column="5">case <expr><name pos:line="27" pos:column="10">DT_BOOL<pos:position pos:line="27" pos:column="17"/></name></expr>:<pos:position pos:line="27" pos:column="18"/></case>
      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><name><name pos:line="28" pos:column="11">p<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">-&gt;<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="14">init<pos:position pos:line="28" pos:column="18"/></name></name></expr>)<pos:position pos:line="28" pos:column="19"/></condition><then pos:line="28" pos:column="19">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="9">set_option<pos:position pos:line="29" pos:column="19"/></name> <argument_list pos:line="29" pos:column="20">(<argument><expr><name><name pos:line="29" pos:column="21">p<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">-&gt;<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="24">data<pos:position pos:line="29" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt></block></then>
      <else pos:line="30" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="9">unset_option<pos:position pos:line="31" pos:column="21"/></name> <argument_list pos:line="31" pos:column="22">(<argument><expr><name><name pos:line="31" pos:column="23">p<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">-&gt;<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="26">data<pos:position pos:line="31" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt></block></else></if>
      <break pos:line="32" pos:column="7">break;<pos:position pos:line="32" pos:column="13"/></break>
    <case pos:line="33" pos:column="5">case <expr><name pos:line="33" pos:column="10">DT_QUAD<pos:position pos:line="33" pos:column="17"/></name></expr>:<pos:position pos:line="33" pos:column="18"/></case>
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">set_quadoption<pos:position pos:line="34" pos:column="21"/></name> <argument_list pos:line="34" pos:column="22">(<argument><expr><name><name pos:line="34" pos:column="23">p<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">-&gt;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="26">data<pos:position pos:line="34" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="32">p<pos:position pos:line="34" pos:column="33"/></name><operator pos:line="34" pos:column="33">-&gt;<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="35">init<pos:position pos:line="34" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>
      <break pos:line="35" pos:column="7">break;<pos:position pos:line="35" pos:column="13"/></break>
    <case pos:line="36" pos:column="5">case <expr><name pos:line="36" pos:column="10">DT_NUM<pos:position pos:line="36" pos:column="16"/></name></expr>:<pos:position pos:line="36" pos:column="17"/></case>
    <case pos:line="37" pos:column="5">case <expr><name pos:line="37" pos:column="10">DT_SORT<pos:position pos:line="37" pos:column="17"/></name></expr>:<pos:position pos:line="37" pos:column="18"/></case>
    <case pos:line="38" pos:column="5">case <expr><name pos:line="38" pos:column="10">DT_MAGIC<pos:position pos:line="38" pos:column="18"/></name></expr>:<pos:position pos:line="38" pos:column="19"/></case>
      <expr_stmt><expr><operator pos:line="39" pos:column="7">*<pos:position pos:line="39" pos:column="8"/></operator><operator pos:line="39" pos:column="8">(<pos:position pos:line="39" pos:column="9"/></operator><operator pos:line="39" pos:column="9">(<pos:position pos:line="39" pos:column="10"/></operator><name pos:line="39" pos:column="10">short<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">*<pos:position pos:line="39" pos:column="17"/></operator><operator pos:line="39" pos:column="17">)<pos:position pos:line="39" pos:column="18"/></operator> <name><name pos:line="39" pos:column="19">p<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">-&gt;<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="22">data<pos:position pos:line="39" pos:column="26"/></name></name><operator pos:line="39" pos:column="26">)<pos:position pos:line="39" pos:column="27"/></operator> <operator pos:line="39" pos:column="28">=<pos:position pos:line="39" pos:column="29"/></operator> <name><name pos:line="39" pos:column="30">p<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">-&gt;<pos:position pos:line="39" pos:column="36"/></operator><name pos:line="39" pos:column="33">init<pos:position pos:line="39" pos:column="37"/></name></name></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
      <break pos:line="40" pos:column="7">break;<pos:position pos:line="40" pos:column="13"/></break>
    <case pos:line="41" pos:column="5">case <expr><name pos:line="41" pos:column="10">DT_RX<pos:position pos:line="41" pos:column="15"/></name></expr>:<pos:position pos:line="41" pos:column="16"/></case>
      <block pos:line="42" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="43" pos:column="9">REGEXP<pos:position pos:line="43" pos:column="15"/></name> <modifier pos:line="43" pos:column="16">*<pos:position pos:line="43" pos:column="17"/></modifier></type><name pos:line="43" pos:column="17">pp<pos:position pos:line="43" pos:column="19"/></name> <init pos:line="43" pos:column="20">= <expr><operator pos:line="43" pos:column="22">(<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="23">REGEXP<pos:position pos:line="43" pos:column="29"/></name> <operator pos:line="43" pos:column="30">*<pos:position pos:line="43" pos:column="31"/></operator><operator pos:line="43" pos:column="31">)<pos:position pos:line="43" pos:column="32"/></operator> <name><name pos:line="43" pos:column="33">p<pos:position pos:line="43" pos:column="34"/></name><operator pos:line="43" pos:column="34">-&gt;<pos:position pos:line="43" pos:column="39"/></operator><name pos:line="43" pos:column="36">data<pos:position pos:line="43" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="43" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="44" pos:column="9">int<pos:position pos:line="44" pos:column="12"/></name></type> <name pos:line="44" pos:column="13">flags<pos:position pos:line="44" pos:column="18"/></name> <init pos:line="44" pos:column="19">= <expr><literal type="number" pos:line="44" pos:column="21">0<pos:position pos:line="44" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="44" pos:column="23"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="46" pos:column="9">FREE<pos:position pos:line="46" pos:column="13"/></name> <argument_list pos:line="46" pos:column="14">(<argument><expr><operator pos:line="46" pos:column="15">&amp;<pos:position pos:line="46" pos:column="20"/></operator><name><name pos:line="46" pos:column="16">pp<pos:position pos:line="46" pos:column="18"/></name><operator pos:line="46" pos:column="18">-&gt;<pos:position pos:line="46" pos:column="23"/></operator><name pos:line="46" pos:column="20">pattern<pos:position pos:line="46" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="29"/></expr_stmt>
	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name><name pos:line="47" pos:column="13">pp<pos:position pos:line="47" pos:column="15"/></name><operator pos:line="47" pos:column="15">-&gt;<pos:position pos:line="47" pos:column="20"/></operator><name pos:line="47" pos:column="17">rx<pos:position pos:line="47" pos:column="19"/></name></name></expr>)<pos:position pos:line="47" pos:column="20"/></condition><then pos:line="47" pos:column="20">
	<block pos:line="48" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="49" pos:column="11">regfree<pos:position pos:line="49" pos:column="18"/></name> <argument_list pos:line="49" pos:column="19">(<argument><expr><name><name pos:line="49" pos:column="20">pp<pos:position pos:line="49" pos:column="22"/></name><operator pos:line="49" pos:column="22">-&gt;<pos:position pos:line="49" pos:column="27"/></operator><name pos:line="49" pos:column="24">rx<pos:position pos:line="49" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="28"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="50" pos:column="11">FREE<pos:position pos:line="50" pos:column="15"/></name> <argument_list pos:line="50" pos:column="16">(<argument><expr><operator pos:line="50" pos:column="17">&amp;<pos:position pos:line="50" pos:column="22"/></operator><name><name pos:line="50" pos:column="18">pp<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">-&gt;<pos:position pos:line="50" pos:column="25"/></operator><name pos:line="50" pos:column="22">rx<pos:position pos:line="50" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="51" pos:column="10"/></block></then></if>

	<if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name><name pos:line="53" pos:column="13">p<pos:position pos:line="53" pos:column="14"/></name><operator pos:line="53" pos:column="14">-&gt;<pos:position pos:line="53" pos:column="19"/></operator><name pos:line="53" pos:column="16">init<pos:position pos:line="53" pos:column="20"/></name></name></expr>)<pos:position pos:line="53" pos:column="21"/></condition><then pos:line="53" pos:column="21">
	<block pos:line="54" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="55" pos:column="11">char<pos:position pos:line="55" pos:column="15"/></name> <modifier pos:line="55" pos:column="16">*<pos:position pos:line="55" pos:column="17"/></modifier></type><name pos:line="55" pos:column="17">s<pos:position pos:line="55" pos:column="18"/></name> <init pos:line="55" pos:column="19">= <expr><operator pos:line="55" pos:column="21">(<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="22">char<pos:position pos:line="55" pos:column="26"/></name> <operator pos:line="55" pos:column="27">*<pos:position pos:line="55" pos:column="28"/></operator><operator pos:line="55" pos:column="28">)<pos:position pos:line="55" pos:column="29"/></operator> <name><name pos:line="55" pos:column="30">p<pos:position pos:line="55" pos:column="31"/></name><operator pos:line="55" pos:column="31">-&gt;<pos:position pos:line="55" pos:column="36"/></operator><name pos:line="55" pos:column="33">init<pos:position pos:line="55" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="55" pos:column="38"/></decl_stmt>

	  <expr_stmt><expr><name><name pos:line="57" pos:column="11">pp<pos:position pos:line="57" pos:column="13"/></name><operator pos:line="57" pos:column="13">-&gt;<pos:position pos:line="57" pos:column="18"/></operator><name pos:line="57" pos:column="15">rx<pos:position pos:line="57" pos:column="17"/></name></name> <operator pos:line="57" pos:column="18">=<pos:position pos:line="57" pos:column="19"/></operator> <call><name pos:line="57" pos:column="20">safe_calloc<pos:position pos:line="57" pos:column="31"/></name> <argument_list pos:line="57" pos:column="32">(<argument><expr><literal type="number" pos:line="57" pos:column="33">1<pos:position pos:line="57" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="57" pos:column="36">sizeof <argument_list pos:line="57" pos:column="43">(<argument><expr><name pos:line="57" pos:column="44">regex_t<pos:position pos:line="57" pos:column="51"/></name></expr></argument>)<pos:position pos:line="57" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="57" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="54"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="58" pos:column="11">pp<pos:position pos:line="58" pos:column="13"/></name><operator pos:line="58" pos:column="13">-&gt;<pos:position pos:line="58" pos:column="18"/></operator><name pos:line="58" pos:column="15">pattern<pos:position pos:line="58" pos:column="22"/></name></name> <operator pos:line="58" pos:column="23">=<pos:position pos:line="58" pos:column="24"/></operator> <call><name pos:line="58" pos:column="25">safe_strdup<pos:position pos:line="58" pos:column="36"/></name> <argument_list pos:line="58" pos:column="37">(<argument><expr><operator pos:line="58" pos:column="38">(<pos:position pos:line="58" pos:column="39"/></operator><name pos:line="58" pos:column="39">char<pos:position pos:line="58" pos:column="43"/></name> <operator pos:line="58" pos:column="44">*<pos:position pos:line="58" pos:column="45"/></operator><operator pos:line="58" pos:column="45">)<pos:position pos:line="58" pos:column="46"/></operator> <name><name pos:line="58" pos:column="47">p<pos:position pos:line="58" pos:column="48"/></name><operator pos:line="58" pos:column="48">-&gt;<pos:position pos:line="58" pos:column="53"/></operator><name pos:line="58" pos:column="50">init<pos:position pos:line="58" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="56"/></expr_stmt>
	  <if pos:line="59" pos:column="11">if <condition pos:line="59" pos:column="14">(<expr><call><name pos:line="59" pos:column="15">mutt_strcmp<pos:position pos:line="59" pos:column="26"/></name> <argument_list pos:line="59" pos:column="27">(<argument><expr><name><name pos:line="59" pos:column="28">p<pos:position pos:line="59" pos:column="29"/></name><operator pos:line="59" pos:column="29">-&gt;<pos:position pos:line="59" pos:column="34"/></operator><name pos:line="59" pos:column="31">option<pos:position pos:line="59" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="39">"mask"<pos:position pos:line="59" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="46"/></argument_list></call> <operator pos:line="59" pos:column="47">!=<pos:position pos:line="59" pos:column="49"/></operator> <literal type="number" pos:line="59" pos:column="50">0<pos:position pos:line="59" pos:column="51"/></literal></expr>)<pos:position pos:line="59" pos:column="52"/></condition><then pos:line="59" pos:column="52">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="60" pos:column="13">flags<pos:position pos:line="60" pos:column="18"/></name> <operator pos:line="60" pos:column="19">|=<pos:position pos:line="60" pos:column="21"/></operator> <call><name pos:line="60" pos:column="22">mutt_which_case<pos:position pos:line="60" pos:column="37"/></name> <argument_list pos:line="60" pos:column="38">(<argument><expr><operator pos:line="60" pos:column="39">(<pos:position pos:line="60" pos:column="40"/></operator><specifier pos:line="60" pos:column="40">const<pos:position pos:line="60" pos:column="45"/></specifier> <name pos:line="60" pos:column="46">char<pos:position pos:line="60" pos:column="50"/></name> <operator pos:line="60" pos:column="51">*<pos:position pos:line="60" pos:column="52"/></operator><operator pos:line="60" pos:column="52">)<pos:position pos:line="60" pos:column="53"/></operator> <name><name pos:line="60" pos:column="54">p<pos:position pos:line="60" pos:column="55"/></name><operator pos:line="60" pos:column="55">-&gt;<pos:position pos:line="60" pos:column="60"/></operator><name pos:line="60" pos:column="57">init<pos:position pos:line="60" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="63"/></expr_stmt></block></then></if>
	  <if pos:line="61" pos:column="11">if <condition pos:line="61" pos:column="14">(<expr><call><name pos:line="61" pos:column="15">mutt_strcmp<pos:position pos:line="61" pos:column="26"/></name> <argument_list pos:line="61" pos:column="27">(<argument><expr><name><name pos:line="61" pos:column="28">p<pos:position pos:line="61" pos:column="29"/></name><operator pos:line="61" pos:column="29">-&gt;<pos:position pos:line="61" pos:column="34"/></operator><name pos:line="61" pos:column="31">option<pos:position pos:line="61" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="39">"mask"<pos:position pos:line="61" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="46"/></argument_list></call> <operator pos:line="61" pos:column="47">==<pos:position pos:line="61" pos:column="49"/></operator> <literal type="number" pos:line="61" pos:column="50">0<pos:position pos:line="61" pos:column="51"/></literal> <operator pos:line="61" pos:column="52">&amp;&amp;<pos:position pos:line="61" pos:column="62"/></operator> <operator pos:line="61" pos:column="55">*<pos:position pos:line="61" pos:column="56"/></operator><name pos:line="61" pos:column="56">s<pos:position pos:line="61" pos:column="57"/></name> <operator pos:line="61" pos:column="58">==<pos:position pos:line="61" pos:column="60"/></operator> <literal type="char" pos:line="61" pos:column="61">'!'<pos:position pos:line="61" pos:column="64"/></literal></expr>)<pos:position pos:line="61" pos:column="65"/></condition><then pos:line="61" pos:column="65">
	  <block pos:line="62" pos:column="11">{
	    <expr_stmt><expr><name pos:line="63" pos:column="13">s<pos:position pos:line="63" pos:column="14"/></name><operator pos:line="63" pos:column="14">++<pos:position pos:line="63" pos:column="16"/></operator></expr>;<pos:position pos:line="63" pos:column="17"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="64" pos:column="13">pp<pos:position pos:line="64" pos:column="15"/></name><operator pos:line="64" pos:column="15">-&gt;<pos:position pos:line="64" pos:column="20"/></operator></name><operator pos:line="64" pos:column="17">not<pos:position pos:line="64" pos:column="20"/></operator> <operator pos:line="64" pos:column="21">=<pos:position pos:line="64" pos:column="22"/></operator> <literal type="number" pos:line="64" pos:column="23">1<pos:position pos:line="64" pos:column="24"/></literal></expr>;<pos:position pos:line="64" pos:column="25"/></expr_stmt>
	  }<pos:position pos:line="65" pos:column="12"/></block></then></if>
	  <if pos:line="66" pos:column="11">if <condition pos:line="66" pos:column="14">(<expr><call><name pos:line="66" pos:column="15">REGCOMP<pos:position pos:line="66" pos:column="22"/></name> <argument_list pos:line="66" pos:column="23">(<argument><expr><name><name pos:line="66" pos:column="24">pp<pos:position pos:line="66" pos:column="26"/></name><operator pos:line="66" pos:column="26">-&gt;<pos:position pos:line="66" pos:column="31"/></operator><name pos:line="66" pos:column="28">rx<pos:position pos:line="66" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="32">s<pos:position pos:line="66" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="35">flags<pos:position pos:line="66" pos:column="40"/></name></expr></argument>)<pos:position pos:line="66" pos:column="41"/></argument_list></call> <operator pos:line="66" pos:column="42">!=<pos:position pos:line="66" pos:column="44"/></operator> <literal type="number" pos:line="66" pos:column="45">0<pos:position pos:line="66" pos:column="46"/></literal></expr>)<pos:position pos:line="66" pos:column="47"/></condition><then pos:line="66" pos:column="47">
	  <block pos:line="67" pos:column="11">{
	    <expr_stmt><expr><call><name pos:line="68" pos:column="13">fprintf<pos:position pos:line="68" pos:column="20"/></name> <argument_list pos:line="68" pos:column="21">(<argument><expr><name pos:line="68" pos:column="22">stderr<pos:position pos:line="68" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="68" pos:column="30">_<pos:position pos:line="68" pos:column="31"/></name><argument_list pos:line="68" pos:column="31">(<argument><expr><literal type="string" pos:line="68" pos:column="32">"mutt_restore_default(%s): error in regexp: %s\n"<pos:position pos:line="68" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="82"/></argument_list></call></expr></argument>,
		     <argument><expr><name><name pos:line="69" pos:column="22">p<pos:position pos:line="69" pos:column="23"/></name><operator pos:line="69" pos:column="23">-&gt;<pos:position pos:line="69" pos:column="28"/></operator><name pos:line="69" pos:column="25">option<pos:position pos:line="69" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="33">pp<pos:position pos:line="69" pos:column="35"/></name><operator pos:line="69" pos:column="35">-&gt;<pos:position pos:line="69" pos:column="40"/></operator><name pos:line="69" pos:column="37">pattern<pos:position pos:line="69" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="46"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="70" pos:column="13">FREE<pos:position pos:line="70" pos:column="17"/></name> <argument_list pos:line="70" pos:column="18">(<argument><expr><operator pos:line="70" pos:column="19">&amp;<pos:position pos:line="70" pos:column="24"/></operator><name><name pos:line="70" pos:column="20">pp<pos:position pos:line="70" pos:column="22"/></name><operator pos:line="70" pos:column="22">-&gt;<pos:position pos:line="70" pos:column="27"/></operator><name pos:line="70" pos:column="24">pattern<pos:position pos:line="70" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="33"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="71" pos:column="13">FREE<pos:position pos:line="71" pos:column="17"/></name> <argument_list pos:line="71" pos:column="18">(<argument><expr><operator pos:line="71" pos:column="19">&amp;<pos:position pos:line="71" pos:column="24"/></operator><name><name pos:line="71" pos:column="20">pp<pos:position pos:line="71" pos:column="22"/></name><operator pos:line="71" pos:column="22">-&gt;<pos:position pos:line="71" pos:column="27"/></operator><name pos:line="71" pos:column="24">rx<pos:position pos:line="71" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="28"/></expr_stmt>
	  }<pos:position pos:line="72" pos:column="12"/></block></then></if>
	}<pos:position pos:line="73" pos:column="10"/></block></then></if>
      }<pos:position pos:line="74" pos:column="8"/></block>
      <break pos:line="75" pos:column="7">break;<pos:position pos:line="75" pos:column="13"/></break>
  }<pos:position pos:line="76" pos:column="4"/></block></switch>

  <if pos:line="78" pos:column="3">if <condition pos:line="78" pos:column="6">(<expr><name><name pos:line="78" pos:column="7">p<pos:position pos:line="78" pos:column="8"/></name><operator pos:line="78" pos:column="8">-&gt;<pos:position pos:line="78" pos:column="13"/></operator><name pos:line="78" pos:column="10">flags<pos:position pos:line="78" pos:column="15"/></name></name> <operator pos:line="78" pos:column="16">&amp;<pos:position pos:line="78" pos:column="21"/></operator> <name pos:line="78" pos:column="18">R_INDEX<pos:position pos:line="78" pos:column="25"/></name></expr>)<pos:position pos:line="78" pos:column="26"/></condition><then pos:line="78" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="5">mutt_set_menu_redraw_full<pos:position pos:line="79" pos:column="30"/></name> <argument_list pos:line="79" pos:column="31">(<argument><expr><name pos:line="79" pos:column="32">MENU_MAIN<pos:position pos:line="79" pos:column="41"/></name></expr></argument>)<pos:position pos:line="79" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="43"/></expr_stmt></block></then></if>
  <if pos:line="80" pos:column="3">if <condition pos:line="80" pos:column="6">(<expr><name><name pos:line="80" pos:column="7">p<pos:position pos:line="80" pos:column="8"/></name><operator pos:line="80" pos:column="8">-&gt;<pos:position pos:line="80" pos:column="13"/></operator><name pos:line="80" pos:column="10">flags<pos:position pos:line="80" pos:column="15"/></name></name> <operator pos:line="80" pos:column="16">&amp;<pos:position pos:line="80" pos:column="21"/></operator> <name pos:line="80" pos:column="18">R_PAGER<pos:position pos:line="80" pos:column="25"/></name></expr>)<pos:position pos:line="80" pos:column="26"/></condition><then pos:line="80" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="81" pos:column="5">mutt_set_menu_redraw_full<pos:position pos:line="81" pos:column="30"/></name> <argument_list pos:line="81" pos:column="31">(<argument><expr><name pos:line="81" pos:column="32">MENU_PAGER<pos:position pos:line="81" pos:column="42"/></name></expr></argument>)<pos:position pos:line="81" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="44"/></expr_stmt></block></then></if>
  <if pos:line="82" pos:column="3">if <condition pos:line="82" pos:column="6">(<expr><name><name pos:line="82" pos:column="7">p<pos:position pos:line="82" pos:column="8"/></name><operator pos:line="82" pos:column="8">-&gt;<pos:position pos:line="82" pos:column="13"/></operator><name pos:line="82" pos:column="10">flags<pos:position pos:line="82" pos:column="15"/></name></name> <operator pos:line="82" pos:column="16">&amp;<pos:position pos:line="82" pos:column="21"/></operator> <name pos:line="82" pos:column="18">R_PAGER_FLOW<pos:position pos:line="82" pos:column="30"/></name></expr>)<pos:position pos:line="82" pos:column="31"/></condition><then pos:line="82" pos:column="31">
  <block pos:line="83" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">mutt_set_menu_redraw_full<pos:position pos:line="84" pos:column="30"/></name> <argument_list pos:line="84" pos:column="31">(<argument><expr><name pos:line="84" pos:column="32">MENU_PAGER<pos:position pos:line="84" pos:column="42"/></name></expr></argument>)<pos:position pos:line="84" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="85" pos:column="5">mutt_set_menu_redraw<pos:position pos:line="85" pos:column="25"/></name> <argument_list pos:line="85" pos:column="26">(<argument><expr><name pos:line="85" pos:column="27">MENU_PAGER<pos:position pos:line="85" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="39">REDRAW_FLOW<pos:position pos:line="85" pos:column="50"/></name></expr></argument>)<pos:position pos:line="85" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="52"/></expr_stmt>
  }<pos:position pos:line="86" pos:column="4"/></block></then></if>
  <if pos:line="87" pos:column="3">if <condition pos:line="87" pos:column="6">(<expr><name><name pos:line="87" pos:column="7">p<pos:position pos:line="87" pos:column="8"/></name><operator pos:line="87" pos:column="8">-&gt;<pos:position pos:line="87" pos:column="13"/></operator><name pos:line="87" pos:column="10">flags<pos:position pos:line="87" pos:column="15"/></name></name> <operator pos:line="87" pos:column="16">&amp;<pos:position pos:line="87" pos:column="21"/></operator> <name pos:line="87" pos:column="18">R_RESORT_SUB<pos:position pos:line="87" pos:column="30"/></name></expr>)<pos:position pos:line="87" pos:column="31"/></condition><then pos:line="87" pos:column="31">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="88" pos:column="5">set_option<pos:position pos:line="88" pos:column="15"/></name> <argument_list pos:line="88" pos:column="16">(<argument><expr><name pos:line="88" pos:column="17">OPTSORTSUBTHREADS<pos:position pos:line="88" pos:column="34"/></name></expr></argument>)<pos:position pos:line="88" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="36"/></expr_stmt></block></then></if>
  <if pos:line="89" pos:column="3">if <condition pos:line="89" pos:column="6">(<expr><name><name pos:line="89" pos:column="7">p<pos:position pos:line="89" pos:column="8"/></name><operator pos:line="89" pos:column="8">-&gt;<pos:position pos:line="89" pos:column="13"/></operator><name pos:line="89" pos:column="10">flags<pos:position pos:line="89" pos:column="15"/></name></name> <operator pos:line="89" pos:column="16">&amp;<pos:position pos:line="89" pos:column="21"/></operator> <name pos:line="89" pos:column="18">R_RESORT<pos:position pos:line="89" pos:column="26"/></name></expr>)<pos:position pos:line="89" pos:column="27"/></condition><then pos:line="89" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="5">set_option<pos:position pos:line="90" pos:column="15"/></name> <argument_list pos:line="90" pos:column="16">(<argument><expr><name pos:line="90" pos:column="17">OPTNEEDRESORT<pos:position pos:line="90" pos:column="30"/></name></expr></argument>)<pos:position pos:line="90" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="32"/></expr_stmt></block></then></if>
  <if pos:line="91" pos:column="3">if <condition pos:line="91" pos:column="6">(<expr><name><name pos:line="91" pos:column="7">p<pos:position pos:line="91" pos:column="8"/></name><operator pos:line="91" pos:column="8">-&gt;<pos:position pos:line="91" pos:column="13"/></operator><name pos:line="91" pos:column="10">flags<pos:position pos:line="91" pos:column="15"/></name></name> <operator pos:line="91" pos:column="16">&amp;<pos:position pos:line="91" pos:column="21"/></operator> <name pos:line="91" pos:column="18">R_RESORT_INIT<pos:position pos:line="91" pos:column="31"/></name></expr>)<pos:position pos:line="91" pos:column="32"/></condition><then pos:line="91" pos:column="32">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="92" pos:column="5">set_option<pos:position pos:line="92" pos:column="15"/></name> <argument_list pos:line="92" pos:column="16">(<argument><expr><name pos:line="92" pos:column="17">OPTRESORTINIT<pos:position pos:line="92" pos:column="30"/></name></expr></argument>)<pos:position pos:line="92" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="32"/></expr_stmt></block></then></if>
  <if pos:line="93" pos:column="3">if <condition pos:line="93" pos:column="6">(<expr><name><name pos:line="93" pos:column="7">p<pos:position pos:line="93" pos:column="8"/></name><operator pos:line="93" pos:column="8">-&gt;<pos:position pos:line="93" pos:column="13"/></operator><name pos:line="93" pos:column="10">flags<pos:position pos:line="93" pos:column="15"/></name></name> <operator pos:line="93" pos:column="16">&amp;<pos:position pos:line="93" pos:column="21"/></operator> <name pos:line="93" pos:column="18">R_TREE<pos:position pos:line="93" pos:column="24"/></name></expr>)<pos:position pos:line="93" pos:column="25"/></condition><then pos:line="93" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="94" pos:column="5">set_option<pos:position pos:line="94" pos:column="15"/></name> <argument_list pos:line="94" pos:column="16">(<argument><expr><name pos:line="94" pos:column="17">OPTREDRAWTREE<pos:position pos:line="94" pos:column="30"/></name></expr></argument>)<pos:position pos:line="94" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="32"/></expr_stmt></block></then></if>
  <if pos:line="95" pos:column="3">if <condition pos:line="95" pos:column="6">(<expr><name><name pos:line="95" pos:column="7">p<pos:position pos:line="95" pos:column="8"/></name><operator pos:line="95" pos:column="8">-&gt;<pos:position pos:line="95" pos:column="13"/></operator><name pos:line="95" pos:column="10">flags<pos:position pos:line="95" pos:column="15"/></name></name> <operator pos:line="95" pos:column="16">&amp;<pos:position pos:line="95" pos:column="21"/></operator> <name pos:line="95" pos:column="18">R_REFLOW<pos:position pos:line="95" pos:column="26"/></name></expr>)<pos:position pos:line="95" pos:column="27"/></condition><then pos:line="95" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="96" pos:column="5">mutt_reflow_windows<pos:position pos:line="96" pos:column="24"/></name> <argument_list pos:line="96" pos:column="25">()<pos:position pos:line="96" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="28"/></expr_stmt></block></then></if>
<cpp:ifdef pos:line="97" pos:column="1">#<cpp:directive pos:line="97" pos:column="2">ifdef<pos:position pos:line="97" pos:column="7"/></cpp:directive> <name pos:line="97" pos:column="8">USE_SIDEBAR<pos:position pos:line="97" pos:column="19"/></name></cpp:ifdef>
  <if pos:line="98" pos:column="3">if <condition pos:line="98" pos:column="6">(<expr><name><name pos:line="98" pos:column="7">p<pos:position pos:line="98" pos:column="8"/></name><operator pos:line="98" pos:column="8">-&gt;<pos:position pos:line="98" pos:column="13"/></operator><name pos:line="98" pos:column="10">flags<pos:position pos:line="98" pos:column="15"/></name></name> <operator pos:line="98" pos:column="16">&amp;<pos:position pos:line="98" pos:column="21"/></operator> <name pos:line="98" pos:column="18">R_SIDEBAR<pos:position pos:line="98" pos:column="27"/></name></expr>)<pos:position pos:line="98" pos:column="28"/></condition><then pos:line="98" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="99" pos:column="5">mutt_set_current_menu_redraw<pos:position pos:line="99" pos:column="33"/></name> <argument_list pos:line="99" pos:column="34">(<argument><expr><name pos:line="99" pos:column="35">REDRAW_SIDEBAR<pos:position pos:line="99" pos:column="49"/></name></expr></argument>)<pos:position pos:line="99" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="51"/></expr_stmt></block></then></if>
<cpp:endif pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">endif<pos:position pos:line="100" pos:column="7"/></cpp:directive></cpp:endif>
  <if pos:line="101" pos:column="3">if <condition pos:line="101" pos:column="6">(<expr><name><name pos:line="101" pos:column="7">p<pos:position pos:line="101" pos:column="8"/></name><operator pos:line="101" pos:column="8">-&gt;<pos:position pos:line="101" pos:column="13"/></operator><name pos:line="101" pos:column="10">flags<pos:position pos:line="101" pos:column="15"/></name></name> <operator pos:line="101" pos:column="16">&amp;<pos:position pos:line="101" pos:column="21"/></operator> <name pos:line="101" pos:column="18">R_MENU<pos:position pos:line="101" pos:column="24"/></name></expr>)<pos:position pos:line="101" pos:column="25"/></condition><then pos:line="101" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="102" pos:column="5">mutt_set_current_menu_redraw_full<pos:position pos:line="102" pos:column="38"/></name> <argument_list pos:line="102" pos:column="39">()<pos:position pos:line="102" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="42"/></expr_stmt></block></then></if>
}<pos:position pos:line="103" pos:column="2"/></block></function></unit>

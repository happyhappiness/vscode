<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2064_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">imap_close_mailbox<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">CONTEXT<pos:position pos:line="1" pos:column="32"/></name><modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type> <name pos:line="1" pos:column="34">ctx<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">IMAP_DATA<pos:position pos:line="3" pos:column="12"/></name><modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type> <name pos:line="3" pos:column="14">idata<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">idata<pos:position pos:line="6" pos:column="8"/></name> <operator pos:line="6" pos:column="9">=<pos:position pos:line="6" pos:column="10"/></operator> <operator pos:line="6" pos:column="11">(<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="12">IMAP_DATA<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></operator><operator pos:line="6" pos:column="22">)<pos:position pos:line="6" pos:column="23"/></operator> <name><name pos:line="6" pos:column="24">ctx<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">-&gt;<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="29">data<pos:position pos:line="6" pos:column="33"/></name></name></expr>;<pos:position pos:line="6" pos:column="34"/></expr_stmt>
  <comment type="block" pos:line="7" pos:column="3">/* Check to see if the mailbox is actually open */</comment>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">idata<pos:position pos:line="8" pos:column="13"/></name></expr>)<pos:position pos:line="8" pos:column="14"/></condition><then pos:line="8" pos:column="14">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></return></block></then></if>

  <comment type="block" pos:line="11" pos:column="3">/* imap_open_mailbox_append() borrows the IMAP_DATA temporarily,
   * just for the connection, but does not set idata-&gt;ctx to the
   * open-append ctx.
   *
   * So when these are equal, it means we are actually closing the
   * mailbox and should clean up idata.  Otherwise, we don't want to
   * touch idata - it's still being used.
   */</comment>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">ctx<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">==<pos:position pos:line="19" pos:column="13"/></operator> <name><name pos:line="19" pos:column="14">idata<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-&gt;<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="21">ctx<pos:position pos:line="19" pos:column="24"/></name></name></expr>)<pos:position pos:line="19" pos:column="25"/></condition><then pos:line="19" pos:column="25">
  <block pos:line="20" pos:column="3">{
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">idata<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">-&gt;<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="16">status<pos:position pos:line="21" pos:column="22"/></name></name> <operator pos:line="21" pos:column="23">!=<pos:position pos:line="21" pos:column="25"/></operator> <name pos:line="21" pos:column="26">IMAP_FATAL<pos:position pos:line="21" pos:column="36"/></name> <operator pos:line="21" pos:column="37">&amp;&amp;<pos:position pos:line="21" pos:column="47"/></operator> <name><name pos:line="21" pos:column="40">idata<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">-&gt;<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="47">state<pos:position pos:line="21" pos:column="52"/></name></name> <operator pos:line="21" pos:column="53">&gt;=<pos:position pos:line="21" pos:column="58"/></operator> <name pos:line="21" pos:column="56">IMAP_SELECTED<pos:position pos:line="21" pos:column="69"/></name></expr>)<pos:position pos:line="21" pos:column="70"/></condition><then pos:line="21" pos:column="70">
    <block pos:line="22" pos:column="5">{
      <comment type="block" pos:line="23" pos:column="7">/* mx_close_mailbox won't sync if there are no deleted messages
       * and the mailbox is unchanged, so we may have to close here */</comment>
      <if pos:line="25" pos:column="7">if <condition pos:line="25" pos:column="10">(<expr><operator pos:line="25" pos:column="11">!<pos:position pos:line="25" pos:column="12"/></operator><name><name pos:line="25" pos:column="12">ctx<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">deleted<pos:position pos:line="25" pos:column="24"/></name></name></expr>)<pos:position pos:line="25" pos:column="25"/></condition><then pos:line="25" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="9">imap_exec<pos:position pos:line="26" pos:column="18"/></name> <argument_list pos:line="26" pos:column="19">(<argument><expr><name pos:line="26" pos:column="20">idata<pos:position pos:line="26" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="27">"CLOSE"<pos:position pos:line="26" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="36">IMAP_CMD_QUEUE<pos:position pos:line="26" pos:column="50"/></name></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="52"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name><name pos:line="27" pos:column="7">idata<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">-&gt;<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="14">state<pos:position pos:line="27" pos:column="19"/></name></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <name pos:line="27" pos:column="22">IMAP_AUTHENTICATED<pos:position pos:line="27" pos:column="40"/></name></expr>;<pos:position pos:line="27" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="30" pos:column="5">idata<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">-&gt;<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="12">reopen<pos:position pos:line="30" pos:column="18"/></name></name> <operator pos:line="30" pos:column="19">&amp;=<pos:position pos:line="30" pos:column="25"/></operator> <name pos:line="30" pos:column="22">IMAP_REOPEN_ALLOW<pos:position pos:line="30" pos:column="39"/></name></expr>;<pos:position pos:line="30" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">FREE<pos:position pos:line="31" pos:column="9"/></name> <argument_list pos:line="31" pos:column="10">(<argument><expr><operator pos:line="31" pos:column="11">&amp;<pos:position pos:line="31" pos:column="16"/></operator><operator pos:line="31" pos:column="12">(<pos:position pos:line="31" pos:column="13"/></operator><name><name pos:line="31" pos:column="13">idata<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">-&gt;<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="20">mailbox<pos:position pos:line="31" pos:column="27"/></name></name><operator pos:line="31" pos:column="27">)<pos:position pos:line="31" pos:column="28"/></operator></expr></argument>)<pos:position pos:line="31" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">mutt_free_list<pos:position pos:line="32" pos:column="19"/></name> <argument_list pos:line="32" pos:column="20">(<argument><expr><operator pos:line="32" pos:column="21">&amp;<pos:position pos:line="32" pos:column="26"/></operator><name><name pos:line="32" pos:column="22">idata<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">-&gt;<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="29">flags<pos:position pos:line="32" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">idata<pos:position pos:line="33" pos:column="10"/></name><operator pos:line="33" pos:column="10">-&gt;<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="12">ctx<pos:position pos:line="33" pos:column="15"/></name></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <name pos:line="33" pos:column="18">NULL<pos:position pos:line="33" pos:column="22"/></name></expr>;<pos:position pos:line="33" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">hash_destroy<pos:position pos:line="35" pos:column="17"/></name> <argument_list pos:line="35" pos:column="18">(<argument><expr><operator pos:line="35" pos:column="19">&amp;<pos:position pos:line="35" pos:column="24"/></operator><name><name pos:line="35" pos:column="20">idata<pos:position pos:line="35" pos:column="25"/></name><operator pos:line="35" pos:column="25">-&gt;<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="27">uid_hash<pos:position pos:line="35" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="37">NULL<pos:position pos:line="35" pos:column="41"/></name></expr></argument>)<pos:position pos:line="35" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">FREE<pos:position pos:line="36" pos:column="9"/></name> <argument_list pos:line="36" pos:column="10">(<argument><expr><operator pos:line="36" pos:column="11">&amp;<pos:position pos:line="36" pos:column="16"/></operator><name><name pos:line="36" pos:column="12">idata<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">-&gt;<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="19">msn_index<pos:position pos:line="36" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">idata<pos:position pos:line="37" pos:column="10"/></name><operator pos:line="37" pos:column="10">-&gt;<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="12">msn_index_size<pos:position pos:line="37" pos:column="26"/></name></name> <operator pos:line="37" pos:column="27">=<pos:position pos:line="37" pos:column="28"/></operator> <literal type="number" pos:line="37" pos:column="29">0<pos:position pos:line="37" pos:column="30"/></literal></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">idata<pos:position pos:line="38" pos:column="10"/></name><operator pos:line="38" pos:column="10">-&gt;<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="12">max_msn<pos:position pos:line="38" pos:column="19"/></name></name> <operator pos:line="38" pos:column="20">=<pos:position pos:line="38" pos:column="21"/></operator> <literal type="number" pos:line="38" pos:column="22">0<pos:position pos:line="38" pos:column="23"/></literal></expr>;<pos:position pos:line="38" pos:column="24"/></expr_stmt>

    <for pos:line="40" pos:column="5">for <control pos:line="40" pos:column="9">(<init><expr><name pos:line="40" pos:column="10">i<pos:position pos:line="40" pos:column="11"/></name> <operator pos:line="40" pos:column="12">=<pos:position pos:line="40" pos:column="13"/></operator> <literal type="number" pos:line="40" pos:column="14">0<pos:position pos:line="40" pos:column="15"/></literal></expr>;<pos:position pos:line="40" pos:column="16"/></init> <condition><expr><name pos:line="40" pos:column="17">i<pos:position pos:line="40" pos:column="18"/></name> <operator pos:line="40" pos:column="19">&lt;<pos:position pos:line="40" pos:column="23"/></operator> <name pos:line="40" pos:column="21">IMAP_CACHE_LEN<pos:position pos:line="40" pos:column="35"/></name></expr>;<pos:position pos:line="40" pos:column="36"/></condition> <incr><expr><name pos:line="40" pos:column="37">i<pos:position pos:line="40" pos:column="38"/></name><operator pos:line="40" pos:column="38">++<pos:position pos:line="40" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="40" pos:column="41"/></control>
    <block pos:line="41" pos:column="5">{
      <if pos:line="42" pos:column="7">if <condition pos:line="42" pos:column="10">(<expr><name><name pos:line="42" pos:column="11">idata<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">-&gt;<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="18">cache<pos:position pos:line="42" pos:column="23"/></name><index pos:line="42" pos:column="23">[<expr><name pos:line="42" pos:column="24">i<pos:position pos:line="42" pos:column="25"/></name></expr>]<pos:position pos:line="42" pos:column="26"/></index></name><operator pos:line="42" pos:column="26">.<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="27">path<pos:position pos:line="42" pos:column="31"/></name></expr>)<pos:position pos:line="42" pos:column="32"/></condition><then pos:line="42" pos:column="32">
      <block pos:line="43" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">unlink<pos:position pos:line="44" pos:column="15"/></name> <argument_list pos:line="44" pos:column="16">(<argument><expr><name><name pos:line="44" pos:column="17">idata<pos:position pos:line="44" pos:column="22"/></name><operator pos:line="44" pos:column="22">-&gt;<pos:position pos:line="44" pos:column="27"/></operator><name pos:line="44" pos:column="24">cache<pos:position pos:line="44" pos:column="29"/></name><index pos:line="44" pos:column="29">[<expr><name pos:line="44" pos:column="30">i<pos:position pos:line="44" pos:column="31"/></name></expr>]<pos:position pos:line="44" pos:column="32"/></index></name><operator pos:line="44" pos:column="32">.<pos:position pos:line="44" pos:column="33"/></operator><name pos:line="44" pos:column="33">path<pos:position pos:line="44" pos:column="37"/></name></expr></argument>)<pos:position pos:line="44" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">FREE<pos:position pos:line="45" pos:column="13"/></name> <argument_list pos:line="45" pos:column="14">(<argument><expr><operator pos:line="45" pos:column="15">&amp;<pos:position pos:line="45" pos:column="20"/></operator><name><name pos:line="45" pos:column="16">idata<pos:position pos:line="45" pos:column="21"/></name><operator pos:line="45" pos:column="21">-&gt;<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="23">cache<pos:position pos:line="45" pos:column="28"/></name><index pos:line="45" pos:column="28">[<expr><name pos:line="45" pos:column="29">i<pos:position pos:line="45" pos:column="30"/></name></expr>]<pos:position pos:line="45" pos:column="31"/></index></name><operator pos:line="45" pos:column="31">.<pos:position pos:line="45" pos:column="32"/></operator><name pos:line="45" pos:column="32">path<pos:position pos:line="45" pos:column="36"/></name></expr></argument>)<pos:position pos:line="45" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="38"/></expr_stmt>
      }<pos:position pos:line="46" pos:column="8"/></block></then></if>
    }<pos:position pos:line="47" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="49" pos:column="5">mutt_bcache_close<pos:position pos:line="49" pos:column="22"/></name> <argument_list pos:line="49" pos:column="23">(<argument><expr><operator pos:line="49" pos:column="24">&amp;<pos:position pos:line="49" pos:column="29"/></operator><name><name pos:line="49" pos:column="25">idata<pos:position pos:line="49" pos:column="30"/></name><operator pos:line="49" pos:column="30">-&gt;<pos:position pos:line="49" pos:column="35"/></operator><name pos:line="49" pos:column="32">bcache<pos:position pos:line="49" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="50" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="52" pos:column="3">/* free IMAP part of headers */</comment>
  <for pos:line="53" pos:column="3">for <control pos:line="53" pos:column="7">(<init><expr><name pos:line="53" pos:column="8">i<pos:position pos:line="53" pos:column="9"/></name> <operator pos:line="53" pos:column="10">=<pos:position pos:line="53" pos:column="11"/></operator> <literal type="number" pos:line="53" pos:column="12">0<pos:position pos:line="53" pos:column="13"/></literal></expr>;<pos:position pos:line="53" pos:column="14"/></init> <condition><expr><name pos:line="53" pos:column="15">i<pos:position pos:line="53" pos:column="16"/></name> <operator pos:line="53" pos:column="17">&lt;<pos:position pos:line="53" pos:column="21"/></operator> <name><name pos:line="53" pos:column="19">ctx<pos:position pos:line="53" pos:column="22"/></name><operator pos:line="53" pos:column="22">-&gt;<pos:position pos:line="53" pos:column="27"/></operator><name pos:line="53" pos:column="24">msgcount<pos:position pos:line="53" pos:column="32"/></name></name></expr>;<pos:position pos:line="53" pos:column="33"/></condition> <incr><expr><name pos:line="53" pos:column="34">i<pos:position pos:line="53" pos:column="35"/></name><operator pos:line="53" pos:column="35">++<pos:position pos:line="53" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="53" pos:column="38"/></control>
    <comment type="block" pos:line="54" pos:column="5">/* mailbox may not have fully loaded */</comment>
    <block type="pseudo"><if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name><name pos:line="55" pos:column="9">ctx<pos:position pos:line="55" pos:column="12"/></name><operator pos:line="55" pos:column="12">-&gt;<pos:position pos:line="55" pos:column="17"/></operator><name pos:line="55" pos:column="14">hdrs<pos:position pos:line="55" pos:column="18"/></name><index pos:line="55" pos:column="18">[<expr><name pos:line="55" pos:column="19">i<pos:position pos:line="55" pos:column="20"/></name></expr>]<pos:position pos:line="55" pos:column="21"/></index></name> <operator pos:line="55" pos:column="22">&amp;&amp;<pos:position pos:line="55" pos:column="32"/></operator> <name><name pos:line="55" pos:column="25">ctx<pos:position pos:line="55" pos:column="28"/></name><operator pos:line="55" pos:column="28">-&gt;<pos:position pos:line="55" pos:column="33"/></operator><name pos:line="55" pos:column="30">hdrs<pos:position pos:line="55" pos:column="34"/></name><index pos:line="55" pos:column="34">[<expr><name pos:line="55" pos:column="35">i<pos:position pos:line="55" pos:column="36"/></name></expr>]<pos:position pos:line="55" pos:column="37"/></index></name><operator pos:line="55" pos:column="37">-&gt;<pos:position pos:line="55" pos:column="42"/></operator><name pos:line="55" pos:column="39">data<pos:position pos:line="55" pos:column="43"/></name></expr>)<pos:position pos:line="55" pos:column="44"/></condition><then pos:line="55" pos:column="44">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="7">imap_free_header_data<pos:position pos:line="56" pos:column="28"/></name> <argument_list pos:line="56" pos:column="29">(<argument><expr><operator pos:line="56" pos:column="30">(<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="31">IMAP_HEADER_DATA<pos:position pos:line="56" pos:column="47"/></name><operator pos:line="56" pos:column="47">*<pos:position pos:line="56" pos:column="48"/></operator><operator pos:line="56" pos:column="48">*<pos:position pos:line="56" pos:column="49"/></operator><operator pos:line="56" pos:column="49">)<pos:position pos:line="56" pos:column="50"/></operator><operator pos:line="56" pos:column="50">&amp;<pos:position pos:line="56" pos:column="55"/></operator><operator pos:line="56" pos:column="51">(<pos:position pos:line="56" pos:column="52"/></operator><name><name pos:line="56" pos:column="52">ctx<pos:position pos:line="56" pos:column="55"/></name><operator pos:line="56" pos:column="55">-&gt;<pos:position pos:line="56" pos:column="60"/></operator><name pos:line="56" pos:column="57">hdrs<pos:position pos:line="56" pos:column="61"/></name><index pos:line="56" pos:column="61">[<expr><name pos:line="56" pos:column="62">i<pos:position pos:line="56" pos:column="63"/></name></expr>]<pos:position pos:line="56" pos:column="64"/></index></name><operator pos:line="56" pos:column="64">-&gt;<pos:position pos:line="56" pos:column="69"/></operator><name pos:line="56" pos:column="66">data<pos:position pos:line="56" pos:column="70"/></name><operator pos:line="56" pos:column="70">)<pos:position pos:line="56" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="56" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="73"/></expr_stmt></block></then></if></block></for>

  <return pos:line="58" pos:column="3">return <expr><literal type="number" pos:line="58" pos:column="10">0<pos:position pos:line="58" pos:column="11"/></literal></expr>;<pos:position pos:line="58" pos:column="12"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

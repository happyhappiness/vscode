<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1310_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">imap_parse_list_response<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">IMAP_DATA<pos:position pos:line="1" pos:column="39"/></name><modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type> <name pos:line="1" pos:column="41">idata<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier><modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">name<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">int<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">noselect<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
  <parameter><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name> <modifier pos:line="2" pos:column="7">*<pos:position pos:line="2" pos:column="8"/></modifier></type><name pos:line="2" pos:column="8">noinferiors<pos:position pos:line="2" pos:column="19"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="21">char<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">delim<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">s<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">long<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">bytes<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">rc<pos:position pos:line="6" pos:column="9"/></name></decl>;<pos:position pos:line="6" pos:column="10"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="8" pos:column="3">*<pos:position pos:line="8" pos:column="4"/></operator><name pos:line="8" pos:column="4">name<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <name pos:line="8" pos:column="11">NULL<pos:position pos:line="8" pos:column="15"/></name></expr>;<pos:position pos:line="8" pos:column="16"/></expr_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">rc<pos:position pos:line="10" pos:column="5"/></name> <operator pos:line="10" pos:column="6">=<pos:position pos:line="10" pos:column="7"/></operator> <call><name pos:line="10" pos:column="8">imap_cmd_step<pos:position pos:line="10" pos:column="21"/></name> <argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">idata<pos:position pos:line="10" pos:column="28"/></name></expr></argument>)<pos:position pos:line="10" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="30"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">rc<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">==<pos:position pos:line="11" pos:column="12"/></operator> <name pos:line="11" pos:column="13">IMAP_CMD_OK<pos:position pos:line="11" pos:column="24"/></name></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><literal type="number" pos:line="12" pos:column="12">0<pos:position pos:line="12" pos:column="13"/></literal></expr>;<pos:position pos:line="12" pos:column="14"/></return></block></then></if>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">rc<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">!=<pos:position pos:line="13" pos:column="12"/></operator> <name pos:line="13" pos:column="13">IMAP_CMD_CONTINUE<pos:position pos:line="13" pos:column="30"/></name></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">-<pos:position pos:line="14" pos:column="13"/></operator><literal type="number" pos:line="14" pos:column="13">1<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="16" pos:column="3">s<pos:position pos:line="16" pos:column="4"/></name> <operator pos:line="16" pos:column="5">=<pos:position pos:line="16" pos:column="6"/></operator> <call><name pos:line="16" pos:column="7">imap_next_word<pos:position pos:line="16" pos:column="21"/></name> <argument_list pos:line="16" pos:column="22">(<argument><expr><name><name pos:line="16" pos:column="23">idata<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">cmd<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">.<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="34">buf<pos:position pos:line="16" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">(<pos:position pos:line="17" pos:column="8"/></operator><call><name pos:line="17" pos:column="8">ascii_strncasecmp<pos:position pos:line="17" pos:column="25"/></name> <argument_list pos:line="17" pos:column="26">(<argument><expr><literal type="string" pos:line="17" pos:column="27">"LIST"<pos:position pos:line="17" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="35">s<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="38">4<pos:position pos:line="17" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call> <operator pos:line="17" pos:column="41">==<pos:position pos:line="17" pos:column="43"/></operator> <literal type="number" pos:line="17" pos:column="44">0<pos:position pos:line="17" pos:column="45"/></literal><operator pos:line="17" pos:column="45">)<pos:position pos:line="17" pos:column="46"/></operator> <operator pos:line="17" pos:column="47">||<pos:position pos:line="17" pos:column="49"/></operator>
      <operator pos:line="18" pos:column="7">(<pos:position pos:line="18" pos:column="8"/></operator><call><name pos:line="18" pos:column="8">ascii_strncasecmp<pos:position pos:line="18" pos:column="25"/></name> <argument_list pos:line="18" pos:column="26">(<argument><expr><literal type="string" pos:line="18" pos:column="27">"LSUB"<pos:position pos:line="18" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="35">s<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="38">4<pos:position pos:line="18" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call> <operator pos:line="18" pos:column="41">==<pos:position pos:line="18" pos:column="43"/></operator> <literal type="number" pos:line="18" pos:column="44">0<pos:position pos:line="18" pos:column="45"/></literal><operator pos:line="18" pos:column="45">)<pos:position pos:line="18" pos:column="46"/></operator></expr>)<pos:position pos:line="18" pos:column="47"/></condition><then pos:line="18" pos:column="47">
  <block pos:line="19" pos:column="3">{
    <expr_stmt><expr><operator pos:line="20" pos:column="5">*<pos:position pos:line="20" pos:column="6"/></operator><name pos:line="20" pos:column="6">noselect<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <literal type="number" pos:line="20" pos:column="17">0<pos:position pos:line="20" pos:column="18"/></literal></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="21" pos:column="5">*<pos:position pos:line="21" pos:column="6"/></operator><name pos:line="21" pos:column="6">noinferiors<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <literal type="number" pos:line="21" pos:column="20">0<pos:position pos:line="21" pos:column="21"/></literal></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt>
      
    <expr_stmt><expr><name pos:line="23" pos:column="5">s<pos:position pos:line="23" pos:column="6"/></name> <operator pos:line="23" pos:column="7">=<pos:position pos:line="23" pos:column="8"/></operator> <call><name pos:line="23" pos:column="9">imap_next_word<pos:position pos:line="23" pos:column="23"/></name> <argument_list pos:line="23" pos:column="24">(<argument><expr><name pos:line="23" pos:column="25">s<pos:position pos:line="23" pos:column="26"/></name></expr></argument>)<pos:position pos:line="23" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt> <comment type="block" pos:line="23" pos:column="29">/* flags */</comment>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">*<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">s<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">==<pos:position pos:line="24" pos:column="14"/></operator> <literal type="char" pos:line="24" pos:column="15">'('<pos:position pos:line="24" pos:column="18"/></literal></expr>)<pos:position pos:line="24" pos:column="19"/></condition><then pos:line="24" pos:column="19">
    <block pos:line="25" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="26" pos:column="7">char<pos:position pos:line="26" pos:column="11"/></name> <modifier pos:line="26" pos:column="12">*<pos:position pos:line="26" pos:column="13"/></modifier></type><name pos:line="26" pos:column="13">ep<pos:position pos:line="26" pos:column="15"/></name></decl>;<pos:position pos:line="26" pos:column="16"/></decl_stmt>

      <expr_stmt><expr><name pos:line="28" pos:column="7">s<pos:position pos:line="28" pos:column="8"/></name><operator pos:line="28" pos:column="8">++<pos:position pos:line="28" pos:column="10"/></operator></expr>;<pos:position pos:line="28" pos:column="11"/></expr_stmt>
      <expr_stmt><expr><name pos:line="29" pos:column="7">ep<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">=<pos:position pos:line="29" pos:column="11"/></operator> <name pos:line="29" pos:column="12">s<pos:position pos:line="29" pos:column="13"/></name></expr>;<pos:position pos:line="29" pos:column="14"/></expr_stmt>
      <while pos:line="30" pos:column="7">while <condition pos:line="30" pos:column="13">(<expr><operator pos:line="30" pos:column="14">*<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="15">ep<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">&amp;&amp;<pos:position pos:line="30" pos:column="28"/></operator> <operator pos:line="30" pos:column="21">*<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">ep<pos:position pos:line="30" pos:column="24"/></name> <operator pos:line="30" pos:column="25">!=<pos:position pos:line="30" pos:column="27"/></operator> <literal type="char" pos:line="30" pos:column="28">')'<pos:position pos:line="30" pos:column="31"/></literal></expr>)<pos:position pos:line="30" pos:column="32"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="33">ep<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">++<pos:position pos:line="30" pos:column="37"/></operator></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt></block></while>
      <do pos:line="31" pos:column="7">do
      <block pos:line="32" pos:column="7">{
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">!<pos:position pos:line="33" pos:column="14"/></operator><call><name pos:line="33" pos:column="14">ascii_strncasecmp<pos:position pos:line="33" pos:column="31"/></name> <argument_list pos:line="33" pos:column="32">(<argument><expr><name pos:line="33" pos:column="33">s<pos:position pos:line="33" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="36">"\\NoSelect"<pos:position pos:line="33" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="50">9<pos:position pos:line="33" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="53"/></condition><then pos:line="33" pos:column="53">
	  <block type="pseudo"><expr_stmt><expr><operator pos:line="34" pos:column="11">*<pos:position pos:line="34" pos:column="12"/></operator><name pos:line="34" pos:column="12">noselect<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <literal type="number" pos:line="34" pos:column="23">1<pos:position pos:line="34" pos:column="24"/></literal></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt></block></then></if>
	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">!<pos:position pos:line="35" pos:column="14"/></operator><call><name pos:line="35" pos:column="14">ascii_strncasecmp<pos:position pos:line="35" pos:column="31"/></name> <argument_list pos:line="35" pos:column="32">(<argument><expr><name pos:line="35" pos:column="33">s<pos:position pos:line="35" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="36">"\\NoInferiors"<pos:position pos:line="35" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="53">12<pos:position pos:line="35" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="57"/></condition><then pos:line="35" pos:column="57">
	  <block type="pseudo"><expr_stmt><expr><operator pos:line="36" pos:column="11">*<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="12">noinferiors<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">=<pos:position pos:line="36" pos:column="25"/></operator> <literal type="number" pos:line="36" pos:column="26">1<pos:position pos:line="36" pos:column="27"/></literal></expr>;<pos:position pos:line="36" pos:column="28"/></expr_stmt></block></then></if>
	<comment type="block" pos:line="37" pos:column="9">/* See draft-gahrns-imap-child-mailbox-?? */</comment>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">!<pos:position pos:line="38" pos:column="14"/></operator><call><name pos:line="38" pos:column="14">ascii_strncasecmp<pos:position pos:line="38" pos:column="31"/></name> <argument_list pos:line="38" pos:column="32">(<argument><expr><name pos:line="38" pos:column="33">s<pos:position pos:line="38" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="36">"\\HasNoChildren"<pos:position pos:line="38" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="55">14<pos:position pos:line="38" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="59"/></condition><then pos:line="38" pos:column="59">
	  <block type="pseudo"><expr_stmt><expr><operator pos:line="39" pos:column="11">*<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="12">noinferiors<pos:position pos:line="39" pos:column="23"/></name> <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <literal type="number" pos:line="39" pos:column="26">1<pos:position pos:line="39" pos:column="27"/></literal></expr>;<pos:position pos:line="39" pos:column="28"/></expr_stmt></block></then></if>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><operator pos:line="40" pos:column="13">*<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">s<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">!=<pos:position pos:line="40" pos:column="18"/></operator> <literal type="char" pos:line="40" pos:column="19">')'<pos:position pos:line="40" pos:column="22"/></literal></expr>)<pos:position pos:line="40" pos:column="23"/></condition><then pos:line="40" pos:column="23">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="11">s<pos:position pos:line="41" pos:column="12"/></name><operator pos:line="41" pos:column="12">++<pos:position pos:line="41" pos:column="14"/></operator></expr>;<pos:position pos:line="41" pos:column="15"/></expr_stmt></block></then></if>
	<while pos:line="42" pos:column="9">while <condition pos:line="42" pos:column="15">(<expr><operator pos:line="42" pos:column="16">*<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="17">s<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">&amp;&amp;<pos:position pos:line="42" pos:column="29"/></operator> <operator pos:line="42" pos:column="22">*<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="23">s<pos:position pos:line="42" pos:column="24"/></name> <operator pos:line="42" pos:column="25">!=<pos:position pos:line="42" pos:column="27"/></operator> <literal type="char" pos:line="42" pos:column="28">'\\'<pos:position pos:line="42" pos:column="32"/></literal> <operator pos:line="42" pos:column="33">&amp;&amp;<pos:position pos:line="42" pos:column="43"/></operator> <operator pos:line="42" pos:column="36">*<pos:position pos:line="42" pos:column="37"/></operator><name pos:line="42" pos:column="37">s<pos:position pos:line="42" pos:column="38"/></name> <operator pos:line="42" pos:column="39">!=<pos:position pos:line="42" pos:column="41"/></operator> <literal type="char" pos:line="42" pos:column="42">')'<pos:position pos:line="42" pos:column="45"/></literal></expr>)<pos:position pos:line="42" pos:column="46"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="47">s<pos:position pos:line="42" pos:column="48"/></name><operator pos:line="42" pos:column="48">++<pos:position pos:line="42" pos:column="50"/></operator></expr>;<pos:position pos:line="42" pos:column="51"/></expr_stmt></block></while>
      }<pos:position pos:line="43" pos:column="8"/></block> while <condition pos:line="43" pos:column="15">(<expr><name pos:line="43" pos:column="16">s<pos:position pos:line="43" pos:column="17"/></name> <operator pos:line="43" pos:column="18">!=<pos:position pos:line="43" pos:column="20"/></operator> <name pos:line="43" pos:column="21">ep<pos:position pos:line="43" pos:column="23"/></name></expr>)<pos:position pos:line="43" pos:column="24"/></condition>;<pos:position pos:line="43" pos:column="25"/></do>
    }<pos:position pos:line="44" pos:column="6"/></block></then>
    <else pos:line="45" pos:column="5">else
      <block type="pseudo"><return pos:line="46" pos:column="7">return <expr><literal type="number" pos:line="46" pos:column="14">0<pos:position pos:line="46" pos:column="15"/></literal></expr>;<pos:position pos:line="46" pos:column="16"/></return></block></else></if>
    <expr_stmt><expr><name pos:line="47" pos:column="5">s<pos:position pos:line="47" pos:column="6"/></name> <operator pos:line="47" pos:column="7">=<pos:position pos:line="47" pos:column="8"/></operator> <call><name pos:line="47" pos:column="9">imap_next_word<pos:position pos:line="47" pos:column="23"/></name> <argument_list pos:line="47" pos:column="24">(<argument><expr><name pos:line="47" pos:column="25">s<pos:position pos:line="47" pos:column="26"/></name></expr></argument>)<pos:position pos:line="47" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="28"/></expr_stmt> <comment type="block" pos:line="47" pos:column="29">/* delim */</comment>
    <comment type="block" pos:line="48" pos:column="5">/* Reset the delimiter, this can change */</comment>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><call><name pos:line="49" pos:column="9">ascii_strncasecmp<pos:position pos:line="49" pos:column="26"/></name> <argument_list pos:line="49" pos:column="27">(<argument><expr><name pos:line="49" pos:column="28">s<pos:position pos:line="49" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="31">"NIL"<pos:position pos:line="49" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="38">3<pos:position pos:line="49" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="41"/></condition><then pos:line="49" pos:column="41">
    <block pos:line="50" pos:column="5">{
      <if pos:line="51" pos:column="7">if <condition pos:line="51" pos:column="10">(<expr><name pos:line="51" pos:column="11">s<pos:position pos:line="51" pos:column="12"/></name> <operator pos:line="51" pos:column="13">&amp;&amp;<pos:position pos:line="51" pos:column="23"/></operator> <name><name pos:line="51" pos:column="16">s<pos:position pos:line="51" pos:column="17"/></name><index pos:line="51" pos:column="17">[<expr><literal type="number" pos:line="51" pos:column="18">0<pos:position pos:line="51" pos:column="19"/></literal></expr>]<pos:position pos:line="51" pos:column="20"/></index></name> <operator pos:line="51" pos:column="21">==<pos:position pos:line="51" pos:column="23"/></operator> <literal type="char" pos:line="51" pos:column="24">'\"'<pos:position pos:line="51" pos:column="28"/></literal> <operator pos:line="51" pos:column="29">&amp;&amp;<pos:position pos:line="51" pos:column="39"/></operator> <name><name pos:line="51" pos:column="32">s<pos:position pos:line="51" pos:column="33"/></name><index pos:line="51" pos:column="33">[<expr><literal type="number" pos:line="51" pos:column="34">1<pos:position pos:line="51" pos:column="35"/></literal></expr>]<pos:position pos:line="51" pos:column="36"/></index></name> <operator pos:line="51" pos:column="37">&amp;&amp;<pos:position pos:line="51" pos:column="47"/></operator> <name><name pos:line="51" pos:column="40">s<pos:position pos:line="51" pos:column="41"/></name><index pos:line="51" pos:column="41">[<expr><literal type="number" pos:line="51" pos:column="42">2<pos:position pos:line="51" pos:column="43"/></literal></expr>]<pos:position pos:line="51" pos:column="44"/></index></name> <operator pos:line="51" pos:column="45">==<pos:position pos:line="51" pos:column="47"/></operator> <literal type="char" pos:line="51" pos:column="48">'\"'<pos:position pos:line="51" pos:column="52"/></literal></expr>)<pos:position pos:line="51" pos:column="53"/></condition><then pos:line="51" pos:column="53">
	<block type="pseudo"><expr_stmt><expr><operator pos:line="52" pos:column="9">*<pos:position pos:line="52" pos:column="10"/></operator><name pos:line="52" pos:column="10">delim<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">=<pos:position pos:line="52" pos:column="17"/></operator> <name><name pos:line="52" pos:column="18">s<pos:position pos:line="52" pos:column="19"/></name><index pos:line="52" pos:column="19">[<expr><literal type="number" pos:line="52" pos:column="20">1<pos:position pos:line="52" pos:column="21"/></literal></expr>]<pos:position pos:line="52" pos:column="22"/></index></name></expr>;<pos:position pos:line="52" pos:column="23"/></expr_stmt></block></then>
      <elseif pos:line="53" pos:column="7">else <if pos:line="53" pos:column="12">if <condition pos:line="53" pos:column="15">(<expr><name pos:line="53" pos:column="16">s<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">&amp;&amp;<pos:position pos:line="53" pos:column="28"/></operator> <name><name pos:line="53" pos:column="21">s<pos:position pos:line="53" pos:column="22"/></name><index pos:line="53" pos:column="22">[<expr><literal type="number" pos:line="53" pos:column="23">0<pos:position pos:line="53" pos:column="24"/></literal></expr>]<pos:position pos:line="53" pos:column="25"/></index></name> <operator pos:line="53" pos:column="26">==<pos:position pos:line="53" pos:column="28"/></operator> <literal type="char" pos:line="53" pos:column="29">'\"'<pos:position pos:line="53" pos:column="33"/></literal> <operator pos:line="53" pos:column="34">&amp;&amp;<pos:position pos:line="53" pos:column="44"/></operator> <name><name pos:line="53" pos:column="37">s<pos:position pos:line="53" pos:column="38"/></name><index pos:line="53" pos:column="38">[<expr><literal type="number" pos:line="53" pos:column="39">1<pos:position pos:line="53" pos:column="40"/></literal></expr>]<pos:position pos:line="53" pos:column="41"/></index></name> <operator pos:line="53" pos:column="42">&amp;&amp;<pos:position pos:line="53" pos:column="52"/></operator> <name><name pos:line="53" pos:column="45">s<pos:position pos:line="53" pos:column="46"/></name><index pos:line="53" pos:column="46">[<expr><literal type="number" pos:line="53" pos:column="47">1<pos:position pos:line="53" pos:column="48"/></literal></expr>]<pos:position pos:line="53" pos:column="49"/></index></name> <operator pos:line="53" pos:column="50">==<pos:position pos:line="53" pos:column="52"/></operator> <literal type="char" pos:line="53" pos:column="53">'\\'<pos:position pos:line="53" pos:column="57"/></literal> <operator pos:line="53" pos:column="58">&amp;&amp;<pos:position pos:line="53" pos:column="68"/></operator> <name><name pos:line="53" pos:column="61">s<pos:position pos:line="53" pos:column="62"/></name><index pos:line="53" pos:column="62">[<expr><literal type="number" pos:line="53" pos:column="63">2<pos:position pos:line="53" pos:column="64"/></literal></expr>]<pos:position pos:line="53" pos:column="65"/></index></name> <operator pos:line="53" pos:column="66">&amp;&amp;<pos:position pos:line="53" pos:column="76"/></operator> <name><name pos:line="53" pos:column="69">s<pos:position pos:line="53" pos:column="70"/></name><index pos:line="53" pos:column="70">[<expr><literal type="number" pos:line="53" pos:column="71">3<pos:position pos:line="53" pos:column="72"/></literal></expr>]<pos:position pos:line="53" pos:column="73"/></index></name> <operator pos:line="53" pos:column="74">==<pos:position pos:line="53" pos:column="76"/></operator> <literal type="char" pos:line="53" pos:column="77">'\"'<pos:position pos:line="53" pos:column="81"/></literal></expr>)<pos:position pos:line="53" pos:column="82"/></condition><then pos:line="53" pos:column="82">
	<block type="pseudo"><expr_stmt><expr><operator pos:line="54" pos:column="9">*<pos:position pos:line="54" pos:column="10"/></operator><name pos:line="54" pos:column="10">delim<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">=<pos:position pos:line="54" pos:column="17"/></operator> <name><name pos:line="54" pos:column="18">s<pos:position pos:line="54" pos:column="19"/></name><index pos:line="54" pos:column="19">[<expr><literal type="number" pos:line="54" pos:column="20">2<pos:position pos:line="54" pos:column="21"/></literal></expr>]<pos:position pos:line="54" pos:column="22"/></index></name></expr>;<pos:position pos:line="54" pos:column="23"/></expr_stmt></block></then></if></elseif></if>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="56" pos:column="5">s<pos:position pos:line="56" pos:column="6"/></name> <operator pos:line="56" pos:column="7">=<pos:position pos:line="56" pos:column="8"/></operator> <call><name pos:line="56" pos:column="9">imap_next_word<pos:position pos:line="56" pos:column="23"/></name> <argument_list pos:line="56" pos:column="24">(<argument><expr><name pos:line="56" pos:column="25">s<pos:position pos:line="56" pos:column="26"/></name></expr></argument>)<pos:position pos:line="56" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="28"/></expr_stmt> <comment type="block" pos:line="56" pos:column="29">/* name */</comment>
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><name pos:line="57" pos:column="9">s<pos:position pos:line="57" pos:column="10"/></name> <operator pos:line="57" pos:column="11">&amp;&amp;<pos:position pos:line="57" pos:column="21"/></operator> <operator pos:line="57" pos:column="14">*<pos:position pos:line="57" pos:column="15"/></operator><name pos:line="57" pos:column="15">s<pos:position pos:line="57" pos:column="16"/></name> <operator pos:line="57" pos:column="17">==<pos:position pos:line="57" pos:column="19"/></operator> <literal type="char" pos:line="57" pos:column="20">'{'<pos:position pos:line="57" pos:column="23"/></literal></expr>)<pos:position pos:line="57" pos:column="24"/></condition><then pos:line="57" pos:column="24">	<comment type="block" pos:line="57" pos:column="25">/* Literal */</comment>
    <block pos:line="58" pos:column="5">{ 
      <if pos:line="59" pos:column="7">if <condition pos:line="59" pos:column="10">(<expr><call><name pos:line="59" pos:column="11">imap_get_literal_count<pos:position pos:line="59" pos:column="33"/></name><argument_list pos:line="59" pos:column="33">(<argument><expr><name><name pos:line="59" pos:column="34">idata<pos:position pos:line="59" pos:column="39"/></name><operator pos:line="59" pos:column="39">-&gt;<pos:position pos:line="59" pos:column="44"/></operator><name pos:line="59" pos:column="41">cmd<pos:position pos:line="59" pos:column="44"/></name><operator pos:line="59" pos:column="44">.<pos:position pos:line="59" pos:column="45"/></operator><name pos:line="59" pos:column="45">buf<pos:position pos:line="59" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="50">&amp;<pos:position pos:line="59" pos:column="55"/></operator><name pos:line="59" pos:column="51">bytes<pos:position pos:line="59" pos:column="56"/></name></expr></argument>)<pos:position pos:line="59" pos:column="57"/></argument_list></call> <operator pos:line="59" pos:column="58">&lt;<pos:position pos:line="59" pos:column="62"/></operator> <literal type="number" pos:line="59" pos:column="60">0<pos:position pos:line="59" pos:column="61"/></literal></expr>)<pos:position pos:line="59" pos:column="62"/></condition><then pos:line="59" pos:column="62">
	<block type="pseudo"><return pos:line="60" pos:column="9">return <expr><operator pos:line="60" pos:column="16">-<pos:position pos:line="60" pos:column="17"/></operator><literal type="number" pos:line="60" pos:column="17">1<pos:position pos:line="60" pos:column="18"/></literal></expr>;<pos:position pos:line="60" pos:column="19"/></return></block></then></if>
      <if pos:line="61" pos:column="7">if <condition pos:line="61" pos:column="10">(<expr><call><name pos:line="61" pos:column="11">imap_cmd_step<pos:position pos:line="61" pos:column="24"/></name> <argument_list pos:line="61" pos:column="25">(<argument><expr><name pos:line="61" pos:column="26">idata<pos:position pos:line="61" pos:column="31"/></name></expr></argument>)<pos:position pos:line="61" pos:column="32"/></argument_list></call> <operator pos:line="61" pos:column="33">!=<pos:position pos:line="61" pos:column="35"/></operator> <name pos:line="61" pos:column="36">IMAP_CMD_CONTINUE<pos:position pos:line="61" pos:column="53"/></name></expr>)<pos:position pos:line="61" pos:column="54"/></condition><then pos:line="61" pos:column="54">
	<block type="pseudo"><return pos:line="62" pos:column="9">return <expr><operator pos:line="62" pos:column="16">-<pos:position pos:line="62" pos:column="17"/></operator><literal type="number" pos:line="62" pos:column="17">1<pos:position pos:line="62" pos:column="18"/></literal></expr>;<pos:position pos:line="62" pos:column="19"/></return></block></then></if>
      <expr_stmt><expr><operator pos:line="63" pos:column="7">*<pos:position pos:line="63" pos:column="8"/></operator><name pos:line="63" pos:column="8">name<pos:position pos:line="63" pos:column="12"/></name> <operator pos:line="63" pos:column="13">=<pos:position pos:line="63" pos:column="14"/></operator> <name><name pos:line="63" pos:column="15">idata<pos:position pos:line="63" pos:column="20"/></name><operator pos:line="63" pos:column="20">-&gt;<pos:position pos:line="63" pos:column="25"/></operator><name pos:line="63" pos:column="22">cmd<pos:position pos:line="63" pos:column="25"/></name><operator pos:line="63" pos:column="25">.<pos:position pos:line="63" pos:column="26"/></operator><name pos:line="63" pos:column="26">buf<pos:position pos:line="63" pos:column="29"/></name></name></expr>;<pos:position pos:line="63" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="64" pos:column="6"/></block></then>
    <else pos:line="65" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><operator pos:line="66" pos:column="7">*<pos:position pos:line="66" pos:column="8"/></operator><name pos:line="66" pos:column="8">name<pos:position pos:line="66" pos:column="12"/></name> <operator pos:line="66" pos:column="13">=<pos:position pos:line="66" pos:column="14"/></operator> <name pos:line="66" pos:column="15">s<pos:position pos:line="66" pos:column="16"/></name></expr>;<pos:position pos:line="66" pos:column="17"/></expr_stmt></block></else></if>
  }<pos:position pos:line="67" pos:column="4"/></block></then></if>

  <return pos:line="69" pos:column="3">return <expr><literal type="number" pos:line="69" pos:column="10">0<pos:position pos:line="69" pos:column="11"/></literal></expr>;<pos:position pos:line="69" pos:column="12"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

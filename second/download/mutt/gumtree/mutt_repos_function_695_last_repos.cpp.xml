<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_695_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">hash_destroy<pos:position pos:line="1" pos:column="18"/></name> <parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">HASH<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier><modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">ptr<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><function_decl><type><name pos:line="1" pos:column="32">void<pos:position pos:line="1" pos:column="36"/></name></type> (<modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier><name pos:line="1" pos:column="39">destroy<pos:position pos:line="1" pos:column="46"/></name>) <parameter_list pos:line="1" pos:column="48">(<parameter><decl><type><name pos:line="1" pos:column="49">void<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list></function_decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">HASH<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">pptr<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">hash_elem<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">elem<pos:position pos:line="5" pos:column="25"/></name></decl>, <modifier pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="28">tmp<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">!<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">ptr<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">||<pos:position pos:line="7" pos:column="14"/></operator> <operator pos:line="7" pos:column="15">!<pos:position pos:line="7" pos:column="16"/></operator><operator pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">ptr<pos:position pos:line="7" pos:column="20"/></name></expr>)<pos:position pos:line="7" pos:column="21"/></condition><then pos:line="7" pos:column="21">
    <block type="pseudo"><return pos:line="8" pos:column="5">return;<pos:position pos:line="8" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="10" pos:column="3">pptr<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <operator pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">ptr<pos:position pos:line="10" pos:column="14"/></name></expr>;<pos:position pos:line="10" pos:column="15"/></expr_stmt>
  <for pos:line="11" pos:column="3">for <control pos:line="11" pos:column="7">(<init><expr><name pos:line="11" pos:column="8">i<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <literal type="number" pos:line="11" pos:column="12">0<pos:position pos:line="11" pos:column="13"/></literal></expr> ;<pos:position pos:line="11" pos:column="15"/></init> <condition><expr><name pos:line="11" pos:column="16">i<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">&lt;<pos:position pos:line="11" pos:column="22"/></operator> <name><name pos:line="11" pos:column="20">pptr<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">-&gt;<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="26">nelem<pos:position pos:line="11" pos:column="31"/></name></name></expr>;<pos:position pos:line="11" pos:column="32"/></condition> <incr><expr><name pos:line="11" pos:column="33">i<pos:position pos:line="11" pos:column="34"/></name><operator pos:line="11" pos:column="34">++<pos:position pos:line="11" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="37"/></control>
  <block pos:line="12" pos:column="3">{
    <for pos:line="13" pos:column="5">for <control pos:line="13" pos:column="9">(<init><expr><name pos:line="13" pos:column="10">elem<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <name><name pos:line="13" pos:column="17">pptr<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">-&gt;<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="23">table<pos:position pos:line="13" pos:column="28"/></name><index pos:line="13" pos:column="28">[<expr><name pos:line="13" pos:column="29">i<pos:position pos:line="13" pos:column="30"/></name></expr>]<pos:position pos:line="13" pos:column="31"/></index></name></expr>;<pos:position pos:line="13" pos:column="32"/></init> <condition><expr><name pos:line="13" pos:column="33">elem<pos:position pos:line="13" pos:column="37"/></name></expr>;<pos:position pos:line="13" pos:column="38"/></condition> <incr/>)<pos:position pos:line="13" pos:column="40"/></control>
    <block pos:line="14" pos:column="5">{
      <expr_stmt><expr><name pos:line="15" pos:column="7">tmp<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <name pos:line="15" pos:column="13">elem<pos:position pos:line="15" pos:column="17"/></name></expr>;<pos:position pos:line="15" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name pos:line="16" pos:column="7">elem<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <name><name pos:line="16" pos:column="14">elem<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">next<pos:position pos:line="16" pos:column="24"/></name></name></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>
      <if pos:line="17" pos:column="7">if <condition pos:line="17" pos:column="10">(<expr><name pos:line="17" pos:column="11">destroy<pos:position pos:line="17" pos:column="18"/></name></expr>)<pos:position pos:line="17" pos:column="19"/></condition><then pos:line="17" pos:column="19">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="9">destroy<pos:position pos:line="18" pos:column="16"/></name> <argument_list pos:line="18" pos:column="17">(<argument><expr><name><name pos:line="18" pos:column="18">tmp<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">-&gt;<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="23">data<pos:position pos:line="18" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt></block></then></if>
      <if pos:line="19" pos:column="7">if <condition pos:line="19" pos:column="10">(<expr><name><name pos:line="19" pos:column="11">pptr<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">-&gt;<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="17">strdup_keys<pos:position pos:line="19" pos:column="28"/></name></name></expr>)<pos:position pos:line="19" pos:column="29"/></condition><then pos:line="19" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="9">FREE<pos:position pos:line="20" pos:column="13"/></name> <argument_list pos:line="20" pos:column="14">(<argument><expr><operator pos:line="20" pos:column="15">&amp;<pos:position pos:line="20" pos:column="20"/></operator><name><name pos:line="20" pos:column="16">tmp<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">-&gt;<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="21">key<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">.<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">strkey<pos:position pos:line="20" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">FREE<pos:position pos:line="21" pos:column="11"/></name> <argument_list pos:line="21" pos:column="12">(<argument><expr><operator pos:line="21" pos:column="13">&amp;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="14">tmp<pos:position pos:line="21" pos:column="17"/></name></expr></argument>)<pos:position pos:line="21" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></for>
  }<pos:position pos:line="23" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">FREE<pos:position pos:line="24" pos:column="7"/></name> <argument_list pos:line="24" pos:column="8">(<argument><expr><operator pos:line="24" pos:column="9">&amp;<pos:position pos:line="24" pos:column="14"/></operator><name><name pos:line="24" pos:column="10">pptr<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">-&gt;<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="16">table<pos:position pos:line="24" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">FREE<pos:position pos:line="25" pos:column="7"/></name> <argument_list pos:line="25" pos:column="8">(<argument><expr><name pos:line="25" pos:column="9">ptr<pos:position pos:line="25" pos:column="12"/></name></expr></argument>)<pos:position pos:line="25" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="14"/></expr_stmt>		<comment type="block" pos:line="25" pos:column="25">/* __FREE_CHECKED__ */</comment>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

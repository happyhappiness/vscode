<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_110_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">pop_auth_res_t<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">pop_auth_user<pos:position pos:line="1" pos:column="36"/></name> <parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">POP_DATA<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">pop_data<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="58">const<pos:position pos:line="1" pos:column="63"/></specifier> <name pos:line="1" pos:column="64">char<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">method<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buf<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">LONG_STRING<pos:position pos:line="3" pos:column="23"/></name></expr>]<pos:position pos:line="3" pos:column="24"/></index></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">ret<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">!<pos:position pos:line="6" pos:column="8"/></operator><name><name pos:line="6" pos:column="8">pop_data<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">-&gt;<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="18">cmd_user<pos:position pos:line="6" pos:column="26"/></name></name></expr>)<pos:position pos:line="6" pos:column="27"/></condition><then pos:line="6" pos:column="27">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">POP_A_UNAVAIL<pos:position pos:line="7" pos:column="25"/></name></expr>;<pos:position pos:line="7" pos:column="26"/></return></block></then></if>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">mutt_message<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">_<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">(<argument><expr><literal type="string" pos:line="9" pos:column="18">"Logging in..."<pos:position pos:line="9" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">snprintf<pos:position pos:line="11" pos:column="11"/></name> <argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">buf<pos:position pos:line="11" pos:column="16"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="18">sizeof <argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">buf<pos:position pos:line="11" pos:column="29"/></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="32">"USER %s\r\n"<pos:position pos:line="11" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="47">pop_data<pos:position pos:line="11" pos:column="55"/></name><operator pos:line="11" pos:column="55">-&gt;<pos:position pos:line="11" pos:column="60"/></operator><name pos:line="11" pos:column="57">conn<pos:position pos:line="11" pos:column="61"/></name><operator pos:line="11" pos:column="61">-&gt;<pos:position pos:line="11" pos:column="66"/></operator><name pos:line="11" pos:column="63">account<pos:position pos:line="11" pos:column="70"/></name><operator pos:line="11" pos:column="70">.<pos:position pos:line="11" pos:column="71"/></operator><name pos:line="11" pos:column="71">user<pos:position pos:line="11" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="77"/></expr_stmt>
  <expr_stmt><expr><name pos:line="12" pos:column="3">ret<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <call><name pos:line="12" pos:column="9">pop_query<pos:position pos:line="12" pos:column="18"/></name> <argument_list pos:line="12" pos:column="19">(<argument><expr><name pos:line="12" pos:column="20">pop_data<pos:position pos:line="12" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="30">buf<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="35">sizeof <argument_list pos:line="12" pos:column="42">(<argument><expr><name pos:line="12" pos:column="43">buf<pos:position pos:line="12" pos:column="46"/></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name><name pos:line="14" pos:column="7">pop_data<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">-&gt;<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="17">cmd_user<pos:position pos:line="14" pos:column="25"/></name></name> <operator pos:line="14" pos:column="26">==<pos:position pos:line="14" pos:column="28"/></operator> <literal type="number" pos:line="14" pos:column="29">2<pos:position pos:line="14" pos:column="30"/></literal></expr>)<pos:position pos:line="14" pos:column="31"/></condition><then pos:line="14" pos:column="31">
  <block pos:line="15" pos:column="3">{
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">ret<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">==<pos:position pos:line="16" pos:column="15"/></operator> <literal type="number" pos:line="16" pos:column="16">0<pos:position pos:line="16" pos:column="17"/></literal></expr>)<pos:position pos:line="16" pos:column="18"/></condition><then pos:line="16" pos:column="18">
    <block pos:line="17" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="18" pos:column="7">pop_data<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-&gt;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="17">cmd_user<pos:position pos:line="18" pos:column="25"/></name></name> <operator pos:line="18" pos:column="26">=<pos:position pos:line="18" pos:column="27"/></operator> <literal type="number" pos:line="18" pos:column="28">1<pos:position pos:line="18" pos:column="29"/></literal></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="20" pos:column="7">dprint<pos:position pos:line="20" pos:column="13"/></name> <argument_list pos:line="20" pos:column="14">(<argument><expr><literal type="number" pos:line="20" pos:column="15">1<pos:position pos:line="20" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="18">(<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="19">debugfile<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">,<pos:position pos:line="20" pos:column="29"/></operator> <literal type="string" pos:line="20" pos:column="30">"pop_auth_user: set USER capability\n"<pos:position pos:line="20" pos:column="68"/></literal><operator pos:line="20" pos:column="68">)<pos:position pos:line="20" pos:column="69"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">ret<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">==<pos:position pos:line="23" pos:column="15"/></operator> <operator pos:line="23" pos:column="16">-<pos:position pos:line="23" pos:column="17"/></operator><literal type="number" pos:line="23" pos:column="17">2<pos:position pos:line="23" pos:column="18"/></literal></expr>)<pos:position pos:line="23" pos:column="19"/></condition><then pos:line="23" pos:column="19">
    <block pos:line="24" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="25" pos:column="7">pop_data<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">cmd_user<pos:position pos:line="25" pos:column="25"/></name></name> <operator pos:line="25" pos:column="26">=<pos:position pos:line="25" pos:column="27"/></operator> <literal type="number" pos:line="25" pos:column="28">0<pos:position pos:line="25" pos:column="29"/></literal></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="27" pos:column="7">dprint<pos:position pos:line="27" pos:column="13"/></name> <argument_list pos:line="27" pos:column="14">(<argument><expr><literal type="number" pos:line="27" pos:column="15">1<pos:position pos:line="27" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="18">(<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="19">debugfile<pos:position pos:line="27" pos:column="28"/></name><operator pos:line="27" pos:column="28">,<pos:position pos:line="27" pos:column="29"/></operator> <literal type="string" pos:line="27" pos:column="30">"pop_auth_user: unset USER capability\n"<pos:position pos:line="27" pos:column="70"/></literal><operator pos:line="27" pos:column="70">)<pos:position pos:line="27" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="27" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="73"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="28" pos:column="7">snprintf<pos:position pos:line="28" pos:column="15"/></name> <argument_list pos:line="28" pos:column="16">(<argument><expr><name><name pos:line="28" pos:column="17">pop_data<pos:position pos:line="28" pos:column="25"/></name><operator pos:line="28" pos:column="25">-&gt;<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="27">err_msg<pos:position pos:line="28" pos:column="34"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="36">sizeof <argument_list pos:line="28" pos:column="43">(<argument><expr><name><name pos:line="28" pos:column="44">pop_data<pos:position pos:line="28" pos:column="52"/></name><operator pos:line="28" pos:column="52">-&gt;<pos:position pos:line="28" pos:column="57"/></operator><name pos:line="28" pos:column="54">err_msg<pos:position pos:line="28" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="62"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="64">"%s"<pos:position pos:line="28" pos:column="68"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="29" pos:column="15">_<pos:position pos:line="29" pos:column="16"/></name><argument_list pos:line="29" pos:column="16">(<argument><expr><literal type="string" pos:line="29" pos:column="17">"Command USER is not supported by server."<pos:position pos:line="29" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><name pos:line="33" pos:column="7">ret<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">==<pos:position pos:line="33" pos:column="13"/></operator> <literal type="number" pos:line="33" pos:column="14">0<pos:position pos:line="33" pos:column="15"/></literal></expr>)<pos:position pos:line="33" pos:column="16"/></condition><then pos:line="33" pos:column="16">
  <block pos:line="34" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">snprintf<pos:position pos:line="35" pos:column="13"/></name> <argument_list pos:line="35" pos:column="14">(<argument><expr><name pos:line="35" pos:column="15">buf<pos:position pos:line="35" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="20">sizeof <argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">buf<pos:position pos:line="35" pos:column="31"/></name></expr></argument>)<pos:position pos:line="35" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="34">"PASS %s\r\n"<pos:position pos:line="35" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="49">pop_data<pos:position pos:line="35" pos:column="57"/></name><operator pos:line="35" pos:column="57">-&gt;<pos:position pos:line="35" pos:column="62"/></operator><name pos:line="35" pos:column="59">conn<pos:position pos:line="35" pos:column="63"/></name><operator pos:line="35" pos:column="63">-&gt;<pos:position pos:line="35" pos:column="68"/></operator><name pos:line="35" pos:column="65">account<pos:position pos:line="35" pos:column="72"/></name><operator pos:line="35" pos:column="72">.<pos:position pos:line="35" pos:column="73"/></operator><name pos:line="35" pos:column="73">pass<pos:position pos:line="35" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="79"/></expr_stmt>
    <expr_stmt><expr><name pos:line="36" pos:column="5">ret<pos:position pos:line="36" pos:column="8"/></name> <operator pos:line="36" pos:column="9">=<pos:position pos:line="36" pos:column="10"/></operator> <call><name pos:line="36" pos:column="11">pop_query_d<pos:position pos:line="36" pos:column="22"/></name> <argument_list pos:line="36" pos:column="23">(<argument><expr><name pos:line="36" pos:column="24">pop_data<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="34">buf<pos:position pos:line="36" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="39">sizeof <argument_list pos:line="36" pos:column="46">(<argument><expr><name pos:line="36" pos:column="47">buf<pos:position pos:line="36" pos:column="50"/></name></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></sizeof></expr></argument>, 
<cpp:ifdef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifdef<pos:position pos:line="37" pos:column="7"/></cpp:directive> <name pos:line="37" pos:column="8">DEBUG<pos:position pos:line="37" pos:column="13"/></name></cpp:ifdef>
	<comment type="block" pos:line="38" pos:column="9">/* don't print the password unless we're at the ungodly debugging level */</comment>
	<argument><expr><ternary><condition><expr><name pos:line="39" pos:column="9">debuglevel<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">&lt;<pos:position pos:line="39" pos:column="24"/></operator> <name pos:line="39" pos:column="22">MUTT_SOCK_LOG_FULL<pos:position pos:line="39" pos:column="40"/></name></expr> ?<pos:position pos:line="39" pos:column="42"/></condition><then pos:line="39" pos:column="42"> <expr><literal type="string" pos:line="39" pos:column="43">"PASS *\r\n"<pos:position pos:line="39" pos:column="55"/></literal></expr> <pos:position pos:line="39" pos:column="56"/></then><else pos:line="39" pos:column="56">:
<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif<pos:position pos:line="40" pos:column="7"/></cpp:directive></cpp:endif>
	<expr><name pos:line="41" pos:column="9">NULL<pos:position pos:line="41" pos:column="13"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="41" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="42" pos:column="4"/></block></then></if>

  <switch pos:line="44" pos:column="3">switch <condition pos:line="44" pos:column="10">(<expr><name pos:line="44" pos:column="11">ret<pos:position pos:line="44" pos:column="14"/></name></expr>)<pos:position pos:line="44" pos:column="15"/></condition>
  <block pos:line="45" pos:column="3">{
    <case pos:line="46" pos:column="5">case <expr><literal type="number" pos:line="46" pos:column="10">0<pos:position pos:line="46" pos:column="11"/></literal></expr>:<pos:position pos:line="46" pos:column="12"/></case>
      <return pos:line="47" pos:column="7">return <expr><name pos:line="47" pos:column="14">POP_A_SUCCESS<pos:position pos:line="47" pos:column="27"/></name></expr>;<pos:position pos:line="47" pos:column="28"/></return>
    <case pos:line="48" pos:column="5">case <expr><operator pos:line="48" pos:column="10">-<pos:position pos:line="48" pos:column="11"/></operator><literal type="number" pos:line="48" pos:column="11">1<pos:position pos:line="48" pos:column="12"/></literal></expr>:<pos:position pos:line="48" pos:column="13"/></case>
      <return pos:line="49" pos:column="7">return <expr><name pos:line="49" pos:column="14">POP_A_SOCKET<pos:position pos:line="49" pos:column="26"/></name></expr>;<pos:position pos:line="49" pos:column="27"/></return>
  }<pos:position pos:line="50" pos:column="4"/></block></switch>

  <expr_stmt><expr><call><name pos:line="52" pos:column="3">mutt_error<pos:position pos:line="52" pos:column="13"/></name> <argument_list pos:line="52" pos:column="14">(<argument><expr><literal type="string" pos:line="52" pos:column="15">"%s %s"<pos:position pos:line="52" pos:column="22"/></literal></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="24">_<pos:position pos:line="52" pos:column="25"/></name><argument_list pos:line="52" pos:column="25">(<argument><expr><literal type="string" pos:line="52" pos:column="26">"Login failed."<pos:position pos:line="52" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="44">pop_data<pos:position pos:line="52" pos:column="52"/></name><operator pos:line="52" pos:column="52">-&gt;<pos:position pos:line="52" pos:column="57"/></operator><name pos:line="52" pos:column="54">err_msg<pos:position pos:line="52" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="63"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="53" pos:column="3">mutt_sleep<pos:position pos:line="53" pos:column="13"/></name> <argument_list pos:line="53" pos:column="14">(<argument><expr><literal type="number" pos:line="53" pos:column="15">2<pos:position pos:line="53" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="18"/></expr_stmt>

  <return pos:line="55" pos:column="3">return <expr><name pos:line="55" pos:column="10">POP_A_FAILURE<pos:position pos:line="55" pos:column="23"/></name></expr>;<pos:position pos:line="55" pos:column="24"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

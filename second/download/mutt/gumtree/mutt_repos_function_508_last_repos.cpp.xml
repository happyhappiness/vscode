<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_508_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">PARAMETER<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="19">parse_parameters<pos:position pos:line="1" pos:column="35"/></name> <parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">s<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">PARAMETER<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">head<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><literal type="number" pos:line="3" pos:column="21">0<pos:position pos:line="3" pos:column="22"/></literal></expr></init></decl>, <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="25">cur<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><literal type="number" pos:line="3" pos:column="31">0<pos:position pos:line="3" pos:column="32"/></literal></expr></init></decl>, <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier>new;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buffer<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><name pos:line="4" pos:column="15">LONG_STRING<pos:position pos:line="4" pos:column="26"/></name></expr>]<pos:position pos:line="4" pos:column="27"/></index></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">p<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">i<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">dprint<pos:position pos:line="8" pos:column="9"/></name> <argument_list pos:line="8" pos:column="10">(<argument><expr><literal type="number" pos:line="8" pos:column="11">2<pos:position pos:line="8" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="14">(<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">debugfile<pos:position pos:line="8" pos:column="24"/></name><operator pos:line="8" pos:column="24">,<pos:position pos:line="8" pos:column="25"/></operator> <literal type="string" pos:line="8" pos:column="26">"parse_parameters: `%s'\n"<pos:position pos:line="8" pos:column="52"/></literal><operator pos:line="8" pos:column="52">,<pos:position pos:line="8" pos:column="53"/></operator> <name pos:line="8" pos:column="54">s<pos:position pos:line="8" pos:column="55"/></name><operator pos:line="8" pos:column="55">)<pos:position pos:line="8" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="8" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="58"/></expr_stmt>
  
  <while pos:line="10" pos:column="3">while <condition pos:line="10" pos:column="9">(<expr><operator pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">s<pos:position pos:line="10" pos:column="12"/></name></expr>)<pos:position pos:line="10" pos:column="13"/></condition>
  <block pos:line="11" pos:column="3">{
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">p<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <call><name pos:line="12" pos:column="14">strpbrk<pos:position pos:line="12" pos:column="21"/></name> <argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">s<pos:position pos:line="12" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="26">"=;"<pos:position pos:line="12" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call><operator pos:line="12" pos:column="31">)<pos:position pos:line="12" pos:column="32"/></operator> <operator pos:line="12" pos:column="33">==<pos:position pos:line="12" pos:column="35"/></operator> <name pos:line="12" pos:column="36">NULL<pos:position pos:line="12" pos:column="40"/></name></expr>)<pos:position pos:line="12" pos:column="41"/></condition><then pos:line="12" pos:column="41">
    <block pos:line="13" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">dprint<pos:position pos:line="14" pos:column="13"/></name><argument_list pos:line="14" pos:column="13">(<argument><expr><literal type="number" pos:line="14" pos:column="14">1<pos:position pos:line="14" pos:column="15"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="17">(<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">debugfile<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">,<pos:position pos:line="14" pos:column="28"/></operator> <literal type="string" pos:line="14" pos:column="29">"parse_parameters: malformed parameter: %s\n"<pos:position pos:line="14" pos:column="74"/></literal><operator pos:line="14" pos:column="74">,<pos:position pos:line="14" pos:column="75"/></operator> <name pos:line="14" pos:column="76">s<pos:position pos:line="14" pos:column="77"/></name><operator pos:line="14" pos:column="77">)<pos:position pos:line="14" pos:column="78"/></operator></expr></argument>)<pos:position pos:line="14" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="80"/></expr_stmt>
      <goto pos:line="15" pos:column="7">goto <name pos:line="15" pos:column="12">bail<pos:position pos:line="15" pos:column="16"/></name>;<pos:position pos:line="15" pos:column="17"/></goto>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="18" pos:column="5">/* if we hit a ; now the parameter has no value, just skip it */</comment>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">*<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">p<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">!=<pos:position pos:line="19" pos:column="14"/></operator> <literal type="char" pos:line="19" pos:column="15">';'<pos:position pos:line="19" pos:column="18"/></literal></expr>)<pos:position pos:line="19" pos:column="19"/></condition><then pos:line="19" pos:column="19">
    <block pos:line="20" pos:column="5">{
      <expr_stmt><expr><name pos:line="21" pos:column="7">i<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">=<pos:position pos:line="21" pos:column="10"/></operator> <name pos:line="21" pos:column="11">p<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">-<pos:position pos:line="21" pos:column="14"/></operator> <name pos:line="21" pos:column="15">s<pos:position pos:line="21" pos:column="16"/></name></expr>;<pos:position pos:line="21" pos:column="17"/></expr_stmt>
      <comment type="block" pos:line="22" pos:column="7">/* remove whitespace from the end of the attribute name */</comment>
      <while pos:line="23" pos:column="7">while <condition pos:line="23" pos:column="13">(<expr><name pos:line="23" pos:column="14">i<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">&gt;<pos:position pos:line="23" pos:column="20"/></operator> <literal type="number" pos:line="23" pos:column="18">0<pos:position pos:line="23" pos:column="19"/></literal> <operator pos:line="23" pos:column="20">&amp;&amp;<pos:position pos:line="23" pos:column="30"/></operator> <call><name pos:line="23" pos:column="23">is_email_wsp<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name><name pos:line="23" pos:column="36">s<pos:position pos:line="23" pos:column="37"/></name><index pos:line="23" pos:column="37">[<expr><name pos:line="23" pos:column="38">i<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">-<pos:position pos:line="23" pos:column="40"/></operator><literal type="number" pos:line="23" pos:column="40">1<pos:position pos:line="23" pos:column="41"/></literal></expr>]<pos:position pos:line="23" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="23" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="44"/></condition>
	<block type="pseudo"><expr_stmt><expr><operator pos:line="24" pos:column="9">--<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="11">i<pos:position pos:line="24" pos:column="12"/></name></expr>;<pos:position pos:line="24" pos:column="13"/></expr_stmt></block></while>

      <comment type="block" pos:line="26" pos:column="7">/* the check for the missing parameter token is here so that we can skip
       * over any quoted value that may be present.
       */</comment>
      <if pos:line="29" pos:column="7">if <condition pos:line="29" pos:column="10">(<expr><name pos:line="29" pos:column="11">i<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">==<pos:position pos:line="29" pos:column="15"/></operator> <literal type="number" pos:line="29" pos:column="16">0<pos:position pos:line="29" pos:column="17"/></literal></expr>)<pos:position pos:line="29" pos:column="18"/></condition><then pos:line="29" pos:column="18">
      <block pos:line="30" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">dprint<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><literal type="number" pos:line="31" pos:column="16">1<pos:position pos:line="31" pos:column="17"/></literal></expr></argument>, <argument><expr><operator pos:line="31" pos:column="19">(<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="20">debugfile<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">,<pos:position pos:line="31" pos:column="30"/></operator> <literal type="string" pos:line="31" pos:column="31">"parse_parameters: missing attribute: %s\n"<pos:position pos:line="31" pos:column="74"/></literal><operator pos:line="31" pos:column="74">,<pos:position pos:line="31" pos:column="75"/></operator> <name pos:line="31" pos:column="76">s<pos:position pos:line="31" pos:column="77"/></name><operator pos:line="31" pos:column="77">)<pos:position pos:line="31" pos:column="78"/></operator></expr></argument>)<pos:position pos:line="31" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="80"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="32" pos:column="9">new<pos:position pos:line="32" pos:column="12"/></operator> <operator pos:line="32" pos:column="13">=<pos:position pos:line="32" pos:column="14"/></operator> <name pos:line="32" pos:column="15">NULL<pos:position pos:line="32" pos:column="19"/></name></expr>;<pos:position pos:line="32" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="33" pos:column="8"/></block></then>
      <else pos:line="34" pos:column="7">else
      <block pos:line="35" pos:column="7">{
	<expr_stmt><expr><operator pos:line="36" pos:column="9">new<pos:position pos:line="36" pos:column="12"/></operator> <operator pos:line="36" pos:column="13">=<pos:position pos:line="36" pos:column="14"/></operator> <call><name pos:line="36" pos:column="15">mutt_new_parameter<pos:position pos:line="36" pos:column="33"/></name> <argument_list pos:line="36" pos:column="34">()<pos:position pos:line="36" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="37" pos:column="9">new<pos:position pos:line="37" pos:column="12"/></operator><operator pos:line="37" pos:column="12">-&gt;<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="14">attribute<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">=<pos:position pos:line="37" pos:column="25"/></operator> <call><name pos:line="37" pos:column="26">mutt_substrdup<pos:position pos:line="37" pos:column="40"/></name><argument_list pos:line="37" pos:column="40">(<argument><expr><name pos:line="37" pos:column="41">s<pos:position pos:line="37" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="44">s<pos:position pos:line="37" pos:column="45"/></name> <operator pos:line="37" pos:column="46">+<pos:position pos:line="37" pos:column="47"/></operator> <name pos:line="37" pos:column="48">i<pos:position pos:line="37" pos:column="49"/></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="51"/></expr_stmt>
      }<pos:position pos:line="38" pos:column="8"/></block></else></if>

      <expr_stmt><expr><name pos:line="40" pos:column="7">s<pos:position pos:line="40" pos:column="8"/></name> <operator pos:line="40" pos:column="9">=<pos:position pos:line="40" pos:column="10"/></operator> <call><name pos:line="40" pos:column="11">skip_email_wsp<pos:position pos:line="40" pos:column="25"/></name><argument_list pos:line="40" pos:column="25">(<argument><expr><name pos:line="40" pos:column="26">p<pos:position pos:line="40" pos:column="27"/></name> <operator pos:line="40" pos:column="28">+<pos:position pos:line="40" pos:column="29"/></operator> <literal type="number" pos:line="40" pos:column="30">1<pos:position pos:line="40" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="33"/></expr_stmt> <comment type="block" pos:line="40" pos:column="34">/* skip over the = */</comment>

      <if pos:line="42" pos:column="7">if <condition pos:line="42" pos:column="10">(<expr><operator pos:line="42" pos:column="11">*<pos:position pos:line="42" pos:column="12"/></operator><name pos:line="42" pos:column="12">s<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">==<pos:position pos:line="42" pos:column="16"/></operator> <literal type="char" pos:line="42" pos:column="17">'"'<pos:position pos:line="42" pos:column="20"/></literal></expr>)<pos:position pos:line="42" pos:column="21"/></condition><then pos:line="42" pos:column="21">
      <block pos:line="43" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="44" pos:column="9">int<pos:position pos:line="44" pos:column="12"/></name></type> <name pos:line="44" pos:column="13">state_ascii<pos:position pos:line="44" pos:column="24"/></name> <init pos:line="44" pos:column="25">= <expr><literal type="number" pos:line="44" pos:column="27">1<pos:position pos:line="44" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="44" pos:column="29"/></decl_stmt>
	<expr_stmt><expr><name pos:line="45" pos:column="9">s<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">++<pos:position pos:line="45" pos:column="12"/></operator></expr>;<pos:position pos:line="45" pos:column="13"/></expr_stmt>
	<for pos:line="46" pos:column="9">for <control pos:line="46" pos:column="13">(<init><expr><name pos:line="46" pos:column="14">i<pos:position pos:line="46" pos:column="15"/></name><operator pos:line="46" pos:column="15">=<pos:position pos:line="46" pos:column="16"/></operator><literal type="number" pos:line="46" pos:column="16">0<pos:position pos:line="46" pos:column="17"/></literal></expr>;<pos:position pos:line="46" pos:column="18"/></init> <condition><expr><operator pos:line="46" pos:column="19">*<pos:position pos:line="46" pos:column="20"/></operator><name pos:line="46" pos:column="20">s<pos:position pos:line="46" pos:column="21"/></name> <operator pos:line="46" pos:column="22">&amp;&amp;<pos:position pos:line="46" pos:column="32"/></operator> <name pos:line="46" pos:column="25">i<pos:position pos:line="46" pos:column="26"/></name> <operator pos:line="46" pos:column="27">&lt;<pos:position pos:line="46" pos:column="31"/></operator> <sizeof pos:line="46" pos:column="29">sizeof <argument_list pos:line="46" pos:column="36">(<argument><expr><name pos:line="46" pos:column="37">buffer<pos:position pos:line="46" pos:column="43"/></name></expr></argument>)<pos:position pos:line="46" pos:column="44"/></argument_list></sizeof> <operator pos:line="46" pos:column="45">-<pos:position pos:line="46" pos:column="46"/></operator> <literal type="number" pos:line="46" pos:column="47">1<pos:position pos:line="46" pos:column="48"/></literal></expr>;<pos:position pos:line="46" pos:column="49"/></condition> <incr><expr><name pos:line="46" pos:column="50">i<pos:position pos:line="46" pos:column="51"/></name><operator pos:line="46" pos:column="51">++<pos:position pos:line="46" pos:column="53"/></operator></expr><operator pos:line="46" pos:column="53">,<pos:position pos:line="46" pos:column="54"/></operator> <expr><name pos:line="46" pos:column="55">s<pos:position pos:line="46" pos:column="56"/></name><operator pos:line="46" pos:column="56">++<pos:position pos:line="46" pos:column="58"/></operator></expr></incr>)<pos:position pos:line="46" pos:column="59"/></control>
	<block pos:line="47" pos:column="9">{
	  <if pos:line="48" pos:column="11">if <condition pos:line="48" pos:column="14">(<expr><name pos:line="48" pos:column="15">AssumedCharset<pos:position pos:line="48" pos:column="29"/></name> <operator pos:line="48" pos:column="30">&amp;&amp;<pos:position pos:line="48" pos:column="40"/></operator> <operator pos:line="48" pos:column="33">*<pos:position pos:line="48" pos:column="34"/></operator><name pos:line="48" pos:column="34">AssumedCharset<pos:position pos:line="48" pos:column="48"/></name></expr>)<pos:position pos:line="48" pos:column="49"/></condition><then pos:line="48" pos:column="49"> <block pos:line="48" pos:column="50">{
            <comment type="block" pos:line="49" pos:column="13">/* As iso-2022-* has a character of '"' with non-ascii state,
	     * ignore it. */</comment>
            <if pos:line="51" pos:column="13">if <condition pos:line="51" pos:column="16">(<expr><operator pos:line="51" pos:column="17">*<pos:position pos:line="51" pos:column="18"/></operator><name pos:line="51" pos:column="18">s<pos:position pos:line="51" pos:column="19"/></name> <operator pos:line="51" pos:column="20">==<pos:position pos:line="51" pos:column="22"/></operator> <literal type="number" pos:line="51" pos:column="23">0x1b<pos:position pos:line="51" pos:column="27"/></literal> <operator pos:line="51" pos:column="28">&amp;&amp;<pos:position pos:line="51" pos:column="38"/></operator> <name pos:line="51" pos:column="31">i<pos:position pos:line="51" pos:column="32"/></name> <operator pos:line="51" pos:column="33">&lt;<pos:position pos:line="51" pos:column="37"/></operator> <sizeof pos:line="51" pos:column="35">sizeof <argument_list pos:line="51" pos:column="42">(<argument><expr><name pos:line="51" pos:column="43">buffer<pos:position pos:line="51" pos:column="49"/></name></expr></argument>)<pos:position pos:line="51" pos:column="50"/></argument_list></sizeof> <operator pos:line="51" pos:column="51">-<pos:position pos:line="51" pos:column="52"/></operator> <literal type="number" pos:line="51" pos:column="53">2<pos:position pos:line="51" pos:column="54"/></literal></expr>)<pos:position pos:line="51" pos:column="55"/></condition><then pos:line="51" pos:column="55">
            <block pos:line="52" pos:column="13">{
              <if pos:line="53" pos:column="15">if <condition pos:line="53" pos:column="18">(<expr><name><name pos:line="53" pos:column="19">s<pos:position pos:line="53" pos:column="20"/></name><index pos:line="53" pos:column="20">[<expr><literal type="number" pos:line="53" pos:column="21">1<pos:position pos:line="53" pos:column="22"/></literal></expr>]<pos:position pos:line="53" pos:column="23"/></index></name> <operator pos:line="53" pos:column="24">==<pos:position pos:line="53" pos:column="26"/></operator> <literal type="char" pos:line="53" pos:column="27">'('<pos:position pos:line="53" pos:column="30"/></literal> <operator pos:line="53" pos:column="31">&amp;&amp;<pos:position pos:line="53" pos:column="41"/></operator> <operator pos:line="53" pos:column="34">(<pos:position pos:line="53" pos:column="35"/></operator><name><name pos:line="53" pos:column="35">s<pos:position pos:line="53" pos:column="36"/></name><index pos:line="53" pos:column="36">[<expr><literal type="number" pos:line="53" pos:column="37">2<pos:position pos:line="53" pos:column="38"/></literal></expr>]<pos:position pos:line="53" pos:column="39"/></index></name> <operator pos:line="53" pos:column="40">==<pos:position pos:line="53" pos:column="42"/></operator> <literal type="char" pos:line="53" pos:column="43">'B'<pos:position pos:line="53" pos:column="46"/></literal> <operator pos:line="53" pos:column="47">||<pos:position pos:line="53" pos:column="49"/></operator> <name><name pos:line="53" pos:column="50">s<pos:position pos:line="53" pos:column="51"/></name><index pos:line="53" pos:column="51">[<expr><literal type="number" pos:line="53" pos:column="52">2<pos:position pos:line="53" pos:column="53"/></literal></expr>]<pos:position pos:line="53" pos:column="54"/></index></name> <operator pos:line="53" pos:column="55">==<pos:position pos:line="53" pos:column="57"/></operator> <literal type="char" pos:line="53" pos:column="58">'J'<pos:position pos:line="53" pos:column="61"/></literal><operator pos:line="53" pos:column="61">)<pos:position pos:line="53" pos:column="62"/></operator></expr>)<pos:position pos:line="53" pos:column="63"/></condition><then pos:line="53" pos:column="63">
                <block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="17">state_ascii<pos:position pos:line="54" pos:column="28"/></name> <operator pos:line="54" pos:column="29">=<pos:position pos:line="54" pos:column="30"/></operator> <literal type="number" pos:line="54" pos:column="31">1<pos:position pos:line="54" pos:column="32"/></literal></expr>;<pos:position pos:line="54" pos:column="33"/></expr_stmt></block></then>
              <else pos:line="55" pos:column="15">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="17">state_ascii<pos:position pos:line="56" pos:column="28"/></name> <operator pos:line="56" pos:column="29">=<pos:position pos:line="56" pos:column="30"/></operator> <literal type="number" pos:line="56" pos:column="31">0<pos:position pos:line="56" pos:column="32"/></literal></expr>;<pos:position pos:line="56" pos:column="33"/></expr_stmt></block></else></if>
            }<pos:position pos:line="57" pos:column="14"/></block></then></if>
          }<pos:position pos:line="58" pos:column="12"/></block></then></if>
          <if pos:line="59" pos:column="11">if <condition pos:line="59" pos:column="14">(<expr><name pos:line="59" pos:column="15">state_ascii<pos:position pos:line="59" pos:column="26"/></name> <operator pos:line="59" pos:column="27">&amp;&amp;<pos:position pos:line="59" pos:column="37"/></operator> <operator pos:line="59" pos:column="30">*<pos:position pos:line="59" pos:column="31"/></operator><name pos:line="59" pos:column="31">s<pos:position pos:line="59" pos:column="32"/></name> <operator pos:line="59" pos:column="33">==<pos:position pos:line="59" pos:column="35"/></operator> <literal type="char" pos:line="59" pos:column="36">'"'<pos:position pos:line="59" pos:column="39"/></literal></expr>)<pos:position pos:line="59" pos:column="40"/></condition><then pos:line="59" pos:column="40">
            <block type="pseudo"><break pos:line="60" pos:column="13">break;<pos:position pos:line="60" pos:column="19"/></break></block></then></if>
	  <if pos:line="61" pos:column="11">if <condition pos:line="61" pos:column="14">(<expr><operator pos:line="61" pos:column="15">*<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="16">s<pos:position pos:line="61" pos:column="17"/></name> <operator pos:line="61" pos:column="18">==<pos:position pos:line="61" pos:column="20"/></operator> <literal type="char" pos:line="61" pos:column="21">'\\'<pos:position pos:line="61" pos:column="25"/></literal></expr>)<pos:position pos:line="61" pos:column="26"/></condition><then pos:line="61" pos:column="26">
	  <block pos:line="62" pos:column="11">{
	    <comment type="block" pos:line="63" pos:column="13">/* Quote the next character */</comment>
	    <expr_stmt><expr><name><name pos:line="64" pos:column="13">buffer<pos:position pos:line="64" pos:column="19"/></name><index pos:line="64" pos:column="19">[<expr><name pos:line="64" pos:column="20">i<pos:position pos:line="64" pos:column="21"/></name></expr>]<pos:position pos:line="64" pos:column="22"/></index></name> <operator pos:line="64" pos:column="23">=<pos:position pos:line="64" pos:column="24"/></operator> <name><name pos:line="64" pos:column="25">s<pos:position pos:line="64" pos:column="26"/></name><index pos:line="64" pos:column="26">[<expr><literal type="number" pos:line="64" pos:column="27">1<pos:position pos:line="64" pos:column="28"/></literal></expr>]<pos:position pos:line="64" pos:column="29"/></index></name></expr>;<pos:position pos:line="64" pos:column="30"/></expr_stmt>
	    <if pos:line="65" pos:column="13">if <condition pos:line="65" pos:column="16">(<expr><operator pos:line="65" pos:column="17">!<pos:position pos:line="65" pos:column="18"/></operator><operator pos:line="65" pos:column="18">*<pos:position pos:line="65" pos:column="19"/></operator><operator pos:line="65" pos:column="19">++<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="21">s<pos:position pos:line="65" pos:column="22"/></name></expr>)<pos:position pos:line="65" pos:column="23"/></condition><then pos:line="65" pos:column="23">
	      <block type="pseudo"><break pos:line="66" pos:column="15">break;<pos:position pos:line="66" pos:column="21"/></break></block></then></if>
	  }<pos:position pos:line="67" pos:column="12"/></block></then>
	  <else pos:line="68" pos:column="11">else
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="69" pos:column="13">buffer<pos:position pos:line="69" pos:column="19"/></name><index pos:line="69" pos:column="19">[<expr><name pos:line="69" pos:column="20">i<pos:position pos:line="69" pos:column="21"/></name></expr>]<pos:position pos:line="69" pos:column="22"/></index></name> <operator pos:line="69" pos:column="23">=<pos:position pos:line="69" pos:column="24"/></operator> <operator pos:line="69" pos:column="25">*<pos:position pos:line="69" pos:column="26"/></operator><name pos:line="69" pos:column="26">s<pos:position pos:line="69" pos:column="27"/></name></expr>;<pos:position pos:line="69" pos:column="28"/></expr_stmt></block></else></if>
	}<pos:position pos:line="70" pos:column="10"/></block></for>
	<expr_stmt><expr><name><name pos:line="71" pos:column="9">buffer<pos:position pos:line="71" pos:column="15"/></name><index pos:line="71" pos:column="15">[<expr><name pos:line="71" pos:column="16">i<pos:position pos:line="71" pos:column="17"/></name></expr>]<pos:position pos:line="71" pos:column="18"/></index></name> <operator pos:line="71" pos:column="19">=<pos:position pos:line="71" pos:column="20"/></operator> <literal type="number" pos:line="71" pos:column="21">0<pos:position pos:line="71" pos:column="22"/></literal></expr>;<pos:position pos:line="71" pos:column="23"/></expr_stmt>
	<if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><operator pos:line="72" pos:column="13">*<pos:position pos:line="72" pos:column="14"/></operator><name pos:line="72" pos:column="14">s<pos:position pos:line="72" pos:column="15"/></name></expr>)<pos:position pos:line="72" pos:column="16"/></condition><then pos:line="72" pos:column="16">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="73" pos:column="11">s<pos:position pos:line="73" pos:column="12"/></name><operator pos:line="73" pos:column="12">++<pos:position pos:line="73" pos:column="14"/></operator></expr>;<pos:position pos:line="73" pos:column="15"/></expr_stmt></block></then></if> <comment type="block" pos:line="73" pos:column="16">/* skip over the " */</comment>
      }<pos:position pos:line="74" pos:column="8"/></block></then>
      <else pos:line="75" pos:column="7">else
      <block pos:line="76" pos:column="7">{
	<for pos:line="77" pos:column="9">for <control pos:line="77" pos:column="13">(<init><expr><name pos:line="77" pos:column="14">i<pos:position pos:line="77" pos:column="15"/></name><operator pos:line="77" pos:column="15">=<pos:position pos:line="77" pos:column="16"/></operator><literal type="number" pos:line="77" pos:column="16">0<pos:position pos:line="77" pos:column="17"/></literal></expr>;<pos:position pos:line="77" pos:column="18"/></init> <condition><expr><operator pos:line="77" pos:column="19">*<pos:position pos:line="77" pos:column="20"/></operator><name pos:line="77" pos:column="20">s<pos:position pos:line="77" pos:column="21"/></name> <operator pos:line="77" pos:column="22">&amp;&amp;<pos:position pos:line="77" pos:column="32"/></operator> <operator pos:line="77" pos:column="25">*<pos:position pos:line="77" pos:column="26"/></operator><name pos:line="77" pos:column="26">s<pos:position pos:line="77" pos:column="27"/></name> <operator pos:line="77" pos:column="28">!=<pos:position pos:line="77" pos:column="30"/></operator> <literal type="char" pos:line="77" pos:column="31">' '<pos:position pos:line="77" pos:column="34"/></literal> <operator pos:line="77" pos:column="35">&amp;&amp;<pos:position pos:line="77" pos:column="45"/></operator> <operator pos:line="77" pos:column="38">*<pos:position pos:line="77" pos:column="39"/></operator><name pos:line="77" pos:column="39">s<pos:position pos:line="77" pos:column="40"/></name> <operator pos:line="77" pos:column="41">!=<pos:position pos:line="77" pos:column="43"/></operator> <literal type="char" pos:line="77" pos:column="44">';'<pos:position pos:line="77" pos:column="47"/></literal> <operator pos:line="77" pos:column="48">&amp;&amp;<pos:position pos:line="77" pos:column="58"/></operator> <name pos:line="77" pos:column="51">i<pos:position pos:line="77" pos:column="52"/></name> <operator pos:line="77" pos:column="53">&lt;<pos:position pos:line="77" pos:column="57"/></operator> <sizeof pos:line="77" pos:column="55">sizeof <argument_list pos:line="77" pos:column="62">(<argument><expr><name pos:line="77" pos:column="63">buffer<pos:position pos:line="77" pos:column="69"/></name></expr></argument>)<pos:position pos:line="77" pos:column="70"/></argument_list></sizeof> <operator pos:line="77" pos:column="71">-<pos:position pos:line="77" pos:column="72"/></operator> <literal type="number" pos:line="77" pos:column="73">1<pos:position pos:line="77" pos:column="74"/></literal></expr>;<pos:position pos:line="77" pos:column="75"/></condition> <incr><expr><name pos:line="77" pos:column="76">i<pos:position pos:line="77" pos:column="77"/></name><operator pos:line="77" pos:column="77">++<pos:position pos:line="77" pos:column="79"/></operator></expr><operator pos:line="77" pos:column="79">,<pos:position pos:line="77" pos:column="80"/></operator> <expr><name pos:line="77" pos:column="81">s<pos:position pos:line="77" pos:column="82"/></name><operator pos:line="77" pos:column="82">++<pos:position pos:line="77" pos:column="84"/></operator></expr></incr>)<pos:position pos:line="77" pos:column="85"/></control>
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="78" pos:column="11">buffer<pos:position pos:line="78" pos:column="17"/></name><index pos:line="78" pos:column="17">[<expr><name pos:line="78" pos:column="18">i<pos:position pos:line="78" pos:column="19"/></name></expr>]<pos:position pos:line="78" pos:column="20"/></index></name> <operator pos:line="78" pos:column="21">=<pos:position pos:line="78" pos:column="22"/></operator> <operator pos:line="78" pos:column="23">*<pos:position pos:line="78" pos:column="24"/></operator><name pos:line="78" pos:column="24">s<pos:position pos:line="78" pos:column="25"/></name></expr>;<pos:position pos:line="78" pos:column="26"/></expr_stmt></block></for>
	<expr_stmt><expr><name><name pos:line="79" pos:column="9">buffer<pos:position pos:line="79" pos:column="15"/></name><index pos:line="79" pos:column="15">[<expr><name pos:line="79" pos:column="16">i<pos:position pos:line="79" pos:column="17"/></name></expr>]<pos:position pos:line="79" pos:column="18"/></index></name> <operator pos:line="79" pos:column="19">=<pos:position pos:line="79" pos:column="20"/></operator> <literal type="number" pos:line="79" pos:column="21">0<pos:position pos:line="79" pos:column="22"/></literal></expr>;<pos:position pos:line="79" pos:column="23"/></expr_stmt>
      }<pos:position pos:line="80" pos:column="8"/></block></else></if>

      <comment type="block" pos:line="82" pos:column="7">/* if the attribute token was missing, 'new' will be NULL */</comment>
      <if pos:line="83" pos:column="7">if <condition pos:line="83" pos:column="10">(<expr><operator pos:line="83" pos:column="11">new<pos:position pos:line="83" pos:column="14"/></operator></expr>)<pos:position pos:line="83" pos:column="15"/></condition><then pos:line="83" pos:column="15">
      <block pos:line="84" pos:column="7">{
	<expr_stmt><expr><operator pos:line="85" pos:column="9">new<pos:position pos:line="85" pos:column="12"/></operator><operator pos:line="85" pos:column="12">-&gt;<pos:position pos:line="85" pos:column="17"/></operator><name pos:line="85" pos:column="14">value<pos:position pos:line="85" pos:column="19"/></name> <operator pos:line="85" pos:column="20">=<pos:position pos:line="85" pos:column="21"/></operator> <call><name pos:line="85" pos:column="22">safe_strdup<pos:position pos:line="85" pos:column="33"/></name> <argument_list pos:line="85" pos:column="34">(<argument><expr><name pos:line="85" pos:column="35">buffer<pos:position pos:line="85" pos:column="41"/></name></expr></argument>)<pos:position pos:line="85" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="43"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="87" pos:column="9">dprint<pos:position pos:line="87" pos:column="15"/></name> <argument_list pos:line="87" pos:column="16">(<argument><expr><literal type="number" pos:line="87" pos:column="17">2<pos:position pos:line="87" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="87" pos:column="20">(<pos:position pos:line="87" pos:column="21"/></operator><name pos:line="87" pos:column="21">debugfile<pos:position pos:line="87" pos:column="30"/></name><operator pos:line="87" pos:column="30">,<pos:position pos:line="87" pos:column="31"/></operator> <literal type="string" pos:line="87" pos:column="32">"parse_parameter: `%s' = `%s'\n"<pos:position pos:line="87" pos:column="64"/></literal><operator pos:line="87" pos:column="64">,<pos:position pos:line="87" pos:column="65"/></operator>
	      <ternary><condition><expr><operator pos:line="88" pos:column="15">new<pos:position pos:line="88" pos:column="18"/></operator><operator pos:line="88" pos:column="18">-&gt;<pos:position pos:line="88" pos:column="23"/></operator><name pos:line="88" pos:column="20">attribute<pos:position pos:line="88" pos:column="29"/></name></expr> ?<pos:position pos:line="88" pos:column="31"/></condition><then pos:line="88" pos:column="31"> <expr><operator pos:line="88" pos:column="32">new<pos:position pos:line="88" pos:column="35"/></operator><operator pos:line="88" pos:column="35">-&gt;<pos:position pos:line="88" pos:column="40"/></operator><name pos:line="88" pos:column="37">attribute<pos:position pos:line="88" pos:column="46"/></name></expr> <pos:position pos:line="88" pos:column="47"/></then><else pos:line="88" pos:column="47">: <expr><literal type="string" pos:line="88" pos:column="49">""<pos:position pos:line="88" pos:column="51"/></literal></expr></else></ternary><operator pos:line="88" pos:column="51">,<pos:position pos:line="88" pos:column="52"/></operator>
	      <ternary><condition><expr><operator pos:line="89" pos:column="15">new<pos:position pos:line="89" pos:column="18"/></operator><operator pos:line="89" pos:column="18">-&gt;<pos:position pos:line="89" pos:column="23"/></operator><name pos:line="89" pos:column="20">value<pos:position pos:line="89" pos:column="25"/></name></expr> ?<pos:position pos:line="89" pos:column="27"/></condition><then pos:line="89" pos:column="27"> <expr><operator pos:line="89" pos:column="28">new<pos:position pos:line="89" pos:column="31"/></operator><operator pos:line="89" pos:column="31">-&gt;<pos:position pos:line="89" pos:column="36"/></operator><name pos:line="89" pos:column="33">value<pos:position pos:line="89" pos:column="38"/></name></expr> <pos:position pos:line="89" pos:column="39"/></then><else pos:line="89" pos:column="39">: <expr><literal type="string" pos:line="89" pos:column="41">""<pos:position pos:line="89" pos:column="43"/></literal></expr></else></ternary><operator pos:line="89" pos:column="43">)<pos:position pos:line="89" pos:column="44"/></operator></expr></argument>)<pos:position pos:line="89" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="46"/></expr_stmt>

	<comment type="block" pos:line="91" pos:column="9">/* Add this parameter to the list */</comment>
	<if pos:line="92" pos:column="9">if <condition pos:line="92" pos:column="12">(<expr><name pos:line="92" pos:column="13">head<pos:position pos:line="92" pos:column="17"/></name></expr>)<pos:position pos:line="92" pos:column="18"/></condition><then pos:line="92" pos:column="18">
	<block pos:line="93" pos:column="9">{
	  <expr_stmt><expr><name><name pos:line="94" pos:column="11">cur<pos:position pos:line="94" pos:column="14"/></name><operator pos:line="94" pos:column="14">-&gt;<pos:position pos:line="94" pos:column="19"/></operator><name pos:line="94" pos:column="16">next<pos:position pos:line="94" pos:column="20"/></name></name> <operator pos:line="94" pos:column="21">=<pos:position pos:line="94" pos:column="22"/></operator> <operator pos:line="94" pos:column="23">new<pos:position pos:line="94" pos:column="26"/></operator></expr>;<pos:position pos:line="94" pos:column="27"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="95" pos:column="11">cur<pos:position pos:line="95" pos:column="14"/></name> <operator pos:line="95" pos:column="15">=<pos:position pos:line="95" pos:column="16"/></operator> <name><name pos:line="95" pos:column="17">cur<pos:position pos:line="95" pos:column="20"/></name><operator pos:line="95" pos:column="20">-&gt;<pos:position pos:line="95" pos:column="25"/></operator><name pos:line="95" pos:column="22">next<pos:position pos:line="95" pos:column="26"/></name></name></expr>;<pos:position pos:line="95" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="96" pos:column="10"/></block></then>
	<else pos:line="97" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><name pos:line="98" pos:column="11">head<pos:position pos:line="98" pos:column="15"/></name> <operator pos:line="98" pos:column="16">=<pos:position pos:line="98" pos:column="17"/></operator> <name pos:line="98" pos:column="18">cur<pos:position pos:line="98" pos:column="21"/></name> <operator pos:line="98" pos:column="22">=<pos:position pos:line="98" pos:column="23"/></operator> <operator pos:line="98" pos:column="24">new<pos:position pos:line="98" pos:column="27"/></operator></expr>;<pos:position pos:line="98" pos:column="28"/></expr_stmt></block></else></if>
      }<pos:position pos:line="99" pos:column="8"/></block></then></if>
    }<pos:position pos:line="100" pos:column="6"/></block></then>
    <else pos:line="101" pos:column="5">else
    <block pos:line="102" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="103" pos:column="7">dprint<pos:position pos:line="103" pos:column="13"/></name> <argument_list pos:line="103" pos:column="14">(<argument><expr><literal type="number" pos:line="103" pos:column="15">1<pos:position pos:line="103" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="103" pos:column="18">(<pos:position pos:line="103" pos:column="19"/></operator><name pos:line="103" pos:column="19">debugfile<pos:position pos:line="103" pos:column="28"/></name><operator pos:line="103" pos:column="28">,<pos:position pos:line="103" pos:column="29"/></operator> <literal type="string" pos:line="103" pos:column="30">"parse_parameters(): parameter with no value: %s\n"<pos:position pos:line="103" pos:column="81"/></literal><operator pos:line="103" pos:column="81">,<pos:position pos:line="103" pos:column="82"/></operator> <name pos:line="103" pos:column="83">s<pos:position pos:line="103" pos:column="84"/></name><operator pos:line="103" pos:column="84">)<pos:position pos:line="103" pos:column="85"/></operator></expr></argument>)<pos:position pos:line="103" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="87"/></expr_stmt>
      <expr_stmt><expr><name pos:line="104" pos:column="7">s<pos:position pos:line="104" pos:column="8"/></name> <operator pos:line="104" pos:column="9">=<pos:position pos:line="104" pos:column="10"/></operator> <name pos:line="104" pos:column="11">p<pos:position pos:line="104" pos:column="12"/></name></expr>;<pos:position pos:line="104" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="105" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="107" pos:column="5">/* Find the next parameter */</comment>
    <if pos:line="108" pos:column="5">if <condition pos:line="108" pos:column="8">(<expr><operator pos:line="108" pos:column="9">*<pos:position pos:line="108" pos:column="10"/></operator><name pos:line="108" pos:column="10">s<pos:position pos:line="108" pos:column="11"/></name> <operator pos:line="108" pos:column="12">!=<pos:position pos:line="108" pos:column="14"/></operator> <literal type="char" pos:line="108" pos:column="15">';'<pos:position pos:line="108" pos:column="18"/></literal> <operator pos:line="108" pos:column="19">&amp;&amp;<pos:position pos:line="108" pos:column="29"/></operator> <operator pos:line="108" pos:column="22">(<pos:position pos:line="108" pos:column="23"/></operator><name pos:line="108" pos:column="23">s<pos:position pos:line="108" pos:column="24"/></name> <operator pos:line="108" pos:column="25">=<pos:position pos:line="108" pos:column="26"/></operator> <call><name pos:line="108" pos:column="27">strchr<pos:position pos:line="108" pos:column="33"/></name> <argument_list pos:line="108" pos:column="34">(<argument><expr><name pos:line="108" pos:column="35">s<pos:position pos:line="108" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="108" pos:column="38">';'<pos:position pos:line="108" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="42"/></argument_list></call><operator pos:line="108" pos:column="42">)<pos:position pos:line="108" pos:column="43"/></operator> <operator pos:line="108" pos:column="44">==<pos:position pos:line="108" pos:column="46"/></operator> <name pos:line="108" pos:column="47">NULL<pos:position pos:line="108" pos:column="51"/></name></expr>)<pos:position pos:line="108" pos:column="52"/></condition><then pos:line="108" pos:column="52">
      <block type="pseudo"><break pos:line="109" pos:column="7">break;<pos:position pos:line="109" pos:column="13"/></break></block></then></if> <comment type="block" pos:line="109" pos:column="14">/* no more parameters */</comment>

    <do pos:line="111" pos:column="5">do
    <block pos:line="112" pos:column="5">{
      <comment type="block" pos:line="113" pos:column="7">/* Move past any leading whitespace. the +1 skips over the semicolon */</comment>
      <expr_stmt><expr><name pos:line="114" pos:column="7">s<pos:position pos:line="114" pos:column="8"/></name> <operator pos:line="114" pos:column="9">=<pos:position pos:line="114" pos:column="10"/></operator> <call><name pos:line="114" pos:column="11">skip_email_wsp<pos:position pos:line="114" pos:column="25"/></name><argument_list pos:line="114" pos:column="25">(<argument><expr><name pos:line="114" pos:column="26">s<pos:position pos:line="114" pos:column="27"/></name> <operator pos:line="114" pos:column="28">+<pos:position pos:line="114" pos:column="29"/></operator> <literal type="number" pos:line="114" pos:column="30">1<pos:position pos:line="114" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="115" pos:column="6"/></block>
    while <condition pos:line="116" pos:column="11">(<expr><operator pos:line="116" pos:column="12">*<pos:position pos:line="116" pos:column="13"/></operator><name pos:line="116" pos:column="13">s<pos:position pos:line="116" pos:column="14"/></name> <operator pos:line="116" pos:column="15">==<pos:position pos:line="116" pos:column="17"/></operator> <literal type="char" pos:line="116" pos:column="18">';'<pos:position pos:line="116" pos:column="21"/></literal></expr>)<pos:position pos:line="116" pos:column="22"/></condition>;<pos:position pos:line="116" pos:column="23"/></do> <comment type="block" pos:line="116" pos:column="24">/* skip empty parameters */</comment>
  }<pos:position pos:line="117" pos:column="4"/></block></while>    

<label><name pos:line="119" pos:column="1">bail<pos:position pos:line="119" pos:column="5"/></name>:<pos:position pos:line="119" pos:column="6"/></label>

  <expr_stmt><expr><call><name pos:line="121" pos:column="3">rfc2231_decode_parameters<pos:position pos:line="121" pos:column="28"/></name> <argument_list pos:line="121" pos:column="29">(<argument><expr><operator pos:line="121" pos:column="30">&amp;<pos:position pos:line="121" pos:column="35"/></operator><name pos:line="121" pos:column="31">head<pos:position pos:line="121" pos:column="35"/></name></expr></argument>)<pos:position pos:line="121" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="37"/></expr_stmt>
  <return pos:line="122" pos:column="3">return <expr><operator pos:line="122" pos:column="10">(<pos:position pos:line="122" pos:column="11"/></operator><name pos:line="122" pos:column="11">head<pos:position pos:line="122" pos:column="15"/></name><operator pos:line="122" pos:column="15">)<pos:position pos:line="122" pos:column="16"/></operator></expr>;<pos:position pos:line="122" pos:column="17"/></return>
}<pos:position pos:line="123" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_475_mutt-1.4.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">destroy_state<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">browser_state<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">state<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">c<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>

  <for pos:line="5" pos:column="3">for <control pos:line="5" pos:column="7">(<init><expr><name pos:line="5" pos:column="8">c<pos:position pos:line="5" pos:column="9"/></name> <operator pos:line="5" pos:column="10">=<pos:position pos:line="5" pos:column="11"/></operator> <literal type="number" pos:line="5" pos:column="12">0<pos:position pos:line="5" pos:column="13"/></literal></expr>;<pos:position pos:line="5" pos:column="14"/></init> <condition><expr><name pos:line="5" pos:column="15">c<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">&lt;<pos:position pos:line="5" pos:column="21"/></operator> <name><name pos:line="5" pos:column="19">state<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">-&gt;<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="26">entrylen<pos:position pos:line="5" pos:column="34"/></name></name></expr>;<pos:position pos:line="5" pos:column="35"/></condition> <incr><expr><name pos:line="5" pos:column="36">c<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">++<pos:position pos:line="5" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="40"/></control>
  <block pos:line="6" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">safe_free<pos:position pos:line="7" pos:column="14"/></name> <argument_list pos:line="7" pos:column="15">(<argument><expr><operator pos:line="7" pos:column="16">(<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">void<pos:position pos:line="7" pos:column="21"/></name> <operator pos:line="7" pos:column="22">*<pos:position pos:line="7" pos:column="23"/></operator><operator pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></operator><operator pos:line="7" pos:column="24">)<pos:position pos:line="7" pos:column="25"/></operator> <operator pos:line="7" pos:column="26">&amp;<pos:position pos:line="7" pos:column="31"/></operator><operator pos:line="7" pos:column="27">(<pos:position pos:line="7" pos:column="28"/></operator><operator pos:line="7" pos:column="28">(<pos:position pos:line="7" pos:column="29"/></operator><name><name pos:line="7" pos:column="29">state<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">entry<pos:position pos:line="7" pos:column="41"/></name></name><operator pos:line="7" pos:column="41">)<pos:position pos:line="7" pos:column="42"/></operator><index pos:line="7" pos:column="42">[<expr><name pos:line="7" pos:column="43">c<pos:position pos:line="7" pos:column="44"/></name></expr>]<pos:position pos:line="7" pos:column="45"/></index><operator pos:line="7" pos:column="45">.<pos:position pos:line="7" pos:column="46"/></operator><name pos:line="7" pos:column="46">name<pos:position pos:line="7" pos:column="50"/></name><operator pos:line="7" pos:column="50">)<pos:position pos:line="7" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">safe_free<pos:position pos:line="8" pos:column="14"/></name> <argument_list pos:line="8" pos:column="15">(<argument><expr><operator pos:line="8" pos:column="16">(<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">void<pos:position pos:line="8" pos:column="21"/></name> <operator pos:line="8" pos:column="22">*<pos:position pos:line="8" pos:column="23"/></operator><operator pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></operator><operator pos:line="8" pos:column="24">)<pos:position pos:line="8" pos:column="25"/></operator> <operator pos:line="8" pos:column="26">&amp;<pos:position pos:line="8" pos:column="31"/></operator><operator pos:line="8" pos:column="27">(<pos:position pos:line="8" pos:column="28"/></operator><operator pos:line="8" pos:column="28">(<pos:position pos:line="8" pos:column="29"/></operator><name><name pos:line="8" pos:column="29">state<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">-&gt;<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="36">entry<pos:position pos:line="8" pos:column="41"/></name></name><operator pos:line="8" pos:column="41">)<pos:position pos:line="8" pos:column="42"/></operator><index pos:line="8" pos:column="42">[<expr><name pos:line="8" pos:column="43">c<pos:position pos:line="8" pos:column="44"/></name></expr>]<pos:position pos:line="8" pos:column="45"/></index><operator pos:line="8" pos:column="45">.<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="46">desc<pos:position pos:line="8" pos:column="50"/></name><operator pos:line="8" pos:column="50">)<pos:position pos:line="8" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">safe_free<pos:position pos:line="9" pos:column="14"/></name> <argument_list pos:line="9" pos:column="15">(<argument><expr><operator pos:line="9" pos:column="16">(<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">void<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></operator><operator pos:line="9" pos:column="23">*<pos:position pos:line="9" pos:column="24"/></operator><operator pos:line="9" pos:column="24">)<pos:position pos:line="9" pos:column="25"/></operator> <operator pos:line="9" pos:column="26">&amp;<pos:position pos:line="9" pos:column="31"/></operator><operator pos:line="9" pos:column="27">(<pos:position pos:line="9" pos:column="28"/></operator><operator pos:line="9" pos:column="28">(<pos:position pos:line="9" pos:column="29"/></operator><name><name pos:line="9" pos:column="29">state<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">-&gt;<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="36">entry<pos:position pos:line="9" pos:column="41"/></name></name><operator pos:line="9" pos:column="41">)<pos:position pos:line="9" pos:column="42"/></operator><index pos:line="9" pos:column="42">[<expr><name pos:line="9" pos:column="43">c<pos:position pos:line="9" pos:column="44"/></name></expr>]<pos:position pos:line="9" pos:column="45"/></index><operator pos:line="9" pos:column="45">.<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="46">st<pos:position pos:line="9" pos:column="48"/></name><operator pos:line="9" pos:column="48">)<pos:position pos:line="9" pos:column="49"/></operator></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="51"/></expr_stmt>
  }<pos:position pos:line="10" pos:column="4"/></block></for>
<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef<pos:position pos:line="11" pos:column="7"/></cpp:directive> <name pos:line="11" pos:column="8">USE_IMAP<pos:position pos:line="11" pos:column="16"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">safe_free<pos:position pos:line="12" pos:column="12"/></name> <argument_list pos:line="12" pos:column="13">(<argument><expr><operator pos:line="12" pos:column="14">(<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">void<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">*<pos:position pos:line="12" pos:column="21"/></operator><operator pos:line="12" pos:column="21">*<pos:position pos:line="12" pos:column="22"/></operator><operator pos:line="12" pos:column="22">)<pos:position pos:line="12" pos:column="23"/></operator> <operator pos:line="12" pos:column="24">&amp;<pos:position pos:line="12" pos:column="29"/></operator><name><name pos:line="12" pos:column="25">state<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">-&gt;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="32">folder<pos:position pos:line="12" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">safe_free<pos:position pos:line="14" pos:column="12"/></name> <argument_list pos:line="14" pos:column="13">(<argument><expr><operator pos:line="14" pos:column="14">(<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">void<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></operator><operator pos:line="14" pos:column="21">*<pos:position pos:line="14" pos:column="22"/></operator><operator pos:line="14" pos:column="22">)<pos:position pos:line="14" pos:column="23"/></operator> <operator pos:line="14" pos:column="24">&amp;<pos:position pos:line="14" pos:column="29"/></operator><name><name pos:line="14" pos:column="25">state<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">-&gt;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="32">entry<pos:position pos:line="14" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

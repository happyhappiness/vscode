<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1144_mutt-1.4.2.3.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">MD5Update<pos:position pos:line="1" pos:column="15"/></name> <argument_list pos:line="1" pos:column="16">(<argument><expr><name pos:line="1" pos:column="17">context<pos:position pos:line="1" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="26">input<pos:position pos:line="1" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="33">inputLen<pos:position pos:line="1" pos:column="41"/></name></expr></argument>)<pos:position pos:line="1" pos:column="42"/></argument_list>
<name pos:line="2" pos:column="1">MD5_CTX<pos:position pos:line="2" pos:column="8"/></name> <modifier pos:line="2" pos:column="9">*<pos:position pos:line="2" pos:column="10"/></modifier><name pos:line="2" pos:column="10">context<pos:position pos:line="2" pos:column="17"/></name></decl>;<pos:position pos:line="2" pos:column="18"/></decl_stmt>                                        <comment type="block" pos:line="2" pos:column="58">/* context */</comment>
<decl_stmt><decl><type><name pos:line="3" pos:column="1">unsigned<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">char<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">input<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>                                <comment type="block" pos:line="3" pos:column="54">/* input block */</comment>
<decl_stmt><decl><type><name pos:line="4" pos:column="1">unsigned<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">int<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">inputLen<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>                     <comment type="block" pos:line="4" pos:column="44">/* length of input block */</comment>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">int<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">i<pos:position pos:line="6" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="19">index<pos:position pos:line="6" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="26">partLen<pos:position pos:line="6" pos:column="33"/></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* Compute number of bytes mod 64 */</comment>
  <expr_stmt><expr><name pos:line="9" pos:column="3">index<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator> <call pos:line="9" pos:column="11">(<name pos:line="9" pos:column="12">unsigned<pos:position pos:line="9" pos:column="20"/></name> <name pos:line="9" pos:column="21">int<pos:position pos:line="9" pos:column="24"/></name>)<argument_list pos:line="9" pos:column="25">(<argument><expr><operator pos:line="9" pos:column="26">(<pos:position pos:line="9" pos:column="27"/></operator><name><name pos:line="9" pos:column="27">context<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">-&gt;<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="36">count<pos:position pos:line="9" pos:column="41"/></name><index pos:line="9" pos:column="41">[<expr><literal type="number" pos:line="9" pos:column="42">0<pos:position pos:line="9" pos:column="43"/></literal></expr>]<pos:position pos:line="9" pos:column="44"/></index></name> <operator pos:line="9" pos:column="45">&gt;&gt;<pos:position pos:line="9" pos:column="50"/></operator> <literal type="number" pos:line="9" pos:column="48">3<pos:position pos:line="9" pos:column="49"/></literal><operator pos:line="9" pos:column="49">)<pos:position pos:line="9" pos:column="50"/></operator> <operator pos:line="9" pos:column="51">&amp;<pos:position pos:line="9" pos:column="56"/></operator> <literal type="number" pos:line="9" pos:column="53">0x3F<pos:position pos:line="9" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="59"/></expr_stmt>

  <comment type="block" pos:line="11" pos:column="3">/* Update number of bits */</comment>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">(<pos:position pos:line="12" pos:column="8"/></operator><name><name pos:line="12" pos:column="8">context<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">-&gt;<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="17">count<pos:position pos:line="12" pos:column="22"/></name><index pos:line="12" pos:column="22">[<expr><literal type="number" pos:line="12" pos:column="23">0<pos:position pos:line="12" pos:column="24"/></literal></expr>]<pos:position pos:line="12" pos:column="25"/></index></name> <operator pos:line="12" pos:column="26">+=<pos:position pos:line="12" pos:column="28"/></operator> <operator pos:line="12" pos:column="29">(<pos:position pos:line="12" pos:column="30"/></operator><operator pos:line="12" pos:column="30">(<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="31">uint32_t<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">)<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="40">inputLen<pos:position pos:line="12" pos:column="48"/></name> <operator pos:line="12" pos:column="49">&lt;&lt;<pos:position pos:line="12" pos:column="57"/></operator> <literal type="number" pos:line="12" pos:column="52">3<pos:position pos:line="12" pos:column="53"/></literal><operator pos:line="12" pos:column="53">)<pos:position pos:line="12" pos:column="54"/></operator><operator pos:line="12" pos:column="54">)<pos:position pos:line="12" pos:column="55"/></operator>
   <operator pos:line="13" pos:column="4">&lt;<pos:position pos:line="13" pos:column="8"/></operator> <operator pos:line="13" pos:column="6">(<pos:position pos:line="13" pos:column="7"/></operator><operator pos:line="13" pos:column="7">(<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">uint32_t<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">)<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">inputLen<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">&lt;&lt;<pos:position pos:line="13" pos:column="34"/></operator> <literal type="number" pos:line="13" pos:column="29">3<pos:position pos:line="13" pos:column="30"/></literal><operator pos:line="13" pos:column="30">)<pos:position pos:line="13" pos:column="31"/></operator></expr>)<pos:position pos:line="13" pos:column="32"/></condition><then pos:line="13" pos:column="32">
 <block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="2">context<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">-&gt;<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="11">count<pos:position pos:line="14" pos:column="16"/></name><index pos:line="14" pos:column="16">[<expr><literal type="number" pos:line="14" pos:column="17">1<pos:position pos:line="14" pos:column="18"/></literal></expr>]<pos:position pos:line="14" pos:column="19"/></index></name><operator pos:line="14" pos:column="19">++<pos:position pos:line="14" pos:column="21"/></operator></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">context<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">count<pos:position pos:line="15" pos:column="17"/></name><index pos:line="15" pos:column="17">[<expr><literal type="number" pos:line="15" pos:column="18">1<pos:position pos:line="15" pos:column="19"/></literal></expr>]<pos:position pos:line="15" pos:column="20"/></index></name> <operator pos:line="15" pos:column="21">+=<pos:position pos:line="15" pos:column="23"/></operator> <operator pos:line="15" pos:column="24">(<pos:position pos:line="15" pos:column="25"/></operator><operator pos:line="15" pos:column="25">(<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="26">uint32_t<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">)<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="35">inputLen<pos:position pos:line="15" pos:column="43"/></name> <operator pos:line="15" pos:column="44">&gt;&gt;<pos:position pos:line="15" pos:column="49"/></operator> <literal type="number" pos:line="15" pos:column="47">29<pos:position pos:line="15" pos:column="49"/></literal><operator pos:line="15" pos:column="49">)<pos:position pos:line="15" pos:column="50"/></operator></expr>;<pos:position pos:line="15" pos:column="51"/></expr_stmt>

  <expr_stmt><expr><name pos:line="17" pos:column="3">partLen<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <literal type="number" pos:line="17" pos:column="13">64<pos:position pos:line="17" pos:column="15"/></literal> <operator pos:line="17" pos:column="16">-<pos:position pos:line="17" pos:column="17"/></operator> <name pos:line="17" pos:column="18">index<pos:position pos:line="17" pos:column="23"/></name></expr>;<pos:position pos:line="17" pos:column="24"/></expr_stmt>

  <comment type="block" pos:line="19" pos:column="3">/* Transform as many times as possible.
*/</comment>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">inputLen<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">&gt;=<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="19">partLen<pos:position pos:line="21" pos:column="26"/></name></expr>)<pos:position pos:line="21" pos:column="27"/></condition><then pos:line="21" pos:column="27"> <block pos:line="21" pos:column="28">{
 <expr_stmt><expr><call><name pos:line="22" pos:column="2">MD5_memcpy<pos:position pos:line="22" pos:column="12"/></name>
   <argument_list pos:line="23" pos:column="4">(<argument><expr><operator pos:line="23" pos:column="5">(<pos:position pos:line="23" pos:column="6"/></operator><name pos:line="23" pos:column="6">POINTER<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">)<pos:position pos:line="23" pos:column="14"/></operator><operator pos:line="23" pos:column="14">&amp;<pos:position pos:line="23" pos:column="19"/></operator><name><name pos:line="23" pos:column="15">context<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">-&gt;<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="24">buffer<pos:position pos:line="23" pos:column="30"/></name><index pos:line="23" pos:column="30">[<expr><name pos:line="23" pos:column="31">index<pos:position pos:line="23" pos:column="36"/></name></expr>]<pos:position pos:line="23" pos:column="37"/></index></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="39">(<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="40">POINTER<pos:position pos:line="23" pos:column="47"/></name><operator pos:line="23" pos:column="47">)<pos:position pos:line="23" pos:column="48"/></operator><name pos:line="23" pos:column="48">input<pos:position pos:line="23" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="55">partLen<pos:position pos:line="23" pos:column="62"/></name></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="64"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="24" pos:column="2">MD5Transform<pos:position pos:line="24" pos:column="14"/></name> <argument_list pos:line="24" pos:column="15">(<argument><expr><name><name pos:line="24" pos:column="16">context<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">-&gt;<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="25">state<pos:position pos:line="24" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="32">context<pos:position pos:line="24" pos:column="39"/></name><operator pos:line="24" pos:column="39">-&gt;<pos:position pos:line="24" pos:column="44"/></operator><name pos:line="24" pos:column="41">buffer<pos:position pos:line="24" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>

 <for pos:line="26" pos:column="2">for <control pos:line="26" pos:column="6">(<init><expr><name pos:line="26" pos:column="7">i<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator> <name pos:line="26" pos:column="11">partLen<pos:position pos:line="26" pos:column="18"/></name></expr>;<pos:position pos:line="26" pos:column="19"/></init> <condition><expr><name pos:line="26" pos:column="20">i<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">+<pos:position pos:line="26" pos:column="23"/></operator> <literal type="number" pos:line="26" pos:column="24">63<pos:position pos:line="26" pos:column="26"/></literal> <operator pos:line="26" pos:column="27">&lt;<pos:position pos:line="26" pos:column="31"/></operator> <name pos:line="26" pos:column="29">inputLen<pos:position pos:line="26" pos:column="37"/></name></expr>;<pos:position pos:line="26" pos:column="38"/></condition> <incr><expr><name pos:line="26" pos:column="39">i<pos:position pos:line="26" pos:column="40"/></name> <operator pos:line="26" pos:column="41">+=<pos:position pos:line="26" pos:column="43"/></operator> <literal type="number" pos:line="26" pos:column="44">64<pos:position pos:line="26" pos:column="46"/></literal></expr></incr>)<pos:position pos:line="26" pos:column="47"/></control>
   <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="4">MD5Transform<pos:position pos:line="27" pos:column="16"/></name> <argument_list pos:line="27" pos:column="17">(<argument><expr><name><name pos:line="27" pos:column="18">context<pos:position pos:line="27" pos:column="25"/></name><operator pos:line="27" pos:column="25">-&gt;<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="27">state<pos:position pos:line="27" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="34">&amp;<pos:position pos:line="27" pos:column="39"/></operator><name><name pos:line="27" pos:column="35">input<pos:position pos:line="27" pos:column="40"/></name><index pos:line="27" pos:column="40">[<expr><name pos:line="27" pos:column="41">i<pos:position pos:line="27" pos:column="42"/></name></expr>]<pos:position pos:line="27" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="45"/></expr_stmt></block></for>

 <expr_stmt><expr><name pos:line="29" pos:column="2">index<pos:position pos:line="29" pos:column="7"/></name> <operator pos:line="29" pos:column="8">=<pos:position pos:line="29" pos:column="9"/></operator> <literal type="number" pos:line="29" pos:column="10">0<pos:position pos:line="29" pos:column="11"/></literal></expr>;<pos:position pos:line="29" pos:column="12"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></then>
  <else pos:line="31" pos:column="3">else
 <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="2">i<pos:position pos:line="32" pos:column="3"/></name> <operator pos:line="32" pos:column="4">=<pos:position pos:line="32" pos:column="5"/></operator> <literal type="number" pos:line="32" pos:column="6">0<pos:position pos:line="32" pos:column="7"/></literal></expr>;<pos:position pos:line="32" pos:column="8"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="34" pos:column="3">/* Buffer remaining input */</comment>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">MD5_memcpy<pos:position pos:line="35" pos:column="13"/></name>
 <argument_list pos:line="36" pos:column="2">(<argument><expr><operator pos:line="36" pos:column="3">(<pos:position pos:line="36" pos:column="4"/></operator><name pos:line="36" pos:column="4">POINTER<pos:position pos:line="36" pos:column="11"/></name><operator pos:line="36" pos:column="11">)<pos:position pos:line="36" pos:column="12"/></operator><operator pos:line="36" pos:column="12">&amp;<pos:position pos:line="36" pos:column="17"/></operator><name><name pos:line="36" pos:column="13">context<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">-&gt;<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="22">buffer<pos:position pos:line="36" pos:column="28"/></name><index pos:line="36" pos:column="28">[<expr><name pos:line="36" pos:column="29">index<pos:position pos:line="36" pos:column="34"/></name></expr>]<pos:position pos:line="36" pos:column="35"/></index></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="37">(<pos:position pos:line="36" pos:column="38"/></operator><name pos:line="36" pos:column="38">POINTER<pos:position pos:line="36" pos:column="45"/></name><operator pos:line="36" pos:column="45">)<pos:position pos:line="36" pos:column="46"/></operator><operator pos:line="36" pos:column="46">&amp;<pos:position pos:line="36" pos:column="51"/></operator><name><name pos:line="36" pos:column="47">input<pos:position pos:line="36" pos:column="52"/></name><index pos:line="36" pos:column="52">[<expr><name pos:line="36" pos:column="53">i<pos:position pos:line="36" pos:column="54"/></name></expr>]<pos:position pos:line="36" pos:column="55"/></index></name></expr></argument>,
  <argument><expr><name pos:line="37" pos:column="3">inputLen<pos:position pos:line="37" pos:column="11"/></name><operator pos:line="37" pos:column="11">-<pos:position pos:line="37" pos:column="12"/></operator><name pos:line="37" pos:column="12">i<pos:position pos:line="37" pos:column="13"/></name></expr></argument>)<pos:position pos:line="37" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="15"/></expr_stmt>
}<pos:position pos:line="38" pos:column="2"/></block></unit>

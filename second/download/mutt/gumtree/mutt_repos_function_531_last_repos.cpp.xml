<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_531_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mx_unlock_file<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><specifier pos:line="1" pos:column="21">const<pos:position pos:line="1" pos:column="26"/></specifier> <name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">path<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">int<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">fd<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">dot<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">USE_FCNTL<pos:position pos:line="3" pos:column="17"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">flock<pos:position pos:line="4" pos:column="15"/></name></name></type> <name pos:line="4" pos:column="16">unlockit<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><block pos:line="4" pos:column="27">{ <expr><name pos:line="4" pos:column="29">F_UNLCK<pos:position pos:line="4" pos:column="36"/></name></expr>, <expr><literal type="number" pos:line="4" pos:column="38">0<pos:position pos:line="4" pos:column="39"/></literal></expr>, <expr><literal type="number" pos:line="4" pos:column="41">0<pos:position pos:line="4" pos:column="42"/></literal></expr>, <expr><literal type="number" pos:line="4" pos:column="44">0<pos:position pos:line="4" pos:column="45"/></literal></expr>, <expr><literal type="number" pos:line="4" pos:column="47">0<pos:position pos:line="4" pos:column="48"/></literal></expr> }<pos:position pos:line="4" pos:column="50"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="51"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">memset<pos:position pos:line="6" pos:column="9"/></name> <argument_list pos:line="6" pos:column="10">(<argument><expr><operator pos:line="6" pos:column="11">&amp;<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="12">unlockit<pos:position pos:line="6" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="22">0<pos:position pos:line="6" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="25">sizeof <argument_list pos:line="6" pos:column="32">(<argument><expr pos:line="6" pos:column="33">struct <name pos:line="6" pos:column="40">flock<pos:position pos:line="6" pos:column="45"/></name></expr></argument>)<pos:position pos:line="6" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="7" pos:column="3">unlockit<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">.<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="12">l_type<pos:position pos:line="7" pos:column="18"/></name></name> <operator pos:line="7" pos:column="19">=<pos:position pos:line="7" pos:column="20"/></operator> <name pos:line="7" pos:column="21">F_UNLCK<pos:position pos:line="7" pos:column="28"/></name></expr>;<pos:position pos:line="7" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">unlockit<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">.<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="12">l_whence<pos:position pos:line="8" pos:column="20"/></name></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <name pos:line="8" pos:column="23">SEEK_SET<pos:position pos:line="8" pos:column="31"/></name></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">fcntl<pos:position pos:line="9" pos:column="8"/></name> <argument_list pos:line="9" pos:column="9">(<argument><expr><name pos:line="9" pos:column="10">fd<pos:position pos:line="9" pos:column="12"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="14">F_SETLK<pos:position pos:line="9" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="23">&amp;<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="24">unlockit<pos:position pos:line="9" pos:column="32"/></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">ifdef<pos:position pos:line="12" pos:column="7"/></cpp:directive> <name pos:line="12" pos:column="8">USE_FLOCK<pos:position pos:line="12" pos:column="17"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">flock<pos:position pos:line="13" pos:column="8"/></name> <argument_list pos:line="13" pos:column="9">(<argument><expr><name pos:line="13" pos:column="10">fd<pos:position pos:line="13" pos:column="12"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="14">LOCK_UN<pos:position pos:line="13" pos:column="21"/></name></expr></argument>)<pos:position pos:line="13" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">ifdef<pos:position pos:line="16" pos:column="7"/></cpp:directive> <name pos:line="16" pos:column="8">USE_DOTLOCK<pos:position pos:line="16" pos:column="19"/></name></cpp:ifdef>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">dot<pos:position pos:line="17" pos:column="10"/></name></expr>)<pos:position pos:line="17" pos:column="11"/></condition><then pos:line="17" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="5">undotlock_file<pos:position pos:line="18" pos:column="19"/></name> <argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">path<pos:position pos:line="18" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="27">fd<pos:position pos:line="18" pos:column="29"/></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt></block></then></if>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>
  
  <return pos:line="21" pos:column="3">return <expr><literal type="number" pos:line="21" pos:column="10">0<pos:position pos:line="21" pos:column="11"/></literal></expr>;<pos:position pos:line="21" pos:column="12"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1301_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">imap_open_mailbox_append<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">CONTEXT<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">ctx<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CONNECTION<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">conn<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">IMAP_DATA<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">idata<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">buf<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><name pos:line="5" pos:column="12">LONG_STRING<pos:position pos:line="5" pos:column="23"/></name></expr>]<pos:position pos:line="5" pos:column="24"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="5" pos:column="26">mbox<pos:position pos:line="5" pos:column="30"/></name><index pos:line="5" pos:column="30">[<expr><name pos:line="5" pos:column="31">LONG_STRING<pos:position pos:line="5" pos:column="42"/></name></expr>]<pos:position pos:line="5" pos:column="43"/></index></name></decl>;<pos:position pos:line="5" pos:column="44"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">mailbox<pos:position pos:line="6" pos:column="15"/></name><index pos:line="6" pos:column="15">[<expr><name pos:line="6" pos:column="16">LONG_STRING<pos:position pos:line="6" pos:column="27"/></name></expr>]<pos:position pos:line="6" pos:column="28"/></index></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">r<pos:position pos:line="7" pos:column="8"/></name></decl>;<pos:position pos:line="7" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">IMAP_MBOX<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">mx<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><call><name pos:line="10" pos:column="7">imap_parse_path<pos:position pos:line="10" pos:column="22"/></name> <argument_list pos:line="10" pos:column="23">(<argument><expr><name><name pos:line="10" pos:column="24">ctx<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">-&gt;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="29">path<pos:position pos:line="10" pos:column="33"/></name></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="35">&amp;<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="36">mx<pos:position pos:line="10" pos:column="38"/></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="40"/></condition><then pos:line="10" pos:column="40">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">-<pos:position pos:line="11" pos:column="13"/></operator><literal type="number" pos:line="11" pos:column="13">1<pos:position pos:line="11" pos:column="14"/></literal></expr>;<pos:position pos:line="11" pos:column="15"/></return></block></then></if>

  <comment type="block" pos:line="13" pos:column="3">/* in APPEND mode, we appear to hijack an existing IMAP connection -
   * ctx is brand new and mostly empty */</comment>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><operator pos:line="16" pos:column="7">!<pos:position pos:line="16" pos:column="8"/></operator><operator pos:line="16" pos:column="8">(<pos:position pos:line="16" pos:column="9"/></operator><name pos:line="16" pos:column="9">idata<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <call><name pos:line="16" pos:column="17">imap_conn_find<pos:position pos:line="16" pos:column="31"/></name> <argument_list pos:line="16" pos:column="32">(<argument><expr><operator pos:line="16" pos:column="33">&amp;<pos:position pos:line="16" pos:column="38"/></operator><operator pos:line="16" pos:column="34">(<pos:position pos:line="16" pos:column="35"/></operator><name><name pos:line="16" pos:column="35">mx<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">.<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="38">account<pos:position pos:line="16" pos:column="45"/></name></name><operator pos:line="16" pos:column="45">)<pos:position pos:line="16" pos:column="46"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="48">0<pos:position pos:line="16" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="50"/></argument_list></call><operator pos:line="16" pos:column="50">)<pos:position pos:line="16" pos:column="51"/></operator></expr>)<pos:position pos:line="16" pos:column="52"/></condition><then pos:line="16" pos:column="52">
    <block type="pseudo"><goto pos:line="17" pos:column="5">goto <name pos:line="17" pos:column="10">fail<pos:position pos:line="17" pos:column="14"/></name>;<pos:position pos:line="17" pos:column="15"/></goto></block></then></if>
  <expr_stmt><expr><name pos:line="18" pos:column="3">conn<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <name><name pos:line="18" pos:column="10">idata<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-&gt;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="17">conn<pos:position pos:line="18" pos:column="21"/></name></name></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="20" pos:column="3">ctx<pos:position pos:line="20" pos:column="6"/></name><operator pos:line="20" pos:column="6">-&gt;<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="8">magic<pos:position pos:line="20" pos:column="13"/></name></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <name pos:line="20" pos:column="16">M_IMAP<pos:position pos:line="20" pos:column="22"/></name></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">ctx<pos:position pos:line="21" pos:column="6"/></name><operator pos:line="21" pos:column="6">-&gt;<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="8">data<pos:position pos:line="21" pos:column="12"/></name></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <operator pos:line="21" pos:column="15">(<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="16">void<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">*<pos:position pos:line="21" pos:column="22"/></operator><operator pos:line="21" pos:column="22">)<pos:position pos:line="21" pos:column="23"/></operator> <name pos:line="21" pos:column="24">idata<pos:position pos:line="21" pos:column="29"/></name></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>

  <comment type="block" pos:line="23" pos:column="3">/* check mailbox existance */</comment>

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">imap_fix_path<pos:position pos:line="25" pos:column="16"/></name> <argument_list pos:line="25" pos:column="17">(<argument><expr><name pos:line="25" pos:column="18">idata<pos:position pos:line="25" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="25">mx<pos:position pos:line="25" pos:column="27"/></name><operator pos:line="25" pos:column="27">.<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="28">mbox<pos:position pos:line="25" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">mailbox<pos:position pos:line="25" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="43">sizeof <argument_list pos:line="25" pos:column="50">(<argument><expr><name pos:line="25" pos:column="51">mailbox<pos:position pos:line="25" pos:column="58"/></name></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="61"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">imap_munge_mbox_name<pos:position pos:line="27" pos:column="23"/></name> <argument_list pos:line="27" pos:column="24">(<argument><expr><name pos:line="27" pos:column="25">mbox<pos:position pos:line="27" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="31">sizeof <argument_list pos:line="27" pos:column="38">(<argument><expr><name pos:line="27" pos:column="39">mbox<pos:position pos:line="27" pos:column="43"/></name></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="27" pos:column="46">mailbox<pos:position pos:line="27" pos:column="53"/></name></expr></argument>)<pos:position pos:line="27" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="55"/></expr_stmt>
				
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><call><name pos:line="29" pos:column="7">mutt_bit_isset<pos:position pos:line="29" pos:column="21"/></name><argument_list pos:line="29" pos:column="21">(<argument><expr><name><name pos:line="29" pos:column="22">idata<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">-&gt;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="29">capabilities<pos:position pos:line="29" pos:column="41"/></name></name></expr></argument>,<argument><expr><name pos:line="29" pos:column="42">IMAP4REV1<pos:position pos:line="29" pos:column="51"/></name></expr></argument>)<pos:position pos:line="29" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="53"/></condition><then pos:line="29" pos:column="53">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="5">snprintf<pos:position pos:line="30" pos:column="13"/></name> <argument_list pos:line="30" pos:column="14">(<argument><expr><name pos:line="30" pos:column="15">buf<pos:position pos:line="30" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="20">sizeof <argument_list pos:line="30" pos:column="27">(<argument><expr><name pos:line="30" pos:column="28">buf<pos:position pos:line="30" pos:column="31"/></name></expr></argument>)<pos:position pos:line="30" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="34">"STATUS %s (UIDVALIDITY)"<pos:position pos:line="30" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="61">mbox<pos:position pos:line="30" pos:column="65"/></name></expr></argument>)<pos:position pos:line="30" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="67"/></expr_stmt></block></then>
  <elseif pos:line="31" pos:column="3">else <if pos:line="31" pos:column="8">if <condition pos:line="31" pos:column="11">(<expr><call><name pos:line="31" pos:column="12">mutt_bit_isset<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><name><name pos:line="31" pos:column="27">idata<pos:position pos:line="31" pos:column="32"/></name><operator pos:line="31" pos:column="32">-&gt;<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="34">capabilities<pos:position pos:line="31" pos:column="46"/></name></name></expr></argument>,<argument><expr><name pos:line="31" pos:column="47">STATUS<pos:position pos:line="31" pos:column="53"/></name></expr></argument>)<pos:position pos:line="31" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="55"/></condition><then pos:line="31" pos:column="55">
    <comment type="block" pos:line="32" pos:column="5">/* We have no idea what the other guy wants. UW imapd 8.3 wants this
     * (but it does not work if another mailbox is selected) */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="5">snprintf<pos:position pos:line="34" pos:column="13"/></name> <argument_list pos:line="34" pos:column="14">(<argument><expr><name pos:line="34" pos:column="15">buf<pos:position pos:line="34" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="20">sizeof <argument_list pos:line="34" pos:column="27">(<argument><expr><name pos:line="34" pos:column="28">buf<pos:position pos:line="34" pos:column="31"/></name></expr></argument>)<pos:position pos:line="34" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="34">"STATUS %s (UID-VALIDITY)"<pos:position pos:line="34" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="62">mbox<pos:position pos:line="34" pos:column="66"/></name></expr></argument>)<pos:position pos:line="34" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="68"/></expr_stmt></block></then></if></elseif>
  <else pos:line="35" pos:column="3">else
  <block pos:line="36" pos:column="3">{
    <comment type="block" pos:line="37" pos:column="5">/* STATUS not supported */</comment>
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">mutt_message<pos:position pos:line="38" pos:column="17"/></name></type> <name pos:line="38" pos:column="18">_<pos:position pos:line="38" pos:column="19"/></name><argument_list pos:line="38" pos:column="19">(<argument><expr><literal type="string" pos:line="38" pos:column="20">"Unable to append to IMAP mailboxes at this server"<pos:position pos:line="38" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="72"/></argument_list></decl>;<pos:position pos:line="38" pos:column="73"/></decl_stmt>

    <goto pos:line="40" pos:column="5">goto <name pos:line="40" pos:column="10">fail<pos:position pos:line="40" pos:column="14"/></name>;<pos:position pos:line="40" pos:column="15"/></goto>
  }<pos:position pos:line="41" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name pos:line="43" pos:column="3">r<pos:position pos:line="43" pos:column="4"/></name> <operator pos:line="43" pos:column="5">=<pos:position pos:line="43" pos:column="6"/></operator> <call><name pos:line="43" pos:column="7">imap_exec<pos:position pos:line="43" pos:column="16"/></name> <argument_list pos:line="43" pos:column="17">(<argument><expr><name pos:line="43" pos:column="18">idata<pos:position pos:line="43" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="25">buf<pos:position pos:line="43" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="30">IMAP_CMD_FAIL_OK<pos:position pos:line="43" pos:column="46"/></name></expr></argument>)<pos:position pos:line="43" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="48"/></expr_stmt>
  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><name pos:line="44" pos:column="7">r<pos:position pos:line="44" pos:column="8"/></name> <operator pos:line="44" pos:column="9">==<pos:position pos:line="44" pos:column="11"/></operator> <operator pos:line="44" pos:column="12">-<pos:position pos:line="44" pos:column="13"/></operator><literal type="number" pos:line="44" pos:column="13">2<pos:position pos:line="44" pos:column="14"/></literal></expr>)<pos:position pos:line="44" pos:column="15"/></condition><then pos:line="44" pos:column="15">
  <block pos:line="45" pos:column="3">{
    <comment type="block" pos:line="46" pos:column="5">/* command failed cause folder doesn't exist */</comment>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">snprintf<pos:position pos:line="47" pos:column="13"/></name> <argument_list pos:line="47" pos:column="14">(<argument><expr><name pos:line="47" pos:column="15">buf<pos:position pos:line="47" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="20">sizeof <argument_list pos:line="47" pos:column="27">(<argument><expr><name pos:line="47" pos:column="28">buf<pos:position pos:line="47" pos:column="31"/></name></expr></argument>)<pos:position pos:line="47" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="34">_<pos:position pos:line="47" pos:column="35"/></name><argument_list pos:line="47" pos:column="35">(<argument><expr><literal type="string" pos:line="47" pos:column="36">"Create %s?"<pos:position pos:line="47" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="47" pos:column="51">mailbox<pos:position pos:line="47" pos:column="58"/></name></expr></argument>)<pos:position pos:line="47" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="60"/></expr_stmt>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><call><name pos:line="48" pos:column="9">option<pos:position pos:line="48" pos:column="15"/></name> <argument_list pos:line="48" pos:column="16">(<argument><expr><name pos:line="48" pos:column="17">OPTCONFIRMCREATE<pos:position pos:line="48" pos:column="33"/></name></expr></argument>)<pos:position pos:line="48" pos:column="34"/></argument_list></call> <operator pos:line="48" pos:column="35">&amp;&amp;<pos:position pos:line="48" pos:column="45"/></operator> <call><name pos:line="48" pos:column="38">mutt_yesorno<pos:position pos:line="48" pos:column="50"/></name> <argument_list pos:line="48" pos:column="51">(<argument><expr><name pos:line="48" pos:column="52">buf<pos:position pos:line="48" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="57">1<pos:position pos:line="48" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="59"/></argument_list></call> <operator pos:line="48" pos:column="60">&lt;<pos:position pos:line="48" pos:column="64"/></operator> <literal type="number" pos:line="48" pos:column="62">1<pos:position pos:line="48" pos:column="63"/></literal></expr>)<pos:position pos:line="48" pos:column="64"/></condition><then pos:line="48" pos:column="64">
      <block type="pseudo"><goto pos:line="49" pos:column="7">goto <name pos:line="49" pos:column="12">fail<pos:position pos:line="49" pos:column="16"/></name>;<pos:position pos:line="49" pos:column="17"/></goto></block></then></if>

    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><call><name pos:line="51" pos:column="9">imap_create_mailbox<pos:position pos:line="51" pos:column="28"/></name> <argument_list pos:line="51" pos:column="29">(<argument><expr><name pos:line="51" pos:column="30">idata<pos:position pos:line="51" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="37">mailbox<pos:position pos:line="51" pos:column="44"/></name></expr></argument>)<pos:position pos:line="51" pos:column="45"/></argument_list></call> <operator pos:line="51" pos:column="46">&lt;<pos:position pos:line="51" pos:column="50"/></operator> <literal type="number" pos:line="51" pos:column="48">0<pos:position pos:line="51" pos:column="49"/></literal></expr>)<pos:position pos:line="51" pos:column="50"/></condition><then pos:line="51" pos:column="50">
      <block type="pseudo"><goto pos:line="52" pos:column="7">goto <name pos:line="52" pos:column="12">fail<pos:position pos:line="52" pos:column="16"/></name>;<pos:position pos:line="52" pos:column="17"/></goto></block></then></if>
  }<pos:position pos:line="53" pos:column="4"/></block></then>
  <elseif pos:line="54" pos:column="3">else <if pos:line="54" pos:column="8">if <condition pos:line="54" pos:column="11">(<expr><name pos:line="54" pos:column="12">r<pos:position pos:line="54" pos:column="13"/></name> <operator pos:line="54" pos:column="14">==<pos:position pos:line="54" pos:column="16"/></operator> <operator pos:line="54" pos:column="17">-<pos:position pos:line="54" pos:column="18"/></operator><literal type="number" pos:line="54" pos:column="18">1<pos:position pos:line="54" pos:column="19"/></literal></expr>)<pos:position pos:line="54" pos:column="20"/></condition><then pos:line="54" pos:column="20">
    <comment type="block" pos:line="55" pos:column="5">/* Hmm, some other failure */</comment>
    <block type="pseudo"><goto pos:line="56" pos:column="5">goto <name pos:line="56" pos:column="10">fail<pos:position pos:line="56" pos:column="14"/></name>;<pos:position pos:line="56" pos:column="15"/></goto></block></then></if></elseif></if>

  <expr_stmt><expr><call><name pos:line="58" pos:column="3">FREE<pos:position pos:line="58" pos:column="7"/></name> <argument_list pos:line="58" pos:column="8">(<argument><expr><operator pos:line="58" pos:column="9">&amp;<pos:position pos:line="58" pos:column="14"/></operator><name><name pos:line="58" pos:column="10">mx<pos:position pos:line="58" pos:column="12"/></name><operator pos:line="58" pos:column="12">.<pos:position pos:line="58" pos:column="13"/></operator><name pos:line="58" pos:column="13">mbox<pos:position pos:line="58" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="19"/></expr_stmt>
  <return pos:line="59" pos:column="3">return <expr><literal type="number" pos:line="59" pos:column="10">0<pos:position pos:line="59" pos:column="11"/></literal></expr>;<pos:position pos:line="59" pos:column="12"/></return>

 <label><name pos:line="61" pos:column="2">fail<pos:position pos:line="61" pos:column="6"/></name>:<pos:position pos:line="61" pos:column="7"/></label>
  <expr_stmt><expr><call><name pos:line="62" pos:column="3">FREE<pos:position pos:line="62" pos:column="7"/></name> <argument_list pos:line="62" pos:column="8">(<argument><expr><operator pos:line="62" pos:column="9">&amp;<pos:position pos:line="62" pos:column="14"/></operator><name><name pos:line="62" pos:column="10">mx<pos:position pos:line="62" pos:column="12"/></name><operator pos:line="62" pos:column="12">.<pos:position pos:line="62" pos:column="13"/></operator><name pos:line="62" pos:column="13">mbox<pos:position pos:line="62" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="19"/></expr_stmt>
  <return pos:line="63" pos:column="3">return <expr><operator pos:line="63" pos:column="10">-<pos:position pos:line="63" pos:column="11"/></operator><literal type="number" pos:line="63" pos:column="11">1<pos:position pos:line="63" pos:column="12"/></literal></expr>;<pos:position pos:line="63" pos:column="13"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_557_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_parse_unscore<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">BUFFER<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">buf<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">BUFFER<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">s<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">unsigned<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">long<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">data<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="69">BUFFER<pos:position pos:line="1" pos:column="75"/></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">err<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">SCORE<pos:position pos:line="3" pos:column="8"/></name> <modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">tmp<pos:position pos:line="3" pos:column="13"/></name></decl>, <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="16">last<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><name pos:line="3" pos:column="23">NULL<pos:position pos:line="3" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>

  <while pos:line="5" pos:column="3">while <condition pos:line="5" pos:column="9">(<expr><call><name pos:line="5" pos:column="10">MoreArgs<pos:position pos:line="5" pos:column="18"/></name> <argument_list pos:line="5" pos:column="19">(<argument><expr><name pos:line="5" pos:column="20">s<pos:position pos:line="5" pos:column="21"/></name></expr></argument>)<pos:position pos:line="5" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="23"/></condition>
  <block pos:line="6" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">mutt_extract_token<pos:position pos:line="7" pos:column="23"/></name> <argument_list pos:line="7" pos:column="24">(<argument><expr><name pos:line="7" pos:column="25">buf<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="30">s<pos:position pos:line="7" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="33">0<pos:position pos:line="7" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><call><name pos:line="8" pos:column="10">mutt_strcmp<pos:position pos:line="8" pos:column="21"/></name> <argument_list pos:line="8" pos:column="22">(<argument><expr><literal type="string" pos:line="8" pos:column="23">"*"<pos:position pos:line="8" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="28">buf<pos:position pos:line="8" pos:column="31"/></name><operator pos:line="8" pos:column="31">-&gt;<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="33">data<pos:position pos:line="8" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="39"/></condition><then pos:line="8" pos:column="39">
    <block pos:line="9" pos:column="5">{
      <for pos:line="10" pos:column="7">for <control pos:line="10" pos:column="11">(<init><expr><name pos:line="10" pos:column="12">tmp<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <name pos:line="10" pos:column="18">Score<pos:position pos:line="10" pos:column="23"/></name></expr>;<pos:position pos:line="10" pos:column="24"/></init> <condition><expr><name pos:line="10" pos:column="25">tmp<pos:position pos:line="10" pos:column="28"/></name></expr>;<pos:position pos:line="10" pos:column="29"/></condition> <incr/>)<pos:position pos:line="10" pos:column="31"/></control>
      <block pos:line="11" pos:column="7">{
	<expr_stmt><expr><name pos:line="12" pos:column="9">last<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">tmp<pos:position pos:line="12" pos:column="19"/></name></expr>;<pos:position pos:line="12" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">tmp<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <name><name pos:line="13" pos:column="15">tmp<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">next<pos:position pos:line="13" pos:column="24"/></name></name></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">mutt_pattern_free<pos:position pos:line="14" pos:column="26"/></name> <argument_list pos:line="14" pos:column="27">(<argument><expr><operator pos:line="14" pos:column="28">&amp;<pos:position pos:line="14" pos:column="33"/></operator><name><name pos:line="14" pos:column="29">last<pos:position pos:line="14" pos:column="33"/></name><operator pos:line="14" pos:column="33">-&gt;<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="35">pat<pos:position pos:line="14" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">FREE<pos:position pos:line="15" pos:column="13"/></name> <argument_list pos:line="15" pos:column="14">(<argument><expr><operator pos:line="15" pos:column="15">&amp;<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="16">last<pos:position pos:line="15" pos:column="20"/></name></expr></argument>)<pos:position pos:line="15" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>
      }<pos:position pos:line="16" pos:column="8"/></block></for>
      <expr_stmt><expr><name pos:line="17" pos:column="7">Score<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <name pos:line="17" pos:column="15">NULL<pos:position pos:line="17" pos:column="19"/></name></expr>;<pos:position pos:line="17" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then>
    <else pos:line="19" pos:column="5">else
    <block pos:line="20" pos:column="5">{
      <for pos:line="21" pos:column="7">for <control pos:line="21" pos:column="11">(<init><expr><name pos:line="21" pos:column="12">tmp<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <name pos:line="21" pos:column="18">Score<pos:position pos:line="21" pos:column="23"/></name></expr>;<pos:position pos:line="21" pos:column="24"/></init> <condition><expr><name pos:line="21" pos:column="25">tmp<pos:position pos:line="21" pos:column="28"/></name></expr>;<pos:position pos:line="21" pos:column="29"/></condition> <incr><expr><name pos:line="21" pos:column="30">last<pos:position pos:line="21" pos:column="34"/></name> <operator pos:line="21" pos:column="35">=<pos:position pos:line="21" pos:column="36"/></operator> <name pos:line="21" pos:column="37">tmp<pos:position pos:line="21" pos:column="40"/></name></expr><operator pos:line="21" pos:column="40">,<pos:position pos:line="21" pos:column="41"/></operator> <expr><name pos:line="21" pos:column="42">tmp<pos:position pos:line="21" pos:column="45"/></name> <operator pos:line="21" pos:column="46">=<pos:position pos:line="21" pos:column="47"/></operator> <name><name pos:line="21" pos:column="48">tmp<pos:position pos:line="21" pos:column="51"/></name><operator pos:line="21" pos:column="51">-&gt;<pos:position pos:line="21" pos:column="56"/></operator><name pos:line="21" pos:column="53">next<pos:position pos:line="21" pos:column="57"/></name></name></expr></incr>)<pos:position pos:line="21" pos:column="58"/></control>
      <block pos:line="22" pos:column="7">{
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><call><name pos:line="23" pos:column="14">mutt_strcmp<pos:position pos:line="23" pos:column="25"/></name> <argument_list pos:line="23" pos:column="26">(<argument><expr><name><name pos:line="23" pos:column="27">buf<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">-&gt;<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="32">data<pos:position pos:line="23" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="38">tmp<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">-&gt;<pos:position pos:line="23" pos:column="46"/></operator><name pos:line="23" pos:column="43">str<pos:position pos:line="23" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="48"/></condition><then pos:line="23" pos:column="48">
	<block pos:line="24" pos:column="9">{
	  <if pos:line="25" pos:column="11">if <condition pos:line="25" pos:column="14">(<expr><name pos:line="25" pos:column="15">last<pos:position pos:line="25" pos:column="19"/></name></expr>)<pos:position pos:line="25" pos:column="20"/></condition><then pos:line="25" pos:column="20">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="26" pos:column="13">last<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">-&gt;<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="19">next<pos:position pos:line="26" pos:column="23"/></name></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <name><name pos:line="26" pos:column="26">tmp<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">-&gt;<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="31">next<pos:position pos:line="26" pos:column="35"/></name></name></expr>;<pos:position pos:line="26" pos:column="36"/></expr_stmt></block></then>
	  <else pos:line="27" pos:column="11">else
	    <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="13">Score<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">=<pos:position pos:line="28" pos:column="20"/></operator> <name><name pos:line="28" pos:column="21">tmp<pos:position pos:line="28" pos:column="24"/></name><operator pos:line="28" pos:column="24">-&gt;<pos:position pos:line="28" pos:column="29"/></operator><name pos:line="28" pos:column="26">next<pos:position pos:line="28" pos:column="30"/></name></name></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt></block></else></if>
	  <expr_stmt><expr><call><name pos:line="29" pos:column="11">mutt_pattern_free<pos:position pos:line="29" pos:column="28"/></name> <argument_list pos:line="29" pos:column="29">(<argument><expr><operator pos:line="29" pos:column="30">&amp;<pos:position pos:line="29" pos:column="35"/></operator><name><name pos:line="29" pos:column="31">tmp<pos:position pos:line="29" pos:column="34"/></name><operator pos:line="29" pos:column="34">-&gt;<pos:position pos:line="29" pos:column="39"/></operator><name pos:line="29" pos:column="36">pat<pos:position pos:line="29" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="30" pos:column="11">FREE<pos:position pos:line="30" pos:column="15"/></name> <argument_list pos:line="30" pos:column="16">(<argument><expr><operator pos:line="30" pos:column="17">&amp;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="18">tmp<pos:position pos:line="30" pos:column="21"/></name></expr></argument>)<pos:position pos:line="30" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt>
	  <comment type="block" pos:line="31" pos:column="11">/* there should only be one score per pattern, so we can stop here */</comment>
	  <break pos:line="32" pos:column="11">break;<pos:position pos:line="32" pos:column="17"/></break>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>
      }<pos:position pos:line="34" pos:column="8"/></block></for>
    }<pos:position pos:line="35" pos:column="6"/></block></else></if>
  }<pos:position pos:line="36" pos:column="4"/></block></while>
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">set_option<pos:position pos:line="37" pos:column="13"/></name> <argument_list pos:line="37" pos:column="14">(<argument><expr><name pos:line="37" pos:column="15">OPTNEEDRESCORE<pos:position pos:line="37" pos:column="29"/></name></expr></argument>)<pos:position pos:line="37" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt>
  <return pos:line="38" pos:column="3">return <expr><literal type="number" pos:line="38" pos:column="10">0<pos:position pos:line="38" pos:column="11"/></literal></expr>;<pos:position pos:line="38" pos:column="12"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_735_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">verify_one<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">BODY<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">sigbdy<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">STATE<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">s<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>,
                       <parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">tempfile<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">int<pos:position pos:line="2" pos:column="49"/></name></type> <name pos:line="2" pos:column="50">is_smime<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">badsig<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><operator pos:line="4" pos:column="16">-<pos:position pos:line="4" pos:column="17"/></operator><literal type="number" pos:line="4" pos:column="17">1<pos:position pos:line="4" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">anywarn<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><literal type="number" pos:line="5" pos:column="17">0<pos:position pos:line="5" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">err<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">gpgme_ctx_t<pos:position pos:line="7" pos:column="14"/></name></type> <name pos:line="7" pos:column="15">ctx<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">gpgme_data_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">signature<pos:position pos:line="8" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="27">message<pos:position pos:line="8" pos:column="34"/></name></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">signature<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <call><name pos:line="10" pos:column="15">file_to_data_object<pos:position pos:line="10" pos:column="34"/></name> <argument_list pos:line="10" pos:column="35">(<argument><expr><name><name pos:line="10" pos:column="36">s<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">-&gt;<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="39">fpin<pos:position pos:line="10" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="45">sigbdy<pos:position pos:line="10" pos:column="51"/></name><operator pos:line="10" pos:column="51">-&gt;<pos:position pos:line="10" pos:column="56"/></operator><name pos:line="10" pos:column="53">offset<pos:position pos:line="10" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="61">sigbdy<pos:position pos:line="10" pos:column="67"/></name><operator pos:line="10" pos:column="67">-&gt;<pos:position pos:line="10" pos:column="72"/></operator><name pos:line="10" pos:column="69">length<pos:position pos:line="10" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="77"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">!<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">signature<pos:position pos:line="11" pos:column="17"/></name></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">-<pos:position pos:line="12" pos:column="13"/></operator><literal type="number" pos:line="12" pos:column="13">1<pos:position pos:line="12" pos:column="14"/></literal></expr>;<pos:position pos:line="12" pos:column="15"/></return></block></then></if>

  <comment type="block" pos:line="14" pos:column="3">/* We need to tell gpgme about the encoding because the backend can't
     auto-detect plain base-64 encoding which is used by S/MIME. */</comment>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">is_smime<pos:position pos:line="16" pos:column="15"/></name></expr>)<pos:position pos:line="16" pos:column="16"/></condition><then pos:line="16" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="5">gpgme_data_set_encoding<pos:position pos:line="17" pos:column="28"/></name> <argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">signature<pos:position pos:line="17" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="41">GPGME_DATA_ENCODING_BASE64<pos:position pos:line="17" pos:column="67"/></name></expr></argument>)<pos:position pos:line="17" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="69"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="19" pos:column="3">err<pos:position pos:line="19" pos:column="6"/></name> <operator pos:line="19" pos:column="7">=<pos:position pos:line="19" pos:column="8"/></operator> <call><name pos:line="19" pos:column="9">gpgme_data_new_from_file<pos:position pos:line="19" pos:column="33"/></name> <argument_list pos:line="19" pos:column="34">(<argument><expr><operator pos:line="19" pos:column="35">&amp;<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="36">message<pos:position pos:line="19" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="45">tempfile<pos:position pos:line="19" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="55">1<pos:position pos:line="19" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="58"/></expr_stmt>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">err<pos:position pos:line="20" pos:column="10"/></name></expr>)<pos:position pos:line="20" pos:column="11"/></condition><then pos:line="20" pos:column="11"> 
    <block pos:line="21" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">gpgme_data_release<pos:position pos:line="22" pos:column="25"/></name> <argument_list pos:line="22" pos:column="26">(<argument><expr><name pos:line="22" pos:column="27">signature<pos:position pos:line="22" pos:column="36"/></name></expr></argument>)<pos:position pos:line="22" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">mutt_error<pos:position pos:line="23" pos:column="17"/></name> <argument_list pos:line="23" pos:column="18">(<argument><expr><call><name pos:line="23" pos:column="19">_<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><literal type="string" pos:line="23" pos:column="21">"error allocating data object: %s\n"<pos:position pos:line="23" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="60">gpgme_strerror<pos:position pos:line="23" pos:column="74"/></name> <argument_list pos:line="23" pos:column="75">(<argument><expr><name pos:line="23" pos:column="76">err<pos:position pos:line="23" pos:column="79"/></name></expr></argument>)<pos:position pos:line="23" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="82"/></expr_stmt>
      <return pos:line="24" pos:column="7">return <expr><operator pos:line="24" pos:column="14">-<pos:position pos:line="24" pos:column="15"/></operator><literal type="number" pos:line="24" pos:column="15">1<pos:position pos:line="24" pos:column="16"/></literal></expr>;<pos:position pos:line="24" pos:column="17"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
  <expr_stmt><expr><name pos:line="26" pos:column="3">ctx<pos:position pos:line="26" pos:column="6"/></name> <operator pos:line="26" pos:column="7">=<pos:position pos:line="26" pos:column="8"/></operator> <call><name pos:line="26" pos:column="9">create_gpgme_context<pos:position pos:line="26" pos:column="29"/></name> <argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">is_smime<pos:position pos:line="26" pos:column="39"/></name></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt>

  <comment type="block" pos:line="28" pos:column="3">/* Note: We don't need a current time output because GPGME avoids
     such an attack by separating the meta information from the
     data. */</comment>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">state_attach_puts<pos:position pos:line="31" pos:column="20"/></name> <argument_list pos:line="31" pos:column="21">(<argument><expr><call><name pos:line="31" pos:column="22">_<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">(<argument><expr><literal type="string" pos:line="31" pos:column="24">"[-- Begin signature information --]\n"<pos:position pos:line="31" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="31" pos:column="66">s<pos:position pos:line="31" pos:column="67"/></name></expr></argument>)<pos:position pos:line="31" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="69"/></expr_stmt>

  <expr_stmt><expr><name pos:line="33" pos:column="3">err<pos:position pos:line="33" pos:column="6"/></name> <operator pos:line="33" pos:column="7">=<pos:position pos:line="33" pos:column="8"/></operator> <call><name pos:line="33" pos:column="9">gpgme_op_verify<pos:position pos:line="33" pos:column="24"/></name> <argument_list pos:line="33" pos:column="25">(<argument><expr><name pos:line="33" pos:column="26">ctx<pos:position pos:line="33" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="31">signature<pos:position pos:line="33" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="42">message<pos:position pos:line="33" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="51">NULL<pos:position pos:line="33" pos:column="55"/></name></expr></argument>)<pos:position pos:line="33" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="57"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">gpgme_data_release<pos:position pos:line="34" pos:column="21"/></name> <argument_list pos:line="34" pos:column="22">(<argument><expr><name pos:line="34" pos:column="23">message<pos:position pos:line="34" pos:column="30"/></name></expr></argument>)<pos:position pos:line="34" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">gpgme_data_release<pos:position pos:line="35" pos:column="21"/></name> <argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">signature<pos:position pos:line="35" pos:column="32"/></name></expr></argument>)<pos:position pos:line="35" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="37" pos:column="3">mutt_need_hard_redraw<pos:position pos:line="37" pos:column="24"/></name> <argument_list pos:line="37" pos:column="25">()<pos:position pos:line="37" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt>
  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><name pos:line="38" pos:column="7">err<pos:position pos:line="38" pos:column="10"/></name></expr>)<pos:position pos:line="38" pos:column="11"/></condition><then pos:line="38" pos:column="11">
    <block pos:line="39" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="40" pos:column="7">char<pos:position pos:line="40" pos:column="11"/></name></type> <name><name pos:line="40" pos:column="12">buf<pos:position pos:line="40" pos:column="15"/></name><index pos:line="40" pos:column="15">[<expr><literal type="number" pos:line="40" pos:column="16">200<pos:position pos:line="40" pos:column="19"/></literal></expr>]<pos:position pos:line="40" pos:column="20"/></index></name></decl>;<pos:position pos:line="40" pos:column="21"/></decl_stmt>
      
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">snprintf<pos:position pos:line="42" pos:column="15"/></name> <argument_list pos:line="42" pos:column="16">(<argument><expr><name pos:line="42" pos:column="17">buf<pos:position pos:line="42" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="22">sizeof<argument_list pos:line="42" pos:column="28">(<argument><expr><name pos:line="42" pos:column="29">buf<pos:position pos:line="42" pos:column="32"/></name></expr></argument>)<pos:position pos:line="42" pos:column="33"/></argument_list></sizeof><operator pos:line="42" pos:column="33">-<pos:position pos:line="42" pos:column="34"/></operator><literal type="number" pos:line="42" pos:column="34">1<pos:position pos:line="42" pos:column="35"/></literal></expr></argument>, 
                <argument><expr><call><name pos:line="43" pos:column="17">_<pos:position pos:line="43" pos:column="18"/></name><argument_list pos:line="43" pos:column="18">(<argument><expr><literal type="string" pos:line="43" pos:column="19">"Error: verification failed: %s\n"<pos:position pos:line="43" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="54"/></argument_list></call></expr></argument>,
                <argument><expr><call><name pos:line="44" pos:column="17">gpgme_strerror<pos:position pos:line="44" pos:column="31"/></name> <argument_list pos:line="44" pos:column="32">(<argument><expr><name pos:line="44" pos:column="33">err<pos:position pos:line="44" pos:column="36"/></name></expr></argument>)<pos:position pos:line="44" pos:column="37"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">state_puts<pos:position pos:line="45" pos:column="17"/></name> <argument_list pos:line="45" pos:column="18">(<argument><expr><name pos:line="45" pos:column="19">buf<pos:position pos:line="45" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="24">s<pos:position pos:line="45" pos:column="25"/></name></expr></argument>)<pos:position pos:line="45" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></then>
  <else pos:line="47" pos:column="3">else
    <block pos:line="48" pos:column="5">{ <comment type="block" pos:line="48" pos:column="7">/* Verification succeeded, see what the result is. */</comment>
      <decl_stmt><decl><type><name pos:line="49" pos:column="7">int<pos:position pos:line="49" pos:column="10"/></name></type> <name pos:line="49" pos:column="11">res<pos:position pos:line="49" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="49" pos:column="16">idx<pos:position pos:line="49" pos:column="19"/></name></decl>;<pos:position pos:line="49" pos:column="20"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="50" pos:column="7">int<pos:position pos:line="50" pos:column="10"/></name></type> <name pos:line="50" pos:column="11">anybad<pos:position pos:line="50" pos:column="17"/></name> <init pos:line="50" pos:column="18">= <expr><literal type="number" pos:line="50" pos:column="20">0<pos:position pos:line="50" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="50" pos:column="22"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="51" pos:column="7">gpgme_verify_result_t<pos:position pos:line="51" pos:column="28"/></name></type> <name pos:line="51" pos:column="29">verify_result<pos:position pos:line="51" pos:column="42"/></name></decl>;<pos:position pos:line="51" pos:column="43"/></decl_stmt>

      <if pos:line="53" pos:column="7">if <condition pos:line="53" pos:column="10">(<expr><name pos:line="53" pos:column="11">signature_key<pos:position pos:line="53" pos:column="24"/></name></expr>)<pos:position pos:line="53" pos:column="25"/></condition><then pos:line="53" pos:column="25">
	<block pos:line="54" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="55" pos:column="11">gpgme_key_unref<pos:position pos:line="55" pos:column="26"/></name> <argument_list pos:line="55" pos:column="27">(<argument><expr><name pos:line="55" pos:column="28">signature_key<pos:position pos:line="55" pos:column="41"/></name></expr></argument>)<pos:position pos:line="55" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="43"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="56" pos:column="11">signature_key<pos:position pos:line="56" pos:column="24"/></name> <operator pos:line="56" pos:column="25">=<pos:position pos:line="56" pos:column="26"/></operator> <name pos:line="56" pos:column="27">NULL<pos:position pos:line="56" pos:column="31"/></name></expr>;<pos:position pos:line="56" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="57" pos:column="10"/></block></then></if>

      <expr_stmt><expr><name pos:line="59" pos:column="7">verify_result<pos:position pos:line="59" pos:column="20"/></name> <operator pos:line="59" pos:column="21">=<pos:position pos:line="59" pos:column="22"/></operator> <call><name pos:line="59" pos:column="23">gpgme_op_verify_result<pos:position pos:line="59" pos:column="45"/></name> <argument_list pos:line="59" pos:column="46">(<argument><expr><name pos:line="59" pos:column="47">ctx<pos:position pos:line="59" pos:column="50"/></name></expr></argument>)<pos:position pos:line="59" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="52"/></expr_stmt>
      <if pos:line="60" pos:column="7">if <condition pos:line="60" pos:column="10">(<expr><name pos:line="60" pos:column="11">verify_result<pos:position pos:line="60" pos:column="24"/></name> <operator pos:line="60" pos:column="25">&amp;&amp;<pos:position pos:line="60" pos:column="35"/></operator> <name><name pos:line="60" pos:column="28">verify_result<pos:position pos:line="60" pos:column="41"/></name><operator pos:line="60" pos:column="41">-&gt;<pos:position pos:line="60" pos:column="46"/></operator><name pos:line="60" pos:column="43">signatures<pos:position pos:line="60" pos:column="53"/></name></name></expr>)<pos:position pos:line="60" pos:column="54"/></condition><then pos:line="60" pos:column="54">
      <block pos:line="61" pos:column="7">{
        <for pos:line="62" pos:column="9">for <control pos:line="62" pos:column="13">(<init><expr><name pos:line="62" pos:column="14">idx<pos:position pos:line="62" pos:column="17"/></name><operator pos:line="62" pos:column="17">=<pos:position pos:line="62" pos:column="18"/></operator><literal type="number" pos:line="62" pos:column="18">0<pos:position pos:line="62" pos:column="19"/></literal></expr>;<pos:position pos:line="62" pos:column="20"/></init> <condition><expr><operator pos:line="62" pos:column="21">(<pos:position pos:line="62" pos:column="22"/></operator><name pos:line="62" pos:column="22">res<pos:position pos:line="62" pos:column="25"/></name> <operator pos:line="62" pos:column="26">=<pos:position pos:line="62" pos:column="27"/></operator> <call><name pos:line="62" pos:column="28">show_one_sig_status<pos:position pos:line="62" pos:column="47"/></name> <argument_list pos:line="62" pos:column="48">(<argument><expr><name pos:line="62" pos:column="49">ctx<pos:position pos:line="62" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="54">idx<pos:position pos:line="62" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="59">s<pos:position pos:line="62" pos:column="60"/></name></expr></argument>)<pos:position pos:line="62" pos:column="61"/></argument_list></call><operator pos:line="62" pos:column="61">)<pos:position pos:line="62" pos:column="62"/></operator> <operator pos:line="62" pos:column="63">!=<pos:position pos:line="62" pos:column="65"/></operator> <operator pos:line="62" pos:column="66">-<pos:position pos:line="62" pos:column="67"/></operator><literal type="number" pos:line="62" pos:column="67">1<pos:position pos:line="62" pos:column="68"/></literal></expr>;<pos:position pos:line="62" pos:column="69"/></condition> <incr><expr><name pos:line="62" pos:column="70">idx<pos:position pos:line="62" pos:column="73"/></name><operator pos:line="62" pos:column="73">++<pos:position pos:line="62" pos:column="75"/></operator></expr></incr>)<pos:position pos:line="62" pos:column="76"/></control>
        <block pos:line="63" pos:column="9">{
          <if pos:line="64" pos:column="11">if <condition pos:line="64" pos:column="14">(<expr><name pos:line="64" pos:column="15">res<pos:position pos:line="64" pos:column="18"/></name> <operator pos:line="64" pos:column="19">==<pos:position pos:line="64" pos:column="21"/></operator> <literal type="number" pos:line="64" pos:column="22">1<pos:position pos:line="64" pos:column="23"/></literal></expr>)<pos:position pos:line="64" pos:column="24"/></condition><then pos:line="64" pos:column="24">
            <block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="13">anybad<pos:position pos:line="65" pos:column="19"/></name> <operator pos:line="65" pos:column="20">=<pos:position pos:line="65" pos:column="21"/></operator> <literal type="number" pos:line="65" pos:column="22">1<pos:position pos:line="65" pos:column="23"/></literal></expr>;<pos:position pos:line="65" pos:column="24"/></expr_stmt></block></then>
          <elseif pos:line="66" pos:column="11">else <if pos:line="66" pos:column="16">if <condition pos:line="66" pos:column="19">(<expr><name pos:line="66" pos:column="20">res<pos:position pos:line="66" pos:column="23"/></name> <operator pos:line="66" pos:column="24">==<pos:position pos:line="66" pos:column="26"/></operator> <literal type="number" pos:line="66" pos:column="27">2<pos:position pos:line="66" pos:column="28"/></literal></expr>)<pos:position pos:line="66" pos:column="29"/></condition><then pos:line="66" pos:column="29">
            <block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="13">anywarn<pos:position pos:line="67" pos:column="20"/></name> <operator pos:line="67" pos:column="21">=<pos:position pos:line="67" pos:column="22"/></operator> <literal type="number" pos:line="67" pos:column="23">2<pos:position pos:line="67" pos:column="24"/></literal></expr>;<pos:position pos:line="67" pos:column="25"/></expr_stmt></block></then></if></elseif></if>
        }<pos:position pos:line="68" pos:column="10"/></block></for>
        <if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><operator pos:line="69" pos:column="13">!<pos:position pos:line="69" pos:column="14"/></operator><name pos:line="69" pos:column="14">anybad<pos:position pos:line="69" pos:column="20"/></name></expr>)<pos:position pos:line="69" pos:column="21"/></condition><then pos:line="69" pos:column="21">
          <block type="pseudo"><expr_stmt><expr><name pos:line="70" pos:column="11">badsig<pos:position pos:line="70" pos:column="17"/></name> <operator pos:line="70" pos:column="18">=<pos:position pos:line="70" pos:column="19"/></operator> <literal type="number" pos:line="70" pos:column="20">0<pos:position pos:line="70" pos:column="21"/></literal></expr>;<pos:position pos:line="70" pos:column="22"/></expr_stmt></block></then></if>
      }<pos:position pos:line="71" pos:column="8"/></block></then></if>
    }<pos:position pos:line="72" pos:column="6"/></block></else></if>

  <if pos:line="74" pos:column="3">if <condition pos:line="74" pos:column="6">(<expr><operator pos:line="74" pos:column="7">!<pos:position pos:line="74" pos:column="8"/></operator><name pos:line="74" pos:column="8">badsig<pos:position pos:line="74" pos:column="14"/></name></expr>)<pos:position pos:line="74" pos:column="15"/></condition><then pos:line="74" pos:column="15">
    <block pos:line="75" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="76" pos:column="7">gpgme_verify_result_t<pos:position pos:line="76" pos:column="28"/></name></type> <name pos:line="76" pos:column="29">result<pos:position pos:line="76" pos:column="35"/></name></decl>;<pos:position pos:line="76" pos:column="36"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="77" pos:column="7">gpgme_sig_notation_t<pos:position pos:line="77" pos:column="27"/></name></type> <name pos:line="77" pos:column="28">notation<pos:position pos:line="77" pos:column="36"/></name></decl>;<pos:position pos:line="77" pos:column="37"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="78" pos:column="7">gpgme_signature_t<pos:position pos:line="78" pos:column="24"/></name></type> <name pos:line="78" pos:column="25">signature<pos:position pos:line="78" pos:column="34"/></name></decl>;<pos:position pos:line="78" pos:column="35"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="79" pos:column="7">int<pos:position pos:line="79" pos:column="10"/></name></type> <name pos:line="79" pos:column="11">non_pka_notations<pos:position pos:line="79" pos:column="28"/></name></decl>;<pos:position pos:line="79" pos:column="29"/></decl_stmt>

      <expr_stmt><expr><name pos:line="81" pos:column="7">result<pos:position pos:line="81" pos:column="13"/></name> <operator pos:line="81" pos:column="14">=<pos:position pos:line="81" pos:column="15"/></operator> <call><name pos:line="81" pos:column="16">gpgme_op_verify_result<pos:position pos:line="81" pos:column="38"/></name> <argument_list pos:line="81" pos:column="39">(<argument><expr><name pos:line="81" pos:column="40">ctx<pos:position pos:line="81" pos:column="43"/></name></expr></argument>)<pos:position pos:line="81" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="45"/></expr_stmt>
      <if pos:line="82" pos:column="7">if <condition pos:line="82" pos:column="10">(<expr><name pos:line="82" pos:column="11">result<pos:position pos:line="82" pos:column="17"/></name></expr>)<pos:position pos:line="82" pos:column="18"/></condition><then pos:line="82" pos:column="18">
      <block pos:line="83" pos:column="7">{
	<for pos:line="84" pos:column="9">for <control pos:line="84" pos:column="13">(<init><expr><name pos:line="84" pos:column="14">signature<pos:position pos:line="84" pos:column="23"/></name> <operator pos:line="84" pos:column="24">=<pos:position pos:line="84" pos:column="25"/></operator> <name><name pos:line="84" pos:column="26">result<pos:position pos:line="84" pos:column="32"/></name><operator pos:line="84" pos:column="32">-&gt;<pos:position pos:line="84" pos:column="37"/></operator><name pos:line="84" pos:column="34">signatures<pos:position pos:line="84" pos:column="44"/></name></name></expr>;<pos:position pos:line="84" pos:column="45"/></init> <condition><expr><name pos:line="84" pos:column="46">signature<pos:position pos:line="84" pos:column="55"/></name></expr>;<pos:position pos:line="84" pos:column="56"/></condition>
             <incr><expr><name pos:line="85" pos:column="14">signature<pos:position pos:line="85" pos:column="23"/></name> <operator pos:line="85" pos:column="24">=<pos:position pos:line="85" pos:column="25"/></operator> <name><name pos:line="85" pos:column="26">signature<pos:position pos:line="85" pos:column="35"/></name><operator pos:line="85" pos:column="35">-&gt;<pos:position pos:line="85" pos:column="40"/></operator><name pos:line="85" pos:column="37">next<pos:position pos:line="85" pos:column="41"/></name></name></expr></incr>)<pos:position pos:line="85" pos:column="42"/></control>
	<block pos:line="86" pos:column="9">{
	  <expr_stmt><expr><name pos:line="87" pos:column="11">non_pka_notations<pos:position pos:line="87" pos:column="28"/></name> <operator pos:line="87" pos:column="29">=<pos:position pos:line="87" pos:column="30"/></operator> <literal type="number" pos:line="87" pos:column="31">0<pos:position pos:line="87" pos:column="32"/></literal></expr>;<pos:position pos:line="87" pos:column="33"/></expr_stmt>
	  <for pos:line="88" pos:column="11">for <control pos:line="88" pos:column="15">(<init><expr><name pos:line="88" pos:column="16">notation<pos:position pos:line="88" pos:column="24"/></name> <operator pos:line="88" pos:column="25">=<pos:position pos:line="88" pos:column="26"/></operator> <name><name pos:line="88" pos:column="27">signature<pos:position pos:line="88" pos:column="36"/></name><operator pos:line="88" pos:column="36">-&gt;<pos:position pos:line="88" pos:column="41"/></operator><name pos:line="88" pos:column="38">notations<pos:position pos:line="88" pos:column="47"/></name></name></expr>;<pos:position pos:line="88" pos:column="48"/></init> <condition><expr><name pos:line="88" pos:column="49">notation<pos:position pos:line="88" pos:column="57"/></name></expr>;<pos:position pos:line="88" pos:column="58"/></condition>
	       <incr><expr><name pos:line="89" pos:column="16">notation<pos:position pos:line="89" pos:column="24"/></name> <operator pos:line="89" pos:column="25">=<pos:position pos:line="89" pos:column="26"/></operator> <name><name pos:line="89" pos:column="27">notation<pos:position pos:line="89" pos:column="35"/></name><operator pos:line="89" pos:column="35">-&gt;<pos:position pos:line="89" pos:column="40"/></operator><name pos:line="89" pos:column="37">next<pos:position pos:line="89" pos:column="41"/></name></name></expr></incr>)<pos:position pos:line="89" pos:column="42"/></control>
	    <block type="pseudo"><if pos:line="90" pos:column="13">if <condition pos:line="90" pos:column="16">(<expr><operator pos:line="90" pos:column="17">!<pos:position pos:line="90" pos:column="18"/></operator> <call><name pos:line="90" pos:column="19">is_pka_notation<pos:position pos:line="90" pos:column="34"/></name> <argument_list pos:line="90" pos:column="35">(<argument><expr><name pos:line="90" pos:column="36">notation<pos:position pos:line="90" pos:column="44"/></name></expr></argument>)<pos:position pos:line="90" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="46"/></condition><then pos:line="90" pos:column="46">
	      <block type="pseudo"><expr_stmt><expr><name pos:line="91" pos:column="15">non_pka_notations<pos:position pos:line="91" pos:column="32"/></name><operator pos:line="91" pos:column="32">++<pos:position pos:line="91" pos:column="34"/></operator></expr>;<pos:position pos:line="91" pos:column="35"/></expr_stmt></block></then></if></block></for>

	  <if pos:line="93" pos:column="11">if <condition pos:line="93" pos:column="14">(<expr><name pos:line="93" pos:column="15">non_pka_notations<pos:position pos:line="93" pos:column="32"/></name></expr>)<pos:position pos:line="93" pos:column="33"/></condition><then pos:line="93" pos:column="33">
	  <block pos:line="94" pos:column="11">{
	    <decl_stmt><decl><type><name pos:line="95" pos:column="13">char<pos:position pos:line="95" pos:column="17"/></name></type> <name><name pos:line="95" pos:column="18">buf<pos:position pos:line="95" pos:column="21"/></name><index pos:line="95" pos:column="21">[<expr><name pos:line="95" pos:column="22">SHORT_STRING<pos:position pos:line="95" pos:column="34"/></name></expr>]<pos:position pos:line="95" pos:column="35"/></index></name></decl>;<pos:position pos:line="95" pos:column="36"/></decl_stmt>
	    <expr_stmt><expr><call><name pos:line="96" pos:column="13">snprintf<pos:position pos:line="96" pos:column="21"/></name> <argument_list pos:line="96" pos:column="22">(<argument><expr><name pos:line="96" pos:column="23">buf<pos:position pos:line="96" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="96" pos:column="28">sizeof <argument_list pos:line="96" pos:column="35">(<argument><expr><name pos:line="96" pos:column="36">buf<pos:position pos:line="96" pos:column="39"/></name></expr></argument>)<pos:position pos:line="96" pos:column="40"/></argument_list></sizeof></expr></argument>,
		      <argument><expr><call><name pos:line="97" pos:column="23">_<pos:position pos:line="97" pos:column="24"/></name><argument_list pos:line="97" pos:column="24">(<argument><expr><literal type="string" pos:line="97" pos:column="25">"*** Begin Notation (signature by: %s) ***\n"<pos:position pos:line="97" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="71"/></argument_list></call></expr></argument>,
		      <argument><expr><name><name pos:line="98" pos:column="23">signature<pos:position pos:line="98" pos:column="32"/></name><operator pos:line="98" pos:column="32">-&gt;<pos:position pos:line="98" pos:column="37"/></operator><name pos:line="98" pos:column="34">fpr<pos:position pos:line="98" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="39"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="99" pos:column="13">state_puts<pos:position pos:line="99" pos:column="23"/></name> <argument_list pos:line="99" pos:column="24">(<argument><expr><name pos:line="99" pos:column="25">buf<pos:position pos:line="99" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="30">s<pos:position pos:line="99" pos:column="31"/></name></expr></argument>)<pos:position pos:line="99" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="33"/></expr_stmt>
	    <for pos:line="100" pos:column="13">for <control pos:line="100" pos:column="17">(<init><expr><name pos:line="100" pos:column="18">notation<pos:position pos:line="100" pos:column="26"/></name> <operator pos:line="100" pos:column="27">=<pos:position pos:line="100" pos:column="28"/></operator> <name><name pos:line="100" pos:column="29">signature<pos:position pos:line="100" pos:column="38"/></name><operator pos:line="100" pos:column="38">-&gt;<pos:position pos:line="100" pos:column="43"/></operator><name pos:line="100" pos:column="40">notations<pos:position pos:line="100" pos:column="49"/></name></name></expr>;<pos:position pos:line="100" pos:column="50"/></init> <condition><expr><name pos:line="100" pos:column="51">notation<pos:position pos:line="100" pos:column="59"/></name></expr>;<pos:position pos:line="100" pos:column="60"/></condition>
                 <incr><expr><name pos:line="101" pos:column="18">notation<pos:position pos:line="101" pos:column="26"/></name> <operator pos:line="101" pos:column="27">=<pos:position pos:line="101" pos:column="28"/></operator> <name><name pos:line="101" pos:column="29">notation<pos:position pos:line="101" pos:column="37"/></name><operator pos:line="101" pos:column="37">-&gt;<pos:position pos:line="101" pos:column="42"/></operator><name pos:line="101" pos:column="39">next<pos:position pos:line="101" pos:column="43"/></name></name></expr></incr>)<pos:position pos:line="101" pos:column="44"/></control>
	    <block pos:line="102" pos:column="13">{
	      <if pos:line="103" pos:column="15">if <condition pos:line="103" pos:column="18">(<expr><call><name pos:line="103" pos:column="19">is_pka_notation<pos:position pos:line="103" pos:column="34"/></name> <argument_list pos:line="103" pos:column="35">(<argument><expr><name pos:line="103" pos:column="36">notation<pos:position pos:line="103" pos:column="44"/></name></expr></argument>)<pos:position pos:line="103" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="103" pos:column="46"/></condition><then pos:line="103" pos:column="46">
		<block type="pseudo"><continue pos:line="104" pos:column="17">continue;<pos:position pos:line="104" pos:column="26"/></continue></block></then></if>

	      <if pos:line="106" pos:column="15">if <condition pos:line="106" pos:column="18">(<expr><name><name pos:line="106" pos:column="19">notation<pos:position pos:line="106" pos:column="27"/></name><operator pos:line="106" pos:column="27">-&gt;<pos:position pos:line="106" pos:column="32"/></operator><name pos:line="106" pos:column="29">name<pos:position pos:line="106" pos:column="33"/></name></name></expr>)<pos:position pos:line="106" pos:column="34"/></condition><then pos:line="106" pos:column="34">
	      <block pos:line="107" pos:column="15">{
		<expr_stmt><expr><call><name pos:line="108" pos:column="17">state_puts<pos:position pos:line="108" pos:column="27"/></name> <argument_list pos:line="108" pos:column="28">(<argument><expr><name><name pos:line="108" pos:column="29">notation<pos:position pos:line="108" pos:column="37"/></name><operator pos:line="108" pos:column="37">-&gt;<pos:position pos:line="108" pos:column="42"/></operator><name pos:line="108" pos:column="39">name<pos:position pos:line="108" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="45">s<pos:position pos:line="108" pos:column="46"/></name></expr></argument>)<pos:position pos:line="108" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="109" pos:column="17">state_puts<pos:position pos:line="109" pos:column="27"/></name> <argument_list pos:line="109" pos:column="28">(<argument><expr><literal type="string" pos:line="109" pos:column="29">"="<pos:position pos:line="109" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="109" pos:column="34">s<pos:position pos:line="109" pos:column="35"/></name></expr></argument>)<pos:position pos:line="109" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="37"/></expr_stmt>
	      }<pos:position pos:line="110" pos:column="16"/></block></then></if>
	      <if pos:line="111" pos:column="15">if <condition pos:line="111" pos:column="18">(<expr><name><name pos:line="111" pos:column="19">notation<pos:position pos:line="111" pos:column="27"/></name><operator pos:line="111" pos:column="27">-&gt;<pos:position pos:line="111" pos:column="32"/></operator><name pos:line="111" pos:column="29">value<pos:position pos:line="111" pos:column="34"/></name></name></expr>)<pos:position pos:line="111" pos:column="35"/></condition><then pos:line="111" pos:column="35">
	      <block pos:line="112" pos:column="15">{
		<expr_stmt><expr><call><name pos:line="113" pos:column="17">state_puts<pos:position pos:line="113" pos:column="27"/></name> <argument_list pos:line="113" pos:column="28">(<argument><expr><name><name pos:line="113" pos:column="29">notation<pos:position pos:line="113" pos:column="37"/></name><operator pos:line="113" pos:column="37">-&gt;<pos:position pos:line="113" pos:column="42"/></operator><name pos:line="113" pos:column="39">value<pos:position pos:line="113" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="46">s<pos:position pos:line="113" pos:column="47"/></name></expr></argument>)<pos:position pos:line="113" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="49"/></expr_stmt>
		<if pos:line="114" pos:column="17">if <condition pos:line="114" pos:column="20">(<expr><operator pos:line="114" pos:column="21">!<pos:position pos:line="114" pos:column="22"/></operator><operator pos:line="114" pos:column="22">(<pos:position pos:line="114" pos:column="23"/></operator><operator pos:line="114" pos:column="23">*<pos:position pos:line="114" pos:column="24"/></operator><name><name pos:line="114" pos:column="24">notation<pos:position pos:line="114" pos:column="32"/></name><operator pos:line="114" pos:column="32">-&gt;<pos:position pos:line="114" pos:column="37"/></operator><name pos:line="114" pos:column="34">value<pos:position pos:line="114" pos:column="39"/></name></name>
                      <operator pos:line="115" pos:column="23">&amp;&amp;<pos:position pos:line="115" pos:column="33"/></operator> <operator pos:line="115" pos:column="26">(<pos:position pos:line="115" pos:column="27"/></operator><name><name pos:line="115" pos:column="27">notation<pos:position pos:line="115" pos:column="35"/></name><operator pos:line="115" pos:column="35">-&gt;<pos:position pos:line="115" pos:column="40"/></operator><name pos:line="115" pos:column="37">value<pos:position pos:line="115" pos:column="42"/></name><index pos:line="115" pos:column="42">[<expr><call><name pos:line="115" pos:column="43">strlen<pos:position pos:line="115" pos:column="49"/></name> <argument_list pos:line="115" pos:column="50">(<argument><expr><name><name pos:line="115" pos:column="51">notation<pos:position pos:line="115" pos:column="59"/></name><operator pos:line="115" pos:column="59">-&gt;<pos:position pos:line="115" pos:column="64"/></operator><name pos:line="115" pos:column="61">value<pos:position pos:line="115" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="67"/></argument_list></call><operator pos:line="115" pos:column="67">-<pos:position pos:line="115" pos:column="68"/></operator><literal type="number" pos:line="115" pos:column="68">1<pos:position pos:line="115" pos:column="69"/></literal></expr>]<pos:position pos:line="115" pos:column="70"/></index></name><operator pos:line="115" pos:column="70">==<pos:position pos:line="115" pos:column="72"/></operator><literal type="char" pos:line="115" pos:column="72">'\n'<pos:position pos:line="115" pos:column="76"/></literal><operator pos:line="115" pos:column="76">)<pos:position pos:line="115" pos:column="77"/></operator><operator pos:line="115" pos:column="77">)<pos:position pos:line="115" pos:column="78"/></operator></expr>)<pos:position pos:line="115" pos:column="79"/></condition><then pos:line="115" pos:column="79">
		  <block type="pseudo"><expr_stmt><expr><call><name pos:line="116" pos:column="19">state_puts<pos:position pos:line="116" pos:column="29"/></name> <argument_list pos:line="116" pos:column="30">(<argument><expr><literal type="string" pos:line="116" pos:column="31">"\n"<pos:position pos:line="116" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="116" pos:column="37">s<pos:position pos:line="116" pos:column="38"/></name></expr></argument>)<pos:position pos:line="116" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="40"/></expr_stmt></block></then></if>
	      }<pos:position pos:line="117" pos:column="16"/></block></then></if>
	    }<pos:position pos:line="118" pos:column="14"/></block></for>
	    <expr_stmt><expr><call><name pos:line="119" pos:column="13">state_puts<pos:position pos:line="119" pos:column="23"/></name> <argument_list pos:line="119" pos:column="24">(<argument><expr><call><name pos:line="119" pos:column="25">_<pos:position pos:line="119" pos:column="26"/></name><argument_list pos:line="119" pos:column="26">(<argument><expr><literal type="string" pos:line="119" pos:column="27">"*** End Notation ***\n"<pos:position pos:line="119" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="119" pos:column="54">s<pos:position pos:line="119" pos:column="55"/></name></expr></argument>)<pos:position pos:line="119" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="57"/></expr_stmt>
	  }<pos:position pos:line="120" pos:column="12"/></block></then></if>
	}<pos:position pos:line="121" pos:column="10"/></block></for>
      }<pos:position pos:line="122" pos:column="8"/></block></then></if>
    }<pos:position pos:line="123" pos:column="6"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="125" pos:column="3">gpgme_release<pos:position pos:line="125" pos:column="16"/></name> <argument_list pos:line="125" pos:column="17">(<argument><expr><name pos:line="125" pos:column="18">ctx<pos:position pos:line="125" pos:column="21"/></name></expr></argument>)<pos:position pos:line="125" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="23"/></expr_stmt>
  
  <expr_stmt><expr><call><name pos:line="127" pos:column="3">state_attach_puts<pos:position pos:line="127" pos:column="20"/></name> <argument_list pos:line="127" pos:column="21">(<argument><expr><call><name pos:line="127" pos:column="22">_<pos:position pos:line="127" pos:column="23"/></name><argument_list pos:line="127" pos:column="23">(<argument><expr><literal type="string" pos:line="127" pos:column="24">"[-- End signature information --]\n\n"<pos:position pos:line="127" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="127" pos:column="66">s<pos:position pos:line="127" pos:column="67"/></name></expr></argument>)<pos:position pos:line="127" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="69"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="128" pos:column="3">dprint<pos:position pos:line="128" pos:column="9"/></name> <argument_list pos:line="128" pos:column="10">(<argument><expr><literal type="number" pos:line="128" pos:column="11">1<pos:position pos:line="128" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="128" pos:column="14">(<pos:position pos:line="128" pos:column="15"/></operator><name pos:line="128" pos:column="15">debugfile<pos:position pos:line="128" pos:column="24"/></name><operator pos:line="128" pos:column="24">,<pos:position pos:line="128" pos:column="25"/></operator> <literal type="string" pos:line="128" pos:column="26">"verify_one: returning %d.\n"<pos:position pos:line="128" pos:column="55"/></literal><operator pos:line="128" pos:column="55">,<pos:position pos:line="128" pos:column="56"/></operator> <name pos:line="128" pos:column="57">badsig<pos:position pos:line="128" pos:column="63"/></name><operator pos:line="128" pos:column="63">)<pos:position pos:line="128" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="128" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="66"/></expr_stmt>
  
  <return pos:line="130" pos:column="3">return <expr><ternary><condition><expr><name pos:line="130" pos:column="10">badsig<pos:position pos:line="130" pos:column="16"/></name></expr>?<pos:position pos:line="130" pos:column="17"/></condition><then pos:line="130" pos:column="17"> <expr><literal type="number" pos:line="130" pos:column="18">1<pos:position pos:line="130" pos:column="19"/></literal></expr></then><else pos:line="130" pos:column="19">: <expr><ternary><condition><expr><name pos:line="130" pos:column="21">anywarn<pos:position pos:line="130" pos:column="28"/></name></expr>?<pos:position pos:line="130" pos:column="29"/></condition><then pos:line="130" pos:column="29"> <expr><literal type="number" pos:line="130" pos:column="30">2<pos:position pos:line="130" pos:column="31"/></literal></expr> <pos:position pos:line="130" pos:column="32"/></then><else pos:line="130" pos:column="32">: <expr><literal type="number" pos:line="130" pos:column="34">0<pos:position pos:line="130" pos:column="35"/></literal></expr></else></ternary></expr></else></ternary></expr>;<pos:position pos:line="130" pos:column="36"/></return>
}<pos:position pos:line="131" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_327_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BODY<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">pgp_sign_message<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">BODY<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">a<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">BODY<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">t<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buffer<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><name pos:line="4" pos:column="15">LONG_STRING<pos:position pos:line="4" pos:column="26"/></name></expr>]<pos:position pos:line="4" pos:column="27"/></index></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">sigfile<pos:position pos:line="5" pos:column="15"/></name><index pos:line="5" pos:column="15">[<expr><name pos:line="5" pos:column="16">_POSIX_PATH_MAX<pos:position pos:line="5" pos:column="31"/></name></expr>]<pos:position pos:line="5" pos:column="32"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="5" pos:column="34">signedfile<pos:position pos:line="5" pos:column="44"/></name><index pos:line="5" pos:column="44">[<expr><name pos:line="5" pos:column="45">_POSIX_PATH_MAX<pos:position pos:line="5" pos:column="60"/></name></expr>]<pos:position pos:line="5" pos:column="61"/></index></name></decl>;<pos:position pos:line="5" pos:column="62"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">FILE<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">pgpin<pos:position pos:line="6" pos:column="14"/></name></decl>, <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="17">pgpout<pos:position pos:line="6" pos:column="23"/></name></decl>, <modifier pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="26">pgperr<pos:position pos:line="6" pos:column="32"/></name></decl>, <modifier pos:line="6" pos:column="34">*<pos:position pos:line="6" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="35">fp<pos:position pos:line="6" pos:column="37"/></name></decl>, <modifier pos:line="6" pos:column="39">*<pos:position pos:line="6" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="40">sfp<pos:position pos:line="6" pos:column="43"/></name></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">err<pos:position pos:line="7" pos:column="10"/></name> <init pos:line="7" pos:column="11">= <expr><literal type="number" pos:line="7" pos:column="13">0<pos:position pos:line="7" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">empty<pos:position pos:line="8" pos:column="12"/></name> <init pos:line="8" pos:column="13">= <expr><literal type="number" pos:line="8" pos:column="15">1<pos:position pos:line="8" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">pid_t<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">thepid<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
  
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">convert_to_7bit<pos:position pos:line="11" pos:column="18"/></name> <argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">a<pos:position pos:line="11" pos:column="21"/></name></expr></argument>)<pos:position pos:line="11" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt> <comment type="block" pos:line="11" pos:column="24">/* Signed data _must_ be in 7-bit format. */</comment>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">mutt_mktemp<pos:position pos:line="13" pos:column="14"/></name> <argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">sigfile<pos:position pos:line="13" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="25">sizeof <argument_list pos:line="13" pos:column="32">(<argument><expr><name pos:line="13" pos:column="33">sigfile<pos:position pos:line="13" pos:column="40"/></name></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><operator pos:line="14" pos:column="7">(<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">fp<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <call><name pos:line="14" pos:column="13">safe_fopen<pos:position pos:line="14" pos:column="23"/></name> <argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">sigfile<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="34">"w"<pos:position pos:line="14" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call><operator pos:line="14" pos:column="38">)<pos:position pos:line="14" pos:column="39"/></operator> <operator pos:line="14" pos:column="40">==<pos:position pos:line="14" pos:column="42"/></operator> <name pos:line="14" pos:column="43">NULL<pos:position pos:line="14" pos:column="47"/></name></expr>)<pos:position pos:line="14" pos:column="48"/></condition><then pos:line="14" pos:column="48">
  <block pos:line="15" pos:column="3">{
    <return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="13">NULL<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">)<pos:position pos:line="16" pos:column="18"/></operator></expr>;<pos:position pos:line="16" pos:column="19"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="19" pos:column="3">mutt_mktemp<pos:position pos:line="19" pos:column="14"/></name> <argument_list pos:line="19" pos:column="15">(<argument><expr><name pos:line="19" pos:column="16">signedfile<pos:position pos:line="19" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="28">sizeof <argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">signedfile<pos:position pos:line="19" pos:column="46"/></name></expr></argument>)<pos:position pos:line="19" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="49"/></expr_stmt>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><operator pos:line="20" pos:column="7">(<pos:position pos:line="20" pos:column="8"/></operator><name pos:line="20" pos:column="8">sfp<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <call><name pos:line="20" pos:column="14">safe_fopen<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">signedfile<pos:position pos:line="20" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="37">"w"<pos:position pos:line="20" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></call><operator pos:line="20" pos:column="41">)<pos:position pos:line="20" pos:column="42"/></operator> <operator pos:line="20" pos:column="43">==<pos:position pos:line="20" pos:column="45"/></operator> <name pos:line="20" pos:column="46">NULL<pos:position pos:line="20" pos:column="50"/></name></expr>)<pos:position pos:line="20" pos:column="51"/></condition><then pos:line="20" pos:column="51">
  <block pos:line="21" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">mutt_perror<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">signedfile<pos:position pos:line="22" pos:column="27"/></name></expr></argument>)<pos:position pos:line="22" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">safe_fclose<pos:position pos:line="23" pos:column="16"/></name> <argument_list pos:line="23" pos:column="17">(<argument><expr><operator pos:line="23" pos:column="18">&amp;<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="19">fp<pos:position pos:line="23" pos:column="21"/></name></expr></argument>)<pos:position pos:line="23" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">unlink<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><name pos:line="24" pos:column="12">sigfile<pos:position pos:line="24" pos:column="19"/></name></expr></argument>)<pos:position pos:line="24" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="21"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">NULL<pos:position pos:line="25" pos:column="16"/></name></expr>;<pos:position pos:line="25" pos:column="17"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>
  
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">mutt_write_mime_header<pos:position pos:line="28" pos:column="25"/></name> <argument_list pos:line="28" pos:column="26">(<argument><expr><name pos:line="28" pos:column="27">a<pos:position pos:line="28" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="30">sfp<pos:position pos:line="28" pos:column="33"/></name></expr></argument>)<pos:position pos:line="28" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">fputc<pos:position pos:line="29" pos:column="8"/></name> <argument_list pos:line="29" pos:column="9">(<argument><expr><literal type="char" pos:line="29" pos:column="10">'\n'<pos:position pos:line="29" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="16">sfp<pos:position pos:line="29" pos:column="19"/></name></expr></argument>)<pos:position pos:line="29" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">mutt_write_mime_body<pos:position pos:line="30" pos:column="23"/></name> <argument_list pos:line="30" pos:column="24">(<argument><expr><name pos:line="30" pos:column="25">a<pos:position pos:line="30" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="28">sfp<pos:position pos:line="30" pos:column="31"/></name></expr></argument>)<pos:position pos:line="30" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">safe_fclose<pos:position pos:line="31" pos:column="14"/></name> <argument_list pos:line="31" pos:column="15">(<argument><expr><operator pos:line="31" pos:column="16">&amp;<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="17">sfp<pos:position pos:line="31" pos:column="20"/></name></expr></argument>)<pos:position pos:line="31" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="22"/></expr_stmt>
  
  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><operator pos:line="33" pos:column="7">(<pos:position pos:line="33" pos:column="8"/></operator><name pos:line="33" pos:column="8">thepid<pos:position pos:line="33" pos:column="14"/></name> <operator pos:line="33" pos:column="15">=<pos:position pos:line="33" pos:column="16"/></operator> <call><name pos:line="33" pos:column="17">pgp_invoke_sign<pos:position pos:line="33" pos:column="32"/></name> <argument_list pos:line="33" pos:column="33">(<argument><expr><operator pos:line="33" pos:column="34">&amp;<pos:position pos:line="33" pos:column="39"/></operator><name pos:line="33" pos:column="35">pgpin<pos:position pos:line="33" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="42">&amp;<pos:position pos:line="33" pos:column="47"/></operator><name pos:line="33" pos:column="43">pgpout<pos:position pos:line="33" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="51">&amp;<pos:position pos:line="33" pos:column="56"/></operator><name pos:line="33" pos:column="52">pgperr<pos:position pos:line="33" pos:column="58"/></name></expr></argument>,
				 <argument><expr><operator pos:line="34" pos:column="34">-<pos:position pos:line="34" pos:column="35"/></operator><literal type="number" pos:line="34" pos:column="35">1<pos:position pos:line="34" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="34" pos:column="38">-<pos:position pos:line="34" pos:column="39"/></operator><literal type="number" pos:line="34" pos:column="39">1<pos:position pos:line="34" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="34" pos:column="42">-<pos:position pos:line="34" pos:column="43"/></operator><literal type="number" pos:line="34" pos:column="43">1<pos:position pos:line="34" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="46">signedfile<pos:position pos:line="34" pos:column="56"/></name></expr></argument>)<pos:position pos:line="34" pos:column="57"/></argument_list></call><operator pos:line="34" pos:column="57">)<pos:position pos:line="34" pos:column="58"/></operator> <operator pos:line="34" pos:column="59">==<pos:position pos:line="34" pos:column="61"/></operator> <operator pos:line="34" pos:column="62">-<pos:position pos:line="34" pos:column="63"/></operator><literal type="number" pos:line="34" pos:column="63">1<pos:position pos:line="34" pos:column="64"/></literal></expr>)<pos:position pos:line="34" pos:column="65"/></condition><then pos:line="34" pos:column="65">
  <block pos:line="35" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="36" pos:column="5">mutt_perror<pos:position pos:line="36" pos:column="16"/></name></type> <name pos:line="36" pos:column="17">_<pos:position pos:line="36" pos:column="18"/></name><argument_list pos:line="36" pos:column="18">(<argument><expr><literal type="string" pos:line="36" pos:column="19">"Can't open PGP subprocess!"<pos:position pos:line="36" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="48"/></argument_list></decl>;<pos:position pos:line="36" pos:column="49"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">safe_fclose<pos:position pos:line="37" pos:column="16"/></name> <argument_list pos:line="37" pos:column="17">(<argument><expr><operator pos:line="37" pos:column="18">&amp;<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="19">fp<pos:position pos:line="37" pos:column="21"/></name></expr></argument>)<pos:position pos:line="37" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">unlink<pos:position pos:line="38" pos:column="11"/></name><argument_list pos:line="38" pos:column="11">(<argument><expr><name pos:line="38" pos:column="12">sigfile<pos:position pos:line="38" pos:column="19"/></name></expr></argument>)<pos:position pos:line="38" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">unlink<pos:position pos:line="39" pos:column="11"/></name><argument_list pos:line="39" pos:column="11">(<argument><expr><name pos:line="39" pos:column="12">signedfile<pos:position pos:line="39" pos:column="22"/></name></expr></argument>)<pos:position pos:line="39" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="24"/></expr_stmt>
    <return pos:line="40" pos:column="5">return <expr><name pos:line="40" pos:column="12">NULL<pos:position pos:line="40" pos:column="16"/></name></expr>;<pos:position pos:line="40" pos:column="17"/></return>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>
  
  <if pos:line="43" pos:column="3">if <condition pos:line="43" pos:column="6">(<expr><operator pos:line="43" pos:column="7">!<pos:position pos:line="43" pos:column="8"/></operator><call><name pos:line="43" pos:column="8">pgp_use_gpg_agent<pos:position pos:line="43" pos:column="25"/></name><argument_list pos:line="43" pos:column="25">()<pos:position pos:line="43" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="28"/></condition><then pos:line="43" pos:column="28">
     <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="6">fputs<pos:position pos:line="44" pos:column="11"/></name><argument_list pos:line="44" pos:column="11">(<argument><expr><name pos:line="44" pos:column="12">PgpPass<pos:position pos:line="44" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="21">pgpin<pos:position pos:line="44" pos:column="26"/></name></expr></argument>)<pos:position pos:line="44" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="28"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">fputc<pos:position pos:line="45" pos:column="8"/></name><argument_list pos:line="45" pos:column="8">(<argument><expr><literal type="char" pos:line="45" pos:column="9">'\n'<pos:position pos:line="45" pos:column="13"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="15">pgpin<pos:position pos:line="45" pos:column="20"/></name></expr></argument>)<pos:position pos:line="45" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="46" pos:column="3">safe_fclose<pos:position pos:line="46" pos:column="14"/></name> <argument_list pos:line="46" pos:column="15">(<argument><expr><operator pos:line="46" pos:column="16">&amp;<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="17">pgpin<pos:position pos:line="46" pos:column="22"/></name></expr></argument>)<pos:position pos:line="46" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="24"/></expr_stmt>
  
  <comment type="block" pos:line="48" pos:column="3">/*
   * Read back the PGP signature.  Also, change MESSAGE=&gt;SIGNATURE as
   * recommended for future releases of PGP.
   */</comment>
  <while pos:line="52" pos:column="3">while <condition pos:line="52" pos:column="9">(<expr><call><name pos:line="52" pos:column="10">fgets<pos:position pos:line="52" pos:column="15"/></name> <argument_list pos:line="52" pos:column="16">(<argument><expr><name pos:line="52" pos:column="17">buffer<pos:position pos:line="52" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="52" pos:column="25">sizeof <argument_list pos:line="52" pos:column="32">(<argument><expr><name pos:line="52" pos:column="33">buffer<pos:position pos:line="52" pos:column="39"/></name></expr></argument>)<pos:position pos:line="52" pos:column="40"/></argument_list></sizeof> <operator pos:line="52" pos:column="41">-<pos:position pos:line="52" pos:column="42"/></operator> <literal type="number" pos:line="52" pos:column="43">1<pos:position pos:line="52" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="46">pgpout<pos:position pos:line="52" pos:column="52"/></name></expr></argument>)<pos:position pos:line="52" pos:column="53"/></argument_list></call> <operator pos:line="52" pos:column="54">!=<pos:position pos:line="52" pos:column="56"/></operator> <name pos:line="52" pos:column="57">NULL<pos:position pos:line="52" pos:column="61"/></name></expr>)<pos:position pos:line="52" pos:column="62"/></condition>
  <block pos:line="53" pos:column="3">{
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><call><name pos:line="54" pos:column="9">mutt_strcmp<pos:position pos:line="54" pos:column="20"/></name> <argument_list pos:line="54" pos:column="21">(<argument><expr><literal type="string" pos:line="54" pos:column="22">"-----BEGIN PGP MESSAGE-----\n"<pos:position pos:line="54" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="55">buffer<pos:position pos:line="54" pos:column="61"/></name></expr></argument>)<pos:position pos:line="54" pos:column="62"/></argument_list></call> <operator pos:line="54" pos:column="63">==<pos:position pos:line="54" pos:column="65"/></operator> <literal type="number" pos:line="54" pos:column="66">0<pos:position pos:line="54" pos:column="67"/></literal></expr>)<pos:position pos:line="54" pos:column="68"/></condition><then pos:line="54" pos:column="68">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="7">fputs<pos:position pos:line="55" pos:column="12"/></name> <argument_list pos:line="55" pos:column="13">(<argument><expr><literal type="string" pos:line="55" pos:column="14">"-----BEGIN PGP SIGNATURE-----\n"<pos:position pos:line="55" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="49">fp<pos:position pos:line="55" pos:column="51"/></name></expr></argument>)<pos:position pos:line="55" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="53"/></expr_stmt></block></then>
    <elseif pos:line="56" pos:column="5">else <if pos:line="56" pos:column="10">if <condition pos:line="56" pos:column="13">(<expr><call><name pos:line="56" pos:column="14">mutt_strcmp<pos:position pos:line="56" pos:column="25"/></name><argument_list pos:line="56" pos:column="25">(<argument><expr><literal type="string" pos:line="56" pos:column="26">"-----END PGP MESSAGE-----\n"<pos:position pos:line="56" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="57">buffer<pos:position pos:line="56" pos:column="63"/></name></expr></argument>)<pos:position pos:line="56" pos:column="64"/></argument_list></call> <operator pos:line="56" pos:column="65">==<pos:position pos:line="56" pos:column="67"/></operator> <literal type="number" pos:line="56" pos:column="68">0<pos:position pos:line="56" pos:column="69"/></literal></expr>)<pos:position pos:line="56" pos:column="70"/></condition><then pos:line="56" pos:column="70">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="7">fputs<pos:position pos:line="57" pos:column="12"/></name> <argument_list pos:line="57" pos:column="13">(<argument><expr><literal type="string" pos:line="57" pos:column="14">"-----END PGP SIGNATURE-----\n"<pos:position pos:line="57" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="47">fp<pos:position pos:line="57" pos:column="49"/></name></expr></argument>)<pos:position pos:line="57" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="51"/></expr_stmt></block></then></if></elseif>
    <else pos:line="58" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="7">fputs<pos:position pos:line="59" pos:column="12"/></name> <argument_list pos:line="59" pos:column="13">(<argument><expr><name pos:line="59" pos:column="14">buffer<pos:position pos:line="59" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="22">fp<pos:position pos:line="59" pos:column="24"/></name></expr></argument>)<pos:position pos:line="59" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="26"/></expr_stmt></block></else></if>
    <expr_stmt><expr><name pos:line="60" pos:column="5">empty<pos:position pos:line="60" pos:column="10"/></name> <operator pos:line="60" pos:column="11">=<pos:position pos:line="60" pos:column="12"/></operator> <literal type="number" pos:line="60" pos:column="13">0<pos:position pos:line="60" pos:column="14"/></literal></expr>;<pos:position pos:line="60" pos:column="15"/></expr_stmt> <comment type="block" pos:line="60" pos:column="16">/* got some output, so we're ok */</comment>
  }<pos:position pos:line="61" pos:column="4"/></block></while>

  <comment type="block" pos:line="63" pos:column="3">/* check for errors from PGP */</comment>
  <expr_stmt><expr><name pos:line="64" pos:column="3">err<pos:position pos:line="64" pos:column="6"/></name> <operator pos:line="64" pos:column="7">=<pos:position pos:line="64" pos:column="8"/></operator> <literal type="number" pos:line="64" pos:column="9">0<pos:position pos:line="64" pos:column="10"/></literal></expr>;<pos:position pos:line="64" pos:column="11"/></expr_stmt>
  <while pos:line="65" pos:column="3">while <condition pos:line="65" pos:column="9">(<expr><call><name pos:line="65" pos:column="10">fgets<pos:position pos:line="65" pos:column="15"/></name> <argument_list pos:line="65" pos:column="16">(<argument><expr><name pos:line="65" pos:column="17">buffer<pos:position pos:line="65" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="65" pos:column="25">sizeof <argument_list pos:line="65" pos:column="32">(<argument><expr><name pos:line="65" pos:column="33">buffer<pos:position pos:line="65" pos:column="39"/></name></expr></argument>)<pos:position pos:line="65" pos:column="40"/></argument_list></sizeof> <operator pos:line="65" pos:column="41">-<pos:position pos:line="65" pos:column="42"/></operator> <literal type="number" pos:line="65" pos:column="43">1<pos:position pos:line="65" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="46">pgperr<pos:position pos:line="65" pos:column="52"/></name></expr></argument>)<pos:position pos:line="65" pos:column="53"/></argument_list></call> <operator pos:line="65" pos:column="54">!=<pos:position pos:line="65" pos:column="56"/></operator> <name pos:line="65" pos:column="57">NULL<pos:position pos:line="65" pos:column="61"/></name></expr>)<pos:position pos:line="65" pos:column="62"/></condition>
  <block pos:line="66" pos:column="3">{
    <expr_stmt><expr><name pos:line="67" pos:column="5">err<pos:position pos:line="67" pos:column="8"/></name> <operator pos:line="67" pos:column="9">=<pos:position pos:line="67" pos:column="10"/></operator> <literal type="number" pos:line="67" pos:column="11">1<pos:position pos:line="67" pos:column="12"/></literal></expr>;<pos:position pos:line="67" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">fputs<pos:position pos:line="68" pos:column="10"/></name> <argument_list pos:line="68" pos:column="11">(<argument><expr><name pos:line="68" pos:column="12">buffer<pos:position pos:line="68" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="20">stdout<pos:position pos:line="68" pos:column="26"/></name></expr></argument>)<pos:position pos:line="68" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="69" pos:column="4"/></block></while>

  <if pos:line="71" pos:column="3">if<condition pos:line="71" pos:column="5">(<expr><call><name pos:line="71" pos:column="6">mutt_wait_filter<pos:position pos:line="71" pos:column="22"/></name> <argument_list pos:line="71" pos:column="23">(<argument><expr><name pos:line="71" pos:column="24">thepid<pos:position pos:line="71" pos:column="30"/></name></expr></argument>)<pos:position pos:line="71" pos:column="31"/></argument_list></call> <operator pos:line="71" pos:column="32">&amp;&amp;<pos:position pos:line="71" pos:column="42"/></operator> <call><name pos:line="71" pos:column="35">option<pos:position pos:line="71" pos:column="41"/></name><argument_list pos:line="71" pos:column="41">(<argument><expr><name pos:line="71" pos:column="42">OPTPGPCHECKEXIT<pos:position pos:line="71" pos:column="57"/></name></expr></argument>)<pos:position pos:line="71" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="59"/></condition><then pos:line="71" pos:column="59">
    <block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="5">empty<pos:position pos:line="72" pos:column="10"/></name><operator pos:line="72" pos:column="10">=<pos:position pos:line="72" pos:column="11"/></operator><literal type="number" pos:line="72" pos:column="11">1<pos:position pos:line="72" pos:column="12"/></literal></expr>;<pos:position pos:line="72" pos:column="13"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="74" pos:column="3">safe_fclose<pos:position pos:line="74" pos:column="14"/></name> <argument_list pos:line="74" pos:column="15">(<argument><expr><operator pos:line="74" pos:column="16">&amp;<pos:position pos:line="74" pos:column="21"/></operator><name pos:line="74" pos:column="17">pgperr<pos:position pos:line="74" pos:column="23"/></name></expr></argument>)<pos:position pos:line="74" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="75" pos:column="3">safe_fclose<pos:position pos:line="75" pos:column="14"/></name> <argument_list pos:line="75" pos:column="15">(<argument><expr><operator pos:line="75" pos:column="16">&amp;<pos:position pos:line="75" pos:column="21"/></operator><name pos:line="75" pos:column="17">pgpout<pos:position pos:line="75" pos:column="23"/></name></expr></argument>)<pos:position pos:line="75" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="76" pos:column="3">unlink<pos:position pos:line="76" pos:column="9"/></name> <argument_list pos:line="76" pos:column="10">(<argument><expr><name pos:line="76" pos:column="11">signedfile<pos:position pos:line="76" pos:column="21"/></name></expr></argument>)<pos:position pos:line="76" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="23"/></expr_stmt>
  
  <if pos:line="78" pos:column="3">if <condition pos:line="78" pos:column="6">(<expr><call><name pos:line="78" pos:column="7">fclose<pos:position pos:line="78" pos:column="13"/></name> <argument_list pos:line="78" pos:column="14">(<argument><expr><name pos:line="78" pos:column="15">fp<pos:position pos:line="78" pos:column="17"/></name></expr></argument>)<pos:position pos:line="78" pos:column="18"/></argument_list></call> <operator pos:line="78" pos:column="19">!=<pos:position pos:line="78" pos:column="21"/></operator> <literal type="number" pos:line="78" pos:column="22">0<pos:position pos:line="78" pos:column="23"/></literal></expr>)<pos:position pos:line="78" pos:column="24"/></condition><then pos:line="78" pos:column="24">
  <block pos:line="79" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="80" pos:column="5">mutt_perror<pos:position pos:line="80" pos:column="16"/></name> <argument_list pos:line="80" pos:column="17">(<argument><expr><literal type="string" pos:line="80" pos:column="18">"fclose"<pos:position pos:line="80" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="81" pos:column="5">unlink<pos:position pos:line="81" pos:column="11"/></name> <argument_list pos:line="81" pos:column="12">(<argument><expr><name pos:line="81" pos:column="13">sigfile<pos:position pos:line="81" pos:column="20"/></name></expr></argument>)<pos:position pos:line="81" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="22"/></expr_stmt>
    <return pos:line="82" pos:column="5">return <expr><operator pos:line="82" pos:column="12">(<pos:position pos:line="82" pos:column="13"/></operator><name pos:line="82" pos:column="13">NULL<pos:position pos:line="82" pos:column="17"/></name><operator pos:line="82" pos:column="17">)<pos:position pos:line="82" pos:column="18"/></operator></expr>;<pos:position pos:line="82" pos:column="19"/></return>
  }<pos:position pos:line="83" pos:column="4"/></block></then></if>

  <if pos:line="85" pos:column="3">if <condition pos:line="85" pos:column="6">(<expr><name pos:line="85" pos:column="7">err<pos:position pos:line="85" pos:column="10"/></name></expr>)<pos:position pos:line="85" pos:column="11"/></condition><then pos:line="85" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="5">mutt_any_key_to_continue<pos:position pos:line="86" pos:column="29"/></name> <argument_list pos:line="86" pos:column="30">(<argument><expr><name pos:line="86" pos:column="31">NULL<pos:position pos:line="86" pos:column="35"/></name></expr></argument>)<pos:position pos:line="86" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="37"/></expr_stmt></block></then></if>
  <if pos:line="87" pos:column="3">if <condition pos:line="87" pos:column="6">(<expr><name pos:line="87" pos:column="7">empty<pos:position pos:line="87" pos:column="12"/></name></expr>)<pos:position pos:line="87" pos:column="13"/></condition><then pos:line="87" pos:column="13">
  <block pos:line="88" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="89" pos:column="5">unlink<pos:position pos:line="89" pos:column="11"/></name> <argument_list pos:line="89" pos:column="12">(<argument><expr><name pos:line="89" pos:column="13">sigfile<pos:position pos:line="89" pos:column="20"/></name></expr></argument>)<pos:position pos:line="89" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="22"/></expr_stmt>
    <comment type="block" pos:line="90" pos:column="5">/* most likely error is a bad passphrase, so automatically forget it */</comment>
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">pgp_void_passphrase<pos:position pos:line="91" pos:column="24"/></name> <argument_list pos:line="91" pos:column="25">()<pos:position pos:line="91" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="28"/></expr_stmt>
    <return pos:line="92" pos:column="5">return <expr><operator pos:line="92" pos:column="12">(<pos:position pos:line="92" pos:column="13"/></operator><name pos:line="92" pos:column="13">NULL<pos:position pos:line="92" pos:column="17"/></name><operator pos:line="92" pos:column="17">)<pos:position pos:line="92" pos:column="18"/></operator></expr>;<pos:position pos:line="92" pos:column="19"/></return> <comment type="block" pos:line="92" pos:column="20">/* fatal error while signing */</comment>
  }<pos:position pos:line="93" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="95" pos:column="3">t<pos:position pos:line="95" pos:column="4"/></name> <operator pos:line="95" pos:column="5">=<pos:position pos:line="95" pos:column="6"/></operator> <call><name pos:line="95" pos:column="7">mutt_new_body<pos:position pos:line="95" pos:column="20"/></name> <argument_list pos:line="95" pos:column="21">()<pos:position pos:line="95" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="96" pos:column="3">t<pos:position pos:line="96" pos:column="4"/></name><operator pos:line="96" pos:column="4">-&gt;<pos:position pos:line="96" pos:column="9"/></operator><name pos:line="96" pos:column="6">type<pos:position pos:line="96" pos:column="10"/></name></name> <operator pos:line="96" pos:column="11">=<pos:position pos:line="96" pos:column="12"/></operator> <name pos:line="96" pos:column="13">TYPEMULTIPART<pos:position pos:line="96" pos:column="26"/></name></expr>;<pos:position pos:line="96" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="97" pos:column="3">t<pos:position pos:line="97" pos:column="4"/></name><operator pos:line="97" pos:column="4">-&gt;<pos:position pos:line="97" pos:column="9"/></operator><name pos:line="97" pos:column="6">subtype<pos:position pos:line="97" pos:column="13"/></name></name> <operator pos:line="97" pos:column="14">=<pos:position pos:line="97" pos:column="15"/></operator> <call><name pos:line="97" pos:column="16">safe_strdup<pos:position pos:line="97" pos:column="27"/></name> <argument_list pos:line="97" pos:column="28">(<argument><expr><literal type="string" pos:line="97" pos:column="29">"signed"<pos:position pos:line="97" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="98" pos:column="3">t<pos:position pos:line="98" pos:column="4"/></name><operator pos:line="98" pos:column="4">-&gt;<pos:position pos:line="98" pos:column="9"/></operator><name pos:line="98" pos:column="6">encoding<pos:position pos:line="98" pos:column="14"/></name></name> <operator pos:line="98" pos:column="15">=<pos:position pos:line="98" pos:column="16"/></operator> <name pos:line="98" pos:column="17">ENC7BIT<pos:position pos:line="98" pos:column="24"/></name></expr>;<pos:position pos:line="98" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="99" pos:column="3">t<pos:position pos:line="99" pos:column="4"/></name><operator pos:line="99" pos:column="4">-&gt;<pos:position pos:line="99" pos:column="9"/></operator><name pos:line="99" pos:column="6">use_disp<pos:position pos:line="99" pos:column="14"/></name></name> <operator pos:line="99" pos:column="15">=<pos:position pos:line="99" pos:column="16"/></operator> <literal type="number" pos:line="99" pos:column="17">0<pos:position pos:line="99" pos:column="18"/></literal></expr>;<pos:position pos:line="99" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="100" pos:column="3">t<pos:position pos:line="100" pos:column="4"/></name><operator pos:line="100" pos:column="4">-&gt;<pos:position pos:line="100" pos:column="9"/></operator><name pos:line="100" pos:column="6">disposition<pos:position pos:line="100" pos:column="17"/></name></name> <operator pos:line="100" pos:column="18">=<pos:position pos:line="100" pos:column="19"/></operator> <name pos:line="100" pos:column="20">DISPINLINE<pos:position pos:line="100" pos:column="30"/></name></expr>;<pos:position pos:line="100" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="102" pos:column="3">mutt_generate_boundary<pos:position pos:line="102" pos:column="25"/></name> <argument_list pos:line="102" pos:column="26">(<argument><expr><operator pos:line="102" pos:column="27">&amp;<pos:position pos:line="102" pos:column="32"/></operator><name><name pos:line="102" pos:column="28">t<pos:position pos:line="102" pos:column="29"/></name><operator pos:line="102" pos:column="29">-&gt;<pos:position pos:line="102" pos:column="34"/></operator><name pos:line="102" pos:column="31">parameter<pos:position pos:line="102" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="103" pos:column="3">mutt_set_parameter<pos:position pos:line="103" pos:column="21"/></name> <argument_list pos:line="103" pos:column="22">(<argument><expr><literal type="string" pos:line="103" pos:column="23">"protocol"<pos:position pos:line="103" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="35">"application/pgp-signature"<pos:position pos:line="103" pos:column="62"/></literal></expr></argument>, <argument><expr><operator pos:line="103" pos:column="64">&amp;<pos:position pos:line="103" pos:column="69"/></operator><name><name pos:line="103" pos:column="65">t<pos:position pos:line="103" pos:column="66"/></name><operator pos:line="103" pos:column="66">-&gt;<pos:position pos:line="103" pos:column="71"/></operator><name pos:line="103" pos:column="68">parameter<pos:position pos:line="103" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="79"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="104" pos:column="3">mutt_set_parameter<pos:position pos:line="104" pos:column="21"/></name> <argument_list pos:line="104" pos:column="22">(<argument><expr><literal type="string" pos:line="104" pos:column="23">"micalg"<pos:position pos:line="104" pos:column="31"/></literal></expr></argument>, <argument><expr><call><name pos:line="104" pos:column="33">pgp_micalg<pos:position pos:line="104" pos:column="43"/></name> <argument_list pos:line="104" pos:column="44">(<argument><expr><name pos:line="104" pos:column="45">sigfile<pos:position pos:line="104" pos:column="52"/></name></expr></argument>)<pos:position pos:line="104" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="104" pos:column="55">&amp;<pos:position pos:line="104" pos:column="60"/></operator><name><name pos:line="104" pos:column="56">t<pos:position pos:line="104" pos:column="57"/></name><operator pos:line="104" pos:column="57">-&gt;<pos:position pos:line="104" pos:column="62"/></operator><name pos:line="104" pos:column="59">parameter<pos:position pos:line="104" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="70"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="106" pos:column="3">t<pos:position pos:line="106" pos:column="4"/></name><operator pos:line="106" pos:column="4">-&gt;<pos:position pos:line="106" pos:column="9"/></operator><name pos:line="106" pos:column="6">parts<pos:position pos:line="106" pos:column="11"/></name></name> <operator pos:line="106" pos:column="12">=<pos:position pos:line="106" pos:column="13"/></operator> <name pos:line="106" pos:column="14">a<pos:position pos:line="106" pos:column="15"/></name></expr>;<pos:position pos:line="106" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name pos:line="107" pos:column="3">a<pos:position pos:line="107" pos:column="4"/></name> <operator pos:line="107" pos:column="5">=<pos:position pos:line="107" pos:column="6"/></operator> <name pos:line="107" pos:column="7">t<pos:position pos:line="107" pos:column="8"/></name></expr>;<pos:position pos:line="107" pos:column="9"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="109" pos:column="3">t<pos:position pos:line="109" pos:column="4"/></name><operator pos:line="109" pos:column="4">-&gt;<pos:position pos:line="109" pos:column="9"/></operator><name pos:line="109" pos:column="6">parts<pos:position pos:line="109" pos:column="11"/></name><operator pos:line="109" pos:column="11">-&gt;<pos:position pos:line="109" pos:column="16"/></operator><name pos:line="109" pos:column="13">next<pos:position pos:line="109" pos:column="17"/></name></name> <operator pos:line="109" pos:column="18">=<pos:position pos:line="109" pos:column="19"/></operator> <call><name pos:line="109" pos:column="20">mutt_new_body<pos:position pos:line="109" pos:column="33"/></name> <argument_list pos:line="109" pos:column="34">()<pos:position pos:line="109" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name pos:line="110" pos:column="3">t<pos:position pos:line="110" pos:column="4"/></name> <operator pos:line="110" pos:column="5">=<pos:position pos:line="110" pos:column="6"/></operator> <name><name pos:line="110" pos:column="7">t<pos:position pos:line="110" pos:column="8"/></name><operator pos:line="110" pos:column="8">-&gt;<pos:position pos:line="110" pos:column="13"/></operator><name pos:line="110" pos:column="10">parts<pos:position pos:line="110" pos:column="15"/></name><operator pos:line="110" pos:column="15">-&gt;<pos:position pos:line="110" pos:column="20"/></operator><name pos:line="110" pos:column="17">next<pos:position pos:line="110" pos:column="21"/></name></name></expr>;<pos:position pos:line="110" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="111" pos:column="3">t<pos:position pos:line="111" pos:column="4"/></name><operator pos:line="111" pos:column="4">-&gt;<pos:position pos:line="111" pos:column="9"/></operator><name pos:line="111" pos:column="6">type<pos:position pos:line="111" pos:column="10"/></name></name> <operator pos:line="111" pos:column="11">=<pos:position pos:line="111" pos:column="12"/></operator> <name pos:line="111" pos:column="13">TYPEAPPLICATION<pos:position pos:line="111" pos:column="28"/></name></expr>;<pos:position pos:line="111" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="112" pos:column="3">t<pos:position pos:line="112" pos:column="4"/></name><operator pos:line="112" pos:column="4">-&gt;<pos:position pos:line="112" pos:column="9"/></operator><name pos:line="112" pos:column="6">subtype<pos:position pos:line="112" pos:column="13"/></name></name> <operator pos:line="112" pos:column="14">=<pos:position pos:line="112" pos:column="15"/></operator> <call><name pos:line="112" pos:column="16">safe_strdup<pos:position pos:line="112" pos:column="27"/></name> <argument_list pos:line="112" pos:column="28">(<argument><expr><literal type="string" pos:line="112" pos:column="29">"pgp-signature"<pos:position pos:line="112" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="113" pos:column="3">t<pos:position pos:line="113" pos:column="4"/></name><operator pos:line="113" pos:column="4">-&gt;<pos:position pos:line="113" pos:column="9"/></operator><name pos:line="113" pos:column="6">filename<pos:position pos:line="113" pos:column="14"/></name></name> <operator pos:line="113" pos:column="15">=<pos:position pos:line="113" pos:column="16"/></operator> <call><name pos:line="113" pos:column="17">safe_strdup<pos:position pos:line="113" pos:column="28"/></name> <argument_list pos:line="113" pos:column="29">(<argument><expr><name pos:line="113" pos:column="30">sigfile<pos:position pos:line="113" pos:column="37"/></name></expr></argument>)<pos:position pos:line="113" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="114" pos:column="3">t<pos:position pos:line="114" pos:column="4"/></name><operator pos:line="114" pos:column="4">-&gt;<pos:position pos:line="114" pos:column="9"/></operator><name pos:line="114" pos:column="6">use_disp<pos:position pos:line="114" pos:column="14"/></name></name> <operator pos:line="114" pos:column="15">=<pos:position pos:line="114" pos:column="16"/></operator> <literal type="number" pos:line="114" pos:column="17">0<pos:position pos:line="114" pos:column="18"/></literal></expr>;<pos:position pos:line="114" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="115" pos:column="3">t<pos:position pos:line="115" pos:column="4"/></name><operator pos:line="115" pos:column="4">-&gt;<pos:position pos:line="115" pos:column="9"/></operator><name pos:line="115" pos:column="6">disposition<pos:position pos:line="115" pos:column="17"/></name></name> <operator pos:line="115" pos:column="18">=<pos:position pos:line="115" pos:column="19"/></operator> <name pos:line="115" pos:column="20">DISPNONE<pos:position pos:line="115" pos:column="28"/></name></expr>;<pos:position pos:line="115" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="116" pos:column="3">t<pos:position pos:line="116" pos:column="4"/></name><operator pos:line="116" pos:column="4">-&gt;<pos:position pos:line="116" pos:column="9"/></operator><name pos:line="116" pos:column="6">encoding<pos:position pos:line="116" pos:column="14"/></name></name> <operator pos:line="116" pos:column="15">=<pos:position pos:line="116" pos:column="16"/></operator> <name pos:line="116" pos:column="17">ENC7BIT<pos:position pos:line="116" pos:column="24"/></name></expr>;<pos:position pos:line="116" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="117" pos:column="3">t<pos:position pos:line="117" pos:column="4"/></name><operator pos:line="117" pos:column="4">-&gt;<pos:position pos:line="117" pos:column="9"/></operator><name pos:line="117" pos:column="6">unlink<pos:position pos:line="117" pos:column="12"/></name></name> <operator pos:line="117" pos:column="13">=<pos:position pos:line="117" pos:column="14"/></operator> <literal type="number" pos:line="117" pos:column="15">1<pos:position pos:line="117" pos:column="16"/></literal></expr>;<pos:position pos:line="117" pos:column="17"/></expr_stmt> <comment type="block" pos:line="117" pos:column="18">/* ok to remove this file after sending. */</comment>
  <expr_stmt><expr><call><name pos:line="118" pos:column="3">mutt_set_parameter<pos:position pos:line="118" pos:column="21"/></name> <argument_list pos:line="118" pos:column="22">(<argument><expr><literal type="string" pos:line="118" pos:column="23">"name"<pos:position pos:line="118" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="31">"signature.asc"<pos:position pos:line="118" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="118" pos:column="48">&amp;<pos:position pos:line="118" pos:column="53"/></operator><name><name pos:line="118" pos:column="49">t<pos:position pos:line="118" pos:column="50"/></name><operator pos:line="118" pos:column="50">-&gt;<pos:position pos:line="118" pos:column="55"/></operator><name pos:line="118" pos:column="52">parameter<pos:position pos:line="118" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="118" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="63"/></expr_stmt>

  <return pos:line="120" pos:column="3">return <expr><operator pos:line="120" pos:column="10">(<pos:position pos:line="120" pos:column="11"/></operator><name pos:line="120" pos:column="11">a<pos:position pos:line="120" pos:column="12"/></name><operator pos:line="120" pos:column="12">)<pos:position pos:line="120" pos:column="13"/></operator></expr>;<pos:position pos:line="120" pos:column="14"/></return>
}<pos:position pos:line="121" pos:column="2"/></block></function></unit>

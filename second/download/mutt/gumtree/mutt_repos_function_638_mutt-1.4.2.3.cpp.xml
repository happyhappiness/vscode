<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_638_mutt-1.4.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">text_plain_flowed_handler<pos:position pos:line="1" pos:column="38"/></name> <parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">BODY<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">a<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">STATE<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">s<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">line<pos:position pos:line="3" pos:column="12"/></name><index pos:line="3" pos:column="12">[<expr><name pos:line="3" pos:column="13">LONG_STRING<pos:position pos:line="3" pos:column="24"/></name></expr>]<pos:position pos:line="3" pos:column="25"/></index></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">indent<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><name pos:line="4" pos:column="15">LONG_STRING<pos:position pos:line="4" pos:column="26"/></name></expr>]<pos:position pos:line="4" pos:column="27"/></index></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type>  <name pos:line="6" pos:column="8">quoted<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><operator pos:line="6" pos:column="17">-<pos:position pos:line="6" pos:column="18"/></operator><literal type="number" pos:line="6" pos:column="18">1<pos:position pos:line="6" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type>  <name pos:line="7" pos:column="8">last_quoted<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type>  <name pos:line="8" pos:column="8">full<pos:position pos:line="8" pos:column="12"/></name> <init pos:line="8" pos:column="13">= <expr><literal type="number" pos:line="8" pos:column="15">1<pos:position pos:line="8" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type>  <name pos:line="9" pos:column="8">last_full<pos:position pos:line="9" pos:column="17"/></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type>  <name pos:line="10" pos:column="8">col<pos:position pos:line="10" pos:column="11"/></name> <init pos:line="10" pos:column="12">= <expr><literal type="number" pos:line="10" pos:column="14">0<pos:position pos:line="10" pos:column="15"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="17">tmpcol<pos:position pos:line="10" pos:column="23"/></name></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type>  <name pos:line="12" pos:column="8">i_add<pos:position pos:line="12" pos:column="13"/></name> <init pos:line="12" pos:column="14">= <expr><literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type>  <name pos:line="13" pos:column="8">add<pos:position pos:line="13" pos:column="11"/></name> <init pos:line="13" pos:column="12">= <expr><literal type="number" pos:line="13" pos:column="14">0<pos:position pos:line="13" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type>  <name pos:line="14" pos:column="8">soft<pos:position pos:line="14" pos:column="12"/></name> <init pos:line="14" pos:column="13">= <expr><literal type="number" pos:line="14" pos:column="15">0<pos:position pos:line="14" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type>  <name pos:line="15" pos:column="8">l<pos:position pos:line="15" pos:column="9"/></name></decl>, <decl><type ref="prev"/><name pos:line="15" pos:column="11">rl<pos:position pos:line="15" pos:column="13"/></name></decl>;<pos:position pos:line="15" pos:column="14"/></decl_stmt>
  
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">int<pos:position pos:line="17" pos:column="6"/></name></type>  <name pos:line="17" pos:column="8">flowed_max<pos:position pos:line="17" pos:column="18"/></name></decl>;<pos:position pos:line="17" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">int<pos:position pos:line="18" pos:column="6"/></name></type>  <name pos:line="18" pos:column="8">bytes<pos:position pos:line="18" pos:column="13"/></name> <init pos:line="18" pos:column="14">= <expr><name><name pos:line="18" pos:column="16">a<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">-&gt;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="19">length<pos:position pos:line="18" pos:column="25"/></name></name></expr></init></decl>;<pos:position pos:line="18" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">int<pos:position pos:line="19" pos:column="6"/></name></type>  <name pos:line="19" pos:column="8">actually_wrap<pos:position pos:line="19" pos:column="21"/></name> <init pos:line="19" pos:column="22">= <expr><literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="26"/></decl_stmt>
  
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">char<pos:position pos:line="21" pos:column="7"/></name> <modifier pos:line="21" pos:column="8">*<pos:position pos:line="21" pos:column="9"/></modifier></type><name pos:line="21" pos:column="9">cont<pos:position pos:line="21" pos:column="13"/></name> <init pos:line="21" pos:column="14">= <expr><name pos:line="21" pos:column="16">NULL<pos:position pos:line="21" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="22" pos:column="3">char<pos:position pos:line="22" pos:column="7"/></name> <modifier pos:line="22" pos:column="8">*<pos:position pos:line="22" pos:column="9"/></modifier></type><name pos:line="22" pos:column="9">tail<pos:position pos:line="22" pos:column="13"/></name> <init pos:line="22" pos:column="14">= <expr><name pos:line="22" pos:column="16">NULL<pos:position pos:line="22" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="23" pos:column="3">char<pos:position pos:line="23" pos:column="7"/></name> <modifier pos:line="23" pos:column="8">*<pos:position pos:line="23" pos:column="9"/></modifier></type><name pos:line="23" pos:column="9">lc<pos:position pos:line="23" pos:column="11"/></name> <init pos:line="23" pos:column="12">= <expr><name pos:line="23" pos:column="14">NULL<pos:position pos:line="23" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="24" pos:column="3">char<pos:position pos:line="24" pos:column="7"/></name> <modifier pos:line="24" pos:column="8">*<pos:position pos:line="24" pos:column="9"/></modifier></type><name pos:line="24" pos:column="9">t<pos:position pos:line="24" pos:column="10"/></name></decl>;<pos:position pos:line="24" pos:column="11"/></decl_stmt>
  
  <expr_stmt><expr><operator pos:line="26" pos:column="3">*<pos:position pos:line="26" pos:column="4"/></operator><name pos:line="26" pos:column="4">indent<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator> <literal type="char" pos:line="26" pos:column="13">'\0'<pos:position pos:line="26" pos:column="17"/></literal></expr>;<pos:position pos:line="26" pos:column="18"/></expr_stmt>
  
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name><name pos:line="28" pos:column="7">s<pos:position pos:line="28" pos:column="8"/></name><operator pos:line="28" pos:column="8">-&gt;<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="10">prefix<pos:position pos:line="28" pos:column="16"/></name></name></expr>)<pos:position pos:line="28" pos:column="17"/></condition><then pos:line="28" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="5">add<pos:position pos:line="29" pos:column="8"/></name> <operator pos:line="29" pos:column="9">=<pos:position pos:line="29" pos:column="10"/></operator> <literal type="number" pos:line="29" pos:column="11">1<pos:position pos:line="29" pos:column="12"/></literal></expr>;<pos:position pos:line="29" pos:column="13"/></expr_stmt></block></then></if>
  
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><operator pos:line="31" pos:column="7">(<pos:position pos:line="31" pos:column="8"/></operator><name pos:line="31" pos:column="8">flowed_max<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <name pos:line="31" pos:column="21">FLOWED_MAX<pos:position pos:line="31" pos:column="31"/></name><operator pos:line="31" pos:column="31">)<pos:position pos:line="31" pos:column="32"/></operator> <operator pos:line="31" pos:column="33">&gt;<pos:position pos:line="31" pos:column="37"/></operator> <name pos:line="31" pos:column="35">COLS<pos:position pos:line="31" pos:column="39"/></name> <operator pos:line="31" pos:column="40">-<pos:position pos:line="31" pos:column="41"/></operator> <literal type="number" pos:line="31" pos:column="42">3<pos:position pos:line="31" pos:column="43"/></literal></expr>)<pos:position pos:line="31" pos:column="44"/></condition><then pos:line="31" pos:column="44">
    <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="5">flowed_max<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <name pos:line="32" pos:column="18">COLS<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">-<pos:position pos:line="32" pos:column="24"/></operator> <literal type="number" pos:line="32" pos:column="25">3<pos:position pos:line="32" pos:column="26"/></literal></expr>;<pos:position pos:line="32" pos:column="27"/></expr_stmt></block></then></if>
  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><name pos:line="33" pos:column="7">flowed_max<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">&gt;<pos:position pos:line="33" pos:column="22"/></operator> <name pos:line="33" pos:column="20">COLS<pos:position pos:line="33" pos:column="24"/></name> <operator pos:line="33" pos:column="25">-<pos:position pos:line="33" pos:column="26"/></operator> <name pos:line="33" pos:column="27">WrapMargin<pos:position pos:line="33" pos:column="37"/></name></expr>)<pos:position pos:line="33" pos:column="38"/></condition><then pos:line="33" pos:column="38">
    <block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="5">flowed_max<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <name pos:line="34" pos:column="18">COLS<pos:position pos:line="34" pos:column="22"/></name> <operator pos:line="34" pos:column="23">-<pos:position pos:line="34" pos:column="24"/></operator> <name pos:line="34" pos:column="25">WrapMargin<pos:position pos:line="34" pos:column="35"/></name></expr>;<pos:position pos:line="34" pos:column="36"/></expr_stmt></block></then></if>
  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><name pos:line="35" pos:column="7">flowed_max<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">&lt;=<pos:position pos:line="35" pos:column="23"/></operator> <literal type="number" pos:line="35" pos:column="21">0<pos:position pos:line="35" pos:column="22"/></literal></expr>)<pos:position pos:line="35" pos:column="23"/></condition><then pos:line="35" pos:column="23">
    <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="5">flowed_max<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <name pos:line="36" pos:column="18">COLS<pos:position pos:line="36" pos:column="22"/></name></expr>;<pos:position pos:line="36" pos:column="23"/></expr_stmt></block></then></if>
    

  <while pos:line="39" pos:column="3">while <condition pos:line="39" pos:column="9">(<expr><name pos:line="39" pos:column="10">bytes<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">&gt;<pos:position pos:line="39" pos:column="20"/></operator> <literal type="number" pos:line="39" pos:column="18">0<pos:position pos:line="39" pos:column="19"/></literal> <operator pos:line="39" pos:column="20">&amp;&amp;<pos:position pos:line="39" pos:column="30"/></operator> <call><name pos:line="39" pos:column="23">fgets<pos:position pos:line="39" pos:column="28"/></name> <argument_list pos:line="39" pos:column="29">(<argument><expr><name pos:line="39" pos:column="30">line<pos:position pos:line="39" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="36">sizeof <argument_list pos:line="39" pos:column="43">(<argument><expr><name pos:line="39" pos:column="44">line<pos:position pos:line="39" pos:column="48"/></name></expr></argument>)<pos:position pos:line="39" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="51">s<pos:position pos:line="39" pos:column="52"/></name><operator pos:line="39" pos:column="52">-&gt;<pos:position pos:line="39" pos:column="57"/></operator><name pos:line="39" pos:column="54">fpin<pos:position pos:line="39" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="60"/></condition>
  <block pos:line="40" pos:column="3">{
    <expr_stmt><expr><name pos:line="41" pos:column="5">bytes<pos:position pos:line="41" pos:column="10"/></name>        <operator pos:line="41" pos:column="18">-=<pos:position pos:line="41" pos:column="20"/></operator> <call><name pos:line="41" pos:column="21">strlen<pos:position pos:line="41" pos:column="27"/></name> <argument_list pos:line="41" pos:column="28">(<argument><expr><name pos:line="41" pos:column="29">line<pos:position pos:line="41" pos:column="33"/></name></expr></argument>)<pos:position pos:line="41" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="42" pos:column="5">tail<pos:position pos:line="42" pos:column="9"/></name>          <operator pos:line="42" pos:column="19">=<pos:position pos:line="42" pos:column="20"/></operator> <name pos:line="42" pos:column="21">NULL<pos:position pos:line="42" pos:column="25"/></name></expr>;<pos:position pos:line="42" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><name pos:line="44" pos:column="5">last_full<pos:position pos:line="44" pos:column="14"/></name>     <operator pos:line="44" pos:column="19">=<pos:position pos:line="44" pos:column="20"/></operator> <name pos:line="44" pos:column="21">full<pos:position pos:line="44" pos:column="25"/></name></expr>;<pos:position pos:line="44" pos:column="26"/></expr_stmt>
    
    <comment type="block" pos:line="46" pos:column="5">/* 
     * If the last line wasn't fully read, this is the
     * tail of some line. 
     */</comment>
    <expr_stmt><expr><name pos:line="50" pos:column="5">actually_wrap<pos:position pos:line="50" pos:column="18"/></name> <operator pos:line="50" pos:column="19">=<pos:position pos:line="50" pos:column="20"/></operator> <operator pos:line="50" pos:column="21">!<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="22">last_full<pos:position pos:line="50" pos:column="31"/></name></expr>;<pos:position pos:line="50" pos:column="32"/></expr_stmt> 
    
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><operator pos:line="52" pos:column="9">(<pos:position pos:line="52" pos:column="10"/></operator><name pos:line="52" pos:column="10">t<pos:position pos:line="52" pos:column="11"/></name> <operator pos:line="52" pos:column="12">=<pos:position pos:line="52" pos:column="13"/></operator> <call><name pos:line="52" pos:column="14">strrchr<pos:position pos:line="52" pos:column="21"/></name> <argument_list pos:line="52" pos:column="22">(<argument><expr><name pos:line="52" pos:column="23">line<pos:position pos:line="52" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="52" pos:column="29">'\r'<pos:position pos:line="52" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="34"/></argument_list></call><operator pos:line="52" pos:column="34">)<pos:position pos:line="52" pos:column="35"/></operator> <operator pos:line="52" pos:column="36">||<pos:position pos:line="52" pos:column="38"/></operator> <operator pos:line="52" pos:column="39">(<pos:position pos:line="52" pos:column="40"/></operator><name pos:line="52" pos:column="40">t<pos:position pos:line="52" pos:column="41"/></name> <operator pos:line="52" pos:column="42">=<pos:position pos:line="52" pos:column="43"/></operator> <call><name pos:line="52" pos:column="44">strrchr<pos:position pos:line="52" pos:column="51"/></name> <argument_list pos:line="52" pos:column="52">(<argument><expr><name pos:line="52" pos:column="53">line<pos:position pos:line="52" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="52" pos:column="59">'\n'<pos:position pos:line="52" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="64"/></argument_list></call><operator pos:line="52" pos:column="64">)<pos:position pos:line="52" pos:column="65"/></operator></expr>)<pos:position pos:line="52" pos:column="66"/></condition><then pos:line="52" pos:column="66">
    <block pos:line="53" pos:column="5">{
      <expr_stmt><expr><operator pos:line="54" pos:column="7">*<pos:position pos:line="54" pos:column="8"/></operator><name pos:line="54" pos:column="8">t<pos:position pos:line="54" pos:column="9"/></name>   <operator pos:line="54" pos:column="12">=<pos:position pos:line="54" pos:column="13"/></operator> <literal type="char" pos:line="54" pos:column="14">'\0'<pos:position pos:line="54" pos:column="18"/></literal></expr>;<pos:position pos:line="54" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><name pos:line="55" pos:column="7">full<pos:position pos:line="55" pos:column="11"/></name> <operator pos:line="55" pos:column="12">=<pos:position pos:line="55" pos:column="13"/></operator> <literal type="number" pos:line="55" pos:column="14">1<pos:position pos:line="55" pos:column="15"/></literal></expr>;<pos:position pos:line="55" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></then>
    <elseif pos:line="57" pos:column="5">else <if pos:line="57" pos:column="10">if <condition pos:line="57" pos:column="13">(<expr><operator pos:line="57" pos:column="14">(<pos:position pos:line="57" pos:column="15"/></operator><name pos:line="57" pos:column="15">t<pos:position pos:line="57" pos:column="16"/></name> <operator pos:line="57" pos:column="17">=<pos:position pos:line="57" pos:column="18"/></operator> <call><name pos:line="57" pos:column="19">strrchr<pos:position pos:line="57" pos:column="26"/></name> <argument_list pos:line="57" pos:column="27">(<argument><expr><name pos:line="57" pos:column="28">line<pos:position pos:line="57" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="57" pos:column="34">' '<pos:position pos:line="57" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="38"/></argument_list></call><operator pos:line="57" pos:column="38">)<pos:position pos:line="57" pos:column="39"/></operator> <operator pos:line="57" pos:column="40">||<pos:position pos:line="57" pos:column="42"/></operator> <operator pos:line="57" pos:column="43">(<pos:position pos:line="57" pos:column="44"/></operator><name pos:line="57" pos:column="44">t<pos:position pos:line="57" pos:column="45"/></name> <operator pos:line="57" pos:column="46">=<pos:position pos:line="57" pos:column="47"/></operator> <call><name pos:line="57" pos:column="48">strrchr<pos:position pos:line="57" pos:column="55"/></name> <argument_list pos:line="57" pos:column="56">(<argument><expr><name pos:line="57" pos:column="57">line<pos:position pos:line="57" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="57" pos:column="63">'\t'<pos:position pos:line="57" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="68"/></argument_list></call><operator pos:line="57" pos:column="68">)<pos:position pos:line="57" pos:column="69"/></operator></expr>)<pos:position pos:line="57" pos:column="70"/></condition><then pos:line="57" pos:column="70">
    <block pos:line="58" pos:column="5">{
      <comment type="block" pos:line="59" pos:column="7">/* 
       * Bad: We have a line of more than LONG_STRING characters.
       * (Which SHOULD NOT happen, since lines SHOULD be &lt;= 79
       * characters long.)
       * 
       * Try to simulate a soft line break at a word boundary.
       * Handle the rest of the line next time.
       * 
       * Give up when we have a single word which is longer than
       * LONG_STRING characters.  It will just be split into parts,
       * with a hard line break in between. 
       */</comment>

      <expr_stmt><expr><name pos:line="72" pos:column="7">full<pos:position pos:line="72" pos:column="11"/></name> <operator pos:line="72" pos:column="12">=<pos:position pos:line="72" pos:column="13"/></operator> <literal type="number" pos:line="72" pos:column="14">0<pos:position pos:line="72" pos:column="15"/></literal></expr>;<pos:position pos:line="72" pos:column="16"/></expr_stmt>
      <expr_stmt><expr><name pos:line="73" pos:column="7">l<pos:position pos:line="73" pos:column="8"/></name>    <operator pos:line="73" pos:column="12">=<pos:position pos:line="73" pos:column="13"/></operator> <call><name pos:line="73" pos:column="14">strlen<pos:position pos:line="73" pos:column="20"/></name> <argument_list pos:line="73" pos:column="21">(<argument><expr><name pos:line="73" pos:column="22">t<pos:position pos:line="73" pos:column="23"/></name> <operator pos:line="73" pos:column="24">+<pos:position pos:line="73" pos:column="25"/></operator> <literal type="number" pos:line="73" pos:column="26">1<pos:position pos:line="73" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="74" pos:column="7">t<pos:position pos:line="74" pos:column="8"/></name><index pos:line="74" pos:column="8">[<expr><literal type="number" pos:line="74" pos:column="9">0<pos:position pos:line="74" pos:column="10"/></literal></expr>]<pos:position pos:line="74" pos:column="11"/></index></name> <operator pos:line="74" pos:column="12">=<pos:position pos:line="74" pos:column="13"/></operator> <literal type="char" pos:line="74" pos:column="14">' '<pos:position pos:line="74" pos:column="17"/></literal></expr>;<pos:position pos:line="74" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="75" pos:column="7">t<pos:position pos:line="75" pos:column="8"/></name><index pos:line="75" pos:column="8">[<expr><literal type="number" pos:line="75" pos:column="9">1<pos:position pos:line="75" pos:column="10"/></literal></expr>]<pos:position pos:line="75" pos:column="11"/></index></name> <operator pos:line="75" pos:column="12">=<pos:position pos:line="75" pos:column="13"/></operator> <literal type="char" pos:line="75" pos:column="14">'\0'<pos:position pos:line="75" pos:column="18"/></literal></expr>;<pos:position pos:line="75" pos:column="19"/></expr_stmt>

      <if pos:line="77" pos:column="7">if <condition pos:line="77" pos:column="10">(<expr><name pos:line="77" pos:column="11">l<pos:position pos:line="77" pos:column="12"/></name></expr>)<pos:position pos:line="77" pos:column="13"/></condition><then pos:line="77" pos:column="13">
      <block pos:line="78" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="79" pos:column="9">fseek<pos:position pos:line="79" pos:column="14"/></name> <argument_list pos:line="79" pos:column="15">(<argument><expr><name><name pos:line="79" pos:column="16">s<pos:position pos:line="79" pos:column="17"/></name><operator pos:line="79" pos:column="17">-&gt;<pos:position pos:line="79" pos:column="22"/></operator><name pos:line="79" pos:column="19">fpin<pos:position pos:line="79" pos:column="23"/></name></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="25">-<pos:position pos:line="79" pos:column="26"/></operator><name pos:line="79" pos:column="26">l<pos:position pos:line="79" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="29">SEEK_CUR<pos:position pos:line="79" pos:column="37"/></name></expr></argument>)<pos:position pos:line="79" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name pos:line="80" pos:column="9">bytes<pos:position pos:line="80" pos:column="14"/></name> <operator pos:line="80" pos:column="15">+=<pos:position pos:line="80" pos:column="17"/></operator> <name pos:line="80" pos:column="18">l<pos:position pos:line="80" pos:column="19"/></name></expr>;<pos:position pos:line="80" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="81" pos:column="8"/></block></then></if>
    }<pos:position pos:line="82" pos:column="6"/></block></then></if></elseif>
    <else pos:line="83" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="7">full<pos:position pos:line="84" pos:column="11"/></name> <operator pos:line="84" pos:column="12">=<pos:position pos:line="84" pos:column="13"/></operator> <literal type="number" pos:line="84" pos:column="14">0<pos:position pos:line="84" pos:column="15"/></literal></expr>;<pos:position pos:line="84" pos:column="16"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="86" pos:column="5">last_quoted<pos:position pos:line="86" pos:column="16"/></name> <operator pos:line="86" pos:column="17">=<pos:position pos:line="86" pos:column="18"/></operator> <name pos:line="86" pos:column="19">quoted<pos:position pos:line="86" pos:column="25"/></name></expr>;<pos:position pos:line="86" pos:column="26"/></expr_stmt>

    <if pos:line="88" pos:column="5">if <condition pos:line="88" pos:column="8">(<expr><name pos:line="88" pos:column="9">last_full<pos:position pos:line="88" pos:column="18"/></name></expr>)<pos:position pos:line="88" pos:column="19"/></condition><then pos:line="88" pos:column="19">
    <block pos:line="89" pos:column="5">{
      <comment type="block" pos:line="90" pos:column="7">/* 
       * We are in the beginning of a new line. Determine quote level
       * and indentation prefix 
       */</comment>
      <for pos:line="94" pos:column="7">for <control pos:line="94" pos:column="11">(<init><expr><name pos:line="94" pos:column="12">quoted<pos:position pos:line="94" pos:column="18"/></name> <operator pos:line="94" pos:column="19">=<pos:position pos:line="94" pos:column="20"/></operator> <literal type="number" pos:line="94" pos:column="21">0<pos:position pos:line="94" pos:column="22"/></literal></expr>;<pos:position pos:line="94" pos:column="23"/></init> <condition><expr><name><name pos:line="94" pos:column="24">line<pos:position pos:line="94" pos:column="28"/></name><index pos:line="94" pos:column="28">[<expr><name pos:line="94" pos:column="29">quoted<pos:position pos:line="94" pos:column="35"/></name></expr>]<pos:position pos:line="94" pos:column="36"/></index></name> <operator pos:line="94" pos:column="37">==<pos:position pos:line="94" pos:column="39"/></operator> <literal type="char" pos:line="94" pos:column="40">'&gt;'<pos:position pos:line="94" pos:column="46"/></literal></expr>;<pos:position pos:line="94" pos:column="44"/></condition> <incr><expr><name pos:line="94" pos:column="45">quoted<pos:position pos:line="94" pos:column="51"/></name><operator pos:line="94" pos:column="51">++<pos:position pos:line="94" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="94" pos:column="54"/></control>
	<block type="pseudo"><empty_stmt pos:line="95" pos:column="9">;<pos:position pos:line="95" pos:column="10"/></empty_stmt></block></for>
      
      <expr_stmt><expr><name pos:line="97" pos:column="7">cont<pos:position pos:line="97" pos:column="11"/></name> <operator pos:line="97" pos:column="12">=<pos:position pos:line="97" pos:column="13"/></operator> <name pos:line="97" pos:column="14">line<pos:position pos:line="97" pos:column="18"/></name> <operator pos:line="97" pos:column="19">+<pos:position pos:line="97" pos:column="20"/></operator> <name pos:line="97" pos:column="21">quoted<pos:position pos:line="97" pos:column="27"/></name></expr>;<pos:position pos:line="97" pos:column="28"/></expr_stmt>
      
      <comment type="block" pos:line="99" pos:column="7">/* undo space stuffing */</comment>
      <if pos:line="100" pos:column="7">if <condition pos:line="100" pos:column="10">(<expr><operator pos:line="100" pos:column="11">*<pos:position pos:line="100" pos:column="12"/></operator><name pos:line="100" pos:column="12">cont<pos:position pos:line="100" pos:column="16"/></name> <operator pos:line="100" pos:column="17">==<pos:position pos:line="100" pos:column="19"/></operator> <literal type="char" pos:line="100" pos:column="20">' '<pos:position pos:line="100" pos:column="23"/></literal></expr>)<pos:position pos:line="100" pos:column="24"/></condition><then pos:line="100" pos:column="24">
	<block type="pseudo"><expr_stmt><expr><name pos:line="101" pos:column="9">cont<pos:position pos:line="101" pos:column="13"/></name><operator pos:line="101" pos:column="13">++<pos:position pos:line="101" pos:column="15"/></operator></expr>;<pos:position pos:line="101" pos:column="16"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="103" pos:column="7">/* If there is an indentation, record it. */</comment>
      <expr_stmt><expr><name pos:line="104" pos:column="7">cont<pos:position pos:line="104" pos:column="11"/></name>  <operator pos:line="104" pos:column="13">=<pos:position pos:line="104" pos:column="14"/></operator> <call><name pos:line="104" pos:column="15">flowed_skip_indent<pos:position pos:line="104" pos:column="33"/></name> <argument_list pos:line="104" pos:column="34">(<argument><expr><name pos:line="104" pos:column="35">indent<pos:position pos:line="104" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="43">cont<pos:position pos:line="104" pos:column="47"/></name></expr></argument>)<pos:position pos:line="104" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><name pos:line="105" pos:column="7">i_add<pos:position pos:line="105" pos:column="12"/></name> <operator pos:line="105" pos:column="13">=<pos:position pos:line="105" pos:column="14"/></operator> <call><name pos:line="105" pos:column="15">flowed_visual_strlen<pos:position pos:line="105" pos:column="35"/></name> <argument_list pos:line="105" pos:column="36">(<argument><expr><name pos:line="105" pos:column="37">indent<pos:position pos:line="105" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="45">quoted<pos:position pos:line="105" pos:column="51"/></name> <operator pos:line="105" pos:column="52">+<pos:position pos:line="105" pos:column="53"/></operator> <name pos:line="105" pos:column="54">add<pos:position pos:line="105" pos:column="57"/></name></expr></argument>)<pos:position pos:line="105" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="106" pos:column="6"/></block></then>
    <else pos:line="107" pos:column="5">else
    <block pos:line="108" pos:column="5">{
      <comment type="block" pos:line="109" pos:column="7">/* 
       * This is just the tail of some over-long line. Keep
       * indentation and quote levels.  Don't unstuff.
       */</comment>
      <expr_stmt><expr><name pos:line="113" pos:column="7">cont<pos:position pos:line="113" pos:column="11"/></name> <operator pos:line="113" pos:column="12">=<pos:position pos:line="113" pos:column="13"/></operator> <name pos:line="113" pos:column="14">line<pos:position pos:line="113" pos:column="18"/></name></expr>;<pos:position pos:line="113" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="114" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="116" pos:column="5">/* If we have a change in quoting depth, wrap. */</comment>

    <if pos:line="118" pos:column="5">if <condition pos:line="118" pos:column="8">(<expr><name pos:line="118" pos:column="9">col<pos:position pos:line="118" pos:column="12"/></name> <operator pos:line="118" pos:column="13">&amp;&amp;<pos:position pos:line="118" pos:column="23"/></operator> <name pos:line="118" pos:column="16">last_quoted<pos:position pos:line="118" pos:column="27"/></name> <operator pos:line="118" pos:column="28">!=<pos:position pos:line="118" pos:column="30"/></operator> <name pos:line="118" pos:column="31">quoted<pos:position pos:line="118" pos:column="37"/></name> <operator pos:line="118" pos:column="38">&amp;&amp;<pos:position pos:line="118" pos:column="48"/></operator> <name pos:line="118" pos:column="41">last_quoted<pos:position pos:line="118" pos:column="52"/></name> <operator pos:line="118" pos:column="53">&gt;=<pos:position pos:line="118" pos:column="58"/></operator> <literal type="number" pos:line="118" pos:column="56">0<pos:position pos:line="118" pos:column="57"/></literal></expr>)<pos:position pos:line="118" pos:column="58"/></condition><then pos:line="118" pos:column="58">
    <block pos:line="119" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="120" pos:column="7">state_putc<pos:position pos:line="120" pos:column="17"/></name> <argument_list pos:line="120" pos:column="18">(<argument><expr><literal type="char" pos:line="120" pos:column="19">'\n'<pos:position pos:line="120" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="120" pos:column="25">s<pos:position pos:line="120" pos:column="26"/></name></expr></argument>)<pos:position pos:line="120" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name pos:line="121" pos:column="7">col<pos:position pos:line="121" pos:column="10"/></name> <operator pos:line="121" pos:column="11">=<pos:position pos:line="121" pos:column="12"/></operator> <literal type="number" pos:line="121" pos:column="13">0<pos:position pos:line="121" pos:column="14"/></literal></expr>;<pos:position pos:line="121" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="122" pos:column="6"/></block></then></if>
    
    <do pos:line="124" pos:column="5">do 
    <block pos:line="125" pos:column="5">{
      <if pos:line="126" pos:column="7">if <condition pos:line="126" pos:column="10">(<expr><name pos:line="126" pos:column="11">tail<pos:position pos:line="126" pos:column="15"/></name></expr>)<pos:position pos:line="126" pos:column="16"/></condition><then pos:line="126" pos:column="16">
	<block type="pseudo"><expr_stmt><expr><name pos:line="127" pos:column="9">cont<pos:position pos:line="127" pos:column="13"/></name> <operator pos:line="127" pos:column="14">=<pos:position pos:line="127" pos:column="15"/></operator> <name pos:line="127" pos:column="16">tail<pos:position pos:line="127" pos:column="20"/></name></expr>;<pos:position pos:line="127" pos:column="21"/></expr_stmt></block></then></if>

      <expr_stmt><expr><call><name pos:line="129" pos:column="7">SKIPWS<pos:position pos:line="129" pos:column="13"/></name> <argument_list pos:line="129" pos:column="14">(<argument><expr><name pos:line="129" pos:column="15">cont<pos:position pos:line="129" pos:column="19"/></name></expr></argument>)<pos:position pos:line="129" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="21"/></expr_stmt>
      
      <expr_stmt><expr><name pos:line="131" pos:column="7">tail<pos:position pos:line="131" pos:column="11"/></name> <operator pos:line="131" pos:column="12">=<pos:position pos:line="131" pos:column="13"/></operator> <name pos:line="131" pos:column="14">NULL<pos:position pos:line="131" pos:column="18"/></name></expr>;<pos:position pos:line="131" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><name pos:line="132" pos:column="7">soft<pos:position pos:line="132" pos:column="11"/></name> <operator pos:line="132" pos:column="12">=<pos:position pos:line="132" pos:column="13"/></operator> <literal type="number" pos:line="132" pos:column="14">0<pos:position pos:line="132" pos:column="15"/></literal></expr>;<pos:position pos:line="132" pos:column="16"/></expr_stmt>
      
      <comment type="block" pos:line="134" pos:column="7">/* try to find a point for word wrapping */</comment>

    <label><name pos:line="136" pos:column="5">retry_wrap<pos:position pos:line="136" pos:column="15"/></name>:<pos:position pos:line="136" pos:column="16"/></label>
      <expr_stmt><expr><name pos:line="137" pos:column="7">l<pos:position pos:line="137" pos:column="8"/></name>  <operator pos:line="137" pos:column="10">=<pos:position pos:line="137" pos:column="11"/></operator> <call><name pos:line="137" pos:column="12">flowed_visual_strlen<pos:position pos:line="137" pos:column="32"/></name> <argument_list pos:line="137" pos:column="33">(<argument><expr><name pos:line="137" pos:column="34">cont<pos:position pos:line="137" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="40">quoted<pos:position pos:line="137" pos:column="46"/></name> <operator pos:line="137" pos:column="47">+<pos:position pos:line="137" pos:column="48"/></operator> <name pos:line="137" pos:column="49">i_add<pos:position pos:line="137" pos:column="54"/></name> <operator pos:line="137" pos:column="55">+<pos:position pos:line="137" pos:column="56"/></operator> <name pos:line="137" pos:column="57">add<pos:position pos:line="137" pos:column="60"/></name> <operator pos:line="137" pos:column="61">+<pos:position pos:line="137" pos:column="62"/></operator> <name pos:line="137" pos:column="63">col<pos:position pos:line="137" pos:column="66"/></name></expr></argument>)<pos:position pos:line="137" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="68"/></expr_stmt>
      <expr_stmt><expr><name pos:line="138" pos:column="7">rl<pos:position pos:line="138" pos:column="9"/></name> <operator pos:line="138" pos:column="10">=<pos:position pos:line="138" pos:column="11"/></operator> <call><name pos:line="138" pos:column="12">mutt_strlen<pos:position pos:line="138" pos:column="23"/></name> <argument_list pos:line="138" pos:column="24">(<argument><expr><name pos:line="138" pos:column="25">cont<pos:position pos:line="138" pos:column="29"/></name></expr></argument>)<pos:position pos:line="138" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="31"/></expr_stmt>
      <if pos:line="139" pos:column="7">if <condition pos:line="139" pos:column="10">(<expr><name pos:line="139" pos:column="11">quoted<pos:position pos:line="139" pos:column="17"/></name> <operator pos:line="139" pos:column="18">+<pos:position pos:line="139" pos:column="19"/></operator> <name pos:line="139" pos:column="20">i_add<pos:position pos:line="139" pos:column="25"/></name> <operator pos:line="139" pos:column="26">+<pos:position pos:line="139" pos:column="27"/></operator> <name pos:line="139" pos:column="28">add<pos:position pos:line="139" pos:column="31"/></name> <operator pos:line="139" pos:column="32">+<pos:position pos:line="139" pos:column="33"/></operator> <name pos:line="139" pos:column="34">col<pos:position pos:line="139" pos:column="37"/></name> <operator pos:line="139" pos:column="38">+<pos:position pos:line="139" pos:column="39"/></operator> <name pos:line="139" pos:column="40">l<pos:position pos:line="139" pos:column="41"/></name> <operator pos:line="139" pos:column="42">&gt;<pos:position pos:line="139" pos:column="46"/></operator> <name pos:line="139" pos:column="44">flowed_max<pos:position pos:line="139" pos:column="54"/></name></expr>)<pos:position pos:line="139" pos:column="55"/></condition><then pos:line="139" pos:column="55">
      <block pos:line="140" pos:column="7">{
	<expr_stmt><expr><name pos:line="141" pos:column="9">actually_wrap<pos:position pos:line="141" pos:column="22"/></name> <operator pos:line="141" pos:column="23">=<pos:position pos:line="141" pos:column="24"/></operator> <literal type="number" pos:line="141" pos:column="25">1<pos:position pos:line="141" pos:column="26"/></literal></expr>;<pos:position pos:line="141" pos:column="27"/></expr_stmt>

	<for pos:line="143" pos:column="9">for <control pos:line="143" pos:column="13">(<init><expr><name pos:line="143" pos:column="14">tmpcol<pos:position pos:line="143" pos:column="20"/></name> <operator pos:line="143" pos:column="21">=<pos:position pos:line="143" pos:column="22"/></operator> <name pos:line="143" pos:column="23">quoted<pos:position pos:line="143" pos:column="29"/></name> <operator pos:line="143" pos:column="30">+<pos:position pos:line="143" pos:column="31"/></operator> <name pos:line="143" pos:column="32">i_add<pos:position pos:line="143" pos:column="37"/></name> <operator pos:line="143" pos:column="38">+<pos:position pos:line="143" pos:column="39"/></operator> <name pos:line="143" pos:column="40">add<pos:position pos:line="143" pos:column="43"/></name> <operator pos:line="143" pos:column="44">+<pos:position pos:line="143" pos:column="45"/></operator> <name pos:line="143" pos:column="46">col<pos:position pos:line="143" pos:column="49"/></name></expr><operator pos:line="143" pos:column="49">,<pos:position pos:line="143" pos:column="50"/></operator> <expr><name pos:line="143" pos:column="51">t<pos:position pos:line="143" pos:column="52"/></name> <operator pos:line="143" pos:column="53">=<pos:position pos:line="143" pos:column="54"/></operator> <name pos:line="143" pos:column="55">cont<pos:position pos:line="143" pos:column="59"/></name></expr>;<pos:position pos:line="143" pos:column="60"/></init>
	     <condition><expr><operator pos:line="144" pos:column="14">*<pos:position pos:line="144" pos:column="15"/></operator><name pos:line="144" pos:column="15">t<pos:position pos:line="144" pos:column="16"/></name> <operator pos:line="144" pos:column="17">&amp;&amp;<pos:position pos:line="144" pos:column="27"/></operator> <name pos:line="144" pos:column="20">tmpcol<pos:position pos:line="144" pos:column="26"/></name> <operator pos:line="144" pos:column="27">&lt;<pos:position pos:line="144" pos:column="31"/></operator> <name pos:line="144" pos:column="29">flowed_max<pos:position pos:line="144" pos:column="39"/></name></expr>;<pos:position pos:line="144" pos:column="40"/></condition> <incr><expr><name pos:line="144" pos:column="41">t<pos:position pos:line="144" pos:column="42"/></name><operator pos:line="144" pos:column="42">++<pos:position pos:line="144" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="144" pos:column="45"/></control>
	<block pos:line="145" pos:column="9">{
	  <if pos:line="146" pos:column="11">if <condition pos:line="146" pos:column="14">(<expr><operator pos:line="146" pos:column="15">*<pos:position pos:line="146" pos:column="16"/></operator><name pos:line="146" pos:column="16">t<pos:position pos:line="146" pos:column="17"/></name> <operator pos:line="146" pos:column="18">==<pos:position pos:line="146" pos:column="20"/></operator> <literal type="char" pos:line="146" pos:column="21">' '<pos:position pos:line="146" pos:column="24"/></literal> <operator pos:line="146" pos:column="25">||<pos:position pos:line="146" pos:column="27"/></operator> <operator pos:line="146" pos:column="28">*<pos:position pos:line="146" pos:column="29"/></operator><name pos:line="146" pos:column="29">t<pos:position pos:line="146" pos:column="30"/></name> <operator pos:line="146" pos:column="31">==<pos:position pos:line="146" pos:column="33"/></operator> <literal type="char" pos:line="146" pos:column="34">'\t'<pos:position pos:line="146" pos:column="38"/></literal></expr>)<pos:position pos:line="146" pos:column="39"/></condition><then pos:line="146" pos:column="39">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="147" pos:column="13">tail<pos:position pos:line="147" pos:column="17"/></name> <operator pos:line="147" pos:column="18">=<pos:position pos:line="147" pos:column="19"/></operator> <name pos:line="147" pos:column="20">t<pos:position pos:line="147" pos:column="21"/></name></expr>;<pos:position pos:line="147" pos:column="22"/></expr_stmt></block></then></if>
	  <if pos:line="148" pos:column="11">if <condition pos:line="148" pos:column="14">(<expr><operator pos:line="148" pos:column="15">*<pos:position pos:line="148" pos:column="16"/></operator><name pos:line="148" pos:column="16">t<pos:position pos:line="148" pos:column="17"/></name> <operator pos:line="148" pos:column="18">==<pos:position pos:line="148" pos:column="20"/></operator> <literal type="char" pos:line="148" pos:column="21">'\t'<pos:position pos:line="148" pos:column="25"/></literal></expr>)<pos:position pos:line="148" pos:column="26"/></condition><then pos:line="148" pos:column="26">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="149" pos:column="13">tmpcol<pos:position pos:line="149" pos:column="19"/></name> <operator pos:line="149" pos:column="20">=<pos:position pos:line="149" pos:column="21"/></operator> <operator pos:line="149" pos:column="22">(<pos:position pos:line="149" pos:column="23"/></operator><name pos:line="149" pos:column="23">tmpcol<pos:position pos:line="149" pos:column="29"/></name> <operator pos:line="149" pos:column="30">&amp;<pos:position pos:line="149" pos:column="35"/></operator> <operator pos:line="149" pos:column="32">~<pos:position pos:line="149" pos:column="33"/></operator><literal type="number" pos:line="149" pos:column="33">7<pos:position pos:line="149" pos:column="34"/></literal><operator pos:line="149" pos:column="34">)<pos:position pos:line="149" pos:column="35"/></operator> <operator pos:line="149" pos:column="36">+<pos:position pos:line="149" pos:column="37"/></operator> <literal type="number" pos:line="149" pos:column="38">8<pos:position pos:line="149" pos:column="39"/></literal></expr>;<pos:position pos:line="149" pos:column="40"/></expr_stmt></block></then>
	  <else pos:line="150" pos:column="11">else
	    <block type="pseudo"><expr_stmt><expr><name pos:line="151" pos:column="13">tmpcol<pos:position pos:line="151" pos:column="19"/></name><operator pos:line="151" pos:column="19">++<pos:position pos:line="151" pos:column="21"/></operator></expr>;<pos:position pos:line="151" pos:column="22"/></expr_stmt></block></else></if>
	}<pos:position pos:line="152" pos:column="10"/></block></for>
	
	<if pos:line="154" pos:column="9">if <condition pos:line="154" pos:column="12">(<expr><name pos:line="154" pos:column="13">tail<pos:position pos:line="154" pos:column="17"/></name></expr>)<pos:position pos:line="154" pos:column="18"/></condition><then pos:line="154" pos:column="18">
	<block pos:line="155" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="156" pos:column="11">*<pos:position pos:line="156" pos:column="12"/></operator><name pos:line="156" pos:column="12">tail<pos:position pos:line="156" pos:column="16"/></name><operator pos:line="156" pos:column="16">++<pos:position pos:line="156" pos:column="18"/></operator> <operator pos:line="156" pos:column="19">=<pos:position pos:line="156" pos:column="20"/></operator> <literal type="char" pos:line="156" pos:column="21">'\0'<pos:position pos:line="156" pos:column="25"/></literal></expr>;<pos:position pos:line="156" pos:column="26"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="157" pos:column="11">soft<pos:position pos:line="157" pos:column="15"/></name> <operator pos:line="157" pos:column="16">=<pos:position pos:line="157" pos:column="17"/></operator> <literal type="number" pos:line="157" pos:column="18">2<pos:position pos:line="157" pos:column="19"/></literal></expr>;<pos:position pos:line="157" pos:column="20"/></expr_stmt>
	}<pos:position pos:line="158" pos:column="10"/></block></then></if>
      }<pos:position pos:line="159" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="161" pos:column="7">/* We seem to be desperate.  Get me a new line, and retry. */</comment>
      <if pos:line="162" pos:column="7">if <condition pos:line="162" pos:column="10">(<expr><operator pos:line="162" pos:column="11">!<pos:position pos:line="162" pos:column="12"/></operator><name pos:line="162" pos:column="12">tail<pos:position pos:line="162" pos:column="16"/></name> <operator pos:line="162" pos:column="17">&amp;&amp;<pos:position pos:line="162" pos:column="27"/></operator> <operator pos:line="162" pos:column="20">(<pos:position pos:line="162" pos:column="21"/></operator><name pos:line="162" pos:column="21">quoted<pos:position pos:line="162" pos:column="27"/></name> <operator pos:line="162" pos:column="28">+<pos:position pos:line="162" pos:column="29"/></operator> <name pos:line="162" pos:column="30">add<pos:position pos:line="162" pos:column="33"/></name> <operator pos:line="162" pos:column="34">+<pos:position pos:line="162" pos:column="35"/></operator> <name pos:line="162" pos:column="36">col<pos:position pos:line="162" pos:column="39"/></name> <operator pos:line="162" pos:column="40">+<pos:position pos:line="162" pos:column="41"/></operator> <name pos:line="162" pos:column="42">i_add<pos:position pos:line="162" pos:column="47"/></name> <operator pos:line="162" pos:column="48">+<pos:position pos:line="162" pos:column="49"/></operator> <name pos:line="162" pos:column="50">l<pos:position pos:line="162" pos:column="51"/></name> <operator pos:line="162" pos:column="52">&gt;<pos:position pos:line="162" pos:column="56"/></operator> <name pos:line="162" pos:column="54">flowed_max<pos:position pos:line="162" pos:column="64"/></name><operator pos:line="162" pos:column="64">)<pos:position pos:line="162" pos:column="65"/></operator> <operator pos:line="162" pos:column="66">&amp;&amp;<pos:position pos:line="162" pos:column="76"/></operator> <name pos:line="162" pos:column="69">col<pos:position pos:line="162" pos:column="72"/></name></expr>)<pos:position pos:line="162" pos:column="73"/></condition><then pos:line="162" pos:column="73">
      <block pos:line="163" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="164" pos:column="9">state_putc<pos:position pos:line="164" pos:column="19"/></name> <argument_list pos:line="164" pos:column="20">(<argument><expr><literal type="char" pos:line="164" pos:column="21">'\n'<pos:position pos:line="164" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="164" pos:column="27">s<pos:position pos:line="164" pos:column="28"/></name></expr></argument>)<pos:position pos:line="164" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="165" pos:column="9">col<pos:position pos:line="165" pos:column="12"/></name> <operator pos:line="165" pos:column="13">=<pos:position pos:line="165" pos:column="14"/></operator> <literal type="number" pos:line="165" pos:column="15">0<pos:position pos:line="165" pos:column="16"/></literal></expr>;<pos:position pos:line="165" pos:column="17"/></expr_stmt>
	<goto pos:line="166" pos:column="9">goto <name pos:line="166" pos:column="14">retry_wrap<pos:position pos:line="166" pos:column="24"/></name>;<pos:position pos:line="166" pos:column="25"/></goto>
      }<pos:position pos:line="167" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="169" pos:column="7">/* Detect soft line breaks. */</comment>
      <if pos:line="170" pos:column="7">if <condition pos:line="170" pos:column="10">(<expr><operator pos:line="170" pos:column="11">!<pos:position pos:line="170" pos:column="12"/></operator><name pos:line="170" pos:column="12">soft<pos:position pos:line="170" pos:column="16"/></name> <operator pos:line="170" pos:column="17">&amp;&amp;<pos:position pos:line="170" pos:column="27"/></operator> <call><name pos:line="170" pos:column="20">ascii_strcmp<pos:position pos:line="170" pos:column="32"/></name> <argument_list pos:line="170" pos:column="33">(<argument><expr><name pos:line="170" pos:column="34">cont<pos:position pos:line="170" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="170" pos:column="40">"-- "<pos:position pos:line="170" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="170" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="170" pos:column="47"/></condition><then pos:line="170" pos:column="47">
      <block pos:line="171" pos:column="7">{
	<expr_stmt><expr><name pos:line="172" pos:column="9">lc<pos:position pos:line="172" pos:column="11"/></name> <operator pos:line="172" pos:column="12">=<pos:position pos:line="172" pos:column="13"/></operator> <call><name pos:line="172" pos:column="14">strrchr<pos:position pos:line="172" pos:column="21"/></name> <argument_list pos:line="172" pos:column="22">(<argument><expr><name pos:line="172" pos:column="23">cont<pos:position pos:line="172" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="172" pos:column="29">' '<pos:position pos:line="172" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="172" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="34"/></expr_stmt>
	<if pos:line="173" pos:column="9">if <condition pos:line="173" pos:column="12">(<expr><name pos:line="173" pos:column="13">lc<pos:position pos:line="173" pos:column="15"/></name> <operator pos:line="173" pos:column="16">&amp;&amp;<pos:position pos:line="173" pos:column="26"/></operator> <name><name pos:line="173" pos:column="19">lc<pos:position pos:line="173" pos:column="21"/></name><index pos:line="173" pos:column="21">[<expr><literal type="number" pos:line="173" pos:column="22">1<pos:position pos:line="173" pos:column="23"/></literal></expr>]<pos:position pos:line="173" pos:column="24"/></index></name> <operator pos:line="173" pos:column="25">==<pos:position pos:line="173" pos:column="27"/></operator> <literal type="char" pos:line="173" pos:column="28">'\0'<pos:position pos:line="173" pos:column="32"/></literal></expr>)<pos:position pos:line="173" pos:column="33"/></condition><then pos:line="173" pos:column="33">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="174" pos:column="11">soft<pos:position pos:line="174" pos:column="15"/></name> <operator pos:line="174" pos:column="16">=<pos:position pos:line="174" pos:column="17"/></operator> <literal type="number" pos:line="174" pos:column="18">1<pos:position pos:line="174" pos:column="19"/></literal></expr>;<pos:position pos:line="174" pos:column="20"/></expr_stmt></block></then></if>
      }<pos:position pos:line="175" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="177" pos:column="7">/* 
       * If we are in the beginning of an output line, do quoting
       * and stuffing. 
       * 
       * We have to temporarily assemble the line since display
       * stuffing (i.e., turning off quote coloring) may depend on
       * the line's actual content.  You never know what people put
       * into their regular expressions. 
       */</comment>
      <if pos:line="186" pos:column="7">if <condition pos:line="186" pos:column="10">(<expr><operator pos:line="186" pos:column="11">!<pos:position pos:line="186" pos:column="12"/></operator><name pos:line="186" pos:column="12">col<pos:position pos:line="186" pos:column="15"/></name></expr>)<pos:position pos:line="186" pos:column="16"/></condition><then pos:line="186" pos:column="16">
      <block pos:line="187" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="188" pos:column="9">char<pos:position pos:line="188" pos:column="13"/></name></type> <name><name pos:line="188" pos:column="14">tmp<pos:position pos:line="188" pos:column="17"/></name><index pos:line="188" pos:column="17">[<expr><name pos:line="188" pos:column="18">LONG_STRING<pos:position pos:line="188" pos:column="29"/></name></expr>]<pos:position pos:line="188" pos:column="30"/></index></name></decl>;<pos:position pos:line="188" pos:column="31"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="189" pos:column="9">snprintf<pos:position pos:line="189" pos:column="17"/></name> <argument_list pos:line="189" pos:column="18">(<argument><expr><name pos:line="189" pos:column="19">tmp<pos:position pos:line="189" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="189" pos:column="24">sizeof <argument_list pos:line="189" pos:column="31">(<argument><expr><name pos:line="189" pos:column="32">tmp<pos:position pos:line="189" pos:column="35"/></name></expr></argument>)<pos:position pos:line="189" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="189" pos:column="38">"%s%s"<pos:position pos:line="189" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="189" pos:column="46">indent<pos:position pos:line="189" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="189" pos:column="54">cont<pos:position pos:line="189" pos:column="58"/></name></expr></argument>)<pos:position pos:line="189" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="60"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="191" pos:column="9">flowed_quote<pos:position pos:line="191" pos:column="21"/></name> <argument_list pos:line="191" pos:column="22">(<argument><expr><name pos:line="191" pos:column="23">s<pos:position pos:line="191" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="26">quoted<pos:position pos:line="191" pos:column="32"/></name></expr></argument>)<pos:position pos:line="191" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="192" pos:column="9">flowed_stuff<pos:position pos:line="192" pos:column="21"/></name> <argument_list pos:line="192" pos:column="22">(<argument><expr><name pos:line="192" pos:column="23">s<pos:position pos:line="192" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="26">tmp<pos:position pos:line="192" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="31">quoted<pos:position pos:line="192" pos:column="37"/></name> <operator pos:line="192" pos:column="38">+<pos:position pos:line="192" pos:column="39"/></operator> <name pos:line="192" pos:column="40">add<pos:position pos:line="192" pos:column="43"/></name></expr></argument>)<pos:position pos:line="192" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="45"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="194" pos:column="9">state_puts<pos:position pos:line="194" pos:column="19"/></name> <argument_list pos:line="194" pos:column="20">(<argument><expr><name pos:line="194" pos:column="21">indent<pos:position pos:line="194" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="29">s<pos:position pos:line="194" pos:column="30"/></name></expr></argument>)<pos:position pos:line="194" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="32"/></expr_stmt>
      }<pos:position pos:line="195" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="197" pos:column="7">/* output the text */</comment>
      <expr_stmt><expr><call><name pos:line="198" pos:column="7">state_puts<pos:position pos:line="198" pos:column="17"/></name> <argument_list pos:line="198" pos:column="18">(<argument><expr><name pos:line="198" pos:column="19">cont<pos:position pos:line="198" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="198" pos:column="25">s<pos:position pos:line="198" pos:column="26"/></name></expr></argument>)<pos:position pos:line="198" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name pos:line="199" pos:column="7">col<pos:position pos:line="199" pos:column="10"/></name> <operator pos:line="199" pos:column="11">+=<pos:position pos:line="199" pos:column="13"/></operator> <call><name pos:line="199" pos:column="14">flowed_visual_strlen<pos:position pos:line="199" pos:column="34"/></name> <argument_list pos:line="199" pos:column="35">(<argument><expr><name pos:line="199" pos:column="36">cont<pos:position pos:line="199" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="42">quoted<pos:position pos:line="199" pos:column="48"/></name> <operator pos:line="199" pos:column="49">+<pos:position pos:line="199" pos:column="50"/></operator> <name pos:line="199" pos:column="51">i_add<pos:position pos:line="199" pos:column="56"/></name> <operator pos:line="199" pos:column="57">+<pos:position pos:line="199" pos:column="58"/></operator> <name pos:line="199" pos:column="59">add<pos:position pos:line="199" pos:column="62"/></name> <operator pos:line="199" pos:column="63">+<pos:position pos:line="199" pos:column="64"/></operator> <name pos:line="199" pos:column="65">col<pos:position pos:line="199" pos:column="68"/></name></expr></argument>)<pos:position pos:line="199" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="70"/></expr_stmt>
      
      <comment type="block" pos:line="201" pos:column="7">/* possibly indicate a soft line break */</comment>
      <if pos:line="202" pos:column="7">if <condition pos:line="202" pos:column="10">(<expr><name pos:line="202" pos:column="11">soft<pos:position pos:line="202" pos:column="15"/></name> <operator pos:line="202" pos:column="16">==<pos:position pos:line="202" pos:column="18"/></operator> <literal type="number" pos:line="202" pos:column="19">2<pos:position pos:line="202" pos:column="20"/></literal></expr>)<pos:position pos:line="202" pos:column="21"/></condition><then pos:line="202" pos:column="21">
      <block pos:line="203" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="204" pos:column="9">state_putc<pos:position pos:line="204" pos:column="19"/></name> <argument_list pos:line="204" pos:column="20">(<argument><expr><literal type="char" pos:line="204" pos:column="21">' '<pos:position pos:line="204" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="204" pos:column="26">s<pos:position pos:line="204" pos:column="27"/></name></expr></argument>)<pos:position pos:line="204" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name pos:line="205" pos:column="9">col<pos:position pos:line="205" pos:column="12"/></name><operator pos:line="205" pos:column="12">++<pos:position pos:line="205" pos:column="14"/></operator></expr>;<pos:position pos:line="205" pos:column="15"/></expr_stmt>
      }<pos:position pos:line="206" pos:column="8"/></block></then></if>
      
      <comment type="block" pos:line="208" pos:column="7">/* 
       * Wrap if this display line corresponds to a 
       * text line. Don't wrap if we changed the line.
       */</comment>
      <if pos:line="212" pos:column="7">if <condition pos:line="212" pos:column="10">(<expr><operator pos:line="212" pos:column="11">!<pos:position pos:line="212" pos:column="12"/></operator><name pos:line="212" pos:column="12">soft<pos:position pos:line="212" pos:column="16"/></name> <operator pos:line="212" pos:column="17">||<pos:position pos:line="212" pos:column="19"/></operator> <operator pos:line="212" pos:column="20">(<pos:position pos:line="212" pos:column="21"/></operator><operator pos:line="212" pos:column="21">!<pos:position pos:line="212" pos:column="22"/></operator><name pos:line="212" pos:column="22">actually_wrap<pos:position pos:line="212" pos:column="35"/></name> <operator pos:line="212" pos:column="36">&amp;&amp;<pos:position pos:line="212" pos:column="46"/></operator> <name pos:line="212" pos:column="39">full<pos:position pos:line="212" pos:column="43"/></name><operator pos:line="212" pos:column="43">)<pos:position pos:line="212" pos:column="44"/></operator></expr>)<pos:position pos:line="212" pos:column="45"/></condition><then pos:line="212" pos:column="45">
      <block pos:line="213" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="214" pos:column="9">state_putc<pos:position pos:line="214" pos:column="19"/></name> <argument_list pos:line="214" pos:column="20">(<argument><expr><literal type="char" pos:line="214" pos:column="21">'\n'<pos:position pos:line="214" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="214" pos:column="27">s<pos:position pos:line="214" pos:column="28"/></name></expr></argument>)<pos:position pos:line="214" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="215" pos:column="9">col<pos:position pos:line="215" pos:column="12"/></name> <operator pos:line="215" pos:column="13">=<pos:position pos:line="215" pos:column="14"/></operator> <literal type="number" pos:line="215" pos:column="15">0<pos:position pos:line="215" pos:column="16"/></literal></expr>;<pos:position pos:line="215" pos:column="17"/></expr_stmt>
      }<pos:position pos:line="216" pos:column="8"/></block></then></if>
    }<pos:position pos:line="217" pos:column="6"/></block>
    while <condition pos:line="218" pos:column="11">(<expr><name pos:line="218" pos:column="12">tail<pos:position pos:line="218" pos:column="16"/></name></expr>)<pos:position pos:line="218" pos:column="17"/></condition>;<pos:position pos:line="218" pos:column="18"/></do>
  }<pos:position pos:line="219" pos:column="4"/></block></while>

  <if pos:line="221" pos:column="3">if <condition pos:line="221" pos:column="6">(<expr><name pos:line="221" pos:column="7">col<pos:position pos:line="221" pos:column="10"/></name></expr>)<pos:position pos:line="221" pos:column="11"/></condition><then pos:line="221" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="222" pos:column="5">state_putc<pos:position pos:line="222" pos:column="15"/></name> <argument_list pos:line="222" pos:column="16">(<argument><expr><literal type="char" pos:line="222" pos:column="17">'\n'<pos:position pos:line="222" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="222" pos:column="23">s<pos:position pos:line="222" pos:column="24"/></name></expr></argument>)<pos:position pos:line="222" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="26"/></expr_stmt></block></then></if>
  
}<pos:position pos:line="224" pos:column="2"/></block></function></unit>

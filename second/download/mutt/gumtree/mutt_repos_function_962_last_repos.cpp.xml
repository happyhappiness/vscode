<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_962_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_rename_file<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">oldfile<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">newfile<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">FILE<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">ofp<pos:position pos:line="3" pos:column="12"/></name></decl>, <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="15">nfp<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name pos:line="5" pos:column="7">access<pos:position pos:line="5" pos:column="13"/></name> <argument_list pos:line="5" pos:column="14">(<argument><expr><name pos:line="5" pos:column="15">oldfile<pos:position pos:line="5" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="24">F_OK<pos:position pos:line="5" pos:column="28"/></name></expr></argument>)<pos:position pos:line="5" pos:column="29"/></argument_list></call> <operator pos:line="5" pos:column="30">!=<pos:position pos:line="5" pos:column="32"/></operator> <literal type="number" pos:line="5" pos:column="33">0<pos:position pos:line="5" pos:column="34"/></literal></expr>)<pos:position pos:line="5" pos:column="35"/></condition><then pos:line="5" pos:column="35">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><literal type="number" pos:line="6" pos:column="12">1<pos:position pos:line="6" pos:column="13"/></literal></expr>;<pos:position pos:line="6" pos:column="14"/></return></block></then></if>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><call><name pos:line="7" pos:column="7">access<pos:position pos:line="7" pos:column="13"/></name> <argument_list pos:line="7" pos:column="14">(<argument><expr><name pos:line="7" pos:column="15">newfile<pos:position pos:line="7" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="24">F_OK<pos:position pos:line="7" pos:column="28"/></name></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></call> <operator pos:line="7" pos:column="30">==<pos:position pos:line="7" pos:column="32"/></operator> <literal type="number" pos:line="7" pos:column="33">0<pos:position pos:line="7" pos:column="34"/></literal></expr>)<pos:position pos:line="7" pos:column="35"/></condition><then pos:line="7" pos:column="35">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><literal type="number" pos:line="8" pos:column="12">2<pos:position pos:line="8" pos:column="13"/></literal></expr>;<pos:position pos:line="8" pos:column="14"/></return></block></then></if>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">(<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">ofp<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">fopen<pos:position pos:line="9" pos:column="19"/></name> <argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">oldfile<pos:position pos:line="9" pos:column="28"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="9" pos:column="29">"r"<pos:position pos:line="9" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call><operator pos:line="9" pos:column="33">)<pos:position pos:line="9" pos:column="34"/></operator> <operator pos:line="9" pos:column="35">==<pos:position pos:line="9" pos:column="37"/></operator> <name pos:line="9" pos:column="38">NULL<pos:position pos:line="9" pos:column="42"/></name></expr>)<pos:position pos:line="9" pos:column="43"/></condition><then pos:line="9" pos:column="43">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><literal type="number" pos:line="10" pos:column="12">3<pos:position pos:line="10" pos:column="13"/></literal></expr>;<pos:position pos:line="10" pos:column="14"/></return></block></then></if>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">(<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">nfp<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">safe_fopen<pos:position pos:line="11" pos:column="24"/></name> <argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">newfile<pos:position pos:line="11" pos:column="33"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="11" pos:column="34">"w"<pos:position pos:line="11" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call><operator pos:line="11" pos:column="38">)<pos:position pos:line="11" pos:column="39"/></operator> <operator pos:line="11" pos:column="40">==<pos:position pos:line="11" pos:column="42"/></operator> <name pos:line="11" pos:column="43">NULL<pos:position pos:line="11" pos:column="47"/></name></expr>)<pos:position pos:line="11" pos:column="48"/></condition><then pos:line="11" pos:column="48">
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">safe_fclose<pos:position pos:line="13" pos:column="16"/></name> <argument_list pos:line="13" pos:column="17">(<argument><expr><operator pos:line="13" pos:column="18">&amp;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="19">ofp<pos:position pos:line="13" pos:column="22"/></name></expr></argument>)<pos:position pos:line="13" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><literal type="number" pos:line="14" pos:column="12">3<pos:position pos:line="14" pos:column="13"/></literal></expr>;<pos:position pos:line="14" pos:column="14"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">mutt_copy_stream<pos:position pos:line="16" pos:column="19"/></name> <argument_list pos:line="16" pos:column="20">(<argument><expr><name pos:line="16" pos:column="21">ofp<pos:position pos:line="16" pos:column="24"/></name></expr></argument>,<argument><expr><name pos:line="16" pos:column="25">nfp<pos:position pos:line="16" pos:column="28"/></name></expr></argument>)<pos:position pos:line="16" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">safe_fclose<pos:position pos:line="17" pos:column="14"/></name> <argument_list pos:line="17" pos:column="15">(<argument><expr><operator pos:line="17" pos:column="16">&amp;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="17">nfp<pos:position pos:line="17" pos:column="20"/></name></expr></argument>)<pos:position pos:line="17" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">safe_fclose<pos:position pos:line="18" pos:column="14"/></name> <argument_list pos:line="18" pos:column="15">(<argument><expr><operator pos:line="18" pos:column="16">&amp;<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="17">ofp<pos:position pos:line="18" pos:column="20"/></name></expr></argument>)<pos:position pos:line="18" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">mutt_unlink<pos:position pos:line="19" pos:column="14"/></name> <argument_list pos:line="19" pos:column="15">(<argument><expr><name pos:line="19" pos:column="16">oldfile<pos:position pos:line="19" pos:column="23"/></name></expr></argument>)<pos:position pos:line="19" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
  <return pos:line="20" pos:column="3">return <expr><literal type="number" pos:line="20" pos:column="10">0<pos:position pos:line="20" pos:column="11"/></literal></expr>;<pos:position pos:line="20" pos:column="12"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

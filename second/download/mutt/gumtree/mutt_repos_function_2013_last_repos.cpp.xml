<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2013_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name><modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type> <name pos:line="1" pos:column="14">msg_parse_flags<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">IMAP_HEADER<pos:position pos:line="1" pos:column="42"/></name><modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type> <name pos:line="1" pos:column="44">h<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name><modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type> <name pos:line="1" pos:column="53">s<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">IMAP_HEADER_DATA<pos:position pos:line="3" pos:column="19"/></name><modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type> <name pos:line="3" pos:column="21">hd<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><name><name pos:line="3" pos:column="26">h<pos:position pos:line="3" pos:column="27"/></name><operator pos:line="3" pos:column="27">-&gt;<pos:position pos:line="3" pos:column="32"/></operator><name pos:line="3" pos:column="29">data<pos:position pos:line="3" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>

  <comment type="block" pos:line="5" pos:column="3">/* sanity-check string */</comment>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><call><name pos:line="6" pos:column="7">ascii_strncasecmp<pos:position pos:line="6" pos:column="24"/></name> <argument_list pos:line="6" pos:column="25">(<argument><expr><literal type="string" pos:line="6" pos:column="26">"FLAGS"<pos:position pos:line="6" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="35">s<pos:position pos:line="6" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="38">5<pos:position pos:line="6" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call> <operator pos:line="6" pos:column="41">!=<pos:position pos:line="6" pos:column="43"/></operator> <literal type="number" pos:line="6" pos:column="44">0<pos:position pos:line="6" pos:column="45"/></literal></expr>)<pos:position pos:line="6" pos:column="46"/></condition><then pos:line="6" pos:column="46">
  <block pos:line="7" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">dprint<pos:position pos:line="8" pos:column="11"/></name> <argument_list pos:line="8" pos:column="12">(<argument><expr><literal type="number" pos:line="8" pos:column="13">1<pos:position pos:line="8" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="16">(<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">debugfile<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">,<pos:position pos:line="8" pos:column="27"/></operator> <literal type="string" pos:line="8" pos:column="28">"msg_parse_flags: not a FLAGS response: %s\n"<pos:position pos:line="8" pos:column="73"/></literal><operator pos:line="8" pos:column="73">,<pos:position pos:line="8" pos:column="74"/></operator>
      <name pos:line="9" pos:column="7">s<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">)<pos:position pos:line="9" pos:column="9"/></operator></expr></argument>)<pos:position pos:line="9" pos:column="10"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="11"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">NULL<pos:position pos:line="10" pos:column="16"/></name></expr>;<pos:position pos:line="10" pos:column="17"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="12" pos:column="3">s<pos:position pos:line="12" pos:column="4"/></name> <operator pos:line="12" pos:column="5">+=<pos:position pos:line="12" pos:column="7"/></operator> <literal type="number" pos:line="12" pos:column="8">5<pos:position pos:line="12" pos:column="9"/></literal></expr>;<pos:position pos:line="12" pos:column="10"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">SKIPWS<pos:position pos:line="13" pos:column="9"/></name><argument_list pos:line="13" pos:column="9">(<argument><expr><name pos:line="13" pos:column="10">s<pos:position pos:line="13" pos:column="11"/></name></expr></argument>)<pos:position pos:line="13" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="13"/></expr_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><operator pos:line="14" pos:column="7">*<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">s<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">!=<pos:position pos:line="14" pos:column="12"/></operator> <literal type="char" pos:line="14" pos:column="13">'('<pos:position pos:line="14" pos:column="16"/></literal></expr>)<pos:position pos:line="14" pos:column="17"/></condition><then pos:line="14" pos:column="17">
  <block pos:line="15" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">dprint<pos:position pos:line="16" pos:column="11"/></name> <argument_list pos:line="16" pos:column="12">(<argument><expr><literal type="number" pos:line="16" pos:column="13">1<pos:position pos:line="16" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="16">(<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">debugfile<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">,<pos:position pos:line="16" pos:column="27"/></operator> <literal type="string" pos:line="16" pos:column="28">"msg_parse_flags: bogus FLAGS response: %s\n"<pos:position pos:line="16" pos:column="73"/></literal><operator pos:line="16" pos:column="73">,<pos:position pos:line="16" pos:column="74"/></operator>
      <name pos:line="17" pos:column="7">s<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">)<pos:position pos:line="17" pos:column="9"/></operator></expr></argument>)<pos:position pos:line="17" pos:column="10"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="11"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><name pos:line="18" pos:column="12">NULL<pos:position pos:line="18" pos:column="16"/></name></expr>;<pos:position pos:line="18" pos:column="17"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="20" pos:column="3">s<pos:position pos:line="20" pos:column="4"/></name><operator pos:line="20" pos:column="4">++<pos:position pos:line="20" pos:column="6"/></operator></expr>;<pos:position pos:line="20" pos:column="7"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">mutt_free_list<pos:position pos:line="22" pos:column="17"/></name> <argument_list pos:line="22" pos:column="18">(<argument><expr><operator pos:line="22" pos:column="19">&amp;<pos:position pos:line="22" pos:column="24"/></operator><name><name pos:line="22" pos:column="20">hd<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">-&gt;<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="24">keywords<pos:position pos:line="22" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">hd<pos:position pos:line="23" pos:column="5"/></name><operator pos:line="23" pos:column="5">-&gt;<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="7">deleted<pos:position pos:line="23" pos:column="14"/></name></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <name><name pos:line="23" pos:column="17">hd<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">-&gt;<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="21">flagged<pos:position pos:line="23" pos:column="28"/></name></name> <operator pos:line="23" pos:column="29">=<pos:position pos:line="23" pos:column="30"/></operator> <name><name pos:line="23" pos:column="31">hd<pos:position pos:line="23" pos:column="33"/></name><operator pos:line="23" pos:column="33">-&gt;<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="35">replied<pos:position pos:line="23" pos:column="42"/></name></name> <operator pos:line="23" pos:column="43">=<pos:position pos:line="23" pos:column="44"/></operator> <name><name pos:line="23" pos:column="45">hd<pos:position pos:line="23" pos:column="47"/></name><operator pos:line="23" pos:column="47">-&gt;<pos:position pos:line="23" pos:column="52"/></operator><name pos:line="23" pos:column="49">read<pos:position pos:line="23" pos:column="53"/></name></name> <operator pos:line="23" pos:column="54">=<pos:position pos:line="23" pos:column="55"/></operator> <name><name pos:line="23" pos:column="56">hd<pos:position pos:line="23" pos:column="58"/></name><operator pos:line="23" pos:column="58">-&gt;<pos:position pos:line="23" pos:column="63"/></operator><name pos:line="23" pos:column="60">old<pos:position pos:line="23" pos:column="63"/></name></name> <operator pos:line="23" pos:column="64">=<pos:position pos:line="23" pos:column="65"/></operator> <literal type="number" pos:line="23" pos:column="66">0<pos:position pos:line="23" pos:column="67"/></literal></expr>;<pos:position pos:line="23" pos:column="68"/></expr_stmt>

  <comment type="block" pos:line="25" pos:column="3">/* start parsing */</comment>
  <while pos:line="26" pos:column="3">while <condition pos:line="26" pos:column="9">(<expr><operator pos:line="26" pos:column="10">*<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="11">s<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">&amp;&amp;<pos:position pos:line="26" pos:column="23"/></operator> <operator pos:line="26" pos:column="16">*<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">s<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">!=<pos:position pos:line="26" pos:column="21"/></operator> <literal type="char" pos:line="26" pos:column="22">')'<pos:position pos:line="26" pos:column="25"/></literal></expr>)<pos:position pos:line="26" pos:column="26"/></condition>
  <block pos:line="27" pos:column="3">{
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><call><name pos:line="28" pos:column="9">ascii_strncasecmp<pos:position pos:line="28" pos:column="26"/></name> <argument_list pos:line="28" pos:column="27">(<argument><expr><literal type="string" pos:line="28" pos:column="28">"\\deleted"<pos:position pos:line="28" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="41">s<pos:position pos:line="28" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="44">8<pos:position pos:line="28" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></call> <operator pos:line="28" pos:column="47">==<pos:position pos:line="28" pos:column="49"/></operator> <literal type="number" pos:line="28" pos:column="50">0<pos:position pos:line="28" pos:column="51"/></literal></expr>)<pos:position pos:line="28" pos:column="52"/></condition><then pos:line="28" pos:column="52">
    <block pos:line="29" pos:column="5">{
      <expr_stmt><expr><name pos:line="30" pos:column="7">s<pos:position pos:line="30" pos:column="8"/></name> <operator pos:line="30" pos:column="9">+=<pos:position pos:line="30" pos:column="11"/></operator> <literal type="number" pos:line="30" pos:column="12">8<pos:position pos:line="30" pos:column="13"/></literal></expr>;<pos:position pos:line="30" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="31" pos:column="7">hd<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">-&gt;<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="11">deleted<pos:position pos:line="31" pos:column="18"/></name></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <literal type="number" pos:line="31" pos:column="21">1<pos:position pos:line="31" pos:column="22"/></literal></expr>;<pos:position pos:line="31" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then>
    <elseif pos:line="33" pos:column="5">else <if pos:line="33" pos:column="10">if <condition pos:line="33" pos:column="13">(<expr><call><name pos:line="33" pos:column="14">ascii_strncasecmp<pos:position pos:line="33" pos:column="31"/></name> <argument_list pos:line="33" pos:column="32">(<argument><expr><literal type="string" pos:line="33" pos:column="33">"\\flagged"<pos:position pos:line="33" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="46">s<pos:position pos:line="33" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="49">8<pos:position pos:line="33" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="51"/></argument_list></call> <operator pos:line="33" pos:column="52">==<pos:position pos:line="33" pos:column="54"/></operator> <literal type="number" pos:line="33" pos:column="55">0<pos:position pos:line="33" pos:column="56"/></literal></expr>)<pos:position pos:line="33" pos:column="57"/></condition><then pos:line="33" pos:column="57">
    <block pos:line="34" pos:column="5">{
      <expr_stmt><expr><name pos:line="35" pos:column="7">s<pos:position pos:line="35" pos:column="8"/></name> <operator pos:line="35" pos:column="9">+=<pos:position pos:line="35" pos:column="11"/></operator> <literal type="number" pos:line="35" pos:column="12">8<pos:position pos:line="35" pos:column="13"/></literal></expr>;<pos:position pos:line="35" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="36" pos:column="7">hd<pos:position pos:line="36" pos:column="9"/></name><operator pos:line="36" pos:column="9">-&gt;<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="11">flagged<pos:position pos:line="36" pos:column="18"/></name></name> <operator pos:line="36" pos:column="19">=<pos:position pos:line="36" pos:column="20"/></operator> <literal type="number" pos:line="36" pos:column="21">1<pos:position pos:line="36" pos:column="22"/></literal></expr>;<pos:position pos:line="36" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="38" pos:column="5">else <if pos:line="38" pos:column="10">if <condition pos:line="38" pos:column="13">(<expr><call><name pos:line="38" pos:column="14">ascii_strncasecmp<pos:position pos:line="38" pos:column="31"/></name> <argument_list pos:line="38" pos:column="32">(<argument><expr><literal type="string" pos:line="38" pos:column="33">"\\answered"<pos:position pos:line="38" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="47">s<pos:position pos:line="38" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="50">9<pos:position pos:line="38" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></call> <operator pos:line="38" pos:column="53">==<pos:position pos:line="38" pos:column="55"/></operator> <literal type="number" pos:line="38" pos:column="56">0<pos:position pos:line="38" pos:column="57"/></literal></expr>)<pos:position pos:line="38" pos:column="58"/></condition><then pos:line="38" pos:column="58">
    <block pos:line="39" pos:column="5">{
      <expr_stmt><expr><name pos:line="40" pos:column="7">s<pos:position pos:line="40" pos:column="8"/></name> <operator pos:line="40" pos:column="9">+=<pos:position pos:line="40" pos:column="11"/></operator> <literal type="number" pos:line="40" pos:column="12">9<pos:position pos:line="40" pos:column="13"/></literal></expr>;<pos:position pos:line="40" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="41" pos:column="7">hd<pos:position pos:line="41" pos:column="9"/></name><operator pos:line="41" pos:column="9">-&gt;<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="11">replied<pos:position pos:line="41" pos:column="18"/></name></name> <operator pos:line="41" pos:column="19">=<pos:position pos:line="41" pos:column="20"/></operator> <literal type="number" pos:line="41" pos:column="21">1<pos:position pos:line="41" pos:column="22"/></literal></expr>;<pos:position pos:line="41" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="43" pos:column="5">else <if pos:line="43" pos:column="10">if <condition pos:line="43" pos:column="13">(<expr><call><name pos:line="43" pos:column="14">ascii_strncasecmp<pos:position pos:line="43" pos:column="31"/></name> <argument_list pos:line="43" pos:column="32">(<argument><expr><literal type="string" pos:line="43" pos:column="33">"\\seen"<pos:position pos:line="43" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="43">s<pos:position pos:line="43" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="46">5<pos:position pos:line="43" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="48"/></argument_list></call> <operator pos:line="43" pos:column="49">==<pos:position pos:line="43" pos:column="51"/></operator> <literal type="number" pos:line="43" pos:column="52">0<pos:position pos:line="43" pos:column="53"/></literal></expr>)<pos:position pos:line="43" pos:column="54"/></condition><then pos:line="43" pos:column="54">
    <block pos:line="44" pos:column="5">{
      <expr_stmt><expr><name pos:line="45" pos:column="7">s<pos:position pos:line="45" pos:column="8"/></name> <operator pos:line="45" pos:column="9">+=<pos:position pos:line="45" pos:column="11"/></operator> <literal type="number" pos:line="45" pos:column="12">5<pos:position pos:line="45" pos:column="13"/></literal></expr>;<pos:position pos:line="45" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="46" pos:column="7">hd<pos:position pos:line="46" pos:column="9"/></name><operator pos:line="46" pos:column="9">-&gt;<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="11">read<pos:position pos:line="46" pos:column="15"/></name></name> <operator pos:line="46" pos:column="16">=<pos:position pos:line="46" pos:column="17"/></operator> <literal type="number" pos:line="46" pos:column="18">1<pos:position pos:line="46" pos:column="19"/></literal></expr>;<pos:position pos:line="46" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="48" pos:column="5">else <if pos:line="48" pos:column="10">if <condition pos:line="48" pos:column="13">(<expr><call><name pos:line="48" pos:column="14">ascii_strncasecmp<pos:position pos:line="48" pos:column="31"/></name> <argument_list pos:line="48" pos:column="32">(<argument><expr><literal type="string" pos:line="48" pos:column="33">"\\recent"<pos:position pos:line="48" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="45">s<pos:position pos:line="48" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="48">7<pos:position pos:line="48" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="50"/></argument_list></call> <operator pos:line="48" pos:column="51">==<pos:position pos:line="48" pos:column="53"/></operator> <literal type="number" pos:line="48" pos:column="54">0<pos:position pos:line="48" pos:column="55"/></literal></expr>)<pos:position pos:line="48" pos:column="56"/></condition><then pos:line="48" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="7">s<pos:position pos:line="49" pos:column="8"/></name> <operator pos:line="49" pos:column="9">+=<pos:position pos:line="49" pos:column="11"/></operator> <literal type="number" pos:line="49" pos:column="12">7<pos:position pos:line="49" pos:column="13"/></literal></expr>;<pos:position pos:line="49" pos:column="14"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="50" pos:column="5">else <if pos:line="50" pos:column="10">if <condition pos:line="50" pos:column="13">(<expr><call><name pos:line="50" pos:column="14">ascii_strncasecmp<pos:position pos:line="50" pos:column="31"/></name> <argument_list pos:line="50" pos:column="32">(<argument><expr><literal type="string" pos:line="50" pos:column="33">"old"<pos:position pos:line="50" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="40">s<pos:position pos:line="50" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="43">3<pos:position pos:line="50" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="45"/></argument_list></call> <operator pos:line="50" pos:column="46">==<pos:position pos:line="50" pos:column="48"/></operator> <literal type="number" pos:line="50" pos:column="49">0<pos:position pos:line="50" pos:column="50"/></literal></expr>)<pos:position pos:line="50" pos:column="51"/></condition><then pos:line="50" pos:column="51">
    <block pos:line="51" pos:column="5">{
      <expr_stmt><expr><name pos:line="52" pos:column="7">s<pos:position pos:line="52" pos:column="8"/></name> <operator pos:line="52" pos:column="9">+=<pos:position pos:line="52" pos:column="11"/></operator> <literal type="number" pos:line="52" pos:column="12">3<pos:position pos:line="52" pos:column="13"/></literal></expr>;<pos:position pos:line="52" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="53" pos:column="7">hd<pos:position pos:line="53" pos:column="9"/></name><operator pos:line="53" pos:column="9">-&gt;<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="11">old<pos:position pos:line="53" pos:column="14"/></name></name> <operator pos:line="53" pos:column="15">=<pos:position pos:line="53" pos:column="16"/></operator> <literal type="number" pos:line="53" pos:column="17">1<pos:position pos:line="53" pos:column="18"/></literal></expr>;<pos:position pos:line="53" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if></elseif>
    <else pos:line="55" pos:column="5">else
    <block pos:line="56" pos:column="5">{
      <comment type="block" pos:line="57" pos:column="7">/* store custom flags as well */</comment>
      <decl_stmt><decl><type><name pos:line="58" pos:column="7">char<pos:position pos:line="58" pos:column="11"/></name></type> <name pos:line="58" pos:column="12">ctmp<pos:position pos:line="58" pos:column="16"/></name></decl>;<pos:position pos:line="58" pos:column="17"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="59" pos:column="7">char<pos:position pos:line="59" pos:column="11"/></name><modifier pos:line="59" pos:column="11">*<pos:position pos:line="59" pos:column="12"/></modifier></type> <name pos:line="59" pos:column="13">flag_word<pos:position pos:line="59" pos:column="22"/></name> <init pos:line="59" pos:column="23">= <expr><name pos:line="59" pos:column="25">s<pos:position pos:line="59" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="59" pos:column="27"/></decl_stmt>

      <if pos:line="61" pos:column="7">if <condition pos:line="61" pos:column="10">(<expr><operator pos:line="61" pos:column="11">!<pos:position pos:line="61" pos:column="12"/></operator><name><name pos:line="61" pos:column="12">hd<pos:position pos:line="61" pos:column="14"/></name><operator pos:line="61" pos:column="14">-&gt;<pos:position pos:line="61" pos:column="19"/></operator><name pos:line="61" pos:column="16">keywords<pos:position pos:line="61" pos:column="24"/></name></name></expr>)<pos:position pos:line="61" pos:column="25"/></condition><then pos:line="61" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="62" pos:column="9">hd<pos:position pos:line="62" pos:column="11"/></name><operator pos:line="62" pos:column="11">-&gt;<pos:position pos:line="62" pos:column="16"/></operator><name pos:line="62" pos:column="13">keywords<pos:position pos:line="62" pos:column="21"/></name></name> <operator pos:line="62" pos:column="22">=<pos:position pos:line="62" pos:column="23"/></operator> <call><name pos:line="62" pos:column="24">mutt_new_list<pos:position pos:line="62" pos:column="37"/></name> <argument_list pos:line="62" pos:column="38">()<pos:position pos:line="62" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="41"/></expr_stmt></block></then></if>

      <while pos:line="64" pos:column="7">while <condition pos:line="64" pos:column="13">(<expr><operator pos:line="64" pos:column="14">*<pos:position pos:line="64" pos:column="15"/></operator><name pos:line="64" pos:column="15">s<pos:position pos:line="64" pos:column="16"/></name> <operator pos:line="64" pos:column="17">&amp;&amp;<pos:position pos:line="64" pos:column="27"/></operator> <operator pos:line="64" pos:column="20">!<pos:position pos:line="64" pos:column="21"/></operator><call><name pos:line="64" pos:column="21">ISSPACE<pos:position pos:line="64" pos:column="28"/></name> <argument_list pos:line="64" pos:column="29">(<argument><expr><operator pos:line="64" pos:column="30">*<pos:position pos:line="64" pos:column="31"/></operator><name pos:line="64" pos:column="31">s<pos:position pos:line="64" pos:column="32"/></name></expr></argument>)<pos:position pos:line="64" pos:column="33"/></argument_list></call> <operator pos:line="64" pos:column="34">&amp;&amp;<pos:position pos:line="64" pos:column="44"/></operator> <operator pos:line="64" pos:column="37">*<pos:position pos:line="64" pos:column="38"/></operator><name pos:line="64" pos:column="38">s<pos:position pos:line="64" pos:column="39"/></name> <operator pos:line="64" pos:column="40">!=<pos:position pos:line="64" pos:column="42"/></operator> <literal type="char" pos:line="64" pos:column="43">')'<pos:position pos:line="64" pos:column="46"/></literal></expr>)<pos:position pos:line="64" pos:column="47"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="9">s<pos:position pos:line="65" pos:column="10"/></name><operator pos:line="65" pos:column="10">++<pos:position pos:line="65" pos:column="12"/></operator></expr>;<pos:position pos:line="65" pos:column="13"/></expr_stmt></block></while>
      <expr_stmt><expr><name pos:line="66" pos:column="7">ctmp<pos:position pos:line="66" pos:column="11"/></name> <operator pos:line="66" pos:column="12">=<pos:position pos:line="66" pos:column="13"/></operator> <operator pos:line="66" pos:column="14">*<pos:position pos:line="66" pos:column="15"/></operator><name pos:line="66" pos:column="15">s<pos:position pos:line="66" pos:column="16"/></name></expr>;<pos:position pos:line="66" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="67" pos:column="7">*<pos:position pos:line="67" pos:column="8"/></operator><name pos:line="67" pos:column="8">s<pos:position pos:line="67" pos:column="9"/></name> <operator pos:line="67" pos:column="10">=<pos:position pos:line="67" pos:column="11"/></operator> <literal type="char" pos:line="67" pos:column="12">'\0'<pos:position pos:line="67" pos:column="16"/></literal></expr>;<pos:position pos:line="67" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="68" pos:column="7">mutt_add_list<pos:position pos:line="68" pos:column="20"/></name> <argument_list pos:line="68" pos:column="21">(<argument><expr><name><name pos:line="68" pos:column="22">hd<pos:position pos:line="68" pos:column="24"/></name><operator pos:line="68" pos:column="24">-&gt;<pos:position pos:line="68" pos:column="29"/></operator><name pos:line="68" pos:column="26">keywords<pos:position pos:line="68" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="36">flag_word<pos:position pos:line="68" pos:column="45"/></name></expr></argument>)<pos:position pos:line="68" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="69" pos:column="7">*<pos:position pos:line="69" pos:column="8"/></operator><name pos:line="69" pos:column="8">s<pos:position pos:line="69" pos:column="9"/></name> <operator pos:line="69" pos:column="10">=<pos:position pos:line="69" pos:column="11"/></operator> <name pos:line="69" pos:column="12">ctmp<pos:position pos:line="69" pos:column="16"/></name></expr>;<pos:position pos:line="69" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">SKIPWS<pos:position pos:line="71" pos:column="11"/></name><argument_list pos:line="71" pos:column="11">(<argument><expr><name pos:line="71" pos:column="12">s<pos:position pos:line="71" pos:column="13"/></name></expr></argument>)<pos:position pos:line="71" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="72" pos:column="4"/></block></while>

  <comment type="block" pos:line="74" pos:column="3">/* wrap up, or note bad flags response */</comment>
  <if pos:line="75" pos:column="3">if <condition pos:line="75" pos:column="6">(<expr><operator pos:line="75" pos:column="7">*<pos:position pos:line="75" pos:column="8"/></operator><name pos:line="75" pos:column="8">s<pos:position pos:line="75" pos:column="9"/></name> <operator pos:line="75" pos:column="10">==<pos:position pos:line="75" pos:column="12"/></operator> <literal type="char" pos:line="75" pos:column="13">')'<pos:position pos:line="75" pos:column="16"/></literal></expr>)<pos:position pos:line="75" pos:column="17"/></condition><then pos:line="75" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><name pos:line="76" pos:column="5">s<pos:position pos:line="76" pos:column="6"/></name><operator pos:line="76" pos:column="6">++<pos:position pos:line="76" pos:column="8"/></operator></expr>;<pos:position pos:line="76" pos:column="9"/></expr_stmt></block></then>
  <else pos:line="77" pos:column="3">else
  <block pos:line="78" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">dprint<pos:position pos:line="79" pos:column="11"/></name> <argument_list pos:line="79" pos:column="12">(<argument><expr><literal type="number" pos:line="79" pos:column="13">1<pos:position pos:line="79" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="79" pos:column="16">(<pos:position pos:line="79" pos:column="17"/></operator><name pos:line="79" pos:column="17">debugfile<pos:position pos:line="79" pos:column="26"/></name><operator pos:line="79" pos:column="26">,<pos:position pos:line="79" pos:column="27"/></operator>
      <literal type="string" pos:line="80" pos:column="7">"msg_parse_flags: Unterminated FLAGS response: %s\n"<pos:position pos:line="80" pos:column="59"/></literal><operator pos:line="80" pos:column="59">,<pos:position pos:line="80" pos:column="60"/></operator> <name pos:line="80" pos:column="61">s<pos:position pos:line="80" pos:column="62"/></name><operator pos:line="80" pos:column="62">)<pos:position pos:line="80" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="80" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="65"/></expr_stmt>
    <return pos:line="81" pos:column="5">return <expr><name pos:line="81" pos:column="12">NULL<pos:position pos:line="81" pos:column="16"/></name></expr>;<pos:position pos:line="81" pos:column="17"/></return>
  }<pos:position pos:line="82" pos:column="4"/></block></else></if>

  <return pos:line="84" pos:column="3">return <expr><name pos:line="84" pos:column="10">s<pos:position pos:line="84" pos:column="11"/></name></expr>;<pos:position pos:line="84" pos:column="12"/></return>
}<pos:position pos:line="85" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1593_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">maildir_canon_filename<pos:position pos:line="1" pos:column="36"/></name> <parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">dest<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">src<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">size_t<pos:position pos:line="1" pos:column="73"/></name></type> <name pos:line="1" pos:column="74">l<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">t<pos:position pos:line="3" pos:column="10"/></name></decl>, <modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="13">u<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">(<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">t<pos:position pos:line="5" pos:column="9"/></name> <operator pos:line="5" pos:column="10">=<pos:position pos:line="5" pos:column="11"/></operator> <call><name pos:line="5" pos:column="12">strrchr<pos:position pos:line="5" pos:column="19"/></name> <argument_list pos:line="5" pos:column="20">(<argument><expr><name pos:line="5" pos:column="21">src<pos:position pos:line="5" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="5" pos:column="26">'/'<pos:position pos:line="5" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="30"/></argument_list></call><operator pos:line="5" pos:column="30">)<pos:position pos:line="5" pos:column="31"/></operator></expr>)<pos:position pos:line="5" pos:column="32"/></condition><then pos:line="5" pos:column="32">
    <block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="5">src<pos:position pos:line="6" pos:column="8"/></name> <operator pos:line="6" pos:column="9">=<pos:position pos:line="6" pos:column="10"/></operator> <name pos:line="6" pos:column="11">t<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">+<pos:position pos:line="6" pos:column="14"/></operator> <literal type="number" pos:line="6" pos:column="15">1<pos:position pos:line="6" pos:column="16"/></literal></expr>;<pos:position pos:line="6" pos:column="17"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">strfcpy<pos:position pos:line="8" pos:column="10"/></name> <argument_list pos:line="8" pos:column="11">(<argument><expr><name pos:line="8" pos:column="12">dest<pos:position pos:line="8" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="18">src<pos:position pos:line="8" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="23">l<pos:position pos:line="8" pos:column="24"/></name></expr></argument>)<pos:position pos:line="8" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="26"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">(<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">u<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <call><name pos:line="9" pos:column="12">strrchr<pos:position pos:line="9" pos:column="19"/></name> <argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">dest<pos:position pos:line="9" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="9" pos:column="27">':'<pos:position pos:line="9" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call><operator pos:line="9" pos:column="31">)<pos:position pos:line="9" pos:column="32"/></operator></expr>)<pos:position pos:line="9" pos:column="33"/></condition><then pos:line="9" pos:column="33">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="10" pos:column="5">*<pos:position pos:line="10" pos:column="6"/></operator><name pos:line="10" pos:column="6">u<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <literal type="char" pos:line="10" pos:column="10">'\0'<pos:position pos:line="10" pos:column="14"/></literal></expr>;<pos:position pos:line="10" pos:column="15"/></expr_stmt></block></then></if>

  <return pos:line="12" pos:column="3">return <expr><name pos:line="12" pos:column="10">dest<pos:position pos:line="12" pos:column="14"/></name></expr>;<pos:position pos:line="12" pos:column="15"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

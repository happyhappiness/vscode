<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_487_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">_mutt_enter_fname<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">prompt<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">buf<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">size_t<pos:position pos:line="1" pos:column="61"/></name></type> <name pos:line="1" pos:column="62">blen<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="68">int<pos:position pos:line="1" pos:column="71"/></name></type> <name pos:line="1" pos:column="72">buffy<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="79">int<pos:position pos:line="1" pos:column="82"/></name></type> <name pos:line="1" pos:column="83">multiple<pos:position pos:line="1" pos:column="91"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="93">char<pos:position pos:line="1" pos:column="97"/></name> <modifier pos:line="1" pos:column="98">*<pos:position pos:line="1" pos:column="99"/></modifier><modifier pos:line="1" pos:column="99">*<pos:position pos:line="1" pos:column="100"/></modifier><modifier pos:line="1" pos:column="100">*<pos:position pos:line="1" pos:column="101"/></modifier></type><name pos:line="1" pos:column="101">files<pos:position pos:line="1" pos:column="106"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="108">int<pos:position pos:line="1" pos:column="111"/></name> <modifier pos:line="1" pos:column="112">*<pos:position pos:line="1" pos:column="113"/></modifier></type><name pos:line="1" pos:column="113">numfiles<pos:position pos:line="1" pos:column="121"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="122"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">event_t<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">ch<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">SETCOLOR<pos:position pos:line="5" pos:column="11"/></name> <argument_list pos:line="5" pos:column="12">(<argument><expr><name pos:line="5" pos:column="13">MT_COLOR_PROMPT<pos:position pos:line="5" pos:column="28"/></name></expr></argument>)<pos:position pos:line="5" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">mutt_window_mvaddstr<pos:position pos:line="6" pos:column="23"/></name> <argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">MuttMessageWindow<pos:position pos:line="6" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="44">0<pos:position pos:line="6" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="47">0<pos:position pos:line="6" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="6" pos:column="50">(<pos:position pos:line="6" pos:column="51"/></operator><name pos:line="6" pos:column="51">char<pos:position pos:line="6" pos:column="55"/></name> <operator pos:line="6" pos:column="56">*<pos:position pos:line="6" pos:column="57"/></operator><operator pos:line="6" pos:column="57">)<pos:position pos:line="6" pos:column="58"/></operator> <name pos:line="6" pos:column="59">prompt<pos:position pos:line="6" pos:column="65"/></name></expr></argument>)<pos:position pos:line="6" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="67"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">addstr<pos:position pos:line="7" pos:column="9"/></name> <argument_list pos:line="7" pos:column="10">(<argument><expr><call><name pos:line="7" pos:column="11">_<pos:position pos:line="7" pos:column="12"/></name><argument_list pos:line="7" pos:column="12">(<argument><expr><literal type="string" pos:line="7" pos:column="13">" ('?' for list): "<pos:position pos:line="7" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name pos:line="8" pos:column="3">NORMAL_COLOR<pos:position pos:line="8" pos:column="15"/></name></expr>;<pos:position pos:line="8" pos:column="16"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name><name pos:line="9" pos:column="7">buf<pos:position pos:line="9" pos:column="10"/></name><index pos:line="9" pos:column="10">[<expr><literal type="number" pos:line="9" pos:column="11">0<pos:position pos:line="9" pos:column="12"/></literal></expr>]<pos:position pos:line="9" pos:column="13"/></index></name></expr>)<pos:position pos:line="9" pos:column="14"/></condition><then pos:line="9" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="5">addstr<pos:position pos:line="10" pos:column="11"/></name> <argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">buf<pos:position pos:line="10" pos:column="16"/></name></expr></argument>)<pos:position pos:line="10" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="18"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">mutt_window_clrtoeol<pos:position pos:line="11" pos:column="23"/></name> <argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">MuttMessageWindow<pos:position pos:line="11" pos:column="42"/></name></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">mutt_refresh<pos:position pos:line="12" pos:column="15"/></name> <argument_list pos:line="12" pos:column="16">()<pos:position pos:line="12" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><name pos:line="14" pos:column="3">ch<pos:position pos:line="14" pos:column="5"/></name> <operator pos:line="14" pos:column="6">=<pos:position pos:line="14" pos:column="7"/></operator> <call><name pos:line="14" pos:column="8">mutt_getch<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">()<pos:position pos:line="14" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name><name pos:line="15" pos:column="7">ch<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">.<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">ch<pos:position pos:line="15" pos:column="12"/></name></name> <operator pos:line="15" pos:column="13">&lt;<pos:position pos:line="15" pos:column="17"/></operator> <literal type="number" pos:line="15" pos:column="15">0<pos:position pos:line="15" pos:column="16"/></literal></expr>)<pos:position pos:line="15" pos:column="17"/></condition><then pos:line="15" pos:column="17">
  <block pos:line="16" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">mutt_window_clearline<pos:position pos:line="17" pos:column="26"/></name> <argument_list pos:line="17" pos:column="27">(<argument><expr><name pos:line="17" pos:column="28">MuttMessageWindow<pos:position pos:line="17" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="47">0<pos:position pos:line="17" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="50"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><operator pos:line="18" pos:column="13">-<pos:position pos:line="18" pos:column="14"/></operator><literal type="number" pos:line="18" pos:column="14">1<pos:position pos:line="18" pos:column="15"/></literal><operator pos:line="18" pos:column="15">)<pos:position pos:line="18" pos:column="16"/></operator></expr>;<pos:position pos:line="18" pos:column="17"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then>
  <elseif pos:line="20" pos:column="3">else <if pos:line="20" pos:column="8">if <condition pos:line="20" pos:column="11">(<expr><name><name pos:line="20" pos:column="12">ch<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">.<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">ch<pos:position pos:line="20" pos:column="17"/></name></name> <operator pos:line="20" pos:column="18">==<pos:position pos:line="20" pos:column="20"/></operator> <literal type="char" pos:line="20" pos:column="21">'?'<pos:position pos:line="20" pos:column="24"/></literal></expr>)<pos:position pos:line="20" pos:column="25"/></condition><then pos:line="20" pos:column="25">
  <block pos:line="21" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">mutt_refresh<pos:position pos:line="22" pos:column="17"/></name> <argument_list pos:line="22" pos:column="18">()<pos:position pos:line="22" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">buf<pos:position pos:line="23" pos:column="8"/></name><index pos:line="23" pos:column="8">[<expr><literal type="number" pos:line="23" pos:column="9">0<pos:position pos:line="23" pos:column="10"/></literal></expr>]<pos:position pos:line="23" pos:column="11"/></index></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <literal type="number" pos:line="23" pos:column="14">0<pos:position pos:line="23" pos:column="15"/></literal></expr>;<pos:position pos:line="23" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">_mutt_select_file<pos:position pos:line="24" pos:column="22"/></name> <argument_list pos:line="24" pos:column="23">(<argument><expr><name pos:line="24" pos:column="24">buf<pos:position pos:line="24" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="29">blen<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="35">MUTT_SEL_FOLDER<pos:position pos:line="24" pos:column="50"/></name> <operator pos:line="24" pos:column="51">|<pos:position pos:line="24" pos:column="52"/></operator> <operator pos:line="24" pos:column="53">(<pos:position pos:line="24" pos:column="54"/></operator><ternary><condition><expr><name pos:line="24" pos:column="54">multiple<pos:position pos:line="24" pos:column="62"/></name></expr> ?<pos:position pos:line="24" pos:column="64"/></condition><then pos:line="24" pos:column="64"> <expr><name pos:line="24" pos:column="65">MUTT_SEL_MULTI<pos:position pos:line="24" pos:column="79"/></name></expr> <pos:position pos:line="24" pos:column="80"/></then><else pos:line="24" pos:column="80">: <expr><literal type="number" pos:line="24" pos:column="82">0<pos:position pos:line="24" pos:column="83"/></literal></expr></else></ternary><operator pos:line="24" pos:column="83">)<pos:position pos:line="24" pos:column="84"/></operator></expr></argument>, 
		       <argument><expr><name pos:line="25" pos:column="24">files<pos:position pos:line="25" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="31">numfiles<pos:position pos:line="25" pos:column="39"/></name></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if></elseif>
  <else pos:line="27" pos:column="3">else
  <block pos:line="28" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="29" pos:column="5">char<pos:position pos:line="29" pos:column="9"/></name> <modifier pos:line="29" pos:column="10">*<pos:position pos:line="29" pos:column="11"/></modifier></type><name pos:line="29" pos:column="11">pc<pos:position pos:line="29" pos:column="13"/></name> <init pos:line="29" pos:column="14">= <expr><call><name pos:line="29" pos:column="16">safe_malloc<pos:position pos:line="29" pos:column="27"/></name> <argument_list pos:line="29" pos:column="28">(<argument><expr><call><name pos:line="29" pos:column="29">mutt_strlen<pos:position pos:line="29" pos:column="40"/></name> <argument_list pos:line="29" pos:column="41">(<argument><expr><name pos:line="29" pos:column="42">prompt<pos:position pos:line="29" pos:column="48"/></name></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></call> <operator pos:line="29" pos:column="50">+<pos:position pos:line="29" pos:column="51"/></operator> <literal type="number" pos:line="29" pos:column="52">3<pos:position pos:line="29" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="29" pos:column="55"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="31" pos:column="5">sprintf<pos:position pos:line="31" pos:column="12"/></name> <argument_list pos:line="31" pos:column="13">(<argument><expr><name pos:line="31" pos:column="14">pc<pos:position pos:line="31" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="18">"%s: "<pos:position pos:line="31" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="26">prompt<pos:position pos:line="31" pos:column="32"/></name></expr></argument>)<pos:position pos:line="31" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="34"/></expr_stmt>	<comment type="block" pos:line="31" pos:column="41">/* __SPRINTF_CHECKED__ */</comment>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">mutt_unget_event<pos:position pos:line="32" pos:column="21"/></name> <argument_list pos:line="32" pos:column="22">(<argument><expr><ternary><condition><expr><name><name pos:line="32" pos:column="23">ch<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">.<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="26">op<pos:position pos:line="32" pos:column="28"/></name></name></expr> ?<pos:position pos:line="32" pos:column="30"/></condition><then pos:line="32" pos:column="30"> <expr><literal type="number" pos:line="32" pos:column="31">0<pos:position pos:line="32" pos:column="32"/></literal></expr> <pos:position pos:line="32" pos:column="33"/></then><else pos:line="32" pos:column="33">: <expr><name><name pos:line="32" pos:column="35">ch<pos:position pos:line="32" pos:column="37"/></name><operator pos:line="32" pos:column="37">.<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="38">ch<pos:position pos:line="32" pos:column="40"/></name></name></expr></else></ternary></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="32" pos:column="42">ch<pos:position pos:line="32" pos:column="44"/></name><operator pos:line="32" pos:column="44">.<pos:position pos:line="32" pos:column="45"/></operator><name pos:line="32" pos:column="45">op<pos:position pos:line="32" pos:column="47"/></name></name></expr> ?<pos:position pos:line="32" pos:column="49"/></condition><then pos:line="32" pos:column="49"> <expr><name><name pos:line="32" pos:column="50">ch<pos:position pos:line="32" pos:column="52"/></name><operator pos:line="32" pos:column="52">.<pos:position pos:line="32" pos:column="53"/></operator><name pos:line="32" pos:column="53">op<pos:position pos:line="32" pos:column="55"/></name></name></expr> <pos:position pos:line="32" pos:column="56"/></then><else pos:line="32" pos:column="56">: <expr><literal type="number" pos:line="32" pos:column="58">0<pos:position pos:line="32" pos:column="59"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="32" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="61"/></expr_stmt>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><call><name pos:line="33" pos:column="9">_mutt_get_field<pos:position pos:line="33" pos:column="24"/></name> <argument_list pos:line="33" pos:column="25">(<argument><expr><name pos:line="33" pos:column="26">pc<pos:position pos:line="33" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="30">buf<pos:position pos:line="33" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="35">blen<pos:position pos:line="33" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="41">(<pos:position pos:line="33" pos:column="42"/></operator><ternary><condition><expr><name pos:line="33" pos:column="42">buffy<pos:position pos:line="33" pos:column="47"/></name></expr> ?<pos:position pos:line="33" pos:column="49"/></condition><then pos:line="33" pos:column="49"> <expr><name pos:line="33" pos:column="50">MUTT_EFILE<pos:position pos:line="33" pos:column="60"/></name></expr> <pos:position pos:line="33" pos:column="61"/></then><else pos:line="33" pos:column="61">: <expr><name pos:line="33" pos:column="63">MUTT_FILE<pos:position pos:line="33" pos:column="72"/></name></expr></else></ternary><operator pos:line="33" pos:column="72">)<pos:position pos:line="33" pos:column="73"/></operator> <operator pos:line="33" pos:column="74">|<pos:position pos:line="33" pos:column="75"/></operator> <name pos:line="33" pos:column="76">MUTT_CLEAR<pos:position pos:line="33" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="88">multiple<pos:position pos:line="33" pos:column="96"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="98">files<pos:position pos:line="33" pos:column="103"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="105">numfiles<pos:position pos:line="33" pos:column="113"/></name></expr></argument>)<pos:position pos:line="33" pos:column="114"/></argument_list></call>
	<operator pos:line="34" pos:column="9">!=<pos:position pos:line="34" pos:column="11"/></operator> <literal type="number" pos:line="34" pos:column="12">0<pos:position pos:line="34" pos:column="13"/></literal></expr>)<pos:position pos:line="34" pos:column="14"/></condition><then pos:line="34" pos:column="14">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="35" pos:column="7">buf<pos:position pos:line="35" pos:column="10"/></name><index pos:line="35" pos:column="10">[<expr><literal type="number" pos:line="35" pos:column="11">0<pos:position pos:line="35" pos:column="12"/></literal></expr>]<pos:position pos:line="35" pos:column="13"/></index></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <literal type="number" pos:line="35" pos:column="16">0<pos:position pos:line="35" pos:column="17"/></literal></expr>;<pos:position pos:line="35" pos:column="18"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">FREE<pos:position pos:line="36" pos:column="9"/></name> <argument_list pos:line="36" pos:column="10">(<argument><expr><operator pos:line="36" pos:column="11">&amp;<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="12">pc<pos:position pos:line="36" pos:column="14"/></name></expr></argument>)<pos:position pos:line="36" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="37" pos:column="4"/></block></else></if>

  <return pos:line="39" pos:column="3">return <expr><literal type="number" pos:line="39" pos:column="10">0<pos:position pos:line="39" pos:column="11"/></literal></expr>;<pos:position pos:line="39" pos:column="12"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

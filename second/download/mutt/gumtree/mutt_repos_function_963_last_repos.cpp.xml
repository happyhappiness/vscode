<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_963_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mix_get_caps<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">capstr<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">caps<pos:position pos:line="3" pos:column="11"/></name> <init pos:line="3" pos:column="12">= <expr><literal type="number" pos:line="3" pos:column="14">0<pos:position pos:line="3" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>

  <while pos:line="5" pos:column="3">while <condition pos:line="5" pos:column="9">(<expr><operator pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">capstr<pos:position pos:line="5" pos:column="17"/></name></expr>)<pos:position pos:line="5" pos:column="18"/></condition>
  <block pos:line="6" pos:column="3">{
    <switch pos:line="7" pos:column="5">switch <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">capstr<pos:position pos:line="7" pos:column="20"/></name></expr>)<pos:position pos:line="7" pos:column="21"/></condition>
    <block pos:line="8" pos:column="5">{
      <case pos:line="9" pos:column="7">case <expr><literal type="char" pos:line="9" pos:column="12">'C'<pos:position pos:line="9" pos:column="15"/></literal></expr>:<pos:position pos:line="9" pos:column="16"/></case>
      	<expr_stmt><expr><name pos:line="10" pos:column="9">caps<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">|=<pos:position pos:line="10" pos:column="16"/></operator> <name pos:line="10" pos:column="17">MIX_CAP_COMPRESS<pos:position pos:line="10" pos:column="33"/></name></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>
        <break pos:line="11" pos:column="9">break;<pos:position pos:line="11" pos:column="15"/></break>
      
      <case pos:line="13" pos:column="7">case <expr><literal type="char" pos:line="13" pos:column="12">'M'<pos:position pos:line="13" pos:column="15"/></literal></expr>:<pos:position pos:line="13" pos:column="16"/></case>
        <expr_stmt><expr><name pos:line="14" pos:column="9">caps<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">|=<pos:position pos:line="14" pos:column="16"/></operator> <name pos:line="14" pos:column="17">MIX_CAP_MIDDLEMAN<pos:position pos:line="14" pos:column="34"/></name></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>
        <break pos:line="15" pos:column="9">break;<pos:position pos:line="15" pos:column="15"/></break>
      
      <case pos:line="17" pos:column="7">case <expr><literal type="char" pos:line="17" pos:column="12">'N'<pos:position pos:line="17" pos:column="15"/></literal></expr>:<pos:position pos:line="17" pos:column="16"/></case>
      <block pos:line="18" pos:column="7">{
	<switch pos:line="19" pos:column="9">switch <condition pos:line="19" pos:column="16">(<expr><operator pos:line="19" pos:column="17">*<pos:position pos:line="19" pos:column="18"/></operator><operator pos:line="19" pos:column="18">++<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="20">capstr<pos:position pos:line="19" pos:column="26"/></name></expr>)<pos:position pos:line="19" pos:column="27"/></condition>
	<block pos:line="20" pos:column="9">{
	  <case pos:line="21" pos:column="11">case <expr><literal type="char" pos:line="21" pos:column="16">'m'<pos:position pos:line="21" pos:column="19"/></literal></expr>:<pos:position pos:line="21" pos:column="20"/></case>
	    <expr_stmt><expr><name pos:line="22" pos:column="13">caps<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">|=<pos:position pos:line="22" pos:column="20"/></operator> <name pos:line="22" pos:column="21">MIX_CAP_NEWSMAIL<pos:position pos:line="22" pos:column="37"/></name></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>
	    <break pos:line="23" pos:column="13">break;<pos:position pos:line="23" pos:column="19"/></break>
	  
	  <case pos:line="25" pos:column="11">case <expr><literal type="char" pos:line="25" pos:column="16">'p'<pos:position pos:line="25" pos:column="19"/></literal></expr>:<pos:position pos:line="25" pos:column="20"/></case>
	    <expr_stmt><expr><name pos:line="26" pos:column="13">caps<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">|=<pos:position pos:line="26" pos:column="20"/></operator> <name pos:line="26" pos:column="21">MIX_CAP_NEWSPOST<pos:position pos:line="26" pos:column="37"/></name></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>
	    <break pos:line="27" pos:column="13">break;<pos:position pos:line="27" pos:column="19"/></break>
	  
	}<pos:position pos:line="29" pos:column="10"/></block></switch>
      }<pos:position pos:line="30" pos:column="8"/></block>
    }<pos:position pos:line="31" pos:column="6"/></block></switch>
    
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><operator pos:line="33" pos:column="9">*<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">capstr<pos:position pos:line="33" pos:column="16"/></name></expr>)<pos:position pos:line="33" pos:column="17"/></condition><then pos:line="33" pos:column="17"> <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="18">capstr<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">++<pos:position pos:line="33" pos:column="26"/></operator></expr>;<pos:position pos:line="33" pos:column="27"/></expr_stmt></block></then></if>
  }<pos:position pos:line="34" pos:column="4"/></block></while>
  
  <return pos:line="36" pos:column="3">return <expr><name pos:line="36" pos:column="10">caps<pos:position pos:line="36" pos:column="14"/></name></expr>;<pos:position pos:line="36" pos:column="15"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

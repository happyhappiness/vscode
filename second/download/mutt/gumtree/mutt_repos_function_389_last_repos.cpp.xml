<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_389_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">FILE<pos:position pos:line="1" pos:column="5"/></name><modifier pos:line="1" pos:column="5">*<pos:position pos:line="1" pos:column="6"/></modifier></type> <name pos:line="1" pos:column="7">mutt_bcache_put<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">body_cache_t<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">bcache<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">id<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">int<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">tmp<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">path<pos:position pos:line="3" pos:column="12"/></name><index pos:line="3" pos:column="12">[<expr><name pos:line="3" pos:column="13">_POSIX_PATH_MAX<pos:position pos:line="3" pos:column="28"/></name></expr>]<pos:position pos:line="3" pos:column="29"/></index></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">FILE<pos:position pos:line="4" pos:column="7"/></name><modifier pos:line="4" pos:column="7">*<pos:position pos:line="4" pos:column="8"/></modifier></type> <name pos:line="4" pos:column="9">fp<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name><modifier pos:line="5" pos:column="7">*<pos:position pos:line="5" pos:column="8"/></modifier></type> <name pos:line="5" pos:column="9">s<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">stat<pos:position pos:line="6" pos:column="14"/></name></name></type> <name pos:line="6" pos:column="15">sb<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">id<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">||<pos:position pos:line="8" pos:column="13"/></operator> <operator pos:line="8" pos:column="14">!<pos:position pos:line="8" pos:column="15"/></operator><operator pos:line="8" pos:column="15">*<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">id<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">||<pos:position pos:line="8" pos:column="21"/></operator> <operator pos:line="8" pos:column="22">!<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">bcache<pos:position pos:line="8" pos:column="29"/></name></expr>)<pos:position pos:line="8" pos:column="30"/></condition><then pos:line="8" pos:column="30">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">NULL<pos:position pos:line="9" pos:column="16"/></name></expr>;<pos:position pos:line="9" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">snprintf<pos:position pos:line="11" pos:column="11"/></name> <argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">path<pos:position pos:line="11" pos:column="17"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="19">sizeof <argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">path<pos:position pos:line="11" pos:column="31"/></name></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="34">"%s%s%s"<pos:position pos:line="11" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="44">bcache<pos:position pos:line="11" pos:column="50"/></name><operator pos:line="11" pos:column="50">-&gt;<pos:position pos:line="11" pos:column="55"/></operator><name pos:line="11" pos:column="52">path<pos:position pos:line="11" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="58">id<pos:position pos:line="11" pos:column="60"/></name></expr></argument>,
            <argument><expr><ternary><condition><expr><name pos:line="12" pos:column="13">tmp<pos:position pos:line="12" pos:column="16"/></name></expr> ?<pos:position pos:line="12" pos:column="18"/></condition><then pos:line="12" pos:column="18"> <expr><literal type="string" pos:line="12" pos:column="19">".tmp"<pos:position pos:line="12" pos:column="25"/></literal></expr> <pos:position pos:line="12" pos:column="26"/></then><else pos:line="12" pos:column="26">: <expr><literal type="string" pos:line="12" pos:column="28">""<pos:position pos:line="12" pos:column="30"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><operator pos:line="14" pos:column="7">(<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">fp<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <call><name pos:line="14" pos:column="13">safe_fopen<pos:position pos:line="14" pos:column="23"/></name> <argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">path<pos:position pos:line="14" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="31">"w+"<pos:position pos:line="14" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call><operator pos:line="14" pos:column="36">)<pos:position pos:line="14" pos:column="37"/></operator></expr>)<pos:position pos:line="14" pos:column="38"/></condition><then pos:line="14" pos:column="38">
    <block type="pseudo"><goto pos:line="15" pos:column="5">goto <name pos:line="15" pos:column="10">out<pos:position pos:line="15" pos:column="13"/></name>;<pos:position pos:line="15" pos:column="14"/></goto></block></then></if>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">errno<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">==<pos:position pos:line="17" pos:column="15"/></operator> <name pos:line="17" pos:column="16">EEXIST<pos:position pos:line="17" pos:column="22"/></name></expr>)<pos:position pos:line="17" pos:column="23"/></condition><then pos:line="17" pos:column="23">
    <comment type="block" pos:line="18" pos:column="5">/* clean up leftover tmp file */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="5">mutt_unlink<pos:position pos:line="19" pos:column="16"/></name> <argument_list pos:line="19" pos:column="17">(<argument><expr><name pos:line="19" pos:column="18">path<pos:position pos:line="19" pos:column="22"/></name></expr></argument>)<pos:position pos:line="19" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="21" pos:column="3">s<pos:position pos:line="21" pos:column="4"/></name> <operator pos:line="21" pos:column="5">=<pos:position pos:line="21" pos:column="6"/></operator> <call><name pos:line="21" pos:column="7">strchr<pos:position pos:line="21" pos:column="13"/></name> <argument_list pos:line="21" pos:column="14">(<argument><expr><name pos:line="21" pos:column="15">path<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">+<pos:position pos:line="21" pos:column="21"/></operator> <literal type="number" pos:line="21" pos:column="22">1<pos:position pos:line="21" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="21" pos:column="25">'/'<pos:position pos:line="21" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
  <while pos:line="22" pos:column="3">while <condition pos:line="22" pos:column="9">(<expr><operator pos:line="22" pos:column="10">!<pos:position pos:line="22" pos:column="11"/></operator><operator pos:line="22" pos:column="11">(<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="12">fp<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <call><name pos:line="22" pos:column="17">safe_fopen<pos:position pos:line="22" pos:column="27"/></name> <argument_list pos:line="22" pos:column="28">(<argument><expr><name pos:line="22" pos:column="29">path<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="35">"w+"<pos:position pos:line="22" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call><operator pos:line="22" pos:column="40">)<pos:position pos:line="22" pos:column="41"/></operator> <operator pos:line="22" pos:column="42">&amp;&amp;<pos:position pos:line="22" pos:column="52"/></operator> <name pos:line="22" pos:column="45">errno<pos:position pos:line="22" pos:column="50"/></name> <operator pos:line="22" pos:column="51">==<pos:position pos:line="22" pos:column="53"/></operator> <name pos:line="22" pos:column="54">ENOENT<pos:position pos:line="22" pos:column="60"/></name> <operator pos:line="22" pos:column="61">&amp;&amp;<pos:position pos:line="22" pos:column="71"/></operator> <name pos:line="22" pos:column="64">s<pos:position pos:line="22" pos:column="65"/></name></expr>)<pos:position pos:line="22" pos:column="66"/></condition>
  <block pos:line="23" pos:column="3">{
    <comment type="block" pos:line="24" pos:column="5">/* create missing path components */</comment>
    <expr_stmt><expr><operator pos:line="25" pos:column="5">*<pos:position pos:line="25" pos:column="6"/></operator><name pos:line="25" pos:column="6">s<pos:position pos:line="25" pos:column="7"/></name> <operator pos:line="25" pos:column="8">=<pos:position pos:line="25" pos:column="9"/></operator> <literal type="char" pos:line="25" pos:column="10">'\0'<pos:position pos:line="25" pos:column="14"/></literal></expr>;<pos:position pos:line="25" pos:column="15"/></expr_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><call><name pos:line="26" pos:column="9">stat<pos:position pos:line="26" pos:column="13"/></name> <argument_list pos:line="26" pos:column="14">(<argument><expr><name pos:line="26" pos:column="15">path<pos:position pos:line="26" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="21">&amp;<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="22">sb<pos:position pos:line="26" pos:column="24"/></name></expr></argument>)<pos:position pos:line="26" pos:column="25"/></argument_list></call> <operator pos:line="26" pos:column="26">&lt;<pos:position pos:line="26" pos:column="30"/></operator> <literal type="number" pos:line="26" pos:column="28">0<pos:position pos:line="26" pos:column="29"/></literal> <operator pos:line="26" pos:column="30">&amp;&amp;<pos:position pos:line="26" pos:column="40"/></operator> <operator pos:line="26" pos:column="33">(<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="34">errno<pos:position pos:line="26" pos:column="39"/></name> <operator pos:line="26" pos:column="40">!=<pos:position pos:line="26" pos:column="42"/></operator> <name pos:line="26" pos:column="43">ENOENT<pos:position pos:line="26" pos:column="49"/></name> <operator pos:line="26" pos:column="50">||<pos:position pos:line="26" pos:column="52"/></operator> <call><name pos:line="26" pos:column="53">mkdir<pos:position pos:line="26" pos:column="58"/></name> <argument_list pos:line="26" pos:column="59">(<argument><expr><name pos:line="26" pos:column="60">path<pos:position pos:line="26" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="66">0777<pos:position pos:line="26" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="71"/></argument_list></call> <operator pos:line="26" pos:column="72">&lt;<pos:position pos:line="26" pos:column="76"/></operator> <literal type="number" pos:line="26" pos:column="74">0<pos:position pos:line="26" pos:column="75"/></literal><operator pos:line="26" pos:column="75">)<pos:position pos:line="26" pos:column="76"/></operator></expr>)<pos:position pos:line="26" pos:column="77"/></condition><then pos:line="26" pos:column="77">
      <block type="pseudo"><return pos:line="27" pos:column="7">return <expr><name pos:line="27" pos:column="14">NULL<pos:position pos:line="27" pos:column="18"/></name></expr>;<pos:position pos:line="27" pos:column="19"/></return></block></then></if>
    <expr_stmt><expr><operator pos:line="28" pos:column="5">*<pos:position pos:line="28" pos:column="6"/></operator><name pos:line="28" pos:column="6">s<pos:position pos:line="28" pos:column="7"/></name> <operator pos:line="28" pos:column="8">=<pos:position pos:line="28" pos:column="9"/></operator> <literal type="char" pos:line="28" pos:column="10">'/'<pos:position pos:line="28" pos:column="13"/></literal></expr>;<pos:position pos:line="28" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">s<pos:position pos:line="29" pos:column="6"/></name> <operator pos:line="29" pos:column="7">=<pos:position pos:line="29" pos:column="8"/></operator> <call><name pos:line="29" pos:column="9">strchr<pos:position pos:line="29" pos:column="15"/></name> <argument_list pos:line="29" pos:column="16">(<argument><expr><name pos:line="29" pos:column="17">s<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">+<pos:position pos:line="29" pos:column="20"/></operator> <literal type="number" pos:line="29" pos:column="21">1<pos:position pos:line="29" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="29" pos:column="24">'/'<pos:position pos:line="29" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></while>

  <label><name pos:line="32" pos:column="3">out<pos:position pos:line="32" pos:column="6"/></name>:<pos:position pos:line="32" pos:column="7"/></label>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">dprint<pos:position pos:line="33" pos:column="9"/></name> <argument_list pos:line="33" pos:column="10">(<argument><expr><literal type="number" pos:line="33" pos:column="11">3<pos:position pos:line="33" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="33" pos:column="14">(<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">debugfile<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">,<pos:position pos:line="33" pos:column="25"/></operator> <literal type="string" pos:line="33" pos:column="26">"bcache: put: '%s'\n"<pos:position pos:line="33" pos:column="47"/></literal><operator pos:line="33" pos:column="47">,<pos:position pos:line="33" pos:column="48"/></operator> <name pos:line="33" pos:column="49">path<pos:position pos:line="33" pos:column="53"/></name><operator pos:line="33" pos:column="53">)<pos:position pos:line="33" pos:column="54"/></operator></expr></argument>)<pos:position pos:line="33" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="56"/></expr_stmt>

  <return pos:line="35" pos:column="3">return <expr><name pos:line="35" pos:column="10">fp<pos:position pos:line="35" pos:column="12"/></name></expr>;<pos:position pos:line="35" pos:column="13"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

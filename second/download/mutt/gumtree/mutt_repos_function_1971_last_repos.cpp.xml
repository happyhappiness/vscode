<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1971_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">makedoc<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">FILE<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">in<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="32">FILE<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">out<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buffer<pos:position pos:line="3" pos:column="14"/></name><index pos:line="3" pos:column="14">[<expr><name pos:line="3" pos:column="15">BUFFSIZE<pos:position pos:line="3" pos:column="23"/></name></expr>]<pos:position pos:line="3" pos:column="24"/></index></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">token<pos:position pos:line="4" pos:column="13"/></name><index pos:line="4" pos:column="13">[<expr><name pos:line="4" pos:column="14">BUFFSIZE<pos:position pos:line="4" pos:column="22"/></name></expr>]<pos:position pos:line="4" pos:column="23"/></index></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">p<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">active<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">line<pos:position pos:line="7" pos:column="11"/></name> <init pos:line="7" pos:column="12">= <expr><literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">docstat<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><name pos:line="8" pos:column="17">D_INIT<pos:position pos:line="8" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>

  <while pos:line="10" pos:column="3">while <condition pos:line="10" pos:column="9">(<expr><operator pos:line="10" pos:column="10">(<pos:position pos:line="10" pos:column="11"/></operator><call><name pos:line="10" pos:column="11">fgets<pos:position pos:line="10" pos:column="16"/></name> <argument_list pos:line="10" pos:column="17">(<argument><expr><name pos:line="10" pos:column="18">buffer<pos:position pos:line="10" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="26">sizeof <argument_list pos:line="10" pos:column="33">(<argument><expr><name pos:line="10" pos:column="34">buffer<pos:position pos:line="10" pos:column="40"/></name></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="10" pos:column="43">in<pos:position pos:line="10" pos:column="45"/></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call><operator pos:line="10" pos:column="46">)<pos:position pos:line="10" pos:column="47"/></operator></expr>)<pos:position pos:line="10" pos:column="48"/></condition>
  <block pos:line="11" pos:column="3">{
    <expr_stmt><expr><name pos:line="12" pos:column="5">line<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">++<pos:position pos:line="12" pos:column="11"/></operator></expr>;<pos:position pos:line="12" pos:column="12"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">(<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">p<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">strchr<pos:position pos:line="13" pos:column="20"/></name> <argument_list pos:line="13" pos:column="21">(<argument><expr><name pos:line="13" pos:column="22">buffer<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="13" pos:column="30">'\n'<pos:position pos:line="13" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call><operator pos:line="13" pos:column="35">)<pos:position pos:line="13" pos:column="36"/></operator> <operator pos:line="13" pos:column="37">==<pos:position pos:line="13" pos:column="39"/></operator> <name pos:line="13" pos:column="40">NULL<pos:position pos:line="13" pos:column="44"/></name></expr>)<pos:position pos:line="13" pos:column="45"/></condition><then pos:line="13" pos:column="45">
    <block pos:line="14" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">fprintf<pos:position pos:line="15" pos:column="14"/></name> <argument_list pos:line="15" pos:column="15">(<argument><expr><name pos:line="15" pos:column="16">stderr<pos:position pos:line="15" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="24">"%s: Line %d too long.  Ask a wizard to enlarge\n"<pos:position pos:line="15" pos:column="74"/></literal>
	               <literal type="string" pos:line="16" pos:column="24">"%s: my buffer size.\n"<pos:position pos:line="16" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="49">Progname<pos:position pos:line="16" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="59">line<pos:position pos:line="16" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="65">Progname<pos:position pos:line="16" pos:column="73"/></name></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="75"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">exit<pos:position pos:line="17" pos:column="11"/></name> <argument_list pos:line="17" pos:column="12">(<argument><expr><literal type="number" pos:line="17" pos:column="13">1<pos:position pos:line="17" pos:column="14"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then>
    <else pos:line="19" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><operator pos:line="20" pos:column="7">*<pos:position pos:line="20" pos:column="8"/></operator><name pos:line="20" pos:column="8">p<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator> <literal type="char" pos:line="20" pos:column="12">'\0'<pos:position pos:line="20" pos:column="16"/></literal></expr>;<pos:position pos:line="20" pos:column="17"/></expr_stmt></block></else></if>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator><operator pos:line="22" pos:column="10">(<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="11">p<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <call><name pos:line="22" pos:column="15">get_token<pos:position pos:line="22" pos:column="24"/></name> <argument_list pos:line="22" pos:column="25">(<argument><expr><name pos:line="22" pos:column="26">token<pos:position pos:line="22" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="33">sizeof <argument_list pos:line="22" pos:column="40">(<argument><expr><name pos:line="22" pos:column="41">token<pos:position pos:line="22" pos:column="46"/></name></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="22" pos:column="49">buffer<pos:position pos:line="22" pos:column="55"/></name></expr></argument>)<pos:position pos:line="22" pos:column="56"/></argument_list></call><operator pos:line="22" pos:column="56">)<pos:position pos:line="22" pos:column="57"/></operator></expr>)<pos:position pos:line="22" pos:column="58"/></condition><then pos:line="22" pos:column="58">
      <block type="pseudo"><continue pos:line="23" pos:column="7">continue;<pos:position pos:line="23" pos:column="16"/></continue></block></then></if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">Debug<pos:position pos:line="25" pos:column="14"/></name></expr>)<pos:position pos:line="25" pos:column="15"/></condition><then pos:line="25" pos:column="15">
    <block pos:line="26" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">fprintf<pos:position pos:line="27" pos:column="14"/></name> <argument_list pos:line="27" pos:column="15">(<argument><expr><name pos:line="27" pos:column="16">stderr<pos:position pos:line="27" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="24">"%s: line %d.  first token: \"%s\".\n"<pos:position pos:line="27" pos:column="62"/></literal></expr></argument>,
	       <argument><expr><name pos:line="28" pos:column="16">Progname<pos:position pos:line="28" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="26">line<pos:position pos:line="28" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="32">token<pos:position pos:line="28" pos:column="37"/></name></expr></argument>)<pos:position pos:line="28" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
    
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><operator pos:line="31" pos:column="9">!<pos:position pos:line="31" pos:column="10"/></operator><call><name pos:line="31" pos:column="10">strcmp<pos:position pos:line="31" pos:column="16"/></name> <argument_list pos:line="31" pos:column="17">(<argument><expr><name pos:line="31" pos:column="18">token<pos:position pos:line="31" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="25">"/*++*/"<pos:position pos:line="31" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="35"/></condition><then pos:line="31" pos:column="35">
      <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="7">active<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <literal type="number" pos:line="32" pos:column="16">1<pos:position pos:line="32" pos:column="17"/></literal></expr>;<pos:position pos:line="32" pos:column="18"/></expr_stmt></block></then>
    <elseif pos:line="33" pos:column="5">else <if pos:line="33" pos:column="10">if <condition pos:line="33" pos:column="13">(<expr><operator pos:line="33" pos:column="14">!<pos:position pos:line="33" pos:column="15"/></operator><call><name pos:line="33" pos:column="15">strcmp<pos:position pos:line="33" pos:column="21"/></name> <argument_list pos:line="33" pos:column="22">(<argument><expr><name pos:line="33" pos:column="23">token<pos:position pos:line="33" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="30">"/*--*/"<pos:position pos:line="33" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="40"/></condition><then pos:line="33" pos:column="40">
    <block pos:line="34" pos:column="5">{
      <expr_stmt><expr><name pos:line="35" pos:column="7">docstat<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">=<pos:position pos:line="35" pos:column="16"/></operator> <call><name pos:line="35" pos:column="17">flush_doc<pos:position pos:line="35" pos:column="26"/></name> <argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">docstat<pos:position pos:line="35" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="37">out<pos:position pos:line="35" pos:column="40"/></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name pos:line="36" pos:column="7">active<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <literal type="number" pos:line="36" pos:column="16">0<pos:position pos:line="36" pos:column="17"/></literal></expr>;<pos:position pos:line="36" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="38" pos:column="5">else <if pos:line="38" pos:column="10">if <condition pos:line="38" pos:column="13">(<expr><name pos:line="38" pos:column="14">active<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">&amp;&amp;<pos:position pos:line="38" pos:column="31"/></operator> <operator pos:line="38" pos:column="24">(<pos:position pos:line="38" pos:column="25"/></operator><operator pos:line="38" pos:column="25">!<pos:position pos:line="38" pos:column="26"/></operator><call><name pos:line="38" pos:column="26">strcmp<pos:position pos:line="38" pos:column="32"/></name> <argument_list pos:line="38" pos:column="33">(<argument><expr><name pos:line="38" pos:column="34">token<pos:position pos:line="38" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="41">"/**"<pos:position pos:line="38" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="47"/></argument_list></call> <operator pos:line="38" pos:column="48">||<pos:position pos:line="38" pos:column="50"/></operator> <operator pos:line="38" pos:column="51">!<pos:position pos:line="38" pos:column="52"/></operator><call><name pos:line="38" pos:column="52">strcmp<pos:position pos:line="38" pos:column="58"/></name> <argument_list pos:line="38" pos:column="59">(<argument><expr><name pos:line="38" pos:column="60">token<pos:position pos:line="38" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="67">"**"<pos:position pos:line="38" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="72"/></argument_list></call><operator pos:line="38" pos:column="72">)<pos:position pos:line="38" pos:column="73"/></operator></expr>)<pos:position pos:line="38" pos:column="74"/></condition><then pos:line="38" pos:column="74">
      <block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="7">docstat<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">=<pos:position pos:line="39" pos:column="16"/></operator> <call><name pos:line="39" pos:column="17">handle_docline<pos:position pos:line="39" pos:column="31"/></name> <argument_list pos:line="39" pos:column="32">(<argument><expr><name pos:line="39" pos:column="33">p<pos:position pos:line="39" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="36">out<pos:position pos:line="39" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="41">docstat<pos:position pos:line="39" pos:column="48"/></name></expr></argument>)<pos:position pos:line="39" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="50"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="40" pos:column="5">else <if pos:line="40" pos:column="10">if <condition pos:line="40" pos:column="13">(<expr><name pos:line="40" pos:column="14">active<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">&amp;&amp;<pos:position pos:line="40" pos:column="31"/></operator> <operator pos:line="40" pos:column="24">!<pos:position pos:line="40" pos:column="25"/></operator><call><name pos:line="40" pos:column="25">strcmp<pos:position pos:line="40" pos:column="31"/></name> <argument_list pos:line="40" pos:column="32">(<argument><expr><name pos:line="40" pos:column="33">token<pos:position pos:line="40" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="40">"{"<pos:position pos:line="40" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="45"/></condition><then pos:line="40" pos:column="45">
    <block pos:line="41" pos:column="5">{
      <expr_stmt><expr><name pos:line="42" pos:column="7">docstat<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">=<pos:position pos:line="42" pos:column="16"/></operator> <call><name pos:line="42" pos:column="17">flush_doc<pos:position pos:line="42" pos:column="26"/></name> <argument_list pos:line="42" pos:column="27">(<argument><expr><name pos:line="42" pos:column="28">docstat<pos:position pos:line="42" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="37">out<pos:position pos:line="42" pos:column="40"/></name></expr></argument>)<pos:position pos:line="42" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="43" pos:column="7">handle_confline<pos:position pos:line="43" pos:column="22"/></name> <argument_list pos:line="43" pos:column="23">(<argument><expr><name pos:line="43" pos:column="24">p<pos:position pos:line="43" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="27">out<pos:position pos:line="43" pos:column="30"/></name></expr></argument>)<pos:position pos:line="43" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="45" pos:column="4"/></block></while>
  <expr_stmt><expr><call><name pos:line="46" pos:column="3">flush_doc<pos:position pos:line="46" pos:column="12"/></name> <argument_list pos:line="46" pos:column="13">(<argument><expr><name pos:line="46" pos:column="14">docstat<pos:position pos:line="46" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="23">out<pos:position pos:line="46" pos:column="26"/></name></expr></argument>)<pos:position pos:line="46" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">fputs<pos:position pos:line="47" pos:column="8"/></name> <argument_list pos:line="47" pos:column="9">(<argument><expr><literal type="string" pos:line="47" pos:column="10">"\n"<pos:position pos:line="47" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="16">out<pos:position pos:line="47" pos:column="19"/></name></expr></argument>)<pos:position pos:line="47" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="21"/></expr_stmt>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

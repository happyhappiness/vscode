<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1081_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">hcache_open_qdbm<pos:position pos:line="2" pos:column="17"/></name> <parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name><name pos:line="2" pos:column="19">struct<pos:position pos:line="2" pos:column="25"/></name> <name pos:line="2" pos:column="26">header_cache<pos:position pos:line="2" pos:column="38"/></name></name><modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type> <name pos:line="2" pos:column="40">h<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name><modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type> <name pos:line="2" pos:column="55">path<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type>    <name pos:line="4" pos:column="10">flags<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><name pos:line="4" pos:column="18">VL_OWRITER<pos:position pos:line="4" pos:column="28"/></name> <operator pos:line="4" pos:column="29">|<pos:position pos:line="4" pos:column="30"/></operator> <name pos:line="4" pos:column="31">VL_OCREAT<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><call><name pos:line="6" pos:column="7">option<pos:position pos:line="6" pos:column="13"/></name><argument_list pos:line="6" pos:column="13">(<argument><expr><name pos:line="6" pos:column="14">OPTHCACHECOMPRESS<pos:position pos:line="6" pos:column="31"/></name></expr></argument>)<pos:position pos:line="6" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="33"/></condition><then pos:line="6" pos:column="33">
    <block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="5">flags<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">|=<pos:position pos:line="7" pos:column="13"/></operator> <name pos:line="7" pos:column="14">VL_OZCOMP<pos:position pos:line="7" pos:column="23"/></name></expr>;<pos:position pos:line="7" pos:column="24"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name><name pos:line="9" pos:column="3">h<pos:position pos:line="9" pos:column="4"/></name><operator pos:line="9" pos:column="4">-&gt;<pos:position pos:line="9" pos:column="9"/></operator><name pos:line="9" pos:column="6">db<pos:position pos:line="9" pos:column="8"/></name></name> <operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator> <call><name pos:line="9" pos:column="11">vlopen<pos:position pos:line="9" pos:column="17"/></name> <argument_list pos:line="9" pos:column="18">(<argument><expr><name pos:line="9" pos:column="19">path<pos:position pos:line="9" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="25">flags<pos:position pos:line="9" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="32">VL_CMPLEX<pos:position pos:line="9" pos:column="41"/></name></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="43"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name><name pos:line="10" pos:column="7">h<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">-&gt;<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="10">db<pos:position pos:line="10" pos:column="12"/></name></name></expr>)<pos:position pos:line="10" pos:column="13"/></condition><then pos:line="10" pos:column="13">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><literal type="number" pos:line="11" pos:column="12">0<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></return></block></then>
  <else pos:line="12" pos:column="3">else
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">-<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">1<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></return></block></else></if>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

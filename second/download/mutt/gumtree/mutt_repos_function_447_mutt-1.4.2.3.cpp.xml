<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_447_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">hash_delete_hash<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">HASH<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type> <name pos:line="1" pos:column="31">table<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">int<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">hash<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">key<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="65">const<pos:position pos:line="1" pos:column="70"/></specifier> <name pos:line="1" pos:column="71">void<pos:position pos:line="1" pos:column="75"/></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">data<pos:position pos:line="1" pos:column="81"/></name></decl></parameter>,
		       <parameter><function_decl><type><name pos:line="2" pos:column="24">void<pos:position pos:line="2" pos:column="28"/></name></type> (<modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier><name pos:line="2" pos:column="31">destroy<pos:position pos:line="2" pos:column="38"/></name>) <parameter_list pos:line="2" pos:column="40">(<parameter><decl><type><name pos:line="2" pos:column="41">void<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list></function_decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">hash_elem<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">ptr<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name><name pos:line="4" pos:column="27">table<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">table<pos:position pos:line="4" pos:column="39"/></name><index pos:line="4" pos:column="39">[<expr><name pos:line="4" pos:column="40">hash<pos:position pos:line="4" pos:column="44"/></name></expr>]<pos:position pos:line="4" pos:column="45"/></index></name></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">hash_elem<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier><modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">last<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><operator pos:line="5" pos:column="29">&amp;<pos:position pos:line="5" pos:column="34"/></operator><name><name pos:line="5" pos:column="30">table<pos:position pos:line="5" pos:column="35"/></name><operator pos:line="5" pos:column="35">-&gt;<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="37">table<pos:position pos:line="5" pos:column="42"/></name><index pos:line="5" pos:column="42">[<expr><name pos:line="5" pos:column="43">hash<pos:position pos:line="5" pos:column="47"/></name></expr>]<pos:position pos:line="5" pos:column="48"/></index></name></expr></init></decl>;<pos:position pos:line="5" pos:column="49"/></decl_stmt>

  <for pos:line="7" pos:column="3">for <control pos:line="7" pos:column="7">(<init pos:line="7" pos:column="8">;<pos:position pos:line="7" pos:column="9"/></init> <condition><expr><name pos:line="7" pos:column="10">ptr<pos:position pos:line="7" pos:column="13"/></name></expr>;<pos:position pos:line="7" pos:column="14"/></condition> <incr><expr><name pos:line="7" pos:column="15">last<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">=<pos:position pos:line="7" pos:column="21"/></operator> <operator pos:line="7" pos:column="22">&amp;<pos:position pos:line="7" pos:column="27"/></operator><name><name pos:line="7" pos:column="23">ptr<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">next<pos:position pos:line="7" pos:column="32"/></name></name></expr><operator pos:line="7" pos:column="32">,<pos:position pos:line="7" pos:column="33"/></operator> <expr><name pos:line="7" pos:column="34">ptr<pos:position pos:line="7" pos:column="37"/></name> <operator pos:line="7" pos:column="38">=<pos:position pos:line="7" pos:column="39"/></operator> <name><name pos:line="7" pos:column="40">ptr<pos:position pos:line="7" pos:column="43"/></name><operator pos:line="7" pos:column="43">-&gt;<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="45">next<pos:position pos:line="7" pos:column="49"/></name></name></expr></incr>)<pos:position pos:line="7" pos:column="50"/></control>
  <block pos:line="8" pos:column="3">{
    <comment type="block" pos:line="9" pos:column="5">/* if `data' is given, look for a matching -&gt;data member.  this is
     * required for the case where we have multiple entries with the same
     * key
     */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">(<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">data<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">==<pos:position pos:line="13" pos:column="17"/></operator> <name><name pos:line="13" pos:column="18">ptr<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">-&gt;<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="23">data<pos:position pos:line="13" pos:column="27"/></name></name><operator pos:line="13" pos:column="27">)<pos:position pos:line="13" pos:column="28"/></operator> <operator pos:line="13" pos:column="29">||<pos:position pos:line="13" pos:column="31"/></operator> <operator pos:line="13" pos:column="32">(<pos:position pos:line="13" pos:column="33"/></operator><operator pos:line="13" pos:column="33">!<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="34">data<pos:position pos:line="13" pos:column="38"/></name> <operator pos:line="13" pos:column="39">&amp;&amp;<pos:position pos:line="13" pos:column="49"/></operator> <call><name pos:line="13" pos:column="42">mutt_strcmp<pos:position pos:line="13" pos:column="53"/></name> <argument_list pos:line="13" pos:column="54">(<argument><expr><name><name pos:line="13" pos:column="55">ptr<pos:position pos:line="13" pos:column="58"/></name><operator pos:line="13" pos:column="58">-&gt;<pos:position pos:line="13" pos:column="63"/></operator><name pos:line="13" pos:column="60">key<pos:position pos:line="13" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="65">key<pos:position pos:line="13" pos:column="68"/></name></expr></argument>)<pos:position pos:line="13" pos:column="69"/></argument_list></call> <operator pos:line="13" pos:column="70">==<pos:position pos:line="13" pos:column="72"/></operator> <literal type="number" pos:line="13" pos:column="73">0<pos:position pos:line="13" pos:column="74"/></literal><operator pos:line="13" pos:column="74">)<pos:position pos:line="13" pos:column="75"/></operator></expr>)<pos:position pos:line="13" pos:column="76"/></condition><then pos:line="13" pos:column="76">
    <block pos:line="14" pos:column="5">{
      <expr_stmt><expr><operator pos:line="15" pos:column="7">*<pos:position pos:line="15" pos:column="8"/></operator><name pos:line="15" pos:column="8">last<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <name><name pos:line="15" pos:column="15">ptr<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">-&gt;<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="20">next<pos:position pos:line="15" pos:column="24"/></name></name></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt>
      <if pos:line="16" pos:column="7">if <condition pos:line="16" pos:column="10">(<expr><name pos:line="16" pos:column="11">destroy<pos:position pos:line="16" pos:column="18"/></name></expr>)<pos:position pos:line="16" pos:column="19"/></condition><then pos:line="16" pos:column="19"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="20">destroy<pos:position pos:line="16" pos:column="27"/></name> <argument_list pos:line="16" pos:column="28">(<argument><expr><name><name pos:line="16" pos:column="29">ptr<pos:position pos:line="16" pos:column="32"/></name><operator pos:line="16" pos:column="32">-&gt;<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="34">data<pos:position pos:line="16" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">FREE<pos:position pos:line="17" pos:column="11"/></name> <argument_list pos:line="17" pos:column="12">(<argument><expr><operator pos:line="17" pos:column="13">&amp;<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="14">ptr<pos:position pos:line="17" pos:column="17"/></name></expr></argument>)<pos:position pos:line="17" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="19"/></expr_stmt>
      <return pos:line="18" pos:column="7">return;<pos:position pos:line="18" pos:column="14"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
  }<pos:position pos:line="20" pos:column="4"/></block></for>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1125_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pop_fetch_headers<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">CONTEXT<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">ctx<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="10">ret<pos:position pos:line="3" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="15">old_count<pos:position pos:line="3" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="26">new_count<pos:position pos:line="3" pos:column="35"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="37">deleted<pos:position pos:line="3" pos:column="44"/></name></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">unsigned<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">short<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">hcached<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><literal type="number" pos:line="4" pos:column="28">0<pos:position pos:line="4" pos:column="29"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="31">bcached<pos:position pos:line="4" pos:column="38"/></name></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">POP_DATA<pos:position pos:line="5" pos:column="11"/></name> <modifier pos:line="5" pos:column="12">*<pos:position pos:line="5" pos:column="13"/></modifier></type><name pos:line="5" pos:column="13">pop_data<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><operator pos:line="5" pos:column="24">(<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="25">POP_DATA<pos:position pos:line="5" pos:column="33"/></name> <operator pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></operator><operator pos:line="5" pos:column="35">)<pos:position pos:line="5" pos:column="36"/></operator><name><name pos:line="5" pos:column="36">ctx<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">-&gt;<pos:position pos:line="5" pos:column="44"/></operator><name pos:line="5" pos:column="41">data<pos:position pos:line="5" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">progress_t<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">progress<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>

<cpp:ifdef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifdef<pos:position pos:line="8" pos:column="7"/></cpp:directive> <name pos:line="8" pos:column="8">USE_HCACHE<pos:position pos:line="8" pos:column="18"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">header_cache_t<pos:position pos:line="9" pos:column="17"/></name> <modifier pos:line="9" pos:column="18">*<pos:position pos:line="9" pos:column="19"/></modifier></type><name pos:line="9" pos:column="19">hc<pos:position pos:line="9" pos:column="21"/></name> <init pos:line="9" pos:column="22">= <expr><name pos:line="9" pos:column="24">NULL<pos:position pos:line="9" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">void<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">data<pos:position pos:line="10" pos:column="13"/></name></decl>;<pos:position pos:line="10" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">hc<pos:position pos:line="12" pos:column="5"/></name> <operator pos:line="12" pos:column="6">=<pos:position pos:line="12" pos:column="7"/></operator> <call><name pos:line="12" pos:column="8">pop_hcache_open<pos:position pos:line="12" pos:column="23"/></name> <argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">pop_data<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="35">ctx<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">-&gt;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="40">path<pos:position pos:line="12" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">time<pos:position pos:line="15" pos:column="7"/></name> <argument_list pos:line="15" pos:column="8">(<argument><expr><operator pos:line="15" pos:column="9">&amp;<pos:position pos:line="15" pos:column="14"/></operator><name><name pos:line="15" pos:column="10">pop_data<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">-&gt;<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="20">check_time<pos:position pos:line="15" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">pop_data<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">clear_cache<pos:position pos:line="16" pos:column="24"/></name></name> <operator pos:line="16" pos:column="25">=<pos:position pos:line="16" pos:column="26"/></operator> <literal type="number" pos:line="16" pos:column="27">0<pos:position pos:line="16" pos:column="28"/></literal></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt>

  <for pos:line="18" pos:column="3">for <control pos:line="18" pos:column="7">(<init><expr><name pos:line="18" pos:column="8">i<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <literal type="number" pos:line="18" pos:column="12">0<pos:position pos:line="18" pos:column="13"/></literal></expr>;<pos:position pos:line="18" pos:column="14"/></init> <condition><expr><name pos:line="18" pos:column="15">i<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">&lt;<pos:position pos:line="18" pos:column="21"/></operator> <name><name pos:line="18" pos:column="19">ctx<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">-&gt;<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="24">msgcount<pos:position pos:line="18" pos:column="32"/></name></name></expr>;<pos:position pos:line="18" pos:column="33"/></condition> <incr><expr><name pos:line="18" pos:column="34">i<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">++<pos:position pos:line="18" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="38"/></control>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="19" pos:column="5">ctx<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">-&gt;<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="10">hdrs<pos:position pos:line="19" pos:column="14"/></name><index pos:line="19" pos:column="14">[<expr><name pos:line="19" pos:column="15">i<pos:position pos:line="19" pos:column="16"/></name></expr>]<pos:position pos:line="19" pos:column="17"/></index></name><operator pos:line="19" pos:column="17">-&gt;<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="19">refno<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">=<pos:position pos:line="19" pos:column="26"/></operator> <operator pos:line="19" pos:column="27">-<pos:position pos:line="19" pos:column="28"/></operator><literal type="number" pos:line="19" pos:column="28">1<pos:position pos:line="19" pos:column="29"/></literal></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt></block></for>

  <expr_stmt><expr><name pos:line="21" pos:column="3">old_count<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <name><name pos:line="21" pos:column="15">ctx<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="20">msgcount<pos:position pos:line="21" pos:column="28"/></name></name></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name pos:line="22" pos:column="3">ret<pos:position pos:line="22" pos:column="6"/></name> <operator pos:line="22" pos:column="7">=<pos:position pos:line="22" pos:column="8"/></operator> <call><name pos:line="22" pos:column="9">pop_fetch_data<pos:position pos:line="22" pos:column="23"/></name> <argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">pop_data<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="35">"UIDL\r\n"<pos:position pos:line="22" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="47">NULL<pos:position pos:line="22" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="53">fetch_uidl<pos:position pos:line="22" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="65">ctx<pos:position pos:line="22" pos:column="68"/></name></expr></argument>)<pos:position pos:line="22" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="70"/></expr_stmt>
  <expr_stmt><expr><name pos:line="23" pos:column="3">new_count<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <name><name pos:line="23" pos:column="15">ctx<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">-&gt;<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="20">msgcount<pos:position pos:line="23" pos:column="28"/></name></name></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">ctx<pos:position pos:line="24" pos:column="6"/></name><operator pos:line="24" pos:column="6">-&gt;<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="8">msgcount<pos:position pos:line="24" pos:column="16"/></name></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">old_count<pos:position pos:line="24" pos:column="28"/></name></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>

  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name><name pos:line="26" pos:column="7">pop_data<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">-&gt;<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="17">cmd_uidl<pos:position pos:line="26" pos:column="25"/></name></name> <operator pos:line="26" pos:column="26">==<pos:position pos:line="26" pos:column="28"/></operator> <literal type="number" pos:line="26" pos:column="29">2<pos:position pos:line="26" pos:column="30"/></literal></expr>)<pos:position pos:line="26" pos:column="31"/></condition><then pos:line="26" pos:column="31">
  <block pos:line="27" pos:column="3">{
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">ret<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">==<pos:position pos:line="28" pos:column="15"/></operator> <literal type="number" pos:line="28" pos:column="16">0<pos:position pos:line="28" pos:column="17"/></literal></expr>)<pos:position pos:line="28" pos:column="18"/></condition><then pos:line="28" pos:column="18">
    <block pos:line="29" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="30" pos:column="7">pop_data<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">-&gt;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="17">cmd_uidl<pos:position pos:line="30" pos:column="25"/></name></name> <operator pos:line="30" pos:column="26">=<pos:position pos:line="30" pos:column="27"/></operator> <literal type="number" pos:line="30" pos:column="28">1<pos:position pos:line="30" pos:column="29"/></literal></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="32" pos:column="7">dprint<pos:position pos:line="32" pos:column="13"/></name> <argument_list pos:line="32" pos:column="14">(<argument><expr><literal type="number" pos:line="32" pos:column="15">1<pos:position pos:line="32" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="32" pos:column="18">(<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="19">debugfile<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">,<pos:position pos:line="32" pos:column="29"/></operator> <literal type="string" pos:line="32" pos:column="30">"pop_fetch_headers: set UIDL capability\n"<pos:position pos:line="32" pos:column="72"/></literal><operator pos:line="32" pos:column="72">)<pos:position pos:line="32" pos:column="73"/></operator></expr></argument>)<pos:position pos:line="32" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="75"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">ret<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">==<pos:position pos:line="35" pos:column="15"/></operator> <operator pos:line="35" pos:column="16">-<pos:position pos:line="35" pos:column="17"/></operator><literal type="number" pos:line="35" pos:column="17">2<pos:position pos:line="35" pos:column="18"/></literal> <operator pos:line="35" pos:column="19">&amp;&amp;<pos:position pos:line="35" pos:column="29"/></operator> <name><name pos:line="35" pos:column="22">pop_data<pos:position pos:line="35" pos:column="30"/></name><operator pos:line="35" pos:column="30">-&gt;<pos:position pos:line="35" pos:column="35"/></operator><name pos:line="35" pos:column="32">cmd_uidl<pos:position pos:line="35" pos:column="40"/></name></name> <operator pos:line="35" pos:column="41">==<pos:position pos:line="35" pos:column="43"/></operator> <literal type="number" pos:line="35" pos:column="44">2<pos:position pos:line="35" pos:column="45"/></literal></expr>)<pos:position pos:line="35" pos:column="46"/></condition><then pos:line="35" pos:column="46">
    <block pos:line="36" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="37" pos:column="7">pop_data<pos:position pos:line="37" pos:column="15"/></name><operator pos:line="37" pos:column="15">-&gt;<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="17">cmd_uidl<pos:position pos:line="37" pos:column="25"/></name></name> <operator pos:line="37" pos:column="26">=<pos:position pos:line="37" pos:column="27"/></operator> <literal type="number" pos:line="37" pos:column="28">0<pos:position pos:line="37" pos:column="29"/></literal></expr>;<pos:position pos:line="37" pos:column="30"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="39" pos:column="7">dprint<pos:position pos:line="39" pos:column="13"/></name> <argument_list pos:line="39" pos:column="14">(<argument><expr><literal type="number" pos:line="39" pos:column="15">1<pos:position pos:line="39" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="39" pos:column="18">(<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="19">debugfile<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">,<pos:position pos:line="39" pos:column="29"/></operator> <literal type="string" pos:line="39" pos:column="30">"pop_fetch_headers: unset UIDL capability\n"<pos:position pos:line="39" pos:column="74"/></literal><operator pos:line="39" pos:column="74">)<pos:position pos:line="39" pos:column="75"/></operator></expr></argument>)<pos:position pos:line="39" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="77"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">snprintf<pos:position pos:line="40" pos:column="15"/></name> <argument_list pos:line="40" pos:column="16">(<argument><expr><name><name pos:line="40" pos:column="17">pop_data<pos:position pos:line="40" pos:column="25"/></name><operator pos:line="40" pos:column="25">-&gt;<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="27">err_msg<pos:position pos:line="40" pos:column="34"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="36">sizeof <argument_list pos:line="40" pos:column="43">(<argument><expr><name><name pos:line="40" pos:column="44">pop_data<pos:position pos:line="40" pos:column="52"/></name><operator pos:line="40" pos:column="52">-&gt;<pos:position pos:line="40" pos:column="57"/></operator><name pos:line="40" pos:column="54">err_msg<pos:position pos:line="40" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="62"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="64">"%s"<pos:position pos:line="40" pos:column="68"/></literal></expr></argument>,
	      <argument><expr><call><name pos:line="41" pos:column="15">_<pos:position pos:line="41" pos:column="16"/></name><argument_list pos:line="41" pos:column="16">(<argument><expr><literal type="string" pos:line="41" pos:column="17">"Command UIDL is not supported by server."<pos:position pos:line="41" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>

  <if pos:line="45" pos:column="3">if <condition pos:line="45" pos:column="6">(<expr><operator pos:line="45" pos:column="7">!<pos:position pos:line="45" pos:column="8"/></operator><name><name pos:line="45" pos:column="8">ctx<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">-&gt;<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="13">quiet<pos:position pos:line="45" pos:column="18"/></name></name></expr>)<pos:position pos:line="45" pos:column="19"/></condition><then pos:line="45" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="5">mutt_progress_init<pos:position pos:line="46" pos:column="23"/></name> <argument_list pos:line="46" pos:column="24">(<argument><expr><operator pos:line="46" pos:column="25">&amp;<pos:position pos:line="46" pos:column="30"/></operator><name pos:line="46" pos:column="26">progress<pos:position pos:line="46" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="36">_<pos:position pos:line="46" pos:column="37"/></name><argument_list pos:line="46" pos:column="37">(<argument><expr><literal type="string" pos:line="46" pos:column="38">"Fetching message headers..."<pos:position pos:line="46" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="68"/></argument_list></call></expr></argument>,
                        <argument><expr><name pos:line="47" pos:column="25">MUTT_PROGRESS_MSG<pos:position pos:line="47" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="44">ReadInc<pos:position pos:line="47" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="53">new_count<pos:position pos:line="47" pos:column="62"/></name> <operator pos:line="47" pos:column="63">-<pos:position pos:line="47" pos:column="64"/></operator> <name pos:line="47" pos:column="65">old_count<pos:position pos:line="47" pos:column="74"/></name></expr></argument>)<pos:position pos:line="47" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="76"/></expr_stmt></block></then></if>

  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><name pos:line="49" pos:column="7">ret<pos:position pos:line="49" pos:column="10"/></name> <operator pos:line="49" pos:column="11">==<pos:position pos:line="49" pos:column="13"/></operator> <literal type="number" pos:line="49" pos:column="14">0<pos:position pos:line="49" pos:column="15"/></literal></expr>)<pos:position pos:line="49" pos:column="16"/></condition><then pos:line="49" pos:column="16">
  <block pos:line="50" pos:column="3">{
    <for pos:line="51" pos:column="5">for <control pos:line="51" pos:column="9">(<init><expr><name pos:line="51" pos:column="10">i<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">=<pos:position pos:line="51" pos:column="13"/></operator> <literal type="number" pos:line="51" pos:column="14">0<pos:position pos:line="51" pos:column="15"/></literal></expr><operator pos:line="51" pos:column="15">,<pos:position pos:line="51" pos:column="16"/></operator> <expr><name pos:line="51" pos:column="17">deleted<pos:position pos:line="51" pos:column="24"/></name> <operator pos:line="51" pos:column="25">=<pos:position pos:line="51" pos:column="26"/></operator> <literal type="number" pos:line="51" pos:column="27">0<pos:position pos:line="51" pos:column="28"/></literal></expr>;<pos:position pos:line="51" pos:column="29"/></init> <condition><expr><name pos:line="51" pos:column="30">i<pos:position pos:line="51" pos:column="31"/></name> <operator pos:line="51" pos:column="32">&lt;<pos:position pos:line="51" pos:column="36"/></operator> <name pos:line="51" pos:column="34">old_count<pos:position pos:line="51" pos:column="43"/></name></expr>;<pos:position pos:line="51" pos:column="44"/></condition> <incr><expr><name pos:line="51" pos:column="45">i<pos:position pos:line="51" pos:column="46"/></name><operator pos:line="51" pos:column="46">++<pos:position pos:line="51" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="51" pos:column="49"/></control>
    <block pos:line="52" pos:column="5">{
      <if pos:line="53" pos:column="7">if <condition pos:line="53" pos:column="10">(<expr><name><name pos:line="53" pos:column="11">ctx<pos:position pos:line="53" pos:column="14"/></name><operator pos:line="53" pos:column="14">-&gt;<pos:position pos:line="53" pos:column="19"/></operator><name pos:line="53" pos:column="16">hdrs<pos:position pos:line="53" pos:column="20"/></name><index pos:line="53" pos:column="20">[<expr><name pos:line="53" pos:column="21">i<pos:position pos:line="53" pos:column="22"/></name></expr>]<pos:position pos:line="53" pos:column="23"/></index></name><operator pos:line="53" pos:column="23">-&gt;<pos:position pos:line="53" pos:column="28"/></operator><name pos:line="53" pos:column="25">refno<pos:position pos:line="53" pos:column="30"/></name> <operator pos:line="53" pos:column="31">==<pos:position pos:line="53" pos:column="33"/></operator> <operator pos:line="53" pos:column="34">-<pos:position pos:line="53" pos:column="35"/></operator><literal type="number" pos:line="53" pos:column="35">1<pos:position pos:line="53" pos:column="36"/></literal></expr>)<pos:position pos:line="53" pos:column="37"/></condition><then pos:line="53" pos:column="37">
      <block pos:line="54" pos:column="7">{
	<expr_stmt><expr><name><name pos:line="55" pos:column="9">ctx<pos:position pos:line="55" pos:column="12"/></name><operator pos:line="55" pos:column="12">-&gt;<pos:position pos:line="55" pos:column="17"/></operator><name pos:line="55" pos:column="14">hdrs<pos:position pos:line="55" pos:column="18"/></name><index pos:line="55" pos:column="18">[<expr><name pos:line="55" pos:column="19">i<pos:position pos:line="55" pos:column="20"/></name></expr>]<pos:position pos:line="55" pos:column="21"/></index></name><operator pos:line="55" pos:column="21">-&gt;<pos:position pos:line="55" pos:column="26"/></operator><name pos:line="55" pos:column="23">deleted<pos:position pos:line="55" pos:column="30"/></name> <operator pos:line="55" pos:column="31">=<pos:position pos:line="55" pos:column="32"/></operator> <literal type="number" pos:line="55" pos:column="33">1<pos:position pos:line="55" pos:column="34"/></literal></expr>;<pos:position pos:line="55" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name pos:line="56" pos:column="9">deleted<pos:position pos:line="56" pos:column="16"/></name><operator pos:line="56" pos:column="16">++<pos:position pos:line="56" pos:column="18"/></operator></expr>;<pos:position pos:line="56" pos:column="19"/></expr_stmt>
      }<pos:position pos:line="57" pos:column="8"/></block></then></if>
    }<pos:position pos:line="58" pos:column="6"/></block></for>
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name pos:line="59" pos:column="9">deleted<pos:position pos:line="59" pos:column="16"/></name> <operator pos:line="59" pos:column="17">&gt;<pos:position pos:line="59" pos:column="21"/></operator> <literal type="number" pos:line="59" pos:column="19">0<pos:position pos:line="59" pos:column="20"/></literal></expr>)<pos:position pos:line="59" pos:column="21"/></condition><then pos:line="59" pos:column="21">
    <block pos:line="60" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="61" pos:column="7">mutt_error<pos:position pos:line="61" pos:column="17"/></name> <argument_list pos:line="61" pos:column="18">(<argument><expr><call><name pos:line="61" pos:column="19">_<pos:position pos:line="61" pos:column="20"/></name><argument_list pos:line="61" pos:column="20">(<argument><expr><literal type="string" pos:line="61" pos:column="21">"%d messages have been lost. Try reopening the mailbox."<pos:position pos:line="61" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="78"/></argument_list></call></expr></argument>,
		  <argument><expr><name pos:line="62" pos:column="19">deleted<pos:position pos:line="62" pos:column="26"/></name></expr></argument>)<pos:position pos:line="62" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="63" pos:column="7">mutt_sleep<pos:position pos:line="63" pos:column="17"/></name> <argument_list pos:line="63" pos:column="18">(<argument><expr><literal type="number" pos:line="63" pos:column="19">2<pos:position pos:line="63" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>

    <for pos:line="66" pos:column="5">for <control pos:line="66" pos:column="9">(<init><expr><name pos:line="66" pos:column="10">i<pos:position pos:line="66" pos:column="11"/></name> <operator pos:line="66" pos:column="12">=<pos:position pos:line="66" pos:column="13"/></operator> <name pos:line="66" pos:column="14">old_count<pos:position pos:line="66" pos:column="23"/></name></expr>;<pos:position pos:line="66" pos:column="24"/></init> <condition><expr><name pos:line="66" pos:column="25">i<pos:position pos:line="66" pos:column="26"/></name> <operator pos:line="66" pos:column="27">&lt;<pos:position pos:line="66" pos:column="31"/></operator> <name pos:line="66" pos:column="29">new_count<pos:position pos:line="66" pos:column="38"/></name></expr>;<pos:position pos:line="66" pos:column="39"/></condition> <incr><expr><name pos:line="66" pos:column="40">i<pos:position pos:line="66" pos:column="41"/></name><operator pos:line="66" pos:column="41">++<pos:position pos:line="66" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="66" pos:column="44"/></control>
    <block pos:line="67" pos:column="5">{
      <if pos:line="68" pos:column="7">if <condition pos:line="68" pos:column="10">(<expr><operator pos:line="68" pos:column="11">!<pos:position pos:line="68" pos:column="12"/></operator><name><name pos:line="68" pos:column="12">ctx<pos:position pos:line="68" pos:column="15"/></name><operator pos:line="68" pos:column="15">-&gt;<pos:position pos:line="68" pos:column="20"/></operator><name pos:line="68" pos:column="17">quiet<pos:position pos:line="68" pos:column="22"/></name></name></expr>)<pos:position pos:line="68" pos:column="23"/></condition><then pos:line="68" pos:column="23">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="9">mutt_progress_update<pos:position pos:line="69" pos:column="29"/></name> <argument_list pos:line="69" pos:column="30">(<argument><expr><operator pos:line="69" pos:column="31">&amp;<pos:position pos:line="69" pos:column="36"/></operator><name pos:line="69" pos:column="32">progress<pos:position pos:line="69" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="42">i<pos:position pos:line="69" pos:column="43"/></name> <operator pos:line="69" pos:column="44">+<pos:position pos:line="69" pos:column="45"/></operator> <literal type="number" pos:line="69" pos:column="46">1<pos:position pos:line="69" pos:column="47"/></literal> <operator pos:line="69" pos:column="48">-<pos:position pos:line="69" pos:column="49"/></operator> <name pos:line="69" pos:column="50">old_count<pos:position pos:line="69" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="61">-<pos:position pos:line="69" pos:column="62"/></operator><literal type="number" pos:line="69" pos:column="62">1<pos:position pos:line="69" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="65"/></expr_stmt></block></then></if>
<cpp:if pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">if<pos:position pos:line="70" pos:column="4"/></cpp:directive> <expr><name pos:line="70" pos:column="5">USE_HCACHE<pos:position pos:line="70" pos:column="15"/></name></expr></cpp:if>
      <if pos:line="71" pos:column="7">if <condition pos:line="71" pos:column="10">(<expr><operator pos:line="71" pos:column="11">(<pos:position pos:line="71" pos:column="12"/></operator><name pos:line="71" pos:column="12">data<pos:position pos:line="71" pos:column="16"/></name> <operator pos:line="71" pos:column="17">=<pos:position pos:line="71" pos:column="18"/></operator> <call><name pos:line="71" pos:column="19">mutt_hcache_fetch<pos:position pos:line="71" pos:column="36"/></name> <argument_list pos:line="71" pos:column="37">(<argument><expr><name pos:line="71" pos:column="38">hc<pos:position pos:line="71" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="42">ctx<pos:position pos:line="71" pos:column="45"/></name><operator pos:line="71" pos:column="45">-&gt;<pos:position pos:line="71" pos:column="50"/></operator><name pos:line="71" pos:column="47">hdrs<pos:position pos:line="71" pos:column="51"/></name><index pos:line="71" pos:column="51">[<expr><name pos:line="71" pos:column="52">i<pos:position pos:line="71" pos:column="53"/></name></expr>]<pos:position pos:line="71" pos:column="54"/></index></name><operator pos:line="71" pos:column="54">-&gt;<pos:position pos:line="71" pos:column="59"/></operator><name pos:line="71" pos:column="56">data<pos:position pos:line="71" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="62">strlen<pos:position pos:line="71" pos:column="68"/></name></expr></argument>)<pos:position pos:line="71" pos:column="69"/></argument_list></call><operator pos:line="71" pos:column="69">)<pos:position pos:line="71" pos:column="70"/></operator></expr>)<pos:position pos:line="71" pos:column="71"/></condition><then pos:line="71" pos:column="71">
      <block pos:line="72" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="73" pos:column="9">char<pos:position pos:line="73" pos:column="13"/></name> <modifier pos:line="73" pos:column="14">*<pos:position pos:line="73" pos:column="15"/></modifier></type><name pos:line="73" pos:column="15">uidl<pos:position pos:line="73" pos:column="19"/></name> <init pos:line="73" pos:column="20">= <expr><call><name pos:line="73" pos:column="22">safe_strdup<pos:position pos:line="73" pos:column="33"/></name> <argument_list pos:line="73" pos:column="34">(<argument><expr><name><name pos:line="73" pos:column="35">ctx<pos:position pos:line="73" pos:column="38"/></name><operator pos:line="73" pos:column="38">-&gt;<pos:position pos:line="73" pos:column="43"/></operator><name pos:line="73" pos:column="40">hdrs<pos:position pos:line="73" pos:column="44"/></name><index pos:line="73" pos:column="44">[<expr><name pos:line="73" pos:column="45">i<pos:position pos:line="73" pos:column="46"/></name></expr>]<pos:position pos:line="73" pos:column="47"/></index></name><operator pos:line="73" pos:column="47">-&gt;<pos:position pos:line="73" pos:column="52"/></operator><name pos:line="73" pos:column="49">data<pos:position pos:line="73" pos:column="53"/></name></expr></argument>)<pos:position pos:line="73" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="73" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="74" pos:column="9">int<pos:position pos:line="74" pos:column="12"/></name></type> <name pos:line="74" pos:column="13">refno<pos:position pos:line="74" pos:column="18"/></name> <init pos:line="74" pos:column="19">= <expr><name><name pos:line="74" pos:column="21">ctx<pos:position pos:line="74" pos:column="24"/></name><operator pos:line="74" pos:column="24">-&gt;<pos:position pos:line="74" pos:column="29"/></operator><name pos:line="74" pos:column="26">hdrs<pos:position pos:line="74" pos:column="30"/></name><index pos:line="74" pos:column="30">[<expr><name pos:line="74" pos:column="31">i<pos:position pos:line="74" pos:column="32"/></name></expr>]<pos:position pos:line="74" pos:column="33"/></index></name><operator pos:line="74" pos:column="33">-&gt;<pos:position pos:line="74" pos:column="38"/></operator><name pos:line="74" pos:column="35">refno<pos:position pos:line="74" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="74" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="75" pos:column="9">int<pos:position pos:line="75" pos:column="12"/></name></type> <name pos:line="75" pos:column="13">index<pos:position pos:line="75" pos:column="18"/></name> <init pos:line="75" pos:column="19">= <expr><name><name pos:line="75" pos:column="21">ctx<pos:position pos:line="75" pos:column="24"/></name><operator pos:line="75" pos:column="24">-&gt;<pos:position pos:line="75" pos:column="29"/></operator><name pos:line="75" pos:column="26">hdrs<pos:position pos:line="75" pos:column="30"/></name><index pos:line="75" pos:column="30">[<expr><name pos:line="75" pos:column="31">i<pos:position pos:line="75" pos:column="32"/></name></expr>]<pos:position pos:line="75" pos:column="33"/></index></name><operator pos:line="75" pos:column="33">-&gt;<pos:position pos:line="75" pos:column="38"/></operator><name pos:line="75" pos:column="35">index<pos:position pos:line="75" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="75" pos:column="41"/></decl_stmt>
	<comment type="block" pos:line="76" pos:column="9">/*
	 * - POP dynamically numbers headers and relies on h-&gt;refno
	 *   to map messages; so restore header and overwrite restored
	 *   refno with current refno, same for index
	 * - h-&gt;data needs to a separate pointer as it's driver-specific
	 *   data freed separately elsewhere
	 *   (the old h-&gt;data should point inside a malloc'd block from
	 *   hcache so there shouldn't be a memleak here)
	 */</comment>
	<decl_stmt><decl><type><name pos:line="85" pos:column="9">HEADER<pos:position pos:line="85" pos:column="15"/></name> <modifier pos:line="85" pos:column="16">*<pos:position pos:line="85" pos:column="17"/></modifier></type><name pos:line="85" pos:column="17">h<pos:position pos:line="85" pos:column="18"/></name> <init pos:line="85" pos:column="19">= <expr><call><name pos:line="85" pos:column="21">mutt_hcache_restore<pos:position pos:line="85" pos:column="40"/></name> <argument_list pos:line="85" pos:column="41">(<argument><expr><operator pos:line="85" pos:column="42">(<pos:position pos:line="85" pos:column="43"/></operator><name pos:line="85" pos:column="43">unsigned<pos:position pos:line="85" pos:column="51"/></name> <name pos:line="85" pos:column="52">char<pos:position pos:line="85" pos:column="56"/></name> <operator pos:line="85" pos:column="57">*<pos:position pos:line="85" pos:column="58"/></operator><operator pos:line="85" pos:column="58">)<pos:position pos:line="85" pos:column="59"/></operator> <name pos:line="85" pos:column="60">data<pos:position pos:line="85" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="66">NULL<pos:position pos:line="85" pos:column="70"/></name></expr></argument>)<pos:position pos:line="85" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="85" pos:column="72"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="86" pos:column="9">mutt_free_header<pos:position pos:line="86" pos:column="25"/></name> <argument_list pos:line="86" pos:column="26">(<argument><expr><operator pos:line="86" pos:column="27">&amp;<pos:position pos:line="86" pos:column="32"/></operator><name><name pos:line="86" pos:column="28">ctx<pos:position pos:line="86" pos:column="31"/></name><operator pos:line="86" pos:column="31">-&gt;<pos:position pos:line="86" pos:column="36"/></operator><name pos:line="86" pos:column="33">hdrs<pos:position pos:line="86" pos:column="37"/></name><index pos:line="86" pos:column="37">[<expr><name pos:line="86" pos:column="38">i<pos:position pos:line="86" pos:column="39"/></name></expr>]<pos:position pos:line="86" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="86" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="87" pos:column="9">ctx<pos:position pos:line="87" pos:column="12"/></name><operator pos:line="87" pos:column="12">-&gt;<pos:position pos:line="87" pos:column="17"/></operator><name pos:line="87" pos:column="14">hdrs<pos:position pos:line="87" pos:column="18"/></name><index pos:line="87" pos:column="18">[<expr><name pos:line="87" pos:column="19">i<pos:position pos:line="87" pos:column="20"/></name></expr>]<pos:position pos:line="87" pos:column="21"/></index></name> <operator pos:line="87" pos:column="22">=<pos:position pos:line="87" pos:column="23"/></operator> <name pos:line="87" pos:column="24">h<pos:position pos:line="87" pos:column="25"/></name></expr>;<pos:position pos:line="87" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="88" pos:column="9">ctx<pos:position pos:line="88" pos:column="12"/></name><operator pos:line="88" pos:column="12">-&gt;<pos:position pos:line="88" pos:column="17"/></operator><name pos:line="88" pos:column="14">hdrs<pos:position pos:line="88" pos:column="18"/></name><index pos:line="88" pos:column="18">[<expr><name pos:line="88" pos:column="19">i<pos:position pos:line="88" pos:column="20"/></name></expr>]<pos:position pos:line="88" pos:column="21"/></index></name><operator pos:line="88" pos:column="21">-&gt;<pos:position pos:line="88" pos:column="26"/></operator><name pos:line="88" pos:column="23">refno<pos:position pos:line="88" pos:column="28"/></name> <operator pos:line="88" pos:column="29">=<pos:position pos:line="88" pos:column="30"/></operator> <name pos:line="88" pos:column="31">refno<pos:position pos:line="88" pos:column="36"/></name></expr>;<pos:position pos:line="88" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="89" pos:column="9">ctx<pos:position pos:line="89" pos:column="12"/></name><operator pos:line="89" pos:column="12">-&gt;<pos:position pos:line="89" pos:column="17"/></operator><name pos:line="89" pos:column="14">hdrs<pos:position pos:line="89" pos:column="18"/></name><index pos:line="89" pos:column="18">[<expr><name pos:line="89" pos:column="19">i<pos:position pos:line="89" pos:column="20"/></name></expr>]<pos:position pos:line="89" pos:column="21"/></index></name><operator pos:line="89" pos:column="21">-&gt;<pos:position pos:line="89" pos:column="26"/></operator><name pos:line="89" pos:column="23">index<pos:position pos:line="89" pos:column="28"/></name> <operator pos:line="89" pos:column="29">=<pos:position pos:line="89" pos:column="30"/></operator> <name pos:line="89" pos:column="31">index<pos:position pos:line="89" pos:column="36"/></name></expr>;<pos:position pos:line="89" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="90" pos:column="9">ctx<pos:position pos:line="90" pos:column="12"/></name><operator pos:line="90" pos:column="12">-&gt;<pos:position pos:line="90" pos:column="17"/></operator><name pos:line="90" pos:column="14">hdrs<pos:position pos:line="90" pos:column="18"/></name><index pos:line="90" pos:column="18">[<expr><name pos:line="90" pos:column="19">i<pos:position pos:line="90" pos:column="20"/></name></expr>]<pos:position pos:line="90" pos:column="21"/></index></name><operator pos:line="90" pos:column="21">-&gt;<pos:position pos:line="90" pos:column="26"/></operator><name pos:line="90" pos:column="23">data<pos:position pos:line="90" pos:column="27"/></name> <operator pos:line="90" pos:column="28">=<pos:position pos:line="90" pos:column="29"/></operator> <name pos:line="90" pos:column="30">uidl<pos:position pos:line="90" pos:column="34"/></name></expr>;<pos:position pos:line="90" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name pos:line="91" pos:column="9">ret<pos:position pos:line="91" pos:column="12"/></name> <operator pos:line="91" pos:column="13">=<pos:position pos:line="91" pos:column="14"/></operator> <literal type="number" pos:line="91" pos:column="15">0<pos:position pos:line="91" pos:column="16"/></literal></expr>;<pos:position pos:line="91" pos:column="17"/></expr_stmt>
	<expr_stmt><expr><name pos:line="92" pos:column="9">hcached<pos:position pos:line="92" pos:column="16"/></name> <operator pos:line="92" pos:column="17">=<pos:position pos:line="92" pos:column="18"/></operator> <literal type="number" pos:line="92" pos:column="19">1<pos:position pos:line="92" pos:column="20"/></literal></expr>;<pos:position pos:line="92" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="93" pos:column="8"/></block></then>
      <elseif pos:line="94" pos:column="7">else
<cpp:endif pos:line="95" pos:column="1">#<cpp:directive pos:line="95" pos:column="2">endif<pos:position pos:line="95" pos:column="7"/></cpp:directive></cpp:endif>
      <if pos:line="96" pos:column="7">if <condition pos:line="96" pos:column="10">(<expr><operator pos:line="96" pos:column="11">(<pos:position pos:line="96" pos:column="12"/></operator><name pos:line="96" pos:column="12">ret<pos:position pos:line="96" pos:column="15"/></name> <operator pos:line="96" pos:column="16">=<pos:position pos:line="96" pos:column="17"/></operator> <call><name pos:line="96" pos:column="18">pop_read_header<pos:position pos:line="96" pos:column="33"/></name> <argument_list pos:line="96" pos:column="34">(<argument><expr><name pos:line="96" pos:column="35">pop_data<pos:position pos:line="96" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="45">ctx<pos:position pos:line="96" pos:column="48"/></name><operator pos:line="96" pos:column="48">-&gt;<pos:position pos:line="96" pos:column="53"/></operator><name pos:line="96" pos:column="50">hdrs<pos:position pos:line="96" pos:column="54"/></name><index pos:line="96" pos:column="54">[<expr><name pos:line="96" pos:column="55">i<pos:position pos:line="96" pos:column="56"/></name></expr>]<pos:position pos:line="96" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="96" pos:column="58"/></argument_list></call><operator pos:line="96" pos:column="58">)<pos:position pos:line="96" pos:column="59"/></operator> <operator pos:line="96" pos:column="60">&lt;<pos:position pos:line="96" pos:column="64"/></operator> <literal type="number" pos:line="96" pos:column="62">0<pos:position pos:line="96" pos:column="63"/></literal></expr>)<pos:position pos:line="96" pos:column="64"/></condition><then pos:line="96" pos:column="64">
	<block type="pseudo"><break pos:line="97" pos:column="9">break;<pos:position pos:line="97" pos:column="15"/></break></block></then></if></elseif>
<cpp:if pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">if<pos:position pos:line="98" pos:column="4"/></cpp:directive> <expr><name pos:line="98" pos:column="5">USE_HCACHE<pos:position pos:line="98" pos:column="15"/></name></expr></cpp:if>
      <else pos:line="99" pos:column="7">else
      <block pos:line="100" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="101" pos:column="9">mutt_hcache_store<pos:position pos:line="101" pos:column="26"/></name> <argument_list pos:line="101" pos:column="27">(<argument><expr><name pos:line="101" pos:column="28">hc<pos:position pos:line="101" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="101" pos:column="32">ctx<pos:position pos:line="101" pos:column="35"/></name><operator pos:line="101" pos:column="35">-&gt;<pos:position pos:line="101" pos:column="40"/></operator><name pos:line="101" pos:column="37">hdrs<pos:position pos:line="101" pos:column="41"/></name><index pos:line="101" pos:column="41">[<expr><name pos:line="101" pos:column="42">i<pos:position pos:line="101" pos:column="43"/></name></expr>]<pos:position pos:line="101" pos:column="44"/></index></name><operator pos:line="101" pos:column="44">-&gt;<pos:position pos:line="101" pos:column="49"/></operator><name pos:line="101" pos:column="46">data<pos:position pos:line="101" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="101" pos:column="52">ctx<pos:position pos:line="101" pos:column="55"/></name><operator pos:line="101" pos:column="55">-&gt;<pos:position pos:line="101" pos:column="60"/></operator><name pos:line="101" pos:column="57">hdrs<pos:position pos:line="101" pos:column="61"/></name><index pos:line="101" pos:column="61">[<expr><name pos:line="101" pos:column="62">i<pos:position pos:line="101" pos:column="63"/></name></expr>]<pos:position pos:line="101" pos:column="64"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="101" pos:column="66">0<pos:position pos:line="101" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="101" pos:column="69">strlen<pos:position pos:line="101" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="77">MUTT_GENERATE_UIDVALIDITY<pos:position pos:line="101" pos:column="102"/></name></expr></argument>)<pos:position pos:line="101" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="104"/></expr_stmt>
      }<pos:position pos:line="102" pos:column="8"/></block></else></if>

      <expr_stmt><expr><call><name pos:line="104" pos:column="7">mutt_hcache_free<pos:position pos:line="104" pos:column="23"/></name> <argument_list pos:line="104" pos:column="24">(<argument><expr><operator pos:line="104" pos:column="25">&amp;<pos:position pos:line="104" pos:column="30"/></operator><name pos:line="104" pos:column="26">data<pos:position pos:line="104" pos:column="30"/></name></expr></argument>)<pos:position pos:line="104" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="32"/></expr_stmt>
<cpp:endif pos:line="105" pos:column="1">#<cpp:directive pos:line="105" pos:column="2">endif<pos:position pos:line="105" pos:column="7"/></cpp:directive></cpp:endif>

      <comment type="block" pos:line="107" pos:column="7">/*
       * faked support for flags works like this:
       * - if 'hcached' is 1, we have the message in our hcache:
       *        - if we also have a body: read
       *        - if we don't have a body: old
       *          (if $mark_old is set which is maybe wrong as
       *          $mark_old should be considered for syncing the
       *          folder and not when opening it XXX)
       * - if 'hcached' is 0, we don't have the message in our hcache:
       *        - if we also have a body: read
       *        - if we don't have a body: new
       */</comment>
      <expr_stmt><expr><name pos:line="119" pos:column="7">bcached<pos:position pos:line="119" pos:column="14"/></name> <operator pos:line="119" pos:column="15">=<pos:position pos:line="119" pos:column="16"/></operator> <call><name pos:line="119" pos:column="17">mutt_bcache_exists<pos:position pos:line="119" pos:column="35"/></name> <argument_list pos:line="119" pos:column="36">(<argument><expr><name><name pos:line="119" pos:column="37">pop_data<pos:position pos:line="119" pos:column="45"/></name><operator pos:line="119" pos:column="45">-&gt;<pos:position pos:line="119" pos:column="50"/></operator><name pos:line="119" pos:column="47">bcache<pos:position pos:line="119" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="119" pos:column="55">ctx<pos:position pos:line="119" pos:column="58"/></name><operator pos:line="119" pos:column="58">-&gt;<pos:position pos:line="119" pos:column="63"/></operator><name pos:line="119" pos:column="60">hdrs<pos:position pos:line="119" pos:column="64"/></name><index pos:line="119" pos:column="64">[<expr><name pos:line="119" pos:column="65">i<pos:position pos:line="119" pos:column="66"/></name></expr>]<pos:position pos:line="119" pos:column="67"/></index></name><operator pos:line="119" pos:column="67">-&gt;<pos:position pos:line="119" pos:column="72"/></operator><name pos:line="119" pos:column="69">data<pos:position pos:line="119" pos:column="73"/></name></expr></argument>)<pos:position pos:line="119" pos:column="74"/></argument_list></call> <operator pos:line="119" pos:column="75">==<pos:position pos:line="119" pos:column="77"/></operator> <literal type="number" pos:line="119" pos:column="78">0<pos:position pos:line="119" pos:column="79"/></literal></expr>;<pos:position pos:line="119" pos:column="80"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="120" pos:column="7">ctx<pos:position pos:line="120" pos:column="10"/></name><operator pos:line="120" pos:column="10">-&gt;<pos:position pos:line="120" pos:column="15"/></operator><name pos:line="120" pos:column="12">hdrs<pos:position pos:line="120" pos:column="16"/></name><index pos:line="120" pos:column="16">[<expr><name pos:line="120" pos:column="17">i<pos:position pos:line="120" pos:column="18"/></name></expr>]<pos:position pos:line="120" pos:column="19"/></index></name><operator pos:line="120" pos:column="19">-&gt;<pos:position pos:line="120" pos:column="24"/></operator><name pos:line="120" pos:column="21">old<pos:position pos:line="120" pos:column="24"/></name> <operator pos:line="120" pos:column="25">=<pos:position pos:line="120" pos:column="26"/></operator> <literal type="number" pos:line="120" pos:column="27">0<pos:position pos:line="120" pos:column="28"/></literal></expr>;<pos:position pos:line="120" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="121" pos:column="7">ctx<pos:position pos:line="121" pos:column="10"/></name><operator pos:line="121" pos:column="10">-&gt;<pos:position pos:line="121" pos:column="15"/></operator><name pos:line="121" pos:column="12">hdrs<pos:position pos:line="121" pos:column="16"/></name><index pos:line="121" pos:column="16">[<expr><name pos:line="121" pos:column="17">i<pos:position pos:line="121" pos:column="18"/></name></expr>]<pos:position pos:line="121" pos:column="19"/></index></name><operator pos:line="121" pos:column="19">-&gt;<pos:position pos:line="121" pos:column="24"/></operator><name pos:line="121" pos:column="21">read<pos:position pos:line="121" pos:column="25"/></name> <operator pos:line="121" pos:column="26">=<pos:position pos:line="121" pos:column="27"/></operator> <literal type="number" pos:line="121" pos:column="28">0<pos:position pos:line="121" pos:column="29"/></literal></expr>;<pos:position pos:line="121" pos:column="30"/></expr_stmt>
      <if pos:line="122" pos:column="7">if <condition pos:line="122" pos:column="10">(<expr><name pos:line="122" pos:column="11">hcached<pos:position pos:line="122" pos:column="18"/></name></expr>)<pos:position pos:line="122" pos:column="19"/></condition><then pos:line="122" pos:column="19">
      <block pos:line="123" pos:column="7">{
        <if pos:line="124" pos:column="9">if <condition pos:line="124" pos:column="12">(<expr><name pos:line="124" pos:column="13">bcached<pos:position pos:line="124" pos:column="20"/></name></expr>)<pos:position pos:line="124" pos:column="21"/></condition><then pos:line="124" pos:column="21">
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="125" pos:column="11">ctx<pos:position pos:line="125" pos:column="14"/></name><operator pos:line="125" pos:column="14">-&gt;<pos:position pos:line="125" pos:column="19"/></operator><name pos:line="125" pos:column="16">hdrs<pos:position pos:line="125" pos:column="20"/></name><index pos:line="125" pos:column="20">[<expr><name pos:line="125" pos:column="21">i<pos:position pos:line="125" pos:column="22"/></name></expr>]<pos:position pos:line="125" pos:column="23"/></index></name><operator pos:line="125" pos:column="23">-&gt;<pos:position pos:line="125" pos:column="28"/></operator><name pos:line="125" pos:column="25">read<pos:position pos:line="125" pos:column="29"/></name> <operator pos:line="125" pos:column="30">=<pos:position pos:line="125" pos:column="31"/></operator> <literal type="number" pos:line="125" pos:column="32">1<pos:position pos:line="125" pos:column="33"/></literal></expr>;<pos:position pos:line="125" pos:column="34"/></expr_stmt></block></then>
        <elseif pos:line="126" pos:column="9">else <if pos:line="126" pos:column="14">if <condition pos:line="126" pos:column="17">(<expr><call><name pos:line="126" pos:column="18">option<pos:position pos:line="126" pos:column="24"/></name> <argument_list pos:line="126" pos:column="25">(<argument><expr><name pos:line="126" pos:column="26">OPTMARKOLD<pos:position pos:line="126" pos:column="36"/></name></expr></argument>)<pos:position pos:line="126" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="126" pos:column="38"/></condition><then pos:line="126" pos:column="38">
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="127" pos:column="11">ctx<pos:position pos:line="127" pos:column="14"/></name><operator pos:line="127" pos:column="14">-&gt;<pos:position pos:line="127" pos:column="19"/></operator><name pos:line="127" pos:column="16">hdrs<pos:position pos:line="127" pos:column="20"/></name><index pos:line="127" pos:column="20">[<expr><name pos:line="127" pos:column="21">i<pos:position pos:line="127" pos:column="22"/></name></expr>]<pos:position pos:line="127" pos:column="23"/></index></name><operator pos:line="127" pos:column="23">-&gt;<pos:position pos:line="127" pos:column="28"/></operator><name pos:line="127" pos:column="25">old<pos:position pos:line="127" pos:column="28"/></name> <operator pos:line="127" pos:column="29">=<pos:position pos:line="127" pos:column="30"/></operator> <literal type="number" pos:line="127" pos:column="31">1<pos:position pos:line="127" pos:column="32"/></literal></expr>;<pos:position pos:line="127" pos:column="33"/></expr_stmt></block></then></if></elseif></if>
      }<pos:position pos:line="128" pos:column="8"/></block></then>
      <else pos:line="129" pos:column="7">else
      <block pos:line="130" pos:column="7">{
        <if pos:line="131" pos:column="9">if <condition pos:line="131" pos:column="12">(<expr><name pos:line="131" pos:column="13">bcached<pos:position pos:line="131" pos:column="20"/></name></expr>)<pos:position pos:line="131" pos:column="21"/></condition><then pos:line="131" pos:column="21">
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="132" pos:column="11">ctx<pos:position pos:line="132" pos:column="14"/></name><operator pos:line="132" pos:column="14">-&gt;<pos:position pos:line="132" pos:column="19"/></operator><name pos:line="132" pos:column="16">hdrs<pos:position pos:line="132" pos:column="20"/></name><index pos:line="132" pos:column="20">[<expr><name pos:line="132" pos:column="21">i<pos:position pos:line="132" pos:column="22"/></name></expr>]<pos:position pos:line="132" pos:column="23"/></index></name><operator pos:line="132" pos:column="23">-&gt;<pos:position pos:line="132" pos:column="28"/></operator><name pos:line="132" pos:column="25">read<pos:position pos:line="132" pos:column="29"/></name> <operator pos:line="132" pos:column="30">=<pos:position pos:line="132" pos:column="31"/></operator> <literal type="number" pos:line="132" pos:column="32">1<pos:position pos:line="132" pos:column="33"/></literal></expr>;<pos:position pos:line="132" pos:column="34"/></expr_stmt></block></then></if>
      }<pos:position pos:line="133" pos:column="8"/></block></else></if>

      <expr_stmt><expr><name><name pos:line="135" pos:column="7">ctx<pos:position pos:line="135" pos:column="10"/></name><operator pos:line="135" pos:column="10">-&gt;<pos:position pos:line="135" pos:column="15"/></operator><name pos:line="135" pos:column="12">msgcount<pos:position pos:line="135" pos:column="20"/></name></name><operator pos:line="135" pos:column="20">++<pos:position pos:line="135" pos:column="22"/></operator></expr>;<pos:position pos:line="135" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="136" pos:column="6"/></block></for>

    <if pos:line="138" pos:column="5">if <condition pos:line="138" pos:column="8">(<expr><name pos:line="138" pos:column="9">i<pos:position pos:line="138" pos:column="10"/></name> <operator pos:line="138" pos:column="11">&gt;<pos:position pos:line="138" pos:column="15"/></operator> <name pos:line="138" pos:column="13">old_count<pos:position pos:line="138" pos:column="22"/></name></expr>)<pos:position pos:line="138" pos:column="23"/></condition><then pos:line="138" pos:column="23">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="139" pos:column="7">mx_update_context<pos:position pos:line="139" pos:column="24"/></name> <argument_list pos:line="139" pos:column="25">(<argument><expr><name pos:line="139" pos:column="26">ctx<pos:position pos:line="139" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="31">i<pos:position pos:line="139" pos:column="32"/></name> <operator pos:line="139" pos:column="33">-<pos:position pos:line="139" pos:column="34"/></operator> <name pos:line="139" pos:column="35">old_count<pos:position pos:line="139" pos:column="44"/></name></expr></argument>)<pos:position pos:line="139" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="46"/></expr_stmt></block></then></if>
  }<pos:position pos:line="140" pos:column="4"/></block></then></if>

<cpp:if pos:line="142" pos:column="1">#<cpp:directive pos:line="142" pos:column="2">if<pos:position pos:line="142" pos:column="4"/></cpp:directive> <expr><name pos:line="142" pos:column="5">USE_HCACHE<pos:position pos:line="142" pos:column="15"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="143" pos:column="5">mutt_hcache_close<pos:position pos:line="143" pos:column="22"/></name> <argument_list pos:line="143" pos:column="23">(<argument><expr><name pos:line="143" pos:column="24">hc<pos:position pos:line="143" pos:column="26"/></name></expr></argument>)<pos:position pos:line="143" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="28"/></expr_stmt>
<cpp:endif pos:line="144" pos:column="1">#<cpp:directive pos:line="144" pos:column="2">endif<pos:position pos:line="144" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="146" pos:column="3">if <condition pos:line="146" pos:column="6">(<expr><name pos:line="146" pos:column="7">ret<pos:position pos:line="146" pos:column="10"/></name> <operator pos:line="146" pos:column="11">&lt;<pos:position pos:line="146" pos:column="15"/></operator> <literal type="number" pos:line="146" pos:column="13">0<pos:position pos:line="146" pos:column="14"/></literal></expr>)<pos:position pos:line="146" pos:column="15"/></condition><then pos:line="146" pos:column="15">
  <block pos:line="147" pos:column="3">{
    <for pos:line="148" pos:column="5">for <control pos:line="148" pos:column="9">(<init><expr><name pos:line="148" pos:column="10">i<pos:position pos:line="148" pos:column="11"/></name> <operator pos:line="148" pos:column="12">=<pos:position pos:line="148" pos:column="13"/></operator> <name><name pos:line="148" pos:column="14">ctx<pos:position pos:line="148" pos:column="17"/></name><operator pos:line="148" pos:column="17">-&gt;<pos:position pos:line="148" pos:column="22"/></operator><name pos:line="148" pos:column="19">msgcount<pos:position pos:line="148" pos:column="27"/></name></name></expr>;<pos:position pos:line="148" pos:column="28"/></init> <condition><expr><name pos:line="148" pos:column="29">i<pos:position pos:line="148" pos:column="30"/></name> <operator pos:line="148" pos:column="31">&lt;<pos:position pos:line="148" pos:column="35"/></operator> <name pos:line="148" pos:column="33">new_count<pos:position pos:line="148" pos:column="42"/></name></expr>;<pos:position pos:line="148" pos:column="43"/></condition> <incr><expr><name pos:line="148" pos:column="44">i<pos:position pos:line="148" pos:column="45"/></name><operator pos:line="148" pos:column="45">++<pos:position pos:line="148" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="148" pos:column="48"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="149" pos:column="7">mutt_free_header<pos:position pos:line="149" pos:column="23"/></name> <argument_list pos:line="149" pos:column="24">(<argument><expr><operator pos:line="149" pos:column="25">&amp;<pos:position pos:line="149" pos:column="30"/></operator><name><name pos:line="149" pos:column="26">ctx<pos:position pos:line="149" pos:column="29"/></name><operator pos:line="149" pos:column="29">-&gt;<pos:position pos:line="149" pos:column="34"/></operator><name pos:line="149" pos:column="31">hdrs<pos:position pos:line="149" pos:column="35"/></name><index pos:line="149" pos:column="35">[<expr><name pos:line="149" pos:column="36">i<pos:position pos:line="149" pos:column="37"/></name></expr>]<pos:position pos:line="149" pos:column="38"/></index></name></expr></argument>)<pos:position pos:line="149" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="40"/></expr_stmt></block></for>
    <return pos:line="150" pos:column="5">return <expr><name pos:line="150" pos:column="12">ret<pos:position pos:line="150" pos:column="15"/></name></expr>;<pos:position pos:line="150" pos:column="16"/></return>
  }<pos:position pos:line="151" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="153" pos:column="3">/* after putting the result into our structures,
   * clean up cache, i.e. wipe messages deleted outside
   * the availability of our cache
   */</comment>
  <if pos:line="157" pos:column="3">if <condition pos:line="157" pos:column="6">(<expr><call><name pos:line="157" pos:column="7">option<pos:position pos:line="157" pos:column="13"/></name> <argument_list pos:line="157" pos:column="14">(<argument><expr><name pos:line="157" pos:column="15">OPTMESSAGECACHECLEAN<pos:position pos:line="157" pos:column="35"/></name></expr></argument>)<pos:position pos:line="157" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="157" pos:column="37"/></condition><then pos:line="157" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="158" pos:column="5">mutt_bcache_list<pos:position pos:line="158" pos:column="21"/></name> <argument_list pos:line="158" pos:column="22">(<argument><expr><name><name pos:line="158" pos:column="23">pop_data<pos:position pos:line="158" pos:column="31"/></name><operator pos:line="158" pos:column="31">-&gt;<pos:position pos:line="158" pos:column="36"/></operator><name pos:line="158" pos:column="33">bcache<pos:position pos:line="158" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="41">msg_cache_check<pos:position pos:line="158" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="158" pos:column="58">(<pos:position pos:line="158" pos:column="59"/></operator><name pos:line="158" pos:column="59">void<pos:position pos:line="158" pos:column="63"/></name><operator pos:line="158" pos:column="63">*<pos:position pos:line="158" pos:column="64"/></operator><operator pos:line="158" pos:column="64">)<pos:position pos:line="158" pos:column="65"/></operator><name pos:line="158" pos:column="65">ctx<pos:position pos:line="158" pos:column="68"/></name></expr></argument>)<pos:position pos:line="158" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="70"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="160" pos:column="3">mutt_clear_error<pos:position pos:line="160" pos:column="19"/></name> <argument_list pos:line="160" pos:column="20">()<pos:position pos:line="160" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="23"/></expr_stmt>
  <return pos:line="161" pos:column="3">return <expr><operator pos:line="161" pos:column="10">(<pos:position pos:line="161" pos:column="11"/></operator><name pos:line="161" pos:column="11">new_count<pos:position pos:line="161" pos:column="20"/></name> <operator pos:line="161" pos:column="21">-<pos:position pos:line="161" pos:column="22"/></operator> <name pos:line="161" pos:column="23">old_count<pos:position pos:line="161" pos:column="32"/></name><operator pos:line="161" pos:column="32">)<pos:position pos:line="161" pos:column="33"/></operator></expr>;<pos:position pos:line="161" pos:column="34"/></return>
}<pos:position pos:line="162" pos:column="2"/></block></function></unit>

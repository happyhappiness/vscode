<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_740_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">smime_gpgme_decrypt_mime<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">FILE<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">fpin<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">FILE<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier><modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">fpout<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">BODY<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">b<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">BODY<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier><modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">cur<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">tempfile<pos:position pos:line="3" pos:column="16"/></name><index pos:line="3" pos:column="16">[<expr><name pos:line="3" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="3" pos:column="32"/></name></expr>]<pos:position pos:line="3" pos:column="33"/></index></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">STATE<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">s<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">tmpfp<pos:position pos:line="5" pos:column="14"/></name><init pos:line="5" pos:column="14">=<expr><name pos:line="5" pos:column="15">NULL<pos:position pos:line="5" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">is_signed<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">LOFF_T<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">saved_b_offset<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">saved_b_length<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">saved_b_type<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">!<pos:position pos:line="11" pos:column="8"/></operator><call><name pos:line="11" pos:column="8">mutt_is_application_smime<pos:position pos:line="11" pos:column="33"/></name> <argument_list pos:line="11" pos:column="34">(<argument><expr><name pos:line="11" pos:column="35">b<pos:position pos:line="11" pos:column="36"/></name></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="38"/></condition><then pos:line="11" pos:column="38">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">-<pos:position pos:line="12" pos:column="13"/></operator><literal type="number" pos:line="12" pos:column="13">1<pos:position pos:line="12" pos:column="14"/></literal></expr>;<pos:position pos:line="12" pos:column="15"/></return></block></then></if>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name><name pos:line="14" pos:column="7">b<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">-&gt;<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="10">parts<pos:position pos:line="14" pos:column="15"/></name></name></expr>)<pos:position pos:line="14" pos:column="16"/></condition><then pos:line="14" pos:column="16">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">-<pos:position pos:line="15" pos:column="13"/></operator><literal type="number" pos:line="15" pos:column="13">1<pos:position pos:line="15" pos:column="14"/></literal></expr>;<pos:position pos:line="15" pos:column="15"/></return></block></then></if>
  
  <comment type="block" pos:line="17" pos:column="3">/* Decode the body - we need to pass binary CMS to the
     backend.  The backend allows for Base64 encoded data but it does
     not allow for QP which I have seen in some messages.  So better
     do it here. */</comment>
  <expr_stmt><expr><name pos:line="21" pos:column="3">saved_b_type<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <name><name pos:line="21" pos:column="18">b<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">-&gt;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="21">type<pos:position pos:line="21" pos:column="25"/></name></name></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name pos:line="22" pos:column="3">saved_b_offset<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <name><name pos:line="22" pos:column="20">b<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">-&gt;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="23">offset<pos:position pos:line="22" pos:column="29"/></name></name></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name pos:line="23" pos:column="3">saved_b_length<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">=<pos:position pos:line="23" pos:column="19"/></operator> <name><name pos:line="23" pos:column="20">b<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">-&gt;<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="23">length<pos:position pos:line="23" pos:column="29"/></name></name></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">memset<pos:position pos:line="24" pos:column="9"/></name> <argument_list pos:line="24" pos:column="10">(<argument><expr><operator pos:line="24" pos:column="11">&amp;<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="12">s<pos:position pos:line="24" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="15">0<pos:position pos:line="24" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="18">sizeof <argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">s<pos:position pos:line="24" pos:column="27"/></name></expr></argument>)<pos:position pos:line="24" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">s<pos:position pos:line="25" pos:column="4"/></name><operator pos:line="25" pos:column="4">.<pos:position pos:line="25" pos:column="5"/></operator><name pos:line="25" pos:column="5">fpin<pos:position pos:line="25" pos:column="9"/></name></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <name pos:line="25" pos:column="12">fpin<pos:position pos:line="25" pos:column="16"/></name></expr>;<pos:position pos:line="25" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">fseeko<pos:position pos:line="26" pos:column="9"/></name> <argument_list pos:line="26" pos:column="10">(<argument><expr><name><name pos:line="26" pos:column="11">s<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">.<pos:position pos:line="26" pos:column="13"/></operator><name pos:line="26" pos:column="13">fpin<pos:position pos:line="26" pos:column="17"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="19">b<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">-&gt;<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="22">offset<pos:position pos:line="26" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="30">0<pos:position pos:line="26" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt> 
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">mutt_mktemp<pos:position pos:line="27" pos:column="14"/></name> <argument_list pos:line="27" pos:column="15">(<argument><expr><name pos:line="27" pos:column="16">tempfile<pos:position pos:line="27" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="26">sizeof <argument_list pos:line="27" pos:column="33">(<argument><expr><name pos:line="27" pos:column="34">tempfile<pos:position pos:line="27" pos:column="42"/></name></expr></argument>)<pos:position pos:line="27" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="45"/></expr_stmt>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><operator pos:line="28" pos:column="7">!<pos:position pos:line="28" pos:column="8"/></operator><operator pos:line="28" pos:column="8">(<pos:position pos:line="28" pos:column="9"/></operator><name pos:line="28" pos:column="9">tmpfp<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <call><name pos:line="28" pos:column="17">safe_fopen<pos:position pos:line="28" pos:column="27"/></name> <argument_list pos:line="28" pos:column="28">(<argument><expr><name pos:line="28" pos:column="29">tempfile<pos:position pos:line="28" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="39">"w+"<pos:position pos:line="28" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call><operator pos:line="28" pos:column="44">)<pos:position pos:line="28" pos:column="45"/></operator></expr>)<pos:position pos:line="28" pos:column="46"/></condition><then pos:line="28" pos:column="46">
    <block pos:line="29" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">mutt_perror<pos:position pos:line="30" pos:column="18"/></name> <argument_list pos:line="30" pos:column="19">(<argument><expr><name pos:line="30" pos:column="20">tempfile<pos:position pos:line="30" pos:column="28"/></name></expr></argument>)<pos:position pos:line="30" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt>
      <return pos:line="31" pos:column="7">return <expr><operator pos:line="31" pos:column="14">-<pos:position pos:line="31" pos:column="15"/></operator><literal type="number" pos:line="31" pos:column="15">1<pos:position pos:line="31" pos:column="16"/></literal></expr>;<pos:position pos:line="31" pos:column="17"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">mutt_unlink<pos:position pos:line="33" pos:column="14"/></name> <argument_list pos:line="33" pos:column="15">(<argument><expr><name pos:line="33" pos:column="16">tempfile<pos:position pos:line="33" pos:column="24"/></name></expr></argument>)<pos:position pos:line="33" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="35" pos:column="3">s<pos:position pos:line="35" pos:column="4"/></name><operator pos:line="35" pos:column="4">.<pos:position pos:line="35" pos:column="5"/></operator><name pos:line="35" pos:column="5">fpout<pos:position pos:line="35" pos:column="10"/></name></name> <operator pos:line="35" pos:column="11">=<pos:position pos:line="35" pos:column="12"/></operator> <name pos:line="35" pos:column="13">tmpfp<pos:position pos:line="35" pos:column="18"/></name></expr>;<pos:position pos:line="35" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">mutt_decode_attachment<pos:position pos:line="36" pos:column="25"/></name> <argument_list pos:line="36" pos:column="26">(<argument><expr><name pos:line="36" pos:column="27">b<pos:position pos:line="36" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="30">&amp;<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="31">s<pos:position pos:line="36" pos:column="32"/></name></expr></argument>)<pos:position pos:line="36" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">fflush<pos:position pos:line="37" pos:column="9"/></name> <argument_list pos:line="37" pos:column="10">(<argument><expr><name pos:line="37" pos:column="11">tmpfp<pos:position pos:line="37" pos:column="16"/></name></expr></argument>)<pos:position pos:line="37" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="38" pos:column="3">b<pos:position pos:line="38" pos:column="4"/></name><operator pos:line="38" pos:column="4">-&gt;<pos:position pos:line="38" pos:column="9"/></operator><name pos:line="38" pos:column="6">length<pos:position pos:line="38" pos:column="12"/></name></name> <operator pos:line="38" pos:column="13">=<pos:position pos:line="38" pos:column="14"/></operator> <call><name pos:line="38" pos:column="15">ftello<pos:position pos:line="38" pos:column="21"/></name> <argument_list pos:line="38" pos:column="22">(<argument><expr><name><name pos:line="38" pos:column="23">s<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">.<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="25">fpout<pos:position pos:line="38" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="39" pos:column="3">b<pos:position pos:line="39" pos:column="4"/></name><operator pos:line="39" pos:column="4">-&gt;<pos:position pos:line="39" pos:column="9"/></operator><name pos:line="39" pos:column="6">offset<pos:position pos:line="39" pos:column="12"/></name></name> <operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator> <literal type="number" pos:line="39" pos:column="15">0<pos:position pos:line="39" pos:column="16"/></literal></expr>;<pos:position pos:line="39" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">rewind<pos:position pos:line="40" pos:column="9"/></name> <argument_list pos:line="40" pos:column="10">(<argument><expr><name pos:line="40" pos:column="11">tmpfp<pos:position pos:line="40" pos:column="16"/></name></expr></argument>)<pos:position pos:line="40" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="18"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="42" pos:column="3">memset<pos:position pos:line="42" pos:column="9"/></name> <argument_list pos:line="42" pos:column="10">(<argument><expr><operator pos:line="42" pos:column="11">&amp;<pos:position pos:line="42" pos:column="16"/></operator><name pos:line="42" pos:column="12">s<pos:position pos:line="42" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="15">0<pos:position pos:line="42" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="18">sizeof <argument_list pos:line="42" pos:column="25">(<argument><expr><name pos:line="42" pos:column="26">s<pos:position pos:line="42" pos:column="27"/></name></expr></argument>)<pos:position pos:line="42" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="43" pos:column="3">s<pos:position pos:line="43" pos:column="4"/></name><operator pos:line="43" pos:column="4">.<pos:position pos:line="43" pos:column="5"/></operator><name pos:line="43" pos:column="5">fpin<pos:position pos:line="43" pos:column="9"/></name></name> <operator pos:line="43" pos:column="10">=<pos:position pos:line="43" pos:column="11"/></operator> <name pos:line="43" pos:column="12">tmpfp<pos:position pos:line="43" pos:column="17"/></name></expr>;<pos:position pos:line="43" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="44" pos:column="3">s<pos:position pos:line="44" pos:column="4"/></name><operator pos:line="44" pos:column="4">.<pos:position pos:line="44" pos:column="5"/></operator><name pos:line="44" pos:column="5">fpout<pos:position pos:line="44" pos:column="10"/></name></name> <operator pos:line="44" pos:column="11">=<pos:position pos:line="44" pos:column="12"/></operator> <literal type="number" pos:line="44" pos:column="13">0<pos:position pos:line="44" pos:column="14"/></literal></expr>;<pos:position pos:line="44" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">mutt_mktemp<pos:position pos:line="45" pos:column="14"/></name> <argument_list pos:line="45" pos:column="15">(<argument><expr><name pos:line="45" pos:column="16">tempfile<pos:position pos:line="45" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="26">sizeof <argument_list pos:line="45" pos:column="33">(<argument><expr><name pos:line="45" pos:column="34">tempfile<pos:position pos:line="45" pos:column="42"/></name></expr></argument>)<pos:position pos:line="45" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="45"/></expr_stmt>
  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><operator pos:line="46" pos:column="7">!<pos:position pos:line="46" pos:column="8"/></operator><operator pos:line="46" pos:column="8">(<pos:position pos:line="46" pos:column="9"/></operator><operator pos:line="46" pos:column="9">*<pos:position pos:line="46" pos:column="10"/></operator><name pos:line="46" pos:column="10">fpout<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">=<pos:position pos:line="46" pos:column="17"/></operator> <call><name pos:line="46" pos:column="18">safe_fopen<pos:position pos:line="46" pos:column="28"/></name> <argument_list pos:line="46" pos:column="29">(<argument><expr><name pos:line="46" pos:column="30">tempfile<pos:position pos:line="46" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="40">"w+"<pos:position pos:line="46" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="45"/></argument_list></call><operator pos:line="46" pos:column="45">)<pos:position pos:line="46" pos:column="46"/></operator></expr>)<pos:position pos:line="46" pos:column="47"/></condition><then pos:line="46" pos:column="47">
    <block pos:line="47" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="48" pos:column="7">mutt_perror<pos:position pos:line="48" pos:column="18"/></name> <argument_list pos:line="48" pos:column="19">(<argument><expr><name pos:line="48" pos:column="20">tempfile<pos:position pos:line="48" pos:column="28"/></name></expr></argument>)<pos:position pos:line="48" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="30"/></expr_stmt>
      <return pos:line="49" pos:column="7">return <expr><operator pos:line="49" pos:column="14">-<pos:position pos:line="49" pos:column="15"/></operator><literal type="number" pos:line="49" pos:column="15">1<pos:position pos:line="49" pos:column="16"/></literal></expr>;<pos:position pos:line="49" pos:column="17"/></return>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">mutt_unlink<pos:position pos:line="51" pos:column="14"/></name> <argument_list pos:line="51" pos:column="15">(<argument><expr><name pos:line="51" pos:column="16">tempfile<pos:position pos:line="51" pos:column="24"/></name></expr></argument>)<pos:position pos:line="51" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="26"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="53" pos:column="3">*<pos:position pos:line="53" pos:column="4"/></operator><name pos:line="53" pos:column="4">cur<pos:position pos:line="53" pos:column="7"/></name> <operator pos:line="53" pos:column="8">=<pos:position pos:line="53" pos:column="9"/></operator> <call><name pos:line="53" pos:column="10">decrypt_part<pos:position pos:line="53" pos:column="22"/></name> <argument_list pos:line="53" pos:column="23">(<argument><expr><name pos:line="53" pos:column="24">b<pos:position pos:line="53" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="27">&amp;<pos:position pos:line="53" pos:column="32"/></operator><name pos:line="53" pos:column="28">s<pos:position pos:line="53" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="31">*<pos:position pos:line="53" pos:column="32"/></operator><name pos:line="53" pos:column="32">fpout<pos:position pos:line="53" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="39">1<pos:position pos:line="53" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="53" pos:column="42">&amp;<pos:position pos:line="53" pos:column="47"/></operator><name pos:line="53" pos:column="43">is_signed<pos:position pos:line="53" pos:column="52"/></name></expr></argument>)<pos:position pos:line="53" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="54"/></expr_stmt>
  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><operator pos:line="54" pos:column="7">*<pos:position pos:line="54" pos:column="8"/></operator><name pos:line="54" pos:column="8">cur<pos:position pos:line="54" pos:column="11"/></name></expr>)<pos:position pos:line="54" pos:column="12"/></condition><then pos:line="54" pos:column="12">
    <block type="pseudo"><expr_stmt><expr><name><operator pos:line="55" pos:column="5">(<pos:position pos:line="55" pos:column="6"/></operator><operator pos:line="55" pos:column="6">*<pos:position pos:line="55" pos:column="7"/></operator><name pos:line="55" pos:column="7">cur<pos:position pos:line="55" pos:column="10"/></name><operator pos:line="55" pos:column="10">)<pos:position pos:line="55" pos:column="11"/></operator><operator pos:line="55" pos:column="11">-&gt;<pos:position pos:line="55" pos:column="16"/></operator><name pos:line="55" pos:column="13">goodsig<pos:position pos:line="55" pos:column="20"/></name></name> <operator pos:line="55" pos:column="21">=<pos:position pos:line="55" pos:column="22"/></operator> <name pos:line="55" pos:column="23">is_signed<pos:position pos:line="55" pos:column="32"/></name> <operator pos:line="55" pos:column="33">&gt;<pos:position pos:line="55" pos:column="37"/></operator> <literal type="number" pos:line="55" pos:column="35">0<pos:position pos:line="55" pos:column="36"/></literal></expr>;<pos:position pos:line="55" pos:column="37"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name><name pos:line="56" pos:column="3">b<pos:position pos:line="56" pos:column="4"/></name><operator pos:line="56" pos:column="4">-&gt;<pos:position pos:line="56" pos:column="9"/></operator><name pos:line="56" pos:column="6">type<pos:position pos:line="56" pos:column="10"/></name></name> <operator pos:line="56" pos:column="11">=<pos:position pos:line="56" pos:column="12"/></operator> <name pos:line="56" pos:column="13">saved_b_type<pos:position pos:line="56" pos:column="25"/></name></expr>;<pos:position pos:line="56" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="57" pos:column="3">b<pos:position pos:line="57" pos:column="4"/></name><operator pos:line="57" pos:column="4">-&gt;<pos:position pos:line="57" pos:column="9"/></operator><name pos:line="57" pos:column="6">length<pos:position pos:line="57" pos:column="12"/></name></name> <operator pos:line="57" pos:column="13">=<pos:position pos:line="57" pos:column="14"/></operator> <name pos:line="57" pos:column="15">saved_b_length<pos:position pos:line="57" pos:column="29"/></name></expr>;<pos:position pos:line="57" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="58" pos:column="3">b<pos:position pos:line="58" pos:column="4"/></name><operator pos:line="58" pos:column="4">-&gt;<pos:position pos:line="58" pos:column="9"/></operator><name pos:line="58" pos:column="6">offset<pos:position pos:line="58" pos:column="12"/></name></name> <operator pos:line="58" pos:column="13">=<pos:position pos:line="58" pos:column="14"/></operator> <name pos:line="58" pos:column="15">saved_b_offset<pos:position pos:line="58" pos:column="29"/></name></expr>;<pos:position pos:line="58" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="59" pos:column="3">safe_fclose<pos:position pos:line="59" pos:column="14"/></name> <argument_list pos:line="59" pos:column="15">(<argument><expr><operator pos:line="59" pos:column="16">&amp;<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="17">tmpfp<pos:position pos:line="59" pos:column="22"/></name></expr></argument>)<pos:position pos:line="59" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="60" pos:column="3">rewind<pos:position pos:line="60" pos:column="9"/></name> <argument_list pos:line="60" pos:column="10">(<argument><expr><operator pos:line="60" pos:column="11">*<pos:position pos:line="60" pos:column="12"/></operator><name pos:line="60" pos:column="12">fpout<pos:position pos:line="60" pos:column="17"/></name></expr></argument>)<pos:position pos:line="60" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="19"/></expr_stmt>
  <if pos:line="61" pos:column="3">if <condition pos:line="61" pos:column="6">(<expr><operator pos:line="61" pos:column="7">*<pos:position pos:line="61" pos:column="8"/></operator><name pos:line="61" pos:column="8">cur<pos:position pos:line="61" pos:column="11"/></name> <operator pos:line="61" pos:column="12">&amp;&amp;<pos:position pos:line="61" pos:column="22"/></operator> <operator pos:line="61" pos:column="15">!<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="16">is_signed<pos:position pos:line="61" pos:column="25"/></name> <operator pos:line="61" pos:column="26">&amp;&amp;<pos:position pos:line="61" pos:column="36"/></operator> <operator pos:line="61" pos:column="29">!<pos:position pos:line="61" pos:column="30"/></operator><name><operator pos:line="61" pos:column="30">(<pos:position pos:line="61" pos:column="31"/></operator><operator pos:line="61" pos:column="31">*<pos:position pos:line="61" pos:column="32"/></operator><name pos:line="61" pos:column="32">cur<pos:position pos:line="61" pos:column="35"/></name><operator pos:line="61" pos:column="35">)<pos:position pos:line="61" pos:column="36"/></operator><operator pos:line="61" pos:column="36">-&gt;<pos:position pos:line="61" pos:column="41"/></operator><name pos:line="61" pos:column="38">parts<pos:position pos:line="61" pos:column="43"/></name></name> <operator pos:line="61" pos:column="44">&amp;&amp;<pos:position pos:line="61" pos:column="54"/></operator> <call><name pos:line="61" pos:column="47">mutt_is_application_smime<pos:position pos:line="61" pos:column="72"/></name> <argument_list pos:line="61" pos:column="73">(<argument><expr><operator pos:line="61" pos:column="74">*<pos:position pos:line="61" pos:column="75"/></operator><name pos:line="61" pos:column="75">cur<pos:position pos:line="61" pos:column="78"/></name></expr></argument>)<pos:position pos:line="61" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="80"/></condition><then pos:line="61" pos:column="80">
    <block pos:line="62" pos:column="5">{
      <comment type="block" pos:line="63" pos:column="7">/* Assume that this is a opaque signed s/mime message.  This is
         an ugly way of doing it but we have anyway a problem with
         arbitrary encoded S/MIME messages: Only the outer part may be
         encrypted.  The entire mime parsing should be revamped,
         probably by keeping the temporary files so that we don't
         need to decrypt them all the time.  Inner parts of an
         encrypted part can then point into this file and there won't
         ever be a need to decrypt again.  This needs a partial
         rewrite of the MIME engine. */</comment>
      <decl_stmt><decl><type><name pos:line="72" pos:column="7">BODY<pos:position pos:line="72" pos:column="11"/></name> <modifier pos:line="72" pos:column="12">*<pos:position pos:line="72" pos:column="13"/></modifier></type><name pos:line="72" pos:column="13">bb<pos:position pos:line="72" pos:column="15"/></name> <init pos:line="72" pos:column="16">= <expr><operator pos:line="72" pos:column="18">*<pos:position pos:line="72" pos:column="19"/></operator><name pos:line="72" pos:column="19">cur<pos:position pos:line="72" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="72" pos:column="23"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="73" pos:column="7">BODY<pos:position pos:line="73" pos:column="11"/></name> <modifier pos:line="73" pos:column="12">*<pos:position pos:line="73" pos:column="13"/></modifier></type><name pos:line="73" pos:column="13">tmp_b<pos:position pos:line="73" pos:column="18"/></name></decl>;<pos:position pos:line="73" pos:column="19"/></decl_stmt>

      <expr_stmt><expr><name pos:line="75" pos:column="7">saved_b_type<pos:position pos:line="75" pos:column="19"/></name> <operator pos:line="75" pos:column="20">=<pos:position pos:line="75" pos:column="21"/></operator> <name><name pos:line="75" pos:column="22">bb<pos:position pos:line="75" pos:column="24"/></name><operator pos:line="75" pos:column="24">-&gt;<pos:position pos:line="75" pos:column="29"/></operator><name pos:line="75" pos:column="26">type<pos:position pos:line="75" pos:column="30"/></name></name></expr>;<pos:position pos:line="75" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name pos:line="76" pos:column="7">saved_b_offset<pos:position pos:line="76" pos:column="21"/></name> <operator pos:line="76" pos:column="22">=<pos:position pos:line="76" pos:column="23"/></operator> <name><name pos:line="76" pos:column="24">bb<pos:position pos:line="76" pos:column="26"/></name><operator pos:line="76" pos:column="26">-&gt;<pos:position pos:line="76" pos:column="31"/></operator><name pos:line="76" pos:column="28">offset<pos:position pos:line="76" pos:column="34"/></name></name></expr>;<pos:position pos:line="76" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name pos:line="77" pos:column="7">saved_b_length<pos:position pos:line="77" pos:column="21"/></name> <operator pos:line="77" pos:column="22">=<pos:position pos:line="77" pos:column="23"/></operator> <name><name pos:line="77" pos:column="24">bb<pos:position pos:line="77" pos:column="26"/></name><operator pos:line="77" pos:column="26">-&gt;<pos:position pos:line="77" pos:column="31"/></operator><name pos:line="77" pos:column="28">length<pos:position pos:line="77" pos:column="34"/></name></name></expr>;<pos:position pos:line="77" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="78" pos:column="7">memset<pos:position pos:line="78" pos:column="13"/></name> <argument_list pos:line="78" pos:column="14">(<argument><expr><operator pos:line="78" pos:column="15">&amp;<pos:position pos:line="78" pos:column="20"/></operator><name pos:line="78" pos:column="16">s<pos:position pos:line="78" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="19">0<pos:position pos:line="78" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="78" pos:column="22">sizeof <argument_list pos:line="78" pos:column="29">(<argument><expr><name pos:line="78" pos:column="30">s<pos:position pos:line="78" pos:column="31"/></name></expr></argument>)<pos:position pos:line="78" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="78" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="79" pos:column="7">s<pos:position pos:line="79" pos:column="8"/></name><operator pos:line="79" pos:column="8">.<pos:position pos:line="79" pos:column="9"/></operator><name pos:line="79" pos:column="9">fpin<pos:position pos:line="79" pos:column="13"/></name></name> <operator pos:line="79" pos:column="14">=<pos:position pos:line="79" pos:column="15"/></operator> <operator pos:line="79" pos:column="16">*<pos:position pos:line="79" pos:column="17"/></operator><name pos:line="79" pos:column="17">fpout<pos:position pos:line="79" pos:column="22"/></name></expr>;<pos:position pos:line="79" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="80" pos:column="7">fseeko<pos:position pos:line="80" pos:column="13"/></name> <argument_list pos:line="80" pos:column="14">(<argument><expr><name><name pos:line="80" pos:column="15">s<pos:position pos:line="80" pos:column="16"/></name><operator pos:line="80" pos:column="16">.<pos:position pos:line="80" pos:column="17"/></operator><name pos:line="80" pos:column="17">fpin<pos:position pos:line="80" pos:column="21"/></name></name></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="23">bb<pos:position pos:line="80" pos:column="25"/></name><operator pos:line="80" pos:column="25">-&gt;<pos:position pos:line="80" pos:column="30"/></operator><name pos:line="80" pos:column="27">offset<pos:position pos:line="80" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="35">0<pos:position pos:line="80" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="38"/></expr_stmt> 
      <expr_stmt><expr><call><name pos:line="81" pos:column="7">mutt_mktemp<pos:position pos:line="81" pos:column="18"/></name> <argument_list pos:line="81" pos:column="19">(<argument><expr><name pos:line="81" pos:column="20">tempfile<pos:position pos:line="81" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="81" pos:column="30">sizeof <argument_list pos:line="81" pos:column="37">(<argument><expr><name pos:line="81" pos:column="38">tempfile<pos:position pos:line="81" pos:column="46"/></name></expr></argument>)<pos:position pos:line="81" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="81" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="49"/></expr_stmt>
      <if pos:line="82" pos:column="7">if <condition pos:line="82" pos:column="10">(<expr><operator pos:line="82" pos:column="11">!<pos:position pos:line="82" pos:column="12"/></operator><operator pos:line="82" pos:column="12">(<pos:position pos:line="82" pos:column="13"/></operator><name pos:line="82" pos:column="13">tmpfp<pos:position pos:line="82" pos:column="18"/></name> <operator pos:line="82" pos:column="19">=<pos:position pos:line="82" pos:column="20"/></operator> <call><name pos:line="82" pos:column="21">safe_fopen<pos:position pos:line="82" pos:column="31"/></name> <argument_list pos:line="82" pos:column="32">(<argument><expr><name pos:line="82" pos:column="33">tempfile<pos:position pos:line="82" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="43">"w+"<pos:position pos:line="82" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="48"/></argument_list></call><operator pos:line="82" pos:column="48">)<pos:position pos:line="82" pos:column="49"/></operator></expr>)<pos:position pos:line="82" pos:column="50"/></condition><then pos:line="82" pos:column="50">
        <block pos:line="83" pos:column="9">{
          <expr_stmt><expr><call><name pos:line="84" pos:column="11">mutt_perror<pos:position pos:line="84" pos:column="22"/></name> <argument_list pos:line="84" pos:column="23">(<argument><expr><name pos:line="84" pos:column="24">tempfile<pos:position pos:line="84" pos:column="32"/></name></expr></argument>)<pos:position pos:line="84" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="34"/></expr_stmt>
          <return pos:line="85" pos:column="11">return <expr><operator pos:line="85" pos:column="18">-<pos:position pos:line="85" pos:column="19"/></operator><literal type="number" pos:line="85" pos:column="19">1<pos:position pos:line="85" pos:column="20"/></literal></expr>;<pos:position pos:line="85" pos:column="21"/></return>
        }<pos:position pos:line="86" pos:column="10"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="87" pos:column="7">mutt_unlink<pos:position pos:line="87" pos:column="18"/></name> <argument_list pos:line="87" pos:column="19">(<argument><expr><name pos:line="87" pos:column="20">tempfile<pos:position pos:line="87" pos:column="28"/></name></expr></argument>)<pos:position pos:line="87" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="30"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="89" pos:column="7">s<pos:position pos:line="89" pos:column="8"/></name><operator pos:line="89" pos:column="8">.<pos:position pos:line="89" pos:column="9"/></operator><name pos:line="89" pos:column="9">fpout<pos:position pos:line="89" pos:column="14"/></name></name> <operator pos:line="89" pos:column="15">=<pos:position pos:line="89" pos:column="16"/></operator> <name pos:line="89" pos:column="17">tmpfp<pos:position pos:line="89" pos:column="22"/></name></expr>;<pos:position pos:line="89" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="90" pos:column="7">mutt_decode_attachment<pos:position pos:line="90" pos:column="29"/></name> <argument_list pos:line="90" pos:column="30">(<argument><expr><name pos:line="90" pos:column="31">bb<pos:position pos:line="90" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="35">&amp;<pos:position pos:line="90" pos:column="40"/></operator><name pos:line="90" pos:column="36">s<pos:position pos:line="90" pos:column="37"/></name></expr></argument>)<pos:position pos:line="90" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="91" pos:column="7">fflush<pos:position pos:line="91" pos:column="13"/></name> <argument_list pos:line="91" pos:column="14">(<argument><expr><name pos:line="91" pos:column="15">tmpfp<pos:position pos:line="91" pos:column="20"/></name></expr></argument>)<pos:position pos:line="91" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="92" pos:column="7">bb<pos:position pos:line="92" pos:column="9"/></name><operator pos:line="92" pos:column="9">-&gt;<pos:position pos:line="92" pos:column="14"/></operator><name pos:line="92" pos:column="11">length<pos:position pos:line="92" pos:column="17"/></name></name> <operator pos:line="92" pos:column="18">=<pos:position pos:line="92" pos:column="19"/></operator> <call><name pos:line="92" pos:column="20">ftello<pos:position pos:line="92" pos:column="26"/></name> <argument_list pos:line="92" pos:column="27">(<argument><expr><name><name pos:line="92" pos:column="28">s<pos:position pos:line="92" pos:column="29"/></name><operator pos:line="92" pos:column="29">.<pos:position pos:line="92" pos:column="30"/></operator><name pos:line="92" pos:column="30">fpout<pos:position pos:line="92" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="93" pos:column="7">bb<pos:position pos:line="93" pos:column="9"/></name><operator pos:line="93" pos:column="9">-&gt;<pos:position pos:line="93" pos:column="14"/></operator><name pos:line="93" pos:column="11">offset<pos:position pos:line="93" pos:column="17"/></name></name> <operator pos:line="93" pos:column="18">=<pos:position pos:line="93" pos:column="19"/></operator> <literal type="number" pos:line="93" pos:column="20">0<pos:position pos:line="93" pos:column="21"/></literal></expr>;<pos:position pos:line="93" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="94" pos:column="7">rewind<pos:position pos:line="94" pos:column="13"/></name> <argument_list pos:line="94" pos:column="14">(<argument><expr><name pos:line="94" pos:column="15">tmpfp<pos:position pos:line="94" pos:column="20"/></name></expr></argument>)<pos:position pos:line="94" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="95" pos:column="7">safe_fclose<pos:position pos:line="95" pos:column="18"/></name> <argument_list pos:line="95" pos:column="19">(<argument><expr><name pos:line="95" pos:column="20">fpout<pos:position pos:line="95" pos:column="25"/></name></expr></argument>)<pos:position pos:line="95" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="27"/></expr_stmt> 

      <expr_stmt><expr><call><name pos:line="97" pos:column="7">memset<pos:position pos:line="97" pos:column="13"/></name> <argument_list pos:line="97" pos:column="14">(<argument><expr><operator pos:line="97" pos:column="15">&amp;<pos:position pos:line="97" pos:column="20"/></operator><name pos:line="97" pos:column="16">s<pos:position pos:line="97" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="97" pos:column="19">0<pos:position pos:line="97" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="97" pos:column="22">sizeof <argument_list pos:line="97" pos:column="29">(<argument><expr><name pos:line="97" pos:column="30">s<pos:position pos:line="97" pos:column="31"/></name></expr></argument>)<pos:position pos:line="97" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="97" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="98" pos:column="7">s<pos:position pos:line="98" pos:column="8"/></name><operator pos:line="98" pos:column="8">.<pos:position pos:line="98" pos:column="9"/></operator><name pos:line="98" pos:column="9">fpin<pos:position pos:line="98" pos:column="13"/></name></name> <operator pos:line="98" pos:column="14">=<pos:position pos:line="98" pos:column="15"/></operator> <name pos:line="98" pos:column="16">tmpfp<pos:position pos:line="98" pos:column="21"/></name></expr>;<pos:position pos:line="98" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="99" pos:column="7">s<pos:position pos:line="99" pos:column="8"/></name><operator pos:line="99" pos:column="8">.<pos:position pos:line="99" pos:column="9"/></operator><name pos:line="99" pos:column="9">fpout<pos:position pos:line="99" pos:column="14"/></name></name> <operator pos:line="99" pos:column="15">=<pos:position pos:line="99" pos:column="16"/></operator> <literal type="number" pos:line="99" pos:column="17">0<pos:position pos:line="99" pos:column="18"/></literal></expr>;<pos:position pos:line="99" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="100" pos:column="7">mutt_mktemp<pos:position pos:line="100" pos:column="18"/></name> <argument_list pos:line="100" pos:column="19">(<argument><expr><name pos:line="100" pos:column="20">tempfile<pos:position pos:line="100" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="100" pos:column="30">sizeof <argument_list pos:line="100" pos:column="37">(<argument><expr><name pos:line="100" pos:column="38">tempfile<pos:position pos:line="100" pos:column="46"/></name></expr></argument>)<pos:position pos:line="100" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="100" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="49"/></expr_stmt>
      <if pos:line="101" pos:column="7">if <condition pos:line="101" pos:column="10">(<expr><operator pos:line="101" pos:column="11">!<pos:position pos:line="101" pos:column="12"/></operator><operator pos:line="101" pos:column="12">(<pos:position pos:line="101" pos:column="13"/></operator><operator pos:line="101" pos:column="13">*<pos:position pos:line="101" pos:column="14"/></operator><name pos:line="101" pos:column="14">fpout<pos:position pos:line="101" pos:column="19"/></name> <operator pos:line="101" pos:column="20">=<pos:position pos:line="101" pos:column="21"/></operator> <call><name pos:line="101" pos:column="22">safe_fopen<pos:position pos:line="101" pos:column="32"/></name> <argument_list pos:line="101" pos:column="33">(<argument><expr><name pos:line="101" pos:column="34">tempfile<pos:position pos:line="101" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="44">"w+"<pos:position pos:line="101" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="49"/></argument_list></call><operator pos:line="101" pos:column="49">)<pos:position pos:line="101" pos:column="50"/></operator></expr>)<pos:position pos:line="101" pos:column="51"/></condition><then pos:line="101" pos:column="51">
        <block pos:line="102" pos:column="9">{
          <expr_stmt><expr><call><name pos:line="103" pos:column="11">mutt_perror<pos:position pos:line="103" pos:column="22"/></name> <argument_list pos:line="103" pos:column="23">(<argument><expr><name pos:line="103" pos:column="24">tempfile<pos:position pos:line="103" pos:column="32"/></name></expr></argument>)<pos:position pos:line="103" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="34"/></expr_stmt>
          <return pos:line="104" pos:column="11">return <expr><operator pos:line="104" pos:column="18">-<pos:position pos:line="104" pos:column="19"/></operator><literal type="number" pos:line="104" pos:column="19">1<pos:position pos:line="104" pos:column="20"/></literal></expr>;<pos:position pos:line="104" pos:column="21"/></return>
        }<pos:position pos:line="105" pos:column="10"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="106" pos:column="7">mutt_unlink<pos:position pos:line="106" pos:column="18"/></name> <argument_list pos:line="106" pos:column="19">(<argument><expr><name pos:line="106" pos:column="20">tempfile<pos:position pos:line="106" pos:column="28"/></name></expr></argument>)<pos:position pos:line="106" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="30"/></expr_stmt>

      <expr_stmt><expr><name pos:line="108" pos:column="7">tmp_b<pos:position pos:line="108" pos:column="12"/></name> <operator pos:line="108" pos:column="13">=<pos:position pos:line="108" pos:column="14"/></operator> <call><name pos:line="108" pos:column="15">decrypt_part<pos:position pos:line="108" pos:column="27"/></name> <argument_list pos:line="108" pos:column="28">(<argument><expr><name pos:line="108" pos:column="29">bb<pos:position pos:line="108" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="108" pos:column="33">&amp;<pos:position pos:line="108" pos:column="38"/></operator><name pos:line="108" pos:column="34">s<pos:position pos:line="108" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="108" pos:column="37">*<pos:position pos:line="108" pos:column="38"/></operator><name pos:line="108" pos:column="38">fpout<pos:position pos:line="108" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="108" pos:column="45">1<pos:position pos:line="108" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="108" pos:column="48">&amp;<pos:position pos:line="108" pos:column="53"/></operator><name pos:line="108" pos:column="49">is_signed<pos:position pos:line="108" pos:column="58"/></name></expr></argument>)<pos:position pos:line="108" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="60"/></expr_stmt>
      <if pos:line="109" pos:column="7">if <condition pos:line="109" pos:column="10">(<expr><name pos:line="109" pos:column="11">tmp_b<pos:position pos:line="109" pos:column="16"/></name></expr>)<pos:position pos:line="109" pos:column="17"/></condition><then pos:line="109" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="110" pos:column="9">tmp_b<pos:position pos:line="110" pos:column="14"/></name><operator pos:line="110" pos:column="14">-&gt;<pos:position pos:line="110" pos:column="19"/></operator><name pos:line="110" pos:column="16">goodsig<pos:position pos:line="110" pos:column="23"/></name></name> <operator pos:line="110" pos:column="24">=<pos:position pos:line="110" pos:column="25"/></operator> <name pos:line="110" pos:column="26">is_signed<pos:position pos:line="110" pos:column="35"/></name> <operator pos:line="110" pos:column="36">&gt;<pos:position pos:line="110" pos:column="40"/></operator> <literal type="number" pos:line="110" pos:column="38">0<pos:position pos:line="110" pos:column="39"/></literal></expr>;<pos:position pos:line="110" pos:column="40"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name><name pos:line="111" pos:column="7">bb<pos:position pos:line="111" pos:column="9"/></name><operator pos:line="111" pos:column="9">-&gt;<pos:position pos:line="111" pos:column="14"/></operator><name pos:line="111" pos:column="11">type<pos:position pos:line="111" pos:column="15"/></name></name> <operator pos:line="111" pos:column="16">=<pos:position pos:line="111" pos:column="17"/></operator> <name pos:line="111" pos:column="18">saved_b_type<pos:position pos:line="111" pos:column="30"/></name></expr>;<pos:position pos:line="111" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="112" pos:column="7">bb<pos:position pos:line="112" pos:column="9"/></name><operator pos:line="112" pos:column="9">-&gt;<pos:position pos:line="112" pos:column="14"/></operator><name pos:line="112" pos:column="11">length<pos:position pos:line="112" pos:column="17"/></name></name> <operator pos:line="112" pos:column="18">=<pos:position pos:line="112" pos:column="19"/></operator> <name pos:line="112" pos:column="20">saved_b_length<pos:position pos:line="112" pos:column="34"/></name></expr>;<pos:position pos:line="112" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="113" pos:column="7">bb<pos:position pos:line="113" pos:column="9"/></name><operator pos:line="113" pos:column="9">-&gt;<pos:position pos:line="113" pos:column="14"/></operator><name pos:line="113" pos:column="11">offset<pos:position pos:line="113" pos:column="17"/></name></name> <operator pos:line="113" pos:column="18">=<pos:position pos:line="113" pos:column="19"/></operator> <name pos:line="113" pos:column="20">saved_b_offset<pos:position pos:line="113" pos:column="34"/></name></expr>;<pos:position pos:line="113" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="114" pos:column="7">safe_fclose<pos:position pos:line="114" pos:column="18"/></name> <argument_list pos:line="114" pos:column="19">(<argument><expr><operator pos:line="114" pos:column="20">&amp;<pos:position pos:line="114" pos:column="25"/></operator><name pos:line="114" pos:column="21">tmpfp<pos:position pos:line="114" pos:column="26"/></name></expr></argument>)<pos:position pos:line="114" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="115" pos:column="7">rewind<pos:position pos:line="115" pos:column="13"/></name> <argument_list pos:line="115" pos:column="14">(<argument><expr><operator pos:line="115" pos:column="15">*<pos:position pos:line="115" pos:column="16"/></operator><name pos:line="115" pos:column="16">fpout<pos:position pos:line="115" pos:column="21"/></name></expr></argument>)<pos:position pos:line="115" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="116" pos:column="7">mutt_free_body<pos:position pos:line="116" pos:column="21"/></name> <argument_list pos:line="116" pos:column="22">(<argument><expr><name pos:line="116" pos:column="23">cur<pos:position pos:line="116" pos:column="26"/></name></expr></argument>)<pos:position pos:line="116" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="117" pos:column="7">*<pos:position pos:line="117" pos:column="8"/></operator><name pos:line="117" pos:column="8">cur<pos:position pos:line="117" pos:column="11"/></name> <operator pos:line="117" pos:column="12">=<pos:position pos:line="117" pos:column="13"/></operator> <name pos:line="117" pos:column="14">tmp_b<pos:position pos:line="117" pos:column="19"/></name></expr>;<pos:position pos:line="117" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="118" pos:column="6"/></block></then></if>
  <return pos:line="119" pos:column="3">return <expr><ternary><condition><expr><operator pos:line="119" pos:column="10">*<pos:position pos:line="119" pos:column="11"/></operator><name pos:line="119" pos:column="11">cur<pos:position pos:line="119" pos:column="14"/></name></expr>?<pos:position pos:line="119" pos:column="15"/></condition><then pos:line="119" pos:column="15"> <expr><literal type="number" pos:line="119" pos:column="16">0<pos:position pos:line="119" pos:column="17"/></literal></expr></then><else pos:line="119" pos:column="17">:<expr><operator pos:line="119" pos:column="18">-<pos:position pos:line="119" pos:column="19"/></operator><literal type="number" pos:line="119" pos:column="19">1<pos:position pos:line="119" pos:column="20"/></literal></expr></else></ternary></expr>;<pos:position pos:line="119" pos:column="21"/></return>
}<pos:position pos:line="120" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_74_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">process_user_recips<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">ENVELOPE<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">env<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">LIST<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">uh<pos:position pos:line="3" pos:column="11"/></name> <init pos:line="3" pos:column="12">= <expr><name pos:line="3" pos:column="14">UserHeader<pos:position pos:line="3" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>

  <for pos:line="5" pos:column="3">for <control pos:line="5" pos:column="7">(<init pos:line="5" pos:column="8">;<pos:position pos:line="5" pos:column="9"/></init> <condition><expr><name pos:line="5" pos:column="10">uh<pos:position pos:line="5" pos:column="12"/></name></expr>;<pos:position pos:line="5" pos:column="13"/></condition> <incr><expr><name pos:line="5" pos:column="14">uh<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">=<pos:position pos:line="5" pos:column="18"/></operator> <name><name pos:line="5" pos:column="19">uh<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">-&gt;<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="23">next<pos:position pos:line="5" pos:column="27"/></name></name></expr></incr>)<pos:position pos:line="5" pos:column="28"/></control>
  <block pos:line="6" pos:column="3">{
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">ascii_strncasecmp<pos:position pos:line="7" pos:column="26"/></name> <argument_list pos:line="7" pos:column="27">(<argument><expr><literal type="string" pos:line="7" pos:column="28">"to:"<pos:position pos:line="7" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="35">uh<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">-&gt;<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="39">data<pos:position pos:line="7" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="45">3<pos:position pos:line="7" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="47"/></argument_list></call> <operator pos:line="7" pos:column="48">==<pos:position pos:line="7" pos:column="50"/></operator> <literal type="number" pos:line="7" pos:column="51">0<pos:position pos:line="7" pos:column="52"/></literal></expr>)<pos:position pos:line="7" pos:column="53"/></condition><then pos:line="7" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="8" pos:column="7">env<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">to<pos:position pos:line="8" pos:column="14"/></name></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <call><name pos:line="8" pos:column="17">rfc822_parse_adrlist<pos:position pos:line="8" pos:column="37"/></name> <argument_list pos:line="8" pos:column="38">(<argument><expr><name><name pos:line="8" pos:column="39">env<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">-&gt;<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="44">to<pos:position pos:line="8" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="48">uh<pos:position pos:line="8" pos:column="50"/></name><operator pos:line="8" pos:column="50">-&gt;<pos:position pos:line="8" pos:column="55"/></operator><name pos:line="8" pos:column="52">data<pos:position pos:line="8" pos:column="56"/></name></name> <operator pos:line="8" pos:column="57">+<pos:position pos:line="8" pos:column="58"/></operator> <literal type="number" pos:line="8" pos:column="59">3<pos:position pos:line="8" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="62"/></expr_stmt></block></then>
    <elseif pos:line="9" pos:column="5">else <if pos:line="9" pos:column="10">if <condition pos:line="9" pos:column="13">(<expr><call><name pos:line="9" pos:column="14">ascii_strncasecmp<pos:position pos:line="9" pos:column="31"/></name> <argument_list pos:line="9" pos:column="32">(<argument><expr><literal type="string" pos:line="9" pos:column="33">"cc:"<pos:position pos:line="9" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="40">uh<pos:position pos:line="9" pos:column="42"/></name><operator pos:line="9" pos:column="42">-&gt;<pos:position pos:line="9" pos:column="47"/></operator><name pos:line="9" pos:column="44">data<pos:position pos:line="9" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="50">3<pos:position pos:line="9" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call> <operator pos:line="9" pos:column="53">==<pos:position pos:line="9" pos:column="55"/></operator> <literal type="number" pos:line="9" pos:column="56">0<pos:position pos:line="9" pos:column="57"/></literal></expr>)<pos:position pos:line="9" pos:column="58"/></condition><then pos:line="9" pos:column="58">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="10" pos:column="7">env<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">cc<pos:position pos:line="10" pos:column="14"/></name></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <call><name pos:line="10" pos:column="17">rfc822_parse_adrlist<pos:position pos:line="10" pos:column="37"/></name> <argument_list pos:line="10" pos:column="38">(<argument><expr><name><name pos:line="10" pos:column="39">env<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">-&gt;<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="44">cc<pos:position pos:line="10" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="48">uh<pos:position pos:line="10" pos:column="50"/></name><operator pos:line="10" pos:column="50">-&gt;<pos:position pos:line="10" pos:column="55"/></operator><name pos:line="10" pos:column="52">data<pos:position pos:line="10" pos:column="56"/></name></name> <operator pos:line="10" pos:column="57">+<pos:position pos:line="10" pos:column="58"/></operator> <literal type="number" pos:line="10" pos:column="59">3<pos:position pos:line="10" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="62"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="11" pos:column="5">else <if pos:line="11" pos:column="10">if <condition pos:line="11" pos:column="13">(<expr><call><name pos:line="11" pos:column="14">ascii_strncasecmp<pos:position pos:line="11" pos:column="31"/></name> <argument_list pos:line="11" pos:column="32">(<argument><expr><literal type="string" pos:line="11" pos:column="33">"bcc:"<pos:position pos:line="11" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="41">uh<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">-&gt;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="45">data<pos:position pos:line="11" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="51">4<pos:position pos:line="11" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call> <operator pos:line="11" pos:column="54">==<pos:position pos:line="11" pos:column="56"/></operator> <literal type="number" pos:line="11" pos:column="57">0<pos:position pos:line="11" pos:column="58"/></literal></expr>)<pos:position pos:line="11" pos:column="59"/></condition><then pos:line="11" pos:column="59">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="12" pos:column="7">env<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">bcc<pos:position pos:line="12" pos:column="15"/></name></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <call><name pos:line="12" pos:column="18">rfc822_parse_adrlist<pos:position pos:line="12" pos:column="38"/></name> <argument_list pos:line="12" pos:column="39">(<argument><expr><name><name pos:line="12" pos:column="40">env<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">-&gt;<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="45">bcc<pos:position pos:line="12" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="50">uh<pos:position pos:line="12" pos:column="52"/></name><operator pos:line="12" pos:column="52">-&gt;<pos:position pos:line="12" pos:column="57"/></operator><name pos:line="12" pos:column="54">data<pos:position pos:line="12" pos:column="58"/></name></name> <operator pos:line="12" pos:column="59">+<pos:position pos:line="12" pos:column="60"/></operator> <literal type="number" pos:line="12" pos:column="61">4<pos:position pos:line="12" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="64"/></expr_stmt></block></then></if></elseif></if>
  }<pos:position pos:line="13" pos:column="4"/></block></for>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

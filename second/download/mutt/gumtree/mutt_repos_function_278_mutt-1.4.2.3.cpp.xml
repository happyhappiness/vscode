<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_278_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_buffy_check<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">int<pos:position pos:line="1" pos:column="26"/></name></type> <name pos:line="1" pos:column="27">force<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">BUFFY<pos:position pos:line="3" pos:column="8"/></name> <modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">tmp<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">stat<pos:position pos:line="4" pos:column="14"/></name></name></type> <name pos:line="4" pos:column="15">sb<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">dirent<pos:position pos:line="5" pos:column="16"/></name></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">de<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">DIR<pos:position pos:line="6" pos:column="6"/></name> <modifier pos:line="6" pos:column="7">*<pos:position pos:line="6" pos:column="8"/></modifier></type><name pos:line="6" pos:column="8">dirp<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">path<pos:position pos:line="7" pos:column="12"/></name><index pos:line="7" pos:column="12">[<expr><name pos:line="7" pos:column="13">_POSIX_PATH_MAX<pos:position pos:line="7" pos:column="28"/></name></expr>]<pos:position pos:line="7" pos:column="29"/></index></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">stat<pos:position pos:line="8" pos:column="14"/></name></name></type> <name pos:line="8" pos:column="15">contex_sb<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">time_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">t<pos:position pos:line="9" pos:column="11"/></name></decl>;<pos:position pos:line="9" pos:column="12"/></decl_stmt>

<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef<pos:position pos:line="11" pos:column="7"/></cpp:directive> <name pos:line="11" pos:column="8">USE_IMAP<pos:position pos:line="11" pos:column="16"/></name></cpp:ifdef>
  <comment type="block" pos:line="12" pos:column="3">/* update postponed count as well, on force */</comment>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">force<pos:position pos:line="13" pos:column="12"/></name></expr>)<pos:position pos:line="13" pos:column="13"/></condition><then pos:line="13" pos:column="13">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="5">mutt_update_num_postponed<pos:position pos:line="14" pos:column="30"/></name> <argument_list pos:line="14" pos:column="31">()<pos:position pos:line="14" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt></block></then></if>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="17" pos:column="3">/* fastest return if there are no mailboxes */</comment>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">!<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">Incoming<pos:position pos:line="18" pos:column="16"/></name></expr>)<pos:position pos:line="18" pos:column="17"/></condition><then pos:line="18" pos:column="17">
    <block type="pseudo"><return pos:line="19" pos:column="5">return <expr><literal type="number" pos:line="19" pos:column="12">0<pos:position pos:line="19" pos:column="13"/></literal></expr>;<pos:position pos:line="19" pos:column="14"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="20" pos:column="3">t<pos:position pos:line="20" pos:column="4"/></name> <operator pos:line="20" pos:column="5">=<pos:position pos:line="20" pos:column="6"/></operator> <call><name pos:line="20" pos:column="7">time<pos:position pos:line="20" pos:column="11"/></name> <argument_list pos:line="20" pos:column="12">(<argument><expr><name pos:line="20" pos:column="13">NULL<pos:position pos:line="20" pos:column="17"/></name></expr></argument>)<pos:position pos:line="20" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><operator pos:line="21" pos:column="7">!<pos:position pos:line="21" pos:column="8"/></operator><name pos:line="21" pos:column="8">force<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">&amp;&amp;<pos:position pos:line="21" pos:column="24"/></operator> <operator pos:line="21" pos:column="17">(<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">t<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">-<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="22">BuffyTime<pos:position pos:line="21" pos:column="31"/></name> <operator pos:line="21" pos:column="32">&lt;<pos:position pos:line="21" pos:column="36"/></operator> <name pos:line="21" pos:column="34">BuffyTimeout<pos:position pos:line="21" pos:column="46"/></name><operator pos:line="21" pos:column="46">)<pos:position pos:line="21" pos:column="47"/></operator></expr>)<pos:position pos:line="21" pos:column="48"/></condition><then pos:line="21" pos:column="48">
    <block type="pseudo"><return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">BuffyCount<pos:position pos:line="22" pos:column="22"/></name></expr>;<pos:position pos:line="22" pos:column="23"/></return></block></then></if>
 
  <expr_stmt><expr><name pos:line="24" pos:column="3">BuffyTime<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <name pos:line="24" pos:column="15">t<pos:position pos:line="24" pos:column="16"/></name></expr>;<pos:position pos:line="24" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name pos:line="25" pos:column="3">BuffyCount<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <literal type="number" pos:line="25" pos:column="16">0<pos:position pos:line="25" pos:column="17"/></literal></expr>;<pos:position pos:line="25" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name pos:line="26" pos:column="3">BuffyNotify<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <literal type="number" pos:line="26" pos:column="17">0<pos:position pos:line="26" pos:column="18"/></literal></expr>;<pos:position pos:line="26" pos:column="19"/></expr_stmt>

<cpp:ifdef pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">ifdef<pos:position pos:line="28" pos:column="7"/></cpp:directive> <name pos:line="28" pos:column="8">USE_IMAP<pos:position pos:line="28" pos:column="16"/></name></cpp:ifdef>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><operator pos:line="29" pos:column="7">!<pos:position pos:line="29" pos:column="8"/></operator><name pos:line="29" pos:column="8">Context<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">||<pos:position pos:line="29" pos:column="18"/></operator> <name><name pos:line="29" pos:column="19">Context<pos:position pos:line="29" pos:column="26"/></name><operator pos:line="29" pos:column="26">-&gt;<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="28">magic<pos:position pos:line="29" pos:column="33"/></name></name> <operator pos:line="29" pos:column="34">!=<pos:position pos:line="29" pos:column="36"/></operator> <name pos:line="29" pos:column="37">M_IMAP<pos:position pos:line="29" pos:column="43"/></name></expr>)<pos:position pos:line="29" pos:column="44"/></condition><then pos:line="29" pos:column="44">
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">ifdef<pos:position pos:line="31" pos:column="7"/></cpp:directive> <name pos:line="31" pos:column="8">USE_POP<pos:position pos:line="31" pos:column="15"/></name></cpp:ifdef>
  <block type="pseudo"><if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><operator pos:line="32" pos:column="7">!<pos:position pos:line="32" pos:column="8"/></operator><name pos:line="32" pos:column="8">Context<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">||<pos:position pos:line="32" pos:column="18"/></operator> <name><name pos:line="32" pos:column="19">Context<pos:position pos:line="32" pos:column="26"/></name><operator pos:line="32" pos:column="26">-&gt;<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="28">magic<pos:position pos:line="32" pos:column="33"/></name></name> <operator pos:line="32" pos:column="34">!=<pos:position pos:line="32" pos:column="36"/></operator> <name pos:line="32" pos:column="37">M_POP<pos:position pos:line="32" pos:column="42"/></name></expr>)<pos:position pos:line="32" pos:column="43"/></condition><then pos:line="32" pos:column="43">
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif>
  <comment type="block" pos:line="34" pos:column="3">/* check device ID and serial number instead of comparing paths */</comment>
  <block type="pseudo"><if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><operator pos:line="35" pos:column="7">!<pos:position pos:line="35" pos:column="8"/></operator><name pos:line="35" pos:column="8">Context<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">||<pos:position pos:line="35" pos:column="18"/></operator> <operator pos:line="35" pos:column="19">!<pos:position pos:line="35" pos:column="20"/></operator><name><name pos:line="35" pos:column="20">Context<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">-&gt;<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="29">path<pos:position pos:line="35" pos:column="33"/></name></name> <operator pos:line="35" pos:column="34">||<pos:position pos:line="35" pos:column="36"/></operator> <call><name pos:line="35" pos:column="37">stat<pos:position pos:line="35" pos:column="41"/></name> <argument_list pos:line="35" pos:column="42">(<argument><expr><name><name pos:line="35" pos:column="43">Context<pos:position pos:line="35" pos:column="50"/></name><operator pos:line="35" pos:column="50">-&gt;<pos:position pos:line="35" pos:column="55"/></operator><name pos:line="35" pos:column="52">path<pos:position pos:line="35" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="58">&amp;<pos:position pos:line="35" pos:column="63"/></operator><name pos:line="35" pos:column="59">contex_sb<pos:position pos:line="35" pos:column="68"/></name></expr></argument>)<pos:position pos:line="35" pos:column="69"/></argument_list></call> <operator pos:line="35" pos:column="70">!=<pos:position pos:line="35" pos:column="72"/></operator> <literal type="number" pos:line="35" pos:column="73">0<pos:position pos:line="35" pos:column="74"/></literal></expr>)<pos:position pos:line="35" pos:column="75"/></condition><then pos:line="35" pos:column="75">
  <block pos:line="36" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">contex_sb<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">.<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="15">st_dev<pos:position pos:line="37" pos:column="21"/></name></name><operator pos:line="37" pos:column="21">=<pos:position pos:line="37" pos:column="22"/></operator><literal type="number" pos:line="37" pos:column="22">0<pos:position pos:line="37" pos:column="23"/></literal></expr>;<pos:position pos:line="37" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">contex_sb<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">.<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="15">st_ino<pos:position pos:line="38" pos:column="21"/></name></name><operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator><literal type="number" pos:line="38" pos:column="22">0<pos:position pos:line="38" pos:column="23"/></literal></expr>;<pos:position pos:line="38" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if></block></then></if></block></then></if>
  
  <for pos:line="41" pos:column="3">for <control pos:line="41" pos:column="7">(<init><expr><name pos:line="41" pos:column="8">tmp<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">=<pos:position pos:line="41" pos:column="13"/></operator> <name pos:line="41" pos:column="14">Incoming<pos:position pos:line="41" pos:column="22"/></name></expr>;<pos:position pos:line="41" pos:column="23"/></init> <condition><expr><name pos:line="41" pos:column="24">tmp<pos:position pos:line="41" pos:column="27"/></name></expr>;<pos:position pos:line="41" pos:column="28"/></condition> <incr><expr><name pos:line="41" pos:column="29">tmp<pos:position pos:line="41" pos:column="32"/></name> <operator pos:line="41" pos:column="33">=<pos:position pos:line="41" pos:column="34"/></operator> <name><name pos:line="41" pos:column="35">tmp<pos:position pos:line="41" pos:column="38"/></name><operator pos:line="41" pos:column="38">-&gt;<pos:position pos:line="41" pos:column="43"/></operator><name pos:line="41" pos:column="40">next<pos:position pos:line="41" pos:column="44"/></name></name></expr></incr>)<pos:position pos:line="41" pos:column="45"/></control>
  <block pos:line="42" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">tmp<pos:position pos:line="43" pos:column="8"/></name><operator pos:line="43" pos:column="8">-&gt;<pos:position pos:line="43" pos:column="13"/></operator></name><operator pos:line="43" pos:column="10">new<pos:position pos:line="43" pos:column="13"/></operator> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <literal type="number" pos:line="43" pos:column="16">0<pos:position pos:line="43" pos:column="17"/></literal></expr>;<pos:position pos:line="43" pos:column="18"/></expr_stmt>

<cpp:ifdef pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">ifdef<pos:position pos:line="45" pos:column="7"/></cpp:directive> <name pos:line="45" pos:column="8">USE_IMAP<pos:position pos:line="45" pos:column="16"/></name></cpp:ifdef>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><call><name pos:line="46" pos:column="9">mx_is_imap<pos:position pos:line="46" pos:column="19"/></name> <argument_list pos:line="46" pos:column="20">(<argument><expr><name><name pos:line="46" pos:column="21">tmp<pos:position pos:line="46" pos:column="24"/></name><operator pos:line="46" pos:column="24">-&gt;<pos:position pos:line="46" pos:column="29"/></operator><name pos:line="46" pos:column="26">path<pos:position pos:line="46" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="32"/></condition><then pos:line="46" pos:column="32">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="47" pos:column="7">tmp<pos:position pos:line="47" pos:column="10"/></name><operator pos:line="47" pos:column="10">-&gt;<pos:position pos:line="47" pos:column="15"/></operator><name pos:line="47" pos:column="12">magic<pos:position pos:line="47" pos:column="17"/></name></name> <operator pos:line="47" pos:column="18">=<pos:position pos:line="47" pos:column="19"/></operator> <name pos:line="47" pos:column="20">M_IMAP<pos:position pos:line="47" pos:column="26"/></name></expr>;<pos:position pos:line="47" pos:column="27"/></expr_stmt></block></then>
    <elseif pos:line="48" pos:column="5">else
<cpp:endif pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">endif<pos:position pos:line="49" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">ifdef<pos:position pos:line="50" pos:column="7"/></cpp:directive> <name pos:line="50" pos:column="8">USE_POP<pos:position pos:line="50" pos:column="15"/></name></cpp:ifdef>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><call><name pos:line="51" pos:column="9">mx_is_pop<pos:position pos:line="51" pos:column="18"/></name> <argument_list pos:line="51" pos:column="19">(<argument><expr><name><name pos:line="51" pos:column="20">tmp<pos:position pos:line="51" pos:column="23"/></name><operator pos:line="51" pos:column="23">-&gt;<pos:position pos:line="51" pos:column="28"/></operator><name pos:line="51" pos:column="25">path<pos:position pos:line="51" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="31"/></condition><then pos:line="51" pos:column="31">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="52" pos:column="7">tmp<pos:position pos:line="52" pos:column="10"/></name><operator pos:line="52" pos:column="10">-&gt;<pos:position pos:line="52" pos:column="15"/></operator><name pos:line="52" pos:column="12">magic<pos:position pos:line="52" pos:column="17"/></name></name> <operator pos:line="52" pos:column="18">=<pos:position pos:line="52" pos:column="19"/></operator> <name pos:line="52" pos:column="20">M_POP<pos:position pos:line="52" pos:column="25"/></name></expr>;<pos:position pos:line="52" pos:column="26"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="53" pos:column="5">else
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif<pos:position pos:line="54" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><call><name pos:line="55" pos:column="9">stat<pos:position pos:line="55" pos:column="13"/></name> <argument_list pos:line="55" pos:column="14">(<argument><expr><name><name pos:line="55" pos:column="15">tmp<pos:position pos:line="55" pos:column="18"/></name><operator pos:line="55" pos:column="18">-&gt;<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="20">path<pos:position pos:line="55" pos:column="24"/></name></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="26">&amp;<pos:position pos:line="55" pos:column="31"/></operator><name pos:line="55" pos:column="27">sb<pos:position pos:line="55" pos:column="29"/></name></expr></argument>)<pos:position pos:line="55" pos:column="30"/></argument_list></call> <operator pos:line="55" pos:column="31">!=<pos:position pos:line="55" pos:column="33"/></operator> <literal type="number" pos:line="55" pos:column="34">0<pos:position pos:line="55" pos:column="35"/></literal> <operator pos:line="55" pos:column="36">||<pos:position pos:line="55" pos:column="38"/></operator> <name><name pos:line="55" pos:column="39">sb<pos:position pos:line="55" pos:column="41"/></name><operator pos:line="55" pos:column="41">.<pos:position pos:line="55" pos:column="42"/></operator><name pos:line="55" pos:column="42">st_size<pos:position pos:line="55" pos:column="49"/></name></name> <operator pos:line="55" pos:column="50">==<pos:position pos:line="55" pos:column="52"/></operator> <literal type="number" pos:line="55" pos:column="53">0<pos:position pos:line="55" pos:column="54"/></literal> <operator pos:line="55" pos:column="55">||<pos:position pos:line="55" pos:column="57"/></operator>
	<operator pos:line="56" pos:column="9">(<pos:position pos:line="56" pos:column="10"/></operator><operator pos:line="56" pos:column="10">!<pos:position pos:line="56" pos:column="11"/></operator><name><name pos:line="56" pos:column="11">tmp<pos:position pos:line="56" pos:column="14"/></name><operator pos:line="56" pos:column="14">-&gt;<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="16">magic<pos:position pos:line="56" pos:column="21"/></name></name> <operator pos:line="56" pos:column="22">&amp;&amp;<pos:position pos:line="56" pos:column="32"/></operator> <operator pos:line="56" pos:column="25">(<pos:position pos:line="56" pos:column="26"/></operator><name><name pos:line="56" pos:column="26">tmp<pos:position pos:line="56" pos:column="29"/></name><operator pos:line="56" pos:column="29">-&gt;<pos:position pos:line="56" pos:column="34"/></operator><name pos:line="56" pos:column="31">magic<pos:position pos:line="56" pos:column="36"/></name></name> <operator pos:line="56" pos:column="37">=<pos:position pos:line="56" pos:column="38"/></operator> <call><name pos:line="56" pos:column="39">mx_get_magic<pos:position pos:line="56" pos:column="51"/></name> <argument_list pos:line="56" pos:column="52">(<argument><expr><name><name pos:line="56" pos:column="53">tmp<pos:position pos:line="56" pos:column="56"/></name><operator pos:line="56" pos:column="56">-&gt;<pos:position pos:line="56" pos:column="61"/></operator><name pos:line="56" pos:column="58">path<pos:position pos:line="56" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="63"/></argument_list></call><operator pos:line="56" pos:column="63">)<pos:position pos:line="56" pos:column="64"/></operator> <operator pos:line="56" pos:column="65">&lt;=<pos:position pos:line="56" pos:column="70"/></operator> <literal type="number" pos:line="56" pos:column="68">0<pos:position pos:line="56" pos:column="69"/></literal><operator pos:line="56" pos:column="69">)<pos:position pos:line="56" pos:column="70"/></operator></expr>)<pos:position pos:line="56" pos:column="71"/></condition><then pos:line="56" pos:column="71">
    <block pos:line="57" pos:column="5">{
      <comment type="block" pos:line="58" pos:column="7">/* if the mailbox still doesn't exist, set the newly created flag to
       * be ready for when it does. */</comment>
      <expr_stmt><expr><name><name pos:line="60" pos:column="7">tmp<pos:position pos:line="60" pos:column="10"/></name><operator pos:line="60" pos:column="10">-&gt;<pos:position pos:line="60" pos:column="15"/></operator><name pos:line="60" pos:column="12">newly_created<pos:position pos:line="60" pos:column="25"/></name></name> <operator pos:line="60" pos:column="26">=<pos:position pos:line="60" pos:column="27"/></operator> <literal type="number" pos:line="60" pos:column="28">1<pos:position pos:line="60" pos:column="29"/></literal></expr>;<pos:position pos:line="60" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="61" pos:column="7">tmp<pos:position pos:line="61" pos:column="10"/></name><operator pos:line="61" pos:column="10">-&gt;<pos:position pos:line="61" pos:column="15"/></operator><name pos:line="61" pos:column="12">magic<pos:position pos:line="61" pos:column="17"/></name></name> <operator pos:line="61" pos:column="18">=<pos:position pos:line="61" pos:column="19"/></operator> <literal type="number" pos:line="61" pos:column="20">0<pos:position pos:line="61" pos:column="21"/></literal></expr>;<pos:position pos:line="61" pos:column="22"/></expr_stmt>
<cpp:ifdef pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">ifdef<pos:position pos:line="62" pos:column="7"/></cpp:directive> <name pos:line="62" pos:column="8">BUFFY_SIZE<pos:position pos:line="62" pos:column="18"/></name></cpp:ifdef>
      <expr_stmt><expr><name><name pos:line="63" pos:column="7">tmp<pos:position pos:line="63" pos:column="10"/></name><operator pos:line="63" pos:column="10">-&gt;<pos:position pos:line="63" pos:column="15"/></operator><name pos:line="63" pos:column="12">size<pos:position pos:line="63" pos:column="16"/></name></name> <operator pos:line="63" pos:column="17">=<pos:position pos:line="63" pos:column="18"/></operator> <literal type="number" pos:line="63" pos:column="19">0<pos:position pos:line="63" pos:column="20"/></literal></expr>;<pos:position pos:line="63" pos:column="21"/></expr_stmt>
<cpp:endif pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">endif<pos:position pos:line="64" pos:column="7"/></cpp:directive></cpp:endif>
      <continue pos:line="65" pos:column="7">continue;<pos:position pos:line="65" pos:column="16"/></continue>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="68" pos:column="5">/* check to see if the folder is the currently selected folder
     * before polling */</comment>
    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><operator pos:line="70" pos:column="9">!<pos:position pos:line="70" pos:column="10"/></operator><name pos:line="70" pos:column="10">Context<pos:position pos:line="70" pos:column="17"/></name> <operator pos:line="70" pos:column="18">||<pos:position pos:line="70" pos:column="20"/></operator> <operator pos:line="70" pos:column="21">!<pos:position pos:line="70" pos:column="22"/></operator><name><name pos:line="70" pos:column="22">Context<pos:position pos:line="70" pos:column="29"/></name><operator pos:line="70" pos:column="29">-&gt;<pos:position pos:line="70" pos:column="34"/></operator><name pos:line="70" pos:column="31">path<pos:position pos:line="70" pos:column="35"/></name></name> <operator pos:line="70" pos:column="36">||<pos:position pos:line="70" pos:column="38"/></operator>
<cpp:if pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">if<pos:position pos:line="71" pos:column="4"/></cpp:directive> <expr><name pos:line="71" pos:column="5">defined<pos:position pos:line="71" pos:column="12"/></name> <name pos:line="71" pos:column="13">USE_IMAP<pos:position pos:line="71" pos:column="21"/></name> <operator pos:line="71" pos:column="22">||<pos:position pos:line="71" pos:column="24"/></operator> <name pos:line="71" pos:column="25">defined<pos:position pos:line="71" pos:column="32"/></name> <name pos:line="71" pos:column="33">USE_POP<pos:position pos:line="71" pos:column="40"/></name></expr></cpp:if>
	<operator pos:line="72" pos:column="9">(<pos:position pos:line="72" pos:column="10"/></operator><ternary><condition><expr><operator pos:line="72" pos:column="10">(<pos:position pos:line="72" pos:column="11"/></operator>
<cpp:ifdef pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">ifdef<pos:position pos:line="73" pos:column="7"/></cpp:directive> <name pos:line="73" pos:column="8">USE_IMAP<pos:position pos:line="73" pos:column="16"/></name></cpp:ifdef>
	<name><name pos:line="74" pos:column="9">tmp<pos:position pos:line="74" pos:column="12"/></name><operator pos:line="74" pos:column="12">-&gt;<pos:position pos:line="74" pos:column="17"/></operator><name pos:line="74" pos:column="14">magic<pos:position pos:line="74" pos:column="19"/></name></name> <operator pos:line="74" pos:column="20">==<pos:position pos:line="74" pos:column="22"/></operator> <name pos:line="74" pos:column="23">M_IMAP<pos:position pos:line="74" pos:column="29"/></name>
<cpp:endif pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">endif<pos:position pos:line="75" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">ifdef<pos:position pos:line="76" pos:column="7"/></cpp:directive> <name pos:line="76" pos:column="8">USE_POP<pos:position pos:line="76" pos:column="15"/></name></cpp:ifdef>
<cpp:ifdef pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">ifdef<pos:position pos:line="77" pos:column="7"/></cpp:directive> <name pos:line="77" pos:column="8">USE_IMAP<pos:position pos:line="77" pos:column="16"/></name></cpp:ifdef>
	<operator pos:line="78" pos:column="9">||<pos:position pos:line="78" pos:column="11"/></operator>
<cpp:endif pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">endif<pos:position pos:line="79" pos:column="7"/></cpp:directive></cpp:endif>
	<name><name pos:line="80" pos:column="9">tmp<pos:position pos:line="80" pos:column="12"/></name><operator pos:line="80" pos:column="12">-&gt;<pos:position pos:line="80" pos:column="17"/></operator><name pos:line="80" pos:column="14">magic<pos:position pos:line="80" pos:column="19"/></name></name> <operator pos:line="80" pos:column="20">==<pos:position pos:line="80" pos:column="22"/></operator> <name pos:line="80" pos:column="23">M_POP<pos:position pos:line="80" pos:column="28"/></name>
<cpp:endif pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">endif<pos:position pos:line="81" pos:column="7"/></cpp:directive></cpp:endif>
	<operator pos:line="82" pos:column="9">)<pos:position pos:line="82" pos:column="10"/></operator></expr> ?<pos:position pos:line="82" pos:column="12"/></condition><then pos:line="82" pos:column="12"> <expr><call><name pos:line="82" pos:column="13">mutt_strcmp<pos:position pos:line="82" pos:column="24"/></name> <argument_list pos:line="82" pos:column="25">(<argument><expr><name><name pos:line="82" pos:column="26">tmp<pos:position pos:line="82" pos:column="29"/></name><operator pos:line="82" pos:column="29">-&gt;<pos:position pos:line="82" pos:column="34"/></operator><name pos:line="82" pos:column="31">path<pos:position pos:line="82" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="37">Context<pos:position pos:line="82" pos:column="44"/></name><operator pos:line="82" pos:column="44">-&gt;<pos:position pos:line="82" pos:column="49"/></operator><name pos:line="82" pos:column="46">path<pos:position pos:line="82" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="51"/></argument_list></call></expr> <pos:position pos:line="82" pos:column="52"/></then><else pos:line="82" pos:column="52">:
<cpp:endif pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">endif<pos:position pos:line="83" pos:column="7"/></cpp:directive></cpp:endif>
	 <expr><operator pos:line="84" pos:column="10">(<pos:position pos:line="84" pos:column="11"/></operator><name><name pos:line="84" pos:column="11">sb<pos:position pos:line="84" pos:column="13"/></name><operator pos:line="84" pos:column="13">.<pos:position pos:line="84" pos:column="14"/></operator><name pos:line="84" pos:column="14">st_dev<pos:position pos:line="84" pos:column="20"/></name></name> <operator pos:line="84" pos:column="21">!=<pos:position pos:line="84" pos:column="23"/></operator> <name><name pos:line="84" pos:column="24">contex_sb<pos:position pos:line="84" pos:column="33"/></name><operator pos:line="84" pos:column="33">.<pos:position pos:line="84" pos:column="34"/></operator><name pos:line="84" pos:column="34">st_dev<pos:position pos:line="84" pos:column="40"/></name></name> <operator pos:line="84" pos:column="41">||<pos:position pos:line="84" pos:column="43"/></operator> <name><name pos:line="84" pos:column="44">sb<pos:position pos:line="84" pos:column="46"/></name><operator pos:line="84" pos:column="46">.<pos:position pos:line="84" pos:column="47"/></operator><name pos:line="84" pos:column="47">st_ino<pos:position pos:line="84" pos:column="53"/></name></name> <operator pos:line="84" pos:column="54">!=<pos:position pos:line="84" pos:column="56"/></operator> <name><name pos:line="84" pos:column="57">contex_sb<pos:position pos:line="84" pos:column="66"/></name><operator pos:line="84" pos:column="66">.<pos:position pos:line="84" pos:column="67"/></operator><name pos:line="84" pos:column="67">st_ino<pos:position pos:line="84" pos:column="73"/></name></name><operator pos:line="84" pos:column="73">)<pos:position pos:line="84" pos:column="74"/></operator></expr></else></ternary>
<cpp:if pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">if<pos:position pos:line="85" pos:column="4"/></cpp:directive> <expr><name pos:line="85" pos:column="5">defined<pos:position pos:line="85" pos:column="12"/></name> <name pos:line="85" pos:column="13">USE_IMAP<pos:position pos:line="85" pos:column="21"/></name> <operator pos:line="85" pos:column="22">||<pos:position pos:line="85" pos:column="24"/></operator> <name pos:line="85" pos:column="25">defined<pos:position pos:line="85" pos:column="32"/></name> <name pos:line="85" pos:column="33">USE_POP<pos:position pos:line="85" pos:column="40"/></name></expr></cpp:if>	 
	    <operator pos:line="86" pos:column="13">)<pos:position pos:line="86" pos:column="14"/></operator></expr>
<cpp:endif pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">endif<pos:position pos:line="87" pos:column="7"/></cpp:directive></cpp:endif>
	)<pos:position pos:line="88" pos:column="10"/></condition><then pos:line="88" pos:column="10">
	
    <block pos:line="90" pos:column="5">{
      <switch pos:line="91" pos:column="7">switch <condition pos:line="91" pos:column="14">(<expr><name><name pos:line="91" pos:column="15">tmp<pos:position pos:line="91" pos:column="18"/></name><operator pos:line="91" pos:column="18">-&gt;<pos:position pos:line="91" pos:column="23"/></operator><name pos:line="91" pos:column="20">magic<pos:position pos:line="91" pos:column="25"/></name></name></expr>)<pos:position pos:line="91" pos:column="26"/></condition>
      <block pos:line="92" pos:column="7">{
      <case pos:line="93" pos:column="7">case <expr><name pos:line="93" pos:column="12">M_MBOX<pos:position pos:line="93" pos:column="18"/></name></expr>:<pos:position pos:line="93" pos:column="19"/></case>
      <case pos:line="94" pos:column="7">case <expr><name pos:line="94" pos:column="12">M_MMDF<pos:position pos:line="94" pos:column="18"/></name></expr>:<pos:position pos:line="94" pos:column="19"/></case>
      <case pos:line="95" pos:column="7">case <expr><name pos:line="95" pos:column="12">M_KENDRA<pos:position pos:line="95" pos:column="20"/></name></expr>:<pos:position pos:line="95" pos:column="21"/></case>

	<if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><name pos:line="97" pos:column="13">STAT_CHECK<pos:position pos:line="97" pos:column="23"/></name></expr>)<pos:position pos:line="97" pos:column="24"/></condition><then pos:line="97" pos:column="24">
	<block pos:line="98" pos:column="9">{
	  <expr_stmt><expr><name pos:line="99" pos:column="11">BuffyCount<pos:position pos:line="99" pos:column="21"/></name><operator pos:line="99" pos:column="21">++<pos:position pos:line="99" pos:column="23"/></operator></expr>;<pos:position pos:line="99" pos:column="24"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="100" pos:column="11">tmp<pos:position pos:line="100" pos:column="14"/></name><operator pos:line="100" pos:column="14">-&gt;<pos:position pos:line="100" pos:column="19"/></operator></name><operator pos:line="100" pos:column="16">new<pos:position pos:line="100" pos:column="19"/></operator> <operator pos:line="100" pos:column="20">=<pos:position pos:line="100" pos:column="21"/></operator> <literal type="number" pos:line="100" pos:column="22">1<pos:position pos:line="100" pos:column="23"/></literal></expr>;<pos:position pos:line="100" pos:column="24"/></expr_stmt>
	}<pos:position pos:line="101" pos:column="10"/></block></then>
<cpp:ifdef pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">ifdef<pos:position pos:line="102" pos:column="7"/></cpp:directive> <name pos:line="102" pos:column="8">BUFFY_SIZE<pos:position pos:line="102" pos:column="18"/></name></cpp:ifdef>
	<else pos:line="103" pos:column="9">else
	<block pos:line="104" pos:column="9">{
	  <comment type="block" pos:line="105" pos:column="11">/* some other program has deleted mail from the folder */</comment>
	  <expr_stmt><expr><name><name pos:line="106" pos:column="11">tmp<pos:position pos:line="106" pos:column="14"/></name><operator pos:line="106" pos:column="14">-&gt;<pos:position pos:line="106" pos:column="19"/></operator><name pos:line="106" pos:column="16">size<pos:position pos:line="106" pos:column="20"/></name></name> <operator pos:line="106" pos:column="21">=<pos:position pos:line="106" pos:column="22"/></operator> <operator pos:line="106" pos:column="23">(<pos:position pos:line="106" pos:column="24"/></operator><name pos:line="106" pos:column="24">long<pos:position pos:line="106" pos:column="28"/></name><operator pos:line="106" pos:column="28">)<pos:position pos:line="106" pos:column="29"/></operator> <name><name pos:line="106" pos:column="30">sb<pos:position pos:line="106" pos:column="32"/></name><operator pos:line="106" pos:column="32">.<pos:position pos:line="106" pos:column="33"/></operator><name pos:line="106" pos:column="33">st_size<pos:position pos:line="106" pos:column="40"/></name></name></expr>;<pos:position pos:line="106" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="107" pos:column="10"/></block></else></if>
<cpp:endif pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">endif<pos:position pos:line="108" pos:column="7"/></cpp:directive></cpp:endif>
	<if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><name><name pos:line="109" pos:column="13">tmp<pos:position pos:line="109" pos:column="16"/></name><operator pos:line="109" pos:column="16">-&gt;<pos:position pos:line="109" pos:column="21"/></operator><name pos:line="109" pos:column="18">newly_created<pos:position pos:line="109" pos:column="31"/></name></name> <operator pos:line="109" pos:column="32">&amp;&amp;<pos:position pos:line="109" pos:column="42"/></operator>
	    <operator pos:line="110" pos:column="13">(<pos:position pos:line="110" pos:column="14"/></operator><name><name pos:line="110" pos:column="14">sb<pos:position pos:line="110" pos:column="16"/></name><operator pos:line="110" pos:column="16">.<pos:position pos:line="110" pos:column="17"/></operator><name pos:line="110" pos:column="17">st_ctime<pos:position pos:line="110" pos:column="25"/></name></name> <operator pos:line="110" pos:column="26">!=<pos:position pos:line="110" pos:column="28"/></operator> <name><name pos:line="110" pos:column="29">sb<pos:position pos:line="110" pos:column="31"/></name><operator pos:line="110" pos:column="31">.<pos:position pos:line="110" pos:column="32"/></operator><name pos:line="110" pos:column="32">st_mtime<pos:position pos:line="110" pos:column="40"/></name></name> <operator pos:line="110" pos:column="41">||<pos:position pos:line="110" pos:column="43"/></operator> <name><name pos:line="110" pos:column="44">sb<pos:position pos:line="110" pos:column="46"/></name><operator pos:line="110" pos:column="46">.<pos:position pos:line="110" pos:column="47"/></operator><name pos:line="110" pos:column="47">st_ctime<pos:position pos:line="110" pos:column="55"/></name></name> <operator pos:line="110" pos:column="56">!=<pos:position pos:line="110" pos:column="58"/></operator> <name><name pos:line="110" pos:column="59">sb<pos:position pos:line="110" pos:column="61"/></name><operator pos:line="110" pos:column="61">.<pos:position pos:line="110" pos:column="62"/></operator><name pos:line="110" pos:column="62">st_atime<pos:position pos:line="110" pos:column="70"/></name></name><operator pos:line="110" pos:column="70">)<pos:position pos:line="110" pos:column="71"/></operator></expr>)<pos:position pos:line="110" pos:column="72"/></condition><then pos:line="110" pos:column="72">
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="111" pos:column="11">tmp<pos:position pos:line="111" pos:column="14"/></name><operator pos:line="111" pos:column="14">-&gt;<pos:position pos:line="111" pos:column="19"/></operator><name pos:line="111" pos:column="16">newly_created<pos:position pos:line="111" pos:column="29"/></name></name> <operator pos:line="111" pos:column="30">=<pos:position pos:line="111" pos:column="31"/></operator> <literal type="number" pos:line="111" pos:column="32">0<pos:position pos:line="111" pos:column="33"/></literal></expr>;<pos:position pos:line="111" pos:column="34"/></expr_stmt></block></then></if>

	<break pos:line="113" pos:column="9">break;<pos:position pos:line="113" pos:column="15"/></break>

      <case pos:line="115" pos:column="7">case <expr><name pos:line="115" pos:column="12">M_MAILDIR<pos:position pos:line="115" pos:column="21"/></name></expr>:<pos:position pos:line="115" pos:column="22"/></case>

	<expr_stmt><expr><call><name pos:line="117" pos:column="9">snprintf<pos:position pos:line="117" pos:column="17"/></name> <argument_list pos:line="117" pos:column="18">(<argument><expr><name pos:line="117" pos:column="19">path<pos:position pos:line="117" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="117" pos:column="25">sizeof <argument_list pos:line="117" pos:column="32">(<argument><expr><name pos:line="117" pos:column="33">path<pos:position pos:line="117" pos:column="37"/></name></expr></argument>)<pos:position pos:line="117" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="40">"%s/new"<pos:position pos:line="117" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="117" pos:column="50">tmp<pos:position pos:line="117" pos:column="53"/></name><operator pos:line="117" pos:column="53">-&gt;<pos:position pos:line="117" pos:column="58"/></operator><name pos:line="117" pos:column="55">path<pos:position pos:line="117" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="61"/></expr_stmt>
	<if pos:line="118" pos:column="9">if <condition pos:line="118" pos:column="12">(<expr><operator pos:line="118" pos:column="13">(<pos:position pos:line="118" pos:column="14"/></operator><name pos:line="118" pos:column="14">dirp<pos:position pos:line="118" pos:column="18"/></name> <operator pos:line="118" pos:column="19">=<pos:position pos:line="118" pos:column="20"/></operator> <call><name pos:line="118" pos:column="21">opendir<pos:position pos:line="118" pos:column="28"/></name> <argument_list pos:line="118" pos:column="29">(<argument><expr><name pos:line="118" pos:column="30">path<pos:position pos:line="118" pos:column="34"/></name></expr></argument>)<pos:position pos:line="118" pos:column="35"/></argument_list></call><operator pos:line="118" pos:column="35">)<pos:position pos:line="118" pos:column="36"/></operator> <operator pos:line="118" pos:column="37">==<pos:position pos:line="118" pos:column="39"/></operator> <name pos:line="118" pos:column="40">NULL<pos:position pos:line="118" pos:column="44"/></name></expr>)<pos:position pos:line="118" pos:column="45"/></condition><then pos:line="118" pos:column="45">
	<block pos:line="119" pos:column="9">{
	  <expr_stmt><expr><name><name pos:line="120" pos:column="11">tmp<pos:position pos:line="120" pos:column="14"/></name><operator pos:line="120" pos:column="14">-&gt;<pos:position pos:line="120" pos:column="19"/></operator><name pos:line="120" pos:column="16">magic<pos:position pos:line="120" pos:column="21"/></name></name> <operator pos:line="120" pos:column="22">=<pos:position pos:line="120" pos:column="23"/></operator> <literal type="number" pos:line="120" pos:column="24">0<pos:position pos:line="120" pos:column="25"/></literal></expr>;<pos:position pos:line="120" pos:column="26"/></expr_stmt>
	  <break pos:line="121" pos:column="11">break;<pos:position pos:line="121" pos:column="17"/></break>
	}<pos:position pos:line="122" pos:column="10"/></block></then></if>
	<while pos:line="123" pos:column="9">while <condition pos:line="123" pos:column="15">(<expr><operator pos:line="123" pos:column="16">(<pos:position pos:line="123" pos:column="17"/></operator><name pos:line="123" pos:column="17">de<pos:position pos:line="123" pos:column="19"/></name> <operator pos:line="123" pos:column="20">=<pos:position pos:line="123" pos:column="21"/></operator> <call><name pos:line="123" pos:column="22">readdir<pos:position pos:line="123" pos:column="29"/></name> <argument_list pos:line="123" pos:column="30">(<argument><expr><name pos:line="123" pos:column="31">dirp<pos:position pos:line="123" pos:column="35"/></name></expr></argument>)<pos:position pos:line="123" pos:column="36"/></argument_list></call><operator pos:line="123" pos:column="36">)<pos:position pos:line="123" pos:column="37"/></operator> <operator pos:line="123" pos:column="38">!=<pos:position pos:line="123" pos:column="40"/></operator> <name pos:line="123" pos:column="41">NULL<pos:position pos:line="123" pos:column="45"/></name></expr>)<pos:position pos:line="123" pos:column="46"/></condition>
	<block pos:line="124" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="125" pos:column="11">char<pos:position pos:line="125" pos:column="15"/></name> <modifier pos:line="125" pos:column="16">*<pos:position pos:line="125" pos:column="17"/></modifier></type><name pos:line="125" pos:column="17">p<pos:position pos:line="125" pos:column="18"/></name></decl>;<pos:position pos:line="125" pos:column="19"/></decl_stmt>
	  <if pos:line="126" pos:column="11">if <condition pos:line="126" pos:column="14">(<expr><operator pos:line="126" pos:column="15">*<pos:position pos:line="126" pos:column="16"/></operator><name><name pos:line="126" pos:column="16">de<pos:position pos:line="126" pos:column="18"/></name><operator pos:line="126" pos:column="18">-&gt;<pos:position pos:line="126" pos:column="23"/></operator><name pos:line="126" pos:column="20">d_name<pos:position pos:line="126" pos:column="26"/></name></name> <operator pos:line="126" pos:column="27">!=<pos:position pos:line="126" pos:column="29"/></operator> <literal type="char" pos:line="126" pos:column="30">'.'<pos:position pos:line="126" pos:column="33"/></literal> <operator pos:line="126" pos:column="34">&amp;&amp;<pos:position pos:line="126" pos:column="44"/></operator> 
	      <operator pos:line="127" pos:column="15">(<pos:position pos:line="127" pos:column="16"/></operator><operator pos:line="127" pos:column="16">!<pos:position pos:line="127" pos:column="17"/></operator><operator pos:line="127" pos:column="17">(<pos:position pos:line="127" pos:column="18"/></operator><name pos:line="127" pos:column="18">p<pos:position pos:line="127" pos:column="19"/></name> <operator pos:line="127" pos:column="20">=<pos:position pos:line="127" pos:column="21"/></operator> <call><name pos:line="127" pos:column="22">strstr<pos:position pos:line="127" pos:column="28"/></name> <argument_list pos:line="127" pos:column="29">(<argument><expr><name><name pos:line="127" pos:column="30">de<pos:position pos:line="127" pos:column="32"/></name><operator pos:line="127" pos:column="32">-&gt;<pos:position pos:line="127" pos:column="37"/></operator><name pos:line="127" pos:column="34">d_name<pos:position pos:line="127" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="127" pos:column="42">":2,"<pos:position pos:line="127" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="48"/></argument_list></call><operator pos:line="127" pos:column="48">)<pos:position pos:line="127" pos:column="49"/></operator> <operator pos:line="127" pos:column="50">||<pos:position pos:line="127" pos:column="52"/></operator> <operator pos:line="127" pos:column="53">!<pos:position pos:line="127" pos:column="54"/></operator><call><name pos:line="127" pos:column="54">strchr<pos:position pos:line="127" pos:column="60"/></name> <argument_list pos:line="127" pos:column="61">(<argument><expr><name pos:line="127" pos:column="62">p<pos:position pos:line="127" pos:column="63"/></name> <operator pos:line="127" pos:column="64">+<pos:position pos:line="127" pos:column="65"/></operator> <literal type="number" pos:line="127" pos:column="66">3<pos:position pos:line="127" pos:column="67"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="127" pos:column="69">'T'<pos:position pos:line="127" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="73"/></argument_list></call><operator pos:line="127" pos:column="73">)<pos:position pos:line="127" pos:column="74"/></operator></expr>)<pos:position pos:line="127" pos:column="75"/></condition><then pos:line="127" pos:column="75">
	  <block pos:line="128" pos:column="11">{
	    <comment type="block" pos:line="129" pos:column="13">/* one new and undeleted message is enough */</comment>
	    <expr_stmt><expr><name pos:line="130" pos:column="13">BuffyCount<pos:position pos:line="130" pos:column="23"/></name><operator pos:line="130" pos:column="23">++<pos:position pos:line="130" pos:column="25"/></operator></expr>;<pos:position pos:line="130" pos:column="26"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="131" pos:column="13">tmp<pos:position pos:line="131" pos:column="16"/></name><operator pos:line="131" pos:column="16">-&gt;<pos:position pos:line="131" pos:column="21"/></operator></name><operator pos:line="131" pos:column="18">new<pos:position pos:line="131" pos:column="21"/></operator> <operator pos:line="131" pos:column="22">=<pos:position pos:line="131" pos:column="23"/></operator> <literal type="number" pos:line="131" pos:column="24">1<pos:position pos:line="131" pos:column="25"/></literal></expr>;<pos:position pos:line="131" pos:column="26"/></expr_stmt>
	    <break pos:line="132" pos:column="13">break;<pos:position pos:line="132" pos:column="19"/></break>
	  }<pos:position pos:line="133" pos:column="12"/></block></then></if>
	}<pos:position pos:line="134" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="135" pos:column="9">closedir<pos:position pos:line="135" pos:column="17"/></name> <argument_list pos:line="135" pos:column="18">(<argument><expr><name pos:line="135" pos:column="19">dirp<pos:position pos:line="135" pos:column="23"/></name></expr></argument>)<pos:position pos:line="135" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="25"/></expr_stmt>
	<break pos:line="136" pos:column="9">break;<pos:position pos:line="136" pos:column="15"/></break>

      <case pos:line="138" pos:column="7">case <expr><name pos:line="138" pos:column="12">M_MH<pos:position pos:line="138" pos:column="16"/></name></expr>:<pos:position pos:line="138" pos:column="17"/></case>
	<if pos:line="139" pos:column="9">if <condition pos:line="139" pos:column="12">(<expr><operator pos:line="139" pos:column="13">(<pos:position pos:line="139" pos:column="14"/></operator><name><name pos:line="139" pos:column="14">tmp<pos:position pos:line="139" pos:column="17"/></name><operator pos:line="139" pos:column="17">-&gt;<pos:position pos:line="139" pos:column="22"/></operator></name><operator pos:line="139" pos:column="19">new<pos:position pos:line="139" pos:column="22"/></operator> <operator pos:line="139" pos:column="23">=<pos:position pos:line="139" pos:column="24"/></operator> <call><name pos:line="139" pos:column="25">mh_buffy<pos:position pos:line="139" pos:column="33"/></name> <argument_list pos:line="139" pos:column="34">(<argument><expr><name><name pos:line="139" pos:column="35">tmp<pos:position pos:line="139" pos:column="38"/></name><operator pos:line="139" pos:column="38">-&gt;<pos:position pos:line="139" pos:column="43"/></operator><name pos:line="139" pos:column="40">path<pos:position pos:line="139" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="139" pos:column="45"/></argument_list></call><operator pos:line="139" pos:column="45">)<pos:position pos:line="139" pos:column="46"/></operator> <operator pos:line="139" pos:column="47">&gt;<pos:position pos:line="139" pos:column="51"/></operator> <literal type="number" pos:line="139" pos:column="49">0<pos:position pos:line="139" pos:column="50"/></literal></expr>)<pos:position pos:line="139" pos:column="51"/></condition><then pos:line="139" pos:column="51">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="140" pos:column="11">BuffyCount<pos:position pos:line="140" pos:column="21"/></name><operator pos:line="140" pos:column="21">++<pos:position pos:line="140" pos:column="23"/></operator></expr>;<pos:position pos:line="140" pos:column="24"/></expr_stmt></block></then></if>
	<break pos:line="141" pos:column="9">break;<pos:position pos:line="141" pos:column="15"/></break>
	
<cpp:ifdef pos:line="143" pos:column="1">#<cpp:directive pos:line="143" pos:column="2">ifdef<pos:position pos:line="143" pos:column="7"/></cpp:directive> <name pos:line="143" pos:column="8">USE_IMAP<pos:position pos:line="143" pos:column="16"/></name></cpp:ifdef>
      <case pos:line="144" pos:column="7">case <expr><name pos:line="144" pos:column="12">M_IMAP<pos:position pos:line="144" pos:column="18"/></name></expr>:<pos:position pos:line="144" pos:column="19"/></case>
	<if pos:line="145" pos:column="9">if <condition pos:line="145" pos:column="12">(<expr><operator pos:line="145" pos:column="13">(<pos:position pos:line="145" pos:column="14"/></operator><name><name pos:line="145" pos:column="14">tmp<pos:position pos:line="145" pos:column="17"/></name><operator pos:line="145" pos:column="17">-&gt;<pos:position pos:line="145" pos:column="22"/></operator></name><operator pos:line="145" pos:column="19">new<pos:position pos:line="145" pos:column="22"/></operator> <operator pos:line="145" pos:column="23">=<pos:position pos:line="145" pos:column="24"/></operator> <call><name pos:line="145" pos:column="25">imap_mailbox_check<pos:position pos:line="145" pos:column="43"/></name> <argument_list pos:line="145" pos:column="44">(<argument><expr><name><name pos:line="145" pos:column="45">tmp<pos:position pos:line="145" pos:column="48"/></name><operator pos:line="145" pos:column="48">-&gt;<pos:position pos:line="145" pos:column="53"/></operator><name pos:line="145" pos:column="50">path<pos:position pos:line="145" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="145" pos:column="56">1<pos:position pos:line="145" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="145" pos:column="58"/></argument_list></call><operator pos:line="145" pos:column="58">)<pos:position pos:line="145" pos:column="59"/></operator> <operator pos:line="145" pos:column="60">&gt;<pos:position pos:line="145" pos:column="64"/></operator> <literal type="number" pos:line="145" pos:column="62">0<pos:position pos:line="145" pos:column="63"/></literal></expr>)<pos:position pos:line="145" pos:column="64"/></condition><then pos:line="145" pos:column="64">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="146" pos:column="11">BuffyCount<pos:position pos:line="146" pos:column="21"/></name><operator pos:line="146" pos:column="21">++<pos:position pos:line="146" pos:column="23"/></operator></expr>;<pos:position pos:line="146" pos:column="24"/></expr_stmt></block></then>
	<else pos:line="147" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="148" pos:column="11">tmp<pos:position pos:line="148" pos:column="14"/></name><operator pos:line="148" pos:column="14">-&gt;<pos:position pos:line="148" pos:column="19"/></operator></name><operator pos:line="148" pos:column="16">new<pos:position pos:line="148" pos:column="19"/></operator> <operator pos:line="148" pos:column="20">=<pos:position pos:line="148" pos:column="21"/></operator> <literal type="number" pos:line="148" pos:column="22">0<pos:position pos:line="148" pos:column="23"/></literal></expr>;<pos:position pos:line="148" pos:column="24"/></expr_stmt></block></else></if>

	<break pos:line="150" pos:column="9">break;<pos:position pos:line="150" pos:column="15"/></break>
<cpp:endif pos:line="151" pos:column="1">#<cpp:directive pos:line="151" pos:column="2">endif<pos:position pos:line="151" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="153" pos:column="1">#<cpp:directive pos:line="153" pos:column="2">ifdef<pos:position pos:line="153" pos:column="7"/></cpp:directive> <name pos:line="153" pos:column="8">USE_POP<pos:position pos:line="153" pos:column="15"/></name></cpp:ifdef>
      <case pos:line="154" pos:column="7">case <expr><name pos:line="154" pos:column="12">M_POP<pos:position pos:line="154" pos:column="17"/></name></expr>:<pos:position pos:line="154" pos:column="18"/></case>
	<break pos:line="155" pos:column="9">break;<pos:position pos:line="155" pos:column="15"/></break>
<cpp:endif pos:line="156" pos:column="1">#<cpp:directive pos:line="156" pos:column="2">endif<pos:position pos:line="156" pos:column="7"/></cpp:directive></cpp:endif>
      }<pos:position pos:line="157" pos:column="8"/></block></switch>
    }<pos:position pos:line="158" pos:column="6"/></block></then>
<cpp:ifdef pos:line="159" pos:column="1">#<cpp:directive pos:line="159" pos:column="2">ifdef<pos:position pos:line="159" pos:column="7"/></cpp:directive> <name pos:line="159" pos:column="8">BUFFY_SIZE<pos:position pos:line="159" pos:column="18"/></name></cpp:ifdef>
    <elseif pos:line="160" pos:column="5">else <if pos:line="160" pos:column="10">if <condition pos:line="160" pos:column="13">(<expr><name pos:line="160" pos:column="14">Context<pos:position pos:line="160" pos:column="21"/></name> <operator pos:line="160" pos:column="22">&amp;&amp;<pos:position pos:line="160" pos:column="32"/></operator> <name><name pos:line="160" pos:column="25">Context<pos:position pos:line="160" pos:column="32"/></name><operator pos:line="160" pos:column="32">-&gt;<pos:position pos:line="160" pos:column="37"/></operator><name pos:line="160" pos:column="34">path<pos:position pos:line="160" pos:column="38"/></name></name></expr>)<pos:position pos:line="160" pos:column="39"/></condition><then pos:line="160" pos:column="39">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="161" pos:column="7">tmp<pos:position pos:line="161" pos:column="10"/></name><operator pos:line="161" pos:column="10">-&gt;<pos:position pos:line="161" pos:column="15"/></operator><name pos:line="161" pos:column="12">size<pos:position pos:line="161" pos:column="16"/></name></name> <operator pos:line="161" pos:column="17">=<pos:position pos:line="161" pos:column="18"/></operator> <operator pos:line="161" pos:column="19">(<pos:position pos:line="161" pos:column="20"/></operator><name pos:line="161" pos:column="20">long<pos:position pos:line="161" pos:column="24"/></name><operator pos:line="161" pos:column="24">)<pos:position pos:line="161" pos:column="25"/></operator> <name><name pos:line="161" pos:column="26">sb<pos:position pos:line="161" pos:column="28"/></name><operator pos:line="161" pos:column="28">.<pos:position pos:line="161" pos:column="29"/></operator><name pos:line="161" pos:column="29">st_size<pos:position pos:line="161" pos:column="36"/></name></name></expr>;<pos:position pos:line="161" pos:column="37"/></expr_stmt></block></then></if></elseif></if>	<comment type="block" pos:line="161" pos:column="41">/* update the size */</comment>
<cpp:endif pos:line="162" pos:column="1">#<cpp:directive pos:line="162" pos:column="2">endif<pos:position pos:line="162" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="164" pos:column="5">if <condition pos:line="164" pos:column="8">(<expr><operator pos:line="164" pos:column="9">!<pos:position pos:line="164" pos:column="10"/></operator><name><name pos:line="164" pos:column="10">tmp<pos:position pos:line="164" pos:column="13"/></name><operator pos:line="164" pos:column="13">-&gt;<pos:position pos:line="164" pos:column="18"/></operator></name><operator pos:line="164" pos:column="15">new<pos:position pos:line="164" pos:column="18"/></operator></expr>)<pos:position pos:line="164" pos:column="19"/></condition><then pos:line="164" pos:column="19">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="165" pos:column="7">tmp<pos:position pos:line="165" pos:column="10"/></name><operator pos:line="165" pos:column="10">-&gt;<pos:position pos:line="165" pos:column="15"/></operator><name pos:line="165" pos:column="12">notified<pos:position pos:line="165" pos:column="20"/></name></name> <operator pos:line="165" pos:column="21">=<pos:position pos:line="165" pos:column="22"/></operator> <literal type="number" pos:line="165" pos:column="23">0<pos:position pos:line="165" pos:column="24"/></literal></expr>;<pos:position pos:line="165" pos:column="25"/></expr_stmt></block></then>
    <elseif pos:line="166" pos:column="5">else <if pos:line="166" pos:column="10">if <condition pos:line="166" pos:column="13">(<expr><operator pos:line="166" pos:column="14">!<pos:position pos:line="166" pos:column="15"/></operator><name><name pos:line="166" pos:column="15">tmp<pos:position pos:line="166" pos:column="18"/></name><operator pos:line="166" pos:column="18">-&gt;<pos:position pos:line="166" pos:column="23"/></operator><name pos:line="166" pos:column="20">notified<pos:position pos:line="166" pos:column="28"/></name></name></expr>)<pos:position pos:line="166" pos:column="29"/></condition><then pos:line="166" pos:column="29">
      <block type="pseudo"><expr_stmt><expr><name pos:line="167" pos:column="7">BuffyNotify<pos:position pos:line="167" pos:column="18"/></name><operator pos:line="167" pos:column="18">++<pos:position pos:line="167" pos:column="20"/></operator></expr>;<pos:position pos:line="167" pos:column="21"/></expr_stmt></block></then></if></elseif></if>
  }<pos:position pos:line="168" pos:column="4"/></block></for>

  <expr_stmt><expr><name pos:line="170" pos:column="3">BuffyDoneTime<pos:position pos:line="170" pos:column="16"/></name> <operator pos:line="170" pos:column="17">=<pos:position pos:line="170" pos:column="18"/></operator> <name pos:line="170" pos:column="19">BuffyTime<pos:position pos:line="170" pos:column="28"/></name></expr>;<pos:position pos:line="170" pos:column="29"/></expr_stmt>
  <return pos:line="171" pos:column="3">return <expr><operator pos:line="171" pos:column="10">(<pos:position pos:line="171" pos:column="11"/></operator><name pos:line="171" pos:column="11">BuffyCount<pos:position pos:line="171" pos:column="21"/></name><operator pos:line="171" pos:column="21">)<pos:position pos:line="171" pos:column="22"/></operator></expr>;<pos:position pos:line="171" pos:column="23"/></return>
}<pos:position pos:line="172" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1274_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_generate_boundary<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">PARAMETER<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier><modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">parm<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">rs<pos:position pos:line="3" pos:column="10"/></name><index pos:line="3" pos:column="10">[<expr><name pos:line="3" pos:column="11">BOUNDARYLEN<pos:position pos:line="3" pos:column="22"/></name> <operator pos:line="3" pos:column="23">+<pos:position pos:line="3" pos:column="24"/></operator> <literal type="number" pos:line="3" pos:column="25">1<pos:position pos:line="3" pos:column="26"/></literal></expr>]<pos:position pos:line="3" pos:column="27"/></index></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">p<pos:position pos:line="4" pos:column="10"/></name> <init pos:line="4" pos:column="11">= <expr><name pos:line="4" pos:column="13">rs<pos:position pos:line="4" pos:column="15"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name></decl>;<pos:position pos:line="5" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="7" pos:column="3">rs<pos:position pos:line="7" pos:column="5"/></name><index pos:line="7" pos:column="5">[<expr><name pos:line="7" pos:column="6">BOUNDARYLEN<pos:position pos:line="7" pos:column="17"/></name></expr>]<pos:position pos:line="7" pos:column="18"/></index></name> <operator pos:line="7" pos:column="19">=<pos:position pos:line="7" pos:column="20"/></operator> <literal type="number" pos:line="7" pos:column="21">0<pos:position pos:line="7" pos:column="22"/></literal></expr>;<pos:position pos:line="7" pos:column="23"/></expr_stmt>
  <for pos:line="8" pos:column="3">for <control pos:line="8" pos:column="7">(<init><expr><name pos:line="8" pos:column="8">i<pos:position pos:line="8" pos:column="9"/></name><operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator><literal type="number" pos:line="8" pos:column="10">0<pos:position pos:line="8" pos:column="11"/></literal></expr>;<pos:position pos:line="8" pos:column="12"/></init><condition><expr><name pos:line="8" pos:column="12">i<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">&lt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">BOUNDARYLEN<pos:position pos:line="8" pos:column="25"/></name></expr>;<pos:position pos:line="8" pos:column="26"/></condition><incr><expr><name pos:line="8" pos:column="26">i<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">++<pos:position pos:line="8" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="30"/></control>
    <block type="pseudo"><expr_stmt><expr><operator pos:line="9" pos:column="5">*<pos:position pos:line="9" pos:column="6"/></operator><name pos:line="9" pos:column="6">p<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">++<pos:position pos:line="9" pos:column="9"/></operator> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <name><name pos:line="9" pos:column="12">B64Chars<pos:position pos:line="9" pos:column="20"/></name><index pos:line="9" pos:column="20">[<expr><call><name pos:line="9" pos:column="21">LRAND<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">()<pos:position pos:line="9" pos:column="28"/></argument_list></call> <operator pos:line="9" pos:column="29">%<pos:position pos:line="9" pos:column="30"/></operator> <sizeof pos:line="9" pos:column="31">sizeof <argument_list pos:line="9" pos:column="38">(<argument><expr><name pos:line="9" pos:column="39">B64Chars<pos:position pos:line="9" pos:column="47"/></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></sizeof></expr>]<pos:position pos:line="9" pos:column="49"/></index></name></expr>;<pos:position pos:line="9" pos:column="50"/></expr_stmt></block></for>
  <expr_stmt><expr><operator pos:line="10" pos:column="3">*<pos:position pos:line="10" pos:column="4"/></operator><name pos:line="10" pos:column="4">p<pos:position pos:line="10" pos:column="5"/></name> <operator pos:line="10" pos:column="6">=<pos:position pos:line="10" pos:column="7"/></operator> <literal type="number" pos:line="10" pos:column="8">0<pos:position pos:line="10" pos:column="9"/></literal></expr>;<pos:position pos:line="10" pos:column="10"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">mutt_set_parameter<pos:position pos:line="12" pos:column="21"/></name> <argument_list pos:line="12" pos:column="22">(<argument><expr><literal type="string" pos:line="12" pos:column="23">"boundary"<pos:position pos:line="12" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="35">rs<pos:position pos:line="12" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="39">parm<pos:position pos:line="12" pos:column="43"/></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

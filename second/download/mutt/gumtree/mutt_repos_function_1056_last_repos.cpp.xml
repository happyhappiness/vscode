<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1056_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">int<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">is_ascii<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">p<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">size_t<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">len<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list> <block pos:line="1" pos:column="56">{
  <decl_stmt><decl><type><specifier pos:line="2" pos:column="3">register<pos:position pos:line="2" pos:column="11"/></specifier> <specifier pos:line="2" pos:column="12">const<pos:position pos:line="2" pos:column="17"/></specifier> <name pos:line="2" pos:column="18">char<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">s<pos:position pos:line="2" pos:column="25"/></name> <init pos:line="2" pos:column="26">= <expr><name pos:line="2" pos:column="28">p<pos:position pos:line="2" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="30"/></decl_stmt>
  <while pos:line="3" pos:column="3">while <condition pos:line="3" pos:column="9">(<expr><name pos:line="3" pos:column="10">s<pos:position pos:line="3" pos:column="11"/></name> <operator pos:line="3" pos:column="12">&amp;&amp;<pos:position pos:line="3" pos:column="22"/></operator> <call pos:line="3" pos:column="15">(<name pos:line="3" pos:column="16">unsigned<pos:position pos:line="3" pos:column="24"/></name>) <argument_list pos:line="3" pos:column="26">(<argument><expr><name pos:line="3" pos:column="27">s<pos:position pos:line="3" pos:column="28"/></name> <operator pos:line="3" pos:column="29">-<pos:position pos:line="3" pos:column="30"/></operator> <name pos:line="3" pos:column="31">p<pos:position pos:line="3" pos:column="32"/></name></expr></argument>)<pos:position pos:line="3" pos:column="33"/></argument_list></call> <operator pos:line="3" pos:column="34">&lt;<pos:position pos:line="3" pos:column="38"/></operator> <name pos:line="3" pos:column="36">len<pos:position pos:line="3" pos:column="39"/></name></expr>)<pos:position pos:line="3" pos:column="40"/></condition> <block pos:line="3" pos:column="41">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">(<pos:position pos:line="4" pos:column="10"/></operator><operator pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">s<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">&amp;<pos:position pos:line="4" pos:column="18"/></operator> <literal type="number" pos:line="4" pos:column="15">0x80<pos:position pos:line="4" pos:column="19"/></literal><operator pos:line="4" pos:column="19">)<pos:position pos:line="4" pos:column="20"/></operator> <operator pos:line="4" pos:column="21">!=<pos:position pos:line="4" pos:column="23"/></operator> <literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal></expr>)<pos:position pos:line="4" pos:column="26"/></condition><then pos:line="4" pos:column="26">
      <block type="pseudo"><return pos:line="5" pos:column="7">return <expr><literal type="number" pos:line="5" pos:column="14">0<pos:position pos:line="5" pos:column="15"/></literal></expr>;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="6" pos:column="5">s<pos:position pos:line="6" pos:column="6"/></name><operator pos:line="6" pos:column="6">++<pos:position pos:line="6" pos:column="8"/></operator></expr>;<pos:position pos:line="6" pos:column="9"/></expr_stmt>
  }<pos:position pos:line="7" pos:column="4"/></block></while>
  <return pos:line="8" pos:column="3">return <expr><literal type="number" pos:line="8" pos:column="10">1<pos:position pos:line="8" pos:column="11"/></literal></expr>;<pos:position pos:line="8" pos:column="12"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

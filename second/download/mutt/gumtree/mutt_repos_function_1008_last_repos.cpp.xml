<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1008_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_attach_bounce<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">FILE<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type> <name pos:line="1" pos:column="33">fp<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">HEADER<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type> <name pos:line="1" pos:column="46">hdr<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>,
	   <parameter><decl><type><name pos:line="2" pos:column="12">ATTACH_CONTEXT<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">actx<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">BODY<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type> <name pos:line="2" pos:column="41">cur<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">short<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">prompt<pos:position pos:line="5" pos:column="14"/></name><index pos:line="5" pos:column="14">[<expr><name pos:line="5" pos:column="15">STRING<pos:position pos:line="5" pos:column="21"/></name></expr>]<pos:position pos:line="5" pos:column="22"/></index></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">buf<pos:position pos:line="6" pos:column="11"/></name><index pos:line="6" pos:column="11">[<expr><name pos:line="6" pos:column="12">HUGE_STRING<pos:position pos:line="6" pos:column="23"/></name></expr>]<pos:position pos:line="6" pos:column="24"/></index></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">err<pos:position pos:line="7" pos:column="12"/></name> <init pos:line="7" pos:column="13">= <expr><name pos:line="7" pos:column="15">NULL<pos:position pos:line="7" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">ADDRESS<pos:position pos:line="8" pos:column="10"/></name> <modifier pos:line="8" pos:column="11">*<pos:position pos:line="8" pos:column="12"/></modifier></type><name pos:line="8" pos:column="12">adr<pos:position pos:line="8" pos:column="15"/></name> <init pos:line="8" pos:column="16">= <expr><name pos:line="8" pos:column="18">NULL<pos:position pos:line="8" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">ret<pos:position pos:line="9" pos:column="10"/></name> <init pos:line="9" pos:column="11">= <expr><literal type="number" pos:line="9" pos:column="13">0<pos:position pos:line="9" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">p<pos:position pos:line="10" pos:column="8"/></name>   <init pos:line="10" pos:column="11">= <expr><literal type="number" pos:line="10" pos:column="13">0<pos:position pos:line="10" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="15"/></decl_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><call><name pos:line="12" pos:column="7">check_all_msg<pos:position pos:line="12" pos:column="20"/></name> <argument_list pos:line="12" pos:column="21">(<argument><expr><name pos:line="12" pos:column="22">actx<pos:position pos:line="12" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="28">cur<pos:position pos:line="12" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="33">1<pos:position pos:line="12" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call> <operator pos:line="12" pos:column="36">==<pos:position pos:line="12" pos:column="38"/></operator> <operator pos:line="12" pos:column="39">-<pos:position pos:line="12" pos:column="40"/></operator><literal type="number" pos:line="12" pos:column="40">1<pos:position pos:line="12" pos:column="41"/></literal></expr>)<pos:position pos:line="12" pos:column="42"/></condition><then pos:line="12" pos:column="42">
    <block type="pseudo"><return pos:line="13" pos:column="5">return;<pos:position pos:line="13" pos:column="12"/></return></block></then></if>

  <comment type="block" pos:line="15" pos:column="3">/* one or more messages? */</comment>
  <expr_stmt><expr><name pos:line="16" pos:column="3">p<pos:position pos:line="16" pos:column="4"/></name> <operator pos:line="16" pos:column="5">=<pos:position pos:line="16" pos:column="6"/></operator> <operator pos:line="16" pos:column="7">(<pos:position pos:line="16" pos:column="8"/></operator><name pos:line="16" pos:column="8">cur<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">||<pos:position pos:line="16" pos:column="14"/></operator> <call><name pos:line="16" pos:column="15">count_tagged<pos:position pos:line="16" pos:column="27"/></name> <argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">actx<pos:position pos:line="16" pos:column="33"/></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call> <operator pos:line="16" pos:column="35">==<pos:position pos:line="16" pos:column="37"/></operator> <literal type="number" pos:line="16" pos:column="38">1<pos:position pos:line="16" pos:column="39"/></literal><operator pos:line="16" pos:column="39">)<pos:position pos:line="16" pos:column="40"/></operator></expr>;<pos:position pos:line="16" pos:column="41"/></expr_stmt>

  <comment type="block" pos:line="18" pos:column="3">/* RfC 5322 mandates a From: header, so warn before bouncing
   * messages without one */</comment>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">cur<pos:position pos:line="20" pos:column="10"/></name></expr>)<pos:position pos:line="20" pos:column="11"/></condition><then pos:line="20" pos:column="11">
  <block pos:line="21" pos:column="3">{
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator><name><name pos:line="22" pos:column="10">cur<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">-&gt;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="15">hdr<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">-&gt;<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="20">env<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">-&gt;<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="25">from<pos:position pos:line="22" pos:column="29"/></name></name></expr>)<pos:position pos:line="22" pos:column="30"/></condition><then pos:line="22" pos:column="30">
    <block pos:line="23" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="24" pos:column="7">mutt_error<pos:position pos:line="24" pos:column="17"/></name></type> <name pos:line="24" pos:column="18">_<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><literal type="string" pos:line="24" pos:column="20">"Warning: message contains no From: header"<pos:position pos:line="24" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="64"/></argument_list></decl>;<pos:position pos:line="24" pos:column="65"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">mutt_sleep<pos:position pos:line="25" pos:column="17"/></name> <argument_list pos:line="25" pos:column="18">(<argument><expr><literal type="number" pos:line="25" pos:column="19">2<pos:position pos:line="25" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">mutt_clear_error<pos:position pos:line="26" pos:column="23"/></name> <argument_list pos:line="26" pos:column="24">()<pos:position pos:line="26" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
  }<pos:position pos:line="28" pos:column="4"/></block></then>
  <else pos:line="29" pos:column="3">else
  <block pos:line="30" pos:column="3">{
    <for pos:line="31" pos:column="5">for <control pos:line="31" pos:column="9">(<init><expr><name pos:line="31" pos:column="10">i<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <literal type="number" pos:line="31" pos:column="14">0<pos:position pos:line="31" pos:column="15"/></literal></expr>;<pos:position pos:line="31" pos:column="16"/></init> <condition><expr><name pos:line="31" pos:column="17">i<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">&lt;<pos:position pos:line="31" pos:column="23"/></operator> <name><name pos:line="31" pos:column="21">actx<pos:position pos:line="31" pos:column="25"/></name><operator pos:line="31" pos:column="25">-&gt;<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="27">idxlen<pos:position pos:line="31" pos:column="33"/></name></name></expr>;<pos:position pos:line="31" pos:column="34"/></condition> <incr><expr><name pos:line="31" pos:column="35">i<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">++<pos:position pos:line="31" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="31" pos:column="39"/></control>
    <block pos:line="32" pos:column="5">{
      <if pos:line="33" pos:column="7">if <condition pos:line="33" pos:column="10">(<expr><name><name pos:line="33" pos:column="11">actx<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">-&gt;<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="17">idx<pos:position pos:line="33" pos:column="20"/></name><index pos:line="33" pos:column="20">[<expr><name pos:line="33" pos:column="21">i<pos:position pos:line="33" pos:column="22"/></name></expr>]<pos:position pos:line="33" pos:column="23"/></index></name><operator pos:line="33" pos:column="23">-&gt;<pos:position pos:line="33" pos:column="28"/></operator><name><name pos:line="33" pos:column="25">content<pos:position pos:line="33" pos:column="32"/></name><operator pos:line="33" pos:column="32">-&gt;<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="34">tagged<pos:position pos:line="33" pos:column="40"/></name></name></expr>)<pos:position pos:line="33" pos:column="41"/></condition><then pos:line="33" pos:column="41">
      <block pos:line="34" pos:column="7">{
	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">!<pos:position pos:line="35" pos:column="14"/></operator><name><name pos:line="35" pos:column="14">actx<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">-&gt;<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="20">idx<pos:position pos:line="35" pos:column="23"/></name><index pos:line="35" pos:column="23">[<expr><name pos:line="35" pos:column="24">i<pos:position pos:line="35" pos:column="25"/></name></expr>]<pos:position pos:line="35" pos:column="26"/></index></name><operator pos:line="35" pos:column="26">-&gt;<pos:position pos:line="35" pos:column="31"/></operator><name><name pos:line="35" pos:column="28">content<pos:position pos:line="35" pos:column="35"/></name><operator pos:line="35" pos:column="35">-&gt;<pos:position pos:line="35" pos:column="40"/></operator><name pos:line="35" pos:column="37">hdr<pos:position pos:line="35" pos:column="40"/></name><operator pos:line="35" pos:column="40">-&gt;<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="42">env<pos:position pos:line="35" pos:column="45"/></name><operator pos:line="35" pos:column="45">-&gt;<pos:position pos:line="35" pos:column="50"/></operator><name pos:line="35" pos:column="47">from<pos:position pos:line="35" pos:column="51"/></name></name></expr>)<pos:position pos:line="35" pos:column="52"/></condition><then pos:line="35" pos:column="52">
	<block pos:line="36" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="37" pos:column="11">mutt_error<pos:position pos:line="37" pos:column="21"/></name></type> <name pos:line="37" pos:column="22">_<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><literal type="string" pos:line="37" pos:column="24">"Warning: message contains no From: header"<pos:position pos:line="37" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="68"/></argument_list></decl>;<pos:position pos:line="37" pos:column="69"/></decl_stmt>
	  <expr_stmt><expr><call><name pos:line="38" pos:column="11">mutt_sleep<pos:position pos:line="38" pos:column="21"/></name> <argument_list pos:line="38" pos:column="22">(<argument><expr><literal type="number" pos:line="38" pos:column="23">2<pos:position pos:line="38" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="26"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="39" pos:column="11">mutt_clear_error<pos:position pos:line="39" pos:column="27"/></name> <argument_list pos:line="39" pos:column="28">()<pos:position pos:line="39" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="31"/></expr_stmt>
	  <break pos:line="40" pos:column="11">break;<pos:position pos:line="40" pos:column="17"/></break>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>
      }<pos:position pos:line="42" pos:column="8"/></block></then></if>
    }<pos:position pos:line="43" pos:column="6"/></block></for>
  }<pos:position pos:line="44" pos:column="4"/></block></else></if>

  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><name pos:line="46" pos:column="7">p<pos:position pos:line="46" pos:column="8"/></name></expr>)<pos:position pos:line="46" pos:column="9"/></condition><then pos:line="46" pos:column="9">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="5">strfcpy<pos:position pos:line="47" pos:column="12"/></name> <argument_list pos:line="47" pos:column="13">(<argument><expr><name pos:line="47" pos:column="14">prompt<pos:position pos:line="47" pos:column="20"/></name></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="22">_<pos:position pos:line="47" pos:column="23"/></name><argument_list pos:line="47" pos:column="23">(<argument><expr><literal type="string" pos:line="47" pos:column="24">"Bounce message to: "<pos:position pos:line="47" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="48">sizeof <argument_list pos:line="47" pos:column="55">(<argument><expr><name pos:line="47" pos:column="56">prompt<pos:position pos:line="47" pos:column="62"/></name></expr></argument>)<pos:position pos:line="47" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="47" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="65"/></expr_stmt></block></then>
  <else pos:line="48" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="5">strfcpy<pos:position pos:line="49" pos:column="12"/></name> <argument_list pos:line="49" pos:column="13">(<argument><expr><name pos:line="49" pos:column="14">prompt<pos:position pos:line="49" pos:column="20"/></name></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="22">_<pos:position pos:line="49" pos:column="23"/></name><argument_list pos:line="49" pos:column="23">(<argument><expr><literal type="string" pos:line="49" pos:column="24">"Bounce tagged messages to: "<pos:position pos:line="49" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="56">sizeof <argument_list pos:line="49" pos:column="63">(<argument><expr><name pos:line="49" pos:column="64">prompt<pos:position pos:line="49" pos:column="70"/></name></expr></argument>)<pos:position pos:line="49" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="73"/></expr_stmt></block></else></if>

  <expr_stmt><expr><name><name pos:line="51" pos:column="3">buf<pos:position pos:line="51" pos:column="6"/></name><index pos:line="51" pos:column="6">[<expr><literal type="number" pos:line="51" pos:column="7">0<pos:position pos:line="51" pos:column="8"/></literal></expr>]<pos:position pos:line="51" pos:column="9"/></index></name> <operator pos:line="51" pos:column="10">=<pos:position pos:line="51" pos:column="11"/></operator> <literal type="char" pos:line="51" pos:column="12">'\0'<pos:position pos:line="51" pos:column="16"/></literal></expr>;<pos:position pos:line="51" pos:column="17"/></expr_stmt>
  <if pos:line="52" pos:column="3">if <condition pos:line="52" pos:column="6">(<expr><call><name pos:line="52" pos:column="7">mutt_get_field<pos:position pos:line="52" pos:column="21"/></name> <argument_list pos:line="52" pos:column="22">(<argument><expr><name pos:line="52" pos:column="23">prompt<pos:position pos:line="52" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="31">buf<pos:position pos:line="52" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="52" pos:column="36">sizeof <argument_list pos:line="52" pos:column="43">(<argument><expr><name pos:line="52" pos:column="44">buf<pos:position pos:line="52" pos:column="47"/></name></expr></argument>)<pos:position pos:line="52" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="52" pos:column="50">MUTT_ALIAS<pos:position pos:line="52" pos:column="60"/></name></expr></argument>)<pos:position pos:line="52" pos:column="61"/></argument_list></call> 
      <operator pos:line="53" pos:column="7">||<pos:position pos:line="53" pos:column="9"/></operator> <name><name pos:line="53" pos:column="10">buf<pos:position pos:line="53" pos:column="13"/></name><index pos:line="53" pos:column="13">[<expr><literal type="number" pos:line="53" pos:column="14">0<pos:position pos:line="53" pos:column="15"/></literal></expr>]<pos:position pos:line="53" pos:column="16"/></index></name> <operator pos:line="53" pos:column="17">==<pos:position pos:line="53" pos:column="19"/></operator> <literal type="char" pos:line="53" pos:column="20">'\0'<pos:position pos:line="53" pos:column="24"/></literal></expr>)<pos:position pos:line="53" pos:column="25"/></condition><then pos:line="53" pos:column="25">
    <block type="pseudo"><return pos:line="54" pos:column="5">return;<pos:position pos:line="54" pos:column="12"/></return></block></then></if>

  <if pos:line="56" pos:column="3">if <condition pos:line="56" pos:column="6">(<expr><operator pos:line="56" pos:column="7">!<pos:position pos:line="56" pos:column="8"/></operator><operator pos:line="56" pos:column="8">(<pos:position pos:line="56" pos:column="9"/></operator><name pos:line="56" pos:column="9">adr<pos:position pos:line="56" pos:column="12"/></name> <operator pos:line="56" pos:column="13">=<pos:position pos:line="56" pos:column="14"/></operator> <call><name pos:line="56" pos:column="15">rfc822_parse_adrlist<pos:position pos:line="56" pos:column="35"/></name> <argument_list pos:line="56" pos:column="36">(<argument><expr><name pos:line="56" pos:column="37">adr<pos:position pos:line="56" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="42">buf<pos:position pos:line="56" pos:column="45"/></name></expr></argument>)<pos:position pos:line="56" pos:column="46"/></argument_list></call><operator pos:line="56" pos:column="46">)<pos:position pos:line="56" pos:column="47"/></operator></expr>)<pos:position pos:line="56" pos:column="48"/></condition><then pos:line="56" pos:column="48">
  <block pos:line="57" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="58" pos:column="5">mutt_error<pos:position pos:line="58" pos:column="15"/></name></type> <name pos:line="58" pos:column="16">_<pos:position pos:line="58" pos:column="17"/></name><argument_list pos:line="58" pos:column="17">(<argument><expr><literal type="string" pos:line="58" pos:column="18">"Error parsing address!"<pos:position pos:line="58" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="43"/></argument_list></decl>;<pos:position pos:line="58" pos:column="44"/></decl_stmt>
    <return pos:line="59" pos:column="5">return;<pos:position pos:line="59" pos:column="12"/></return>
  }<pos:position pos:line="60" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="62" pos:column="3">adr<pos:position pos:line="62" pos:column="6"/></name> <operator pos:line="62" pos:column="7">=<pos:position pos:line="62" pos:column="8"/></operator> <call><name pos:line="62" pos:column="9">mutt_expand_aliases<pos:position pos:line="62" pos:column="28"/></name> <argument_list pos:line="62" pos:column="29">(<argument><expr><name pos:line="62" pos:column="30">adr<pos:position pos:line="62" pos:column="33"/></name></expr></argument>)<pos:position pos:line="62" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="35"/></expr_stmt>
  
  <if pos:line="64" pos:column="3">if <condition pos:line="64" pos:column="6">(<expr><call><name pos:line="64" pos:column="7">mutt_addrlist_to_intl<pos:position pos:line="64" pos:column="28"/></name> <argument_list pos:line="64" pos:column="29">(<argument><expr><name pos:line="64" pos:column="30">adr<pos:position pos:line="64" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="35">&amp;<pos:position pos:line="64" pos:column="40"/></operator><name pos:line="64" pos:column="36">err<pos:position pos:line="64" pos:column="39"/></name></expr></argument>)<pos:position pos:line="64" pos:column="40"/></argument_list></call> <operator pos:line="64" pos:column="41">&lt;<pos:position pos:line="64" pos:column="45"/></operator> <literal type="number" pos:line="64" pos:column="43">0<pos:position pos:line="64" pos:column="44"/></literal></expr>)<pos:position pos:line="64" pos:column="45"/></condition><then pos:line="64" pos:column="45">
  <block pos:line="65" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">mutt_error<pos:position pos:line="66" pos:column="15"/></name> <argument_list pos:line="66" pos:column="16">(<argument><expr><call><name pos:line="66" pos:column="17">_<pos:position pos:line="66" pos:column="18"/></name><argument_list pos:line="66" pos:column="18">(<argument><expr><literal type="string" pos:line="66" pos:column="19">"Bad IDN: '%s'"<pos:position pos:line="66" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="66" pos:column="37">err<pos:position pos:line="66" pos:column="40"/></name></expr></argument>)<pos:position pos:line="66" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">FREE<pos:position pos:line="67" pos:column="9"/></name> <argument_list pos:line="67" pos:column="10">(<argument><expr><operator pos:line="67" pos:column="11">&amp;<pos:position pos:line="67" pos:column="16"/></operator><name pos:line="67" pos:column="12">err<pos:position pos:line="67" pos:column="15"/></name></expr></argument>)<pos:position pos:line="67" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">rfc822_free_address<pos:position pos:line="68" pos:column="24"/></name> <argument_list pos:line="68" pos:column="25">(<argument><expr><operator pos:line="68" pos:column="26">&amp;<pos:position pos:line="68" pos:column="31"/></operator><name pos:line="68" pos:column="27">adr<pos:position pos:line="68" pos:column="30"/></name></expr></argument>)<pos:position pos:line="68" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="32"/></expr_stmt>
    <return pos:line="69" pos:column="5">return;<pos:position pos:line="69" pos:column="12"/></return>
  }<pos:position pos:line="70" pos:column="4"/></block></then></if>
  
  <expr_stmt><expr><name><name pos:line="72" pos:column="3">buf<pos:position pos:line="72" pos:column="6"/></name><index pos:line="72" pos:column="6">[<expr><literal type="number" pos:line="72" pos:column="7">0<pos:position pos:line="72" pos:column="8"/></literal></expr>]<pos:position pos:line="72" pos:column="9"/></index></name> <operator pos:line="72" pos:column="10">=<pos:position pos:line="72" pos:column="11"/></operator> <literal type="number" pos:line="72" pos:column="12">0<pos:position pos:line="72" pos:column="13"/></literal></expr>;<pos:position pos:line="72" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="73" pos:column="3">rfc822_write_address<pos:position pos:line="73" pos:column="23"/></name> <argument_list pos:line="73" pos:column="24">(<argument><expr><name pos:line="73" pos:column="25">buf<pos:position pos:line="73" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="73" pos:column="30">sizeof <argument_list pos:line="73" pos:column="37">(<argument><expr><name pos:line="73" pos:column="38">buf<pos:position pos:line="73" pos:column="41"/></name></expr></argument>)<pos:position pos:line="73" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="73" pos:column="44">adr<pos:position pos:line="73" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="49">1<pos:position pos:line="73" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="52"/></expr_stmt>

<cpp:define pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">define<pos:position pos:line="75" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="75" pos:column="9">extra_space<pos:position pos:line="75" pos:column="20"/></name></cpp:macro> <cpp:value pos:line="75" pos:column="21">(15+7+2)<pos:position pos:line="75" pos:column="29"/></cpp:value></cpp:define>
  <comment type="block" pos:line="76" pos:column="3">/*
   * See commands.c.
   */</comment>
  <expr_stmt><expr><call><name pos:line="79" pos:column="3">snprintf<pos:position pos:line="79" pos:column="11"/></name> <argument_list pos:line="79" pos:column="12">(<argument><expr><name pos:line="79" pos:column="13">prompt<pos:position pos:line="79" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="79" pos:column="21">sizeof <argument_list pos:line="79" pos:column="28">(<argument><expr><name pos:line="79" pos:column="29">prompt<pos:position pos:line="79" pos:column="35"/></name></expr></argument>)<pos:position pos:line="79" pos:column="36"/></argument_list></sizeof> <operator pos:line="79" pos:column="37">-<pos:position pos:line="79" pos:column="38"/></operator> <literal type="number" pos:line="79" pos:column="39">4<pos:position pos:line="79" pos:column="40"/></literal></expr></argument>, 
   <argument><expr><operator pos:line="80" pos:column="4">(<pos:position pos:line="80" pos:column="5"/></operator><ternary><condition><expr><name pos:line="80" pos:column="5">p<pos:position pos:line="80" pos:column="6"/></name></expr> ?<pos:position pos:line="80" pos:column="8"/></condition><then pos:line="80" pos:column="8"> <expr><call><name pos:line="80" pos:column="9">_<pos:position pos:line="80" pos:column="10"/></name><argument_list pos:line="80" pos:column="10">(<argument><expr><literal type="string" pos:line="80" pos:column="11">"Bounce message to %s"<pos:position pos:line="80" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="34"/></argument_list></call></expr> <pos:position pos:line="80" pos:column="35"/></then><else pos:line="80" pos:column="35">: <expr><call><name pos:line="80" pos:column="37">_<pos:position pos:line="80" pos:column="38"/></name><argument_list pos:line="80" pos:column="38">(<argument><expr><literal type="string" pos:line="80" pos:column="39">"Bounce messages to %s"<pos:position pos:line="80" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="63"/></argument_list></call></expr></else></ternary><operator pos:line="80" pos:column="63">)<pos:position pos:line="80" pos:column="64"/></operator></expr></argument>, <argument><expr><name pos:line="80" pos:column="66">buf<pos:position pos:line="80" pos:column="69"/></name></expr></argument>)<pos:position pos:line="80" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="71"/></expr_stmt>
  
  <if pos:line="82" pos:column="3">if <condition pos:line="82" pos:column="6">(<expr><call><name pos:line="82" pos:column="7">mutt_strwidth<pos:position pos:line="82" pos:column="20"/></name> <argument_list pos:line="82" pos:column="21">(<argument><expr><name pos:line="82" pos:column="22">prompt<pos:position pos:line="82" pos:column="28"/></name></expr></argument>)<pos:position pos:line="82" pos:column="29"/></argument_list></call> <operator pos:line="82" pos:column="30">&gt;<pos:position pos:line="82" pos:column="34"/></operator> <name><name pos:line="82" pos:column="32">MuttMessageWindow<pos:position pos:line="82" pos:column="49"/></name><operator pos:line="82" pos:column="49">-&gt;<pos:position pos:line="82" pos:column="54"/></operator><name pos:line="82" pos:column="51">cols<pos:position pos:line="82" pos:column="55"/></name></name> <operator pos:line="82" pos:column="56">-<pos:position pos:line="82" pos:column="57"/></operator> <name pos:line="82" pos:column="58">extra_space<pos:position pos:line="82" pos:column="69"/></name></expr>)<pos:position pos:line="82" pos:column="70"/></condition><then pos:line="82" pos:column="70">
  <block pos:line="83" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">mutt_format_string<pos:position pos:line="84" pos:column="23"/></name> <argument_list pos:line="84" pos:column="24">(<argument><expr><name pos:line="84" pos:column="25">prompt<pos:position pos:line="84" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="84" pos:column="33">sizeof <argument_list pos:line="84" pos:column="40">(<argument><expr><name pos:line="84" pos:column="41">prompt<pos:position pos:line="84" pos:column="47"/></name></expr></argument>)<pos:position pos:line="84" pos:column="48"/></argument_list></sizeof> <operator pos:line="84" pos:column="49">-<pos:position pos:line="84" pos:column="50"/></operator> <literal type="number" pos:line="84" pos:column="51">4<pos:position pos:line="84" pos:column="52"/></literal></expr></argument>,
			<argument><expr><literal type="number" pos:line="85" pos:column="25">0<pos:position pos:line="85" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="28">MuttMessageWindow<pos:position pos:line="85" pos:column="45"/></name><operator pos:line="85" pos:column="45">-&gt;<pos:position pos:line="85" pos:column="50"/></operator><name pos:line="85" pos:column="47">cols<pos:position pos:line="85" pos:column="51"/></name></name><operator pos:line="85" pos:column="51">-<pos:position pos:line="85" pos:column="52"/></operator><name pos:line="85" pos:column="52">extra_space<pos:position pos:line="85" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="65">FMT_LEFT<pos:position pos:line="85" pos:column="73"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="75">0<pos:position pos:line="85" pos:column="76"/></literal></expr></argument>,
			<argument><expr><name pos:line="86" pos:column="25">prompt<pos:position pos:line="86" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="86" pos:column="33">sizeof <argument_list pos:line="86" pos:column="40">(<argument><expr><name pos:line="86" pos:column="41">prompt<pos:position pos:line="86" pos:column="47"/></name></expr></argument>)<pos:position pos:line="86" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="86" pos:column="50">0<pos:position pos:line="86" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">safe_strcat<pos:position pos:line="87" pos:column="16"/></name> <argument_list pos:line="87" pos:column="17">(<argument><expr><name pos:line="87" pos:column="18">prompt<pos:position pos:line="87" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="87" pos:column="26">sizeof <argument_list pos:line="87" pos:column="33">(<argument><expr><name pos:line="87" pos:column="34">prompt<pos:position pos:line="87" pos:column="40"/></name></expr></argument>)<pos:position pos:line="87" pos:column="41"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="43">"...?"<pos:position pos:line="87" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="51"/></expr_stmt>
  }<pos:position pos:line="88" pos:column="4"/></block></then>
  <else pos:line="89" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="5">safe_strcat<pos:position pos:line="90" pos:column="16"/></name> <argument_list pos:line="90" pos:column="17">(<argument><expr><name pos:line="90" pos:column="18">prompt<pos:position pos:line="90" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="90" pos:column="26">sizeof <argument_list pos:line="90" pos:column="33">(<argument><expr><name pos:line="90" pos:column="34">prompt<pos:position pos:line="90" pos:column="40"/></name></expr></argument>)<pos:position pos:line="90" pos:column="41"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="43">"?"<pos:position pos:line="90" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="48"/></expr_stmt></block></else></if>

  <if pos:line="92" pos:column="3">if <condition pos:line="92" pos:column="6">(<expr><call><name pos:line="92" pos:column="7">query_quadoption<pos:position pos:line="92" pos:column="23"/></name> <argument_list pos:line="92" pos:column="24">(<argument><expr><name pos:line="92" pos:column="25">OPT_BOUNCE<pos:position pos:line="92" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="37">prompt<pos:position pos:line="92" pos:column="43"/></name></expr></argument>)<pos:position pos:line="92" pos:column="44"/></argument_list></call> <operator pos:line="92" pos:column="45">!=<pos:position pos:line="92" pos:column="47"/></operator> <name pos:line="92" pos:column="48">MUTT_YES<pos:position pos:line="92" pos:column="56"/></name></expr>)<pos:position pos:line="92" pos:column="57"/></condition><then pos:line="92" pos:column="57">
  <block pos:line="93" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="94" pos:column="5">rfc822_free_address<pos:position pos:line="94" pos:column="24"/></name> <argument_list pos:line="94" pos:column="25">(<argument><expr><operator pos:line="94" pos:column="26">&amp;<pos:position pos:line="94" pos:column="31"/></operator><name pos:line="94" pos:column="27">adr<pos:position pos:line="94" pos:column="30"/></name></expr></argument>)<pos:position pos:line="94" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="95" pos:column="5">mutt_window_clearline<pos:position pos:line="95" pos:column="26"/></name> <argument_list pos:line="95" pos:column="27">(<argument><expr><name pos:line="95" pos:column="28">MuttMessageWindow<pos:position pos:line="95" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="95" pos:column="47">0<pos:position pos:line="95" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="96" pos:column="5">mutt_message<pos:position pos:line="96" pos:column="17"/></name> <argument_list pos:line="96" pos:column="18">(<argument><expr><ternary><condition><expr><name pos:line="96" pos:column="19">p<pos:position pos:line="96" pos:column="20"/></name></expr> ?<pos:position pos:line="96" pos:column="22"/></condition><then pos:line="96" pos:column="22"> <expr><call><name pos:line="96" pos:column="23">_<pos:position pos:line="96" pos:column="24"/></name><argument_list pos:line="96" pos:column="24">(<argument><expr><literal type="string" pos:line="96" pos:column="25">"Message not bounced."<pos:position pos:line="96" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="48"/></argument_list></call></expr> <pos:position pos:line="96" pos:column="49"/></then><else pos:line="96" pos:column="49">: <expr><call><name pos:line="96" pos:column="51">_<pos:position pos:line="96" pos:column="52"/></name><argument_list pos:line="96" pos:column="52">(<argument><expr><literal type="string" pos:line="96" pos:column="53">"Messages not bounced."<pos:position pos:line="96" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="77"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="96" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="79"/></expr_stmt>
    <return pos:line="97" pos:column="5">return;<pos:position pos:line="97" pos:column="12"/></return>
  }<pos:position pos:line="98" pos:column="4"/></block></then></if>
  
  <expr_stmt><expr><call><name pos:line="100" pos:column="3">mutt_window_clearline<pos:position pos:line="100" pos:column="24"/></name> <argument_list pos:line="100" pos:column="25">(<argument><expr><name pos:line="100" pos:column="26">MuttMessageWindow<pos:position pos:line="100" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="100" pos:column="45">0<pos:position pos:line="100" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="48"/></expr_stmt>
  
  <if pos:line="102" pos:column="3">if <condition pos:line="102" pos:column="6">(<expr><name pos:line="102" pos:column="7">cur<pos:position pos:line="102" pos:column="10"/></name></expr>)<pos:position pos:line="102" pos:column="11"/></condition><then pos:line="102" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><name pos:line="103" pos:column="5">ret<pos:position pos:line="103" pos:column="8"/></name> <operator pos:line="103" pos:column="9">=<pos:position pos:line="103" pos:column="10"/></operator> <call><name pos:line="103" pos:column="11">mutt_bounce_message<pos:position pos:line="103" pos:column="30"/></name> <argument_list pos:line="103" pos:column="31">(<argument><expr><name pos:line="103" pos:column="32">fp<pos:position pos:line="103" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="36">cur<pos:position pos:line="103" pos:column="39"/></name><operator pos:line="103" pos:column="39">-&gt;<pos:position pos:line="103" pos:column="44"/></operator><name pos:line="103" pos:column="41">hdr<pos:position pos:line="103" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="46">adr<pos:position pos:line="103" pos:column="49"/></name></expr></argument>)<pos:position pos:line="103" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="51"/></expr_stmt></block></then>
  <else pos:line="104" pos:column="3">else
  <block pos:line="105" pos:column="3">{
    <for pos:line="106" pos:column="5">for <control pos:line="106" pos:column="9">(<init><expr><name pos:line="106" pos:column="10">i<pos:position pos:line="106" pos:column="11"/></name> <operator pos:line="106" pos:column="12">=<pos:position pos:line="106" pos:column="13"/></operator> <literal type="number" pos:line="106" pos:column="14">0<pos:position pos:line="106" pos:column="15"/></literal></expr>;<pos:position pos:line="106" pos:column="16"/></init> <condition><expr><name pos:line="106" pos:column="17">i<pos:position pos:line="106" pos:column="18"/></name> <operator pos:line="106" pos:column="19">&lt;<pos:position pos:line="106" pos:column="23"/></operator> <name><name pos:line="106" pos:column="21">actx<pos:position pos:line="106" pos:column="25"/></name><operator pos:line="106" pos:column="25">-&gt;<pos:position pos:line="106" pos:column="30"/></operator><name pos:line="106" pos:column="27">idxlen<pos:position pos:line="106" pos:column="33"/></name></name></expr>;<pos:position pos:line="106" pos:column="34"/></condition> <incr><expr><name pos:line="106" pos:column="35">i<pos:position pos:line="106" pos:column="36"/></name><operator pos:line="106" pos:column="36">++<pos:position pos:line="106" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="106" pos:column="39"/></control>
    <block pos:line="107" pos:column="5">{
      <if pos:line="108" pos:column="7">if <condition pos:line="108" pos:column="10">(<expr><name><name pos:line="108" pos:column="11">actx<pos:position pos:line="108" pos:column="15"/></name><operator pos:line="108" pos:column="15">-&gt;<pos:position pos:line="108" pos:column="20"/></operator><name pos:line="108" pos:column="17">idx<pos:position pos:line="108" pos:column="20"/></name><index pos:line="108" pos:column="20">[<expr><name pos:line="108" pos:column="21">i<pos:position pos:line="108" pos:column="22"/></name></expr>]<pos:position pos:line="108" pos:column="23"/></index></name><operator pos:line="108" pos:column="23">-&gt;<pos:position pos:line="108" pos:column="28"/></operator><name><name pos:line="108" pos:column="25">content<pos:position pos:line="108" pos:column="32"/></name><operator pos:line="108" pos:column="32">-&gt;<pos:position pos:line="108" pos:column="37"/></operator><name pos:line="108" pos:column="34">tagged<pos:position pos:line="108" pos:column="40"/></name></name></expr>)<pos:position pos:line="108" pos:column="41"/></condition><then pos:line="108" pos:column="41">
	<block type="pseudo"><if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><call><name pos:line="109" pos:column="13">mutt_bounce_message<pos:position pos:line="109" pos:column="32"/></name> <argument_list pos:line="109" pos:column="33">(<argument><expr><name><name pos:line="109" pos:column="34">actx<pos:position pos:line="109" pos:column="38"/></name><operator pos:line="109" pos:column="38">-&gt;<pos:position pos:line="109" pos:column="43"/></operator><name pos:line="109" pos:column="40">idx<pos:position pos:line="109" pos:column="43"/></name><index pos:line="109" pos:column="43">[<expr><name pos:line="109" pos:column="44">i<pos:position pos:line="109" pos:column="45"/></name></expr>]<pos:position pos:line="109" pos:column="46"/></index></name><operator pos:line="109" pos:column="46">-&gt;<pos:position pos:line="109" pos:column="51"/></operator><name pos:line="109" pos:column="48">fp<pos:position pos:line="109" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="52">actx<pos:position pos:line="109" pos:column="56"/></name><operator pos:line="109" pos:column="56">-&gt;<pos:position pos:line="109" pos:column="61"/></operator><name pos:line="109" pos:column="58">idx<pos:position pos:line="109" pos:column="61"/></name><index pos:line="109" pos:column="61">[<expr><name pos:line="109" pos:column="62">i<pos:position pos:line="109" pos:column="63"/></name></expr>]<pos:position pos:line="109" pos:column="64"/></index></name><operator pos:line="109" pos:column="64">-&gt;<pos:position pos:line="109" pos:column="69"/></operator><name><name pos:line="109" pos:column="66">content<pos:position pos:line="109" pos:column="73"/></name><operator pos:line="109" pos:column="73">-&gt;<pos:position pos:line="109" pos:column="78"/></operator><name pos:line="109" pos:column="75">hdr<pos:position pos:line="109" pos:column="78"/></name></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="80">adr<pos:position pos:line="109" pos:column="83"/></name></expr></argument>)<pos:position pos:line="109" pos:column="84"/></argument_list></call></expr>)<pos:position pos:line="109" pos:column="85"/></condition><then pos:line="109" pos:column="85">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="110" pos:column="11">ret<pos:position pos:line="110" pos:column="14"/></name> <operator pos:line="110" pos:column="15">=<pos:position pos:line="110" pos:column="16"/></operator> <literal type="number" pos:line="110" pos:column="17">1<pos:position pos:line="110" pos:column="18"/></literal></expr>;<pos:position pos:line="110" pos:column="19"/></expr_stmt></block></then></if></block></then></if>
    }<pos:position pos:line="111" pos:column="6"/></block></for>
  }<pos:position pos:line="112" pos:column="4"/></block></else></if>

  <if pos:line="114" pos:column="3">if <condition pos:line="114" pos:column="6">(<expr><operator pos:line="114" pos:column="7">!<pos:position pos:line="114" pos:column="8"/></operator><name pos:line="114" pos:column="8">ret<pos:position pos:line="114" pos:column="11"/></name></expr>)<pos:position pos:line="114" pos:column="12"/></condition><then pos:line="114" pos:column="12">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="115" pos:column="5">mutt_message<pos:position pos:line="115" pos:column="17"/></name> <argument_list pos:line="115" pos:column="18">(<argument><expr><ternary><condition><expr><name pos:line="115" pos:column="19">p<pos:position pos:line="115" pos:column="20"/></name></expr> ?<pos:position pos:line="115" pos:column="22"/></condition><then pos:line="115" pos:column="22"> <expr><call><name pos:line="115" pos:column="23">_<pos:position pos:line="115" pos:column="24"/></name><argument_list pos:line="115" pos:column="24">(<argument><expr><literal type="string" pos:line="115" pos:column="25">"Message bounced."<pos:position pos:line="115" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="44"/></argument_list></call></expr> <pos:position pos:line="115" pos:column="45"/></then><else pos:line="115" pos:column="45">: <expr><call><name pos:line="115" pos:column="47">_<pos:position pos:line="115" pos:column="48"/></name><argument_list pos:line="115" pos:column="48">(<argument><expr><literal type="string" pos:line="115" pos:column="49">"Messages bounced."<pos:position pos:line="115" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="69"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="115" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="71"/></expr_stmt></block></then>
  <else pos:line="116" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="117" pos:column="5">mutt_error<pos:position pos:line="117" pos:column="15"/></name> <argument_list pos:line="117" pos:column="16">(<argument><expr><ternary><condition><expr><name pos:line="117" pos:column="17">p<pos:position pos:line="117" pos:column="18"/></name></expr> ?<pos:position pos:line="117" pos:column="20"/></condition><then pos:line="117" pos:column="20"> <expr><call><name pos:line="117" pos:column="21">_<pos:position pos:line="117" pos:column="22"/></name><argument_list pos:line="117" pos:column="22">(<argument><expr><literal type="string" pos:line="117" pos:column="23">"Error bouncing message!"<pos:position pos:line="117" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="49"/></argument_list></call></expr> <pos:position pos:line="117" pos:column="50"/></then><else pos:line="117" pos:column="50">: <expr><call><name pos:line="117" pos:column="52">_<pos:position pos:line="117" pos:column="53"/></name><argument_list pos:line="117" pos:column="53">(<argument><expr><literal type="string" pos:line="117" pos:column="54">"Error bouncing messages!"<pos:position pos:line="117" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="81"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="117" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="83"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="119" pos:column="3">rfc822_free_address<pos:position pos:line="119" pos:column="22"/></name> <argument_list pos:line="119" pos:column="23">(<argument><expr><operator pos:line="119" pos:column="24">&amp;<pos:position pos:line="119" pos:column="29"/></operator><name pos:line="119" pos:column="25">adr<pos:position pos:line="119" pos:column="28"/></name></expr></argument>)<pos:position pos:line="119" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="30"/></expr_stmt>
}<pos:position pos:line="120" pos:column="2"/></block></function></unit>

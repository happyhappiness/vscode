<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_943_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_FormatString<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">dest<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>,		<comment type="block" pos:line="1" pos:column="49">/* output buffer */</comment>
			<parameter><decl><type><name pos:line="2" pos:column="25">size_t<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">destlen<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>,		<comment type="block" pos:line="2" pos:column="49">/* output buffer len */</comment>
			<parameter><decl><type><specifier pos:line="3" pos:column="25">const<pos:position pos:line="3" pos:column="30"/></specifier> <name pos:line="3" pos:column="31">char<pos:position pos:line="3" pos:column="35"/></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">src<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>,	<comment type="block" pos:line="3" pos:column="49">/* template string */</comment>
			<parameter><decl><type><name pos:line="4" pos:column="25">format_t<pos:position pos:line="4" pos:column="33"/></name> <modifier pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></modifier></type><name pos:line="4" pos:column="35">callback<pos:position pos:line="4" pos:column="43"/></name></decl></parameter>,	<comment type="block" pos:line="4" pos:column="49">/* callback for processing */</comment>
			<parameter><decl><type><name pos:line="5" pos:column="25">unsigned<pos:position pos:line="5" pos:column="33"/></name> <name pos:line="5" pos:column="34">long<pos:position pos:line="5" pos:column="38"/></name></type> <name pos:line="5" pos:column="39">data<pos:position pos:line="5" pos:column="43"/></name></decl></parameter>,	<comment type="block" pos:line="5" pos:column="49">/* callback data */</comment>
			<parameter><decl><type><name pos:line="6" pos:column="25">format_flag<pos:position pos:line="6" pos:column="36"/></name></type> <name pos:line="6" pos:column="37">flags<pos:position pos:line="6" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="43"/></parameter_list>	<comment type="block" pos:line="6" pos:column="49">/* callback flags */</comment>
<block pos:line="7" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">prefix<pos:position pos:line="8" pos:column="14"/></name><index pos:line="8" pos:column="14">[<expr><name pos:line="8" pos:column="15">SHORT_STRING<pos:position pos:line="8" pos:column="27"/></name></expr>]<pos:position pos:line="8" pos:column="28"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="8" pos:column="30">buf<pos:position pos:line="8" pos:column="33"/></name><index pos:line="8" pos:column="33">[<expr><name pos:line="8" pos:column="34">LONG_STRING<pos:position pos:line="8" pos:column="45"/></name></expr>]<pos:position pos:line="8" pos:column="46"/></index></name></decl>, <modifier pos:line="8" pos:column="48">*<pos:position pos:line="8" pos:column="49"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="49">cp<pos:position pos:line="8" pos:column="51"/></name></decl>, <modifier pos:line="8" pos:column="53">*<pos:position pos:line="8" pos:column="54"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="54">wptr<pos:position pos:line="8" pos:column="58"/></name> <init pos:line="8" pos:column="59">= <expr><name pos:line="8" pos:column="61">dest<pos:position pos:line="8" pos:column="65"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="67">ch<pos:position pos:line="8" pos:column="69"/></name></decl>;<pos:position pos:line="8" pos:column="70"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name></type> <name><name pos:line="9" pos:column="8">ifstring<pos:position pos:line="9" pos:column="16"/></name><index pos:line="9" pos:column="16">[<expr><name pos:line="9" pos:column="17">SHORT_STRING<pos:position pos:line="9" pos:column="29"/></name></expr>]<pos:position pos:line="9" pos:column="30"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="9" pos:column="32">elsestring<pos:position pos:line="9" pos:column="42"/></name><index pos:line="9" pos:column="42">[<expr><name pos:line="9" pos:column="43">SHORT_STRING<pos:position pos:line="9" pos:column="55"/></name></expr>]<pos:position pos:line="9" pos:column="56"/></index></name></decl>;<pos:position pos:line="9" pos:column="57"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">size_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">wlen<pos:position pos:line="10" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="16">count<pos:position pos:line="10" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="23">len<pos:position pos:line="10" pos:column="26"/></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="12" pos:column="3">prefix<pos:position pos:line="12" pos:column="9"/></name><index pos:line="12" pos:column="9">[<expr><literal type="number" pos:line="12" pos:column="10">0<pos:position pos:line="12" pos:column="11"/></literal></expr>]<pos:position pos:line="12" pos:column="12"/></index></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <literal type="char" pos:line="12" pos:column="15">'\0'<pos:position pos:line="12" pos:column="19"/></literal></expr>;<pos:position pos:line="12" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name pos:line="13" pos:column="3">destlen<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">--<pos:position pos:line="13" pos:column="12"/></operator></expr>;<pos:position pos:line="13" pos:column="13"/></expr_stmt> <comment type="block" pos:line="13" pos:column="14">/* save room for the terminal \0 */</comment>
  <expr_stmt><expr><name pos:line="14" pos:column="3">wlen<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">=<pos:position pos:line="14" pos:column="9"/></operator> <ternary><condition><expr><operator pos:line="14" pos:column="10">(<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="11">flags<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">&amp;<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="19">M_FORMAT_ARROWCURSOR<pos:position pos:line="14" pos:column="39"/></name> <operator pos:line="14" pos:column="40">&amp;&amp;<pos:position pos:line="14" pos:column="50"/></operator> <call><name pos:line="14" pos:column="43">option<pos:position pos:line="14" pos:column="49"/></name> <argument_list pos:line="14" pos:column="50">(<argument><expr><name pos:line="14" pos:column="51">OPTARROWCURSOR<pos:position pos:line="14" pos:column="65"/></name></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call><operator pos:line="14" pos:column="66">)<pos:position pos:line="14" pos:column="67"/></operator></expr> ?<pos:position pos:line="14" pos:column="69"/></condition><then pos:line="14" pos:column="69"> <expr><literal type="number" pos:line="14" pos:column="70">3<pos:position pos:line="14" pos:column="71"/></literal></expr> <pos:position pos:line="14" pos:column="72"/></then><else pos:line="14" pos:column="72">: <expr><literal type="number" pos:line="14" pos:column="74">0<pos:position pos:line="14" pos:column="75"/></literal></expr></else></ternary></expr>;<pos:position pos:line="14" pos:column="76"/></expr_stmt>
    
  <while pos:line="16" pos:column="3">while <condition pos:line="16" pos:column="9">(<expr><operator pos:line="16" pos:column="10">*<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="11">src<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">&amp;&amp;<pos:position pos:line="16" pos:column="25"/></operator> <name pos:line="16" pos:column="18">wlen<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">&lt;<pos:position pos:line="16" pos:column="27"/></operator> <name pos:line="16" pos:column="25">destlen<pos:position pos:line="16" pos:column="32"/></name></expr>)<pos:position pos:line="16" pos:column="33"/></condition>
  <block pos:line="17" pos:column="3">{
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">*<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">src<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">==<pos:position pos:line="18" pos:column="16"/></operator> <literal type="char" pos:line="18" pos:column="17">'%'<pos:position pos:line="18" pos:column="20"/></literal></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21">
    <block pos:line="19" pos:column="5">{
      <if pos:line="20" pos:column="7">if <condition pos:line="20" pos:column="10">(<expr><operator pos:line="20" pos:column="11">*<pos:position pos:line="20" pos:column="12"/></operator><operator pos:line="20" pos:column="12">++<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">src<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">==<pos:position pos:line="20" pos:column="20"/></operator> <literal type="char" pos:line="20" pos:column="21">'%'<pos:position pos:line="20" pos:column="24"/></literal></expr>)<pos:position pos:line="20" pos:column="25"/></condition><then pos:line="20" pos:column="25">
      <block pos:line="21" pos:column="7">{
	<expr_stmt><expr><operator pos:line="22" pos:column="9">*<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">wptr<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">++<pos:position pos:line="22" pos:column="16"/></operator> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <literal type="char" pos:line="22" pos:column="19">'%'<pos:position pos:line="22" pos:column="22"/></literal></expr>;<pos:position pos:line="22" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name pos:line="23" pos:column="9">wlen<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">++<pos:position pos:line="23" pos:column="15"/></operator></expr>;<pos:position pos:line="23" pos:column="16"/></expr_stmt>
	<expr_stmt><expr><name pos:line="24" pos:column="9">src<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">++<pos:position pos:line="24" pos:column="14"/></operator></expr>;<pos:position pos:line="24" pos:column="15"/></expr_stmt>
	<continue pos:line="25" pos:column="9">continue;<pos:position pos:line="25" pos:column="18"/></continue>
      }<pos:position pos:line="26" pos:column="8"/></block></then></if>

      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><operator pos:line="28" pos:column="11">*<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="12">src<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">==<pos:position pos:line="28" pos:column="18"/></operator> <literal type="char" pos:line="28" pos:column="19">'?'<pos:position pos:line="28" pos:column="22"/></literal></expr>)<pos:position pos:line="28" pos:column="23"/></condition><then pos:line="28" pos:column="23">
      <block pos:line="29" pos:column="7">{
	<expr_stmt><expr><name pos:line="30" pos:column="9">flags<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">|=<pos:position pos:line="30" pos:column="17"/></operator> <name pos:line="30" pos:column="18">M_FORMAT_OPTIONAL<pos:position pos:line="30" pos:column="35"/></name></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name pos:line="31" pos:column="9">src<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">++<pos:position pos:line="31" pos:column="14"/></operator></expr>;<pos:position pos:line="31" pos:column="15"/></expr_stmt>
      }<pos:position pos:line="32" pos:column="8"/></block></then>
      <else pos:line="33" pos:column="7">else
      <block pos:line="34" pos:column="7">{
	<expr_stmt><expr><name pos:line="35" pos:column="9">flags<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">&amp;=<pos:position pos:line="35" pos:column="21"/></operator> <operator pos:line="35" pos:column="18">~<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="19">M_FORMAT_OPTIONAL<pos:position pos:line="35" pos:column="36"/></name></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt>

	<comment type="block" pos:line="37" pos:column="9">/* eat the format string */</comment>
	<expr_stmt><expr><name pos:line="38" pos:column="9">cp<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">=<pos:position pos:line="38" pos:column="13"/></operator> <name pos:line="38" pos:column="14">prefix<pos:position pos:line="38" pos:column="20"/></name></expr>;<pos:position pos:line="38" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="39" pos:column="9">count<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">=<pos:position pos:line="39" pos:column="16"/></operator> <literal type="number" pos:line="39" pos:column="17">0<pos:position pos:line="39" pos:column="18"/></literal></expr>;<pos:position pos:line="39" pos:column="19"/></expr_stmt>
	<while pos:line="40" pos:column="9">while <condition pos:line="40" pos:column="15">(<expr><name pos:line="40" pos:column="16">count<pos:position pos:line="40" pos:column="21"/></name> <operator pos:line="40" pos:column="22">&lt;<pos:position pos:line="40" pos:column="26"/></operator> <sizeof pos:line="40" pos:column="24">sizeof <argument_list pos:line="40" pos:column="31">(<argument><expr><name pos:line="40" pos:column="32">prefix<pos:position pos:line="40" pos:column="38"/></name></expr></argument>)<pos:position pos:line="40" pos:column="39"/></argument_list></sizeof> <operator pos:line="40" pos:column="40">&amp;&amp;<pos:position pos:line="40" pos:column="50"/></operator>
	       <operator pos:line="41" pos:column="16">(<pos:position pos:line="41" pos:column="17"/></operator><call><name pos:line="41" pos:column="17">isdigit<pos:position pos:line="41" pos:column="24"/></name> <argument_list pos:line="41" pos:column="25">(<argument><expr><operator pos:line="41" pos:column="26">(<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="27">unsigned<pos:position pos:line="41" pos:column="35"/></name> <name pos:line="41" pos:column="36">char<pos:position pos:line="41" pos:column="40"/></name><operator pos:line="41" pos:column="40">)<pos:position pos:line="41" pos:column="41"/></operator> <operator pos:line="41" pos:column="42">*<pos:position pos:line="41" pos:column="43"/></operator><name pos:line="41" pos:column="43">src<pos:position pos:line="41" pos:column="46"/></name></expr></argument>)<pos:position pos:line="41" pos:column="47"/></argument_list></call> <operator pos:line="41" pos:column="48">||<pos:position pos:line="41" pos:column="50"/></operator> <operator pos:line="41" pos:column="51">*<pos:position pos:line="41" pos:column="52"/></operator><name pos:line="41" pos:column="52">src<pos:position pos:line="41" pos:column="55"/></name> <operator pos:line="41" pos:column="56">==<pos:position pos:line="41" pos:column="58"/></operator> <literal type="char" pos:line="41" pos:column="59">'.'<pos:position pos:line="41" pos:column="62"/></literal> <operator pos:line="41" pos:column="63">||<pos:position pos:line="41" pos:column="65"/></operator> <operator pos:line="41" pos:column="66">*<pos:position pos:line="41" pos:column="67"/></operator><name pos:line="41" pos:column="67">src<pos:position pos:line="41" pos:column="70"/></name> <operator pos:line="41" pos:column="71">==<pos:position pos:line="41" pos:column="73"/></operator> <literal type="char" pos:line="41" pos:column="74">'-'<pos:position pos:line="41" pos:column="77"/></literal><operator pos:line="41" pos:column="77">)<pos:position pos:line="41" pos:column="78"/></operator></expr>)<pos:position pos:line="41" pos:column="79"/></condition>
	<block pos:line="42" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="43" pos:column="11">*<pos:position pos:line="43" pos:column="12"/></operator><name pos:line="43" pos:column="12">cp<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">++<pos:position pos:line="43" pos:column="16"/></operator> <operator pos:line="43" pos:column="17">=<pos:position pos:line="43" pos:column="18"/></operator> <operator pos:line="43" pos:column="19">*<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="20">src<pos:position pos:line="43" pos:column="23"/></name><operator pos:line="43" pos:column="23">++<pos:position pos:line="43" pos:column="25"/></operator></expr>;<pos:position pos:line="43" pos:column="26"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="44" pos:column="11">count<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">++<pos:position pos:line="44" pos:column="18"/></operator></expr>;<pos:position pos:line="44" pos:column="19"/></expr_stmt>
	}<pos:position pos:line="45" pos:column="10"/></block></while>
	<expr_stmt><expr><operator pos:line="46" pos:column="9">*<pos:position pos:line="46" pos:column="10"/></operator><name pos:line="46" pos:column="10">cp<pos:position pos:line="46" pos:column="12"/></name> <operator pos:line="46" pos:column="13">=<pos:position pos:line="46" pos:column="14"/></operator> <literal type="number" pos:line="46" pos:column="15">0<pos:position pos:line="46" pos:column="16"/></literal></expr>;<pos:position pos:line="46" pos:column="17"/></expr_stmt>
      }<pos:position pos:line="47" pos:column="8"/></block></else></if>

      <if pos:line="49" pos:column="7">if <condition pos:line="49" pos:column="10">(<expr><operator pos:line="49" pos:column="11">!<pos:position pos:line="49" pos:column="12"/></operator><operator pos:line="49" pos:column="12">*<pos:position pos:line="49" pos:column="13"/></operator><name pos:line="49" pos:column="13">src<pos:position pos:line="49" pos:column="16"/></name></expr>)<pos:position pos:line="49" pos:column="17"/></condition><then pos:line="49" pos:column="17">
	<block type="pseudo"><break pos:line="50" pos:column="9">break;<pos:position pos:line="50" pos:column="15"/></break></block></then></if> <comment type="block" pos:line="50" pos:column="16">/* bad format */</comment>

      <expr_stmt><expr><name pos:line="52" pos:column="7">ch<pos:position pos:line="52" pos:column="9"/></name> <operator pos:line="52" pos:column="10">=<pos:position pos:line="52" pos:column="11"/></operator> <operator pos:line="52" pos:column="12">*<pos:position pos:line="52" pos:column="13"/></operator><name pos:line="52" pos:column="13">src<pos:position pos:line="52" pos:column="16"/></name><operator pos:line="52" pos:column="16">++<pos:position pos:line="52" pos:column="18"/></operator></expr>;<pos:position pos:line="52" pos:column="19"/></expr_stmt> <comment type="block" pos:line="52" pos:column="20">/* save the character to switch on */</comment>

      <if pos:line="54" pos:column="7">if <condition pos:line="54" pos:column="10">(<expr><name pos:line="54" pos:column="11">flags<pos:position pos:line="54" pos:column="16"/></name> <operator pos:line="54" pos:column="17">&amp;<pos:position pos:line="54" pos:column="22"/></operator> <name pos:line="54" pos:column="19">M_FORMAT_OPTIONAL<pos:position pos:line="54" pos:column="36"/></name></expr>)<pos:position pos:line="54" pos:column="37"/></condition><then pos:line="54" pos:column="37">
      <block pos:line="55" pos:column="7">{
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><operator pos:line="56" pos:column="13">*<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="14">src<pos:position pos:line="56" pos:column="17"/></name> <operator pos:line="56" pos:column="18">!=<pos:position pos:line="56" pos:column="20"/></operator> <literal type="char" pos:line="56" pos:column="21">'?'<pos:position pos:line="56" pos:column="24"/></literal></expr>)<pos:position pos:line="56" pos:column="25"/></condition><then pos:line="56" pos:column="25">
          <block type="pseudo"><break pos:line="57" pos:column="11">break;<pos:position pos:line="57" pos:column="17"/></break></block></then></if> <comment type="block" pos:line="57" pos:column="18">/* bad format */</comment>
        <expr_stmt><expr><name pos:line="58" pos:column="9">src<pos:position pos:line="58" pos:column="12"/></name><operator pos:line="58" pos:column="12">++<pos:position pos:line="58" pos:column="14"/></operator></expr>;<pos:position pos:line="58" pos:column="15"/></expr_stmt>

        <comment type="block" pos:line="60" pos:column="9">/* eat the `if' part of the string */</comment>
        <expr_stmt><expr><name pos:line="61" pos:column="9">cp<pos:position pos:line="61" pos:column="11"/></name> <operator pos:line="61" pos:column="12">=<pos:position pos:line="61" pos:column="13"/></operator> <name pos:line="61" pos:column="14">ifstring<pos:position pos:line="61" pos:column="22"/></name></expr>;<pos:position pos:line="61" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name pos:line="62" pos:column="9">count<pos:position pos:line="62" pos:column="14"/></name> <operator pos:line="62" pos:column="15">=<pos:position pos:line="62" pos:column="16"/></operator> <literal type="number" pos:line="62" pos:column="17">0<pos:position pos:line="62" pos:column="18"/></literal></expr>;<pos:position pos:line="62" pos:column="19"/></expr_stmt>
        <while pos:line="63" pos:column="9">while <condition pos:line="63" pos:column="15">(<expr><name pos:line="63" pos:column="16">count<pos:position pos:line="63" pos:column="21"/></name> <operator pos:line="63" pos:column="22">&lt;<pos:position pos:line="63" pos:column="26"/></operator> <sizeof pos:line="63" pos:column="24">sizeof <argument_list pos:line="63" pos:column="31">(<argument><expr><name pos:line="63" pos:column="32">ifstring<pos:position pos:line="63" pos:column="40"/></name></expr></argument>)<pos:position pos:line="63" pos:column="41"/></argument_list></sizeof> <operator pos:line="63" pos:column="42">&amp;&amp;<pos:position pos:line="63" pos:column="52"/></operator> <operator pos:line="63" pos:column="45">*<pos:position pos:line="63" pos:column="46"/></operator><name pos:line="63" pos:column="46">src<pos:position pos:line="63" pos:column="49"/></name> <operator pos:line="63" pos:column="50">&amp;&amp;<pos:position pos:line="63" pos:column="60"/></operator> <operator pos:line="63" pos:column="53">*<pos:position pos:line="63" pos:column="54"/></operator><name pos:line="63" pos:column="54">src<pos:position pos:line="63" pos:column="57"/></name> <operator pos:line="63" pos:column="58">!=<pos:position pos:line="63" pos:column="60"/></operator> <literal type="char" pos:line="63" pos:column="61">'?'<pos:position pos:line="63" pos:column="64"/></literal> <operator pos:line="63" pos:column="65">&amp;&amp;<pos:position pos:line="63" pos:column="75"/></operator> <operator pos:line="63" pos:column="68">*<pos:position pos:line="63" pos:column="69"/></operator><name pos:line="63" pos:column="69">src<pos:position pos:line="63" pos:column="72"/></name> <operator pos:line="63" pos:column="73">!=<pos:position pos:line="63" pos:column="75"/></operator> <literal type="char" pos:line="63" pos:column="76">'&amp;'<pos:position pos:line="63" pos:column="83"/></literal></expr>)<pos:position pos:line="63" pos:column="80"/></condition>
	<block pos:line="64" pos:column="9">{
          <expr_stmt><expr><operator pos:line="65" pos:column="11">*<pos:position pos:line="65" pos:column="12"/></operator><name pos:line="65" pos:column="12">cp<pos:position pos:line="65" pos:column="14"/></name><operator pos:line="65" pos:column="14">++<pos:position pos:line="65" pos:column="16"/></operator> <operator pos:line="65" pos:column="17">=<pos:position pos:line="65" pos:column="18"/></operator> <operator pos:line="65" pos:column="19">*<pos:position pos:line="65" pos:column="20"/></operator><name pos:line="65" pos:column="20">src<pos:position pos:line="65" pos:column="23"/></name><operator pos:line="65" pos:column="23">++<pos:position pos:line="65" pos:column="25"/></operator></expr>;<pos:position pos:line="65" pos:column="26"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="66" pos:column="11">count<pos:position pos:line="66" pos:column="16"/></name><operator pos:line="66" pos:column="16">++<pos:position pos:line="66" pos:column="18"/></operator></expr>;<pos:position pos:line="66" pos:column="19"/></expr_stmt>
	}<pos:position pos:line="67" pos:column="10"/></block></while>
        <expr_stmt><expr><operator pos:line="68" pos:column="9">*<pos:position pos:line="68" pos:column="10"/></operator><name pos:line="68" pos:column="10">cp<pos:position pos:line="68" pos:column="12"/></name> <operator pos:line="68" pos:column="13">=<pos:position pos:line="68" pos:column="14"/></operator> <literal type="number" pos:line="68" pos:column="15">0<pos:position pos:line="68" pos:column="16"/></literal></expr>;<pos:position pos:line="68" pos:column="17"/></expr_stmt>

	<comment type="block" pos:line="70" pos:column="9">/* eat the `else' part of the string (optional) */</comment>
	<if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><operator pos:line="71" pos:column="13">*<pos:position pos:line="71" pos:column="14"/></operator><name pos:line="71" pos:column="14">src<pos:position pos:line="71" pos:column="17"/></name> <operator pos:line="71" pos:column="18">==<pos:position pos:line="71" pos:column="20"/></operator> <literal type="char" pos:line="71" pos:column="21">'&amp;'<pos:position pos:line="71" pos:column="28"/></literal></expr>)<pos:position pos:line="71" pos:column="25"/></condition><then pos:line="71" pos:column="25">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="11">src<pos:position pos:line="72" pos:column="14"/></name><operator pos:line="72" pos:column="14">++<pos:position pos:line="72" pos:column="16"/></operator></expr>;<pos:position pos:line="72" pos:column="17"/></expr_stmt></block></then></if> <comment type="block" pos:line="72" pos:column="18">/* skip the &amp; */</comment>
	<expr_stmt><expr><name pos:line="73" pos:column="9">cp<pos:position pos:line="73" pos:column="11"/></name> <operator pos:line="73" pos:column="12">=<pos:position pos:line="73" pos:column="13"/></operator> <name pos:line="73" pos:column="14">elsestring<pos:position pos:line="73" pos:column="24"/></name></expr>;<pos:position pos:line="73" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name pos:line="74" pos:column="9">count<pos:position pos:line="74" pos:column="14"/></name> <operator pos:line="74" pos:column="15">=<pos:position pos:line="74" pos:column="16"/></operator> <literal type="number" pos:line="74" pos:column="17">0<pos:position pos:line="74" pos:column="18"/></literal></expr>;<pos:position pos:line="74" pos:column="19"/></expr_stmt>
	<while pos:line="75" pos:column="9">while <condition pos:line="75" pos:column="15">(<expr><name pos:line="75" pos:column="16">count<pos:position pos:line="75" pos:column="21"/></name> <operator pos:line="75" pos:column="22">&lt;<pos:position pos:line="75" pos:column="26"/></operator> <sizeof pos:line="75" pos:column="24">sizeof <argument_list pos:line="75" pos:column="31">(<argument><expr><name pos:line="75" pos:column="32">elsestring<pos:position pos:line="75" pos:column="42"/></name></expr></argument>)<pos:position pos:line="75" pos:column="43"/></argument_list></sizeof> <operator pos:line="75" pos:column="44">&amp;&amp;<pos:position pos:line="75" pos:column="54"/></operator> <operator pos:line="75" pos:column="47">*<pos:position pos:line="75" pos:column="48"/></operator><name pos:line="75" pos:column="48">src<pos:position pos:line="75" pos:column="51"/></name> <operator pos:line="75" pos:column="52">&amp;&amp;<pos:position pos:line="75" pos:column="62"/></operator> <operator pos:line="75" pos:column="55">*<pos:position pos:line="75" pos:column="56"/></operator><name pos:line="75" pos:column="56">src<pos:position pos:line="75" pos:column="59"/></name> <operator pos:line="75" pos:column="60">!=<pos:position pos:line="75" pos:column="62"/></operator> <literal type="char" pos:line="75" pos:column="63">'?'<pos:position pos:line="75" pos:column="66"/></literal></expr>)<pos:position pos:line="75" pos:column="67"/></condition>
	<block pos:line="76" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="77" pos:column="11">*<pos:position pos:line="77" pos:column="12"/></operator><name pos:line="77" pos:column="12">cp<pos:position pos:line="77" pos:column="14"/></name><operator pos:line="77" pos:column="14">++<pos:position pos:line="77" pos:column="16"/></operator> <operator pos:line="77" pos:column="17">=<pos:position pos:line="77" pos:column="18"/></operator> <operator pos:line="77" pos:column="19">*<pos:position pos:line="77" pos:column="20"/></operator><name pos:line="77" pos:column="20">src<pos:position pos:line="77" pos:column="23"/></name><operator pos:line="77" pos:column="23">++<pos:position pos:line="77" pos:column="25"/></operator></expr>;<pos:position pos:line="77" pos:column="26"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="78" pos:column="11">count<pos:position pos:line="78" pos:column="16"/></name><operator pos:line="78" pos:column="16">++<pos:position pos:line="78" pos:column="18"/></operator></expr>;<pos:position pos:line="78" pos:column="19"/></expr_stmt>
	}<pos:position pos:line="79" pos:column="10"/></block></while>
	<expr_stmt><expr><operator pos:line="80" pos:column="9">*<pos:position pos:line="80" pos:column="10"/></operator><name pos:line="80" pos:column="10">cp<pos:position pos:line="80" pos:column="12"/></name> <operator pos:line="80" pos:column="13">=<pos:position pos:line="80" pos:column="14"/></operator> <literal type="number" pos:line="80" pos:column="15">0<pos:position pos:line="80" pos:column="16"/></literal></expr>;<pos:position pos:line="80" pos:column="17"/></expr_stmt>

	<if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><operator pos:line="82" pos:column="13">!<pos:position pos:line="82" pos:column="14"/></operator><operator pos:line="82" pos:column="14">*<pos:position pos:line="82" pos:column="15"/></operator><name pos:line="82" pos:column="15">src<pos:position pos:line="82" pos:column="18"/></name></expr>)<pos:position pos:line="82" pos:column="19"/></condition><then pos:line="82" pos:column="19">
	  <block type="pseudo"><break pos:line="83" pos:column="11">break;<pos:position pos:line="83" pos:column="17"/></break></block></then></if> <comment type="block" pos:line="83" pos:column="18">/* bad format */</comment>

        <expr_stmt><expr><name pos:line="85" pos:column="9">src<pos:position pos:line="85" pos:column="12"/></name><operator pos:line="85" pos:column="12">++<pos:position pos:line="85" pos:column="14"/></operator></expr>;<pos:position pos:line="85" pos:column="15"/></expr_stmt> <comment type="block" pos:line="85" pos:column="16">/* move past the trailing `?' */</comment>
      }<pos:position pos:line="86" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="88" pos:column="7">/* handle generic cases first */</comment>
      <if pos:line="89" pos:column="7">if <condition pos:line="89" pos:column="10">(<expr><name pos:line="89" pos:column="11">ch<pos:position pos:line="89" pos:column="13"/></name> <operator pos:line="89" pos:column="14">==<pos:position pos:line="89" pos:column="16"/></operator> <literal type="char" pos:line="89" pos:column="17">'&gt;'<pos:position pos:line="89" pos:column="23"/></literal></expr>)<pos:position pos:line="89" pos:column="21"/></condition><then pos:line="89" pos:column="21">
      <block pos:line="90" pos:column="7">{
	<comment type="block" pos:line="91" pos:column="9">/* right justify to EOL */</comment>
	<expr_stmt><expr><name pos:line="92" pos:column="9">ch<pos:position pos:line="92" pos:column="11"/></name> <operator pos:line="92" pos:column="12">=<pos:position pos:line="92" pos:column="13"/></operator> <operator pos:line="92" pos:column="14">*<pos:position pos:line="92" pos:column="15"/></operator><name pos:line="92" pos:column="15">src<pos:position pos:line="92" pos:column="18"/></name><operator pos:line="92" pos:column="18">++<pos:position pos:line="92" pos:column="20"/></operator></expr>;<pos:position pos:line="92" pos:column="21"/></expr_stmt> <comment type="block" pos:line="92" pos:column="22">/* pad char */</comment>
	<comment type="block" pos:line="93" pos:column="9">/* calculate space left on line.  if we've already written more data
	   than will fit on the line, ignore the rest of the line */</comment>
	<expr_stmt><expr><name pos:line="95" pos:column="9">count<pos:position pos:line="95" pos:column="14"/></name> <operator pos:line="95" pos:column="15">=<pos:position pos:line="95" pos:column="16"/></operator> <operator pos:line="95" pos:column="17">(<pos:position pos:line="95" pos:column="18"/></operator><ternary><condition><expr><name pos:line="95" pos:column="18">COLS<pos:position pos:line="95" pos:column="22"/></name> <operator pos:line="95" pos:column="23">&lt;<pos:position pos:line="95" pos:column="27"/></operator> <name pos:line="95" pos:column="25">destlen<pos:position pos:line="95" pos:column="32"/></name></expr> ?<pos:position pos:line="95" pos:column="34"/></condition><then pos:line="95" pos:column="34"> <expr><name pos:line="95" pos:column="35">COLS<pos:position pos:line="95" pos:column="39"/></name></expr> <pos:position pos:line="95" pos:column="40"/></then><else pos:line="95" pos:column="40">: <expr><name pos:line="95" pos:column="42">destlen<pos:position pos:line="95" pos:column="49"/></name></expr></else></ternary><operator pos:line="95" pos:column="49">)<pos:position pos:line="95" pos:column="50"/></operator></expr>;<pos:position pos:line="95" pos:column="51"/></expr_stmt>
	<if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><name pos:line="96" pos:column="13">count<pos:position pos:line="96" pos:column="18"/></name> <operator pos:line="96" pos:column="19">&gt;<pos:position pos:line="96" pos:column="23"/></operator> <name pos:line="96" pos:column="21">wlen<pos:position pos:line="96" pos:column="25"/></name></expr>)<pos:position pos:line="96" pos:column="26"/></condition><then pos:line="96" pos:column="26">
	<block pos:line="97" pos:column="9">{
	  <expr_stmt><expr><name pos:line="98" pos:column="11">count<pos:position pos:line="98" pos:column="16"/></name> <operator pos:line="98" pos:column="17">-=<pos:position pos:line="98" pos:column="19"/></operator> <name pos:line="98" pos:column="20">wlen<pos:position pos:line="98" pos:column="24"/></name></expr>;<pos:position pos:line="98" pos:column="25"/></expr_stmt> <comment type="block" pos:line="98" pos:column="26">/* how many chars left on this line */</comment>
	  <expr_stmt><expr><call><name pos:line="99" pos:column="11">mutt_FormatString<pos:position pos:line="99" pos:column="28"/></name> <argument_list pos:line="99" pos:column="29">(<argument><expr><name pos:line="99" pos:column="30">buf<pos:position pos:line="99" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="99" pos:column="35">sizeof <argument_list pos:line="99" pos:column="42">(<argument><expr><name pos:line="99" pos:column="43">buf<pos:position pos:line="99" pos:column="46"/></name></expr></argument>)<pos:position pos:line="99" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="99" pos:column="49">src<pos:position pos:line="99" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="54">callback<pos:position pos:line="99" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="64">data<pos:position pos:line="99" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="70">flags<pos:position pos:line="99" pos:column="75"/></name></expr></argument>)<pos:position pos:line="99" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="77"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="100" pos:column="11">len<pos:position pos:line="100" pos:column="14"/></name> <operator pos:line="100" pos:column="15">=<pos:position pos:line="100" pos:column="16"/></operator> <call><name pos:line="100" pos:column="17">mutt_strlen<pos:position pos:line="100" pos:column="28"/></name> <argument_list pos:line="100" pos:column="29">(<argument><expr><name pos:line="100" pos:column="30">buf<pos:position pos:line="100" pos:column="33"/></name></expr></argument>)<pos:position pos:line="100" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="35"/></expr_stmt>
	  <if pos:line="101" pos:column="11">if <condition pos:line="101" pos:column="14">(<expr><name pos:line="101" pos:column="15">count<pos:position pos:line="101" pos:column="20"/></name> <operator pos:line="101" pos:column="21">&gt;<pos:position pos:line="101" pos:column="25"/></operator> <name pos:line="101" pos:column="23">len<pos:position pos:line="101" pos:column="26"/></name></expr>)<pos:position pos:line="101" pos:column="27"/></condition><then pos:line="101" pos:column="27">
	  <block pos:line="102" pos:column="11">{
	    <expr_stmt><expr><name pos:line="103" pos:column="13">count<pos:position pos:line="103" pos:column="18"/></name> <operator pos:line="103" pos:column="19">-=<pos:position pos:line="103" pos:column="21"/></operator> <name pos:line="103" pos:column="22">len<pos:position pos:line="103" pos:column="25"/></name></expr>;<pos:position pos:line="103" pos:column="26"/></expr_stmt> <comment type="block" pos:line="103" pos:column="27">/* how many chars to pad */</comment>
	    <expr_stmt><expr><call><name pos:line="104" pos:column="13">memset<pos:position pos:line="104" pos:column="19"/></name> <argument_list pos:line="104" pos:column="20">(<argument><expr><name pos:line="104" pos:column="21">wptr<pos:position pos:line="104" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="27">ch<pos:position pos:line="104" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="31">count<pos:position pos:line="104" pos:column="36"/></name></expr></argument>)<pos:position pos:line="104" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="38"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="105" pos:column="13">wptr<pos:position pos:line="105" pos:column="17"/></name> <operator pos:line="105" pos:column="18">+=<pos:position pos:line="105" pos:column="20"/></operator> <name pos:line="105" pos:column="21">count<pos:position pos:line="105" pos:column="26"/></name></expr>;<pos:position pos:line="105" pos:column="27"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="106" pos:column="13">wlen<pos:position pos:line="106" pos:column="17"/></name> <operator pos:line="106" pos:column="18">+=<pos:position pos:line="106" pos:column="20"/></operator> <name pos:line="106" pos:column="21">count<pos:position pos:line="106" pos:column="26"/></name></expr>;<pos:position pos:line="106" pos:column="27"/></expr_stmt>
	  }<pos:position pos:line="107" pos:column="12"/></block></then></if>
	  <if pos:line="108" pos:column="11">if <condition pos:line="108" pos:column="14">(<expr><name pos:line="108" pos:column="15">len<pos:position pos:line="108" pos:column="18"/></name> <operator pos:line="108" pos:column="19">+<pos:position pos:line="108" pos:column="20"/></operator> <name pos:line="108" pos:column="21">wlen<pos:position pos:line="108" pos:column="25"/></name> <operator pos:line="108" pos:column="26">&gt;<pos:position pos:line="108" pos:column="30"/></operator> <name pos:line="108" pos:column="28">destlen<pos:position pos:line="108" pos:column="35"/></name></expr>)<pos:position pos:line="108" pos:column="36"/></condition><then pos:line="108" pos:column="36">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="109" pos:column="13">len<pos:position pos:line="109" pos:column="16"/></name> <operator pos:line="109" pos:column="17">=<pos:position pos:line="109" pos:column="18"/></operator> <name pos:line="109" pos:column="19">destlen<pos:position pos:line="109" pos:column="26"/></name> <operator pos:line="109" pos:column="27">-<pos:position pos:line="109" pos:column="28"/></operator> <name pos:line="109" pos:column="29">wlen<pos:position pos:line="109" pos:column="33"/></name></expr>;<pos:position pos:line="109" pos:column="34"/></expr_stmt></block></then></if>
	  <expr_stmt><expr><call><name pos:line="110" pos:column="11">memcpy<pos:position pos:line="110" pos:column="17"/></name> <argument_list pos:line="110" pos:column="18">(<argument><expr><name pos:line="110" pos:column="19">wptr<pos:position pos:line="110" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="25">buf<pos:position pos:line="110" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="30">len<pos:position pos:line="110" pos:column="33"/></name></expr></argument>)<pos:position pos:line="110" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="35"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="111" pos:column="11">wptr<pos:position pos:line="111" pos:column="15"/></name> <operator pos:line="111" pos:column="16">+=<pos:position pos:line="111" pos:column="18"/></operator> <name pos:line="111" pos:column="19">len<pos:position pos:line="111" pos:column="22"/></name></expr>;<pos:position pos:line="111" pos:column="23"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="112" pos:column="11">wlen<pos:position pos:line="112" pos:column="15"/></name> <operator pos:line="112" pos:column="16">+=<pos:position pos:line="112" pos:column="18"/></operator> <name pos:line="112" pos:column="19">len<pos:position pos:line="112" pos:column="22"/></name></expr>;<pos:position pos:line="112" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="113" pos:column="10"/></block></then></if>
	<break pos:line="114" pos:column="9">break;<pos:position pos:line="114" pos:column="15"/></break> <comment type="block" pos:line="114" pos:column="16">/* skip rest of input */</comment>
      }<pos:position pos:line="115" pos:column="8"/></block></then>
      <elseif pos:line="116" pos:column="7">else <if pos:line="116" pos:column="12">if <condition pos:line="116" pos:column="15">(<expr><name pos:line="116" pos:column="16">ch<pos:position pos:line="116" pos:column="18"/></name> <operator pos:line="116" pos:column="19">==<pos:position pos:line="116" pos:column="21"/></operator> <literal type="char" pos:line="116" pos:column="22">'|'<pos:position pos:line="116" pos:column="25"/></literal></expr>)<pos:position pos:line="116" pos:column="26"/></condition><then pos:line="116" pos:column="26">
      <block pos:line="117" pos:column="7">{
	<comment type="block" pos:line="118" pos:column="9">/* pad to EOL */</comment>
	<expr_stmt><expr><name pos:line="119" pos:column="9">ch<pos:position pos:line="119" pos:column="11"/></name> <operator pos:line="119" pos:column="12">=<pos:position pos:line="119" pos:column="13"/></operator> <operator pos:line="119" pos:column="14">*<pos:position pos:line="119" pos:column="15"/></operator><name pos:line="119" pos:column="15">src<pos:position pos:line="119" pos:column="18"/></name><operator pos:line="119" pos:column="18">++<pos:position pos:line="119" pos:column="20"/></operator></expr>;<pos:position pos:line="119" pos:column="21"/></expr_stmt>
	<if pos:line="120" pos:column="9">if <condition pos:line="120" pos:column="12">(<expr><name pos:line="120" pos:column="13">destlen<pos:position pos:line="120" pos:column="20"/></name> <operator pos:line="120" pos:column="21">&gt;<pos:position pos:line="120" pos:column="25"/></operator> <name pos:line="120" pos:column="23">COLS<pos:position pos:line="120" pos:column="27"/></name></expr>)<pos:position pos:line="120" pos:column="28"/></condition><then pos:line="120" pos:column="28">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="121" pos:column="11">destlen<pos:position pos:line="121" pos:column="18"/></name> <operator pos:line="121" pos:column="19">=<pos:position pos:line="121" pos:column="20"/></operator> <name pos:line="121" pos:column="21">COLS<pos:position pos:line="121" pos:column="25"/></name></expr>;<pos:position pos:line="121" pos:column="26"/></expr_stmt></block></then></if>
	<if pos:line="122" pos:column="9">if <condition pos:line="122" pos:column="12">(<expr><name pos:line="122" pos:column="13">destlen<pos:position pos:line="122" pos:column="20"/></name> <operator pos:line="122" pos:column="21">&gt;<pos:position pos:line="122" pos:column="25"/></operator> <name pos:line="122" pos:column="23">wlen<pos:position pos:line="122" pos:column="27"/></name></expr>)<pos:position pos:line="122" pos:column="28"/></condition><then pos:line="122" pos:column="28">
	<block pos:line="123" pos:column="9">{
	  <expr_stmt><expr><name pos:line="124" pos:column="11">count<pos:position pos:line="124" pos:column="16"/></name> <operator pos:line="124" pos:column="17">=<pos:position pos:line="124" pos:column="18"/></operator> <name pos:line="124" pos:column="19">destlen<pos:position pos:line="124" pos:column="26"/></name> <operator pos:line="124" pos:column="27">-<pos:position pos:line="124" pos:column="28"/></operator> <name pos:line="124" pos:column="29">wlen<pos:position pos:line="124" pos:column="33"/></name></expr>;<pos:position pos:line="124" pos:column="34"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="125" pos:column="11">memset<pos:position pos:line="125" pos:column="17"/></name> <argument_list pos:line="125" pos:column="18">(<argument><expr><name pos:line="125" pos:column="19">wptr<pos:position pos:line="125" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="25">ch<pos:position pos:line="125" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="29">count<pos:position pos:line="125" pos:column="34"/></name></expr></argument>)<pos:position pos:line="125" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="36"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="126" pos:column="11">wptr<pos:position pos:line="126" pos:column="15"/></name> <operator pos:line="126" pos:column="16">+=<pos:position pos:line="126" pos:column="18"/></operator> <name pos:line="126" pos:column="19">count<pos:position pos:line="126" pos:column="24"/></name></expr>;<pos:position pos:line="126" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="127" pos:column="10"/></block></then></if>
	<break pos:line="128" pos:column="9">break;<pos:position pos:line="128" pos:column="15"/></break> <comment type="block" pos:line="128" pos:column="16">/* skip rest of input */</comment>
      }<pos:position pos:line="129" pos:column="8"/></block></then></if></elseif>
      <else pos:line="130" pos:column="7">else
      <block pos:line="131" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="132" pos:column="9">short<pos:position pos:line="132" pos:column="14"/></name></type> <name pos:line="132" pos:column="15">tolower<pos:position pos:line="132" pos:column="22"/></name> <init pos:line="132" pos:column="23">=  <expr><literal type="number" pos:line="132" pos:column="26">0<pos:position pos:line="132" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="132" pos:column="28"/></decl_stmt>
	
	<if pos:line="134" pos:column="9">if <condition pos:line="134" pos:column="12">(<expr><name pos:line="134" pos:column="13">ch<pos:position pos:line="134" pos:column="15"/></name> <operator pos:line="134" pos:column="16">==<pos:position pos:line="134" pos:column="18"/></operator> <literal type="char" pos:line="134" pos:column="19">'_'<pos:position pos:line="134" pos:column="22"/></literal></expr>)<pos:position pos:line="134" pos:column="23"/></condition><then pos:line="134" pos:column="23">
	<block pos:line="135" pos:column="9">{
	  <expr_stmt><expr><name pos:line="136" pos:column="11">ch<pos:position pos:line="136" pos:column="13"/></name> <operator pos:line="136" pos:column="14">=<pos:position pos:line="136" pos:column="15"/></operator> <operator pos:line="136" pos:column="16">*<pos:position pos:line="136" pos:column="17"/></operator><name pos:line="136" pos:column="17">src<pos:position pos:line="136" pos:column="20"/></name><operator pos:line="136" pos:column="20">++<pos:position pos:line="136" pos:column="22"/></operator></expr>;<pos:position pos:line="136" pos:column="23"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="137" pos:column="11">tolower<pos:position pos:line="137" pos:column="18"/></name> <operator pos:line="137" pos:column="19">=<pos:position pos:line="137" pos:column="20"/></operator> <literal type="number" pos:line="137" pos:column="21">1<pos:position pos:line="137" pos:column="22"/></literal></expr>;<pos:position pos:line="137" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="138" pos:column="10"/></block></then></if>
	
	<comment type="block" pos:line="140" pos:column="9">/* use callback function to handle this case */</comment>
	<expr_stmt><expr><name pos:line="141" pos:column="9">src<pos:position pos:line="141" pos:column="12"/></name> <operator pos:line="141" pos:column="13">=<pos:position pos:line="141" pos:column="14"/></operator> <call><name pos:line="141" pos:column="15">callback<pos:position pos:line="141" pos:column="23"/></name> <argument_list pos:line="141" pos:column="24">(<argument><expr><name pos:line="141" pos:column="25">buf<pos:position pos:line="141" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="141" pos:column="30">sizeof <argument_list pos:line="141" pos:column="37">(<argument><expr><name pos:line="141" pos:column="38">buf<pos:position pos:line="141" pos:column="41"/></name></expr></argument>)<pos:position pos:line="141" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="141" pos:column="44">ch<pos:position pos:line="141" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="48">src<pos:position pos:line="141" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="53">prefix<pos:position pos:line="141" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="61">ifstring<pos:position pos:line="141" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="71">elsestring<pos:position pos:line="141" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="83">data<pos:position pos:line="141" pos:column="87"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="89">flags<pos:position pos:line="141" pos:column="94"/></name></expr></argument>)<pos:position pos:line="141" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="96"/></expr_stmt>

	<if pos:line="143" pos:column="9">if <condition pos:line="143" pos:column="12">(<expr><name pos:line="143" pos:column="13">tolower<pos:position pos:line="143" pos:column="20"/></name></expr>)<pos:position pos:line="143" pos:column="21"/></condition><then pos:line="143" pos:column="21">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="144" pos:column="11">mutt_strlower<pos:position pos:line="144" pos:column="24"/></name> <argument_list pos:line="144" pos:column="25">(<argument><expr><name pos:line="144" pos:column="26">buf<pos:position pos:line="144" pos:column="29"/></name></expr></argument>)<pos:position pos:line="144" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="31"/></expr_stmt></block></then></if>
	
	<if pos:line="146" pos:column="9">if <condition pos:line="146" pos:column="12">(<expr><operator pos:line="146" pos:column="13">(<pos:position pos:line="146" pos:column="14"/></operator><name pos:line="146" pos:column="14">len<pos:position pos:line="146" pos:column="17"/></name> <operator pos:line="146" pos:column="18">=<pos:position pos:line="146" pos:column="19"/></operator> <call><name pos:line="146" pos:column="20">mutt_strlen<pos:position pos:line="146" pos:column="31"/></name> <argument_list pos:line="146" pos:column="32">(<argument><expr><name pos:line="146" pos:column="33">buf<pos:position pos:line="146" pos:column="36"/></name></expr></argument>)<pos:position pos:line="146" pos:column="37"/></argument_list></call><operator pos:line="146" pos:column="37">)<pos:position pos:line="146" pos:column="38"/></operator> <operator pos:line="146" pos:column="39">+<pos:position pos:line="146" pos:column="40"/></operator> <name pos:line="146" pos:column="41">wlen<pos:position pos:line="146" pos:column="45"/></name> <operator pos:line="146" pos:column="46">&gt;<pos:position pos:line="146" pos:column="50"/></operator> <name pos:line="146" pos:column="48">destlen<pos:position pos:line="146" pos:column="55"/></name></expr>)<pos:position pos:line="146" pos:column="56"/></condition><then pos:line="146" pos:column="56">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="147" pos:column="11">len<pos:position pos:line="147" pos:column="14"/></name> <operator pos:line="147" pos:column="15">=<pos:position pos:line="147" pos:column="16"/></operator> <ternary><condition><expr><operator pos:line="147" pos:column="17">(<pos:position pos:line="147" pos:column="18"/></operator><name pos:line="147" pos:column="18">destlen<pos:position pos:line="147" pos:column="25"/></name> <operator pos:line="147" pos:column="26">-<pos:position pos:line="147" pos:column="27"/></operator> <name pos:line="147" pos:column="28">wlen<pos:position pos:line="147" pos:column="32"/></name> <operator pos:line="147" pos:column="33">&gt;<pos:position pos:line="147" pos:column="37"/></operator> <literal type="number" pos:line="147" pos:column="35">0<pos:position pos:line="147" pos:column="36"/></literal><operator pos:line="147" pos:column="36">)<pos:position pos:line="147" pos:column="37"/></operator></expr> ?<pos:position pos:line="147" pos:column="39"/></condition><then pos:line="147" pos:column="39"> <expr><operator pos:line="147" pos:column="40">(<pos:position pos:line="147" pos:column="41"/></operator><name pos:line="147" pos:column="41">destlen<pos:position pos:line="147" pos:column="48"/></name> <operator pos:line="147" pos:column="49">-<pos:position pos:line="147" pos:column="50"/></operator> <name pos:line="147" pos:column="51">wlen<pos:position pos:line="147" pos:column="55"/></name><operator pos:line="147" pos:column="55">)<pos:position pos:line="147" pos:column="56"/></operator></expr> <pos:position pos:line="147" pos:column="57"/></then><else pos:line="147" pos:column="57">: <expr><literal type="number" pos:line="147" pos:column="59">0<pos:position pos:line="147" pos:column="60"/></literal></expr></else></ternary></expr>;<pos:position pos:line="147" pos:column="61"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="149" pos:column="9">memcpy<pos:position pos:line="149" pos:column="15"/></name> <argument_list pos:line="149" pos:column="16">(<argument><expr><name pos:line="149" pos:column="17">wptr<pos:position pos:line="149" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="23">buf<pos:position pos:line="149" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="28">len<pos:position pos:line="149" pos:column="31"/></name></expr></argument>)<pos:position pos:line="149" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name pos:line="150" pos:column="9">wptr<pos:position pos:line="150" pos:column="13"/></name> <operator pos:line="150" pos:column="14">+=<pos:position pos:line="150" pos:column="16"/></operator> <name pos:line="150" pos:column="17">len<pos:position pos:line="150" pos:column="20"/></name></expr>;<pos:position pos:line="150" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="151" pos:column="9">wlen<pos:position pos:line="151" pos:column="13"/></name> <operator pos:line="151" pos:column="14">+=<pos:position pos:line="151" pos:column="16"/></operator> <name pos:line="151" pos:column="17">len<pos:position pos:line="151" pos:column="20"/></name></expr>;<pos:position pos:line="151" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="152" pos:column="8"/></block></else></if>
    }<pos:position pos:line="153" pos:column="6"/></block></then>
    <elseif pos:line="154" pos:column="5">else <if pos:line="154" pos:column="10">if <condition pos:line="154" pos:column="13">(<expr><operator pos:line="154" pos:column="14">*<pos:position pos:line="154" pos:column="15"/></operator><name pos:line="154" pos:column="15">src<pos:position pos:line="154" pos:column="18"/></name> <operator pos:line="154" pos:column="19">==<pos:position pos:line="154" pos:column="21"/></operator> <literal type="char" pos:line="154" pos:column="22">'\\'<pos:position pos:line="154" pos:column="26"/></literal></expr>)<pos:position pos:line="154" pos:column="27"/></condition><then pos:line="154" pos:column="27">
    <block pos:line="155" pos:column="5">{
      <if pos:line="156" pos:column="7">if <condition pos:line="156" pos:column="10">(<expr><operator pos:line="156" pos:column="11">!<pos:position pos:line="156" pos:column="12"/></operator><operator pos:line="156" pos:column="12">*<pos:position pos:line="156" pos:column="13"/></operator><operator pos:line="156" pos:column="13">++<pos:position pos:line="156" pos:column="15"/></operator><name pos:line="156" pos:column="15">src<pos:position pos:line="156" pos:column="18"/></name></expr>)<pos:position pos:line="156" pos:column="19"/></condition><then pos:line="156" pos:column="19">
	<block type="pseudo"><break pos:line="157" pos:column="9">break;<pos:position pos:line="157" pos:column="15"/></break></block></then></if>
      <switch pos:line="158" pos:column="7">switch <condition pos:line="158" pos:column="14">(<expr><operator pos:line="158" pos:column="15">*<pos:position pos:line="158" pos:column="16"/></operator><name pos:line="158" pos:column="16">src<pos:position pos:line="158" pos:column="19"/></name></expr>)<pos:position pos:line="158" pos:column="20"/></condition>
      <block pos:line="159" pos:column="7">{
	<case pos:line="160" pos:column="9">case <expr><literal type="char" pos:line="160" pos:column="14">'n'<pos:position pos:line="160" pos:column="17"/></literal></expr>:<pos:position pos:line="160" pos:column="18"/></case>
	  <expr_stmt><expr><operator pos:line="161" pos:column="11">*<pos:position pos:line="161" pos:column="12"/></operator><name pos:line="161" pos:column="12">wptr<pos:position pos:line="161" pos:column="16"/></name> <operator pos:line="161" pos:column="17">=<pos:position pos:line="161" pos:column="18"/></operator> <literal type="char" pos:line="161" pos:column="19">'\n'<pos:position pos:line="161" pos:column="23"/></literal></expr>;<pos:position pos:line="161" pos:column="24"/></expr_stmt>
	  <break pos:line="162" pos:column="11">break;<pos:position pos:line="162" pos:column="17"/></break>
	<case pos:line="163" pos:column="9">case <expr><literal type="char" pos:line="163" pos:column="14">'t'<pos:position pos:line="163" pos:column="17"/></literal></expr>:<pos:position pos:line="163" pos:column="18"/></case>
	  <expr_stmt><expr><operator pos:line="164" pos:column="11">*<pos:position pos:line="164" pos:column="12"/></operator><name pos:line="164" pos:column="12">wptr<pos:position pos:line="164" pos:column="16"/></name> <operator pos:line="164" pos:column="17">=<pos:position pos:line="164" pos:column="18"/></operator> <literal type="char" pos:line="164" pos:column="19">'\t'<pos:position pos:line="164" pos:column="23"/></literal></expr>;<pos:position pos:line="164" pos:column="24"/></expr_stmt>
	  <break pos:line="165" pos:column="11">break;<pos:position pos:line="165" pos:column="17"/></break>
	<case pos:line="166" pos:column="9">case <expr><literal type="char" pos:line="166" pos:column="14">'r'<pos:position pos:line="166" pos:column="17"/></literal></expr>:<pos:position pos:line="166" pos:column="18"/></case>
	  <expr_stmt><expr><operator pos:line="167" pos:column="11">*<pos:position pos:line="167" pos:column="12"/></operator><name pos:line="167" pos:column="12">wptr<pos:position pos:line="167" pos:column="16"/></name> <operator pos:line="167" pos:column="17">=<pos:position pos:line="167" pos:column="18"/></operator> <literal type="char" pos:line="167" pos:column="19">'\r'<pos:position pos:line="167" pos:column="23"/></literal></expr>;<pos:position pos:line="167" pos:column="24"/></expr_stmt>
	  <break pos:line="168" pos:column="11">break;<pos:position pos:line="168" pos:column="17"/></break>
	<case pos:line="169" pos:column="9">case <expr><literal type="char" pos:line="169" pos:column="14">'f'<pos:position pos:line="169" pos:column="17"/></literal></expr>:<pos:position pos:line="169" pos:column="18"/></case>
	  <expr_stmt><expr><operator pos:line="170" pos:column="11">*<pos:position pos:line="170" pos:column="12"/></operator><name pos:line="170" pos:column="12">wptr<pos:position pos:line="170" pos:column="16"/></name> <operator pos:line="170" pos:column="17">=<pos:position pos:line="170" pos:column="18"/></operator> <literal type="char" pos:line="170" pos:column="19">'\f'<pos:position pos:line="170" pos:column="23"/></literal></expr>;<pos:position pos:line="170" pos:column="24"/></expr_stmt>
	  <break pos:line="171" pos:column="11">break;<pos:position pos:line="171" pos:column="17"/></break>
	<case pos:line="172" pos:column="9">case <expr><literal type="char" pos:line="172" pos:column="14">'v'<pos:position pos:line="172" pos:column="17"/></literal></expr>:<pos:position pos:line="172" pos:column="18"/></case>
	  <expr_stmt><expr><operator pos:line="173" pos:column="11">*<pos:position pos:line="173" pos:column="12"/></operator><name pos:line="173" pos:column="12">wptr<pos:position pos:line="173" pos:column="16"/></name> <operator pos:line="173" pos:column="17">=<pos:position pos:line="173" pos:column="18"/></operator> <literal type="char" pos:line="173" pos:column="19">'\v'<pos:position pos:line="173" pos:column="23"/></literal></expr>;<pos:position pos:line="173" pos:column="24"/></expr_stmt>
	  <break pos:line="174" pos:column="11">break;<pos:position pos:line="174" pos:column="17"/></break>
	<default pos:line="175" pos:column="9">default:<pos:position pos:line="175" pos:column="17"/></default>
	  <expr_stmt><expr><operator pos:line="176" pos:column="11">*<pos:position pos:line="176" pos:column="12"/></operator><name pos:line="176" pos:column="12">wptr<pos:position pos:line="176" pos:column="16"/></name> <operator pos:line="176" pos:column="17">=<pos:position pos:line="176" pos:column="18"/></operator> <operator pos:line="176" pos:column="19">*<pos:position pos:line="176" pos:column="20"/></operator><name pos:line="176" pos:column="20">src<pos:position pos:line="176" pos:column="23"/></name></expr>;<pos:position pos:line="176" pos:column="24"/></expr_stmt>
	  <break pos:line="177" pos:column="11">break;<pos:position pos:line="177" pos:column="17"/></break>
      }<pos:position pos:line="178" pos:column="8"/></block></switch>
      <expr_stmt><expr><name pos:line="179" pos:column="7">src<pos:position pos:line="179" pos:column="10"/></name><operator pos:line="179" pos:column="10">++<pos:position pos:line="179" pos:column="12"/></operator></expr>;<pos:position pos:line="179" pos:column="13"/></expr_stmt>
      <expr_stmt><expr><name pos:line="180" pos:column="7">wptr<pos:position pos:line="180" pos:column="11"/></name><operator pos:line="180" pos:column="11">++<pos:position pos:line="180" pos:column="13"/></operator></expr>;<pos:position pos:line="180" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><name pos:line="181" pos:column="7">wlen<pos:position pos:line="181" pos:column="11"/></name><operator pos:line="181" pos:column="11">++<pos:position pos:line="181" pos:column="13"/></operator></expr>;<pos:position pos:line="181" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="182" pos:column="6"/></block></then></if></elseif>
    <else pos:line="183" pos:column="5">else
    <block pos:line="184" pos:column="5">{
      <expr_stmt><expr><operator pos:line="185" pos:column="7">*<pos:position pos:line="185" pos:column="8"/></operator><name pos:line="185" pos:column="8">wptr<pos:position pos:line="185" pos:column="12"/></name><operator pos:line="185" pos:column="12">++<pos:position pos:line="185" pos:column="14"/></operator> <operator pos:line="185" pos:column="15">=<pos:position pos:line="185" pos:column="16"/></operator> <operator pos:line="185" pos:column="17">*<pos:position pos:line="185" pos:column="18"/></operator><name pos:line="185" pos:column="18">src<pos:position pos:line="185" pos:column="21"/></name><operator pos:line="185" pos:column="21">++<pos:position pos:line="185" pos:column="23"/></operator></expr>;<pos:position pos:line="185" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name pos:line="186" pos:column="7">wlen<pos:position pos:line="186" pos:column="11"/></name><operator pos:line="186" pos:column="11">++<pos:position pos:line="186" pos:column="13"/></operator></expr>;<pos:position pos:line="186" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="187" pos:column="6"/></block></else></if>
  }<pos:position pos:line="188" pos:column="4"/></block></while>
  <expr_stmt><expr><operator pos:line="189" pos:column="3">*<pos:position pos:line="189" pos:column="4"/></operator><name pos:line="189" pos:column="4">wptr<pos:position pos:line="189" pos:column="8"/></name> <operator pos:line="189" pos:column="9">=<pos:position pos:line="189" pos:column="10"/></operator> <literal type="number" pos:line="189" pos:column="11">0<pos:position pos:line="189" pos:column="12"/></literal></expr>;<pos:position pos:line="189" pos:column="13"/></expr_stmt>

<cpp:if pos:line="191" pos:column="1">#<cpp:directive pos:line="191" pos:column="2">if<pos:position pos:line="191" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="191" pos:column="5">0<pos:position pos:line="191" pos:column="6"/></literal></expr></cpp:if>
  if (flags &amp; M_FORMAT_MAKEPRINT)
  {
    <comment type="block" pos:line="194" pos:column="5">/* Make sure that the string is printable by changing all non-printable
       chars to dots, or spaces for non-printable whitespace */</comment>
    for (cp = dest ; *cp ; cp++)
      if (!IsPrint (*cp) &amp;&amp;
	  !((flags &amp; M_FORMAT_TREE) &amp;&amp; (*cp &lt;= M_TREE_MAX)))
	*cp = isspace ((unsigned char) *cp) ? ' ' : '.';
  }
<cpp:endif pos:line="201" pos:column="1">#<cpp:directive pos:line="201" pos:column="2">endif<pos:position pos:line="201" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="202" pos:column="2"/></block></function></unit>

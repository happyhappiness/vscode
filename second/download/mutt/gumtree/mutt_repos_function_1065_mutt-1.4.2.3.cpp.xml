<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1065_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">pop_open_connection<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">POP_DATA<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">pop_data<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">ret<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">unsigned<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">int<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">n<pos:position pos:line="4" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="19">size<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">buf<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><name pos:line="5" pos:column="12">LONG_STRING<pos:position pos:line="5" pos:column="23"/></name></expr>]<pos:position pos:line="5" pos:column="24"/></index></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">ret<pos:position pos:line="7" pos:column="6"/></name> <operator pos:line="7" pos:column="7">=<pos:position pos:line="7" pos:column="8"/></operator> <call><name pos:line="7" pos:column="9">pop_connect<pos:position pos:line="7" pos:column="20"/></name> <argument_list pos:line="7" pos:column="21">(<argument><expr><name pos:line="7" pos:column="22">pop_data<pos:position pos:line="7" pos:column="30"/></name></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">ret<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">&lt;<pos:position pos:line="8" pos:column="15"/></operator> <literal type="number" pos:line="8" pos:column="13">0<pos:position pos:line="8" pos:column="14"/></literal></expr>)<pos:position pos:line="8" pos:column="15"/></condition><then pos:line="8" pos:column="15">
  <block pos:line="9" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">mutt_sleep<pos:position pos:line="10" pos:column="15"/></name> <argument_list pos:line="10" pos:column="16">(<argument><expr><literal type="number" pos:line="10" pos:column="17">2<pos:position pos:line="10" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">ret<pos:position pos:line="11" pos:column="15"/></name></expr>;<pos:position pos:line="11" pos:column="16"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">ret<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <call><name pos:line="14" pos:column="9">pop_capabilities<pos:position pos:line="14" pos:column="25"/></name> <argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">pop_data<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">ret<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">==<pos:position pos:line="15" pos:column="13"/></operator> <operator pos:line="15" pos:column="14">-<pos:position pos:line="15" pos:column="15"/></operator><literal type="number" pos:line="15" pos:column="15">1<pos:position pos:line="15" pos:column="16"/></literal></expr>)<pos:position pos:line="15" pos:column="17"/></condition><then pos:line="15" pos:column="17">
    <block type="pseudo"><goto pos:line="16" pos:column="5">goto <name pos:line="16" pos:column="10">err_conn<pos:position pos:line="16" pos:column="18"/></name>;<pos:position pos:line="16" pos:column="19"/></goto></block></then></if>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">ret<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">==<pos:position pos:line="17" pos:column="13"/></operator> <operator pos:line="17" pos:column="14">-<pos:position pos:line="17" pos:column="15"/></operator><literal type="number" pos:line="17" pos:column="15">2<pos:position pos:line="17" pos:column="16"/></literal></expr>)<pos:position pos:line="17" pos:column="17"/></condition><then pos:line="17" pos:column="17">
  <block pos:line="18" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">mutt_sleep<pos:position pos:line="19" pos:column="15"/></name> <argument_list pos:line="19" pos:column="16">(<argument><expr><literal type="number" pos:line="19" pos:column="17">2<pos:position pos:line="19" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">-<pos:position pos:line="20" pos:column="13"/></operator><literal type="number" pos:line="20" pos:column="13">2<pos:position pos:line="20" pos:column="14"/></literal></expr>;<pos:position pos:line="20" pos:column="15"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="23" pos:column="3">ret<pos:position pos:line="23" pos:column="6"/></name> <operator pos:line="23" pos:column="7">=<pos:position pos:line="23" pos:column="8"/></operator> <call><name pos:line="23" pos:column="9">pop_authenticate<pos:position pos:line="23" pos:column="25"/></name> <argument_list pos:line="23" pos:column="26">(<argument><expr><name pos:line="23" pos:column="27">pop_data<pos:position pos:line="23" pos:column="35"/></name></expr></argument>)<pos:position pos:line="23" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name pos:line="24" pos:column="7">ret<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">==<pos:position pos:line="24" pos:column="13"/></operator> <operator pos:line="24" pos:column="14">-<pos:position pos:line="24" pos:column="15"/></operator><literal type="number" pos:line="24" pos:column="15">1<pos:position pos:line="24" pos:column="16"/></literal></expr>)<pos:position pos:line="24" pos:column="17"/></condition><then pos:line="24" pos:column="17">
    <block type="pseudo"><goto pos:line="25" pos:column="5">goto <name pos:line="25" pos:column="10">err_conn<pos:position pos:line="25" pos:column="18"/></name>;<pos:position pos:line="25" pos:column="19"/></goto></block></then></if>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name pos:line="26" pos:column="7">ret<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">==<pos:position pos:line="26" pos:column="13"/></operator> <operator pos:line="26" pos:column="14">-<pos:position pos:line="26" pos:column="15"/></operator><literal type="number" pos:line="26" pos:column="15">3<pos:position pos:line="26" pos:column="16"/></literal></expr>)<pos:position pos:line="26" pos:column="17"/></condition><then pos:line="26" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="5">mutt_clear_error<pos:position pos:line="27" pos:column="21"/></name> <argument_list pos:line="27" pos:column="22">()<pos:position pos:line="27" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt></block></then></if>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">ret<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">!=<pos:position pos:line="28" pos:column="13"/></operator> <literal type="number" pos:line="28" pos:column="14">0<pos:position pos:line="28" pos:column="15"/></literal></expr>)<pos:position pos:line="28" pos:column="16"/></condition><then pos:line="28" pos:column="16">
    <block type="pseudo"><return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">ret<pos:position pos:line="29" pos:column="15"/></name></expr>;<pos:position pos:line="29" pos:column="16"/></return></block></then></if>

  <comment type="block" pos:line="31" pos:column="3">/* get total size of mailbox */</comment>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">strfcpy<pos:position pos:line="32" pos:column="10"/></name> <argument_list pos:line="32" pos:column="11">(<argument><expr><name pos:line="32" pos:column="12">buf<pos:position pos:line="32" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="17">"STAT\r\n"<pos:position pos:line="32" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="29">sizeof <argument_list pos:line="32" pos:column="36">(<argument><expr><name pos:line="32" pos:column="37">buf<pos:position pos:line="32" pos:column="40"/></name></expr></argument>)<pos:position pos:line="32" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name pos:line="33" pos:column="3">ret<pos:position pos:line="33" pos:column="6"/></name> <operator pos:line="33" pos:column="7">=<pos:position pos:line="33" pos:column="8"/></operator> <call><name pos:line="33" pos:column="9">pop_query<pos:position pos:line="33" pos:column="18"/></name> <argument_list pos:line="33" pos:column="19">(<argument><expr><name pos:line="33" pos:column="20">pop_data<pos:position pos:line="33" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="30">buf<pos:position pos:line="33" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="35">sizeof <argument_list pos:line="33" pos:column="42">(<argument><expr><name pos:line="33" pos:column="43">buf<pos:position pos:line="33" pos:column="46"/></name></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="49"/></expr_stmt>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><name pos:line="34" pos:column="7">ret<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">==<pos:position pos:line="34" pos:column="13"/></operator> <operator pos:line="34" pos:column="14">-<pos:position pos:line="34" pos:column="15"/></operator><literal type="number" pos:line="34" pos:column="15">1<pos:position pos:line="34" pos:column="16"/></literal></expr>)<pos:position pos:line="34" pos:column="17"/></condition><then pos:line="34" pos:column="17">
    <block type="pseudo"><goto pos:line="35" pos:column="5">goto <name pos:line="35" pos:column="10">err_conn<pos:position pos:line="35" pos:column="18"/></name>;<pos:position pos:line="35" pos:column="19"/></goto></block></then></if>
  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><name pos:line="36" pos:column="7">ret<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">==<pos:position pos:line="36" pos:column="13"/></operator> <operator pos:line="36" pos:column="14">-<pos:position pos:line="36" pos:column="15"/></operator><literal type="number" pos:line="36" pos:column="15">2<pos:position pos:line="36" pos:column="16"/></literal></expr>)<pos:position pos:line="36" pos:column="17"/></condition><then pos:line="36" pos:column="17">
  <block pos:line="37" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">mutt_error<pos:position pos:line="38" pos:column="15"/></name> <argument_list pos:line="38" pos:column="16">(<argument><expr><literal type="string" pos:line="38" pos:column="17">"%s"<pos:position pos:line="38" pos:column="21"/></literal></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="23">pop_data<pos:position pos:line="38" pos:column="31"/></name><operator pos:line="38" pos:column="31">-&gt;<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="33">err_msg<pos:position pos:line="38" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">mutt_sleep<pos:position pos:line="39" pos:column="15"/></name> <argument_list pos:line="39" pos:column="16">(<argument><expr><literal type="number" pos:line="39" pos:column="17">2<pos:position pos:line="39" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="20"/></expr_stmt>
    <return pos:line="40" pos:column="5">return <expr><name pos:line="40" pos:column="12">ret<pos:position pos:line="40" pos:column="15"/></name></expr>;<pos:position pos:line="40" pos:column="16"/></return>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="43" pos:column="3">sscanf<pos:position pos:line="43" pos:column="9"/></name> <argument_list pos:line="43" pos:column="10">(<argument><expr><name pos:line="43" pos:column="11">buf<pos:position pos:line="43" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="16">"+OK %u %u"<pos:position pos:line="43" pos:column="27"/></literal></expr></argument>, <argument><expr><operator pos:line="43" pos:column="29">&amp;<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="30">n<pos:position pos:line="43" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="33">&amp;<pos:position pos:line="43" pos:column="38"/></operator><name pos:line="43" pos:column="34">size<pos:position pos:line="43" pos:column="38"/></name></expr></argument>)<pos:position pos:line="43" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="44" pos:column="3">pop_data<pos:position pos:line="44" pos:column="11"/></name><operator pos:line="44" pos:column="11">-&gt;<pos:position pos:line="44" pos:column="16"/></operator><name pos:line="44" pos:column="13">size<pos:position pos:line="44" pos:column="17"/></name></name> <operator pos:line="44" pos:column="18">=<pos:position pos:line="44" pos:column="19"/></operator> <name pos:line="44" pos:column="20">size<pos:position pos:line="44" pos:column="24"/></name></expr>;<pos:position pos:line="44" pos:column="25"/></expr_stmt>
  <return pos:line="45" pos:column="3">return <expr><literal type="number" pos:line="45" pos:column="10">0<pos:position pos:line="45" pos:column="11"/></literal></expr>;<pos:position pos:line="45" pos:column="12"/></return>

<label><name pos:line="47" pos:column="1">err_conn<pos:position pos:line="47" pos:column="9"/></name>:<pos:position pos:line="47" pos:column="10"/></label>
  <expr_stmt><expr><name><name pos:line="48" pos:column="3">pop_data<pos:position pos:line="48" pos:column="11"/></name><operator pos:line="48" pos:column="11">-&gt;<pos:position pos:line="48" pos:column="16"/></operator><name pos:line="48" pos:column="13">status<pos:position pos:line="48" pos:column="19"/></name></name> <operator pos:line="48" pos:column="20">=<pos:position pos:line="48" pos:column="21"/></operator> <name pos:line="48" pos:column="22">POP_DISCONNECTED<pos:position pos:line="48" pos:column="38"/></name></expr>;<pos:position pos:line="48" pos:column="39"/></expr_stmt>
  <decl_stmt><decl><type><name pos:line="49" pos:column="3">mutt_error<pos:position pos:line="49" pos:column="13"/></name></type> <name pos:line="49" pos:column="14">_<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><literal type="string" pos:line="49" pos:column="16">"Server closed connection!"<pos:position pos:line="49" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="44"/></argument_list></decl>;<pos:position pos:line="49" pos:column="45"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="50" pos:column="3">mutt_sleep<pos:position pos:line="50" pos:column="13"/></name> <argument_list pos:line="50" pos:column="14">(<argument><expr><literal type="number" pos:line="50" pos:column="15">2<pos:position pos:line="50" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="18"/></expr_stmt>
  <return pos:line="51" pos:column="3">return <expr><operator pos:line="51" pos:column="10">-<pos:position pos:line="51" pos:column="11"/></operator><literal type="number" pos:line="51" pos:column="11">1<pos:position pos:line="51" pos:column="12"/></literal></expr>;<pos:position pos:line="51" pos:column="13"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

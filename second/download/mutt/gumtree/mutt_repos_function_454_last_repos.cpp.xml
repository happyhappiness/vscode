<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_454_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_buffy<pos:position pos:line="1" pos:column="16"/></name> <parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">char<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type><name pos:line="1" pos:column="24">s<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="27">size_t<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">slen<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">BUFFY<pos:position pos:line="3" pos:column="8"/></name> <modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">tmp<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><name pos:line="3" pos:column="16">Incoming<pos:position pos:line="3" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">pass<pos:position pos:line="4" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="13">found<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><literal type="number" pos:line="4" pos:column="21">0<pos:position pos:line="4" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">mutt_expand_path<pos:position pos:line="6" pos:column="19"/></name> <argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">s<pos:position pos:line="6" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="24">slen<pos:position pos:line="6" pos:column="28"/></name></expr></argument>)<pos:position pos:line="6" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="30"/></expr_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><call><name pos:line="8" pos:column="7">mutt_buffy_check<pos:position pos:line="8" pos:column="23"/></name> <argument_list pos:line="8" pos:column="24">(<argument><expr><literal type="number" pos:line="8" pos:column="25">0<pos:position pos:line="8" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="28"/></condition><then pos:line="8" pos:column="28"> 
  <block pos:line="9" pos:column="3">{
    <for pos:line="10" pos:column="5">for <control pos:line="10" pos:column="9">(<init><expr><name pos:line="10" pos:column="10">pass<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <literal type="number" pos:line="10" pos:column="17">0<pos:position pos:line="10" pos:column="18"/></literal></expr>;<pos:position pos:line="10" pos:column="19"/></init> <condition><expr><name pos:line="10" pos:column="20">pass<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">&lt;<pos:position pos:line="10" pos:column="29"/></operator> <literal type="number" pos:line="10" pos:column="27">2<pos:position pos:line="10" pos:column="28"/></literal></expr>;<pos:position pos:line="10" pos:column="29"/></condition> <incr><expr><name pos:line="10" pos:column="30">pass<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">++<pos:position pos:line="10" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="37"/></control>
      <block type="pseudo"><for pos:line="11" pos:column="7">for <control pos:line="11" pos:column="11">(<init><expr><name pos:line="11" pos:column="12">tmp<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">Incoming<pos:position pos:line="11" pos:column="26"/></name></expr>;<pos:position pos:line="11" pos:column="27"/></init> <condition><expr><name pos:line="11" pos:column="28">tmp<pos:position pos:line="11" pos:column="31"/></name></expr>;<pos:position pos:line="11" pos:column="32"/></condition> <incr><expr><name pos:line="11" pos:column="33">tmp<pos:position pos:line="11" pos:column="36"/></name> <operator pos:line="11" pos:column="37">=<pos:position pos:line="11" pos:column="38"/></operator> <name><name pos:line="11" pos:column="39">tmp<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">-&gt;<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="44">next<pos:position pos:line="11" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="11" pos:column="49"/></control> 
      <block pos:line="12" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">mutt_expand_path<pos:position pos:line="13" pos:column="25"/></name> <argument_list pos:line="13" pos:column="26">(<argument><expr><name><name pos:line="13" pos:column="27">tmp<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">path<pos:position pos:line="13" pos:column="36"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="38">sizeof <argument_list pos:line="13" pos:column="45">(<argument><expr><name><name pos:line="13" pos:column="46">tmp<pos:position pos:line="13" pos:column="49"/></name><operator pos:line="13" pos:column="49">-&gt;<pos:position pos:line="13" pos:column="54"/></operator><name pos:line="13" pos:column="51">path<pos:position pos:line="13" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="58"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">(<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">found<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">||<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">pass<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">)<pos:position pos:line="14" pos:column="28"/></operator> <operator pos:line="14" pos:column="29">&amp;&amp;<pos:position pos:line="14" pos:column="39"/></operator> <name><name pos:line="14" pos:column="32">tmp<pos:position pos:line="14" pos:column="35"/></name><operator pos:line="14" pos:column="35">-&gt;<pos:position pos:line="14" pos:column="40"/></operator></name><operator pos:line="14" pos:column="37">new<pos:position pos:line="14" pos:column="40"/></operator></expr>)<pos:position pos:line="14" pos:column="41"/></condition><then pos:line="14" pos:column="41"> 
	<block pos:line="15" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="16" pos:column="11">strfcpy<pos:position pos:line="16" pos:column="18"/></name> <argument_list pos:line="16" pos:column="19">(<argument><expr><name pos:line="16" pos:column="20">s<pos:position pos:line="16" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="23">tmp<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">path<pos:position pos:line="16" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="34">slen<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="17" pos:column="11">mutt_pretty_mailbox<pos:position pos:line="17" pos:column="30"/></name> <argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">s<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="35">slen<pos:position pos:line="17" pos:column="39"/></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>
	  <return pos:line="18" pos:column="11">return;<pos:position pos:line="18" pos:column="18"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><call><name pos:line="20" pos:column="13">mutt_strcmp<pos:position pos:line="20" pos:column="24"/></name> <argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">s<pos:position pos:line="20" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="29">tmp<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">path<pos:position pos:line="20" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="39"/></argument_list></call> <operator pos:line="20" pos:column="40">==<pos:position pos:line="20" pos:column="42"/></operator> <literal type="number" pos:line="20" pos:column="43">0<pos:position pos:line="20" pos:column="44"/></literal></expr>)<pos:position pos:line="20" pos:column="45"/></condition><then pos:line="20" pos:column="45">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="11">found<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <literal type="number" pos:line="21" pos:column="19">1<pos:position pos:line="21" pos:column="20"/></literal></expr>;<pos:position pos:line="21" pos:column="21"/></expr_stmt></block></then></if>
      }<pos:position pos:line="22" pos:column="8"/></block></for></block></for>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">mutt_buffy_check<pos:position pos:line="24" pos:column="21"/></name> <argument_list pos:line="24" pos:column="22">(<argument><expr><literal type="number" pos:line="24" pos:column="23">1<pos:position pos:line="24" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt> <comment type="block" pos:line="24" pos:column="27">/* buffy was wrong - resync things */</comment>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="27" pos:column="3">/* no folders with new mail */</comment>
  <expr_stmt><expr><operator pos:line="28" pos:column="3">*<pos:position pos:line="28" pos:column="4"/></operator><name pos:line="28" pos:column="4">s<pos:position pos:line="28" pos:column="5"/></name> <operator pos:line="28" pos:column="6">=<pos:position pos:line="28" pos:column="7"/></operator> <literal type="char" pos:line="28" pos:column="8">'\0'<pos:position pos:line="28" pos:column="12"/></literal></expr>;<pos:position pos:line="28" pos:column="13"/></expr_stmt>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

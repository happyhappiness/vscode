<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_828_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">mutt_append_string<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">a<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">b<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">la<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><call><name pos:line="3" pos:column="15">mutt_strlen<pos:position pos:line="3" pos:column="26"/></name> <argument_list pos:line="3" pos:column="27">(<argument><expr><name pos:line="3" pos:column="28">a<pos:position pos:line="3" pos:column="29"/></name></expr></argument>)<pos:position pos:line="3" pos:column="30"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">safe_realloc<pos:position pos:line="4" pos:column="15"/></name> <argument_list pos:line="4" pos:column="16">(<argument><expr><operator pos:line="4" pos:column="17">(<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">void<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></operator><operator pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></operator><operator pos:line="4" pos:column="25">)<pos:position pos:line="4" pos:column="26"/></operator> <operator pos:line="4" pos:column="27">&amp;<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="28">a<pos:position pos:line="4" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="31">la<pos:position pos:line="4" pos:column="33"/></name> <operator pos:line="4" pos:column="34">+<pos:position pos:line="4" pos:column="35"/></operator> <call><name pos:line="4" pos:column="36">mutt_strlen<pos:position pos:line="4" pos:column="47"/></name> <argument_list pos:line="4" pos:column="48">(<argument><expr><name pos:line="4" pos:column="49">b<pos:position pos:line="4" pos:column="50"/></name></expr></argument>)<pos:position pos:line="4" pos:column="51"/></argument_list></call> <operator pos:line="4" pos:column="52">+<pos:position pos:line="4" pos:column="53"/></operator> <literal type="number" pos:line="4" pos:column="54">1<pos:position pos:line="4" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="57"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">strcpy<pos:position pos:line="5" pos:column="9"/></name> <argument_list pos:line="5" pos:column="10">(<argument><expr><name pos:line="5" pos:column="11">a<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">+<pos:position pos:line="5" pos:column="14"/></operator> <name pos:line="5" pos:column="15">la<pos:position pos:line="5" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="19">b<pos:position pos:line="5" pos:column="20"/></name></expr></argument>)<pos:position pos:line="5" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="22"/></expr_stmt>	<comment type="block" pos:line="5" pos:column="25">/* __STRCPY_CHECKED__ */</comment>
  <return pos:line="6" pos:column="3">return <expr><operator pos:line="6" pos:column="10">(<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">a<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">)<pos:position pos:line="6" pos:column="13"/></operator></expr>;<pos:position pos:line="6" pos:column="14"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

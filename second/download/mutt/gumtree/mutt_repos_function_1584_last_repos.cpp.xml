<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1584_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">maildir_open_new_message<pos:position pos:line="1" pos:column="36"/></name> <parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">MESSAGE<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type> <name pos:line="1" pos:column="48">msg<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">CONTEXT<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type> <name pos:line="1" pos:column="63">dest<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="69">HEADER<pos:position pos:line="1" pos:column="75"/></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type> <name pos:line="1" pos:column="78">hdr<pos:position pos:line="1" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="82"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">fd<pos:position pos:line="3" pos:column="9"/></name></decl>;<pos:position pos:line="3" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">path<pos:position pos:line="4" pos:column="12"/></name><index pos:line="4" pos:column="12">[<expr><name pos:line="4" pos:column="13">_POSIX_PATH_MAX<pos:position pos:line="4" pos:column="28"/></name></expr>]<pos:position pos:line="4" pos:column="29"/></index></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">suffix<pos:position pos:line="5" pos:column="14"/></name><index pos:line="5" pos:column="14">[<expr><literal type="number" pos:line="5" pos:column="15">16<pos:position pos:line="5" pos:column="17"/></literal></expr>]<pos:position pos:line="5" pos:column="18"/></index></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">subdir<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[<expr><literal type="number" pos:line="6" pos:column="15">16<pos:position pos:line="6" pos:column="17"/></literal></expr>]<pos:position pos:line="6" pos:column="18"/></index></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">mode_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">omask<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">hdr<pos:position pos:line="9" pos:column="10"/></name></expr>)<pos:position pos:line="9" pos:column="11"/></condition><then pos:line="9" pos:column="11">
  <block pos:line="10" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">short<pos:position pos:line="11" pos:column="10"/></name></type> <name pos:line="11" pos:column="11">deleted<pos:position pos:line="11" pos:column="18"/></name> <init pos:line="11" pos:column="19">= <expr><name><name pos:line="11" pos:column="21">hdr<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">-&gt;<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="26">deleted<pos:position pos:line="11" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="34"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">hdr<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">-&gt;<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="10">deleted<pos:position pos:line="12" pos:column="17"/></name></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <literal type="number" pos:line="12" pos:column="20">0<pos:position pos:line="12" pos:column="21"/></literal></expr>;<pos:position pos:line="12" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">maildir_flags<pos:position pos:line="14" pos:column="18"/></name> <argument_list pos:line="14" pos:column="19">(<argument><expr><name pos:line="14" pos:column="20">suffix<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="28">sizeof <argument_list pos:line="14" pos:column="35">(<argument><expr><name pos:line="14" pos:column="36">suffix<pos:position pos:line="14" pos:column="42"/></name></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="14" pos:column="45">hdr<pos:position pos:line="14" pos:column="48"/></name></expr></argument>)<pos:position pos:line="14" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="50"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="16" pos:column="5">hdr<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">-&gt;<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="10">deleted<pos:position pos:line="16" pos:column="17"/></name></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <name pos:line="16" pos:column="20">deleted<pos:position pos:line="16" pos:column="27"/></name></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></then>
  <else pos:line="18" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><operator pos:line="19" pos:column="5">*<pos:position pos:line="19" pos:column="6"/></operator><name pos:line="19" pos:column="6">suffix<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <literal type="char" pos:line="19" pos:column="15">'\0'<pos:position pos:line="19" pos:column="19"/></literal></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt></block></else></if>

  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">hdr<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">&amp;&amp;<pos:position pos:line="21" pos:column="21"/></operator> <operator pos:line="21" pos:column="14">(<pos:position pos:line="21" pos:column="15"/></operator><name><name pos:line="21" pos:column="15">hdr<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="20">read<pos:position pos:line="21" pos:column="24"/></name></name> <operator pos:line="21" pos:column="25">||<pos:position pos:line="21" pos:column="27"/></operator> <name><name pos:line="21" pos:column="28">hdr<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">-&gt;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="33">old<pos:position pos:line="21" pos:column="36"/></name></name><operator pos:line="21" pos:column="36">)<pos:position pos:line="21" pos:column="37"/></operator></expr>)<pos:position pos:line="21" pos:column="38"/></condition><then pos:line="21" pos:column="38">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="5">strfcpy<pos:position pos:line="22" pos:column="12"/></name> <argument_list pos:line="22" pos:column="13">(<argument><expr><name pos:line="22" pos:column="14">subdir<pos:position pos:line="22" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="22">"cur"<pos:position pos:line="22" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="29">sizeof <argument_list pos:line="22" pos:column="36">(<argument><expr><name pos:line="22" pos:column="37">subdir<pos:position pos:line="22" pos:column="43"/></name></expr></argument>)<pos:position pos:line="22" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="46"/></expr_stmt></block></then>
  <else pos:line="23" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="5">strfcpy<pos:position pos:line="24" pos:column="12"/></name> <argument_list pos:line="24" pos:column="13">(<argument><expr><name pos:line="24" pos:column="14">subdir<pos:position pos:line="24" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="22">"new"<pos:position pos:line="24" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="29">sizeof <argument_list pos:line="24" pos:column="36">(<argument><expr><name pos:line="24" pos:column="37">subdir<pos:position pos:line="24" pos:column="43"/></name></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="46"/></expr_stmt></block></else></if>

  <expr_stmt><expr><name pos:line="26" pos:column="3">omask<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator> <call><name pos:line="26" pos:column="11">umask<pos:position pos:line="26" pos:column="16"/></name> <argument_list pos:line="26" pos:column="17">(<argument><expr><call><name pos:line="26" pos:column="18">mh_umask<pos:position pos:line="26" pos:column="26"/></name> <argument_list pos:line="26" pos:column="27">(<argument><expr><name pos:line="26" pos:column="28">dest<pos:position pos:line="26" pos:column="32"/></name></expr></argument>)<pos:position pos:line="26" pos:column="33"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt>
  <macro><name pos:line="27" pos:column="3">FOREVER<pos:position pos:line="27" pos:column="10"/></name></macro>
  <block pos:line="28" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">snprintf<pos:position pos:line="29" pos:column="13"/></name> <argument_list pos:line="29" pos:column="14">(<argument><expr><name pos:line="29" pos:column="15">path<pos:position pos:line="29" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="21">_POSIX_PATH_MAX<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="38">"%s/tmp/%s.%lld.%u_%d.%s%s"<pos:position pos:line="29" pos:column="65"/></literal></expr></argument>,
	      <argument><expr><name><name pos:line="30" pos:column="15">dest<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">-&gt;<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="21">path<pos:position pos:line="30" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="27">subdir<pos:position pos:line="30" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="35">(<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="36">long<pos:position pos:line="30" pos:column="40"/></name> <name pos:line="30" pos:column="41">long<pos:position pos:line="30" pos:column="45"/></name><operator pos:line="30" pos:column="45">)<pos:position pos:line="30" pos:column="46"/></operator><call><name pos:line="30" pos:column="46">time<pos:position pos:line="30" pos:column="50"/></name> <argument_list pos:line="30" pos:column="51">(<argument><expr><name pos:line="30" pos:column="52">NULL<pos:position pos:line="30" pos:column="56"/></name></expr></argument>)<pos:position pos:line="30" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="30" pos:column="59">(<pos:position pos:line="30" pos:column="60"/></operator><name pos:line="30" pos:column="60">unsigned<pos:position pos:line="30" pos:column="68"/></name> <name pos:line="30" pos:column="69">int<pos:position pos:line="30" pos:column="72"/></name><operator pos:line="30" pos:column="72">)<pos:position pos:line="30" pos:column="73"/></operator><call><name pos:line="30" pos:column="73">getpid<pos:position pos:line="30" pos:column="79"/></name> <argument_list pos:line="30" pos:column="80">()<pos:position pos:line="30" pos:column="82"/></argument_list></call></expr></argument>,
	      <argument><expr><name pos:line="31" pos:column="15">Counter<pos:position pos:line="31" pos:column="22"/></name><operator pos:line="31" pos:column="22">++<pos:position pos:line="31" pos:column="24"/></operator></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="26">NONULL<pos:position pos:line="31" pos:column="32"/></name> <argument_list pos:line="31" pos:column="33">(<argument><expr><name pos:line="31" pos:column="34">Hostname<pos:position pos:line="31" pos:column="42"/></name></expr></argument>)<pos:position pos:line="31" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="31" pos:column="45">suffix<pos:position pos:line="31" pos:column="51"/></name></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="53"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="33" pos:column="5">dprint<pos:position pos:line="33" pos:column="11"/></name> <argument_list pos:line="33" pos:column="12">(<argument><expr><literal type="number" pos:line="33" pos:column="13">2<pos:position pos:line="33" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="33" pos:column="16">(<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">debugfile<pos:position pos:line="33" pos:column="26"/></name><operator pos:line="33" pos:column="26">,<pos:position pos:line="33" pos:column="27"/></operator> <literal type="string" pos:line="33" pos:column="28">"maildir_open_new_message (): Trying %s.\n"<pos:position pos:line="33" pos:column="71"/></literal><operator pos:line="33" pos:column="71">,<pos:position pos:line="33" pos:column="72"/></operator>
		<name pos:line="34" pos:column="17">path<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">)<pos:position pos:line="34" pos:column="22"/></operator></expr></argument>)<pos:position pos:line="34" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="24"/></expr_stmt>

    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><operator pos:line="36" pos:column="9">(<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">fd<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">=<pos:position pos:line="36" pos:column="14"/></operator> <call><name pos:line="36" pos:column="15">open<pos:position pos:line="36" pos:column="19"/></name> <argument_list pos:line="36" pos:column="20">(<argument><expr><name pos:line="36" pos:column="21">path<pos:position pos:line="36" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="27">O_WRONLY<pos:position pos:line="36" pos:column="35"/></name> <operator pos:line="36" pos:column="36">|<pos:position pos:line="36" pos:column="37"/></operator> <name pos:line="36" pos:column="38">O_EXCL<pos:position pos:line="36" pos:column="44"/></name> <operator pos:line="36" pos:column="45">|<pos:position pos:line="36" pos:column="46"/></operator> <name pos:line="36" pos:column="47">O_CREAT<pos:position pos:line="36" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="56">0666<pos:position pos:line="36" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="61"/></argument_list></call><operator pos:line="36" pos:column="61">)<pos:position pos:line="36" pos:column="62"/></operator> <operator pos:line="36" pos:column="63">==<pos:position pos:line="36" pos:column="65"/></operator> <operator pos:line="36" pos:column="66">-<pos:position pos:line="36" pos:column="67"/></operator><literal type="number" pos:line="36" pos:column="67">1<pos:position pos:line="36" pos:column="68"/></literal></expr>)<pos:position pos:line="36" pos:column="69"/></condition><then pos:line="36" pos:column="69">
    <block pos:line="37" pos:column="5">{
      <if pos:line="38" pos:column="7">if <condition pos:line="38" pos:column="10">(<expr><name pos:line="38" pos:column="11">errno<pos:position pos:line="38" pos:column="16"/></name> <operator pos:line="38" pos:column="17">!=<pos:position pos:line="38" pos:column="19"/></operator> <name pos:line="38" pos:column="20">EEXIST<pos:position pos:line="38" pos:column="26"/></name></expr>)<pos:position pos:line="38" pos:column="27"/></condition><then pos:line="38" pos:column="27">
      <block pos:line="39" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="40" pos:column="9">umask<pos:position pos:line="40" pos:column="14"/></name> <argument_list pos:line="40" pos:column="15">(<argument><expr><name pos:line="40" pos:column="16">omask<pos:position pos:line="40" pos:column="21"/></name></expr></argument>)<pos:position pos:line="40" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">mutt_perror<pos:position pos:line="41" pos:column="20"/></name> <argument_list pos:line="41" pos:column="21">(<argument><expr><name pos:line="41" pos:column="22">path<pos:position pos:line="41" pos:column="26"/></name></expr></argument>)<pos:position pos:line="41" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="28"/></expr_stmt>
	<return pos:line="42" pos:column="9">return <expr><operator pos:line="42" pos:column="16">-<pos:position pos:line="42" pos:column="17"/></operator><literal type="number" pos:line="42" pos:column="17">1<pos:position pos:line="42" pos:column="18"/></literal></expr>;<pos:position pos:line="42" pos:column="19"/></return>
      }<pos:position pos:line="43" pos:column="8"/></block></then></if>
    }<pos:position pos:line="44" pos:column="6"/></block></then>
    <else pos:line="45" pos:column="5">else
    <block pos:line="46" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="47" pos:column="7">dprint<pos:position pos:line="47" pos:column="13"/></name> <argument_list pos:line="47" pos:column="14">(<argument><expr><literal type="number" pos:line="47" pos:column="15">2<pos:position pos:line="47" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="47" pos:column="18">(<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="19">debugfile<pos:position pos:line="47" pos:column="28"/></name><operator pos:line="47" pos:column="28">,<pos:position pos:line="47" pos:column="29"/></operator> <literal type="string" pos:line="47" pos:column="30">"maildir_open_new_message (): Success.\n"<pos:position pos:line="47" pos:column="71"/></literal><operator pos:line="47" pos:column="71">)<pos:position pos:line="47" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="47" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="74"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="48" pos:column="7">msg<pos:position pos:line="48" pos:column="10"/></name><operator pos:line="48" pos:column="10">-&gt;<pos:position pos:line="48" pos:column="15"/></operator><name pos:line="48" pos:column="12">path<pos:position pos:line="48" pos:column="16"/></name></name> <operator pos:line="48" pos:column="17">=<pos:position pos:line="48" pos:column="18"/></operator> <call><name pos:line="48" pos:column="19">safe_strdup<pos:position pos:line="48" pos:column="30"/></name> <argument_list pos:line="48" pos:column="31">(<argument><expr><name pos:line="48" pos:column="32">path<pos:position pos:line="48" pos:column="36"/></name></expr></argument>)<pos:position pos:line="48" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="38"/></expr_stmt>
      <break pos:line="49" pos:column="7">break;<pos:position pos:line="49" pos:column="13"/></break>
    }<pos:position pos:line="50" pos:column="6"/></block></else></if>
  }<pos:position pos:line="51" pos:column="4"/></block>
  <expr_stmt><expr><call><name pos:line="52" pos:column="3">umask<pos:position pos:line="52" pos:column="8"/></name> <argument_list pos:line="52" pos:column="9">(<argument><expr><name pos:line="52" pos:column="10">omask<pos:position pos:line="52" pos:column="15"/></name></expr></argument>)<pos:position pos:line="52" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="17"/></expr_stmt>

  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><operator pos:line="54" pos:column="7">(<pos:position pos:line="54" pos:column="8"/></operator><name><name pos:line="54" pos:column="8">msg<pos:position pos:line="54" pos:column="11"/></name><operator pos:line="54" pos:column="11">-&gt;<pos:position pos:line="54" pos:column="16"/></operator><name pos:line="54" pos:column="13">fp<pos:position pos:line="54" pos:column="15"/></name></name> <operator pos:line="54" pos:column="16">=<pos:position pos:line="54" pos:column="17"/></operator> <call><name pos:line="54" pos:column="18">fdopen<pos:position pos:line="54" pos:column="24"/></name> <argument_list pos:line="54" pos:column="25">(<argument><expr><name pos:line="54" pos:column="26">fd<pos:position pos:line="54" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="30">"w"<pos:position pos:line="54" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="34"/></argument_list></call><operator pos:line="54" pos:column="34">)<pos:position pos:line="54" pos:column="35"/></operator> <operator pos:line="54" pos:column="36">==<pos:position pos:line="54" pos:column="38"/></operator> <name pos:line="54" pos:column="39">NULL<pos:position pos:line="54" pos:column="43"/></name></expr>)<pos:position pos:line="54" pos:column="44"/></condition><then pos:line="54" pos:column="44">
  <block pos:line="55" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">FREE<pos:position pos:line="56" pos:column="9"/></name> <argument_list pos:line="56" pos:column="10">(<argument><expr><operator pos:line="56" pos:column="11">&amp;<pos:position pos:line="56" pos:column="16"/></operator><name><name pos:line="56" pos:column="12">msg<pos:position pos:line="56" pos:column="15"/></name><operator pos:line="56" pos:column="15">-&gt;<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="17">path<pos:position pos:line="56" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">close<pos:position pos:line="57" pos:column="10"/></name> <argument_list pos:line="57" pos:column="11">(<argument><expr><name pos:line="57" pos:column="12">fd<pos:position pos:line="57" pos:column="14"/></name></expr></argument>)<pos:position pos:line="57" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">unlink<pos:position pos:line="58" pos:column="11"/></name> <argument_list pos:line="58" pos:column="12">(<argument><expr><name pos:line="58" pos:column="13">path<pos:position pos:line="58" pos:column="17"/></name></expr></argument>)<pos:position pos:line="58" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="19"/></expr_stmt>
    <return pos:line="59" pos:column="5">return <expr><operator pos:line="59" pos:column="12">(<pos:position pos:line="59" pos:column="13"/></operator><operator pos:line="59" pos:column="13">-<pos:position pos:line="59" pos:column="14"/></operator><literal type="number" pos:line="59" pos:column="14">1<pos:position pos:line="59" pos:column="15"/></literal><operator pos:line="59" pos:column="15">)<pos:position pos:line="59" pos:column="16"/></operator></expr>;<pos:position pos:line="59" pos:column="17"/></return>
  }<pos:position pos:line="60" pos:column="4"/></block></then></if>

  <return pos:line="62" pos:column="3">return <expr><literal type="number" pos:line="62" pos:column="10">0<pos:position pos:line="62" pos:column="11"/></literal></expr>;<pos:position pos:line="62" pos:column="12"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_262_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_parse_bind<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">BUFFER<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">buf<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">BUFFER<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">s<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">unsigned<pos:position pos:line="1" pos:column="54"/></name> <name pos:line="1" pos:column="55">long<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">data<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">BUFFER<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">err<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">binding_t<pos:position pos:line="3" pos:column="19"/></name></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">bindings<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><name pos:line="3" pos:column="32">NULL<pos:position pos:line="3" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">key<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">menu<pos:position pos:line="5" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="13">r<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><literal type="number" pos:line="5" pos:column="17">0<pos:position pos:line="5" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">(<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">key<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <call><name pos:line="7" pos:column="14">parse_keymap<pos:position pos:line="7" pos:column="26"/></name> <argument_list pos:line="7" pos:column="27">(<argument><expr><operator pos:line="7" pos:column="28">&amp;<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="29">menu<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="35">s<pos:position pos:line="7" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="38">err<pos:position pos:line="7" pos:column="41"/></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call><operator pos:line="7" pos:column="42">)<pos:position pos:line="7" pos:column="43"/></operator> <operator pos:line="7" pos:column="44">==<pos:position pos:line="7" pos:column="46"/></operator> <name pos:line="7" pos:column="47">NULL<pos:position pos:line="7" pos:column="51"/></name></expr>)<pos:position pos:line="7" pos:column="52"/></condition><then pos:line="7" pos:column="52">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><operator pos:line="8" pos:column="13">-<pos:position pos:line="8" pos:column="14"/></operator><literal type="number" pos:line="8" pos:column="14">1<pos:position pos:line="8" pos:column="15"/></literal><operator pos:line="8" pos:column="15">)<pos:position pos:line="8" pos:column="16"/></operator></expr>;<pos:position pos:line="8" pos:column="17"/></return></block></then></if>

  <comment type="block" pos:line="10" pos:column="3">/* function to execute */</comment>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">mutt_extract_token<pos:position pos:line="11" pos:column="21"/></name> <argument_list pos:line="11" pos:column="22">(<argument><expr><name pos:line="11" pos:column="23">buf<pos:position pos:line="11" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="28">s<pos:position pos:line="11" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="31">0<pos:position pos:line="11" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><call><name pos:line="12" pos:column="7">MoreArgs<pos:position pos:line="12" pos:column="15"/></name> <argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">s<pos:position pos:line="12" pos:column="18"/></name></expr></argument>)<pos:position pos:line="12" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20">
  <block pos:line="13" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">strfcpy<pos:position pos:line="14" pos:column="12"/></name> <argument_list pos:line="14" pos:column="13">(<argument><expr><name><name pos:line="14" pos:column="14">err<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">-&gt;<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="19">data<pos:position pos:line="14" pos:column="23"/></name></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="25">_<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><literal type="string" pos:line="14" pos:column="27">"bind: too many arguments"<pos:position pos:line="14" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="56">err<pos:position pos:line="14" pos:column="59"/></name><operator pos:line="14" pos:column="59">-&gt;<pos:position pos:line="14" pos:column="64"/></operator><name pos:line="14" pos:column="61">dsize<pos:position pos:line="14" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">r<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator> <operator pos:line="15" pos:column="9">-<pos:position pos:line="15" pos:column="10"/></operator><literal type="number" pos:line="15" pos:column="10">1<pos:position pos:line="15" pos:column="11"/></literal></expr>;<pos:position pos:line="15" pos:column="12"/></expr_stmt>
  }<pos:position pos:line="16" pos:column="4"/></block></then>
  <elseif pos:line="17" pos:column="3">else <if pos:line="17" pos:column="8">if <condition pos:line="17" pos:column="11">(<expr><call><name pos:line="17" pos:column="12">ascii_strcasecmp<pos:position pos:line="17" pos:column="28"/></name> <argument_list pos:line="17" pos:column="29">(<argument><expr><literal type="string" pos:line="17" pos:column="30">"noop"<pos:position pos:line="17" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="38">buf<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">-&gt;<pos:position pos:line="17" pos:column="46"/></operator><name pos:line="17" pos:column="43">data<pos:position pos:line="17" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call> <operator pos:line="17" pos:column="49">==<pos:position pos:line="17" pos:column="51"/></operator> <literal type="number" pos:line="17" pos:column="52">0<pos:position pos:line="17" pos:column="53"/></literal></expr>)<pos:position pos:line="17" pos:column="54"/></condition><then pos:line="17" pos:column="54">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="5">km_bindkey<pos:position pos:line="18" pos:column="15"/></name> <argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">key<pos:position pos:line="18" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="22">menu<pos:position pos:line="18" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="28">OP_NULL<pos:position pos:line="18" pos:column="35"/></name></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt></block></then></if></elseif> <comment type="block" pos:line="18" pos:column="38">/* the `unbind' command */</comment>
  <else pos:line="19" pos:column="3">else
  <block pos:line="20" pos:column="3">{
    <comment type="block" pos:line="21" pos:column="5">/* First check the "generic" list of commands */</comment>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">menu<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">==<pos:position pos:line="22" pos:column="16"/></operator> <name pos:line="22" pos:column="17">MENU_PAGER<pos:position pos:line="22" pos:column="27"/></name> <operator pos:line="22" pos:column="28">||<pos:position pos:line="22" pos:column="30"/></operator> <name pos:line="22" pos:column="31">menu<pos:position pos:line="22" pos:column="35"/></name> <operator pos:line="22" pos:column="36">==<pos:position pos:line="22" pos:column="38"/></operator> <name pos:line="22" pos:column="39">MENU_EDITOR<pos:position pos:line="22" pos:column="50"/></name> <operator pos:line="22" pos:column="51">||<pos:position pos:line="22" pos:column="53"/></operator> <name pos:line="22" pos:column="54">menu<pos:position pos:line="22" pos:column="58"/></name> <operator pos:line="22" pos:column="59">==<pos:position pos:line="22" pos:column="61"/></operator> <name pos:line="22" pos:column="62">MENU_GENERIC<pos:position pos:line="22" pos:column="74"/></name> <operator pos:line="22" pos:column="75">||<pos:position pos:line="22" pos:column="77"/></operator>
	<call><name pos:line="23" pos:column="9">try_bind<pos:position pos:line="23" pos:column="17"/></name> <argument_list pos:line="23" pos:column="18">(<argument><expr><name pos:line="23" pos:column="19">key<pos:position pos:line="23" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="24">menu<pos:position pos:line="23" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="30">buf<pos:position pos:line="23" pos:column="33"/></name><operator pos:line="23" pos:column="33">-&gt;<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="35">data<pos:position pos:line="23" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="41">OpGeneric<pos:position pos:line="23" pos:column="50"/></name></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call> <operator pos:line="23" pos:column="52">!=<pos:position pos:line="23" pos:column="54"/></operator> <literal type="number" pos:line="23" pos:column="55">0<pos:position pos:line="23" pos:column="56"/></literal></expr>)<pos:position pos:line="23" pos:column="57"/></condition><then pos:line="23" pos:column="57">
    <block pos:line="24" pos:column="5">{
      <comment type="block" pos:line="25" pos:column="7">/* Now check the menu-specific list of commands (if they exist) */</comment>
      <expr_stmt><expr><name pos:line="26" pos:column="7">bindings<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <call><name pos:line="26" pos:column="18">km_get_table<pos:position pos:line="26" pos:column="30"/></name> <argument_list pos:line="26" pos:column="31">(<argument><expr><name pos:line="26" pos:column="32">menu<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>
      <if pos:line="27" pos:column="7">if <condition pos:line="27" pos:column="10">(<expr><name pos:line="27" pos:column="11">bindings<pos:position pos:line="27" pos:column="19"/></name> <operator pos:line="27" pos:column="20">&amp;&amp;<pos:position pos:line="27" pos:column="30"/></operator> <call><name pos:line="27" pos:column="23">try_bind<pos:position pos:line="27" pos:column="31"/></name> <argument_list pos:line="27" pos:column="32">(<argument><expr><name pos:line="27" pos:column="33">key<pos:position pos:line="27" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="38">menu<pos:position pos:line="27" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="44">buf<pos:position pos:line="27" pos:column="47"/></name><operator pos:line="27" pos:column="47">-&gt;<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="49">data<pos:position pos:line="27" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="55">bindings<pos:position pos:line="27" pos:column="63"/></name></expr></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></call> <operator pos:line="27" pos:column="65">!=<pos:position pos:line="27" pos:column="67"/></operator> <literal type="number" pos:line="27" pos:column="68">0<pos:position pos:line="27" pos:column="69"/></literal></expr>)<pos:position pos:line="27" pos:column="70"/></condition><then pos:line="27" pos:column="70">
      <block pos:line="28" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">snprintf<pos:position pos:line="29" pos:column="17"/></name> <argument_list pos:line="29" pos:column="18">(<argument><expr><name><name pos:line="29" pos:column="19">err<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">-&gt;<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="24">data<pos:position pos:line="29" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="30">err<pos:position pos:line="29" pos:column="33"/></name><operator pos:line="29" pos:column="33">-&gt;<pos:position pos:line="29" pos:column="38"/></operator><name pos:line="29" pos:column="35">dsize<pos:position pos:line="29" pos:column="40"/></name></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="42">_<pos:position pos:line="29" pos:column="43"/></name><argument_list pos:line="29" pos:column="43">(<argument><expr><literal type="string" pos:line="29" pos:column="44">"%s: no such function in map"<pos:position pos:line="29" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="76">buf<pos:position pos:line="29" pos:column="79"/></name><operator pos:line="29" pos:column="79">-&gt;<pos:position pos:line="29" pos:column="84"/></operator><name pos:line="29" pos:column="81">data<pos:position pos:line="29" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="87"/></expr_stmt>
	<expr_stmt><expr><name pos:line="30" pos:column="9">r<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <operator pos:line="30" pos:column="13">-<pos:position pos:line="30" pos:column="14"/></operator><literal type="number" pos:line="30" pos:column="14">1<pos:position pos:line="30" pos:column="15"/></literal></expr>;<pos:position pos:line="30" pos:column="16"/></expr_stmt>
      }<pos:position pos:line="31" pos:column="8"/></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
  }<pos:position pos:line="33" pos:column="4"/></block></else></if>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">FREE<pos:position pos:line="34" pos:column="7"/></name> <argument_list pos:line="34" pos:column="8">(<argument><expr><operator pos:line="34" pos:column="9">&amp;<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="10">key<pos:position pos:line="34" pos:column="13"/></name></expr></argument>)<pos:position pos:line="34" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="15"/></expr_stmt>
  <return pos:line="35" pos:column="3">return <expr><operator pos:line="35" pos:column="10">(<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">r<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">)<pos:position pos:line="35" pos:column="13"/></operator></expr>;<pos:position pos:line="35" pos:column="14"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

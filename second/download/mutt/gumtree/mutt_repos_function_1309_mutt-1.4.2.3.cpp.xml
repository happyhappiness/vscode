<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1309_mutt-1.4.2.3.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">imap_mailbox_check<pos:position pos:line="1" pos:column="23"/></name> <argument_list pos:line="1" pos:column="24">(<argument><expr><name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name><operator pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></operator> <name pos:line="1" pos:column="31">path<pos:position pos:line="1" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="37">int<pos:position pos:line="1" pos:column="40"/></name> <operator pos:line="1" pos:column="41">new<pos:position pos:line="1" pos:column="44"/></operator></expr></argument>)<pos:position pos:line="1" pos:column="45"/></argument_list>
<argument_list pos:line="2" pos:column="1">{
  <argument><expr><name pos:line="3" pos:column="3">CONNECTION<pos:position pos:line="3" pos:column="13"/></name> <operator pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></operator><name pos:line="3" pos:column="15">conn<pos:position pos:line="3" pos:column="19"/></name></expr></argument>;
  <argument><expr><name pos:line="4" pos:column="3">IMAP_DATA<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="14">idata<pos:position pos:line="4" pos:column="19"/></name></expr></argument>;
  <argument><expr><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <name><name pos:line="5" pos:column="8">buf<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><name pos:line="5" pos:column="12">LONG_STRING<pos:position pos:line="5" pos:column="23"/></name></expr>]<pos:position pos:line="5" pos:column="24"/></index></name></expr></argument>;
  <argument><expr><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <name><name pos:line="6" pos:column="8">mbox<pos:position pos:line="6" pos:column="12"/></name><index pos:line="6" pos:column="12">[<expr><name pos:line="6" pos:column="13">LONG_STRING<pos:position pos:line="6" pos:column="24"/></name></expr>]<pos:position pos:line="6" pos:column="25"/></index></name></expr></argument>;
  <argument><expr><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <name><name pos:line="7" pos:column="8">mbox_unquoted<pos:position pos:line="7" pos:column="21"/></name><index pos:line="7" pos:column="21">[<expr><name pos:line="7" pos:column="22">LONG_STRING<pos:position pos:line="7" pos:column="33"/></name></expr>]<pos:position pos:line="7" pos:column="34"/></index></name></expr></argument>;
  <argument><expr><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <operator pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="9">s<pos:position pos:line="8" pos:column="10"/></name></expr></argument>;
  <argument><expr><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name> <name pos:line="9" pos:column="7">msgcount<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr></argument>;
  <argument><expr><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name> <name pos:line="10" pos:column="7">connflags<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <literal type="number" pos:line="10" pos:column="19">0<pos:position pos:line="10" pos:column="20"/></literal></expr></argument>;
  <argument><expr><name pos:line="11" pos:column="3">IMAP_MBOX<pos:position pos:line="11" pos:column="12"/></name> <name pos:line="11" pos:column="13">mx<pos:position pos:line="11" pos:column="15"/></name></expr></argument>;
  <argument><expr><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name> <name pos:line="12" pos:column="7">rc<pos:position pos:line="12" pos:column="9"/></name></expr></argument>;
  
  if <argument><expr><operator pos:line="14" pos:column="6">(<pos:position pos:line="14" pos:column="7"/></operator><call><name pos:line="14" pos:column="7">imap_parse_path<pos:position pos:line="14" pos:column="22"/></name> <argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">path<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="30">&amp;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="31">mx<pos:position pos:line="14" pos:column="33"/></name></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call><operator pos:line="14" pos:column="34">)<pos:position pos:line="14" pos:column="35"/></operator></expr></argument>
    <return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">-<pos:position pos:line="15" pos:column="13"/></operator><literal type="number" pos:line="15" pos:column="13">1<pos:position pos:line="15" pos:column="14"/></literal></expr>;<pos:position pos:line="15" pos:column="15"/></return></argument_list></decl></decl_stmt>

  <comment type="block" pos:line="17" pos:column="3">/* If imap_passive is set, don't open a connection to check for new mail */</comment>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><call><name pos:line="18" pos:column="7">option<pos:position pos:line="18" pos:column="13"/></name> <argument_list pos:line="18" pos:column="14">(<argument><expr><name pos:line="18" pos:column="15">OPTIMAPPASSIVE<pos:position pos:line="18" pos:column="29"/></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="31"/></condition><then pos:line="18" pos:column="31">
    <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="5">connflags<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <name pos:line="19" pos:column="17">M_IMAP_CONN_NONEW<pos:position pos:line="19" pos:column="34"/></name></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt></block></then></if>

  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><operator pos:line="21" pos:column="7">!<pos:position pos:line="21" pos:column="8"/></operator><operator pos:line="21" pos:column="8">(<pos:position pos:line="21" pos:column="9"/></operator><name pos:line="21" pos:column="9">idata<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <call><name pos:line="21" pos:column="17">imap_conn_find<pos:position pos:line="21" pos:column="31"/></name> <argument_list pos:line="21" pos:column="32">(<argument><expr><operator pos:line="21" pos:column="33">&amp;<pos:position pos:line="21" pos:column="38"/></operator><operator pos:line="21" pos:column="34">(<pos:position pos:line="21" pos:column="35"/></operator><name><name pos:line="21" pos:column="35">mx<pos:position pos:line="21" pos:column="37"/></name><operator pos:line="21" pos:column="37">.<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="38">account<pos:position pos:line="21" pos:column="45"/></name></name><operator pos:line="21" pos:column="45">)<pos:position pos:line="21" pos:column="46"/></operator></expr></argument>, <argument><expr><name pos:line="21" pos:column="48">connflags<pos:position pos:line="21" pos:column="57"/></name></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call><operator pos:line="21" pos:column="58">)<pos:position pos:line="21" pos:column="59"/></operator></expr>)<pos:position pos:line="21" pos:column="60"/></condition><then pos:line="21" pos:column="60">
  <block pos:line="22" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">FREE<pos:position pos:line="23" pos:column="9"/></name> <argument_list pos:line="23" pos:column="10">(<argument><expr><operator pos:line="23" pos:column="11">&amp;<pos:position pos:line="23" pos:column="16"/></operator><name><name pos:line="23" pos:column="12">mx<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">.<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">mbox<pos:position pos:line="23" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt>
    <return pos:line="24" pos:column="5">return <expr><operator pos:line="24" pos:column="12">-<pos:position pos:line="24" pos:column="13"/></operator><literal type="number" pos:line="24" pos:column="13">1<pos:position pos:line="24" pos:column="14"/></literal></expr>;<pos:position pos:line="24" pos:column="15"/></return>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="26" pos:column="3">conn<pos:position pos:line="26" pos:column="7"/></name> <operator pos:line="26" pos:column="8">=<pos:position pos:line="26" pos:column="9"/></operator> <name><name pos:line="26" pos:column="10">idata<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">-&gt;<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="17">conn<pos:position pos:line="26" pos:column="21"/></name></name></expr>;<pos:position pos:line="26" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="28" pos:column="3">imap_fix_path<pos:position pos:line="28" pos:column="16"/></name> <argument_list pos:line="28" pos:column="17">(<argument><expr><name pos:line="28" pos:column="18">idata<pos:position pos:line="28" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="25">mx<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">.<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="28">mbox<pos:position pos:line="28" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="34">buf<pos:position pos:line="28" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="39">sizeof <argument_list pos:line="28" pos:column="46">(<argument><expr><name pos:line="28" pos:column="47">buf<pos:position pos:line="28" pos:column="50"/></name></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">FREE<pos:position pos:line="29" pos:column="7"/></name> <argument_list pos:line="29" pos:column="8">(<argument><expr><operator pos:line="29" pos:column="9">&amp;<pos:position pos:line="29" pos:column="14"/></operator><name><name pos:line="29" pos:column="10">mx<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">.<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">mbox<pos:position pos:line="29" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="31" pos:column="3">imap_munge_mbox_name<pos:position pos:line="31" pos:column="23"/></name> <argument_list pos:line="31" pos:column="24">(<argument><expr><name pos:line="31" pos:column="25">mbox<pos:position pos:line="31" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="31">sizeof<argument_list pos:line="31" pos:column="37">(<argument><expr><name pos:line="31" pos:column="38">mbox<pos:position pos:line="31" pos:column="42"/></name></expr></argument>)<pos:position pos:line="31" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="31" pos:column="45">buf<pos:position pos:line="31" pos:column="48"/></name></expr></argument>)<pos:position pos:line="31" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">strfcpy<pos:position pos:line="32" pos:column="10"/></name> <argument_list pos:line="32" pos:column="11">(<argument><expr><name pos:line="32" pos:column="12">mbox_unquoted<pos:position pos:line="32" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="27">buf<pos:position pos:line="32" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="32">sizeof <argument_list pos:line="32" pos:column="39">(<argument><expr><name pos:line="32" pos:column="40">mbox_unquoted<pos:position pos:line="32" pos:column="53"/></name></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="56"/></expr_stmt>

  <comment type="block" pos:line="34" pos:column="3">/* The draft IMAP implementor's guide warns againts using the STATUS
   * command on a mailbox that you have selected 
   */</comment>

  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><call><name pos:line="38" pos:column="7">mutt_strcmp<pos:position pos:line="38" pos:column="18"/></name> <argument_list pos:line="38" pos:column="19">(<argument><expr><name pos:line="38" pos:column="20">mbox_unquoted<pos:position pos:line="38" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="35">idata<pos:position pos:line="38" pos:column="40"/></name><operator pos:line="38" pos:column="40">-&gt;<pos:position pos:line="38" pos:column="45"/></operator><name pos:line="38" pos:column="42">mailbox<pos:position pos:line="38" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="50"/></argument_list></call> <operator pos:line="38" pos:column="51">==<pos:position pos:line="38" pos:column="53"/></operator> <literal type="number" pos:line="38" pos:column="54">0<pos:position pos:line="38" pos:column="55"/></literal>
      <operator pos:line="39" pos:column="7">||<pos:position pos:line="39" pos:column="9"/></operator> <operator pos:line="39" pos:column="10">(<pos:position pos:line="39" pos:column="11"/></operator><call><name pos:line="39" pos:column="11">ascii_strcasecmp<pos:position pos:line="39" pos:column="27"/></name> <argument_list pos:line="39" pos:column="28">(<argument><expr><name pos:line="39" pos:column="29">mbox_unquoted<pos:position pos:line="39" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="44">"INBOX"<pos:position pos:line="39" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="52"/></argument_list></call> <operator pos:line="39" pos:column="53">==<pos:position pos:line="39" pos:column="55"/></operator> <literal type="number" pos:line="39" pos:column="56">0<pos:position pos:line="39" pos:column="57"/></literal>
	  <operator pos:line="40" pos:column="11">&amp;&amp;<pos:position pos:line="40" pos:column="21"/></operator> <call><name pos:line="40" pos:column="14">mutt_strcasecmp<pos:position pos:line="40" pos:column="29"/></name> <argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">mbox_unquoted<pos:position pos:line="40" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="46">idata<pos:position pos:line="40" pos:column="51"/></name><operator pos:line="40" pos:column="51">-&gt;<pos:position pos:line="40" pos:column="56"/></operator><name pos:line="40" pos:column="53">mailbox<pos:position pos:line="40" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="61"/></argument_list></call> <operator pos:line="40" pos:column="62">==<pos:position pos:line="40" pos:column="64"/></operator> <literal type="number" pos:line="40" pos:column="65">0<pos:position pos:line="40" pos:column="66"/></literal><operator pos:line="40" pos:column="66">)<pos:position pos:line="40" pos:column="67"/></operator></expr>)<pos:position pos:line="40" pos:column="68"/></condition><then pos:line="40" pos:column="68">
  <block pos:line="41" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">strfcpy<pos:position pos:line="42" pos:column="12"/></name> <argument_list pos:line="42" pos:column="13">(<argument><expr><name pos:line="42" pos:column="14">buf<pos:position pos:line="42" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="19">"NOOP"<pos:position pos:line="42" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="27">sizeof <argument_list pos:line="42" pos:column="34">(<argument><expr><name pos:line="42" pos:column="35">buf<pos:position pos:line="42" pos:column="38"/></name></expr></argument>)<pos:position pos:line="42" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="43" pos:column="4"/></block></then>
  <elseif pos:line="44" pos:column="3">else <if pos:line="44" pos:column="8">if <condition pos:line="44" pos:column="11">(<expr><call><name pos:line="44" pos:column="12">mutt_bit_isset<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">(<argument><expr><name><name pos:line="44" pos:column="27">idata<pos:position pos:line="44" pos:column="32"/></name><operator pos:line="44" pos:column="32">-&gt;<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="34">capabilities<pos:position pos:line="44" pos:column="46"/></name></name></expr></argument>,<argument><expr><name pos:line="44" pos:column="47">IMAP4REV1<pos:position pos:line="44" pos:column="56"/></name></expr></argument>)<pos:position pos:line="44" pos:column="57"/></argument_list></call> <operator pos:line="44" pos:column="58">||<pos:position pos:line="44" pos:column="60"/></operator>
	   <call><name pos:line="45" pos:column="12">mutt_bit_isset<pos:position pos:line="45" pos:column="26"/></name><argument_list pos:line="45" pos:column="26">(<argument><expr><name><name pos:line="45" pos:column="27">idata<pos:position pos:line="45" pos:column="32"/></name><operator pos:line="45" pos:column="32">-&gt;<pos:position pos:line="45" pos:column="37"/></operator><name pos:line="45" pos:column="34">capabilities<pos:position pos:line="45" pos:column="46"/></name></name></expr></argument>,<argument><expr><name pos:line="45" pos:column="47">STATUS<pos:position pos:line="45" pos:column="53"/></name></expr></argument>)<pos:position pos:line="45" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="55"/></condition><then pos:line="45" pos:column="55">
  <block pos:line="46" pos:column="3">{				
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">snprintf<pos:position pos:line="47" pos:column="13"/></name> <argument_list pos:line="47" pos:column="14">(<argument><expr><name pos:line="47" pos:column="15">buf<pos:position pos:line="47" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="20">sizeof <argument_list pos:line="47" pos:column="27">(<argument><expr><name pos:line="47" pos:column="28">buf<pos:position pos:line="47" pos:column="31"/></name></expr></argument>)<pos:position pos:line="47" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="34">"STATUS %s (%s)"<pos:position pos:line="47" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="52">mbox<pos:position pos:line="47" pos:column="56"/></name></expr></argument>,
      <argument><expr><ternary><condition><expr><operator pos:line="48" pos:column="7">new<pos:position pos:line="48" pos:column="10"/></operator></expr> ?<pos:position pos:line="48" pos:column="12"/></condition><then pos:line="48" pos:column="12"> <expr><literal type="string" pos:line="48" pos:column="13">"RECENT"<pos:position pos:line="48" pos:column="21"/></literal></expr> <pos:position pos:line="48" pos:column="22"/></then><else pos:line="48" pos:column="22">: <expr><literal type="string" pos:line="48" pos:column="24">"MESSAGES"<pos:position pos:line="48" pos:column="34"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="48" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="49" pos:column="4"/></block></then></if></elseif>
  <else pos:line="50" pos:column="3">else
    <comment type="block" pos:line="51" pos:column="5">/* Server does not support STATUS, and this is not the current mailbox.
     * There is no lightweight way to check recent arrivals */</comment>
    <block type="pseudo"><return pos:line="53" pos:column="5">return <expr><operator pos:line="53" pos:column="12">-<pos:position pos:line="53" pos:column="13"/></operator><literal type="number" pos:line="53" pos:column="13">1<pos:position pos:line="53" pos:column="14"/></literal></expr>;<pos:position pos:line="53" pos:column="15"/></return></block></else></if>

  <expr_stmt><expr><call><name pos:line="55" pos:column="3">imap_cmd_start<pos:position pos:line="55" pos:column="17"/></name> <argument_list pos:line="55" pos:column="18">(<argument><expr><name pos:line="55" pos:column="19">idata<pos:position pos:line="55" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="26">buf<pos:position pos:line="55" pos:column="29"/></name></expr></argument>)<pos:position pos:line="55" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="31"/></expr_stmt>

  <do pos:line="57" pos:column="3">do 
  <block pos:line="58" pos:column="3">{
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><operator pos:line="59" pos:column="9">(<pos:position pos:line="59" pos:column="10"/></operator><name pos:line="59" pos:column="10">rc<pos:position pos:line="59" pos:column="12"/></name> <operator pos:line="59" pos:column="13">=<pos:position pos:line="59" pos:column="14"/></operator> <call><name pos:line="59" pos:column="15">imap_cmd_step<pos:position pos:line="59" pos:column="28"/></name> <argument_list pos:line="59" pos:column="29">(<argument><expr><name pos:line="59" pos:column="30">idata<pos:position pos:line="59" pos:column="35"/></name></expr></argument>)<pos:position pos:line="59" pos:column="36"/></argument_list></call><operator pos:line="59" pos:column="36">)<pos:position pos:line="59" pos:column="37"/></operator> <operator pos:line="59" pos:column="38">!=<pos:position pos:line="59" pos:column="40"/></operator> <name pos:line="59" pos:column="41">IMAP_CMD_CONTINUE<pos:position pos:line="59" pos:column="58"/></name></expr>)<pos:position pos:line="59" pos:column="59"/></condition><then pos:line="59" pos:column="59">
      <block type="pseudo"><break pos:line="60" pos:column="7">break;<pos:position pos:line="60" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name pos:line="62" pos:column="5">s<pos:position pos:line="62" pos:column="6"/></name> <operator pos:line="62" pos:column="7">=<pos:position pos:line="62" pos:column="8"/></operator> <call><name pos:line="62" pos:column="9">imap_next_word<pos:position pos:line="62" pos:column="23"/></name> <argument_list pos:line="62" pos:column="24">(<argument><expr><name><name pos:line="62" pos:column="25">idata<pos:position pos:line="62" pos:column="30"/></name><operator pos:line="62" pos:column="30">-&gt;<pos:position pos:line="62" pos:column="35"/></operator><name pos:line="62" pos:column="32">cmd<pos:position pos:line="62" pos:column="35"/></name><operator pos:line="62" pos:column="35">.<pos:position pos:line="62" pos:column="36"/></operator><name pos:line="62" pos:column="36">buf<pos:position pos:line="62" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="41"/></expr_stmt>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><call><name pos:line="63" pos:column="9">ascii_strncasecmp<pos:position pos:line="63" pos:column="26"/></name> <argument_list pos:line="63" pos:column="27">(<argument><expr><literal type="string" pos:line="63" pos:column="28">"STATUS"<pos:position pos:line="63" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="38">s<pos:position pos:line="63" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="41">6<pos:position pos:line="63" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="43"/></argument_list></call> <operator pos:line="63" pos:column="44">==<pos:position pos:line="63" pos:column="46"/></operator> <literal type="number" pos:line="63" pos:column="47">0<pos:position pos:line="63" pos:column="48"/></literal></expr>)<pos:position pos:line="63" pos:column="49"/></condition><then pos:line="63" pos:column="49">
    <block pos:line="64" pos:column="5">{
      <expr_stmt><expr><name pos:line="65" pos:column="7">s<pos:position pos:line="65" pos:column="8"/></name> <operator pos:line="65" pos:column="9">=<pos:position pos:line="65" pos:column="10"/></operator> <call><name pos:line="65" pos:column="11">imap_next_word<pos:position pos:line="65" pos:column="25"/></name> <argument_list pos:line="65" pos:column="26">(<argument><expr><name pos:line="65" pos:column="27">s<pos:position pos:line="65" pos:column="28"/></name></expr></argument>)<pos:position pos:line="65" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="30"/></expr_stmt>
      <comment type="block" pos:line="66" pos:column="7">/* The mailbox name may or may not be quoted here. We could try to 
       * munge the server response and compare with quoted (or vise versa)
       * but it is probably more efficient to just strncmp against both. */</comment>
      <if pos:line="69" pos:column="7">if <condition pos:line="69" pos:column="10">(<expr><call><name pos:line="69" pos:column="11">mutt_strncmp<pos:position pos:line="69" pos:column="23"/></name> <argument_list pos:line="69" pos:column="24">(<argument><expr><name pos:line="69" pos:column="25">mbox_unquoted<pos:position pos:line="69" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="40">s<pos:position pos:line="69" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="69" pos:column="43">mutt_strlen<pos:position pos:line="69" pos:column="54"/></name> <argument_list pos:line="69" pos:column="55">(<argument><expr><name pos:line="69" pos:column="56">mbox_unquoted<pos:position pos:line="69" pos:column="69"/></name></expr></argument>)<pos:position pos:line="69" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="69" pos:column="71"/></argument_list></call> <operator pos:line="69" pos:column="72">==<pos:position pos:line="69" pos:column="74"/></operator> <literal type="number" pos:line="69" pos:column="75">0<pos:position pos:line="69" pos:column="76"/></literal>
	  <operator pos:line="70" pos:column="11">||<pos:position pos:line="70" pos:column="13"/></operator> <call><name pos:line="70" pos:column="14">mutt_strncmp<pos:position pos:line="70" pos:column="26"/></name> <argument_list pos:line="70" pos:column="27">(<argument><expr><name pos:line="70" pos:column="28">mbox<pos:position pos:line="70" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="34">s<pos:position pos:line="70" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="70" pos:column="37">mutt_strlen<pos:position pos:line="70" pos:column="48"/></name> <argument_list pos:line="70" pos:column="49">(<argument><expr><name pos:line="70" pos:column="50">mbox<pos:position pos:line="70" pos:column="54"/></name></expr></argument>)<pos:position pos:line="70" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="70" pos:column="56"/></argument_list></call> <operator pos:line="70" pos:column="57">==<pos:position pos:line="70" pos:column="59"/></operator> <literal type="number" pos:line="70" pos:column="60">0<pos:position pos:line="70" pos:column="61"/></literal></expr>)<pos:position pos:line="70" pos:column="62"/></condition><then pos:line="70" pos:column="62">
      <block pos:line="71" pos:column="7">{
	<expr_stmt><expr><name pos:line="72" pos:column="9">s<pos:position pos:line="72" pos:column="10"/></name> <operator pos:line="72" pos:column="11">=<pos:position pos:line="72" pos:column="12"/></operator> <call><name pos:line="72" pos:column="13">imap_next_word<pos:position pos:line="72" pos:column="27"/></name> <argument_list pos:line="72" pos:column="28">(<argument><expr><name pos:line="72" pos:column="29">s<pos:position pos:line="72" pos:column="30"/></name></expr></argument>)<pos:position pos:line="72" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="73" pos:column="9">s<pos:position pos:line="73" pos:column="10"/></name> <operator pos:line="73" pos:column="11">=<pos:position pos:line="73" pos:column="12"/></operator> <call><name pos:line="73" pos:column="13">imap_next_word<pos:position pos:line="73" pos:column="27"/></name> <argument_list pos:line="73" pos:column="28">(<argument><expr><name pos:line="73" pos:column="29">s<pos:position pos:line="73" pos:column="30"/></name></expr></argument>)<pos:position pos:line="73" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="32"/></expr_stmt>
	<if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><call><name pos:line="74" pos:column="13">isdigit<pos:position pos:line="74" pos:column="20"/></name> <argument_list pos:line="74" pos:column="21">(<argument><expr><operator pos:line="74" pos:column="22">*<pos:position pos:line="74" pos:column="23"/></operator><name pos:line="74" pos:column="23">s<pos:position pos:line="74" pos:column="24"/></name></expr></argument>)<pos:position pos:line="74" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="74" pos:column="26"/></condition><then pos:line="74" pos:column="26">
	<block pos:line="75" pos:column="9">{
	  <if pos:line="76" pos:column="11">if <condition pos:line="76" pos:column="14">(<expr><operator pos:line="76" pos:column="15">*<pos:position pos:line="76" pos:column="16"/></operator><name pos:line="76" pos:column="16">s<pos:position pos:line="76" pos:column="17"/></name> <operator pos:line="76" pos:column="18">!=<pos:position pos:line="76" pos:column="20"/></operator> <literal type="char" pos:line="76" pos:column="21">'0'<pos:position pos:line="76" pos:column="24"/></literal></expr>)<pos:position pos:line="76" pos:column="25"/></condition><then pos:line="76" pos:column="25">
	  <block pos:line="77" pos:column="11">{
	    <expr_stmt><expr><name pos:line="78" pos:column="13">msgcount<pos:position pos:line="78" pos:column="21"/></name> <operator pos:line="78" pos:column="22">=<pos:position pos:line="78" pos:column="23"/></operator> <call><name pos:line="78" pos:column="24">atoi<pos:position pos:line="78" pos:column="28"/></name><argument_list pos:line="78" pos:column="28">(<argument><expr><name pos:line="78" pos:column="29">s<pos:position pos:line="78" pos:column="30"/></name></expr></argument>)<pos:position pos:line="78" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="32"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="79" pos:column="13">dprint<pos:position pos:line="79" pos:column="19"/></name> <argument_list pos:line="79" pos:column="20">(<argument><expr><literal type="number" pos:line="79" pos:column="21">2<pos:position pos:line="79" pos:column="22"/></literal></expr></argument>, <argument><expr><operator pos:line="79" pos:column="24">(<pos:position pos:line="79" pos:column="25"/></operator><name pos:line="79" pos:column="25">debugfile<pos:position pos:line="79" pos:column="34"/></name><operator pos:line="79" pos:column="34">,<pos:position pos:line="79" pos:column="35"/></operator> <literal type="string" pos:line="79" pos:column="36">"%d new messages in %s\n"<pos:position pos:line="79" pos:column="61"/></literal><operator pos:line="79" pos:column="61">,<pos:position pos:line="79" pos:column="62"/></operator> <name pos:line="79" pos:column="63">msgcount<pos:position pos:line="79" pos:column="71"/></name><operator pos:line="79" pos:column="71">,<pos:position pos:line="79" pos:column="72"/></operator> <name pos:line="79" pos:column="73">path<pos:position pos:line="79" pos:column="77"/></name><operator pos:line="79" pos:column="77">)<pos:position pos:line="79" pos:column="78"/></operator></expr></argument>)<pos:position pos:line="79" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="80"/></expr_stmt>
	  }<pos:position pos:line="80" pos:column="12"/></block></then></if>
	}<pos:position pos:line="81" pos:column="10"/></block></then></if>
      }<pos:position pos:line="82" pos:column="8"/></block></then>
      <else pos:line="83" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="84" pos:column="9">dprint<pos:position pos:line="84" pos:column="15"/></name> <argument_list pos:line="84" pos:column="16">(<argument><expr><literal type="number" pos:line="84" pos:column="17">1<pos:position pos:line="84" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="84" pos:column="20">(<pos:position pos:line="84" pos:column="21"/></operator><name pos:line="84" pos:column="21">debugfile<pos:position pos:line="84" pos:column="30"/></name><operator pos:line="84" pos:column="30">,<pos:position pos:line="84" pos:column="31"/></operator> <literal type="string" pos:line="84" pos:column="32">"imap_mailbox_check: STATUS response doesn't match requested mailbox.\n"<pos:position pos:line="84" pos:column="104"/></literal><operator pos:line="84" pos:column="104">)<pos:position pos:line="84" pos:column="105"/></operator></expr></argument>)<pos:position pos:line="84" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="107"/></expr_stmt></block></else></if>
    }<pos:position pos:line="85" pos:column="6"/></block></then></if>
  }<pos:position pos:line="86" pos:column="4"/></block>
  while <condition pos:line="87" pos:column="9">(<expr><name pos:line="87" pos:column="10">rc<pos:position pos:line="87" pos:column="12"/></name> <operator pos:line="87" pos:column="13">==<pos:position pos:line="87" pos:column="15"/></operator> <name pos:line="87" pos:column="16">IMAP_CMD_CONTINUE<pos:position pos:line="87" pos:column="33"/></name></expr>)<pos:position pos:line="87" pos:column="34"/></condition>;<pos:position pos:line="87" pos:column="35"/></do>

  <return pos:line="89" pos:column="3">return <expr><name pos:line="89" pos:column="10">msgcount<pos:position pos:line="89" pos:column="18"/></name></expr>;<pos:position pos:line="89" pos:column="19"/></return>
}</unit>

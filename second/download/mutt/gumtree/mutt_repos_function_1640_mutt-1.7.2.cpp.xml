<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1640_mutt-1.7.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_pipe_attachment<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">FILE<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">fp<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">BODY<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">b<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">path<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">char<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">outfile<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">pid_t<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">thepid<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">out<pos:position pos:line="4" pos:column="10"/></name> <init pos:line="4" pos:column="11">= <expr><operator pos:line="4" pos:column="13">-<pos:position pos:line="4" pos:column="14"/></operator><literal type="number" pos:line="4" pos:column="14">1<pos:position pos:line="4" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">rv<pos:position pos:line="5" pos:column="9"/></name> <init pos:line="5" pos:column="10">= <expr><literal type="number" pos:line="5" pos:column="12">0<pos:position pos:line="5" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">outfile<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">&amp;&amp;<pos:position pos:line="7" pos:column="25"/></operator> <operator pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">outfile<pos:position pos:line="7" pos:column="26"/></name></expr>)<pos:position pos:line="7" pos:column="27"/></condition><then pos:line="7" pos:column="27">
    <block type="pseudo"><if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">out<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <call><name pos:line="8" pos:column="16">safe_open<pos:position pos:line="8" pos:column="25"/></name> <argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">outfile<pos:position pos:line="8" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="36">O_CREAT<pos:position pos:line="8" pos:column="43"/></name> <operator pos:line="8" pos:column="44">|<pos:position pos:line="8" pos:column="45"/></operator> <name pos:line="8" pos:column="46">O_EXCL<pos:position pos:line="8" pos:column="52"/></name> <operator pos:line="8" pos:column="53">|<pos:position pos:line="8" pos:column="54"/></operator> <name pos:line="8" pos:column="55">O_WRONLY<pos:position pos:line="8" pos:column="63"/></name></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></call><operator pos:line="8" pos:column="64">)<pos:position pos:line="8" pos:column="65"/></operator> <operator pos:line="8" pos:column="66">&lt;<pos:position pos:line="8" pos:column="70"/></operator> <literal type="number" pos:line="8" pos:column="68">0<pos:position pos:line="8" pos:column="69"/></literal></expr>)<pos:position pos:line="8" pos:column="70"/></condition><then pos:line="8" pos:column="70">
    <block pos:line="9" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="10" pos:column="7">mutt_perror<pos:position pos:line="10" pos:column="18"/></name> <argument_list pos:line="10" pos:column="19">(<argument><expr><literal type="string" pos:line="10" pos:column="20">"open"<pos:position pos:line="10" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt>
      <return pos:line="11" pos:column="7">return <expr><literal type="number" pos:line="11" pos:column="14">0<pos:position pos:line="11" pos:column="15"/></literal></expr>;<pos:position pos:line="11" pos:column="16"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if></block></then></if>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">mutt_endwin<pos:position pos:line="14" pos:column="14"/></name> <argument_list pos:line="14" pos:column="15">(<argument><expr><name pos:line="14" pos:column="16">NULL<pos:position pos:line="14" pos:column="20"/></name></expr></argument>)<pos:position pos:line="14" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">fp<pos:position pos:line="16" pos:column="9"/></name></expr>)<pos:position pos:line="16" pos:column="10"/></condition><then pos:line="16" pos:column="10">
  <block pos:line="17" pos:column="3">{
    <comment type="block" pos:line="18" pos:column="5">/* recv case */</comment>

    <decl_stmt><decl><type><name pos:line="20" pos:column="5">STATE<pos:position pos:line="20" pos:column="10"/></name></type> <name pos:line="20" pos:column="11">s<pos:position pos:line="20" pos:column="12"/></name></decl>;<pos:position pos:line="20" pos:column="13"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">memset<pos:position pos:line="22" pos:column="11"/></name> <argument_list pos:line="22" pos:column="12">(<argument><expr><operator pos:line="22" pos:column="13">&amp;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="14">s<pos:position pos:line="22" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="17">0<pos:position pos:line="22" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="20">sizeof <argument_list pos:line="22" pos:column="27">(<argument><expr><name pos:line="22" pos:column="28">STATE<pos:position pos:line="22" pos:column="33"/></name></expr></argument>)<pos:position pos:line="22" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">outfile<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">&amp;&amp;<pos:position pos:line="24" pos:column="27"/></operator> <operator pos:line="24" pos:column="20">*<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="21">outfile<pos:position pos:line="24" pos:column="28"/></name></expr>)<pos:position pos:line="24" pos:column="29"/></condition><then pos:line="24" pos:column="29">
      <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="7">thepid<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <call><name pos:line="25" pos:column="16">mutt_create_filter_fd<pos:position pos:line="25" pos:column="37"/></name> <argument_list pos:line="25" pos:column="38">(<argument><expr><name pos:line="25" pos:column="39">path<pos:position pos:line="25" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="45">&amp;<pos:position pos:line="25" pos:column="50"/></operator><name><name pos:line="25" pos:column="46">s<pos:position pos:line="25" pos:column="47"/></name><operator pos:line="25" pos:column="47">.<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="48">fpout<pos:position pos:line="25" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="55">NULL<pos:position pos:line="25" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="61">NULL<pos:position pos:line="25" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="67">-<pos:position pos:line="25" pos:column="68"/></operator><literal type="number" pos:line="25" pos:column="68">1<pos:position pos:line="25" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="71">out<pos:position pos:line="25" pos:column="74"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="76">-<pos:position pos:line="25" pos:column="77"/></operator><literal type="number" pos:line="25" pos:column="77">1<pos:position pos:line="25" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="80"/></expr_stmt></block></then>
    <else pos:line="26" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="7">thepid<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <call><name pos:line="27" pos:column="16">mutt_create_filter<pos:position pos:line="27" pos:column="34"/></name> <argument_list pos:line="27" pos:column="35">(<argument><expr><name pos:line="27" pos:column="36">path<pos:position pos:line="27" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="42">&amp;<pos:position pos:line="27" pos:column="47"/></operator><name><name pos:line="27" pos:column="43">s<pos:position pos:line="27" pos:column="44"/></name><operator pos:line="27" pos:column="44">.<pos:position pos:line="27" pos:column="45"/></operator><name pos:line="27" pos:column="45">fpout<pos:position pos:line="27" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="52">NULL<pos:position pos:line="27" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="58">NULL<pos:position pos:line="27" pos:column="62"/></name></expr></argument>)<pos:position pos:line="27" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="64"/></expr_stmt></block></else></if>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">thepid<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">&lt;<pos:position pos:line="29" pos:column="20"/></operator> <literal type="number" pos:line="29" pos:column="18">0<pos:position pos:line="29" pos:column="19"/></literal></expr>)<pos:position pos:line="29" pos:column="20"/></condition><then pos:line="29" pos:column="20">
    <block pos:line="30" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="31" pos:column="7">mutt_perror<pos:position pos:line="31" pos:column="18"/></name></type> <name pos:line="31" pos:column="19">_<pos:position pos:line="31" pos:column="20"/></name><argument_list pos:line="31" pos:column="20">(<argument><expr><literal type="string" pos:line="31" pos:column="21">"Can't create filter"<pos:position pos:line="31" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="43"/></argument_list></decl>;<pos:position pos:line="31" pos:column="44"/></decl_stmt>
      <goto pos:line="32" pos:column="7">goto <name pos:line="32" pos:column="12">bail<pos:position pos:line="32" pos:column="16"/></name>;<pos:position pos:line="32" pos:column="17"/></goto>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">s<pos:position pos:line="35" pos:column="6"/></name><operator pos:line="35" pos:column="6">.<pos:position pos:line="35" pos:column="7"/></operator><name pos:line="35" pos:column="7">fpin<pos:position pos:line="35" pos:column="11"/></name></name> <operator pos:line="35" pos:column="12">=<pos:position pos:line="35" pos:column="13"/></operator> <name pos:line="35" pos:column="14">fp<pos:position pos:line="35" pos:column="16"/></name></expr>;<pos:position pos:line="35" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">mutt_decode_attachment<pos:position pos:line="36" pos:column="27"/></name> <argument_list pos:line="36" pos:column="28">(<argument><expr><name pos:line="36" pos:column="29">b<pos:position pos:line="36" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="32">&amp;<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="33">s<pos:position pos:line="36" pos:column="34"/></name></expr></argument>)<pos:position pos:line="36" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">safe_fclose<pos:position pos:line="37" pos:column="16"/></name> <argument_list pos:line="37" pos:column="17">(<argument><expr><operator pos:line="37" pos:column="18">&amp;<pos:position pos:line="37" pos:column="23"/></operator><name><name pos:line="37" pos:column="19">s<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">.<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="21">fpout<pos:position pos:line="37" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></then>
  <else pos:line="39" pos:column="3">else
  <block pos:line="40" pos:column="3">{
    <comment type="block" pos:line="41" pos:column="5">/* send case */</comment>

    <decl_stmt><decl><type><name pos:line="43" pos:column="5">FILE<pos:position pos:line="43" pos:column="9"/></name> <modifier pos:line="43" pos:column="10">*<pos:position pos:line="43" pos:column="11"/></modifier></type><name pos:line="43" pos:column="11">ifp<pos:position pos:line="43" pos:column="14"/></name></decl>, <modifier pos:line="43" pos:column="16">*<pos:position pos:line="43" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="43" pos:column="17">ofp<pos:position pos:line="43" pos:column="20"/></name></decl>;<pos:position pos:line="43" pos:column="21"/></decl_stmt>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><operator pos:line="45" pos:column="9">(<pos:position pos:line="45" pos:column="10"/></operator><name pos:line="45" pos:column="10">ifp<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">=<pos:position pos:line="45" pos:column="15"/></operator> <call><name pos:line="45" pos:column="16">fopen<pos:position pos:line="45" pos:column="21"/></name> <argument_list pos:line="45" pos:column="22">(<argument><expr><name><name pos:line="45" pos:column="23">b<pos:position pos:line="45" pos:column="24"/></name><operator pos:line="45" pos:column="24">-&gt;<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="26">filename<pos:position pos:line="45" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="36">"r"<pos:position pos:line="45" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="40"/></argument_list></call><operator pos:line="45" pos:column="40">)<pos:position pos:line="45" pos:column="41"/></operator> <operator pos:line="45" pos:column="42">==<pos:position pos:line="45" pos:column="44"/></operator> <name pos:line="45" pos:column="45">NULL<pos:position pos:line="45" pos:column="49"/></name></expr>)<pos:position pos:line="45" pos:column="50"/></condition><then pos:line="45" pos:column="50">
    <block pos:line="46" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="47" pos:column="7">mutt_perror<pos:position pos:line="47" pos:column="18"/></name> <argument_list pos:line="47" pos:column="19">(<argument><expr><literal type="string" pos:line="47" pos:column="20">"fopen"<pos:position pos:line="47" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="29"/></expr_stmt>
      <if pos:line="48" pos:column="7">if <condition pos:line="48" pos:column="10">(<expr><name pos:line="48" pos:column="11">outfile<pos:position pos:line="48" pos:column="18"/></name> <operator pos:line="48" pos:column="19">&amp;&amp;<pos:position pos:line="48" pos:column="29"/></operator> <operator pos:line="48" pos:column="22">*<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="23">outfile<pos:position pos:line="48" pos:column="30"/></name></expr>)<pos:position pos:line="48" pos:column="31"/></condition><then pos:line="48" pos:column="31">
      <block pos:line="49" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="50" pos:column="9">close<pos:position pos:line="50" pos:column="14"/></name> <argument_list pos:line="50" pos:column="15">(<argument><expr><name pos:line="50" pos:column="16">out<pos:position pos:line="50" pos:column="19"/></name></expr></argument>)<pos:position pos:line="50" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="51" pos:column="9">unlink<pos:position pos:line="51" pos:column="15"/></name> <argument_list pos:line="51" pos:column="16">(<argument><expr><name pos:line="51" pos:column="17">outfile<pos:position pos:line="51" pos:column="24"/></name></expr></argument>)<pos:position pos:line="51" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="26"/></expr_stmt>
      }<pos:position pos:line="52" pos:column="8"/></block></then></if>
      <return pos:line="53" pos:column="7">return <expr><literal type="number" pos:line="53" pos:column="14">0<pos:position pos:line="53" pos:column="15"/></literal></expr>;<pos:position pos:line="53" pos:column="16"/></return>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>

    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name pos:line="56" pos:column="9">outfile<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">&amp;&amp;<pos:position pos:line="56" pos:column="27"/></operator> <operator pos:line="56" pos:column="20">*<pos:position pos:line="56" pos:column="21"/></operator><name pos:line="56" pos:column="21">outfile<pos:position pos:line="56" pos:column="28"/></name></expr>)<pos:position pos:line="56" pos:column="29"/></condition><then pos:line="56" pos:column="29">
      <block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="7">thepid<pos:position pos:line="57" pos:column="13"/></name> <operator pos:line="57" pos:column="14">=<pos:position pos:line="57" pos:column="15"/></operator> <call><name pos:line="57" pos:column="16">mutt_create_filter_fd<pos:position pos:line="57" pos:column="37"/></name> <argument_list pos:line="57" pos:column="38">(<argument><expr><name pos:line="57" pos:column="39">path<pos:position pos:line="57" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="45">&amp;<pos:position pos:line="57" pos:column="50"/></operator><name pos:line="57" pos:column="46">ofp<pos:position pos:line="57" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="51">NULL<pos:position pos:line="57" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="57">NULL<pos:position pos:line="57" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="63">-<pos:position pos:line="57" pos:column="64"/></operator><literal type="number" pos:line="57" pos:column="64">1<pos:position pos:line="57" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="67">out<pos:position pos:line="57" pos:column="70"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="72">-<pos:position pos:line="57" pos:column="73"/></operator><literal type="number" pos:line="57" pos:column="73">1<pos:position pos:line="57" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="76"/></expr_stmt></block></then>
    <else pos:line="58" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="59" pos:column="7">thepid<pos:position pos:line="59" pos:column="13"/></name> <operator pos:line="59" pos:column="14">=<pos:position pos:line="59" pos:column="15"/></operator> <call><name pos:line="59" pos:column="16">mutt_create_filter<pos:position pos:line="59" pos:column="34"/></name> <argument_list pos:line="59" pos:column="35">(<argument><expr><name pos:line="59" pos:column="36">path<pos:position pos:line="59" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="42">&amp;<pos:position pos:line="59" pos:column="47"/></operator><name pos:line="59" pos:column="43">ofp<pos:position pos:line="59" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="48">NULL<pos:position pos:line="59" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="54">NULL<pos:position pos:line="59" pos:column="58"/></name></expr></argument>)<pos:position pos:line="59" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="60"/></expr_stmt></block></else></if>

    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name pos:line="61" pos:column="9">thepid<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">&lt;<pos:position pos:line="61" pos:column="20"/></operator> <literal type="number" pos:line="61" pos:column="18">0<pos:position pos:line="61" pos:column="19"/></literal></expr>)<pos:position pos:line="61" pos:column="20"/></condition><then pos:line="61" pos:column="20">
    <block pos:line="62" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="63" pos:column="7">mutt_perror<pos:position pos:line="63" pos:column="18"/></name></type> <name pos:line="63" pos:column="19">_<pos:position pos:line="63" pos:column="20"/></name><argument_list pos:line="63" pos:column="20">(<argument><expr><literal type="string" pos:line="63" pos:column="21">"Can't create filter"<pos:position pos:line="63" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="43"/></argument_list></decl>;<pos:position pos:line="63" pos:column="44"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="64" pos:column="7">safe_fclose<pos:position pos:line="64" pos:column="18"/></name> <argument_list pos:line="64" pos:column="19">(<argument><expr><operator pos:line="64" pos:column="20">&amp;<pos:position pos:line="64" pos:column="25"/></operator><name pos:line="64" pos:column="21">ifp<pos:position pos:line="64" pos:column="24"/></name></expr></argument>)<pos:position pos:line="64" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="26"/></expr_stmt>
      <goto pos:line="65" pos:column="7">goto <name pos:line="65" pos:column="12">bail<pos:position pos:line="65" pos:column="16"/></name>;<pos:position pos:line="65" pos:column="17"/></goto>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">mutt_copy_stream<pos:position pos:line="68" pos:column="21"/></name> <argument_list pos:line="68" pos:column="22">(<argument><expr><name pos:line="68" pos:column="23">ifp<pos:position pos:line="68" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="28">ofp<pos:position pos:line="68" pos:column="31"/></name></expr></argument>)<pos:position pos:line="68" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="69" pos:column="5">safe_fclose<pos:position pos:line="69" pos:column="16"/></name> <argument_list pos:line="69" pos:column="17">(<argument><expr><operator pos:line="69" pos:column="18">&amp;<pos:position pos:line="69" pos:column="23"/></operator><name pos:line="69" pos:column="19">ofp<pos:position pos:line="69" pos:column="22"/></name></expr></argument>)<pos:position pos:line="69" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="70" pos:column="5">safe_fclose<pos:position pos:line="70" pos:column="16"/></name> <argument_list pos:line="70" pos:column="17">(<argument><expr><operator pos:line="70" pos:column="18">&amp;<pos:position pos:line="70" pos:column="23"/></operator><name pos:line="70" pos:column="19">ifp<pos:position pos:line="70" pos:column="22"/></name></expr></argument>)<pos:position pos:line="70" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="71" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name pos:line="73" pos:column="3">rv<pos:position pos:line="73" pos:column="5"/></name> <operator pos:line="73" pos:column="6">=<pos:position pos:line="73" pos:column="7"/></operator> <literal type="number" pos:line="73" pos:column="8">1<pos:position pos:line="73" pos:column="9"/></literal></expr>;<pos:position pos:line="73" pos:column="10"/></expr_stmt>
  
<label><name pos:line="75" pos:column="1">bail<pos:position pos:line="75" pos:column="5"/></name>:<pos:position pos:line="75" pos:column="6"/></label>
  
  <if pos:line="77" pos:column="3">if <condition pos:line="77" pos:column="6">(<expr><name pos:line="77" pos:column="7">outfile<pos:position pos:line="77" pos:column="14"/></name> <operator pos:line="77" pos:column="15">&amp;&amp;<pos:position pos:line="77" pos:column="25"/></operator> <operator pos:line="77" pos:column="18">*<pos:position pos:line="77" pos:column="19"/></operator><name pos:line="77" pos:column="19">outfile<pos:position pos:line="77" pos:column="26"/></name></expr>)<pos:position pos:line="77" pos:column="27"/></condition><then pos:line="77" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="5">close<pos:position pos:line="78" pos:column="10"/></name> <argument_list pos:line="78" pos:column="11">(<argument><expr><name pos:line="78" pos:column="12">out<pos:position pos:line="78" pos:column="15"/></name></expr></argument>)<pos:position pos:line="78" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="17"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="80" pos:column="3">/*
   * check for error exit from child process
   */</comment>
  <if pos:line="83" pos:column="3">if <condition pos:line="83" pos:column="6">(<expr><call><name pos:line="83" pos:column="7">mutt_wait_filter<pos:position pos:line="83" pos:column="23"/></name> <argument_list pos:line="83" pos:column="24">(<argument><expr><name pos:line="83" pos:column="25">thepid<pos:position pos:line="83" pos:column="31"/></name></expr></argument>)<pos:position pos:line="83" pos:column="32"/></argument_list></call> <operator pos:line="83" pos:column="33">!=<pos:position pos:line="83" pos:column="35"/></operator> <literal type="number" pos:line="83" pos:column="36">0<pos:position pos:line="83" pos:column="37"/></literal></expr>)<pos:position pos:line="83" pos:column="38"/></condition><then pos:line="83" pos:column="38">
    <block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="5">rv<pos:position pos:line="84" pos:column="7"/></name> <operator pos:line="84" pos:column="8">=<pos:position pos:line="84" pos:column="9"/></operator> <literal type="number" pos:line="84" pos:column="10">0<pos:position pos:line="84" pos:column="11"/></literal></expr>;<pos:position pos:line="84" pos:column="12"/></expr_stmt></block></then></if>

  <if pos:line="86" pos:column="3">if <condition pos:line="86" pos:column="6">(<expr><name pos:line="86" pos:column="7">rv<pos:position pos:line="86" pos:column="9"/></name> <operator pos:line="86" pos:column="10">==<pos:position pos:line="86" pos:column="12"/></operator> <literal type="number" pos:line="86" pos:column="13">0<pos:position pos:line="86" pos:column="14"/></literal> <operator pos:line="86" pos:column="15">||<pos:position pos:line="86" pos:column="17"/></operator> <call><name pos:line="86" pos:column="18">option<pos:position pos:line="86" pos:column="24"/></name> <argument_list pos:line="86" pos:column="25">(<argument><expr><name pos:line="86" pos:column="26">OPTWAITKEY<pos:position pos:line="86" pos:column="36"/></name></expr></argument>)<pos:position pos:line="86" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="86" pos:column="38"/></condition><then pos:line="86" pos:column="38">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="87" pos:column="5">mutt_any_key_to_continue<pos:position pos:line="87" pos:column="29"/></name> <argument_list pos:line="87" pos:column="30">(<argument><expr><name pos:line="87" pos:column="31">NULL<pos:position pos:line="87" pos:column="35"/></name></expr></argument>)<pos:position pos:line="87" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="37"/></expr_stmt></block></then></if>
  <return pos:line="88" pos:column="3">return <expr><name pos:line="88" pos:column="10">rv<pos:position pos:line="88" pos:column="12"/></name></expr>;<pos:position pos:line="88" pos:column="13"/></return>
}<pos:position pos:line="89" pos:column="2"/></block></function></unit>

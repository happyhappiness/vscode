<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_51_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">crypt_smime_invoke_import<pos:position pos:line="1" pos:column="31"/></name> <parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">infile<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">mailbox<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><call><name pos:line="3" pos:column="7">CRYPT_MOD_CALL_CHECK<pos:position pos:line="3" pos:column="27"/></name> <argument_list pos:line="3" pos:column="28">(<argument><expr><name pos:line="3" pos:column="29">SMIME<pos:position pos:line="3" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="36">smime_invoke_import<pos:position pos:line="3" pos:column="55"/></name></expr></argument>)<pos:position pos:line="3" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="57"/></condition><then pos:line="3" pos:column="57">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="4" pos:column="5">(<pos:position pos:line="4" pos:column="6"/></operator><call><name pos:line="4" pos:column="6">CRYPT_MOD_CALL<pos:position pos:line="4" pos:column="20"/></name> <argument_list pos:line="4" pos:column="21">(<argument><expr><name pos:line="4" pos:column="22">SMIME<pos:position pos:line="4" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="29">smime_invoke_import<pos:position pos:line="4" pos:column="48"/></name></expr></argument>)<pos:position pos:line="4" pos:column="49"/></argument_list></call><operator pos:line="4" pos:column="49">)<pos:position pos:line="4" pos:column="50"/></operator> <operator pos:line="4" pos:column="51">(<pos:position pos:line="4" pos:column="52"/></operator><name pos:line="4" pos:column="52">infile<pos:position pos:line="4" pos:column="58"/></name><operator pos:line="4" pos:column="58">,<pos:position pos:line="4" pos:column="59"/></operator> <name pos:line="4" pos:column="60">mailbox<pos:position pos:line="4" pos:column="67"/></name><operator pos:line="4" pos:column="67">)<pos:position pos:line="4" pos:column="68"/></operator></expr>;<pos:position pos:line="4" pos:column="69"/></expr_stmt></block></then></if>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

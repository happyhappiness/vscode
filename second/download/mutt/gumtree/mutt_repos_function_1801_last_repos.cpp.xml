<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1801_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">var_to_string<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">int<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">idx<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name><modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type> <name pos:line="1" pos:column="42">val<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">size_t<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">len<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">tmp<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">LONG_STRING<pos:position pos:line="3" pos:column="23"/></name></expr>]<pos:position pos:line="3" pos:column="24"/></index></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="4" pos:column="3">static<pos:position pos:line="4" pos:column="9"/></specifier> <type><specifier pos:line="4" pos:column="10">const<pos:position pos:line="4" pos:column="15"/></specifier> <name pos:line="4" pos:column="16">char<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier> <specifier pos:line="4" pos:column="23">const<pos:position pos:line="4" pos:column="28"/></specifier></type> <name><name pos:line="4" pos:column="29">vals<pos:position pos:line="4" pos:column="33"/></name><index pos:line="4" pos:column="33">[]<pos:position pos:line="4" pos:column="35"/></index></name> <init pos:line="4" pos:column="36">= <expr><block pos:line="4" pos:column="38">{ <expr><literal type="string" pos:line="4" pos:column="40">"no"<pos:position pos:line="4" pos:column="44"/></literal></expr>, <expr><literal type="string" pos:line="4" pos:column="46">"yes"<pos:position pos:line="4" pos:column="51"/></literal></expr>, <expr><literal type="string" pos:line="4" pos:column="53">"ask-no"<pos:position pos:line="4" pos:column="61"/></literal></expr>, <expr><literal type="string" pos:line="4" pos:column="63">"ask-yes"<pos:position pos:line="4" pos:column="72"/></literal></expr> }<pos:position pos:line="4" pos:column="74"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="75"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="6" pos:column="3">tmp<pos:position pos:line="6" pos:column="6"/></name><index pos:line="6" pos:column="6">[<expr><literal type="number" pos:line="6" pos:column="7">0<pos:position pos:line="6" pos:column="8"/></literal></expr>]<pos:position pos:line="6" pos:column="9"/></index></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <literal type="char" pos:line="6" pos:column="12">'\0'<pos:position pos:line="6" pos:column="16"/></literal></expr>;<pos:position pos:line="6" pos:column="17"/></expr_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">(<pos:position pos:line="8" pos:column="8"/></operator><call><name pos:line="8" pos:column="8">DTYPE<pos:position pos:line="8" pos:column="13"/></name><argument_list pos:line="8" pos:column="13">(<argument><expr><name><name pos:line="8" pos:column="14">MuttVars<pos:position pos:line="8" pos:column="22"/></name><index pos:line="8" pos:column="22">[<expr><name pos:line="8" pos:column="23">idx<pos:position pos:line="8" pos:column="26"/></name></expr>]<pos:position pos:line="8" pos:column="27"/></index></name><operator pos:line="8" pos:column="27">.<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">type<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call> <operator pos:line="8" pos:column="34">==<pos:position pos:line="8" pos:column="36"/></operator> <name pos:line="8" pos:column="37">DT_STR<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">)<pos:position pos:line="8" pos:column="44"/></operator> <operator pos:line="8" pos:column="45">||<pos:position pos:line="8" pos:column="47"/></operator>
      <operator pos:line="9" pos:column="7">(<pos:position pos:line="9" pos:column="8"/></operator><call><name pos:line="9" pos:column="8">DTYPE<pos:position pos:line="9" pos:column="13"/></name><argument_list pos:line="9" pos:column="13">(<argument><expr><name><name pos:line="9" pos:column="14">MuttVars<pos:position pos:line="9" pos:column="22"/></name><index pos:line="9" pos:column="22">[<expr><name pos:line="9" pos:column="23">idx<pos:position pos:line="9" pos:column="26"/></name></expr>]<pos:position pos:line="9" pos:column="27"/></index></name><operator pos:line="9" pos:column="27">.<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="28">type<pos:position pos:line="9" pos:column="32"/></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call> <operator pos:line="9" pos:column="34">==<pos:position pos:line="9" pos:column="36"/></operator> <name pos:line="9" pos:column="37">DT_PATH<pos:position pos:line="9" pos:column="44"/></name><operator pos:line="9" pos:column="44">)<pos:position pos:line="9" pos:column="45"/></operator> <operator pos:line="9" pos:column="46">||<pos:position pos:line="9" pos:column="48"/></operator>
      <operator pos:line="10" pos:column="7">(<pos:position pos:line="10" pos:column="8"/></operator><call><name pos:line="10" pos:column="8">DTYPE<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name><name pos:line="10" pos:column="14">MuttVars<pos:position pos:line="10" pos:column="22"/></name><index pos:line="10" pos:column="22">[<expr><name pos:line="10" pos:column="23">idx<pos:position pos:line="10" pos:column="26"/></name></expr>]<pos:position pos:line="10" pos:column="27"/></index></name><operator pos:line="10" pos:column="27">.<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="28">type<pos:position pos:line="10" pos:column="32"/></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call> <operator pos:line="10" pos:column="34">==<pos:position pos:line="10" pos:column="36"/></operator> <name pos:line="10" pos:column="37">DT_RX<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">)<pos:position pos:line="10" pos:column="43"/></operator></expr>)<pos:position pos:line="10" pos:column="44"/></condition><then pos:line="10" pos:column="44">
  <block pos:line="11" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">strfcpy<pos:position pos:line="12" pos:column="12"/></name> <argument_list pos:line="12" pos:column="13">(<argument><expr><name pos:line="12" pos:column="14">tmp<pos:position pos:line="12" pos:column="17"/></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="19">NONULL<pos:position pos:line="12" pos:column="25"/></name> <argument_list pos:line="12" pos:column="26">(<argument><expr><operator pos:line="12" pos:column="27">*<pos:position pos:line="12" pos:column="28"/></operator><operator pos:line="12" pos:column="28">(<pos:position pos:line="12" pos:column="29"/></operator><operator pos:line="12" pos:column="29">(<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="30">char<pos:position pos:line="12" pos:column="34"/></name> <operator pos:line="12" pos:column="35">*<pos:position pos:line="12" pos:column="36"/></operator><operator pos:line="12" pos:column="36">*<pos:position pos:line="12" pos:column="37"/></operator><operator pos:line="12" pos:column="37">)<pos:position pos:line="12" pos:column="38"/></operator> <name><name pos:line="12" pos:column="39">MuttVars<pos:position pos:line="12" pos:column="47"/></name><index pos:line="12" pos:column="47">[<expr><name pos:line="12" pos:column="48">idx<pos:position pos:line="12" pos:column="51"/></name></expr>]<pos:position pos:line="12" pos:column="52"/></index></name><operator pos:line="12" pos:column="52">.<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="53">data<pos:position pos:line="12" pos:column="57"/></name><operator pos:line="12" pos:column="57">)<pos:position pos:line="12" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="61">sizeof <argument_list pos:line="12" pos:column="68">(<argument><expr><name pos:line="12" pos:column="69">tmp<pos:position pos:line="12" pos:column="72"/></name></expr></argument>)<pos:position pos:line="12" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="75"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">DTYPE<pos:position pos:line="13" pos:column="14"/></name> <argument_list pos:line="13" pos:column="15">(<argument><expr><name><name pos:line="13" pos:column="16">MuttVars<pos:position pos:line="13" pos:column="24"/></name><index pos:line="13" pos:column="24">[<expr><name pos:line="13" pos:column="25">idx<pos:position pos:line="13" pos:column="28"/></name></expr>]<pos:position pos:line="13" pos:column="29"/></index></name><operator pos:line="13" pos:column="29">.<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">type<pos:position pos:line="13" pos:column="34"/></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call> <operator pos:line="13" pos:column="36">==<pos:position pos:line="13" pos:column="38"/></operator> <name pos:line="13" pos:column="39">DT_PATH<pos:position pos:line="13" pos:column="46"/></name></expr>)<pos:position pos:line="13" pos:column="47"/></condition><then pos:line="13" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="7">mutt_pretty_mailbox<pos:position pos:line="14" pos:column="26"/></name> <argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">tmp<pos:position pos:line="14" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="33">sizeof <argument_list pos:line="14" pos:column="40">(<argument><expr><name pos:line="14" pos:column="41">tmp<pos:position pos:line="14" pos:column="44"/></name></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="47"/></expr_stmt></block></then></if>
  }<pos:position pos:line="15" pos:column="4"/></block></then>
  <elseif pos:line="16" pos:column="3">else <if pos:line="16" pos:column="8">if <condition pos:line="16" pos:column="11">(<expr><call><name pos:line="16" pos:column="12">DTYPE<pos:position pos:line="16" pos:column="17"/></name> <argument_list pos:line="16" pos:column="18">(<argument><expr><name><name pos:line="16" pos:column="19">MuttVars<pos:position pos:line="16" pos:column="27"/></name><index pos:line="16" pos:column="27">[<expr><name pos:line="16" pos:column="28">idx<pos:position pos:line="16" pos:column="31"/></name></expr>]<pos:position pos:line="16" pos:column="32"/></index></name><operator pos:line="16" pos:column="32">.<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="33">type<pos:position pos:line="16" pos:column="37"/></name></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call> <operator pos:line="16" pos:column="39">==<pos:position pos:line="16" pos:column="41"/></operator> <name pos:line="16" pos:column="42">DT_MBCHARTBL<pos:position pos:line="16" pos:column="54"/></name></expr>)<pos:position pos:line="16" pos:column="55"/></condition><then pos:line="16" pos:column="55">
  <block pos:line="17" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">mbchar_table<pos:position pos:line="18" pos:column="17"/></name> <modifier pos:line="18" pos:column="18">*<pos:position pos:line="18" pos:column="19"/></modifier></type><name pos:line="18" pos:column="19">mbt<pos:position pos:line="18" pos:column="22"/></name> <init pos:line="18" pos:column="23">= <expr><operator pos:line="18" pos:column="25">(<pos:position pos:line="18" pos:column="26"/></operator><operator pos:line="18" pos:column="26">*<pos:position pos:line="18" pos:column="27"/></operator><operator pos:line="18" pos:column="27">(<pos:position pos:line="18" pos:column="28"/></operator><operator pos:line="18" pos:column="28">(<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="29">mbchar_table<pos:position pos:line="18" pos:column="41"/></name> <operator pos:line="18" pos:column="42">*<pos:position pos:line="18" pos:column="43"/></operator><operator pos:line="18" pos:column="43">*<pos:position pos:line="18" pos:column="44"/></operator><operator pos:line="18" pos:column="44">)<pos:position pos:line="18" pos:column="45"/></operator> <name><name pos:line="18" pos:column="46">MuttVars<pos:position pos:line="18" pos:column="54"/></name><index pos:line="18" pos:column="54">[<expr><name pos:line="18" pos:column="55">idx<pos:position pos:line="18" pos:column="58"/></name></expr>]<pos:position pos:line="18" pos:column="59"/></index></name><operator pos:line="18" pos:column="59">.<pos:position pos:line="18" pos:column="60"/></operator><name pos:line="18" pos:column="60">data<pos:position pos:line="18" pos:column="64"/></name><operator pos:line="18" pos:column="64">)<pos:position pos:line="18" pos:column="65"/></operator><operator pos:line="18" pos:column="65">)<pos:position pos:line="18" pos:column="66"/></operator></expr></init></decl>;<pos:position pos:line="18" pos:column="67"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">strfcpy<pos:position pos:line="19" pos:column="12"/></name> <argument_list pos:line="19" pos:column="13">(<argument><expr><name pos:line="19" pos:column="14">tmp<pos:position pos:line="19" pos:column="17"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="19" pos:column="19">mbt<pos:position pos:line="19" pos:column="22"/></name></expr> ?<pos:position pos:line="19" pos:column="24"/></condition><then pos:line="19" pos:column="24"> <expr><call><name pos:line="19" pos:column="25">NONULL<pos:position pos:line="19" pos:column="31"/></name> <argument_list pos:line="19" pos:column="32">(<argument><expr><name><name pos:line="19" pos:column="33">mbt<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">-&gt;<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="38">orig_str<pos:position pos:line="19" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="47"/></argument_list></call></expr> <pos:position pos:line="19" pos:column="48"/></then><else pos:line="19" pos:column="48">: <expr><literal type="string" pos:line="19" pos:column="50">""<pos:position pos:line="19" pos:column="52"/></literal></expr></else></ternary></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="54">sizeof <argument_list pos:line="19" pos:column="61">(<argument><expr><name pos:line="19" pos:column="62">tmp<pos:position pos:line="19" pos:column="65"/></name></expr></argument>)<pos:position pos:line="19" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="68"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="21" pos:column="3">else <if pos:line="21" pos:column="8">if <condition pos:line="21" pos:column="11">(<expr><call><name pos:line="21" pos:column="12">DTYPE<pos:position pos:line="21" pos:column="17"/></name> <argument_list pos:line="21" pos:column="18">(<argument><expr><name><name pos:line="21" pos:column="19">MuttVars<pos:position pos:line="21" pos:column="27"/></name><index pos:line="21" pos:column="27">[<expr><name pos:line="21" pos:column="28">idx<pos:position pos:line="21" pos:column="31"/></name></expr>]<pos:position pos:line="21" pos:column="32"/></index></name><operator pos:line="21" pos:column="32">.<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="33">type<pos:position pos:line="21" pos:column="37"/></name></expr></argument>)<pos:position pos:line="21" pos:column="38"/></argument_list></call> <operator pos:line="21" pos:column="39">==<pos:position pos:line="21" pos:column="41"/></operator> <name pos:line="21" pos:column="42">DT_ADDR<pos:position pos:line="21" pos:column="49"/></name></expr>)<pos:position pos:line="21" pos:column="50"/></condition><then pos:line="21" pos:column="50">
  <block pos:line="22" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">rfc822_write_address<pos:position pos:line="23" pos:column="25"/></name> <argument_list pos:line="23" pos:column="26">(<argument><expr><name pos:line="23" pos:column="27">tmp<pos:position pos:line="23" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="32">sizeof <argument_list pos:line="23" pos:column="39">(<argument><expr><name pos:line="23" pos:column="40">tmp<pos:position pos:line="23" pos:column="43"/></name></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="23" pos:column="46">*<pos:position pos:line="23" pos:column="47"/></operator><operator pos:line="23" pos:column="47">(<pos:position pos:line="23" pos:column="48"/></operator><operator pos:line="23" pos:column="48">(<pos:position pos:line="23" pos:column="49"/></operator><name pos:line="23" pos:column="49">ADDRESS<pos:position pos:line="23" pos:column="56"/></name> <operator pos:line="23" pos:column="57">*<pos:position pos:line="23" pos:column="58"/></operator><operator pos:line="23" pos:column="58">*<pos:position pos:line="23" pos:column="59"/></operator><operator pos:line="23" pos:column="59">)<pos:position pos:line="23" pos:column="60"/></operator> <name><name pos:line="23" pos:column="61">MuttVars<pos:position pos:line="23" pos:column="69"/></name><index pos:line="23" pos:column="69">[<expr><name pos:line="23" pos:column="70">idx<pos:position pos:line="23" pos:column="73"/></name></expr>]<pos:position pos:line="23" pos:column="74"/></index></name><operator pos:line="23" pos:column="74">.<pos:position pos:line="23" pos:column="75"/></operator><name pos:line="23" pos:column="75">data<pos:position pos:line="23" pos:column="79"/></name><operator pos:line="23" pos:column="79">)<pos:position pos:line="23" pos:column="80"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="82">0<pos:position pos:line="23" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="85"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="25" pos:column="3">else <if pos:line="25" pos:column="8">if <condition pos:line="25" pos:column="11">(<expr><call><name pos:line="25" pos:column="12">DTYPE<pos:position pos:line="25" pos:column="17"/></name> <argument_list pos:line="25" pos:column="18">(<argument><expr><name><name pos:line="25" pos:column="19">MuttVars<pos:position pos:line="25" pos:column="27"/></name><index pos:line="25" pos:column="27">[<expr><name pos:line="25" pos:column="28">idx<pos:position pos:line="25" pos:column="31"/></name></expr>]<pos:position pos:line="25" pos:column="32"/></index></name><operator pos:line="25" pos:column="32">.<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="33">type<pos:position pos:line="25" pos:column="37"/></name></expr></argument>)<pos:position pos:line="25" pos:column="38"/></argument_list></call> <operator pos:line="25" pos:column="39">==<pos:position pos:line="25" pos:column="41"/></operator> <name pos:line="25" pos:column="42">DT_QUAD<pos:position pos:line="25" pos:column="49"/></name></expr>)<pos:position pos:line="25" pos:column="50"/></condition><then pos:line="25" pos:column="50">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="5">strfcpy<pos:position pos:line="26" pos:column="12"/></name> <argument_list pos:line="26" pos:column="13">(<argument><expr><name pos:line="26" pos:column="14">tmp<pos:position pos:line="26" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="19">vals<pos:position pos:line="26" pos:column="23"/></name><index pos:line="26" pos:column="23">[<expr><call><name pos:line="26" pos:column="24">quadoption<pos:position pos:line="26" pos:column="34"/></name> <argument_list pos:line="26" pos:column="35">(<argument><expr><name><name pos:line="26" pos:column="36">MuttVars<pos:position pos:line="26" pos:column="44"/></name><index pos:line="26" pos:column="44">[<expr><name pos:line="26" pos:column="45">idx<pos:position pos:line="26" pos:column="48"/></name></expr>]<pos:position pos:line="26" pos:column="49"/></index></name><operator pos:line="26" pos:column="49">.<pos:position pos:line="26" pos:column="50"/></operator><name pos:line="26" pos:column="50">data<pos:position pos:line="26" pos:column="54"/></name></expr></argument>)<pos:position pos:line="26" pos:column="55"/></argument_list></call></expr>]<pos:position pos:line="26" pos:column="56"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="58">sizeof <argument_list pos:line="26" pos:column="65">(<argument><expr><name pos:line="26" pos:column="66">tmp<pos:position pos:line="26" pos:column="69"/></name></expr></argument>)<pos:position pos:line="26" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="72"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="27" pos:column="3">else <if pos:line="27" pos:column="8">if <condition pos:line="27" pos:column="11">(<expr><call><name pos:line="27" pos:column="12">DTYPE<pos:position pos:line="27" pos:column="17"/></name> <argument_list pos:line="27" pos:column="18">(<argument><expr><name><name pos:line="27" pos:column="19">MuttVars<pos:position pos:line="27" pos:column="27"/></name><index pos:line="27" pos:column="27">[<expr><name pos:line="27" pos:column="28">idx<pos:position pos:line="27" pos:column="31"/></name></expr>]<pos:position pos:line="27" pos:column="32"/></index></name><operator pos:line="27" pos:column="32">.<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="33">type<pos:position pos:line="27" pos:column="37"/></name></expr></argument>)<pos:position pos:line="27" pos:column="38"/></argument_list></call> <operator pos:line="27" pos:column="39">==<pos:position pos:line="27" pos:column="41"/></operator> <name pos:line="27" pos:column="42">DT_NUM<pos:position pos:line="27" pos:column="48"/></name></expr>)<pos:position pos:line="27" pos:column="49"/></condition><then pos:line="27" pos:column="49">
  <block pos:line="28" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="29" pos:column="5">short<pos:position pos:line="29" pos:column="10"/></name></type> <name pos:line="29" pos:column="11">sval<pos:position pos:line="29" pos:column="15"/></name> <init pos:line="29" pos:column="16">= <expr><operator pos:line="29" pos:column="18">*<pos:position pos:line="29" pos:column="19"/></operator><operator pos:line="29" pos:column="19">(<pos:position pos:line="29" pos:column="20"/></operator><operator pos:line="29" pos:column="20">(<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="21">short<pos:position pos:line="29" pos:column="26"/></name> <operator pos:line="29" pos:column="27">*<pos:position pos:line="29" pos:column="28"/></operator><operator pos:line="29" pos:column="28">)<pos:position pos:line="29" pos:column="29"/></operator> <name><name pos:line="29" pos:column="30">MuttVars<pos:position pos:line="29" pos:column="38"/></name><index pos:line="29" pos:column="38">[<expr><name pos:line="29" pos:column="39">idx<pos:position pos:line="29" pos:column="42"/></name></expr>]<pos:position pos:line="29" pos:column="43"/></index></name><operator pos:line="29" pos:column="43">.<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="44">data<pos:position pos:line="29" pos:column="48"/></name><operator pos:line="29" pos:column="48">)<pos:position pos:line="29" pos:column="49"/></operator></expr></init></decl>;<pos:position pos:line="29" pos:column="50"/></decl_stmt>

    <comment type="block" pos:line="31" pos:column="5">/* avert your eyes, gentle reader */</comment>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><call><name pos:line="32" pos:column="9">mutt_strcmp<pos:position pos:line="32" pos:column="20"/></name> <argument_list pos:line="32" pos:column="21">(<argument><expr><name><name pos:line="32" pos:column="22">MuttVars<pos:position pos:line="32" pos:column="30"/></name><index pos:line="32" pos:column="30">[<expr><name pos:line="32" pos:column="31">idx<pos:position pos:line="32" pos:column="34"/></name></expr>]<pos:position pos:line="32" pos:column="35"/></index></name><operator pos:line="32" pos:column="35">.<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="36">option<pos:position pos:line="32" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="44">"wrapmargin"<pos:position pos:line="32" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="57"/></argument_list></call> <operator pos:line="32" pos:column="58">==<pos:position pos:line="32" pos:column="60"/></operator> <literal type="number" pos:line="32" pos:column="61">0<pos:position pos:line="32" pos:column="62"/></literal></expr>)<pos:position pos:line="32" pos:column="63"/></condition><then pos:line="32" pos:column="63">
      <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="7">sval<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <ternary><condition><expr><name pos:line="33" pos:column="14">sval<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">&gt;<pos:position pos:line="33" pos:column="23"/></operator> <literal type="number" pos:line="33" pos:column="21">0<pos:position pos:line="33" pos:column="22"/></literal></expr> ?<pos:position pos:line="33" pos:column="24"/></condition><then pos:line="33" pos:column="24"> <expr><literal type="number" pos:line="33" pos:column="25">0<pos:position pos:line="33" pos:column="26"/></literal></expr> <pos:position pos:line="33" pos:column="27"/></then><else pos:line="33" pos:column="27">: <expr><operator pos:line="33" pos:column="29">-<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="30">sval<pos:position pos:line="33" pos:column="34"/></name></expr></else></ternary></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">snprintf<pos:position pos:line="35" pos:column="13"/></name> <argument_list pos:line="35" pos:column="14">(<argument><expr><name pos:line="35" pos:column="15">tmp<pos:position pos:line="35" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="20">sizeof <argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">tmp<pos:position pos:line="35" pos:column="31"/></name></expr></argument>)<pos:position pos:line="35" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="34">"%d"<pos:position pos:line="35" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="40">sval<pos:position pos:line="35" pos:column="44"/></name></expr></argument>)<pos:position pos:line="35" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="46"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="37" pos:column="3">else <if pos:line="37" pos:column="8">if <condition pos:line="37" pos:column="11">(<expr><call><name pos:line="37" pos:column="12">DTYPE<pos:position pos:line="37" pos:column="17"/></name> <argument_list pos:line="37" pos:column="18">(<argument><expr><name><name pos:line="37" pos:column="19">MuttVars<pos:position pos:line="37" pos:column="27"/></name><index pos:line="37" pos:column="27">[<expr><name pos:line="37" pos:column="28">idx<pos:position pos:line="37" pos:column="31"/></name></expr>]<pos:position pos:line="37" pos:column="32"/></index></name><operator pos:line="37" pos:column="32">.<pos:position pos:line="37" pos:column="33"/></operator><name pos:line="37" pos:column="33">type<pos:position pos:line="37" pos:column="37"/></name></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></call> <operator pos:line="37" pos:column="39">==<pos:position pos:line="37" pos:column="41"/></operator> <name pos:line="37" pos:column="42">DT_SORT<pos:position pos:line="37" pos:column="49"/></name></expr>)<pos:position pos:line="37" pos:column="50"/></condition><then pos:line="37" pos:column="50">
  <block pos:line="38" pos:column="3">{
    <decl_stmt><decl><type><specifier pos:line="39" pos:column="5">const<pos:position pos:line="39" pos:column="10"/></specifier> <name><name pos:line="39" pos:column="11">struct<pos:position pos:line="39" pos:column="17"/></name> <name pos:line="39" pos:column="18">mapping_t<pos:position pos:line="39" pos:column="27"/></name></name> <modifier pos:line="39" pos:column="28">*<pos:position pos:line="39" pos:column="29"/></modifier></type><name pos:line="39" pos:column="29">map<pos:position pos:line="39" pos:column="32"/></name></decl>;<pos:position pos:line="39" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="40" pos:column="5">const<pos:position pos:line="40" pos:column="10"/></specifier> <name pos:line="40" pos:column="11">char<pos:position pos:line="40" pos:column="15"/></name> <modifier pos:line="40" pos:column="16">*<pos:position pos:line="40" pos:column="17"/></modifier></type><name pos:line="40" pos:column="17">p<pos:position pos:line="40" pos:column="18"/></name></decl>;<pos:position pos:line="40" pos:column="19"/></decl_stmt>

    <switch pos:line="42" pos:column="5">switch <condition pos:line="42" pos:column="12">(<expr><name><name pos:line="42" pos:column="13">MuttVars<pos:position pos:line="42" pos:column="21"/></name><index pos:line="42" pos:column="21">[<expr><name pos:line="42" pos:column="22">idx<pos:position pos:line="42" pos:column="25"/></name></expr>]<pos:position pos:line="42" pos:column="26"/></index></name><operator pos:line="42" pos:column="26">.<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="27">type<pos:position pos:line="42" pos:column="31"/></name> <operator pos:line="42" pos:column="32">&amp;<pos:position pos:line="42" pos:column="37"/></operator> <name pos:line="42" pos:column="34">DT_SUBTYPE_MASK<pos:position pos:line="42" pos:column="49"/></name></expr>)<pos:position pos:line="42" pos:column="50"/></condition>
    <block pos:line="43" pos:column="5">{
      <case pos:line="44" pos:column="7">case <expr><name pos:line="44" pos:column="12">DT_SORT_ALIAS<pos:position pos:line="44" pos:column="25"/></name></expr>:<pos:position pos:line="44" pos:column="26"/></case>
        <expr_stmt><expr><name pos:line="45" pos:column="9">map<pos:position pos:line="45" pos:column="12"/></name> <operator pos:line="45" pos:column="13">=<pos:position pos:line="45" pos:column="14"/></operator> <name pos:line="45" pos:column="15">SortAliasMethods<pos:position pos:line="45" pos:column="31"/></name></expr>;<pos:position pos:line="45" pos:column="32"/></expr_stmt>
        <break pos:line="46" pos:column="9">break;<pos:position pos:line="46" pos:column="15"/></break>
      <case pos:line="47" pos:column="7">case <expr><name pos:line="47" pos:column="12">DT_SORT_BROWSER<pos:position pos:line="47" pos:column="27"/></name></expr>:<pos:position pos:line="47" pos:column="28"/></case>
        <expr_stmt><expr><name pos:line="48" pos:column="9">map<pos:position pos:line="48" pos:column="12"/></name> <operator pos:line="48" pos:column="13">=<pos:position pos:line="48" pos:column="14"/></operator> <name pos:line="48" pos:column="15">SortBrowserMethods<pos:position pos:line="48" pos:column="33"/></name></expr>;<pos:position pos:line="48" pos:column="34"/></expr_stmt>
        <break pos:line="49" pos:column="9">break;<pos:position pos:line="49" pos:column="15"/></break>
      <case pos:line="50" pos:column="7">case <expr><name pos:line="50" pos:column="12">DT_SORT_KEYS<pos:position pos:line="50" pos:column="24"/></name></expr>:<pos:position pos:line="50" pos:column="25"/></case>
        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">(<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">WithCrypto<pos:position pos:line="51" pos:column="24"/></name> <operator pos:line="51" pos:column="25">&amp;<pos:position pos:line="51" pos:column="30"/></operator> <name pos:line="51" pos:column="27">APPLICATION_PGP<pos:position pos:line="51" pos:column="42"/></name><operator pos:line="51" pos:column="42">)<pos:position pos:line="51" pos:column="43"/></operator></expr>)<pos:position pos:line="51" pos:column="44"/></condition><then pos:line="51" pos:column="44">
          <block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="11">map<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">=<pos:position pos:line="52" pos:column="16"/></operator> <name pos:line="52" pos:column="17">SortKeyMethods<pos:position pos:line="52" pos:column="31"/></name></expr>;<pos:position pos:line="52" pos:column="32"/></expr_stmt></block></then>
        <else pos:line="53" pos:column="9">else
          <block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="11">map<pos:position pos:line="54" pos:column="14"/></name> <operator pos:line="54" pos:column="15">=<pos:position pos:line="54" pos:column="16"/></operator> <name pos:line="54" pos:column="17">SortMethods<pos:position pos:line="54" pos:column="28"/></name></expr>;<pos:position pos:line="54" pos:column="29"/></expr_stmt></block></else></if>
        <break pos:line="55" pos:column="9">break;<pos:position pos:line="55" pos:column="15"/></break>
      <default pos:line="56" pos:column="7">default:<pos:position pos:line="56" pos:column="15"/></default>
        <expr_stmt><expr><name pos:line="57" pos:column="9">map<pos:position pos:line="57" pos:column="12"/></name> <operator pos:line="57" pos:column="13">=<pos:position pos:line="57" pos:column="14"/></operator> <name pos:line="57" pos:column="15">SortMethods<pos:position pos:line="57" pos:column="26"/></name></expr>;<pos:position pos:line="57" pos:column="27"/></expr_stmt>
        <break pos:line="58" pos:column="9">break;<pos:position pos:line="58" pos:column="15"/></break>
    }<pos:position pos:line="59" pos:column="6"/></block></switch>
    <expr_stmt><expr><name pos:line="60" pos:column="5">p<pos:position pos:line="60" pos:column="6"/></name> <operator pos:line="60" pos:column="7">=<pos:position pos:line="60" pos:column="8"/></operator> <call><name pos:line="60" pos:column="9">mutt_getnamebyvalue<pos:position pos:line="60" pos:column="28"/></name> <argument_list pos:line="60" pos:column="29">(<argument><expr><operator pos:line="60" pos:column="30">*<pos:position pos:line="60" pos:column="31"/></operator><operator pos:line="60" pos:column="31">(<pos:position pos:line="60" pos:column="32"/></operator><operator pos:line="60" pos:column="32">(<pos:position pos:line="60" pos:column="33"/></operator><name pos:line="60" pos:column="33">short<pos:position pos:line="60" pos:column="38"/></name> <operator pos:line="60" pos:column="39">*<pos:position pos:line="60" pos:column="40"/></operator><operator pos:line="60" pos:column="40">)<pos:position pos:line="60" pos:column="41"/></operator> <name><name pos:line="60" pos:column="42">MuttVars<pos:position pos:line="60" pos:column="50"/></name><index pos:line="60" pos:column="50">[<expr><name pos:line="60" pos:column="51">idx<pos:position pos:line="60" pos:column="54"/></name></expr>]<pos:position pos:line="60" pos:column="55"/></index></name><operator pos:line="60" pos:column="55">.<pos:position pos:line="60" pos:column="56"/></operator><name pos:line="60" pos:column="56">data<pos:position pos:line="60" pos:column="60"/></name><operator pos:line="60" pos:column="60">)<pos:position pos:line="60" pos:column="61"/></operator> <operator pos:line="60" pos:column="62">&amp;<pos:position pos:line="60" pos:column="67"/></operator> <name pos:line="60" pos:column="64">SORT_MASK<pos:position pos:line="60" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="75">map<pos:position pos:line="60" pos:column="78"/></name></expr></argument>)<pos:position pos:line="60" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">snprintf<pos:position pos:line="61" pos:column="13"/></name> <argument_list pos:line="61" pos:column="14">(<argument><expr><name pos:line="61" pos:column="15">tmp<pos:position pos:line="61" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="20">sizeof <argument_list pos:line="61" pos:column="27">(<argument><expr><name pos:line="61" pos:column="28">tmp<pos:position pos:line="61" pos:column="31"/></name></expr></argument>)<pos:position pos:line="61" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="34">"%s%s%s"<pos:position pos:line="61" pos:column="42"/></literal></expr></argument>,
              <argument><expr><ternary><condition><expr><operator pos:line="62" pos:column="15">(<pos:position pos:line="62" pos:column="16"/></operator><operator pos:line="62" pos:column="16">*<pos:position pos:line="62" pos:column="17"/></operator><operator pos:line="62" pos:column="17">(<pos:position pos:line="62" pos:column="18"/></operator><operator pos:line="62" pos:column="18">(<pos:position pos:line="62" pos:column="19"/></operator><name pos:line="62" pos:column="19">short<pos:position pos:line="62" pos:column="24"/></name> <operator pos:line="62" pos:column="25">*<pos:position pos:line="62" pos:column="26"/></operator><operator pos:line="62" pos:column="26">)<pos:position pos:line="62" pos:column="27"/></operator> <name><name pos:line="62" pos:column="28">MuttVars<pos:position pos:line="62" pos:column="36"/></name><index pos:line="62" pos:column="36">[<expr><name pos:line="62" pos:column="37">idx<pos:position pos:line="62" pos:column="40"/></name></expr>]<pos:position pos:line="62" pos:column="41"/></index></name><operator pos:line="62" pos:column="41">.<pos:position pos:line="62" pos:column="42"/></operator><name pos:line="62" pos:column="42">data<pos:position pos:line="62" pos:column="46"/></name><operator pos:line="62" pos:column="46">)<pos:position pos:line="62" pos:column="47"/></operator> <operator pos:line="62" pos:column="48">&amp;<pos:position pos:line="62" pos:column="53"/></operator> <name pos:line="62" pos:column="50">SORT_REVERSE<pos:position pos:line="62" pos:column="62"/></name><operator pos:line="62" pos:column="62">)<pos:position pos:line="62" pos:column="63"/></operator></expr> ?<pos:position pos:line="62" pos:column="65"/></condition><then pos:line="62" pos:column="65"> <expr><literal type="string" pos:line="62" pos:column="66">"reverse-"<pos:position pos:line="62" pos:column="76"/></literal></expr> <pos:position pos:line="62" pos:column="77"/></then><else pos:line="62" pos:column="77">: <expr><literal type="string" pos:line="62" pos:column="79">""<pos:position pos:line="62" pos:column="81"/></literal></expr></else></ternary></expr></argument>,
              <argument><expr><ternary><condition><expr><operator pos:line="63" pos:column="15">(<pos:position pos:line="63" pos:column="16"/></operator><operator pos:line="63" pos:column="16">*<pos:position pos:line="63" pos:column="17"/></operator><operator pos:line="63" pos:column="17">(<pos:position pos:line="63" pos:column="18"/></operator><operator pos:line="63" pos:column="18">(<pos:position pos:line="63" pos:column="19"/></operator><name pos:line="63" pos:column="19">short<pos:position pos:line="63" pos:column="24"/></name> <operator pos:line="63" pos:column="25">*<pos:position pos:line="63" pos:column="26"/></operator><operator pos:line="63" pos:column="26">)<pos:position pos:line="63" pos:column="27"/></operator> <name><name pos:line="63" pos:column="28">MuttVars<pos:position pos:line="63" pos:column="36"/></name><index pos:line="63" pos:column="36">[<expr><name pos:line="63" pos:column="37">idx<pos:position pos:line="63" pos:column="40"/></name></expr>]<pos:position pos:line="63" pos:column="41"/></index></name><operator pos:line="63" pos:column="41">.<pos:position pos:line="63" pos:column="42"/></operator><name pos:line="63" pos:column="42">data<pos:position pos:line="63" pos:column="46"/></name><operator pos:line="63" pos:column="46">)<pos:position pos:line="63" pos:column="47"/></operator> <operator pos:line="63" pos:column="48">&amp;<pos:position pos:line="63" pos:column="53"/></operator> <name pos:line="63" pos:column="50">SORT_LAST<pos:position pos:line="63" pos:column="59"/></name><operator pos:line="63" pos:column="59">)<pos:position pos:line="63" pos:column="60"/></operator></expr> ?<pos:position pos:line="63" pos:column="62"/></condition><then pos:line="63" pos:column="62"> <expr><literal type="string" pos:line="63" pos:column="63">"last-"<pos:position pos:line="63" pos:column="70"/></literal></expr> <pos:position pos:line="63" pos:column="71"/></then><else pos:line="63" pos:column="71">: <expr><literal type="string" pos:line="63" pos:column="73">""<pos:position pos:line="63" pos:column="75"/></literal></expr></else></ternary></expr></argument>,
              <argument><expr><name pos:line="64" pos:column="15">p<pos:position pos:line="64" pos:column="16"/></name></expr></argument>)<pos:position pos:line="64" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="65" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="66" pos:column="3">else <if pos:line="66" pos:column="8">if <condition pos:line="66" pos:column="11">(<expr><call><name pos:line="66" pos:column="12">DTYPE<pos:position pos:line="66" pos:column="17"/></name> <argument_list pos:line="66" pos:column="18">(<argument><expr><name><name pos:line="66" pos:column="19">MuttVars<pos:position pos:line="66" pos:column="27"/></name><index pos:line="66" pos:column="27">[<expr><name pos:line="66" pos:column="28">idx<pos:position pos:line="66" pos:column="31"/></name></expr>]<pos:position pos:line="66" pos:column="32"/></index></name><operator pos:line="66" pos:column="32">.<pos:position pos:line="66" pos:column="33"/></operator><name pos:line="66" pos:column="33">type<pos:position pos:line="66" pos:column="37"/></name></expr></argument>)<pos:position pos:line="66" pos:column="38"/></argument_list></call> <operator pos:line="66" pos:column="39">==<pos:position pos:line="66" pos:column="41"/></operator> <name pos:line="66" pos:column="42">DT_MAGIC<pos:position pos:line="66" pos:column="50"/></name></expr>)<pos:position pos:line="66" pos:column="51"/></condition><then pos:line="66" pos:column="51">
  <block pos:line="67" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="68" pos:column="5">char<pos:position pos:line="68" pos:column="9"/></name> <modifier pos:line="68" pos:column="10">*<pos:position pos:line="68" pos:column="11"/></modifier></type><name pos:line="68" pos:column="11">p<pos:position pos:line="68" pos:column="12"/></name></decl>;<pos:position pos:line="68" pos:column="13"/></decl_stmt>

    <switch pos:line="70" pos:column="5">switch <condition pos:line="70" pos:column="12">(<expr><name pos:line="70" pos:column="13">DefaultMagic<pos:position pos:line="70" pos:column="25"/></name></expr>)<pos:position pos:line="70" pos:column="26"/></condition>
    <block pos:line="71" pos:column="5">{
      <case pos:line="72" pos:column="7">case <expr><name pos:line="72" pos:column="12">MUTT_MBOX<pos:position pos:line="72" pos:column="21"/></name></expr>:<pos:position pos:line="72" pos:column="22"/></case>
        <expr_stmt><expr><name pos:line="73" pos:column="9">p<pos:position pos:line="73" pos:column="10"/></name> <operator pos:line="73" pos:column="11">=<pos:position pos:line="73" pos:column="12"/></operator> <literal type="string" pos:line="73" pos:column="13">"mbox"<pos:position pos:line="73" pos:column="19"/></literal></expr>;<pos:position pos:line="73" pos:column="20"/></expr_stmt>
        <break pos:line="74" pos:column="9">break;<pos:position pos:line="74" pos:column="15"/></break>
      <case pos:line="75" pos:column="7">case <expr><name pos:line="75" pos:column="12">MUTT_MMDF<pos:position pos:line="75" pos:column="21"/></name></expr>:<pos:position pos:line="75" pos:column="22"/></case>
        <expr_stmt><expr><name pos:line="76" pos:column="9">p<pos:position pos:line="76" pos:column="10"/></name> <operator pos:line="76" pos:column="11">=<pos:position pos:line="76" pos:column="12"/></operator> <literal type="string" pos:line="76" pos:column="13">"MMDF"<pos:position pos:line="76" pos:column="19"/></literal></expr>;<pos:position pos:line="76" pos:column="20"/></expr_stmt>
        <break pos:line="77" pos:column="9">break;<pos:position pos:line="77" pos:column="15"/></break>
      <case pos:line="78" pos:column="7">case <expr><name pos:line="78" pos:column="12">MUTT_MH<pos:position pos:line="78" pos:column="19"/></name></expr>:<pos:position pos:line="78" pos:column="20"/></case>
        <expr_stmt><expr><name pos:line="79" pos:column="9">p<pos:position pos:line="79" pos:column="10"/></name> <operator pos:line="79" pos:column="11">=<pos:position pos:line="79" pos:column="12"/></operator> <literal type="string" pos:line="79" pos:column="13">"MH"<pos:position pos:line="79" pos:column="17"/></literal></expr>;<pos:position pos:line="79" pos:column="18"/></expr_stmt>
        <break pos:line="80" pos:column="9">break;<pos:position pos:line="80" pos:column="15"/></break>
      <case pos:line="81" pos:column="7">case <expr><name pos:line="81" pos:column="12">MUTT_MAILDIR<pos:position pos:line="81" pos:column="24"/></name></expr>:<pos:position pos:line="81" pos:column="25"/></case>
        <expr_stmt><expr><name pos:line="82" pos:column="9">p<pos:position pos:line="82" pos:column="10"/></name> <operator pos:line="82" pos:column="11">=<pos:position pos:line="82" pos:column="12"/></operator> <literal type="string" pos:line="82" pos:column="13">"Maildir"<pos:position pos:line="82" pos:column="22"/></literal></expr>;<pos:position pos:line="82" pos:column="23"/></expr_stmt>
        <break pos:line="83" pos:column="9">break;<pos:position pos:line="83" pos:column="15"/></break>
      <default pos:line="84" pos:column="7">default:<pos:position pos:line="84" pos:column="15"/></default>
        <expr_stmt><expr><name pos:line="85" pos:column="9">p<pos:position pos:line="85" pos:column="10"/></name> <operator pos:line="85" pos:column="11">=<pos:position pos:line="85" pos:column="12"/></operator> <literal type="string" pos:line="85" pos:column="13">"unknown"<pos:position pos:line="85" pos:column="22"/></literal></expr>;<pos:position pos:line="85" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="86" pos:column="6"/></block></switch>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">strfcpy<pos:position pos:line="87" pos:column="12"/></name> <argument_list pos:line="87" pos:column="13">(<argument><expr><name pos:line="87" pos:column="14">tmp<pos:position pos:line="87" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="19">p<pos:position pos:line="87" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="87" pos:column="22">sizeof <argument_list pos:line="87" pos:column="29">(<argument><expr><name pos:line="87" pos:column="30">tmp<pos:position pos:line="87" pos:column="33"/></name></expr></argument>)<pos:position pos:line="87" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="87" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="88" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="89" pos:column="3">else <if pos:line="89" pos:column="8">if <condition pos:line="89" pos:column="11">(<expr><call><name pos:line="89" pos:column="12">DTYPE<pos:position pos:line="89" pos:column="17"/></name> <argument_list pos:line="89" pos:column="18">(<argument><expr><name><name pos:line="89" pos:column="19">MuttVars<pos:position pos:line="89" pos:column="27"/></name><index pos:line="89" pos:column="27">[<expr><name pos:line="89" pos:column="28">idx<pos:position pos:line="89" pos:column="31"/></name></expr>]<pos:position pos:line="89" pos:column="32"/></index></name><operator pos:line="89" pos:column="32">.<pos:position pos:line="89" pos:column="33"/></operator><name pos:line="89" pos:column="33">type<pos:position pos:line="89" pos:column="37"/></name></expr></argument>)<pos:position pos:line="89" pos:column="38"/></argument_list></call> <operator pos:line="89" pos:column="39">==<pos:position pos:line="89" pos:column="41"/></operator> <name pos:line="89" pos:column="42">DT_BOOL<pos:position pos:line="89" pos:column="49"/></name></expr>)<pos:position pos:line="89" pos:column="50"/></condition><then pos:line="89" pos:column="50">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="5">strfcpy<pos:position pos:line="90" pos:column="12"/></name> <argument_list pos:line="90" pos:column="13">(<argument><expr><name pos:line="90" pos:column="14">tmp<pos:position pos:line="90" pos:column="17"/></name></expr></argument>, <argument><expr><ternary><condition><expr><call><name pos:line="90" pos:column="19">option<pos:position pos:line="90" pos:column="25"/></name> <argument_list pos:line="90" pos:column="26">(<argument><expr><name><name pos:line="90" pos:column="27">MuttVars<pos:position pos:line="90" pos:column="35"/></name><index pos:line="90" pos:column="35">[<expr><name pos:line="90" pos:column="36">idx<pos:position pos:line="90" pos:column="39"/></name></expr>]<pos:position pos:line="90" pos:column="40"/></index></name><operator pos:line="90" pos:column="40">.<pos:position pos:line="90" pos:column="41"/></operator><name pos:line="90" pos:column="41">data<pos:position pos:line="90" pos:column="45"/></name></expr></argument>)<pos:position pos:line="90" pos:column="46"/></argument_list></call></expr> ?<pos:position pos:line="90" pos:column="48"/></condition><then pos:line="90" pos:column="48"> <expr><literal type="string" pos:line="90" pos:column="49">"yes"<pos:position pos:line="90" pos:column="54"/></literal></expr> <pos:position pos:line="90" pos:column="55"/></then><else pos:line="90" pos:column="55">: <expr><literal type="string" pos:line="90" pos:column="57">"no"<pos:position pos:line="90" pos:column="61"/></literal></expr></else></ternary></expr></argument>, <argument><expr><sizeof pos:line="90" pos:column="63">sizeof <argument_list pos:line="90" pos:column="70">(<argument><expr><name pos:line="90" pos:column="71">tmp<pos:position pos:line="90" pos:column="74"/></name></expr></argument>)<pos:position pos:line="90" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="90" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="77"/></expr_stmt></block></then></if></elseif>
  <else pos:line="91" pos:column="3">else
    <block type="pseudo"><return pos:line="92" pos:column="5">return <expr><literal type="number" pos:line="92" pos:column="12">0<pos:position pos:line="92" pos:column="13"/></literal></expr>;<pos:position pos:line="92" pos:column="14"/></return></block></else></if>

  <expr_stmt><expr><call><name pos:line="94" pos:column="3">escape_string<pos:position pos:line="94" pos:column="16"/></name> <argument_list pos:line="94" pos:column="17">(<argument><expr><name pos:line="94" pos:column="18">val<pos:position pos:line="94" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="23">len<pos:position pos:line="94" pos:column="26"/></name> <operator pos:line="94" pos:column="27">-<pos:position pos:line="94" pos:column="28"/></operator> <literal type="number" pos:line="94" pos:column="29">1<pos:position pos:line="94" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="94" pos:column="32">tmp<pos:position pos:line="94" pos:column="35"/></name></expr></argument>)<pos:position pos:line="94" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="37"/></expr_stmt>

  <return pos:line="96" pos:column="3">return <expr><literal type="number" pos:line="96" pos:column="10">1<pos:position pos:line="96" pos:column="11"/></literal></expr>;<pos:position pos:line="96" pos:column="12"/></return>
}<pos:position pos:line="97" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2031_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cmd_parse_fetch<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">IMAP_DATA<pos:position pos:line="1" pos:column="39"/></name><modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type> <name pos:line="1" pos:column="41">idata<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name><modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type> <name pos:line="1" pos:column="54">s<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">unsigned<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">int<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">msn<pos:position pos:line="3" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="21">uid<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">HEADER<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">h<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">dprint<pos:position pos:line="6" pos:column="9"/></name> <argument_list pos:line="6" pos:column="10">(<argument><expr><literal type="number" pos:line="6" pos:column="11">3<pos:position pos:line="6" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="6" pos:column="14">(<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">debugfile<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">,<pos:position pos:line="6" pos:column="25"/></operator> <literal type="string" pos:line="6" pos:column="26">"Handling FETCH\n"<pos:position pos:line="6" pos:column="44"/></literal><operator pos:line="6" pos:column="44">)<pos:position pos:line="6" pos:column="45"/></operator></expr></argument>)<pos:position pos:line="6" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="47"/></expr_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">msn<pos:position pos:line="8" pos:column="6"/></name> <operator pos:line="8" pos:column="7">=<pos:position pos:line="8" pos:column="8"/></operator> <call><name pos:line="8" pos:column="9">atoi<pos:position pos:line="8" pos:column="13"/></name> <argument_list pos:line="8" pos:column="14">(<argument><expr><name pos:line="8" pos:column="15">s<pos:position pos:line="8" pos:column="16"/></name></expr></argument>)<pos:position pos:line="8" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="18"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name><name pos:line="9" pos:column="7">msn<pos:position pos:line="9" pos:column="10"/></name> <argument_list type="generic" pos:line="9" pos:column="11">&lt; <argument><expr><literal type="number" pos:line="9" pos:column="13">1<pos:position pos:line="9" pos:column="14"/></literal> <operator pos:line="9" pos:column="15">||<pos:position pos:line="9" pos:column="17"/></operator> <name pos:line="9" pos:column="18">msn<pos:position pos:line="9" pos:column="21"/></name></expr></argument> &gt;<pos:position pos:line="9" pos:column="26"/></argument_list></name> <name><name pos:line="9" pos:column="24">idata<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">max_msn<pos:position pos:line="9" pos:column="38"/></name></name></expr>)<pos:position pos:line="9" pos:column="39"/></condition><then pos:line="9" pos:column="39">
  <block pos:line="10" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">dprint<pos:position pos:line="11" pos:column="11"/></name> <argument_list pos:line="11" pos:column="12">(<argument><expr><literal type="number" pos:line="11" pos:column="13">3<pos:position pos:line="11" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="11" pos:column="16">(<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">debugfile<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">,<pos:position pos:line="11" pos:column="27"/></operator> <literal type="string" pos:line="11" pos:column="28">"FETCH response ignored for this message\n"<pos:position pos:line="11" pos:column="71"/></literal><operator pos:line="11" pos:column="71">)<pos:position pos:line="11" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="11" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="74"/></expr_stmt>
    <return pos:line="12" pos:column="5">return;<pos:position pos:line="12" pos:column="12"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="15" pos:column="3">h<pos:position pos:line="15" pos:column="4"/></name> <operator pos:line="15" pos:column="5">=<pos:position pos:line="15" pos:column="6"/></operator> <name><name pos:line="15" pos:column="7">idata<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">msn_index<pos:position pos:line="15" pos:column="23"/></name><index pos:line="15" pos:column="23">[<expr><name pos:line="15" pos:column="24">msn<pos:position pos:line="15" pos:column="27"/></name> <operator pos:line="15" pos:column="28">-<pos:position pos:line="15" pos:column="29"/></operator> <literal type="number" pos:line="15" pos:column="30">1<pos:position pos:line="15" pos:column="31"/></literal></expr>]<pos:position pos:line="15" pos:column="32"/></index></name></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><operator pos:line="16" pos:column="7">!<pos:position pos:line="16" pos:column="8"/></operator><name pos:line="16" pos:column="8">h<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">||<pos:position pos:line="16" pos:column="12"/></operator> <operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><name><name pos:line="16" pos:column="14">h<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">-&gt;<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="17">active<pos:position pos:line="16" pos:column="23"/></name></name></expr>)<pos:position pos:line="16" pos:column="24"/></condition><then pos:line="16" pos:column="24">
  <block pos:line="17" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">dprint<pos:position pos:line="18" pos:column="11"/></name> <argument_list pos:line="18" pos:column="12">(<argument><expr><literal type="number" pos:line="18" pos:column="13">3<pos:position pos:line="18" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="16">(<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">debugfile<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">,<pos:position pos:line="18" pos:column="27"/></operator> <literal type="string" pos:line="18" pos:column="28">"FETCH response ignored for this message\n"<pos:position pos:line="18" pos:column="71"/></literal><operator pos:line="18" pos:column="71">)<pos:position pos:line="18" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="18" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="74"/></expr_stmt>
    <return pos:line="19" pos:column="5">return;<pos:position pos:line="19" pos:column="12"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">dprint<pos:position pos:line="22" pos:column="9"/></name> <argument_list pos:line="22" pos:column="10">(<argument><expr><literal type="number" pos:line="22" pos:column="11">2<pos:position pos:line="22" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="22" pos:column="14">(<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">debugfile<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">,<pos:position pos:line="22" pos:column="25"/></operator> <literal type="string" pos:line="22" pos:column="26">"Message UID %d updated\n"<pos:position pos:line="22" pos:column="52"/></literal><operator pos:line="22" pos:column="52">,<pos:position pos:line="22" pos:column="53"/></operator> <call><name pos:line="22" pos:column="54">HEADER_DATA<pos:position pos:line="22" pos:column="65"/></name><argument_list pos:line="22" pos:column="65">(<argument><expr><name pos:line="22" pos:column="66">h<pos:position pos:line="22" pos:column="67"/></name></expr></argument>)<pos:position pos:line="22" pos:column="68"/></argument_list></call><operator pos:line="22" pos:column="68">-&gt;<pos:position pos:line="22" pos:column="73"/></operator><name pos:line="22" pos:column="70">uid<pos:position pos:line="22" pos:column="73"/></name><operator pos:line="22" pos:column="73">)<pos:position pos:line="22" pos:column="74"/></operator></expr></argument>)<pos:position pos:line="22" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="76"/></expr_stmt>
  <comment type="block" pos:line="23" pos:column="3">/* skip FETCH */</comment>
  <expr_stmt><expr><name pos:line="24" pos:column="3">s<pos:position pos:line="24" pos:column="4"/></name> <operator pos:line="24" pos:column="5">=<pos:position pos:line="24" pos:column="6"/></operator> <call><name pos:line="24" pos:column="7">imap_next_word<pos:position pos:line="24" pos:column="21"/></name> <argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">s<pos:position pos:line="24" pos:column="24"/></name></expr></argument>)<pos:position pos:line="24" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name pos:line="25" pos:column="3">s<pos:position pos:line="25" pos:column="4"/></name> <operator pos:line="25" pos:column="5">=<pos:position pos:line="25" pos:column="6"/></operator> <call><name pos:line="25" pos:column="7">imap_next_word<pos:position pos:line="25" pos:column="21"/></name> <argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">s<pos:position pos:line="25" pos:column="24"/></name></expr></argument>)<pos:position pos:line="25" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="26"/></expr_stmt>

  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><operator pos:line="27" pos:column="7">*<pos:position pos:line="27" pos:column="8"/></operator><name pos:line="27" pos:column="8">s<pos:position pos:line="27" pos:column="9"/></name> <operator pos:line="27" pos:column="10">!=<pos:position pos:line="27" pos:column="12"/></operator> <literal type="char" pos:line="27" pos:column="13">'('<pos:position pos:line="27" pos:column="16"/></literal></expr>)<pos:position pos:line="27" pos:column="17"/></condition><then pos:line="27" pos:column="17">
  <block pos:line="28" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">dprint<pos:position pos:line="29" pos:column="11"/></name> <argument_list pos:line="29" pos:column="12">(<argument><expr><literal type="number" pos:line="29" pos:column="13">1<pos:position pos:line="29" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="29" pos:column="16">(<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="17">debugfile<pos:position pos:line="29" pos:column="26"/></name><operator pos:line="29" pos:column="26">,<pos:position pos:line="29" pos:column="27"/></operator> <literal type="string" pos:line="29" pos:column="28">"Malformed FETCH response"<pos:position pos:line="29" pos:column="54"/></literal><operator pos:line="29" pos:column="54">)<pos:position pos:line="29" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="29" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="57"/></expr_stmt>
    <return pos:line="30" pos:column="5">return;<pos:position pos:line="30" pos:column="12"/></return>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="32" pos:column="3">s<pos:position pos:line="32" pos:column="4"/></name><operator pos:line="32" pos:column="4">++<pos:position pos:line="32" pos:column="6"/></operator></expr>;<pos:position pos:line="32" pos:column="7"/></expr_stmt>

  <while pos:line="34" pos:column="3">while <condition pos:line="34" pos:column="9">(<expr><operator pos:line="34" pos:column="10">*<pos:position pos:line="34" pos:column="11"/></operator><name pos:line="34" pos:column="11">s<pos:position pos:line="34" pos:column="12"/></name></expr>)<pos:position pos:line="34" pos:column="13"/></condition>
  <block pos:line="35" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">SKIPWS<pos:position pos:line="36" pos:column="11"/></name> <argument_list pos:line="36" pos:column="12">(<argument><expr><name pos:line="36" pos:column="13">s<pos:position pos:line="36" pos:column="14"/></name></expr></argument>)<pos:position pos:line="36" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="16"/></expr_stmt>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><call><name pos:line="38" pos:column="9">ascii_strncasecmp<pos:position pos:line="38" pos:column="26"/></name> <argument_list pos:line="38" pos:column="27">(<argument><expr><literal type="string" pos:line="38" pos:column="28">"FLAGS"<pos:position pos:line="38" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="37">s<pos:position pos:line="38" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="40">5<pos:position pos:line="38" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="42"/></argument_list></call> <operator pos:line="38" pos:column="43">==<pos:position pos:line="38" pos:column="45"/></operator> <literal type="number" pos:line="38" pos:column="46">0<pos:position pos:line="38" pos:column="47"/></literal></expr>)<pos:position pos:line="38" pos:column="48"/></condition><then pos:line="38" pos:column="48">
    <block pos:line="39" pos:column="5">{
      <comment type="block" pos:line="40" pos:column="7">/* If server flags could conflict with mutt's flags, reopen the mailbox. */</comment>
      <if pos:line="41" pos:column="7">if <condition pos:line="41" pos:column="10">(<expr><name><name pos:line="41" pos:column="11">h<pos:position pos:line="41" pos:column="12"/></name><operator pos:line="41" pos:column="12">-&gt;<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="14">changed<pos:position pos:line="41" pos:column="21"/></name></name></expr>)<pos:position pos:line="41" pos:column="22"/></condition><then pos:line="41" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="42" pos:column="9">idata<pos:position pos:line="42" pos:column="14"/></name><operator pos:line="42" pos:column="14">-&gt;<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="16">reopen<pos:position pos:line="42" pos:column="22"/></name></name> <operator pos:line="42" pos:column="23">|=<pos:position pos:line="42" pos:column="25"/></operator> <name pos:line="42" pos:column="26">IMAP_EXPUNGE_PENDING<pos:position pos:line="42" pos:column="46"/></name></expr>;<pos:position pos:line="42" pos:column="47"/></expr_stmt></block></then>
      <else pos:line="43" pos:column="7">else
      <block pos:line="44" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">imap_set_flags<pos:position pos:line="45" pos:column="23"/></name> <argument_list pos:line="45" pos:column="24">(<argument><expr><name pos:line="45" pos:column="25">idata<pos:position pos:line="45" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="32">h<pos:position pos:line="45" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="35">s<pos:position pos:line="45" pos:column="36"/></name></expr></argument>)<pos:position pos:line="45" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">idata<pos:position pos:line="46" pos:column="14"/></name><operator pos:line="46" pos:column="14">-&gt;<pos:position pos:line="46" pos:column="19"/></operator><name pos:line="46" pos:column="16">check_status<pos:position pos:line="46" pos:column="28"/></name></name> <operator pos:line="46" pos:column="29">=<pos:position pos:line="46" pos:column="30"/></operator> <name pos:line="46" pos:column="31">IMAP_FLAGS_PENDING<pos:position pos:line="46" pos:column="49"/></name></expr>;<pos:position pos:line="46" pos:column="50"/></expr_stmt>
      }<pos:position pos:line="47" pos:column="8"/></block></else></if>
      <return pos:line="48" pos:column="7">return;<pos:position pos:line="48" pos:column="14"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then>
    <elseif pos:line="50" pos:column="5">else <if pos:line="50" pos:column="10">if <condition pos:line="50" pos:column="13">(<expr><call><name pos:line="50" pos:column="14">ascii_strncasecmp<pos:position pos:line="50" pos:column="31"/></name> <argument_list pos:line="50" pos:column="32">(<argument><expr><literal type="string" pos:line="50" pos:column="33">"UID"<pos:position pos:line="50" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="40">s<pos:position pos:line="50" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="43">3<pos:position pos:line="50" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="45"/></argument_list></call> <operator pos:line="50" pos:column="46">==<pos:position pos:line="50" pos:column="48"/></operator> <literal type="number" pos:line="50" pos:column="49">0<pos:position pos:line="50" pos:column="50"/></literal></expr>)<pos:position pos:line="50" pos:column="51"/></condition><then pos:line="50" pos:column="51">
    <block pos:line="51" pos:column="5">{
      <expr_stmt><expr><name pos:line="52" pos:column="7">s<pos:position pos:line="52" pos:column="8"/></name> <operator pos:line="52" pos:column="9">+=<pos:position pos:line="52" pos:column="11"/></operator> <literal type="number" pos:line="52" pos:column="12">3<pos:position pos:line="52" pos:column="13"/></literal></expr>;<pos:position pos:line="52" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">SKIPWS<pos:position pos:line="53" pos:column="13"/></name> <argument_list pos:line="53" pos:column="14">(<argument><expr><name pos:line="53" pos:column="15">s<pos:position pos:line="53" pos:column="16"/></name></expr></argument>)<pos:position pos:line="53" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name pos:line="54" pos:column="7">uid<pos:position pos:line="54" pos:column="10"/></name> <operator pos:line="54" pos:column="11">=<pos:position pos:line="54" pos:column="12"/></operator> <operator pos:line="54" pos:column="13">(<pos:position pos:line="54" pos:column="14"/></operator><name pos:line="54" pos:column="14">unsigned<pos:position pos:line="54" pos:column="22"/></name> <name pos:line="54" pos:column="23">int<pos:position pos:line="54" pos:column="26"/></name><operator pos:line="54" pos:column="26">)<pos:position pos:line="54" pos:column="27"/></operator> <call><name pos:line="54" pos:column="28">atoi<pos:position pos:line="54" pos:column="32"/></name> <argument_list pos:line="54" pos:column="33">(<argument><expr><name pos:line="54" pos:column="34">s<pos:position pos:line="54" pos:column="35"/></name></expr></argument>)<pos:position pos:line="54" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="37"/></expr_stmt>
      <if pos:line="55" pos:column="7">if <condition pos:line="55" pos:column="10">(<expr><name pos:line="55" pos:column="11">uid<pos:position pos:line="55" pos:column="14"/></name> <operator pos:line="55" pos:column="15">!=<pos:position pos:line="55" pos:column="17"/></operator> <call><name pos:line="55" pos:column="18">HEADER_DATA<pos:position pos:line="55" pos:column="29"/></name><argument_list pos:line="55" pos:column="29">(<argument><expr><name pos:line="55" pos:column="30">h<pos:position pos:line="55" pos:column="31"/></name></expr></argument>)<pos:position pos:line="55" pos:column="32"/></argument_list></call><operator pos:line="55" pos:column="32">-&gt;<pos:position pos:line="55" pos:column="37"/></operator><name pos:line="55" pos:column="34">uid<pos:position pos:line="55" pos:column="37"/></name></expr>)<pos:position pos:line="55" pos:column="38"/></condition><then pos:line="55" pos:column="38">
      <block pos:line="56" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">dprint<pos:position pos:line="57" pos:column="15"/></name> <argument_list pos:line="57" pos:column="16">(<argument><expr><literal type="number" pos:line="57" pos:column="17">2<pos:position pos:line="57" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="57" pos:column="20">(<pos:position pos:line="57" pos:column="21"/></operator><name pos:line="57" pos:column="21">debugfile<pos:position pos:line="57" pos:column="30"/></name><operator pos:line="57" pos:column="30">,<pos:position pos:line="57" pos:column="31"/></operator> <literal type="string" pos:line="57" pos:column="32">"FETCH UID vs MSN mismatch.  Skipping update.\n"<pos:position pos:line="57" pos:column="80"/></literal><operator pos:line="57" pos:column="80">)<pos:position pos:line="57" pos:column="81"/></operator></expr></argument>)<pos:position pos:line="57" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="83"/></expr_stmt>
        <return pos:line="58" pos:column="9">return;<pos:position pos:line="58" pos:column="16"/></return>
      }<pos:position pos:line="59" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="60" pos:column="7">s<pos:position pos:line="60" pos:column="8"/></name> <operator pos:line="60" pos:column="9">=<pos:position pos:line="60" pos:column="10"/></operator> <call><name pos:line="60" pos:column="11">imap_next_word<pos:position pos:line="60" pos:column="25"/></name> <argument_list pos:line="60" pos:column="26">(<argument><expr><name pos:line="60" pos:column="27">s<pos:position pos:line="60" pos:column="28"/></name></expr></argument>)<pos:position pos:line="60" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="62" pos:column="5">else <if pos:line="62" pos:column="10">if <condition pos:line="62" pos:column="13">(<expr><operator pos:line="62" pos:column="14">*<pos:position pos:line="62" pos:column="15"/></operator><name pos:line="62" pos:column="15">s<pos:position pos:line="62" pos:column="16"/></name> <operator pos:line="62" pos:column="17">==<pos:position pos:line="62" pos:column="19"/></operator> <literal type="char" pos:line="62" pos:column="20">')'<pos:position pos:line="62" pos:column="23"/></literal></expr>)<pos:position pos:line="62" pos:column="24"/></condition><then pos:line="62" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="7">s<pos:position pos:line="63" pos:column="8"/></name><operator pos:line="63" pos:column="8">++<pos:position pos:line="63" pos:column="10"/></operator></expr>;<pos:position pos:line="63" pos:column="11"/></expr_stmt></block></then></if></elseif> <comment type="block" pos:line="63" pos:column="12">/* end of request */</comment>
    <elseif pos:line="64" pos:column="5">else <if pos:line="64" pos:column="10">if <condition pos:line="64" pos:column="13">(<expr><operator pos:line="64" pos:column="14">*<pos:position pos:line="64" pos:column="15"/></operator><name pos:line="64" pos:column="15">s<pos:position pos:line="64" pos:column="16"/></name></expr>)<pos:position pos:line="64" pos:column="17"/></condition><then pos:line="64" pos:column="17">
    <block pos:line="65" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="66" pos:column="7">dprint<pos:position pos:line="66" pos:column="13"/></name> <argument_list pos:line="66" pos:column="14">(<argument><expr><literal type="number" pos:line="66" pos:column="15">2<pos:position pos:line="66" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="66" pos:column="18">(<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="19">debugfile<pos:position pos:line="66" pos:column="28"/></name><operator pos:line="66" pos:column="28">,<pos:position pos:line="66" pos:column="29"/></operator> <literal type="string" pos:line="66" pos:column="30">"Only handle FLAGS updates\n"<pos:position pos:line="66" pos:column="59"/></literal><operator pos:line="66" pos:column="59">)<pos:position pos:line="66" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="66" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="62"/></expr_stmt>
      <return pos:line="67" pos:column="7">return;<pos:position pos:line="67" pos:column="14"/></return>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="69" pos:column="4"/></block></while>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

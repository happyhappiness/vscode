<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1870_mutt-1.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">imap_auth_res_t<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">imap_auth_gss<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">IMAP_DATA<pos:position pos:line="1" pos:column="41"/></name><modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type> <name pos:line="1" pos:column="43">idata<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name><modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type> <name pos:line="1" pos:column="62">method<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">gss_buffer_desc<pos:position pos:line="3" pos:column="18"/></name></type> <name pos:line="3" pos:column="19">request_buf<pos:position pos:line="3" pos:column="30"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="32">send_token<pos:position pos:line="3" pos:column="42"/></name></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">gss_buffer_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">sec_token<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">gss_name_t<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">target_name<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">gss_ctx_id_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">context<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
<cpp:ifdef pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">ifdef<pos:position pos:line="7" pos:column="7"/></cpp:directive> <name pos:line="7" pos:column="8">DEBUG<pos:position pos:line="7" pos:column="13"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">gss_OID<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">mech_name<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name></type> <name pos:line="9" pos:column="8">server_conf_flags<pos:position pos:line="9" pos:column="25"/></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">gss_qop_t<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">quality<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">cflags<pos:position pos:line="12" pos:column="13"/></name></decl>;<pos:position pos:line="12" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">OM_uint32<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">maj_stat<pos:position pos:line="13" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="13" pos:column="23">min_stat<pos:position pos:line="13" pos:column="31"/></name></decl>;<pos:position pos:line="13" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name></type> <name><name pos:line="14" pos:column="8">buf1<pos:position pos:line="14" pos:column="12"/></name><index pos:line="14" pos:column="12">[<expr><name pos:line="14" pos:column="13">GSS_BUFSIZE<pos:position pos:line="14" pos:column="24"/></name></expr>]<pos:position pos:line="14" pos:column="25"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="14" pos:column="27">buf2<pos:position pos:line="14" pos:column="31"/></name><index pos:line="14" pos:column="31">[<expr><name pos:line="14" pos:column="32">GSS_BUFSIZE<pos:position pos:line="14" pos:column="43"/></name></expr>]<pos:position pos:line="14" pos:column="44"/></index></name></decl>;<pos:position pos:line="14" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">unsigned<pos:position pos:line="15" pos:column="11"/></name> <name pos:line="15" pos:column="12">long<pos:position pos:line="15" pos:column="16"/></name></type> <name pos:line="15" pos:column="17">buf_size<pos:position pos:line="15" pos:column="25"/></name></decl>;<pos:position pos:line="15" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">int<pos:position pos:line="16" pos:column="6"/></name></type> <name pos:line="16" pos:column="7">rc<pos:position pos:line="16" pos:column="9"/></name></decl>;<pos:position pos:line="16" pos:column="10"/></decl_stmt>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">!<pos:position pos:line="18" pos:column="8"/></operator><call><name pos:line="18" pos:column="8">mutt_bit_isset<pos:position pos:line="18" pos:column="22"/></name> <argument_list pos:line="18" pos:column="23">(<argument><expr><name><name pos:line="18" pos:column="24">idata<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">-&gt;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="31">capabilities<pos:position pos:line="18" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="45">AGSSAPI<pos:position pos:line="18" pos:column="52"/></name></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="54"/></condition><then pos:line="18" pos:column="54">
    <block type="pseudo"><return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">IMAP_AUTH_UNAVAIL<pos:position pos:line="19" pos:column="29"/></name></expr>;<pos:position pos:line="19" pos:column="30"/></return></block></then></if>

  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><call><name pos:line="21" pos:column="7">mutt_account_getuser<pos:position pos:line="21" pos:column="27"/></name> <argument_list pos:line="21" pos:column="28">(<argument><expr><operator pos:line="21" pos:column="29">&amp;<pos:position pos:line="21" pos:column="34"/></operator><name><name pos:line="21" pos:column="30">idata<pos:position pos:line="21" pos:column="35"/></name><operator pos:line="21" pos:column="35">-&gt;<pos:position pos:line="21" pos:column="40"/></operator><name pos:line="21" pos:column="37">conn<pos:position pos:line="21" pos:column="41"/></name><operator pos:line="21" pos:column="41">-&gt;<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="43">account<pos:position pos:line="21" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="52"/></condition><then pos:line="21" pos:column="52">
    <block type="pseudo"><return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">IMAP_AUTH_FAILURE<pos:position pos:line="22" pos:column="29"/></name></expr>;<pos:position pos:line="22" pos:column="30"/></return></block></then></if>
  
  <comment type="block" pos:line="24" pos:column="3">/* get an IMAP service ticket for the server */</comment>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">snprintf<pos:position pos:line="25" pos:column="11"/></name> <argument_list pos:line="25" pos:column="12">(<argument><expr><name pos:line="25" pos:column="13">buf1<pos:position pos:line="25" pos:column="17"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="19">sizeof <argument_list pos:line="25" pos:column="26">(<argument><expr><name pos:line="25" pos:column="27">buf1<pos:position pos:line="25" pos:column="31"/></name></expr></argument>)<pos:position pos:line="25" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="34">"imap@%s"<pos:position pos:line="25" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="45">idata<pos:position pos:line="25" pos:column="50"/></name><operator pos:line="25" pos:column="50">-&gt;<pos:position pos:line="25" pos:column="55"/></operator><name pos:line="25" pos:column="52">conn<pos:position pos:line="25" pos:column="56"/></name><operator pos:line="25" pos:column="56">-&gt;<pos:position pos:line="25" pos:column="61"/></operator><name pos:line="25" pos:column="58">account<pos:position pos:line="25" pos:column="65"/></name><operator pos:line="25" pos:column="65">.<pos:position pos:line="25" pos:column="66"/></operator><name pos:line="25" pos:column="66">host<pos:position pos:line="25" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="72"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="26" pos:column="3">request_buf<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">.<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">value<pos:position pos:line="26" pos:column="20"/></name></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <name pos:line="26" pos:column="23">buf1<pos:position pos:line="26" pos:column="27"/></name></expr>;<pos:position pos:line="26" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">request_buf<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">.<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="15">length<pos:position pos:line="27" pos:column="21"/></name></name> <operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator> <call><name pos:line="27" pos:column="24">strlen<pos:position pos:line="27" pos:column="30"/></name> <argument_list pos:line="27" pos:column="31">(<argument><expr><name pos:line="27" pos:column="32">buf1<pos:position pos:line="27" pos:column="36"/></name></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call> <operator pos:line="27" pos:column="38">+<pos:position pos:line="27" pos:column="39"/></operator> <literal type="number" pos:line="27" pos:column="40">1<pos:position pos:line="27" pos:column="41"/></literal></expr>;<pos:position pos:line="27" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name pos:line="28" pos:column="3">maj_stat<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <call><name pos:line="28" pos:column="14">gss_import_name<pos:position pos:line="28" pos:column="29"/></name> <argument_list pos:line="28" pos:column="30">(<argument><expr><operator pos:line="28" pos:column="31">&amp;<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="32">min_stat<pos:position pos:line="28" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="42">&amp;<pos:position pos:line="28" pos:column="47"/></operator><name pos:line="28" pos:column="43">request_buf<pos:position pos:line="28" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="56">gss_nt_service_name<pos:position pos:line="28" pos:column="75"/></name></expr></argument>,
    <argument><expr><operator pos:line="29" pos:column="5">&amp;<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="6">target_name<pos:position pos:line="29" pos:column="17"/></name></expr></argument>)<pos:position pos:line="29" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="19"/></expr_stmt>
  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name pos:line="30" pos:column="7">maj_stat<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">!=<pos:position pos:line="30" pos:column="18"/></operator> <name pos:line="30" pos:column="19">GSS_S_COMPLETE<pos:position pos:line="30" pos:column="33"/></name></expr>)<pos:position pos:line="30" pos:column="34"/></condition><then pos:line="30" pos:column="34">
  <block pos:line="31" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">dprint<pos:position pos:line="32" pos:column="11"/></name> <argument_list pos:line="32" pos:column="12">(<argument><expr><literal type="number" pos:line="32" pos:column="13">2<pos:position pos:line="32" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="32" pos:column="16">(<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="17">debugfile<pos:position pos:line="32" pos:column="26"/></name><operator pos:line="32" pos:column="26">,<pos:position pos:line="32" pos:column="27"/></operator> <literal type="string" pos:line="32" pos:column="28">"Couldn't get service name for [%s]\n"<pos:position pos:line="32" pos:column="66"/></literal><operator pos:line="32" pos:column="66">,<pos:position pos:line="32" pos:column="67"/></operator> <name pos:line="32" pos:column="68">buf1<pos:position pos:line="32" pos:column="72"/></name><operator pos:line="32" pos:column="72">)<pos:position pos:line="32" pos:column="73"/></operator></expr></argument>)<pos:position pos:line="32" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="75"/></expr_stmt>
    <return pos:line="33" pos:column="5">return <expr><name pos:line="33" pos:column="12">IMAP_AUTH_UNAVAIL<pos:position pos:line="33" pos:column="29"/></name></expr>;<pos:position pos:line="33" pos:column="30"/></return>
  }<pos:position pos:line="34" pos:column="4"/></block></then>
<cpp:ifdef pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">ifdef<pos:position pos:line="35" pos:column="7"/></cpp:directive> <name pos:line="35" pos:column="8">DEBUG<pos:position pos:line="35" pos:column="13"/></name></cpp:ifdef>	
  <elseif pos:line="36" pos:column="3">else <if pos:line="36" pos:column="8">if <condition pos:line="36" pos:column="11">(<expr><name pos:line="36" pos:column="12">debuglevel<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">&gt;=<pos:position pos:line="36" pos:column="28"/></operator> <literal type="number" pos:line="36" pos:column="26">2<pos:position pos:line="36" pos:column="27"/></literal></expr>)<pos:position pos:line="36" pos:column="28"/></condition><then pos:line="36" pos:column="28">
  <block pos:line="37" pos:column="3">{
    <expr_stmt><expr><name pos:line="38" pos:column="5">maj_stat<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <call><name pos:line="38" pos:column="16">gss_display_name<pos:position pos:line="38" pos:column="32"/></name> <argument_list pos:line="38" pos:column="33">(<argument><expr><operator pos:line="38" pos:column="34">&amp;<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="35">min_stat<pos:position pos:line="38" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="45">target_name<pos:position pos:line="38" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="58">&amp;<pos:position pos:line="38" pos:column="63"/></operator><name pos:line="38" pos:column="59">request_buf<pos:position pos:line="38" pos:column="70"/></name></expr></argument>,
      <argument><expr><operator pos:line="39" pos:column="7">&amp;<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="8">mech_name<pos:position pos:line="39" pos:column="17"/></name></expr></argument>)<pos:position pos:line="39" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">dprint<pos:position pos:line="40" pos:column="11"/></name> <argument_list pos:line="40" pos:column="12">(<argument><expr><literal type="number" pos:line="40" pos:column="13">2<pos:position pos:line="40" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="40" pos:column="16">(<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="17">debugfile<pos:position pos:line="40" pos:column="26"/></name><operator pos:line="40" pos:column="26">,<pos:position pos:line="40" pos:column="27"/></operator> <literal type="string" pos:line="40" pos:column="28">"Using service name [%s]\n"<pos:position pos:line="40" pos:column="55"/></literal><operator pos:line="40" pos:column="55">,<pos:position pos:line="40" pos:column="56"/></operator>
      <operator pos:line="41" pos:column="7">(<pos:position pos:line="41" pos:column="8"/></operator><name pos:line="41" pos:column="8">char<pos:position pos:line="41" pos:column="12"/></name><operator pos:line="41" pos:column="12">*<pos:position pos:line="41" pos:column="13"/></operator><operator pos:line="41" pos:column="13">)<pos:position pos:line="41" pos:column="14"/></operator> <name><name pos:line="41" pos:column="15">request_buf<pos:position pos:line="41" pos:column="26"/></name><operator pos:line="41" pos:column="26">.<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="27">value<pos:position pos:line="41" pos:column="32"/></name></name><operator pos:line="41" pos:column="32">)<pos:position pos:line="41" pos:column="33"/></operator></expr></argument>)<pos:position pos:line="41" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="42" pos:column="5">maj_stat<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">=<pos:position pos:line="42" pos:column="15"/></operator> <call><name pos:line="42" pos:column="16">gss_release_buffer<pos:position pos:line="42" pos:column="34"/></name> <argument_list pos:line="42" pos:column="35">(<argument><expr><operator pos:line="42" pos:column="36">&amp;<pos:position pos:line="42" pos:column="41"/></operator><name pos:line="42" pos:column="37">min_stat<pos:position pos:line="42" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="47">&amp;<pos:position pos:line="42" pos:column="52"/></operator><name pos:line="42" pos:column="48">request_buf<pos:position pos:line="42" pos:column="59"/></name></expr></argument>)<pos:position pos:line="42" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="61"/></expr_stmt>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if></elseif></if>
<cpp:endif pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">endif<pos:position pos:line="44" pos:column="7"/></cpp:directive></cpp:endif>
  <comment type="block" pos:line="45" pos:column="3">/* Acquire initial credentials - without a TGT GSSAPI is UNAVAIL */</comment>
  <expr_stmt><expr><name pos:line="46" pos:column="3">sec_token<pos:position pos:line="46" pos:column="12"/></name> <operator pos:line="46" pos:column="13">=<pos:position pos:line="46" pos:column="14"/></operator> <name pos:line="46" pos:column="15">GSS_C_NO_BUFFER<pos:position pos:line="46" pos:column="30"/></name></expr>;<pos:position pos:line="46" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name pos:line="47" pos:column="3">context<pos:position pos:line="47" pos:column="10"/></name> <operator pos:line="47" pos:column="11">=<pos:position pos:line="47" pos:column="12"/></operator> <name pos:line="47" pos:column="13">GSS_C_NO_CONTEXT<pos:position pos:line="47" pos:column="29"/></name></expr>;<pos:position pos:line="47" pos:column="30"/></expr_stmt>

  <comment type="block" pos:line="49" pos:column="3">/* build token */</comment>
  <expr_stmt><expr><name pos:line="50" pos:column="3">maj_stat<pos:position pos:line="50" pos:column="11"/></name> <operator pos:line="50" pos:column="12">=<pos:position pos:line="50" pos:column="13"/></operator> <call><name pos:line="50" pos:column="14">gss_init_sec_context<pos:position pos:line="50" pos:column="34"/></name> <argument_list pos:line="50" pos:column="35">(<argument><expr><operator pos:line="50" pos:column="36">&amp;<pos:position pos:line="50" pos:column="41"/></operator><name pos:line="50" pos:column="37">min_stat<pos:position pos:line="50" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="47">GSS_C_NO_CREDENTIAL<pos:position pos:line="50" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="68">&amp;<pos:position pos:line="50" pos:column="73"/></operator><name pos:line="50" pos:column="69">context<pos:position pos:line="50" pos:column="76"/></name></expr></argument>,
    <argument><expr><name pos:line="51" pos:column="5">target_name<pos:position pos:line="51" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="18">GSS_C_NO_OID<pos:position pos:line="51" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="32">GSS_C_MUTUAL_FLAG<pos:position pos:line="51" pos:column="49"/></name> <operator pos:line="51" pos:column="50">|<pos:position pos:line="51" pos:column="51"/></operator> <name pos:line="51" pos:column="52">GSS_C_SEQUENCE_FLAG<pos:position pos:line="51" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="73">0<pos:position pos:line="51" pos:column="74"/></literal></expr></argument>, 
    <argument><expr><name pos:line="52" pos:column="5">GSS_C_NO_CHANNEL_BINDINGS<pos:position pos:line="52" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="32">sec_token<pos:position pos:line="52" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="43">NULL<pos:position pos:line="52" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="49">&amp;<pos:position pos:line="52" pos:column="54"/></operator><name pos:line="52" pos:column="50">send_token<pos:position pos:line="52" pos:column="60"/></name></expr></argument>,
    <argument><expr><operator pos:line="53" pos:column="5">(<pos:position pos:line="53" pos:column="6"/></operator><name pos:line="53" pos:column="6">unsigned<pos:position pos:line="53" pos:column="14"/></name> <name pos:line="53" pos:column="15">int<pos:position pos:line="53" pos:column="18"/></name><operator pos:line="53" pos:column="18">*<pos:position pos:line="53" pos:column="19"/></operator><operator pos:line="53" pos:column="19">)<pos:position pos:line="53" pos:column="20"/></operator> <operator pos:line="53" pos:column="21">&amp;<pos:position pos:line="53" pos:column="26"/></operator><name pos:line="53" pos:column="22">cflags<pos:position pos:line="53" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="30">NULL<pos:position pos:line="53" pos:column="34"/></name></expr></argument>)<pos:position pos:line="53" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="36"/></expr_stmt>
  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><name pos:line="54" pos:column="7">maj_stat<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">!=<pos:position pos:line="54" pos:column="18"/></operator> <name pos:line="54" pos:column="19">GSS_S_COMPLETE<pos:position pos:line="54" pos:column="33"/></name> <operator pos:line="54" pos:column="34">&amp;&amp;<pos:position pos:line="54" pos:column="44"/></operator> <name pos:line="54" pos:column="37">maj_stat<pos:position pos:line="54" pos:column="45"/></name> <operator pos:line="54" pos:column="46">!=<pos:position pos:line="54" pos:column="48"/></operator> <name pos:line="54" pos:column="49">GSS_S_CONTINUE_NEEDED<pos:position pos:line="54" pos:column="70"/></name></expr>)<pos:position pos:line="54" pos:column="71"/></condition><then pos:line="54" pos:column="71">
  <block pos:line="55" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">print_gss_error<pos:position pos:line="56" pos:column="20"/></name><argument_list pos:line="56" pos:column="20">(<argument><expr><name pos:line="56" pos:column="21">maj_stat<pos:position pos:line="56" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="31">min_stat<pos:position pos:line="56" pos:column="39"/></name></expr></argument>)<pos:position pos:line="56" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">dprint<pos:position pos:line="57" pos:column="11"/></name> <argument_list pos:line="57" pos:column="12">(<argument><expr><literal type="number" pos:line="57" pos:column="13">1<pos:position pos:line="57" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="57" pos:column="16">(<pos:position pos:line="57" pos:column="17"/></operator><name pos:line="57" pos:column="17">debugfile<pos:position pos:line="57" pos:column="26"/></name><operator pos:line="57" pos:column="26">,<pos:position pos:line="57" pos:column="27"/></operator> <literal type="string" pos:line="57" pos:column="28">"Error acquiring credentials - no TGT?\n"<pos:position pos:line="57" pos:column="69"/></literal><operator pos:line="57" pos:column="69">)<pos:position pos:line="57" pos:column="70"/></operator></expr></argument>)<pos:position pos:line="57" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">gss_release_name<pos:position pos:line="58" pos:column="21"/></name> <argument_list pos:line="58" pos:column="22">(<argument><expr><operator pos:line="58" pos:column="23">&amp;<pos:position pos:line="58" pos:column="28"/></operator><name pos:line="58" pos:column="24">min_stat<pos:position pos:line="58" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="34">&amp;<pos:position pos:line="58" pos:column="39"/></operator><name pos:line="58" pos:column="35">target_name<pos:position pos:line="58" pos:column="46"/></name></expr></argument>)<pos:position pos:line="58" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="48"/></expr_stmt>

    <return pos:line="60" pos:column="5">return <expr><name pos:line="60" pos:column="12">IMAP_AUTH_UNAVAIL<pos:position pos:line="60" pos:column="29"/></name></expr>;<pos:position pos:line="60" pos:column="30"/></return>
  }<pos:position pos:line="61" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="63" pos:column="3">/* now begin login */</comment>
  <decl_stmt><decl><type><name pos:line="64" pos:column="3">mutt_message<pos:position pos:line="64" pos:column="15"/></name></type> <name pos:line="64" pos:column="16">_<pos:position pos:line="64" pos:column="17"/></name><argument_list pos:line="64" pos:column="17">(<argument><expr><literal type="string" pos:line="64" pos:column="18">"Authenticating (GSSAPI)..."<pos:position pos:line="64" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="47"/></argument_list></decl>;<pos:position pos:line="64" pos:column="48"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="66" pos:column="3">imap_cmd_start<pos:position pos:line="66" pos:column="17"/></name> <argument_list pos:line="66" pos:column="18">(<argument><expr><name pos:line="66" pos:column="19">idata<pos:position pos:line="66" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="26">"AUTHENTICATE GSSAPI"<pos:position pos:line="66" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="49"/></expr_stmt>

  <comment type="block" pos:line="68" pos:column="3">/* expect a null continuation response ("+") */</comment>
  <do pos:line="69" pos:column="3">do
    <block type="pseudo"><expr_stmt><expr><name pos:line="70" pos:column="5">rc<pos:position pos:line="70" pos:column="7"/></name> <operator pos:line="70" pos:column="8">=<pos:position pos:line="70" pos:column="9"/></operator> <call><name pos:line="70" pos:column="10">imap_cmd_step<pos:position pos:line="70" pos:column="23"/></name> <argument_list pos:line="70" pos:column="24">(<argument><expr><name pos:line="70" pos:column="25">idata<pos:position pos:line="70" pos:column="30"/></name></expr></argument>)<pos:position pos:line="70" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="32"/></expr_stmt></block>
  while <condition pos:line="71" pos:column="9">(<expr><name pos:line="71" pos:column="10">rc<pos:position pos:line="71" pos:column="12"/></name> <operator pos:line="71" pos:column="13">==<pos:position pos:line="71" pos:column="15"/></operator> <name pos:line="71" pos:column="16">IMAP_CMD_CONTINUE<pos:position pos:line="71" pos:column="33"/></name></expr>)<pos:position pos:line="71" pos:column="34"/></condition>;<pos:position pos:line="71" pos:column="35"/></do>

  <if pos:line="73" pos:column="3">if <condition pos:line="73" pos:column="6">(<expr><name pos:line="73" pos:column="7">rc<pos:position pos:line="73" pos:column="9"/></name> <operator pos:line="73" pos:column="10">!=<pos:position pos:line="73" pos:column="12"/></operator> <name pos:line="73" pos:column="13">IMAP_CMD_RESPOND<pos:position pos:line="73" pos:column="29"/></name></expr>)<pos:position pos:line="73" pos:column="30"/></condition><then pos:line="73" pos:column="30">
  <block pos:line="74" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">dprint<pos:position pos:line="75" pos:column="11"/></name> <argument_list pos:line="75" pos:column="12">(<argument><expr><literal type="number" pos:line="75" pos:column="13">2<pos:position pos:line="75" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="75" pos:column="16">(<pos:position pos:line="75" pos:column="17"/></operator><name pos:line="75" pos:column="17">debugfile<pos:position pos:line="75" pos:column="26"/></name><operator pos:line="75" pos:column="26">,<pos:position pos:line="75" pos:column="27"/></operator> <literal type="string" pos:line="75" pos:column="28">"Invalid response from server: %s\n"<pos:position pos:line="75" pos:column="64"/></literal><operator pos:line="75" pos:column="64">,<pos:position pos:line="75" pos:column="65"/></operator> <name pos:line="75" pos:column="66">buf1<pos:position pos:line="75" pos:column="70"/></name><operator pos:line="75" pos:column="70">)<pos:position pos:line="75" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="75" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="76" pos:column="5">gss_release_name<pos:position pos:line="76" pos:column="21"/></name> <argument_list pos:line="76" pos:column="22">(<argument><expr><operator pos:line="76" pos:column="23">&amp;<pos:position pos:line="76" pos:column="28"/></operator><name pos:line="76" pos:column="24">min_stat<pos:position pos:line="76" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="34">&amp;<pos:position pos:line="76" pos:column="39"/></operator><name pos:line="76" pos:column="35">target_name<pos:position pos:line="76" pos:column="46"/></name></expr></argument>)<pos:position pos:line="76" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="48"/></expr_stmt>
    <goto pos:line="77" pos:column="5">goto <name pos:line="77" pos:column="10">bail<pos:position pos:line="77" pos:column="14"/></name>;<pos:position pos:line="77" pos:column="15"/></goto>
  }<pos:position pos:line="78" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="80" pos:column="3">/* now start the security context initialisation loop... */</comment>
  <expr_stmt><expr><call><name pos:line="81" pos:column="3">dprint<pos:position pos:line="81" pos:column="9"/></name> <argument_list pos:line="81" pos:column="10">(<argument><expr><literal type="number" pos:line="81" pos:column="11">2<pos:position pos:line="81" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="81" pos:column="14">(<pos:position pos:line="81" pos:column="15"/></operator><name pos:line="81" pos:column="15">debugfile<pos:position pos:line="81" pos:column="24"/></name><operator pos:line="81" pos:column="24">,<pos:position pos:line="81" pos:column="25"/></operator> <literal type="string" pos:line="81" pos:column="26">"Sending credentials\n"<pos:position pos:line="81" pos:column="49"/></literal><operator pos:line="81" pos:column="49">)<pos:position pos:line="81" pos:column="50"/></operator></expr></argument>)<pos:position pos:line="81" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="82" pos:column="3">mutt_to_base64<pos:position pos:line="82" pos:column="17"/></name> <argument_list pos:line="82" pos:column="18">(<argument><expr><operator pos:line="82" pos:column="19">(<pos:position pos:line="82" pos:column="20"/></operator><name pos:line="82" pos:column="20">unsigned<pos:position pos:line="82" pos:column="28"/></name> <name pos:line="82" pos:column="29">char<pos:position pos:line="82" pos:column="33"/></name><operator pos:line="82" pos:column="33">*<pos:position pos:line="82" pos:column="34"/></operator><operator pos:line="82" pos:column="34">)<pos:position pos:line="82" pos:column="35"/></operator> <name pos:line="82" pos:column="36">buf1<pos:position pos:line="82" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="42">send_token<pos:position pos:line="82" pos:column="52"/></name><operator pos:line="82" pos:column="52">.<pos:position pos:line="82" pos:column="53"/></operator><name pos:line="82" pos:column="53">value<pos:position pos:line="82" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="60">send_token<pos:position pos:line="82" pos:column="70"/></name><operator pos:line="82" pos:column="70">.<pos:position pos:line="82" pos:column="71"/></operator><name pos:line="82" pos:column="71">length<pos:position pos:line="82" pos:column="77"/></name></name></expr></argument>,
    <argument><expr><sizeof pos:line="83" pos:column="5">sizeof <argument_list pos:line="83" pos:column="12">(<argument><expr><name pos:line="83" pos:column="13">buf1<pos:position pos:line="83" pos:column="17"/></name></expr></argument>)<pos:position pos:line="83" pos:column="18"/></argument_list></sizeof> <operator pos:line="83" pos:column="19">-<pos:position pos:line="83" pos:column="20"/></operator> <literal type="number" pos:line="83" pos:column="21">2<pos:position pos:line="83" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="84" pos:column="3">gss_release_buffer<pos:position pos:line="84" pos:column="21"/></name> <argument_list pos:line="84" pos:column="22">(<argument><expr><operator pos:line="84" pos:column="23">&amp;<pos:position pos:line="84" pos:column="28"/></operator><name pos:line="84" pos:column="24">min_stat<pos:position pos:line="84" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="34">&amp;<pos:position pos:line="84" pos:column="39"/></operator><name pos:line="84" pos:column="35">send_token<pos:position pos:line="84" pos:column="45"/></name></expr></argument>)<pos:position pos:line="84" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="85" pos:column="3">safe_strcat<pos:position pos:line="85" pos:column="14"/></name> <argument_list pos:line="85" pos:column="15">(<argument><expr><name pos:line="85" pos:column="16">buf1<pos:position pos:line="85" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="85" pos:column="22">sizeof <argument_list pos:line="85" pos:column="29">(<argument><expr><name pos:line="85" pos:column="30">buf1<pos:position pos:line="85" pos:column="34"/></name></expr></argument>)<pos:position pos:line="85" pos:column="35"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="37">"\r\n"<pos:position pos:line="85" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="86" pos:column="3">mutt_socket_write<pos:position pos:line="86" pos:column="20"/></name> <argument_list pos:line="86" pos:column="21">(<argument><expr><name><name pos:line="86" pos:column="22">idata<pos:position pos:line="86" pos:column="27"/></name><operator pos:line="86" pos:column="27">-&gt;<pos:position pos:line="86" pos:column="32"/></operator><name pos:line="86" pos:column="29">conn<pos:position pos:line="86" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="35">buf1<pos:position pos:line="86" pos:column="39"/></name></expr></argument>)<pos:position pos:line="86" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="41"/></expr_stmt>

  <while pos:line="88" pos:column="3">while <condition pos:line="88" pos:column="9">(<expr><name pos:line="88" pos:column="10">maj_stat<pos:position pos:line="88" pos:column="18"/></name> <operator pos:line="88" pos:column="19">==<pos:position pos:line="88" pos:column="21"/></operator> <name pos:line="88" pos:column="22">GSS_S_CONTINUE_NEEDED<pos:position pos:line="88" pos:column="43"/></name></expr>)<pos:position pos:line="88" pos:column="44"/></condition>
  <block pos:line="89" pos:column="3">{
    <comment type="block" pos:line="90" pos:column="5">/* Read server data */</comment>
    <do pos:line="91" pos:column="5">do
      <block type="pseudo"><expr_stmt><expr><name pos:line="92" pos:column="7">rc<pos:position pos:line="92" pos:column="9"/></name> <operator pos:line="92" pos:column="10">=<pos:position pos:line="92" pos:column="11"/></operator> <call><name pos:line="92" pos:column="12">imap_cmd_step<pos:position pos:line="92" pos:column="25"/></name> <argument_list pos:line="92" pos:column="26">(<argument><expr><name pos:line="92" pos:column="27">idata<pos:position pos:line="92" pos:column="32"/></name></expr></argument>)<pos:position pos:line="92" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="34"/></expr_stmt></block>
    while <condition pos:line="93" pos:column="11">(<expr><name pos:line="93" pos:column="12">rc<pos:position pos:line="93" pos:column="14"/></name> <operator pos:line="93" pos:column="15">==<pos:position pos:line="93" pos:column="17"/></operator> <name pos:line="93" pos:column="18">IMAP_CMD_CONTINUE<pos:position pos:line="93" pos:column="35"/></name></expr>)<pos:position pos:line="93" pos:column="36"/></condition>;<pos:position pos:line="93" pos:column="37"/></do>

    <if pos:line="95" pos:column="5">if <condition pos:line="95" pos:column="8">(<expr><name pos:line="95" pos:column="9">rc<pos:position pos:line="95" pos:column="11"/></name> <operator pos:line="95" pos:column="12">!=<pos:position pos:line="95" pos:column="14"/></operator> <name pos:line="95" pos:column="15">IMAP_CMD_RESPOND<pos:position pos:line="95" pos:column="31"/></name></expr>)<pos:position pos:line="95" pos:column="32"/></condition><then pos:line="95" pos:column="32">
    <block pos:line="96" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="97" pos:column="7">dprint<pos:position pos:line="97" pos:column="13"/></name> <argument_list pos:line="97" pos:column="14">(<argument><expr><literal type="number" pos:line="97" pos:column="15">1<pos:position pos:line="97" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="97" pos:column="18">(<pos:position pos:line="97" pos:column="19"/></operator><name pos:line="97" pos:column="19">debugfile<pos:position pos:line="97" pos:column="28"/></name><operator pos:line="97" pos:column="28">,<pos:position pos:line="97" pos:column="29"/></operator> <literal type="string" pos:line="97" pos:column="30">"Error receiving server response.\n"<pos:position pos:line="97" pos:column="66"/></literal><operator pos:line="97" pos:column="66">)<pos:position pos:line="97" pos:column="67"/></operator></expr></argument>)<pos:position pos:line="97" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="69"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="98" pos:column="7">gss_release_name<pos:position pos:line="98" pos:column="23"/></name> <argument_list pos:line="98" pos:column="24">(<argument><expr><operator pos:line="98" pos:column="25">&amp;<pos:position pos:line="98" pos:column="30"/></operator><name pos:line="98" pos:column="26">min_stat<pos:position pos:line="98" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="98" pos:column="36">&amp;<pos:position pos:line="98" pos:column="41"/></operator><name pos:line="98" pos:column="37">target_name<pos:position pos:line="98" pos:column="48"/></name></expr></argument>)<pos:position pos:line="98" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="50"/></expr_stmt>
      <goto pos:line="99" pos:column="7">goto <name pos:line="99" pos:column="12">bail<pos:position pos:line="99" pos:column="16"/></name>;<pos:position pos:line="99" pos:column="17"/></goto>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="102" pos:column="5">request_buf<pos:position pos:line="102" pos:column="16"/></name><operator pos:line="102" pos:column="16">.<pos:position pos:line="102" pos:column="17"/></operator><name pos:line="102" pos:column="17">length<pos:position pos:line="102" pos:column="23"/></name></name> <operator pos:line="102" pos:column="24">=<pos:position pos:line="102" pos:column="25"/></operator> <call><name pos:line="102" pos:column="26">mutt_from_base64<pos:position pos:line="102" pos:column="42"/></name> <argument_list pos:line="102" pos:column="43">(<argument><expr><name pos:line="102" pos:column="44">buf2<pos:position pos:line="102" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="50">idata<pos:position pos:line="102" pos:column="55"/></name><operator pos:line="102" pos:column="55">-&gt;<pos:position pos:line="102" pos:column="60"/></operator><name pos:line="102" pos:column="57">buf<pos:position pos:line="102" pos:column="60"/></name></name> <operator pos:line="102" pos:column="61">+<pos:position pos:line="102" pos:column="62"/></operator> <literal type="number" pos:line="102" pos:column="63">2<pos:position pos:line="102" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="103" pos:column="5">request_buf<pos:position pos:line="103" pos:column="16"/></name><operator pos:line="103" pos:column="16">.<pos:position pos:line="103" pos:column="17"/></operator><name pos:line="103" pos:column="17">value<pos:position pos:line="103" pos:column="22"/></name></name> <operator pos:line="103" pos:column="23">=<pos:position pos:line="103" pos:column="24"/></operator> <name pos:line="103" pos:column="25">buf2<pos:position pos:line="103" pos:column="29"/></name></expr>;<pos:position pos:line="103" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="104" pos:column="5">sec_token<pos:position pos:line="104" pos:column="14"/></name> <operator pos:line="104" pos:column="15">=<pos:position pos:line="104" pos:column="16"/></operator> <operator pos:line="104" pos:column="17">&amp;<pos:position pos:line="104" pos:column="22"/></operator><name pos:line="104" pos:column="18">request_buf<pos:position pos:line="104" pos:column="29"/></name></expr>;<pos:position pos:line="104" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="106" pos:column="5">/* Write client data */</comment>
    <expr_stmt><expr><name pos:line="107" pos:column="5">maj_stat<pos:position pos:line="107" pos:column="13"/></name> <operator pos:line="107" pos:column="14">=<pos:position pos:line="107" pos:column="15"/></operator> <call><name pos:line="107" pos:column="16">gss_init_sec_context<pos:position pos:line="107" pos:column="36"/></name> <argument_list pos:line="107" pos:column="37">(<argument><expr><operator pos:line="107" pos:column="38">&amp;<pos:position pos:line="107" pos:column="43"/></operator><name pos:line="107" pos:column="39">min_stat<pos:position pos:line="107" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="49">GSS_C_NO_CREDENTIAL<pos:position pos:line="107" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="107" pos:column="70">&amp;<pos:position pos:line="107" pos:column="75"/></operator><name pos:line="107" pos:column="71">context<pos:position pos:line="107" pos:column="78"/></name></expr></argument>,
      <argument><expr><name pos:line="108" pos:column="7">target_name<pos:position pos:line="108" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="20">GSS_C_NO_OID<pos:position pos:line="108" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="34">GSS_C_MUTUAL_FLAG<pos:position pos:line="108" pos:column="51"/></name> <operator pos:line="108" pos:column="52">|<pos:position pos:line="108" pos:column="53"/></operator> <name pos:line="108" pos:column="54">GSS_C_SEQUENCE_FLAG<pos:position pos:line="108" pos:column="73"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="108" pos:column="75">0<pos:position pos:line="108" pos:column="76"/></literal></expr></argument>, 
      <argument><expr><name pos:line="109" pos:column="7">GSS_C_NO_CHANNEL_BINDINGS<pos:position pos:line="109" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="34">sec_token<pos:position pos:line="109" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="45">NULL<pos:position pos:line="109" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="109" pos:column="51">&amp;<pos:position pos:line="109" pos:column="56"/></operator><name pos:line="109" pos:column="52">send_token<pos:position pos:line="109" pos:column="62"/></name></expr></argument>,
      <argument><expr><operator pos:line="110" pos:column="7">(<pos:position pos:line="110" pos:column="8"/></operator><name pos:line="110" pos:column="8">unsigned<pos:position pos:line="110" pos:column="16"/></name> <name pos:line="110" pos:column="17">int<pos:position pos:line="110" pos:column="20"/></name><operator pos:line="110" pos:column="20">*<pos:position pos:line="110" pos:column="21"/></operator><operator pos:line="110" pos:column="21">)<pos:position pos:line="110" pos:column="22"/></operator> <operator pos:line="110" pos:column="23">&amp;<pos:position pos:line="110" pos:column="28"/></operator><name pos:line="110" pos:column="24">cflags<pos:position pos:line="110" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="32">NULL<pos:position pos:line="110" pos:column="36"/></name></expr></argument>)<pos:position pos:line="110" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="38"/></expr_stmt>
    <if pos:line="111" pos:column="5">if <condition pos:line="111" pos:column="8">(<expr><name pos:line="111" pos:column="9">maj_stat<pos:position pos:line="111" pos:column="17"/></name> <operator pos:line="111" pos:column="18">!=<pos:position pos:line="111" pos:column="20"/></operator> <name pos:line="111" pos:column="21">GSS_S_COMPLETE<pos:position pos:line="111" pos:column="35"/></name> <operator pos:line="111" pos:column="36">&amp;&amp;<pos:position pos:line="111" pos:column="46"/></operator> <name pos:line="111" pos:column="39">maj_stat<pos:position pos:line="111" pos:column="47"/></name> <operator pos:line="111" pos:column="48">!=<pos:position pos:line="111" pos:column="50"/></operator> <name pos:line="111" pos:column="51">GSS_S_CONTINUE_NEEDED<pos:position pos:line="111" pos:column="72"/></name></expr>)<pos:position pos:line="111" pos:column="73"/></condition><then pos:line="111" pos:column="73">
    <block pos:line="112" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="113" pos:column="7">print_gss_error<pos:position pos:line="113" pos:column="22"/></name><argument_list pos:line="113" pos:column="22">(<argument><expr><name pos:line="113" pos:column="23">maj_stat<pos:position pos:line="113" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="33">min_stat<pos:position pos:line="113" pos:column="41"/></name></expr></argument>)<pos:position pos:line="113" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="114" pos:column="7">dprint<pos:position pos:line="114" pos:column="13"/></name> <argument_list pos:line="114" pos:column="14">(<argument><expr><literal type="number" pos:line="114" pos:column="15">1<pos:position pos:line="114" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="114" pos:column="18">(<pos:position pos:line="114" pos:column="19"/></operator><name pos:line="114" pos:column="19">debugfile<pos:position pos:line="114" pos:column="28"/></name><operator pos:line="114" pos:column="28">,<pos:position pos:line="114" pos:column="29"/></operator> <literal type="string" pos:line="114" pos:column="30">"Error exchanging credentials\n"<pos:position pos:line="114" pos:column="62"/></literal><operator pos:line="114" pos:column="62">)<pos:position pos:line="114" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="114" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="65"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="115" pos:column="7">gss_release_name<pos:position pos:line="115" pos:column="23"/></name> <argument_list pos:line="115" pos:column="24">(<argument><expr><operator pos:line="115" pos:column="25">&amp;<pos:position pos:line="115" pos:column="30"/></operator><name pos:line="115" pos:column="26">min_stat<pos:position pos:line="115" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="115" pos:column="36">&amp;<pos:position pos:line="115" pos:column="41"/></operator><name pos:line="115" pos:column="37">target_name<pos:position pos:line="115" pos:column="48"/></name></expr></argument>)<pos:position pos:line="115" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="50"/></expr_stmt>

      <goto pos:line="117" pos:column="7">goto <name pos:line="117" pos:column="12">err_abort_cmd<pos:position pos:line="117" pos:column="25"/></name>;<pos:position pos:line="117" pos:column="26"/></goto>
    }<pos:position pos:line="118" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="119" pos:column="5">mutt_to_base64<pos:position pos:line="119" pos:column="19"/></name> <argument_list pos:line="119" pos:column="20">(<argument><expr><operator pos:line="119" pos:column="21">(<pos:position pos:line="119" pos:column="22"/></operator><name pos:line="119" pos:column="22">unsigned<pos:position pos:line="119" pos:column="30"/></name> <name pos:line="119" pos:column="31">char<pos:position pos:line="119" pos:column="35"/></name><operator pos:line="119" pos:column="35">*<pos:position pos:line="119" pos:column="36"/></operator><operator pos:line="119" pos:column="36">)<pos:position pos:line="119" pos:column="37"/></operator> <name pos:line="119" pos:column="38">buf1<pos:position pos:line="119" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="119" pos:column="44">send_token<pos:position pos:line="119" pos:column="54"/></name><operator pos:line="119" pos:column="54">.<pos:position pos:line="119" pos:column="55"/></operator><name pos:line="119" pos:column="55">value<pos:position pos:line="119" pos:column="60"/></name></name></expr></argument>,
      <argument><expr><name><name pos:line="120" pos:column="7">send_token<pos:position pos:line="120" pos:column="17"/></name><operator pos:line="120" pos:column="17">.<pos:position pos:line="120" pos:column="18"/></operator><name pos:line="120" pos:column="18">length<pos:position pos:line="120" pos:column="24"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="120" pos:column="26">sizeof <argument_list pos:line="120" pos:column="33">(<argument><expr><name pos:line="120" pos:column="34">buf1<pos:position pos:line="120" pos:column="38"/></name></expr></argument>)<pos:position pos:line="120" pos:column="39"/></argument_list></sizeof> <operator pos:line="120" pos:column="40">-<pos:position pos:line="120" pos:column="41"/></operator> <literal type="number" pos:line="120" pos:column="42">2<pos:position pos:line="120" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="121" pos:column="5">gss_release_buffer<pos:position pos:line="121" pos:column="23"/></name> <argument_list pos:line="121" pos:column="24">(<argument><expr><operator pos:line="121" pos:column="25">&amp;<pos:position pos:line="121" pos:column="30"/></operator><name pos:line="121" pos:column="26">min_stat<pos:position pos:line="121" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="121" pos:column="36">&amp;<pos:position pos:line="121" pos:column="41"/></operator><name pos:line="121" pos:column="37">send_token<pos:position pos:line="121" pos:column="47"/></name></expr></argument>)<pos:position pos:line="121" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="122" pos:column="5">safe_strcat<pos:position pos:line="122" pos:column="16"/></name> <argument_list pos:line="122" pos:column="17">(<argument><expr><name pos:line="122" pos:column="18">buf1<pos:position pos:line="122" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="122" pos:column="24">sizeof <argument_list pos:line="122" pos:column="31">(<argument><expr><name pos:line="122" pos:column="32">buf1<pos:position pos:line="122" pos:column="36"/></name></expr></argument>)<pos:position pos:line="122" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="39">"\r\n"<pos:position pos:line="122" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="123" pos:column="5">mutt_socket_write<pos:position pos:line="123" pos:column="22"/></name> <argument_list pos:line="123" pos:column="23">(<argument><expr><name><name pos:line="123" pos:column="24">idata<pos:position pos:line="123" pos:column="29"/></name><operator pos:line="123" pos:column="29">-&gt;<pos:position pos:line="123" pos:column="34"/></operator><name pos:line="123" pos:column="31">conn<pos:position pos:line="123" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="37">buf1<pos:position pos:line="123" pos:column="41"/></name></expr></argument>)<pos:position pos:line="123" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="124" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="126" pos:column="3">gss_release_name<pos:position pos:line="126" pos:column="19"/></name> <argument_list pos:line="126" pos:column="20">(<argument><expr><operator pos:line="126" pos:column="21">&amp;<pos:position pos:line="126" pos:column="26"/></operator><name pos:line="126" pos:column="22">min_stat<pos:position pos:line="126" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="126" pos:column="32">&amp;<pos:position pos:line="126" pos:column="37"/></operator><name pos:line="126" pos:column="33">target_name<pos:position pos:line="126" pos:column="44"/></name></expr></argument>)<pos:position pos:line="126" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="46"/></expr_stmt></block></function>

  <comment type="block" pos:line="128" pos:column="3">/* get security flags and</comment></unit>

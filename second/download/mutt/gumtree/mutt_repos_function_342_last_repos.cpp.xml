<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_342_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_keycode<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">s<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">endChar<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">long<pos:position pos:line="4" pos:column="7"/></name> <name pos:line="4" pos:column="8">int<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><call><name pos:line="4" pos:column="21">strtol<pos:position pos:line="4" pos:column="27"/></name><argument_list pos:line="4" pos:column="27">(<argument><expr><name pos:line="4" pos:column="28">s<pos:position pos:line="4" pos:column="29"/></name><operator pos:line="4" pos:column="29">+<pos:position pos:line="4" pos:column="30"/></operator><literal type="number" pos:line="4" pos:column="30">1<pos:position pos:line="4" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="4" pos:column="33">&amp;<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="34">endChar<pos:position pos:line="4" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="43">8<pos:position pos:line="4" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
  <comment type="block" pos:line="5" pos:column="3">/* allow trailing whitespace, eg.  &lt; 1001 &gt; */</comment>
  <while pos:line="6" pos:column="3">while <condition pos:line="6" pos:column="9">(<expr><call><name pos:line="6" pos:column="10">ISSPACE<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><operator pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="19">endChar<pos:position pos:line="6" pos:column="26"/></name></expr></argument>)<pos:position pos:line="6" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="28"/></condition>
    <block type="pseudo"><expr_stmt><expr><operator pos:line="7" pos:column="5">++<pos:position pos:line="7" pos:column="7"/></operator><name pos:line="7" pos:column="7">endChar<pos:position pos:line="7" pos:column="14"/></name></expr>;<pos:position pos:line="7" pos:column="15"/></expr_stmt></block></while>
  <comment type="block" pos:line="8" pos:column="3">/* negative keycodes don't make sense, also detect overflow */</comment>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">*<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">endChar<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">!=<pos:position pos:line="9" pos:column="18"/></operator> <literal type="char" pos:line="9" pos:column="19">'&gt;'<pos:position pos:line="9" pos:column="25"/></literal> <operator pos:line="9" pos:column="23">||<pos:position pos:line="9" pos:column="25"/></operator> <name pos:line="9" pos:column="26">result<pos:position pos:line="9" pos:column="32"/></name> <operator pos:line="9" pos:column="33">&lt;<pos:position pos:line="9" pos:column="37"/></operator> <literal type="number" pos:line="9" pos:column="35">0<pos:position pos:line="9" pos:column="36"/></literal> <operator pos:line="9" pos:column="37">||<pos:position pos:line="9" pos:column="39"/></operator> <name pos:line="9" pos:column="40">result<pos:position pos:line="9" pos:column="46"/></name> <operator pos:line="9" pos:column="47">==<pos:position pos:line="9" pos:column="49"/></operator> <name pos:line="9" pos:column="50">LONG_MAX<pos:position pos:line="9" pos:column="58"/></name></expr>)<pos:position pos:line="9" pos:column="59"/></condition><then pos:line="9" pos:column="59"> <block pos:line="9" pos:column="60">{
    <return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">-<pos:position pos:line="10" pos:column="13"/></operator><literal type="number" pos:line="10" pos:column="13">1<pos:position pos:line="10" pos:column="14"/></literal></expr>;<pos:position pos:line="10" pos:column="15"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <return pos:line="13" pos:column="3">return <expr><name pos:line="13" pos:column="10">result<pos:position pos:line="13" pos:column="16"/></name></expr>;<pos:position pos:line="13" pos:column="17"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

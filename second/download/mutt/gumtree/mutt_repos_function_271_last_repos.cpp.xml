<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_271_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">sighandler<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">int<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">sig<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">save_errno<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><name pos:line="3" pos:column="20">errno<pos:position pos:line="3" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>

  <switch pos:line="5" pos:column="3">switch <condition pos:line="5" pos:column="10">(<expr><name pos:line="5" pos:column="11">sig<pos:position pos:line="5" pos:column="14"/></name></expr>)<pos:position pos:line="5" pos:column="15"/></condition>
  <block pos:line="6" pos:column="3">{
    <case pos:line="7" pos:column="5">case <expr><name pos:line="7" pos:column="10">SIGTSTP<pos:position pos:line="7" pos:column="17"/></name></expr>:<pos:position pos:line="7" pos:column="18"/></case> <comment type="block" pos:line="7" pos:column="19">/* user requested a suspend */</comment>
      <if pos:line="8" pos:column="7">if <condition pos:line="8" pos:column="10">(<expr><operator pos:line="8" pos:column="11">!<pos:position pos:line="8" pos:column="12"/></operator><call><name pos:line="8" pos:column="12">option<pos:position pos:line="8" pos:column="18"/></name> <argument_list pos:line="8" pos:column="19">(<argument><expr><name pos:line="8" pos:column="20">OPTSUSPEND<pos:position pos:line="8" pos:column="30"/></name></expr></argument>)<pos:position pos:line="8" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="32"/></condition><then pos:line="8" pos:column="32">
        <block type="pseudo"><break pos:line="9" pos:column="9">break;<pos:position pos:line="9" pos:column="15"/></break></block></then></if>
      <expr_stmt><expr><name pos:line="10" pos:column="7">IsEndwin<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <call><name pos:line="10" pos:column="18">isendwin<pos:position pos:line="10" pos:column="26"/></name> <argument_list pos:line="10" pos:column="27">()<pos:position pos:line="10" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="11" pos:column="7">curs_set<pos:position pos:line="11" pos:column="15"/></name> <argument_list pos:line="11" pos:column="16">(<argument><expr><literal type="number" pos:line="11" pos:column="17">1<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="20"/></expr_stmt>
      <if pos:line="12" pos:column="7">if <condition pos:line="12" pos:column="10">(<expr><operator pos:line="12" pos:column="11">!<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="12">IsEndwin<pos:position pos:line="12" pos:column="20"/></name></expr>)<pos:position pos:line="12" pos:column="21"/></condition><then pos:line="12" pos:column="21">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="9">endwin<pos:position pos:line="13" pos:column="15"/></name> <argument_list pos:line="13" pos:column="16">()<pos:position pos:line="13" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">kill<pos:position pos:line="14" pos:column="11"/></name> <argument_list pos:line="14" pos:column="12">(<argument><expr><literal type="number" pos:line="14" pos:column="13">0<pos:position pos:line="14" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="16">SIGSTOP<pos:position pos:line="14" pos:column="23"/></name></expr></argument>)<pos:position pos:line="14" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="25"/></expr_stmt>

    <case pos:line="16" pos:column="5">case <expr><name pos:line="16" pos:column="10">SIGCONT<pos:position pos:line="16" pos:column="17"/></name></expr>:<pos:position pos:line="16" pos:column="18"/></case>
      <if pos:line="17" pos:column="7">if <condition pos:line="17" pos:column="10">(<expr><operator pos:line="17" pos:column="11">!<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="12">IsEndwin<pos:position pos:line="17" pos:column="20"/></name></expr>)<pos:position pos:line="17" pos:column="21"/></condition><then pos:line="17" pos:column="21">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="9">refresh<pos:position pos:line="18" pos:column="16"/></name> <argument_list pos:line="18" pos:column="17">()<pos:position pos:line="18" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="20"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">mutt_curs_set<pos:position pos:line="19" pos:column="20"/></name> <argument_list pos:line="19" pos:column="21">(<argument><expr><operator pos:line="19" pos:column="22">-<pos:position pos:line="19" pos:column="23"/></operator><literal type="number" pos:line="19" pos:column="23">1<pos:position pos:line="19" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="26"/></expr_stmt>
<cpp:if pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">if<pos:position pos:line="20" pos:column="4"/></cpp:directive> <expr><call><name pos:line="20" pos:column="5">defined<pos:position pos:line="20" pos:column="12"/></name> <argument_list pos:line="20" pos:column="13">(<argument><expr><name pos:line="20" pos:column="14">USE_SLANG_CURSES<pos:position pos:line="20" pos:column="30"/></name></expr></argument>)<pos:position pos:line="20" pos:column="31"/></argument_list></call> <operator pos:line="20" pos:column="32">||<pos:position pos:line="20" pos:column="34"/></operator> <call><name pos:line="20" pos:column="35">defined<pos:position pos:line="20" pos:column="42"/></name> <argument_list pos:line="20" pos:column="43">(<argument><expr><name pos:line="20" pos:column="44">HAVE_RESIZETERM<pos:position pos:line="20" pos:column="59"/></name></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr></cpp:if>
      <comment type="block" pos:line="21" pos:column="7">/* We don't receive SIGWINCH when suspended; however, no harm is done by
       * just assuming we received one, and triggering the 'resize' anyway. */</comment>
      <expr_stmt><expr><name pos:line="23" pos:column="7">SigWinch<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <literal type="number" pos:line="23" pos:column="18">1<pos:position pos:line="23" pos:column="19"/></literal></expr>;<pos:position pos:line="23" pos:column="20"/></expr_stmt>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>
      <break pos:line="25" pos:column="7">break;<pos:position pos:line="25" pos:column="13"/></break>

<cpp:if pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">if<pos:position pos:line="27" pos:column="4"/></cpp:directive> <expr><call><name pos:line="27" pos:column="5">defined<pos:position pos:line="27" pos:column="12"/></name> <argument_list pos:line="27" pos:column="13">(<argument><expr><name pos:line="27" pos:column="14">USE_SLANG_CURSES<pos:position pos:line="27" pos:column="30"/></name></expr></argument>)<pos:position pos:line="27" pos:column="31"/></argument_list></call> <operator pos:line="27" pos:column="32">||<pos:position pos:line="27" pos:column="34"/></operator> <call><name pos:line="27" pos:column="35">defined<pos:position pos:line="27" pos:column="42"/></name> <argument_list pos:line="27" pos:column="43">(<argument><expr><name pos:line="27" pos:column="44">HAVE_RESIZETERM<pos:position pos:line="27" pos:column="59"/></name></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></call></expr></cpp:if>
    <case pos:line="28" pos:column="5">case <expr><name pos:line="28" pos:column="10">SIGWINCH<pos:position pos:line="28" pos:column="18"/></name></expr>:<pos:position pos:line="28" pos:column="19"/></case>
      <expr_stmt><expr><name pos:line="29" pos:column="7">SigWinch<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <literal type="number" pos:line="29" pos:column="18">1<pos:position pos:line="29" pos:column="19"/></literal></expr>;<pos:position pos:line="29" pos:column="20"/></expr_stmt>
      <break pos:line="30" pos:column="7">break;<pos:position pos:line="30" pos:column="13"/></break>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif>

    <case pos:line="33" pos:column="5">case <expr><name pos:line="33" pos:column="10">SIGINT<pos:position pos:line="33" pos:column="16"/></name></expr>:<pos:position pos:line="33" pos:column="17"/></case>
      <expr_stmt><expr><name pos:line="34" pos:column="7">SigInt<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">=<pos:position pos:line="34" pos:column="15"/></operator> <literal type="number" pos:line="34" pos:column="16">1<pos:position pos:line="34" pos:column="17"/></literal></expr>;<pos:position pos:line="34" pos:column="18"/></expr_stmt>
      <break pos:line="35" pos:column="7">break;<pos:position pos:line="35" pos:column="13"/></break>

  }<pos:position pos:line="37" pos:column="4"/></block></switch>
  <expr_stmt><expr><name pos:line="38" pos:column="3">errno<pos:position pos:line="38" pos:column="8"/></name> <operator pos:line="38" pos:column="9">=<pos:position pos:line="38" pos:column="10"/></operator> <name pos:line="38" pos:column="11">save_errno<pos:position pos:line="38" pos:column="21"/></name></expr>;<pos:position pos:line="38" pos:column="22"/></expr_stmt>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

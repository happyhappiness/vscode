<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_315_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pgp_check_decryption_okay<pos:position pos:line="1" pos:column="37"/></name> <parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">FILE<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">fpin<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">rv<pos:position pos:line="3" pos:column="9"/></name> <init pos:line="3" pos:column="10">= <expr><operator pos:line="3" pos:column="12">-<pos:position pos:line="3" pos:column="13"/></operator><literal type="number" pos:line="3" pos:column="13">1<pos:position pos:line="3" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name><name pos:line="5" pos:column="7">PgpDecryptionOkay<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">.<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="25">pattern<pos:position pos:line="5" pos:column="32"/></name></name></expr>)<pos:position pos:line="5" pos:column="33"/></condition><then pos:line="5" pos:column="33">
  <block pos:line="6" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">line<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><name pos:line="7" pos:column="18">NULL<pos:position pos:line="7" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">lineno<pos:position pos:line="8" pos:column="15"/></name> <init pos:line="8" pos:column="16">= <expr><literal type="number" pos:line="8" pos:column="18">0<pos:position pos:line="8" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">size_t<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">linelen<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>

    <while pos:line="11" pos:column="5">while <condition pos:line="11" pos:column="11">(<expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">line<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <call><name pos:line="11" pos:column="20">mutt_read_line<pos:position pos:line="11" pos:column="34"/></name> <argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">line<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="42">&amp;<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="43">linelen<pos:position pos:line="11" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="52">fpin<pos:position pos:line="11" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="58">&amp;<pos:position pos:line="11" pos:column="63"/></operator><name pos:line="11" pos:column="59">lineno<pos:position pos:line="11" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="67">0<pos:position pos:line="11" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="69"/></argument_list></call><operator pos:line="11" pos:column="69">)<pos:position pos:line="11" pos:column="70"/></operator> <operator pos:line="11" pos:column="71">!=<pos:position pos:line="11" pos:column="73"/></operator> <name pos:line="11" pos:column="74">NULL<pos:position pos:line="11" pos:column="78"/></name></expr>)<pos:position pos:line="11" pos:column="79"/></condition>
    <block pos:line="12" pos:column="5">{
      <if pos:line="13" pos:column="7">if <condition pos:line="13" pos:column="10">(<expr><call><name pos:line="13" pos:column="11">regexec<pos:position pos:line="13" pos:column="18"/></name> <argument_list pos:line="13" pos:column="19">(<argument><expr><name><name pos:line="13" pos:column="20">PgpDecryptionOkay<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">.<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="38">rx<pos:position pos:line="13" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="42">line<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="48">0<pos:position pos:line="13" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">NULL<pos:position pos:line="13" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="57">0<pos:position pos:line="13" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call> <operator pos:line="13" pos:column="60">==<pos:position pos:line="13" pos:column="62"/></operator> <literal type="number" pos:line="13" pos:column="63">0<pos:position pos:line="13" pos:column="64"/></literal></expr>)<pos:position pos:line="13" pos:column="65"/></condition><then pos:line="13" pos:column="65">
      <block pos:line="14" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">dprint<pos:position pos:line="15" pos:column="15"/></name> <argument_list pos:line="15" pos:column="16">(<argument><expr><literal type="number" pos:line="15" pos:column="17">2<pos:position pos:line="15" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="20">(<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="21">debugfile<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">,<pos:position pos:line="15" pos:column="31"/></operator> <literal type="string" pos:line="15" pos:column="32">"pgp_check_decryption_okay: \"%s\" matches regexp.\n"<pos:position pos:line="15" pos:column="85"/></literal><operator pos:line="15" pos:column="85">,<pos:position pos:line="15" pos:column="86"/></operator>
                    <name pos:line="16" pos:column="21">line<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">)<pos:position pos:line="16" pos:column="26"/></operator></expr></argument>)<pos:position pos:line="16" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">rv<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <literal type="number" pos:line="17" pos:column="14">0<pos:position pos:line="17" pos:column="15"/></literal></expr>;<pos:position pos:line="17" pos:column="16"/></expr_stmt>
        <break pos:line="18" pos:column="9">break;<pos:position pos:line="18" pos:column="15"/></break>
      }<pos:position pos:line="19" pos:column="8"/></block></then>
      <else pos:line="20" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="9">dprint<pos:position pos:line="21" pos:column="15"/></name> <argument_list pos:line="21" pos:column="16">(<argument><expr><literal type="number" pos:line="21" pos:column="17">2<pos:position pos:line="21" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="20">(<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="21">debugfile<pos:position pos:line="21" pos:column="30"/></name><operator pos:line="21" pos:column="30">,<pos:position pos:line="21" pos:column="31"/></operator> <literal type="string" pos:line="21" pos:column="32">"pgp_check_decryption_okay: \"%s\" doesn't match regexp.\n"<pos:position pos:line="21" pos:column="91"/></literal><operator pos:line="21" pos:column="91">,<pos:position pos:line="21" pos:column="92"/></operator>
                    <name pos:line="22" pos:column="21">line<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">)<pos:position pos:line="22" pos:column="26"/></operator></expr></argument>)<pos:position pos:line="22" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt></block></else></if>
    }<pos:position pos:line="23" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">FREE<pos:position pos:line="24" pos:column="9"/></name> <argument_list pos:line="24" pos:column="10">(<argument><expr><operator pos:line="24" pos:column="11">&amp;<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="12">line<pos:position pos:line="24" pos:column="16"/></name></expr></argument>)<pos:position pos:line="24" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></then>
  <else pos:line="26" pos:column="3">else
  <block pos:line="27" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">dprint<pos:position pos:line="28" pos:column="11"/></name> <argument_list pos:line="28" pos:column="12">(<argument><expr><literal type="number" pos:line="28" pos:column="13">2<pos:position pos:line="28" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="28" pos:column="16">(<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">debugfile<pos:position pos:line="28" pos:column="26"/></name><operator pos:line="28" pos:column="26">,<pos:position pos:line="28" pos:column="27"/></operator> <literal type="string" pos:line="28" pos:column="28">"pgp_check_decryption_okay: No pattern.\n"<pos:position pos:line="28" pos:column="70"/></literal><operator pos:line="28" pos:column="70">)<pos:position pos:line="28" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="28" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">rv<pos:position pos:line="29" pos:column="7"/></name> <operator pos:line="29" pos:column="8">=<pos:position pos:line="29" pos:column="9"/></operator> <literal type="number" pos:line="29" pos:column="10">1<pos:position pos:line="29" pos:column="11"/></literal></expr>;<pos:position pos:line="29" pos:column="12"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></else></if>

  <return pos:line="32" pos:column="3">return <expr><name pos:line="32" pos:column="10">rv<pos:position pos:line="32" pos:column="12"/></name></expr>;<pos:position pos:line="32" pos:column="13"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

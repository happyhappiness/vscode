<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1421_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">LIST<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">mutt_find_list<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">LIST<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">l<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">data<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">LIST<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">p<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><name pos:line="3" pos:column="13">l<pos:position pos:line="3" pos:column="14"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

  <while pos:line="5" pos:column="3">while <condition pos:line="5" pos:column="9">(<expr><name pos:line="5" pos:column="10">p<pos:position pos:line="5" pos:column="11"/></name></expr>)<pos:position pos:line="5" pos:column="12"/></condition>
  <block pos:line="6" pos:column="3">{
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">data<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">==<pos:position pos:line="7" pos:column="16"/></operator> <name><name pos:line="7" pos:column="17">p<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">data<pos:position pos:line="7" pos:column="24"/></name></name></expr>)<pos:position pos:line="7" pos:column="25"/></condition><then pos:line="7" pos:column="25">
      <block type="pseudo"><return pos:line="8" pos:column="7">return <expr><name pos:line="8" pos:column="14">p<pos:position pos:line="8" pos:column="15"/></name></expr>;<pos:position pos:line="8" pos:column="16"/></return></block></then></if>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">data<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">&amp;&amp;<pos:position pos:line="9" pos:column="24"/></operator> <name><name pos:line="9" pos:column="17">p<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">data<pos:position pos:line="9" pos:column="24"/></name></name> <operator pos:line="9" pos:column="25">&amp;&amp;<pos:position pos:line="9" pos:column="35"/></operator> <call><name pos:line="9" pos:column="28">mutt_strcmp<pos:position pos:line="9" pos:column="39"/></name> <argument_list pos:line="9" pos:column="40">(<argument><expr><name><name pos:line="9" pos:column="41">p<pos:position pos:line="9" pos:column="42"/></name><operator pos:line="9" pos:column="42">-&gt;<pos:position pos:line="9" pos:column="47"/></operator><name pos:line="9" pos:column="44">data<pos:position pos:line="9" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="50">data<pos:position pos:line="9" pos:column="54"/></name></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call> <operator pos:line="9" pos:column="56">==<pos:position pos:line="9" pos:column="58"/></operator> <literal type="number" pos:line="9" pos:column="59">0<pos:position pos:line="9" pos:column="60"/></literal></expr>)<pos:position pos:line="9" pos:column="61"/></condition><then pos:line="9" pos:column="61">
      <block type="pseudo"><return pos:line="10" pos:column="7">return <expr><name pos:line="10" pos:column="14">p<pos:position pos:line="10" pos:column="15"/></name></expr>;<pos:position pos:line="10" pos:column="16"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="11" pos:column="5">p<pos:position pos:line="11" pos:column="6"/></name> <operator pos:line="11" pos:column="7">=<pos:position pos:line="11" pos:column="8"/></operator> <name><name pos:line="11" pos:column="9">p<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">next<pos:position pos:line="11" pos:column="16"/></name></name></expr>;<pos:position pos:line="11" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="12" pos:column="4"/></block></while>
  <return pos:line="13" pos:column="3">return <expr><name pos:line="13" pos:column="10">NULL<pos:position pos:line="13" pos:column="14"/></name></expr>;<pos:position pos:line="13" pos:column="15"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1785_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">mutt_set_default<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">option_t<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">p<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <switch pos:line="3" pos:column="3">switch <condition pos:line="3" pos:column="10">(<expr><name><name pos:line="3" pos:column="11">p<pos:position pos:line="3" pos:column="12"/></name><operator pos:line="3" pos:column="12">-&gt;<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="14">type<pos:position pos:line="3" pos:column="18"/></name></name> <operator pos:line="3" pos:column="19">&amp;<pos:position pos:line="3" pos:column="24"/></operator> <name pos:line="3" pos:column="21">DT_MASK<pos:position pos:line="3" pos:column="28"/></name></expr>)<pos:position pos:line="3" pos:column="29"/></condition>
  <block pos:line="4" pos:column="3">{
    <case pos:line="5" pos:column="5">case <expr><name pos:line="5" pos:column="10">DT_STR<pos:position pos:line="5" pos:column="16"/></name></expr>:<pos:position pos:line="5" pos:column="17"/></case>
      <if pos:line="6" pos:column="7">if <condition pos:line="6" pos:column="10">(<expr><operator pos:line="6" pos:column="11">!<pos:position pos:line="6" pos:column="12"/></operator><name><name pos:line="6" pos:column="12">p<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">-&gt;<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="15">init<pos:position pos:line="6" pos:column="19"/></name></name> <operator pos:line="6" pos:column="20">&amp;&amp;<pos:position pos:line="6" pos:column="30"/></operator> <operator pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></operator><operator pos:line="6" pos:column="24">(<pos:position pos:line="6" pos:column="25"/></operator><operator pos:line="6" pos:column="25">(<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">char<pos:position pos:line="6" pos:column="30"/></name> <operator pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></operator><operator pos:line="6" pos:column="32">*<pos:position pos:line="6" pos:column="33"/></operator><operator pos:line="6" pos:column="33">)<pos:position pos:line="6" pos:column="34"/></operator> <name><name pos:line="6" pos:column="35">p<pos:position pos:line="6" pos:column="36"/></name><operator pos:line="6" pos:column="36">-&gt;<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="38">data<pos:position pos:line="6" pos:column="42"/></name></name><operator pos:line="6" pos:column="42">)<pos:position pos:line="6" pos:column="43"/></operator></expr>)<pos:position pos:line="6" pos:column="44"/></condition><then pos:line="6" pos:column="44">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="7" pos:column="9">p<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">init<pos:position pos:line="7" pos:column="16"/></name></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <operator pos:line="7" pos:column="19">(<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="20">unsigned<pos:position pos:line="7" pos:column="28"/></name> <name pos:line="7" pos:column="29">long<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">)<pos:position pos:line="7" pos:column="34"/></operator> <call><name pos:line="7" pos:column="35">safe_strdup<pos:position pos:line="7" pos:column="46"/></name> <argument_list pos:line="7" pos:column="47">(<argument><expr><operator pos:line="7" pos:column="48">*<pos:position pos:line="7" pos:column="49"/></operator> <operator pos:line="7" pos:column="50">(<pos:position pos:line="7" pos:column="51"/></operator><operator pos:line="7" pos:column="51">(<pos:position pos:line="7" pos:column="52"/></operator><name pos:line="7" pos:column="52">char<pos:position pos:line="7" pos:column="56"/></name> <operator pos:line="7" pos:column="57">*<pos:position pos:line="7" pos:column="58"/></operator><operator pos:line="7" pos:column="58">*<pos:position pos:line="7" pos:column="59"/></operator><operator pos:line="7" pos:column="59">)<pos:position pos:line="7" pos:column="60"/></operator> <name><name pos:line="7" pos:column="61">p<pos:position pos:line="7" pos:column="62"/></name><operator pos:line="7" pos:column="62">-&gt;<pos:position pos:line="7" pos:column="67"/></operator><name pos:line="7" pos:column="64">data<pos:position pos:line="7" pos:column="68"/></name></name><operator pos:line="7" pos:column="68">)<pos:position pos:line="7" pos:column="69"/></operator></expr></argument>)<pos:position pos:line="7" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="71"/></expr_stmt></block></then></if>
      <break pos:line="8" pos:column="7">break;<pos:position pos:line="8" pos:column="13"/></break>
    <case pos:line="9" pos:column="5">case <expr><name pos:line="9" pos:column="10">DT_PATH<pos:position pos:line="9" pos:column="17"/></name></expr>:<pos:position pos:line="9" pos:column="18"/></case>
      <if pos:line="10" pos:column="7">if <condition pos:line="10" pos:column="10">(<expr><operator pos:line="10" pos:column="11">!<pos:position pos:line="10" pos:column="12"/></operator><name><name pos:line="10" pos:column="12">p<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">init<pos:position pos:line="10" pos:column="19"/></name></name> <operator pos:line="10" pos:column="20">&amp;&amp;<pos:position pos:line="10" pos:column="30"/></operator> <operator pos:line="10" pos:column="23">*<pos:position pos:line="10" pos:column="24"/></operator><operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><operator pos:line="10" pos:column="25">(<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">char<pos:position pos:line="10" pos:column="30"/></name> <operator pos:line="10" pos:column="31">*<pos:position pos:line="10" pos:column="32"/></operator><operator pos:line="10" pos:column="32">*<pos:position pos:line="10" pos:column="33"/></operator><operator pos:line="10" pos:column="33">)<pos:position pos:line="10" pos:column="34"/></operator> <name><name pos:line="10" pos:column="35">p<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">-&gt;<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="38">data<pos:position pos:line="10" pos:column="42"/></name></name><operator pos:line="10" pos:column="42">)<pos:position pos:line="10" pos:column="43"/></operator></expr>)<pos:position pos:line="10" pos:column="44"/></condition><then pos:line="10" pos:column="44">
      <block pos:line="11" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">cp<pos:position pos:line="12" pos:column="17"/></name> <init pos:line="12" pos:column="18">= <expr><call><name pos:line="12" pos:column="20">safe_strdup<pos:position pos:line="12" pos:column="31"/></name> <argument_list pos:line="12" pos:column="32">(<argument><expr><operator pos:line="12" pos:column="33">*<pos:position pos:line="12" pos:column="34"/></operator><operator pos:line="12" pos:column="34">(<pos:position pos:line="12" pos:column="35"/></operator><operator pos:line="12" pos:column="35">(<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="36">char<pos:position pos:line="12" pos:column="40"/></name> <operator pos:line="12" pos:column="41">*<pos:position pos:line="12" pos:column="42"/></operator><operator pos:line="12" pos:column="42">*<pos:position pos:line="12" pos:column="43"/></operator><operator pos:line="12" pos:column="43">)<pos:position pos:line="12" pos:column="44"/></operator> <name><name pos:line="12" pos:column="45">p<pos:position pos:line="12" pos:column="46"/></name><operator pos:line="12" pos:column="46">-&gt;<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="48">data<pos:position pos:line="12" pos:column="52"/></name></name><operator pos:line="12" pos:column="52">)<pos:position pos:line="12" pos:column="53"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="55"/></decl_stmt>
	<comment type="block" pos:line="13" pos:column="9">/* mutt_pretty_mailbox (cp); */</comment>
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">p<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">init<pos:position pos:line="14" pos:column="16"/></name></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <operator pos:line="14" pos:column="19">(<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="20">unsigned<pos:position pos:line="14" pos:column="28"/></name> <name pos:line="14" pos:column="29">long<pos:position pos:line="14" pos:column="33"/></name><operator pos:line="14" pos:column="33">)<pos:position pos:line="14" pos:column="34"/></operator> <name pos:line="14" pos:column="35">cp<pos:position pos:line="14" pos:column="37"/></name></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
      }<pos:position pos:line="15" pos:column="8"/></block></then></if>
      <break pos:line="16" pos:column="7">break;<pos:position pos:line="16" pos:column="13"/></break>
    <case pos:line="17" pos:column="5">case <expr><name pos:line="17" pos:column="10">DT_ADDR<pos:position pos:line="17" pos:column="17"/></name></expr>:<pos:position pos:line="17" pos:column="18"/></case>
      <if pos:line="18" pos:column="7">if <condition pos:line="18" pos:column="10">(<expr><operator pos:line="18" pos:column="11">!<pos:position pos:line="18" pos:column="12"/></operator><name><name pos:line="18" pos:column="12">p<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">init<pos:position pos:line="18" pos:column="19"/></name></name> <operator pos:line="18" pos:column="20">&amp;&amp;<pos:position pos:line="18" pos:column="30"/></operator> <operator pos:line="18" pos:column="23">*<pos:position pos:line="18" pos:column="24"/></operator><operator pos:line="18" pos:column="24">(<pos:position pos:line="18" pos:column="25"/></operator><operator pos:line="18" pos:column="25">(<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">ADDRESS<pos:position pos:line="18" pos:column="33"/></name> <operator pos:line="18" pos:column="34">*<pos:position pos:line="18" pos:column="35"/></operator><operator pos:line="18" pos:column="35">*<pos:position pos:line="18" pos:column="36"/></operator><operator pos:line="18" pos:column="36">)<pos:position pos:line="18" pos:column="37"/></operator> <name><name pos:line="18" pos:column="38">p<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">-&gt;<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="41">data<pos:position pos:line="18" pos:column="45"/></name></name><operator pos:line="18" pos:column="45">)<pos:position pos:line="18" pos:column="46"/></operator></expr>)<pos:position pos:line="18" pos:column="47"/></condition><then pos:line="18" pos:column="47">
      <block pos:line="19" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="20" pos:column="9">char<pos:position pos:line="20" pos:column="13"/></name></type> <name><name pos:line="20" pos:column="14">tmp<pos:position pos:line="20" pos:column="17"/></name><index pos:line="20" pos:column="17">[<expr><name pos:line="20" pos:column="18">HUGE_STRING<pos:position pos:line="20" pos:column="29"/></name></expr>]<pos:position pos:line="20" pos:column="30"/></index></name></decl>;<pos:position pos:line="20" pos:column="31"/></decl_stmt>
	<expr_stmt><expr><operator pos:line="21" pos:column="9">*<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">tmp<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <literal type="char" pos:line="21" pos:column="16">'\0'<pos:position pos:line="21" pos:column="20"/></literal></expr>;<pos:position pos:line="21" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">rfc822_write_address<pos:position pos:line="22" pos:column="29"/></name> <argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">tmp<pos:position pos:line="22" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="36">sizeof <argument_list pos:line="22" pos:column="43">(<argument><expr><name pos:line="22" pos:column="44">tmp<pos:position pos:line="22" pos:column="47"/></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="22" pos:column="50">*<pos:position pos:line="22" pos:column="51"/></operator><operator pos:line="22" pos:column="51">(<pos:position pos:line="22" pos:column="52"/></operator><operator pos:line="22" pos:column="52">(<pos:position pos:line="22" pos:column="53"/></operator><name pos:line="22" pos:column="53">ADDRESS<pos:position pos:line="22" pos:column="60"/></name> <operator pos:line="22" pos:column="61">*<pos:position pos:line="22" pos:column="62"/></operator><operator pos:line="22" pos:column="62">*<pos:position pos:line="22" pos:column="63"/></operator><operator pos:line="22" pos:column="63">)<pos:position pos:line="22" pos:column="64"/></operator> <name><name pos:line="22" pos:column="65">p<pos:position pos:line="22" pos:column="66"/></name><operator pos:line="22" pos:column="66">-&gt;<pos:position pos:line="22" pos:column="71"/></operator><name pos:line="22" pos:column="68">data<pos:position pos:line="22" pos:column="72"/></name></name><operator pos:line="22" pos:column="72">)<pos:position pos:line="22" pos:column="73"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="75">0<pos:position pos:line="22" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="78"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="23" pos:column="9">p<pos:position pos:line="23" pos:column="10"/></name><operator pos:line="23" pos:column="10">-&gt;<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="12">init<pos:position pos:line="23" pos:column="16"/></name></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <operator pos:line="23" pos:column="19">(<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="20">unsigned<pos:position pos:line="23" pos:column="28"/></name> <name pos:line="23" pos:column="29">long<pos:position pos:line="23" pos:column="33"/></name><operator pos:line="23" pos:column="33">)<pos:position pos:line="23" pos:column="34"/></operator> <call><name pos:line="23" pos:column="35">safe_strdup<pos:position pos:line="23" pos:column="46"/></name> <argument_list pos:line="23" pos:column="47">(<argument><expr><name pos:line="23" pos:column="48">tmp<pos:position pos:line="23" pos:column="51"/></name></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="53"/></expr_stmt>
      }<pos:position pos:line="24" pos:column="8"/></block></then></if>
      <break pos:line="25" pos:column="7">break;<pos:position pos:line="25" pos:column="13"/></break>
    <case pos:line="26" pos:column="5">case <expr><name pos:line="26" pos:column="10">DT_RX<pos:position pos:line="26" pos:column="15"/></name></expr>:<pos:position pos:line="26" pos:column="16"/></case>
    <block pos:line="27" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="28" pos:column="7">REGEXP<pos:position pos:line="28" pos:column="13"/></name> <modifier pos:line="28" pos:column="14">*<pos:position pos:line="28" pos:column="15"/></modifier></type><name pos:line="28" pos:column="15">pp<pos:position pos:line="28" pos:column="17"/></name> <init pos:line="28" pos:column="18">= <expr><operator pos:line="28" pos:column="20">(<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="21">REGEXP<pos:position pos:line="28" pos:column="27"/></name> <operator pos:line="28" pos:column="28">*<pos:position pos:line="28" pos:column="29"/></operator><operator pos:line="28" pos:column="29">)<pos:position pos:line="28" pos:column="30"/></operator> <name><name pos:line="28" pos:column="31">p<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">-&gt;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="34">data<pos:position pos:line="28" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="28" pos:column="39"/></decl_stmt>
      <if pos:line="29" pos:column="7">if <condition pos:line="29" pos:column="10">(<expr><operator pos:line="29" pos:column="11">!<pos:position pos:line="29" pos:column="12"/></operator><name><name pos:line="29" pos:column="12">p<pos:position pos:line="29" pos:column="13"/></name><operator pos:line="29" pos:column="13">-&gt;<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="15">init<pos:position pos:line="29" pos:column="19"/></name></name> <operator pos:line="29" pos:column="20">&amp;&amp;<pos:position pos:line="29" pos:column="30"/></operator> <name><name pos:line="29" pos:column="23">pp<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">-&gt;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="27">pattern<pos:position pos:line="29" pos:column="34"/></name></name></expr>)<pos:position pos:line="29" pos:column="35"/></condition><then pos:line="29" pos:column="35">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="9">p<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">-&gt;<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="12">init<pos:position pos:line="30" pos:column="16"/></name></name> <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <operator pos:line="30" pos:column="19">(<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="20">unsigned<pos:position pos:line="30" pos:column="28"/></name> <name pos:line="30" pos:column="29">long<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">)<pos:position pos:line="30" pos:column="34"/></operator> <call><name pos:line="30" pos:column="35">safe_strdup<pos:position pos:line="30" pos:column="46"/></name> <argument_list pos:line="30" pos:column="47">(<argument><expr><name><name pos:line="30" pos:column="48">pp<pos:position pos:line="30" pos:column="50"/></name><operator pos:line="30" pos:column="50">-&gt;<pos:position pos:line="30" pos:column="55"/></operator><name pos:line="30" pos:column="52">pattern<pos:position pos:line="30" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="61"/></expr_stmt></block></then></if>
      <break pos:line="31" pos:column="7">break;<pos:position pos:line="31" pos:column="13"/></break>
    }<pos:position pos:line="32" pos:column="6"/></block>
  }<pos:position pos:line="33" pos:column="4"/></block></switch>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_910_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ssl_verify_callback<pos:position pos:line="1" pos:column="31"/></name> <parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">int<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">preverify_ok<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">X509_STORE_CTX<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">ctx<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buf<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">STRING<pos:position pos:line="3" pos:column="18"/></name></expr>]<pos:position pos:line="3" pos:column="19"/></index></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">host<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">len<pos:position pos:line="5" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="12">pos<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">X509<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">cert<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">SSL<pos:position pos:line="7" pos:column="6"/></name> <modifier pos:line="7" pos:column="7">*<pos:position pos:line="7" pos:column="8"/></modifier></type><name pos:line="7" pos:column="8">ssl<pos:position pos:line="7" pos:column="11"/></name></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">skip_mode<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
<cpp:ifdef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifdef<pos:position pos:line="9" pos:column="7"/></cpp:directive> <name pos:line="9" pos:column="8">HAVE_SSL_PARTIAL_CHAIN<pos:position pos:line="9" pos:column="30"/></name></cpp:ifdef>
  <decl_stmt><decl><specifier pos:line="10" pos:column="3">static<pos:position pos:line="10" pos:column="9"/></specifier> <type><name pos:line="10" pos:column="10">int<pos:position pos:line="10" pos:column="13"/></name></type> <name pos:line="10" pos:column="14">last_pos<pos:position pos:line="10" pos:column="22"/></name> <init pos:line="10" pos:column="23">= <expr><literal type="number" pos:line="10" pos:column="25">0<pos:position pos:line="10" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="11" pos:column="3">static<pos:position pos:line="11" pos:column="9"/></specifier> <type><name pos:line="11" pos:column="10">X509<pos:position pos:line="11" pos:column="14"/></name> <modifier pos:line="11" pos:column="15">*<pos:position pos:line="11" pos:column="16"/></modifier></type><name pos:line="11" pos:column="16">last_cert<pos:position pos:line="11" pos:column="25"/></name> <init pos:line="11" pos:column="26">= <expr><name pos:line="11" pos:column="28">NULL<pos:position pos:line="11" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">unsigned<pos:position pos:line="12" pos:column="11"/></name> <name pos:line="12" pos:column="12">char<pos:position pos:line="12" pos:column="16"/></name></type> <name><name pos:line="12" pos:column="17">last_cert_md<pos:position pos:line="12" pos:column="29"/></name><index pos:line="12" pos:column="29">[<expr><name pos:line="12" pos:column="30">EVP_MAX_MD_SIZE<pos:position pos:line="12" pos:column="45"/></name></expr>]<pos:position pos:line="12" pos:column="46"/></index></name></decl>;<pos:position pos:line="12" pos:column="47"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">unsigned<pos:position pos:line="13" pos:column="11"/></name> <name pos:line="13" pos:column="12">int<pos:position pos:line="13" pos:column="15"/></name></type> <name pos:line="13" pos:column="16">last_cert_mdlen<pos:position pos:line="13" pos:column="31"/></name></decl>;<pos:position pos:line="13" pos:column="32"/></decl_stmt>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><operator pos:line="16" pos:column="7">!<pos:position pos:line="16" pos:column="8"/></operator> <operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">ssl<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <call><name pos:line="16" pos:column="16">X509_STORE_CTX_get_ex_data<pos:position pos:line="16" pos:column="42"/></name> <argument_list pos:line="16" pos:column="43">(<argument><expr><name pos:line="16" pos:column="44">ctx<pos:position pos:line="16" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="49">SSL_get_ex_data_X509_STORE_CTX_idx<pos:position pos:line="16" pos:column="83"/></name> <argument_list pos:line="16" pos:column="84">()<pos:position pos:line="16" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="87"/></argument_list></call><operator pos:line="16" pos:column="87">)<pos:position pos:line="16" pos:column="88"/></operator></expr>)<pos:position pos:line="16" pos:column="89"/></condition><then pos:line="16" pos:column="89">
  <block pos:line="17" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">dprint<pos:position pos:line="18" pos:column="11"/></name> <argument_list pos:line="18" pos:column="12">(<argument><expr><literal type="number" pos:line="18" pos:column="13">1<pos:position pos:line="18" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="16">(<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">debugfile<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">,<pos:position pos:line="18" pos:column="27"/></operator> <literal type="string" pos:line="18" pos:column="28">"ssl_verify_callback: failed to retrieve SSL structure from X509_STORE_CTX\n"<pos:position pos:line="18" pos:column="105"/></literal><operator pos:line="18" pos:column="105">)<pos:position pos:line="18" pos:column="106"/></operator></expr></argument>)<pos:position pos:line="18" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="108"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><literal type="number" pos:line="19" pos:column="12">0<pos:position pos:line="19" pos:column="13"/></literal></expr>;<pos:position pos:line="19" pos:column="14"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><operator pos:line="21" pos:column="7">!<pos:position pos:line="21" pos:column="8"/></operator> <operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">host<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <call><name pos:line="21" pos:column="17">SSL_get_ex_data<pos:position pos:line="21" pos:column="32"/></name> <argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">ssl<pos:position pos:line="21" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="39">HostExDataIndex<pos:position pos:line="21" pos:column="54"/></name></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call><operator pos:line="21" pos:column="55">)<pos:position pos:line="21" pos:column="56"/></operator></expr>)<pos:position pos:line="21" pos:column="57"/></condition><then pos:line="21" pos:column="57">
  <block pos:line="22" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">dprint<pos:position pos:line="23" pos:column="11"/></name> <argument_list pos:line="23" pos:column="12">(<argument><expr><literal type="number" pos:line="23" pos:column="13">1<pos:position pos:line="23" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">debugfile<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">,<pos:position pos:line="23" pos:column="27"/></operator> <literal type="string" pos:line="23" pos:column="28">"ssl_verify_callback: failed to retrieve hostname from SSL structure\n"<pos:position pos:line="23" pos:column="99"/></literal><operator pos:line="23" pos:column="99">)<pos:position pos:line="23" pos:column="100"/></operator></expr></argument>)<pos:position pos:line="23" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="102"/></expr_stmt>
    <return pos:line="24" pos:column="5">return <expr><literal type="number" pos:line="24" pos:column="12">0<pos:position pos:line="24" pos:column="13"/></literal></expr>;<pos:position pos:line="24" pos:column="14"/></return>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="27" pos:column="3">/* This is true when a previous entry in the certificate chain did
   * not verify and the user manually chose to skip it via the
   * $ssl_verify_partial_chains option.
   * In this case, all following certificates need to be treated as non-verified
   * until one is actually verified.
   */</comment>
  <expr_stmt><expr><name pos:line="33" pos:column="3">skip_mode<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">=<pos:position pos:line="33" pos:column="14"/></operator> <operator pos:line="33" pos:column="15">(<pos:position pos:line="33" pos:column="16"/></operator><call><name pos:line="33" pos:column="16">SSL_get_ex_data<pos:position pos:line="33" pos:column="31"/></name> <argument_list pos:line="33" pos:column="32">(<argument><expr><name pos:line="33" pos:column="33">ssl<pos:position pos:line="33" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="38">SkipModeExDataIndex<pos:position pos:line="33" pos:column="57"/></name></expr></argument>)<pos:position pos:line="33" pos:column="58"/></argument_list></call> <operator pos:line="33" pos:column="59">!=<pos:position pos:line="33" pos:column="61"/></operator> <name pos:line="33" pos:column="62">NULL<pos:position pos:line="33" pos:column="66"/></name><operator pos:line="33" pos:column="66">)<pos:position pos:line="33" pos:column="67"/></operator></expr>;<pos:position pos:line="33" pos:column="68"/></expr_stmt>

  <expr_stmt><expr><name pos:line="35" pos:column="3">cert<pos:position pos:line="35" pos:column="7"/></name> <operator pos:line="35" pos:column="8">=<pos:position pos:line="35" pos:column="9"/></operator> <call><name pos:line="35" pos:column="10">X509_STORE_CTX_get_current_cert<pos:position pos:line="35" pos:column="41"/></name> <argument_list pos:line="35" pos:column="42">(<argument><expr><name pos:line="35" pos:column="43">ctx<pos:position pos:line="35" pos:column="46"/></name></expr></argument>)<pos:position pos:line="35" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><name pos:line="36" pos:column="3">pos<pos:position pos:line="36" pos:column="6"/></name> <operator pos:line="36" pos:column="7">=<pos:position pos:line="36" pos:column="8"/></operator> <call><name pos:line="36" pos:column="9">X509_STORE_CTX_get_error_depth<pos:position pos:line="36" pos:column="39"/></name> <argument_list pos:line="36" pos:column="40">(<argument><expr><name pos:line="36" pos:column="41">ctx<pos:position pos:line="36" pos:column="44"/></name></expr></argument>)<pos:position pos:line="36" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><name pos:line="37" pos:column="3">len<pos:position pos:line="37" pos:column="6"/></name> <operator pos:line="37" pos:column="7">=<pos:position pos:line="37" pos:column="8"/></operator> <call><name pos:line="37" pos:column="9">sk_X509_num<pos:position pos:line="37" pos:column="20"/></name> <argument_list pos:line="37" pos:column="21">(<argument><expr><call><name pos:line="37" pos:column="22">X509_STORE_CTX_get_chain<pos:position pos:line="37" pos:column="46"/></name> <argument_list pos:line="37" pos:column="47">(<argument><expr><name pos:line="37" pos:column="48">ctx<pos:position pos:line="37" pos:column="51"/></name></expr></argument>)<pos:position pos:line="37" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="54"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="39" pos:column="3">dprint<pos:position pos:line="39" pos:column="9"/></name> <argument_list pos:line="39" pos:column="10">(<argument><expr><literal type="number" pos:line="39" pos:column="11">1<pos:position pos:line="39" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="39" pos:column="14">(<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="15">debugfile<pos:position pos:line="39" pos:column="24"/></name><operator pos:line="39" pos:column="24">,<pos:position pos:line="39" pos:column="25"/></operator>
              <literal type="string" pos:line="40" pos:column="15">"ssl_verify_callback: checking cert chain entry %s (preverify: %d skipmode: %d)\n"<pos:position pos:line="40" pos:column="97"/></literal><operator pos:line="40" pos:column="97">,<pos:position pos:line="40" pos:column="98"/></operator>
              <call><name pos:line="41" pos:column="15">X509_NAME_oneline<pos:position pos:line="41" pos:column="32"/></name> <argument_list pos:line="41" pos:column="33">(<argument><expr><call><name pos:line="41" pos:column="34">X509_get_subject_name<pos:position pos:line="41" pos:column="55"/></name> <argument_list pos:line="41" pos:column="56">(<argument><expr><name pos:line="41" pos:column="57">cert<pos:position pos:line="41" pos:column="61"/></name></expr></argument>)<pos:position pos:line="41" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="41" pos:column="64">buf<pos:position pos:line="41" pos:column="67"/></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="69">sizeof <argument_list pos:line="41" pos:column="76">(<argument><expr><name pos:line="41" pos:column="77">buf<pos:position pos:line="41" pos:column="80"/></name></expr></argument>)<pos:position pos:line="41" pos:column="81"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="82"/></argument_list></call><operator pos:line="41" pos:column="82">,<pos:position pos:line="41" pos:column="83"/></operator>
              <name pos:line="42" pos:column="15">preverify_ok<pos:position pos:line="42" pos:column="27"/></name><operator pos:line="42" pos:column="27">,<pos:position pos:line="42" pos:column="28"/></operator> <name pos:line="42" pos:column="29">skip_mode<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">)<pos:position pos:line="42" pos:column="39"/></operator></expr></argument>)<pos:position pos:line="42" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="41"/></expr_stmt>

<cpp:ifdef pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">ifdef<pos:position pos:line="44" pos:column="7"/></cpp:directive> <name pos:line="44" pos:column="8">HAVE_SSL_PARTIAL_CHAIN<pos:position pos:line="44" pos:column="30"/></name></cpp:ifdef>
  <comment type="block" pos:line="45" pos:column="3">/* Sometimes, when a certificate is (s)kipped, OpenSSL will pass it
   * a second time with preverify_ok = 1.  Don't show it or the user
   * will think their "s" key is broken.
   */</comment>
  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><call><name pos:line="49" pos:column="7">option<pos:position pos:line="49" pos:column="13"/></name> <argument_list pos:line="49" pos:column="14">(<argument><expr><name pos:line="49" pos:column="15">OPTSSLVERIFYPARTIAL<pos:position pos:line="49" pos:column="34"/></name></expr></argument>)<pos:position pos:line="49" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="36"/></condition><then pos:line="49" pos:column="36">
  <block pos:line="50" pos:column="3">{
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">skip_mode<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">&amp;&amp;<pos:position pos:line="51" pos:column="29"/></operator> <name pos:line="51" pos:column="22">preverify_ok<pos:position pos:line="51" pos:column="34"/></name> <operator pos:line="51" pos:column="35">&amp;&amp;<pos:position pos:line="51" pos:column="45"/></operator> <operator pos:line="51" pos:column="38">(<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="39">pos<pos:position pos:line="51" pos:column="42"/></name> <operator pos:line="51" pos:column="43">==<pos:position pos:line="51" pos:column="45"/></operator> <name pos:line="51" pos:column="46">last_pos<pos:position pos:line="51" pos:column="54"/></name><operator pos:line="51" pos:column="54">)<pos:position pos:line="51" pos:column="55"/></operator> <operator pos:line="51" pos:column="56">&amp;&amp;<pos:position pos:line="51" pos:column="66"/></operator> <name pos:line="51" pos:column="59">last_cert<pos:position pos:line="51" pos:column="68"/></name></expr>)<pos:position pos:line="51" pos:column="69"/></condition><then pos:line="51" pos:column="69">
    <block pos:line="52" pos:column="5">{
      <if pos:line="53" pos:column="7">if <condition pos:line="53" pos:column="10">(<expr><call><name pos:line="53" pos:column="11">X509_digest<pos:position pos:line="53" pos:column="22"/></name> <argument_list pos:line="53" pos:column="23">(<argument><expr><name pos:line="53" pos:column="24">last_cert<pos:position pos:line="53" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="53" pos:column="35">EVP_sha256<pos:position pos:line="53" pos:column="45"/></name><argument_list pos:line="53" pos:column="45">()<pos:position pos:line="53" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="53" pos:column="49">last_cert_md<pos:position pos:line="53" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="63">&amp;<pos:position pos:line="53" pos:column="68"/></operator><name pos:line="53" pos:column="64">last_cert_mdlen<pos:position pos:line="53" pos:column="79"/></name></expr></argument>)<pos:position pos:line="53" pos:column="80"/></argument_list></call> <operator pos:line="53" pos:column="81">&amp;&amp;<pos:position pos:line="53" pos:column="91"/></operator>
          <operator pos:line="54" pos:column="11">!<pos:position pos:line="54" pos:column="12"/></operator><call><name pos:line="54" pos:column="12">compare_certificates<pos:position pos:line="54" pos:column="32"/></name> <argument_list pos:line="54" pos:column="33">(<argument><expr><name pos:line="54" pos:column="34">cert<pos:position pos:line="54" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="40">last_cert<pos:position pos:line="54" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="51">last_cert_md<pos:position pos:line="54" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="65">last_cert_mdlen<pos:position pos:line="54" pos:column="80"/></name></expr></argument>)<pos:position pos:line="54" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="82"/></condition><then pos:line="54" pos:column="82">
      <block pos:line="55" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">dprint<pos:position pos:line="56" pos:column="15"/></name> <argument_list pos:line="56" pos:column="16">(<argument><expr><literal type="number" pos:line="56" pos:column="17">2<pos:position pos:line="56" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="56" pos:column="20">(<pos:position pos:line="56" pos:column="21"/></operator><name pos:line="56" pos:column="21">debugfile<pos:position pos:line="56" pos:column="30"/></name><operator pos:line="56" pos:column="30">,<pos:position pos:line="56" pos:column="31"/></operator>
                    <literal type="string" pos:line="57" pos:column="21">"ssl_verify_callback: ignoring duplicate skipped certificate.\n"<pos:position pos:line="57" pos:column="85"/></literal><operator pos:line="57" pos:column="85">)<pos:position pos:line="57" pos:column="86"/></operator></expr></argument>)<pos:position pos:line="57" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="88"/></expr_stmt>
        <return pos:line="58" pos:column="9">return <expr><literal type="number" pos:line="58" pos:column="16">1<pos:position pos:line="58" pos:column="17"/></literal></expr>;<pos:position pos:line="58" pos:column="18"/></return>
      }<pos:position pos:line="59" pos:column="8"/></block></then></if>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="62" pos:column="5">last_pos<pos:position pos:line="62" pos:column="13"/></name> <operator pos:line="62" pos:column="14">=<pos:position pos:line="62" pos:column="15"/></operator> <name pos:line="62" pos:column="16">pos<pos:position pos:line="62" pos:column="19"/></name></expr>;<pos:position pos:line="62" pos:column="20"/></expr_stmt>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><name pos:line="63" pos:column="9">last_cert<pos:position pos:line="63" pos:column="18"/></name></expr>)<pos:position pos:line="63" pos:column="19"/></condition><then pos:line="63" pos:column="19">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="7">X509_free<pos:position pos:line="64" pos:column="16"/></name> <argument_list pos:line="64" pos:column="17">(<argument><expr><name pos:line="64" pos:column="18">last_cert<pos:position pos:line="64" pos:column="27"/></name></expr></argument>)<pos:position pos:line="64" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="29"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="65" pos:column="5">last_cert<pos:position pos:line="65" pos:column="14"/></name> <operator pos:line="65" pos:column="15">=<pos:position pos:line="65" pos:column="16"/></operator> <call><name pos:line="65" pos:column="17">X509_dup<pos:position pos:line="65" pos:column="25"/></name> <argument_list pos:line="65" pos:column="26">(<argument><expr><name pos:line="65" pos:column="27">cert<pos:position pos:line="65" pos:column="31"/></name></expr></argument>)<pos:position pos:line="65" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="66" pos:column="4"/></block></then></if>
<cpp:endif pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">endif<pos:position pos:line="67" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="69" pos:column="3">/* check session cache first */</comment>
  <if pos:line="70" pos:column="3">if <condition pos:line="70" pos:column="6">(<expr><call><name pos:line="70" pos:column="7">check_certificate_cache<pos:position pos:line="70" pos:column="30"/></name> <argument_list pos:line="70" pos:column="31">(<argument><expr><name pos:line="70" pos:column="32">cert<pos:position pos:line="70" pos:column="36"/></name></expr></argument>)<pos:position pos:line="70" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="38"/></condition><then pos:line="70" pos:column="38">
  <block pos:line="71" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">dprint<pos:position pos:line="72" pos:column="11"/></name> <argument_list pos:line="72" pos:column="12">(<argument><expr><literal type="number" pos:line="72" pos:column="13">2<pos:position pos:line="72" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="72" pos:column="16">(<pos:position pos:line="72" pos:column="17"/></operator><name pos:line="72" pos:column="17">debugfile<pos:position pos:line="72" pos:column="26"/></name><operator pos:line="72" pos:column="26">,<pos:position pos:line="72" pos:column="27"/></operator> <literal type="string" pos:line="72" pos:column="28">"ssl_verify_callback: using cached certificate\n"<pos:position pos:line="72" pos:column="77"/></literal><operator pos:line="72" pos:column="77">)<pos:position pos:line="72" pos:column="78"/></operator></expr></argument>)<pos:position pos:line="72" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="73" pos:column="5">SSL_set_ex_data<pos:position pos:line="73" pos:column="20"/></name> <argument_list pos:line="73" pos:column="21">(<argument><expr><name pos:line="73" pos:column="22">ssl<pos:position pos:line="73" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="27">SkipModeExDataIndex<pos:position pos:line="73" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="48">NULL<pos:position pos:line="73" pos:column="52"/></name></expr></argument>)<pos:position pos:line="73" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="54"/></expr_stmt>
    <return pos:line="74" pos:column="5">return <expr><literal type="number" pos:line="74" pos:column="12">1<pos:position pos:line="74" pos:column="13"/></literal></expr>;<pos:position pos:line="74" pos:column="14"/></return>
  }<pos:position pos:line="75" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="77" pos:column="3">/* check hostname only for the leaf certificate */</comment>
  <expr_stmt><expr><name><name pos:line="78" pos:column="3">buf<pos:position pos:line="78" pos:column="6"/></name><index pos:line="78" pos:column="6">[<expr><literal type="number" pos:line="78" pos:column="7">0<pos:position pos:line="78" pos:column="8"/></literal></expr>]<pos:position pos:line="78" pos:column="9"/></index></name> <operator pos:line="78" pos:column="10">=<pos:position pos:line="78" pos:column="11"/></operator> <literal type="number" pos:line="78" pos:column="12">0<pos:position pos:line="78" pos:column="13"/></literal></expr>;<pos:position pos:line="78" pos:column="14"/></expr_stmt>
  <if pos:line="79" pos:column="3">if <condition pos:line="79" pos:column="6">(<expr><name pos:line="79" pos:column="7">pos<pos:position pos:line="79" pos:column="10"/></name> <operator pos:line="79" pos:column="11">==<pos:position pos:line="79" pos:column="13"/></operator> <literal type="number" pos:line="79" pos:column="14">0<pos:position pos:line="79" pos:column="15"/></literal> <operator pos:line="79" pos:column="16">&amp;&amp;<pos:position pos:line="79" pos:column="26"/></operator> <call><name pos:line="79" pos:column="19">option<pos:position pos:line="79" pos:column="25"/></name> <argument_list pos:line="79" pos:column="26">(<argument><expr><name pos:line="79" pos:column="27">OPTSSLVERIFYHOST<pos:position pos:line="79" pos:column="43"/></name></expr></argument>)<pos:position pos:line="79" pos:column="44"/></argument_list></call> <operator pos:line="79" pos:column="45">!=<pos:position pos:line="79" pos:column="47"/></operator> <name pos:line="79" pos:column="48">MUTT_NO<pos:position pos:line="79" pos:column="55"/></name></expr>)<pos:position pos:line="79" pos:column="56"/></condition><then pos:line="79" pos:column="56">
  <block pos:line="80" pos:column="3">{
    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><operator pos:line="81" pos:column="9">!<pos:position pos:line="81" pos:column="10"/></operator><call><name pos:line="81" pos:column="10">check_host<pos:position pos:line="81" pos:column="20"/></name> <argument_list pos:line="81" pos:column="21">(<argument><expr><name pos:line="81" pos:column="22">cert<pos:position pos:line="81" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="28">host<pos:position pos:line="81" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="34">buf<pos:position pos:line="81" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="81" pos:column="39">sizeof <argument_list pos:line="81" pos:column="46">(<argument><expr><name pos:line="81" pos:column="47">buf<pos:position pos:line="81" pos:column="50"/></name></expr></argument>)<pos:position pos:line="81" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="81" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="53"/></condition><then pos:line="81" pos:column="53">
    <block pos:line="82" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="83" pos:column="7">mutt_error<pos:position pos:line="83" pos:column="17"/></name> <argument_list pos:line="83" pos:column="18">(<argument><expr><call><name pos:line="83" pos:column="19">_<pos:position pos:line="83" pos:column="20"/></name><argument_list pos:line="83" pos:column="20">(<argument><expr><literal type="string" pos:line="83" pos:column="21">"Certificate host check failed: %s"<pos:position pos:line="83" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="83" pos:column="59">buf<pos:position pos:line="83" pos:column="62"/></name></expr></argument>)<pos:position pos:line="83" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="64"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="84" pos:column="7">mutt_sleep<pos:position pos:line="84" pos:column="17"/></name> <argument_list pos:line="84" pos:column="18">(<argument><expr><literal type="number" pos:line="84" pos:column="19">2<pos:position pos:line="84" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="22"/></expr_stmt>
      <comment type="block" pos:line="85" pos:column="7">/* we disallow (a)ccept always in the prompt, because it will have no effect
       * for hostname mismatches. */</comment>
      <return pos:line="87" pos:column="7">return <expr><call><name pos:line="87" pos:column="14">interactive_check_cert<pos:position pos:line="87" pos:column="36"/></name> <argument_list pos:line="87" pos:column="37">(<argument><expr><name pos:line="87" pos:column="38">cert<pos:position pos:line="87" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="44">pos<pos:position pos:line="87" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="49">len<pos:position pos:line="87" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="54">ssl<pos:position pos:line="87" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="87" pos:column="59">0<pos:position pos:line="87" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="62"/></return>
    }<pos:position pos:line="88" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="89" pos:column="5">dprint<pos:position pos:line="89" pos:column="11"/></name> <argument_list pos:line="89" pos:column="12">(<argument><expr><literal type="number" pos:line="89" pos:column="13">2<pos:position pos:line="89" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="89" pos:column="16">(<pos:position pos:line="89" pos:column="17"/></operator><name pos:line="89" pos:column="17">debugfile<pos:position pos:line="89" pos:column="26"/></name><operator pos:line="89" pos:column="26">,<pos:position pos:line="89" pos:column="27"/></operator> <literal type="string" pos:line="89" pos:column="28">"ssl_verify_callback: hostname check passed\n"<pos:position pos:line="89" pos:column="74"/></literal><operator pos:line="89" pos:column="74">)<pos:position pos:line="89" pos:column="75"/></operator></expr></argument>)<pos:position pos:line="89" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="77"/></expr_stmt>
  }<pos:position pos:line="90" pos:column="4"/></block></then></if>

  <if pos:line="92" pos:column="3">if <condition pos:line="92" pos:column="6">(<expr><operator pos:line="92" pos:column="7">!<pos:position pos:line="92" pos:column="8"/></operator><name pos:line="92" pos:column="8">preverify_ok<pos:position pos:line="92" pos:column="20"/></name> <operator pos:line="92" pos:column="21">||<pos:position pos:line="92" pos:column="23"/></operator> <name pos:line="92" pos:column="24">skip_mode<pos:position pos:line="92" pos:column="33"/></name></expr>)<pos:position pos:line="92" pos:column="34"/></condition><then pos:line="92" pos:column="34">
  <block pos:line="93" pos:column="3">{
    <comment type="block" pos:line="94" pos:column="5">/* automatic check from user's database */</comment>
    <if pos:line="95" pos:column="5">if <condition pos:line="95" pos:column="8">(<expr><name pos:line="95" pos:column="9">SslCertFile<pos:position pos:line="95" pos:column="20"/></name> <operator pos:line="95" pos:column="21">&amp;&amp;<pos:position pos:line="95" pos:column="31"/></operator> <call><name pos:line="95" pos:column="24">check_certificate_by_digest<pos:position pos:line="95" pos:column="51"/></name> <argument_list pos:line="95" pos:column="52">(<argument><expr><name pos:line="95" pos:column="53">cert<pos:position pos:line="95" pos:column="57"/></name></expr></argument>)<pos:position pos:line="95" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="95" pos:column="59"/></condition><then pos:line="95" pos:column="59">
    <block pos:line="96" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="97" pos:column="7">dprint<pos:position pos:line="97" pos:column="13"/></name> <argument_list pos:line="97" pos:column="14">(<argument><expr><literal type="number" pos:line="97" pos:column="15">2<pos:position pos:line="97" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="97" pos:column="18">(<pos:position pos:line="97" pos:column="19"/></operator><name pos:line="97" pos:column="19">debugfile<pos:position pos:line="97" pos:column="28"/></name><operator pos:line="97" pos:column="28">,<pos:position pos:line="97" pos:column="29"/></operator> <literal type="string" pos:line="97" pos:column="30">"ssl_verify_callback: digest check passed\n"<pos:position pos:line="97" pos:column="74"/></literal><operator pos:line="97" pos:column="74">)<pos:position pos:line="97" pos:column="75"/></operator></expr></argument>)<pos:position pos:line="97" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="77"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="98" pos:column="7">SSL_set_ex_data<pos:position pos:line="98" pos:column="22"/></name> <argument_list pos:line="98" pos:column="23">(<argument><expr><name pos:line="98" pos:column="24">ssl<pos:position pos:line="98" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="29">SkipModeExDataIndex<pos:position pos:line="98" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="50">NULL<pos:position pos:line="98" pos:column="54"/></name></expr></argument>)<pos:position pos:line="98" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="56"/></expr_stmt>
      <return pos:line="99" pos:column="7">return <expr><literal type="number" pos:line="99" pos:column="14">1<pos:position pos:line="99" pos:column="15"/></literal></expr>;<pos:position pos:line="99" pos:column="16"/></return>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if>

<cpp:ifdef pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">ifdef<pos:position pos:line="102" pos:column="7"/></cpp:directive> <name pos:line="102" pos:column="8">DEBUG<pos:position pos:line="102" pos:column="13"/></name></cpp:ifdef>
    <comment type="block" pos:line="103" pos:column="5">/* log verification error */</comment>
    <block pos:line="104" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="105" pos:column="7">int<pos:position pos:line="105" pos:column="10"/></name></type> <name pos:line="105" pos:column="11">err<pos:position pos:line="105" pos:column="14"/></name> <init pos:line="105" pos:column="15">= <expr><call><name pos:line="105" pos:column="17">X509_STORE_CTX_get_error<pos:position pos:line="105" pos:column="41"/></name> <argument_list pos:line="105" pos:column="42">(<argument><expr><name pos:line="105" pos:column="43">ctx<pos:position pos:line="105" pos:column="46"/></name></expr></argument>)<pos:position pos:line="105" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="105" pos:column="48"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="106" pos:column="7">snprintf<pos:position pos:line="106" pos:column="15"/></name> <argument_list pos:line="106" pos:column="16">(<argument><expr><name pos:line="106" pos:column="17">buf<pos:position pos:line="106" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="106" pos:column="22">sizeof <argument_list pos:line="106" pos:column="29">(<argument><expr><name pos:line="106" pos:column="30">buf<pos:position pos:line="106" pos:column="33"/></name></expr></argument>)<pos:position pos:line="106" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="36">"%s (%d)"<pos:position pos:line="106" pos:column="45"/></literal></expr></argument>,
         <argument><expr><call><name pos:line="107" pos:column="10">X509_verify_cert_error_string<pos:position pos:line="107" pos:column="39"/></name> <argument_list pos:line="107" pos:column="40">(<argument><expr><name pos:line="107" pos:column="41">err<pos:position pos:line="107" pos:column="44"/></name></expr></argument>)<pos:position pos:line="107" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="107" pos:column="47">err<pos:position pos:line="107" pos:column="50"/></name></expr></argument>)<pos:position pos:line="107" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="108" pos:column="7">dprint<pos:position pos:line="108" pos:column="13"/></name> <argument_list pos:line="108" pos:column="14">(<argument><expr><literal type="number" pos:line="108" pos:column="15">2<pos:position pos:line="108" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="108" pos:column="18">(<pos:position pos:line="108" pos:column="19"/></operator><name pos:line="108" pos:column="19">debugfile<pos:position pos:line="108" pos:column="28"/></name><operator pos:line="108" pos:column="28">,<pos:position pos:line="108" pos:column="29"/></operator> <literal type="string" pos:line="108" pos:column="30">"X509_verify_cert: %s\n"<pos:position pos:line="108" pos:column="54"/></literal><operator pos:line="108" pos:column="54">,<pos:position pos:line="108" pos:column="55"/></operator> <name pos:line="108" pos:column="56">buf<pos:position pos:line="108" pos:column="59"/></name><operator pos:line="108" pos:column="59">)<pos:position pos:line="108" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="108" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="109" pos:column="6"/></block>
<cpp:endif pos:line="110" pos:column="1">#<cpp:directive pos:line="110" pos:column="2">endif<pos:position pos:line="110" pos:column="7"/></cpp:directive></cpp:endif>

   <comment type="block" pos:line="112" pos:column="4">/* prompt user */</comment>
    <return pos:line="113" pos:column="5">return <expr><call><name pos:line="113" pos:column="12">interactive_check_cert<pos:position pos:line="113" pos:column="34"/></name> <argument_list pos:line="113" pos:column="35">(<argument><expr><name pos:line="113" pos:column="36">cert<pos:position pos:line="113" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="42">pos<pos:position pos:line="113" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="47">len<pos:position pos:line="113" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="52">ssl<pos:position pos:line="113" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="113" pos:column="57">1<pos:position pos:line="113" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="60"/></return>
  }<pos:position pos:line="114" pos:column="4"/></block></then></if>

  <return pos:line="116" pos:column="3">return <expr><literal type="number" pos:line="116" pos:column="10">1<pos:position pos:line="116" pos:column="11"/></literal></expr>;<pos:position pos:line="116" pos:column="12"/></return>
}<pos:position pos:line="117" pos:column="2"/></block></function></unit>

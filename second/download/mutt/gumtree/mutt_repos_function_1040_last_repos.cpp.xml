<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1040_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_can_decode<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">BODY<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">a<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><call><name pos:line="3" pos:column="7">mutt_is_autoview<pos:position pos:line="3" pos:column="23"/></name> <argument_list pos:line="3" pos:column="24">(<argument><expr><name pos:line="3" pos:column="25">a<pos:position pos:line="3" pos:column="26"/></name></expr></argument>)<pos:position pos:line="3" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="28"/></condition><then pos:line="3" pos:column="28">
    <block type="pseudo"><return pos:line="4" pos:column="5">return <expr><literal type="number" pos:line="4" pos:column="12">1<pos:position pos:line="4" pos:column="13"/></literal></expr>;<pos:position pos:line="4" pos:column="14"/></return></block></then>
  <elseif pos:line="5" pos:column="3">else <if pos:line="5" pos:column="8">if <condition pos:line="5" pos:column="11">(<expr><name><name pos:line="5" pos:column="12">a<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">-&gt;<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="15">type<pos:position pos:line="5" pos:column="19"/></name></name> <operator pos:line="5" pos:column="20">==<pos:position pos:line="5" pos:column="22"/></operator> <name pos:line="5" pos:column="23">TYPETEXT<pos:position pos:line="5" pos:column="31"/></name></expr>)<pos:position pos:line="5" pos:column="32"/></condition><then pos:line="5" pos:column="32">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><literal type="number" pos:line="6" pos:column="13">1<pos:position pos:line="6" pos:column="14"/></literal><operator pos:line="6" pos:column="14">)<pos:position pos:line="6" pos:column="15"/></operator></expr>;<pos:position pos:line="6" pos:column="16"/></return></block></then></if></elseif>
  <elseif pos:line="7" pos:column="3">else <if pos:line="7" pos:column="8">if <condition pos:line="7" pos:column="11">(<expr><name><name pos:line="7" pos:column="12">a<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">type<pos:position pos:line="7" pos:column="19"/></name></name> <operator pos:line="7" pos:column="20">==<pos:position pos:line="7" pos:column="22"/></operator> <name pos:line="7" pos:column="23">TYPEMESSAGE<pos:position pos:line="7" pos:column="34"/></name></expr>)<pos:position pos:line="7" pos:column="35"/></condition><then pos:line="7" pos:column="35">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><literal type="number" pos:line="8" pos:column="13">1<pos:position pos:line="8" pos:column="14"/></literal><operator pos:line="8" pos:column="14">)<pos:position pos:line="8" pos:column="15"/></operator></expr>;<pos:position pos:line="8" pos:column="16"/></return></block></then></if></elseif>
  <elseif pos:line="9" pos:column="3">else <if pos:line="9" pos:column="8">if <condition pos:line="9" pos:column="11">(<expr><name><name pos:line="9" pos:column="12">a<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">type<pos:position pos:line="9" pos:column="19"/></name></name> <operator pos:line="9" pos:column="20">==<pos:position pos:line="9" pos:column="22"/></operator> <name pos:line="9" pos:column="23">TYPEMULTIPART<pos:position pos:line="9" pos:column="36"/></name></expr>)<pos:position pos:line="9" pos:column="37"/></condition><then pos:line="9" pos:column="37">
  <block pos:line="10" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">BODY<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">p<pos:position pos:line="11" pos:column="12"/></name></decl>;<pos:position pos:line="11" pos:column="13"/></decl_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">WithCrypto<pos:position pos:line="13" pos:column="19"/></name></expr>)<pos:position pos:line="13" pos:column="20"/></condition><then pos:line="13" pos:column="20">
    <block pos:line="14" pos:column="5">{
      <if pos:line="15" pos:column="7">if <condition pos:line="15" pos:column="10">(<expr><call><name pos:line="15" pos:column="11">ascii_strcasecmp<pos:position pos:line="15" pos:column="27"/></name> <argument_list pos:line="15" pos:column="28">(<argument><expr><name><name pos:line="15" pos:column="29">a<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">-&gt;<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="32">subtype<pos:position pos:line="15" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="41">"signed"<pos:position pos:line="15" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call> <operator pos:line="15" pos:column="51">==<pos:position pos:line="15" pos:column="53"/></operator> <literal type="number" pos:line="15" pos:column="54">0<pos:position pos:line="15" pos:column="55"/></literal> <operator pos:line="15" pos:column="56">||<pos:position pos:line="15" pos:column="58"/></operator>
	  <call><name pos:line="16" pos:column="11">ascii_strcasecmp<pos:position pos:line="16" pos:column="27"/></name> <argument_list pos:line="16" pos:column="28">(<argument><expr><name><name pos:line="16" pos:column="29">a<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">-&gt;<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="32">subtype<pos:position pos:line="16" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="41">"encrypted"<pos:position pos:line="16" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call> <operator pos:line="16" pos:column="54">==<pos:position pos:line="16" pos:column="56"/></operator> <literal type="number" pos:line="16" pos:column="57">0<pos:position pos:line="16" pos:column="58"/></literal></expr>)<pos:position pos:line="16" pos:column="59"/></condition><then pos:line="16" pos:column="59">
        <block type="pseudo"><return pos:line="17" pos:column="9">return <expr><operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><literal type="number" pos:line="17" pos:column="17">1<pos:position pos:line="17" pos:column="18"/></literal><operator pos:line="17" pos:column="18">)<pos:position pos:line="17" pos:column="19"/></operator></expr>;<pos:position pos:line="17" pos:column="20"/></return></block></then></if>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <for pos:line="20" pos:column="5">for <control pos:line="20" pos:column="9">(<init><expr><name pos:line="20" pos:column="10">p<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <name><name pos:line="20" pos:column="14">a<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">-&gt;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="17">parts<pos:position pos:line="20" pos:column="22"/></name></name></expr>;<pos:position pos:line="20" pos:column="23"/></init> <condition><expr><name pos:line="20" pos:column="24">p<pos:position pos:line="20" pos:column="25"/></name></expr>;<pos:position pos:line="20" pos:column="26"/></condition> <incr><expr><name pos:line="20" pos:column="27">p<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">=<pos:position pos:line="20" pos:column="30"/></operator> <name><name pos:line="20" pos:column="31">p<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">next<pos:position pos:line="20" pos:column="38"/></name></name></expr></incr>)<pos:position pos:line="20" pos:column="39"/></control>
    <block pos:line="21" pos:column="5">{
      <if pos:line="22" pos:column="7">if <condition pos:line="22" pos:column="10">(<expr><call><name pos:line="22" pos:column="11">mutt_can_decode<pos:position pos:line="22" pos:column="26"/></name> <argument_list pos:line="22" pos:column="27">(<argument><expr><name pos:line="22" pos:column="28">p<pos:position pos:line="22" pos:column="29"/></name></expr></argument>)<pos:position pos:line="22" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="31"/></condition><then pos:line="22" pos:column="31">
        <block type="pseudo"><return pos:line="23" pos:column="9">return <expr><operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><literal type="number" pos:line="23" pos:column="17">1<pos:position pos:line="23" pos:column="18"/></literal><operator pos:line="23" pos:column="18">)<pos:position pos:line="23" pos:column="19"/></operator></expr>;<pos:position pos:line="23" pos:column="20"/></return></block></then></if>
    }<pos:position pos:line="24" pos:column="6"/></block></for>
    
  }<pos:position pos:line="26" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="27" pos:column="3">else <if pos:line="27" pos:column="8">if <condition pos:line="27" pos:column="11">(<expr><name pos:line="27" pos:column="12">WithCrypto<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">&amp;&amp;<pos:position pos:line="27" pos:column="33"/></operator> <name><name pos:line="27" pos:column="26">a<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">-&gt;<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="29">type<pos:position pos:line="27" pos:column="33"/></name></name> <operator pos:line="27" pos:column="34">==<pos:position pos:line="27" pos:column="36"/></operator> <name pos:line="27" pos:column="37">TYPEAPPLICATION<pos:position pos:line="27" pos:column="52"/></name></expr>)<pos:position pos:line="27" pos:column="53"/></condition><then pos:line="27" pos:column="53">
  <block pos:line="28" pos:column="3">{
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">(<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">WithCrypto<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">&amp;<pos:position pos:line="29" pos:column="26"/></operator> <name pos:line="29" pos:column="23">APPLICATION_PGP<pos:position pos:line="29" pos:column="38"/></name><operator pos:line="29" pos:column="38">)<pos:position pos:line="29" pos:column="39"/></operator> <operator pos:line="29" pos:column="40">&amp;&amp;<pos:position pos:line="29" pos:column="50"/></operator> <call><name pos:line="29" pos:column="43">mutt_is_application_pgp<pos:position pos:line="29" pos:column="66"/></name><argument_list pos:line="29" pos:column="66">(<argument><expr><name pos:line="29" pos:column="67">a<pos:position pos:line="29" pos:column="68"/></name></expr></argument>)<pos:position pos:line="29" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="70"/></condition><then pos:line="29" pos:column="70">
      <block type="pseudo"><return pos:line="30" pos:column="7">return <expr><operator pos:line="30" pos:column="14">(<pos:position pos:line="30" pos:column="15"/></operator><literal type="number" pos:line="30" pos:column="15">1<pos:position pos:line="30" pos:column="16"/></literal><operator pos:line="30" pos:column="16">)<pos:position pos:line="30" pos:column="17"/></operator></expr>;<pos:position pos:line="30" pos:column="18"/></return></block></then></if>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><operator pos:line="31" pos:column="9">(<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="10">WithCrypto<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">&amp;<pos:position pos:line="31" pos:column="26"/></operator> <name pos:line="31" pos:column="23">APPLICATION_SMIME<pos:position pos:line="31" pos:column="40"/></name><operator pos:line="31" pos:column="40">)<pos:position pos:line="31" pos:column="41"/></operator> <operator pos:line="31" pos:column="42">&amp;&amp;<pos:position pos:line="31" pos:column="52"/></operator> <call><name pos:line="31" pos:column="45">mutt_is_application_smime<pos:position pos:line="31" pos:column="70"/></name><argument_list pos:line="31" pos:column="70">(<argument><expr><name pos:line="31" pos:column="71">a<pos:position pos:line="31" pos:column="72"/></name></expr></argument>)<pos:position pos:line="31" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="74"/></condition><then pos:line="31" pos:column="74">
      <block type="pseudo"><return pos:line="32" pos:column="7">return <expr><operator pos:line="32" pos:column="14">(<pos:position pos:line="32" pos:column="15"/></operator><literal type="number" pos:line="32" pos:column="15">1<pos:position pos:line="32" pos:column="16"/></literal><operator pos:line="32" pos:column="16">)<pos:position pos:line="32" pos:column="17"/></operator></expr>;<pos:position pos:line="32" pos:column="18"/></return></block></then></if>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if></elseif></if>

  <return pos:line="35" pos:column="3">return <expr><operator pos:line="35" pos:column="10">(<pos:position pos:line="35" pos:column="11"/></operator><literal type="number" pos:line="35" pos:column="11">0<pos:position pos:line="35" pos:column="12"/></literal><operator pos:line="35" pos:column="12">)<pos:position pos:line="35" pos:column="13"/></operator></expr>;<pos:position pos:line="35" pos:column="14"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

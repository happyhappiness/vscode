<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_854_mutt-1.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ssl_check_certificate<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">CONNECTION<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">conn<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">sslsockdata<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">data<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="10">preauthrc<pos:position pos:line="3" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="21">chain_len<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">STACK_OF<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">X509<pos:position pos:line="4" pos:column="16"/></name></expr></argument>)<pos:position pos:line="4" pos:column="17"/></argument_list></call> <operator pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></operator><name pos:line="4" pos:column="19">chain<pos:position pos:line="4" pos:column="24"/></name></expr>;<pos:position pos:line="4" pos:column="25"/></expr_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">X509<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">cert<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">(<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">preauthrc<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">=<pos:position pos:line="7" pos:column="19"/></operator> <call><name pos:line="7" pos:column="20">ssl_check_preauth<pos:position pos:line="7" pos:column="37"/></name> <argument_list pos:line="7" pos:column="38">(<argument><expr><name><name pos:line="7" pos:column="39">data<pos:position pos:line="7" pos:column="43"/></name><operator pos:line="7" pos:column="43">-&gt;<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="45">cert<pos:position pos:line="7" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="51">conn<pos:position pos:line="7" pos:column="55"/></name><operator pos:line="7" pos:column="55">-&gt;<pos:position pos:line="7" pos:column="60"/></operator><name pos:line="7" pos:column="57">account<pos:position pos:line="7" pos:column="64"/></name><operator pos:line="7" pos:column="64">.<pos:position pos:line="7" pos:column="65"/></operator><name pos:line="7" pos:column="65">host<pos:position pos:line="7" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="70"/></argument_list></call><operator pos:line="7" pos:column="70">)<pos:position pos:line="7" pos:column="71"/></operator> <operator pos:line="7" pos:column="72">&gt;<pos:position pos:line="7" pos:column="76"/></operator> <literal type="number" pos:line="7" pos:column="74">0<pos:position pos:line="7" pos:column="75"/></literal></expr>)<pos:position pos:line="7" pos:column="76"/></condition><then pos:line="7" pos:column="76">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">preauthrc<pos:position pos:line="8" pos:column="21"/></name></expr>;<pos:position pos:line="8" pos:column="22"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="10" pos:column="3">chain<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <call><name pos:line="10" pos:column="11">SSL_get_peer_cert_chain<pos:position pos:line="10" pos:column="34"/></name> <argument_list pos:line="10" pos:column="35">(<argument><expr><name><name pos:line="10" pos:column="36">data<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">-&gt;<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="42">ssl<pos:position pos:line="10" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><name pos:line="11" pos:column="3">chain_len<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <call><name pos:line="11" pos:column="15">sk_X509_num<pos:position pos:line="11" pos:column="26"/></name> <argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">chain<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt>
  <comment type="block" pos:line="12" pos:column="3">/* negative preauthrc means the certificate won't be accepted without
   * manual override. */</comment>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">preauthrc<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">&lt;<pos:position pos:line="14" pos:column="21"/></operator> <literal type="number" pos:line="14" pos:column="19">0<pos:position pos:line="14" pos:column="20"/></literal> <operator pos:line="14" pos:column="21">||<pos:position pos:line="14" pos:column="23"/></operator> <operator pos:line="14" pos:column="24">!<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="25">chain<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">||<pos:position pos:line="14" pos:column="33"/></operator> <operator pos:line="14" pos:column="34">(<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="35">chain_len<pos:position pos:line="14" pos:column="44"/></name> <operator pos:line="14" pos:column="45">&lt;=<pos:position pos:line="14" pos:column="50"/></operator> <literal type="number" pos:line="14" pos:column="48">1<pos:position pos:line="14" pos:column="49"/></literal><operator pos:line="14" pos:column="49">)<pos:position pos:line="14" pos:column="50"/></operator></expr>)<pos:position pos:line="14" pos:column="51"/></condition><then pos:line="14" pos:column="51">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><call><name pos:line="15" pos:column="12">interactive_check_cert<pos:position pos:line="15" pos:column="34"/></name> <argument_list pos:line="15" pos:column="35">(<argument><expr><name><name pos:line="15" pos:column="36">data<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">-&gt;<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="42">cert<pos:position pos:line="15" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="48">0<pos:position pos:line="15" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="51">0<pos:position pos:line="15" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="54"/></return></block></then></if>

  <comment type="block" pos:line="17" pos:column="3">/* check the chain from root to peer. */</comment>
  <for pos:line="18" pos:column="3">for <control pos:line="18" pos:column="7">(<init><expr><name pos:line="18" pos:column="8">i<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <name pos:line="18" pos:column="12">chain_len<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">-<pos:position pos:line="18" pos:column="22"/></operator><literal type="number" pos:line="18" pos:column="22">1<pos:position pos:line="18" pos:column="23"/></literal></expr>;<pos:position pos:line="18" pos:column="24"/></init> <condition><expr><name pos:line="18" pos:column="25">i<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">&gt;=<pos:position pos:line="18" pos:column="32"/></operator> <literal type="number" pos:line="18" pos:column="30">0<pos:position pos:line="18" pos:column="31"/></literal></expr>;<pos:position pos:line="18" pos:column="32"/></condition> <incr><expr><name pos:line="18" pos:column="33">i<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">--<pos:position pos:line="18" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="37"/></control>
  <block pos:line="19" pos:column="3">{
    <expr_stmt><expr><name pos:line="20" pos:column="5">cert<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator> <call><name pos:line="20" pos:column="12">sk_X509_value<pos:position pos:line="20" pos:column="25"/></name> <argument_list pos:line="20" pos:column="26">(<argument><expr><name pos:line="20" pos:column="27">chain<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="34">i<pos:position pos:line="20" pos:column="35"/></name></expr></argument>)<pos:position pos:line="20" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="37"/></expr_stmt>

    <comment type="block" pos:line="22" pos:column="5">/* if the certificate validates or is manually accepted, then add it to
     * the trusted set and recheck the peer certificate */</comment>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><call><name pos:line="24" pos:column="9">ssl_check_preauth<pos:position pos:line="24" pos:column="26"/></name> <argument_list pos:line="24" pos:column="27">(<argument><expr><name pos:line="24" pos:column="28">cert<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="34">NULL<pos:position pos:line="24" pos:column="38"/></name></expr></argument>)<pos:position pos:line="24" pos:column="39"/></argument_list></call>
	<operator pos:line="25" pos:column="9">||<pos:position pos:line="25" pos:column="11"/></operator> <call><name pos:line="25" pos:column="12">interactive_check_cert<pos:position pos:line="25" pos:column="34"/></name> <argument_list pos:line="25" pos:column="35">(<argument><expr><name pos:line="25" pos:column="36">cert<pos:position pos:line="25" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="42">i<pos:position pos:line="25" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="45">chain_len<pos:position pos:line="25" pos:column="54"/></name></expr></argument>)<pos:position pos:line="25" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="56"/></condition><then pos:line="25" pos:column="56">
    <block pos:line="26" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">ssl_cache_trusted_cert<pos:position pos:line="27" pos:column="29"/></name> <argument_list pos:line="27" pos:column="30">(<argument><expr><name pos:line="27" pos:column="31">cert<pos:position pos:line="27" pos:column="35"/></name></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt>
      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><call><name pos:line="28" pos:column="11">ssl_check_preauth<pos:position pos:line="28" pos:column="28"/></name> <argument_list pos:line="28" pos:column="29">(<argument><expr><name><name pos:line="28" pos:column="30">data<pos:position pos:line="28" pos:column="34"/></name><operator pos:line="28" pos:column="34">-&gt;<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="36">cert<pos:position pos:line="28" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="42">conn<pos:position pos:line="28" pos:column="46"/></name><operator pos:line="28" pos:column="46">-&gt;<pos:position pos:line="28" pos:column="51"/></operator><name pos:line="28" pos:column="48">account<pos:position pos:line="28" pos:column="55"/></name><operator pos:line="28" pos:column="55">.<pos:position pos:line="28" pos:column="56"/></operator><name pos:line="28" pos:column="56">host<pos:position pos:line="28" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="62"/></condition><then pos:line="28" pos:column="62">
	<block type="pseudo"><return pos:line="29" pos:column="9">return <expr><literal type="number" pos:line="29" pos:column="16">1<pos:position pos:line="29" pos:column="17"/></literal></expr>;<pos:position pos:line="29" pos:column="18"/></return></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
  }<pos:position pos:line="31" pos:column="4"/></block></for>

  <return pos:line="33" pos:column="3">return <expr><literal type="number" pos:line="33" pos:column="10">0<pos:position pos:line="33" pos:column="11"/></literal></expr>;<pos:position pos:line="33" pos:column="12"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

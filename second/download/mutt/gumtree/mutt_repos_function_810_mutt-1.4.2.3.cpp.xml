<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_810_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BODY<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">mutt_make_message_attach<pos:position pos:line="1" pos:column="31"/></name> <parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">CONTEXT<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">ctx<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">HEADER<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">hdr<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">int<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">attach_msg<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buffer<pos:position pos:line="3" pos:column="14"/></name><index pos:line="3" pos:column="14">[<expr><name pos:line="3" pos:column="15">LONG_STRING<pos:position pos:line="3" pos:column="26"/></name></expr>]<pos:position pos:line="3" pos:column="27"/></index></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">BODY<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">body<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">fp<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">cmflags<pos:position pos:line="6" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="16">chflags<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
<cpp:ifdef pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">ifdef<pos:position pos:line="7" pos:column="7"/></cpp:directive> <name pos:line="7" pos:column="8">HAVE_PGP<pos:position pos:line="7" pos:column="16"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">pgp<pos:position pos:line="8" pos:column="10"/></name> <init pos:line="8" pos:column="11">= <expr><name><name pos:line="8" pos:column="13">hdr<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">pgp<pos:position pos:line="8" pos:column="21"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef<pos:position pos:line="11" pos:column="7"/></cpp:directive> <name pos:line="11" pos:column="8">HAVE_PGP<pos:position pos:line="11" pos:column="16"/></name></cpp:ifdef>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">(<pos:position pos:line="12" pos:column="8"/></operator><call><name pos:line="12" pos:column="8">option<pos:position pos:line="12" pos:column="14"/></name><argument_list pos:line="12" pos:column="14">(<argument><expr><name pos:line="12" pos:column="15">OPTMIMEFORWDECODE<pos:position pos:line="12" pos:column="32"/></name></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call> <operator pos:line="12" pos:column="34">||<pos:position pos:line="12" pos:column="36"/></operator> <call><name pos:line="12" pos:column="37">option<pos:position pos:line="12" pos:column="43"/></name><argument_list pos:line="12" pos:column="43">(<argument><expr><name pos:line="12" pos:column="44">OPTFORWDECRYPT<pos:position pos:line="12" pos:column="58"/></name></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call><operator pos:line="12" pos:column="59">)<pos:position pos:line="12" pos:column="60"/></operator> <operator pos:line="12" pos:column="61">&amp;&amp;<pos:position pos:line="12" pos:column="71"/></operator>
      <operator pos:line="13" pos:column="7">(<pos:position pos:line="13" pos:column="8"/></operator><name><name pos:line="13" pos:column="8">hdr<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">pgp<pos:position pos:line="13" pos:column="16"/></name></name> <operator pos:line="13" pos:column="17">&amp;<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="19">PGPENCRYPT<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">)<pos:position pos:line="13" pos:column="30"/></operator> <operator pos:line="13" pos:column="31">&amp;&amp;<pos:position pos:line="13" pos:column="41"/></operator> <operator pos:line="13" pos:column="34">!<pos:position pos:line="13" pos:column="35"/></operator><call><name pos:line="13" pos:column="35">pgp_valid_passphrase<pos:position pos:line="13" pos:column="55"/></name><argument_list pos:line="13" pos:column="55">()<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="58"/></condition><then pos:line="13" pos:column="58">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">NULL<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">)<pos:position pos:line="14" pos:column="18"/></operator></expr>;<pos:position pos:line="14" pos:column="19"/></return></block></then></if>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="15" pos:column="8">/* HAVE_PGP */</comment>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">mutt_mktemp<pos:position pos:line="17" pos:column="14"/></name> <argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">buffer<pos:position pos:line="17" pos:column="22"/></name></expr></argument>)<pos:position pos:line="17" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="24"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">(<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">fp<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <call><name pos:line="18" pos:column="13">safe_fopen<pos:position pos:line="18" pos:column="23"/></name> <argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">buffer<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="33">"w+"<pos:position pos:line="18" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="38"/></argument_list></call><operator pos:line="18" pos:column="38">)<pos:position pos:line="18" pos:column="39"/></operator> <operator pos:line="18" pos:column="40">==<pos:position pos:line="18" pos:column="42"/></operator> <name pos:line="18" pos:column="43">NULL<pos:position pos:line="18" pos:column="47"/></name></expr>)<pos:position pos:line="18" pos:column="48"/></condition><then pos:line="18" pos:column="48">
    <block type="pseudo"><return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">NULL<pos:position pos:line="19" pos:column="16"/></name></expr>;<pos:position pos:line="19" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="21" pos:column="3">body<pos:position pos:line="21" pos:column="7"/></name> <operator pos:line="21" pos:column="8">=<pos:position pos:line="21" pos:column="9"/></operator> <call><name pos:line="21" pos:column="10">mutt_new_body<pos:position pos:line="21" pos:column="23"/></name> <argument_list pos:line="21" pos:column="24">()<pos:position pos:line="21" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">body<pos:position pos:line="22" pos:column="7"/></name><operator pos:line="22" pos:column="7">-&gt;<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="9">type<pos:position pos:line="22" pos:column="13"/></name></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <name pos:line="22" pos:column="16">TYPEMESSAGE<pos:position pos:line="22" pos:column="27"/></name></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">body<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">-&gt;<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="9">subtype<pos:position pos:line="23" pos:column="16"/></name></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <call><name pos:line="23" pos:column="19">safe_strdup<pos:position pos:line="23" pos:column="30"/></name> <argument_list pos:line="23" pos:column="31">(<argument><expr><literal type="string" pos:line="23" pos:column="32">"rfc822"<pos:position pos:line="23" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">body<pos:position pos:line="24" pos:column="7"/></name><operator pos:line="24" pos:column="7">-&gt;<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="9">filename<pos:position pos:line="24" pos:column="17"/></name></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <call><name pos:line="24" pos:column="20">safe_strdup<pos:position pos:line="24" pos:column="31"/></name> <argument_list pos:line="24" pos:column="32">(<argument><expr><name pos:line="24" pos:column="33">buffer<pos:position pos:line="24" pos:column="39"/></name></expr></argument>)<pos:position pos:line="24" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">body<pos:position pos:line="25" pos:column="7"/></name><operator pos:line="25" pos:column="7">-&gt;<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="9">unlink<pos:position pos:line="25" pos:column="15"/></name></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <literal type="number" pos:line="25" pos:column="18">1<pos:position pos:line="25" pos:column="19"/></literal></expr>;<pos:position pos:line="25" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="26" pos:column="3">body<pos:position pos:line="26" pos:column="7"/></name><operator pos:line="26" pos:column="7">-&gt;<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="9">use_disp<pos:position pos:line="26" pos:column="17"/></name></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <literal type="number" pos:line="26" pos:column="20">0<pos:position pos:line="26" pos:column="21"/></literal></expr>;<pos:position pos:line="26" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">body<pos:position pos:line="27" pos:column="7"/></name><operator pos:line="27" pos:column="7">-&gt;<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="9">disposition<pos:position pos:line="27" pos:column="20"/></name></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <name pos:line="27" pos:column="23">DISPINLINE<pos:position pos:line="27" pos:column="33"/></name></expr>;<pos:position pos:line="27" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="29" pos:column="3">mutt_parse_mime_message<pos:position pos:line="29" pos:column="26"/></name> <argument_list pos:line="29" pos:column="27">(<argument><expr><name pos:line="29" pos:column="28">ctx<pos:position pos:line="29" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="33">hdr<pos:position pos:line="29" pos:column="36"/></name></expr></argument>)<pos:position pos:line="29" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="38"/></expr_stmt>

  <expr_stmt><expr><name pos:line="31" pos:column="3">chflags<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">=<pos:position pos:line="31" pos:column="12"/></operator> <name pos:line="31" pos:column="13">CH_XMIT<pos:position pos:line="31" pos:column="20"/></name></expr>;<pos:position pos:line="31" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="32" pos:column="3">cmflags<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">=<pos:position pos:line="32" pos:column="12"/></operator> <literal type="number" pos:line="32" pos:column="13">0<pos:position pos:line="32" pos:column="14"/></literal></expr>;<pos:position pos:line="32" pos:column="15"/></expr_stmt>

  <comment type="block" pos:line="34" pos:column="3">/* If we are attaching a message, ignore OPTMIMEFORWDECODE */</comment>
  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><operator pos:line="35" pos:column="7">!<pos:position pos:line="35" pos:column="8"/></operator><name pos:line="35" pos:column="8">attach_msg<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">&amp;&amp;<pos:position pos:line="35" pos:column="29"/></operator> <call><name pos:line="35" pos:column="22">option<pos:position pos:line="35" pos:column="28"/></name> <argument_list pos:line="35" pos:column="29">(<argument><expr><name pos:line="35" pos:column="30">OPTMIMEFORWDECODE<pos:position pos:line="35" pos:column="47"/></name></expr></argument>)<pos:position pos:line="35" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="49"/></condition><then pos:line="35" pos:column="49">
  <block pos:line="36" pos:column="3">{
    <expr_stmt><expr><name pos:line="37" pos:column="5">chflags<pos:position pos:line="37" pos:column="12"/></name> <operator pos:line="37" pos:column="13">|=<pos:position pos:line="37" pos:column="15"/></operator> <name pos:line="37" pos:column="16">CH_MIME<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">|<pos:position pos:line="37" pos:column="25"/></operator> <name pos:line="37" pos:column="26">CH_TXTPLAIN<pos:position pos:line="37" pos:column="37"/></name></expr>;<pos:position pos:line="37" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="38" pos:column="5">cmflags<pos:position pos:line="38" pos:column="12"/></name> <operator pos:line="38" pos:column="13">=<pos:position pos:line="38" pos:column="14"/></operator> <name pos:line="38" pos:column="15">M_CM_DECODE<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">|<pos:position pos:line="38" pos:column="28"/></operator> <name pos:line="38" pos:column="29">M_CM_CHARCONV<pos:position pos:line="38" pos:column="42"/></name></expr>;<pos:position pos:line="38" pos:column="43"/></expr_stmt>
<cpp:ifdef pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">ifdef<pos:position pos:line="39" pos:column="7"/></cpp:directive> <name pos:line="39" pos:column="8">HAVE_PGP<pos:position pos:line="39" pos:column="16"/></name></cpp:ifdef>
    <expr_stmt><expr><name pos:line="40" pos:column="5">pgp<pos:position pos:line="40" pos:column="8"/></name> <operator pos:line="40" pos:column="9">&amp;=<pos:position pos:line="40" pos:column="15"/></operator> <operator pos:line="40" pos:column="12">~<pos:position pos:line="40" pos:column="13"/></operator><name pos:line="40" pos:column="13">PGPENCRYPT<pos:position pos:line="40" pos:column="23"/></name></expr>;<pos:position pos:line="40" pos:column="24"/></expr_stmt>
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="42" pos:column="4"/></block></then>
<cpp:ifdef pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">ifdef<pos:position pos:line="43" pos:column="7"/></cpp:directive> <name pos:line="43" pos:column="8">HAVE_PGP<pos:position pos:line="43" pos:column="16"/></name></cpp:ifdef>
  <elseif pos:line="44" pos:column="3">else
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><call><name pos:line="45" pos:column="9">option<pos:position pos:line="45" pos:column="15"/></name> <argument_list pos:line="45" pos:column="16">(<argument><expr><name pos:line="45" pos:column="17">OPTFORWDECRYPT<pos:position pos:line="45" pos:column="31"/></name></expr></argument>)<pos:position pos:line="45" pos:column="32"/></argument_list></call>
       <operator pos:line="46" pos:column="8">&amp;&amp;<pos:position pos:line="46" pos:column="18"/></operator> <operator pos:line="46" pos:column="11">(<pos:position pos:line="46" pos:column="12"/></operator><name><name pos:line="46" pos:column="12">hdr<pos:position pos:line="46" pos:column="15"/></name><operator pos:line="46" pos:column="15">-&gt;<pos:position pos:line="46" pos:column="20"/></operator><name pos:line="46" pos:column="17">pgp<pos:position pos:line="46" pos:column="20"/></name></name> <operator pos:line="46" pos:column="21">&amp;<pos:position pos:line="46" pos:column="26"/></operator> <name pos:line="46" pos:column="23">PGPENCRYPT<pos:position pos:line="46" pos:column="33"/></name><operator pos:line="46" pos:column="33">)<pos:position pos:line="46" pos:column="34"/></operator></expr>)<pos:position pos:line="46" pos:column="35"/></condition><then pos:line="46" pos:column="35">
  <block pos:line="47" pos:column="3">{
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><call><name pos:line="48" pos:column="9">mutt_is_multipart_encrypted<pos:position pos:line="48" pos:column="36"/></name> <argument_list pos:line="48" pos:column="37">(<argument><expr><name><name pos:line="48" pos:column="38">hdr<pos:position pos:line="48" pos:column="41"/></name><operator pos:line="48" pos:column="41">-&gt;<pos:position pos:line="48" pos:column="46"/></operator><name pos:line="48" pos:column="43">content<pos:position pos:line="48" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="52"/></condition><then pos:line="48" pos:column="52">
    <block pos:line="49" pos:column="5">{
      <expr_stmt><expr><name pos:line="50" pos:column="7">chflags<pos:position pos:line="50" pos:column="14"/></name> <operator pos:line="50" pos:column="15">|=<pos:position pos:line="50" pos:column="17"/></operator> <name pos:line="50" pos:column="18">CH_MIME<pos:position pos:line="50" pos:column="25"/></name> <operator pos:line="50" pos:column="26">|<pos:position pos:line="50" pos:column="27"/></operator> <name pos:line="50" pos:column="28">CH_NONEWLINE<pos:position pos:line="50" pos:column="40"/></name></expr>;<pos:position pos:line="50" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name pos:line="51" pos:column="7">cmflags<pos:position pos:line="51" pos:column="14"/></name> <operator pos:line="51" pos:column="15">=<pos:position pos:line="51" pos:column="16"/></operator> <name pos:line="51" pos:column="17">M_CM_DECODE_PGP<pos:position pos:line="51" pos:column="32"/></name></expr>;<pos:position pos:line="51" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name pos:line="52" pos:column="7">pgp<pos:position pos:line="52" pos:column="10"/></name> <operator pos:line="52" pos:column="11">&amp;=<pos:position pos:line="52" pos:column="17"/></operator> <operator pos:line="52" pos:column="14">~<pos:position pos:line="52" pos:column="15"/></operator><name pos:line="52" pos:column="15">PGPENCRYPT<pos:position pos:line="52" pos:column="25"/></name></expr>;<pos:position pos:line="52" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then>
    <elseif pos:line="54" pos:column="5">else <if pos:line="54" pos:column="10">if <condition pos:line="54" pos:column="13">(<expr><call><name pos:line="54" pos:column="14">mutt_is_application_pgp<pos:position pos:line="54" pos:column="37"/></name> <argument_list pos:line="54" pos:column="38">(<argument><expr><name><name pos:line="54" pos:column="39">hdr<pos:position pos:line="54" pos:column="42"/></name><operator pos:line="54" pos:column="42">-&gt;<pos:position pos:line="54" pos:column="47"/></operator><name pos:line="54" pos:column="44">content<pos:position pos:line="54" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="52"/></argument_list></call> <operator pos:line="54" pos:column="53">&amp;<pos:position pos:line="54" pos:column="58"/></operator> <name pos:line="54" pos:column="55">PGPENCRYPT<pos:position pos:line="54" pos:column="65"/></name></expr>)<pos:position pos:line="54" pos:column="66"/></condition><then pos:line="54" pos:column="66">
    <block pos:line="55" pos:column="5">{
      <expr_stmt><expr><name pos:line="56" pos:column="7">chflags<pos:position pos:line="56" pos:column="14"/></name> <operator pos:line="56" pos:column="15">|=<pos:position pos:line="56" pos:column="17"/></operator> <name pos:line="56" pos:column="18">CH_MIME<pos:position pos:line="56" pos:column="25"/></name> <operator pos:line="56" pos:column="26">|<pos:position pos:line="56" pos:column="27"/></operator> <name pos:line="56" pos:column="28">CH_TXTPLAIN<pos:position pos:line="56" pos:column="39"/></name></expr>;<pos:position pos:line="56" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name pos:line="57" pos:column="7">cmflags<pos:position pos:line="57" pos:column="14"/></name> <operator pos:line="57" pos:column="15">=<pos:position pos:line="57" pos:column="16"/></operator> <name pos:line="57" pos:column="17">M_CM_DECODE<pos:position pos:line="57" pos:column="28"/></name> <operator pos:line="57" pos:column="29">|<pos:position pos:line="57" pos:column="30"/></operator> <name pos:line="57" pos:column="31">M_CM_CHARCONV<pos:position pos:line="57" pos:column="44"/></name></expr>;<pos:position pos:line="57" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name pos:line="58" pos:column="7">pgp<pos:position pos:line="58" pos:column="10"/></name> <operator pos:line="58" pos:column="11">&amp;=<pos:position pos:line="58" pos:column="17"/></operator> <operator pos:line="58" pos:column="14">~<pos:position pos:line="58" pos:column="15"/></operator><name pos:line="58" pos:column="15">PGPENCRYPT<pos:position pos:line="58" pos:column="25"/></name></expr>;<pos:position pos:line="58" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="60" pos:column="4"/></block></then></if></elseif></if>
<cpp:endif pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">endif<pos:position pos:line="61" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="63" pos:column="3">mutt_copy_message<pos:position pos:line="63" pos:column="20"/></name> <argument_list pos:line="63" pos:column="21">(<argument><expr><name pos:line="63" pos:column="22">fp<pos:position pos:line="63" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="26">ctx<pos:position pos:line="63" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="31">hdr<pos:position pos:line="63" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="36">cmflags<pos:position pos:line="63" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="45">chflags<pos:position pos:line="63" pos:column="52"/></name></expr></argument>)<pos:position pos:line="63" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="54"/></expr_stmt>
  
  <expr_stmt><expr><call><name pos:line="65" pos:column="3">fflush<pos:position pos:line="65" pos:column="9"/></name><argument_list pos:line="65" pos:column="9">(<argument><expr><name pos:line="65" pos:column="10">fp<pos:position pos:line="65" pos:column="12"/></name></expr></argument>)<pos:position pos:line="65" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="66" pos:column="3">rewind<pos:position pos:line="66" pos:column="9"/></name><argument_list pos:line="66" pos:column="9">(<argument><expr><name pos:line="66" pos:column="10">fp<pos:position pos:line="66" pos:column="12"/></name></expr></argument>)<pos:position pos:line="66" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="14"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="68" pos:column="3">body<pos:position pos:line="68" pos:column="7"/></name><operator pos:line="68" pos:column="7">-&gt;<pos:position pos:line="68" pos:column="12"/></operator><name pos:line="68" pos:column="9">hdr<pos:position pos:line="68" pos:column="12"/></name></name> <operator pos:line="68" pos:column="13">=<pos:position pos:line="68" pos:column="14"/></operator> <call><name pos:line="68" pos:column="15">mutt_new_header<pos:position pos:line="68" pos:column="30"/></name><argument_list pos:line="68" pos:column="30">()<pos:position pos:line="68" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="69" pos:column="3">body<pos:position pos:line="69" pos:column="7"/></name><operator pos:line="69" pos:column="7">-&gt;<pos:position pos:line="69" pos:column="12"/></operator><name pos:line="69" pos:column="9">hdr<pos:position pos:line="69" pos:column="12"/></name><operator pos:line="69" pos:column="12">-&gt;<pos:position pos:line="69" pos:column="17"/></operator><name pos:line="69" pos:column="14">offset<pos:position pos:line="69" pos:column="20"/></name></name> <operator pos:line="69" pos:column="21">=<pos:position pos:line="69" pos:column="22"/></operator> <literal type="number" pos:line="69" pos:column="23">0<pos:position pos:line="69" pos:column="24"/></literal></expr>;<pos:position pos:line="69" pos:column="25"/></expr_stmt>
  <comment type="block" pos:line="70" pos:column="3">/* we don't need the user headers here */</comment>
  <expr_stmt><expr><name><name pos:line="71" pos:column="3">body<pos:position pos:line="71" pos:column="7"/></name><operator pos:line="71" pos:column="7">-&gt;<pos:position pos:line="71" pos:column="12"/></operator><name pos:line="71" pos:column="9">hdr<pos:position pos:line="71" pos:column="12"/></name><operator pos:line="71" pos:column="12">-&gt;<pos:position pos:line="71" pos:column="17"/></operator><name pos:line="71" pos:column="14">env<pos:position pos:line="71" pos:column="17"/></name></name> <operator pos:line="71" pos:column="18">=<pos:position pos:line="71" pos:column="19"/></operator> <call><name pos:line="71" pos:column="20">mutt_read_rfc822_header<pos:position pos:line="71" pos:column="43"/></name><argument_list pos:line="71" pos:column="43">(<argument><expr><name pos:line="71" pos:column="44">fp<pos:position pos:line="71" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="48">body<pos:position pos:line="71" pos:column="52"/></name><operator pos:line="71" pos:column="52">-&gt;<pos:position pos:line="71" pos:column="57"/></operator><name pos:line="71" pos:column="54">hdr<pos:position pos:line="71" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="59">0<pos:position pos:line="71" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="62">0<pos:position pos:line="71" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="65"/></expr_stmt>
<cpp:ifdef pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">ifdef<pos:position pos:line="72" pos:column="7"/></cpp:directive> <name pos:line="72" pos:column="8">HAVE_PGP<pos:position pos:line="72" pos:column="16"/></name></cpp:ifdef>
  <expr_stmt><expr><name><name pos:line="73" pos:column="3">body<pos:position pos:line="73" pos:column="7"/></name><operator pos:line="73" pos:column="7">-&gt;<pos:position pos:line="73" pos:column="12"/></operator><name pos:line="73" pos:column="9">hdr<pos:position pos:line="73" pos:column="12"/></name><operator pos:line="73" pos:column="12">-&gt;<pos:position pos:line="73" pos:column="17"/></operator><name pos:line="73" pos:column="14">pgp<pos:position pos:line="73" pos:column="17"/></name></name> <operator pos:line="73" pos:column="18">=<pos:position pos:line="73" pos:column="19"/></operator> <name pos:line="73" pos:column="20">pgp<pos:position pos:line="73" pos:column="23"/></name></expr>;<pos:position pos:line="73" pos:column="24"/></expr_stmt>
<cpp:endif pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">endif<pos:position pos:line="74" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="74" pos:column="8">/* HAVE_PGP */</comment>
  <expr_stmt><expr><call><name pos:line="75" pos:column="3">mutt_update_encoding<pos:position pos:line="75" pos:column="23"/></name> <argument_list pos:line="75" pos:column="24">(<argument><expr><name pos:line="75" pos:column="25">body<pos:position pos:line="75" pos:column="29"/></name></expr></argument>)<pos:position pos:line="75" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="76" pos:column="3">body<pos:position pos:line="76" pos:column="7"/></name><operator pos:line="76" pos:column="7">-&gt;<pos:position pos:line="76" pos:column="12"/></operator><name pos:line="76" pos:column="9">parts<pos:position pos:line="76" pos:column="14"/></name></name> <operator pos:line="76" pos:column="15">=<pos:position pos:line="76" pos:column="16"/></operator> <name><name pos:line="76" pos:column="17">body<pos:position pos:line="76" pos:column="21"/></name><operator pos:line="76" pos:column="21">-&gt;<pos:position pos:line="76" pos:column="26"/></operator><name pos:line="76" pos:column="23">hdr<pos:position pos:line="76" pos:column="26"/></name><operator pos:line="76" pos:column="26">-&gt;<pos:position pos:line="76" pos:column="31"/></operator><name pos:line="76" pos:column="28">content<pos:position pos:line="76" pos:column="35"/></name></name></expr>;<pos:position pos:line="76" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="78" pos:column="3">fclose<pos:position pos:line="78" pos:column="9"/></name><argument_list pos:line="78" pos:column="9">(<argument><expr><name pos:line="78" pos:column="10">fp<pos:position pos:line="78" pos:column="12"/></name></expr></argument>)<pos:position pos:line="78" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="14"/></expr_stmt>
  
  <return pos:line="80" pos:column="3">return <expr><operator pos:line="80" pos:column="10">(<pos:position pos:line="80" pos:column="11"/></operator><name pos:line="80" pos:column="11">body<pos:position pos:line="80" pos:column="15"/></name><operator pos:line="80" pos:column="15">)<pos:position pos:line="80" pos:column="16"/></operator></expr>;<pos:position pos:line="80" pos:column="17"/></return>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

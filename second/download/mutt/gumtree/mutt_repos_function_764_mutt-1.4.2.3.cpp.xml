<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_764_mutt-1.4.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rfc2047_decode_word<pos:position pos:line="1" pos:column="31"/></name> <parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">d<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">s<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">size_t<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">len<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">pp<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><name pos:line="3" pos:column="20">s<pos:position pos:line="3" pos:column="21"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="24">pp1<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">pd<pos:position pos:line="4" pos:column="11"/></name></decl>, <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="14">d0<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">t<pos:position pos:line="5" pos:column="16"/></name></decl>, <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="19">t1<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">enc<pos:position pos:line="6" pos:column="10"/></name> <init pos:line="6" pos:column="11">= <expr><literal type="number" pos:line="6" pos:column="13">0<pos:position pos:line="6" pos:column="14"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="16">count<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="27">c1<pos:position pos:line="6" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="31">c2<pos:position pos:line="6" pos:column="33"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="35">c3<pos:position pos:line="6" pos:column="37"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="39">c4<pos:position pos:line="6" pos:column="41"/></name></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">charset<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><name pos:line="7" pos:column="19">NULL<pos:position pos:line="7" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">pd<pos:position pos:line="9" pos:column="5"/></name> <operator pos:line="9" pos:column="6">=<pos:position pos:line="9" pos:column="7"/></operator> <name pos:line="9" pos:column="8">d0<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <call><name pos:line="9" pos:column="13">safe_malloc<pos:position pos:line="9" pos:column="24"/></name> <argument_list pos:line="9" pos:column="25">(<argument><expr><call><name pos:line="9" pos:column="26">strlen<pos:position pos:line="9" pos:column="32"/></name> <argument_list pos:line="9" pos:column="33">(<argument><expr><name pos:line="9" pos:column="34">s<pos:position pos:line="9" pos:column="35"/></name></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>

  <for pos:line="11" pos:column="3">for <control pos:line="11" pos:column="7">(<init><expr><name pos:line="11" pos:column="8">pp<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <name pos:line="11" pos:column="13">s<pos:position pos:line="11" pos:column="14"/></name></expr>;<pos:position pos:line="11" pos:column="15"/></init> <condition><expr><operator pos:line="11" pos:column="16">(<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">pp1<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <call><name pos:line="11" pos:column="23">strchr<pos:position pos:line="11" pos:column="29"/></name> <argument_list pos:line="11" pos:column="30">(<argument><expr><name pos:line="11" pos:column="31">pp<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="11" pos:column="35">'?'<pos:position pos:line="11" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call><operator pos:line="11" pos:column="39">)<pos:position pos:line="11" pos:column="40"/></operator></expr>;<pos:position pos:line="11" pos:column="41"/></condition> <incr><expr><name pos:line="11" pos:column="42">pp<pos:position pos:line="11" pos:column="44"/></name> <operator pos:line="11" pos:column="45">=<pos:position pos:line="11" pos:column="46"/></operator> <name pos:line="11" pos:column="47">pp1<pos:position pos:line="11" pos:column="50"/></name> <operator pos:line="11" pos:column="51">+<pos:position pos:line="11" pos:column="52"/></operator> <literal type="number" pos:line="11" pos:column="53">1<pos:position pos:line="11" pos:column="54"/></literal></expr></incr>)<pos:position pos:line="11" pos:column="55"/></control>
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><name pos:line="13" pos:column="5">count<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">++<pos:position pos:line="13" pos:column="12"/></operator></expr>;<pos:position pos:line="13" pos:column="13"/></expr_stmt>
    <switch pos:line="14" pos:column="5">switch <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">count<pos:position pos:line="14" pos:column="18"/></name></expr>)<pos:position pos:line="14" pos:column="19"/></condition>
    <block pos:line="15" pos:column="5">{
      <case pos:line="16" pos:column="7">case <expr><literal type="number" pos:line="16" pos:column="12">2<pos:position pos:line="16" pos:column="13"/></literal></expr>:<pos:position pos:line="16" pos:column="14"/></case>
	<comment type="block" pos:line="17" pos:column="9">/* ignore language specification a la RFC 2231 */</comment>        
	<expr_stmt><expr><name pos:line="18" pos:column="9">t<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <name pos:line="18" pos:column="13">pp1<pos:position pos:line="18" pos:column="16"/></name></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">(<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">t1<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <call><name pos:line="19" pos:column="19">memchr<pos:position pos:line="19" pos:column="25"/></name> <argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">pp<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="19" pos:column="31">'*'<pos:position pos:line="19" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="36">t<pos:position pos:line="19" pos:column="37"/></name> <operator pos:line="19" pos:column="38">-<pos:position pos:line="19" pos:column="39"/></operator> <name pos:line="19" pos:column="40">pp<pos:position pos:line="19" pos:column="42"/></name></expr></argument>)<pos:position pos:line="19" pos:column="43"/></argument_list></call><operator pos:line="19" pos:column="43">)<pos:position pos:line="19" pos:column="44"/></operator></expr>)<pos:position pos:line="19" pos:column="45"/></condition><then pos:line="19" pos:column="45">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="11">t<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <name pos:line="20" pos:column="15">t1<pos:position pos:line="20" pos:column="17"/></name></expr>;<pos:position pos:line="20" pos:column="18"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="21" pos:column="9">charset<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <call><name pos:line="21" pos:column="19">safe_malloc<pos:position pos:line="21" pos:column="30"/></name> <argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">t<pos:position pos:line="21" pos:column="33"/></name> <operator pos:line="21" pos:column="34">-<pos:position pos:line="21" pos:column="35"/></operator> <name pos:line="21" pos:column="36">pp<pos:position pos:line="21" pos:column="38"/></name> <operator pos:line="21" pos:column="39">+<pos:position pos:line="21" pos:column="40"/></operator> <literal type="number" pos:line="21" pos:column="41">1<pos:position pos:line="21" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">memcpy<pos:position pos:line="22" pos:column="15"/></name> <argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">charset<pos:position pos:line="22" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="26">pp<pos:position pos:line="22" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="30">t<pos:position pos:line="22" pos:column="31"/></name> <operator pos:line="22" pos:column="32">-<pos:position pos:line="22" pos:column="33"/></operator> <name pos:line="22" pos:column="34">pp<pos:position pos:line="22" pos:column="36"/></name></expr></argument>)<pos:position pos:line="22" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="23" pos:column="9">charset<pos:position pos:line="23" pos:column="16"/></name><index pos:line="23" pos:column="16">[<expr><name pos:line="23" pos:column="17">t<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">-<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">pp<pos:position pos:line="23" pos:column="21"/></name></expr>]<pos:position pos:line="23" pos:column="22"/></index></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <literal type="char" pos:line="23" pos:column="25">'\0'<pos:position pos:line="23" pos:column="29"/></literal></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
	<break pos:line="24" pos:column="9">break;<pos:position pos:line="24" pos:column="15"/></break>
      <case pos:line="25" pos:column="7">case <expr><literal type="number" pos:line="25" pos:column="12">3<pos:position pos:line="25" pos:column="13"/></literal></expr>:<pos:position pos:line="25" pos:column="14"/></case>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><call><name pos:line="26" pos:column="13">toupper<pos:position pos:line="26" pos:column="20"/></name> <argument_list pos:line="26" pos:column="21">(<argument><expr><operator pos:line="26" pos:column="22">*<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="23">pp<pos:position pos:line="26" pos:column="25"/></name></expr></argument>)<pos:position pos:line="26" pos:column="26"/></argument_list></call> <operator pos:line="26" pos:column="27">==<pos:position pos:line="26" pos:column="29"/></operator> <literal type="char" pos:line="26" pos:column="30">'Q'<pos:position pos:line="26" pos:column="33"/></literal></expr>)<pos:position pos:line="26" pos:column="34"/></condition><then pos:line="26" pos:column="34">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="11">enc<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <name pos:line="27" pos:column="17">ENCQUOTEDPRINTABLE<pos:position pos:line="27" pos:column="35"/></name></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt></block></then>
	<elseif pos:line="28" pos:column="9">else <if pos:line="28" pos:column="14">if <condition pos:line="28" pos:column="17">(<expr><call><name pos:line="28" pos:column="18">toupper<pos:position pos:line="28" pos:column="25"/></name> <argument_list pos:line="28" pos:column="26">(<argument><expr><operator pos:line="28" pos:column="27">*<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="28">pp<pos:position pos:line="28" pos:column="30"/></name></expr></argument>)<pos:position pos:line="28" pos:column="31"/></argument_list></call> <operator pos:line="28" pos:column="32">==<pos:position pos:line="28" pos:column="34"/></operator> <literal type="char" pos:line="28" pos:column="35">'B'<pos:position pos:line="28" pos:column="38"/></literal></expr>)<pos:position pos:line="28" pos:column="39"/></condition><then pos:line="28" pos:column="39">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="11">enc<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator> <name pos:line="29" pos:column="17">ENCBASE64<pos:position pos:line="29" pos:column="26"/></name></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt></block></then></if></elseif>
	<else pos:line="30" pos:column="9">else
	<block pos:line="31" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="32" pos:column="11">safe_free<pos:position pos:line="32" pos:column="20"/></name> <argument_list pos:line="32" pos:column="21">(<argument><expr><operator pos:line="32" pos:column="22">(<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="23">void<pos:position pos:line="32" pos:column="27"/></name> <operator pos:line="32" pos:column="28">*<pos:position pos:line="32" pos:column="29"/></operator><operator pos:line="32" pos:column="29">*<pos:position pos:line="32" pos:column="30"/></operator><operator pos:line="32" pos:column="30">)<pos:position pos:line="32" pos:column="31"/></operator> <operator pos:line="32" pos:column="32">&amp;<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="33">charset<pos:position pos:line="32" pos:column="40"/></name></expr></argument>)<pos:position pos:line="32" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="42"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="33" pos:column="11">safe_free<pos:position pos:line="33" pos:column="20"/></name> <argument_list pos:line="33" pos:column="21">(<argument><expr><operator pos:line="33" pos:column="22">(<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="23">void<pos:position pos:line="33" pos:column="27"/></name> <operator pos:line="33" pos:column="28">*<pos:position pos:line="33" pos:column="29"/></operator><operator pos:line="33" pos:column="29">*<pos:position pos:line="33" pos:column="30"/></operator><operator pos:line="33" pos:column="30">)<pos:position pos:line="33" pos:column="31"/></operator> <operator pos:line="33" pos:column="32">&amp;<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="33">d0<pos:position pos:line="33" pos:column="35"/></name></expr></argument>)<pos:position pos:line="33" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt>
	  <return pos:line="34" pos:column="11">return <expr><operator pos:line="34" pos:column="18">(<pos:position pos:line="34" pos:column="19"/></operator><operator pos:line="34" pos:column="19">-<pos:position pos:line="34" pos:column="20"/></operator><literal type="number" pos:line="34" pos:column="20">1<pos:position pos:line="34" pos:column="21"/></literal><operator pos:line="34" pos:column="21">)<pos:position pos:line="34" pos:column="22"/></operator></expr>;<pos:position pos:line="34" pos:column="23"/></return>
	}<pos:position pos:line="35" pos:column="10"/></block></else></if>
	<break pos:line="36" pos:column="9">break;<pos:position pos:line="36" pos:column="15"/></break>
      <case pos:line="37" pos:column="7">case <expr><literal type="number" pos:line="37" pos:column="12">4<pos:position pos:line="37" pos:column="13"/></literal></expr>:<pos:position pos:line="37" pos:column="14"/></case>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">enc<pos:position pos:line="38" pos:column="16"/></name> <operator pos:line="38" pos:column="17">==<pos:position pos:line="38" pos:column="19"/></operator> <name pos:line="38" pos:column="20">ENCQUOTEDPRINTABLE<pos:position pos:line="38" pos:column="38"/></name></expr>)<pos:position pos:line="38" pos:column="39"/></condition><then pos:line="38" pos:column="39">
	<block pos:line="39" pos:column="9">{
	  <while pos:line="40" pos:column="11">while <condition pos:line="40" pos:column="17">(<expr><name><name pos:line="40" pos:column="18">pp<pos:position pos:line="40" pos:column="20"/></name> <argument_list type="generic" pos:line="40" pos:column="21">&lt; <argument><expr><name pos:line="40" pos:column="23">pp1<pos:position pos:line="40" pos:column="26"/></name> <operator pos:line="40" pos:column="27">&amp;&amp;<pos:position pos:line="40" pos:column="37"/></operator> <name pos:line="40" pos:column="30">len<pos:position pos:line="40" pos:column="33"/></name></expr></argument> &gt;<pos:position pos:line="40" pos:column="38"/></argument_list></name> <literal type="number" pos:line="40" pos:column="36">0<pos:position pos:line="40" pos:column="37"/></literal></expr>)<pos:position pos:line="40" pos:column="38"/></condition>
	  <block pos:line="41" pos:column="11">{
	    <if pos:line="42" pos:column="13">if <condition pos:line="42" pos:column="16">(<expr><operator pos:line="42" pos:column="17">*<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="18">pp<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">==<pos:position pos:line="42" pos:column="23"/></operator> <literal type="char" pos:line="42" pos:column="24">'_'<pos:position pos:line="42" pos:column="27"/></literal></expr>)<pos:position pos:line="42" pos:column="28"/></condition><then pos:line="42" pos:column="28">
	    <block pos:line="43" pos:column="13">{
	      <expr_stmt><expr><operator pos:line="44" pos:column="15">*<pos:position pos:line="44" pos:column="16"/></operator><name pos:line="44" pos:column="16">pd<pos:position pos:line="44" pos:column="18"/></name><operator pos:line="44" pos:column="18">++<pos:position pos:line="44" pos:column="20"/></operator> <operator pos:line="44" pos:column="21">=<pos:position pos:line="44" pos:column="22"/></operator> <literal type="char" pos:line="44" pos:column="23">' '<pos:position pos:line="44" pos:column="26"/></literal></expr>;<pos:position pos:line="44" pos:column="27"/></expr_stmt>
	      <expr_stmt><expr><name pos:line="45" pos:column="15">len<pos:position pos:line="45" pos:column="18"/></name><operator pos:line="45" pos:column="18">--<pos:position pos:line="45" pos:column="20"/></operator></expr>;<pos:position pos:line="45" pos:column="21"/></expr_stmt>
	    }<pos:position pos:line="46" pos:column="14"/></block></then>
	    <elseif pos:line="47" pos:column="13">else <if pos:line="47" pos:column="18">if <condition pos:line="47" pos:column="21">(<expr><operator pos:line="47" pos:column="22">*<pos:position pos:line="47" pos:column="23"/></operator><name pos:line="47" pos:column="23">pp<pos:position pos:line="47" pos:column="25"/></name> <operator pos:line="47" pos:column="26">==<pos:position pos:line="47" pos:column="28"/></operator> <literal type="char" pos:line="47" pos:column="29">'='<pos:position pos:line="47" pos:column="32"/></literal></expr>)<pos:position pos:line="47" pos:column="33"/></condition><then pos:line="47" pos:column="33">
	    <block pos:line="48" pos:column="13">{
	      <if pos:line="49" pos:column="15">if <condition pos:line="49" pos:column="18">(<expr><name><name pos:line="49" pos:column="19">pp<pos:position pos:line="49" pos:column="21"/></name><index pos:line="49" pos:column="21">[<expr><literal type="number" pos:line="49" pos:column="22">1<pos:position pos:line="49" pos:column="23"/></literal></expr>]<pos:position pos:line="49" pos:column="24"/></index></name> <operator pos:line="49" pos:column="25">==<pos:position pos:line="49" pos:column="27"/></operator> <literal type="number" pos:line="49" pos:column="28">0<pos:position pos:line="49" pos:column="29"/></literal> <operator pos:line="49" pos:column="30">||<pos:position pos:line="49" pos:column="32"/></operator> <name><name pos:line="49" pos:column="33">pp<pos:position pos:line="49" pos:column="35"/></name><index pos:line="49" pos:column="35">[<expr><literal type="number" pos:line="49" pos:column="36">2<pos:position pos:line="49" pos:column="37"/></literal></expr>]<pos:position pos:line="49" pos:column="38"/></index></name> <operator pos:line="49" pos:column="39">==<pos:position pos:line="49" pos:column="41"/></operator> <literal type="number" pos:line="49" pos:column="42">0<pos:position pos:line="49" pos:column="43"/></literal></expr>)<pos:position pos:line="49" pos:column="44"/></condition><then pos:line="49" pos:column="44">
		<block type="pseudo"><break pos:line="50" pos:column="17">break;<pos:position pos:line="50" pos:column="23"/></break></block></then></if>	<comment type="block" pos:line="50" pos:column="25">/* something wrong */</comment>
	      <expr_stmt><expr><operator pos:line="51" pos:column="15">*<pos:position pos:line="51" pos:column="16"/></operator><name pos:line="51" pos:column="16">pd<pos:position pos:line="51" pos:column="18"/></name><operator pos:line="51" pos:column="18">++<pos:position pos:line="51" pos:column="20"/></operator> <operator pos:line="51" pos:column="21">=<pos:position pos:line="51" pos:column="22"/></operator> <operator pos:line="51" pos:column="23">(<pos:position pos:line="51" pos:column="24"/></operator><call><name pos:line="51" pos:column="24">hexval<pos:position pos:line="51" pos:column="30"/></name><argument_list pos:line="51" pos:column="30">(<argument><expr><name><name pos:line="51" pos:column="31">pp<pos:position pos:line="51" pos:column="33"/></name><index pos:line="51" pos:column="33">[<expr><literal type="number" pos:line="51" pos:column="34">1<pos:position pos:line="51" pos:column="35"/></literal></expr>]<pos:position pos:line="51" pos:column="36"/></index></name></expr></argument>)<pos:position pos:line="51" pos:column="37"/></argument_list></call> <operator pos:line="51" pos:column="38">&lt;&lt;<pos:position pos:line="51" pos:column="46"/></operator> <literal type="number" pos:line="51" pos:column="41">4<pos:position pos:line="51" pos:column="42"/></literal><operator pos:line="51" pos:column="42">)<pos:position pos:line="51" pos:column="43"/></operator> <operator pos:line="51" pos:column="44">|<pos:position pos:line="51" pos:column="45"/></operator> <call><name pos:line="51" pos:column="46">hexval<pos:position pos:line="51" pos:column="52"/></name><argument_list pos:line="51" pos:column="52">(<argument><expr><name><name pos:line="51" pos:column="53">pp<pos:position pos:line="51" pos:column="55"/></name><index pos:line="51" pos:column="55">[<expr><literal type="number" pos:line="51" pos:column="56">2<pos:position pos:line="51" pos:column="57"/></literal></expr>]<pos:position pos:line="51" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="51" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="60"/></expr_stmt>
	      <expr_stmt><expr><name pos:line="52" pos:column="15">len<pos:position pos:line="52" pos:column="18"/></name><operator pos:line="52" pos:column="18">--<pos:position pos:line="52" pos:column="20"/></operator></expr>;<pos:position pos:line="52" pos:column="21"/></expr_stmt>
	      <expr_stmt><expr><name pos:line="53" pos:column="15">pp<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">+=<pos:position pos:line="53" pos:column="20"/></operator> <literal type="number" pos:line="53" pos:column="21">2<pos:position pos:line="53" pos:column="22"/></literal></expr>;<pos:position pos:line="53" pos:column="23"/></expr_stmt>
	    }<pos:position pos:line="54" pos:column="14"/></block></then></if></elseif>
	    <else pos:line="55" pos:column="13">else
	    <block pos:line="56" pos:column="13">{
	      <expr_stmt><expr><operator pos:line="57" pos:column="15">*<pos:position pos:line="57" pos:column="16"/></operator><name pos:line="57" pos:column="16">pd<pos:position pos:line="57" pos:column="18"/></name><operator pos:line="57" pos:column="18">++<pos:position pos:line="57" pos:column="20"/></operator> <operator pos:line="57" pos:column="21">=<pos:position pos:line="57" pos:column="22"/></operator> <operator pos:line="57" pos:column="23">*<pos:position pos:line="57" pos:column="24"/></operator><name pos:line="57" pos:column="24">pp<pos:position pos:line="57" pos:column="26"/></name></expr>;<pos:position pos:line="57" pos:column="27"/></expr_stmt>
	      <expr_stmt><expr><name pos:line="58" pos:column="15">len<pos:position pos:line="58" pos:column="18"/></name><operator pos:line="58" pos:column="18">--<pos:position pos:line="58" pos:column="20"/></operator></expr>;<pos:position pos:line="58" pos:column="21"/></expr_stmt>
	    }<pos:position pos:line="59" pos:column="14"/></block></else></if>
	    <expr_stmt><expr><name pos:line="60" pos:column="13">pp<pos:position pos:line="60" pos:column="15"/></name><operator pos:line="60" pos:column="15">++<pos:position pos:line="60" pos:column="17"/></operator></expr>;<pos:position pos:line="60" pos:column="18"/></expr_stmt>
	  }<pos:position pos:line="61" pos:column="12"/></block></while>
	  <expr_stmt><expr><operator pos:line="62" pos:column="11">*<pos:position pos:line="62" pos:column="12"/></operator><name pos:line="62" pos:column="12">pd<pos:position pos:line="62" pos:column="14"/></name> <operator pos:line="62" pos:column="15">=<pos:position pos:line="62" pos:column="16"/></operator> <literal type="number" pos:line="62" pos:column="17">0<pos:position pos:line="62" pos:column="18"/></literal></expr>;<pos:position pos:line="62" pos:column="19"/></expr_stmt>
	}<pos:position pos:line="63" pos:column="10"/></block></then>
	<elseif pos:line="64" pos:column="9">else <if pos:line="64" pos:column="14">if <condition pos:line="64" pos:column="17">(<expr><name pos:line="64" pos:column="18">enc<pos:position pos:line="64" pos:column="21"/></name> <operator pos:line="64" pos:column="22">==<pos:position pos:line="64" pos:column="24"/></operator> <name pos:line="64" pos:column="25">ENCBASE64<pos:position pos:line="64" pos:column="34"/></name></expr>)<pos:position pos:line="64" pos:column="35"/></condition><then pos:line="64" pos:column="35">
	<block pos:line="65" pos:column="9">{
	  <while pos:line="66" pos:column="11">while <condition pos:line="66" pos:column="17">(<expr><name><name pos:line="66" pos:column="18">pp<pos:position pos:line="66" pos:column="20"/></name> <argument_list type="generic" pos:line="66" pos:column="21">&lt; <argument><expr><name pos:line="66" pos:column="23">pp1<pos:position pos:line="66" pos:column="26"/></name> <operator pos:line="66" pos:column="27">&amp;&amp;<pos:position pos:line="66" pos:column="37"/></operator> <name pos:line="66" pos:column="30">len<pos:position pos:line="66" pos:column="33"/></name></expr></argument> &gt;<pos:position pos:line="66" pos:column="38"/></argument_list></name> <literal type="number" pos:line="66" pos:column="36">0<pos:position pos:line="66" pos:column="37"/></literal></expr>)<pos:position pos:line="66" pos:column="38"/></condition>
	  <block pos:line="67" pos:column="11">{
	    <if pos:line="68" pos:column="13">if <condition pos:line="68" pos:column="16">(<expr><name><name pos:line="68" pos:column="17">pp<pos:position pos:line="68" pos:column="19"/></name><index pos:line="68" pos:column="19">[<expr><literal type="number" pos:line="68" pos:column="20">0<pos:position pos:line="68" pos:column="21"/></literal></expr>]<pos:position pos:line="68" pos:column="22"/></index></name> <operator pos:line="68" pos:column="23">==<pos:position pos:line="68" pos:column="25"/></operator> <literal type="char" pos:line="68" pos:column="26">'='<pos:position pos:line="68" pos:column="29"/></literal> <operator pos:line="68" pos:column="30">||<pos:position pos:line="68" pos:column="32"/></operator> <name><name pos:line="68" pos:column="33">pp<pos:position pos:line="68" pos:column="35"/></name><index pos:line="68" pos:column="35">[<expr><literal type="number" pos:line="68" pos:column="36">1<pos:position pos:line="68" pos:column="37"/></literal></expr>]<pos:position pos:line="68" pos:column="38"/></index></name> <operator pos:line="68" pos:column="39">==<pos:position pos:line="68" pos:column="41"/></operator> <literal type="number" pos:line="68" pos:column="42">0<pos:position pos:line="68" pos:column="43"/></literal> <operator pos:line="68" pos:column="44">||<pos:position pos:line="68" pos:column="46"/></operator> <name><name pos:line="68" pos:column="47">pp<pos:position pos:line="68" pos:column="49"/></name><index pos:line="68" pos:column="49">[<expr><literal type="number" pos:line="68" pos:column="50">1<pos:position pos:line="68" pos:column="51"/></literal></expr>]<pos:position pos:line="68" pos:column="52"/></index></name> <operator pos:line="68" pos:column="53">==<pos:position pos:line="68" pos:column="55"/></operator> <literal type="char" pos:line="68" pos:column="56">'='<pos:position pos:line="68" pos:column="59"/></literal></expr>)<pos:position pos:line="68" pos:column="60"/></condition><then pos:line="68" pos:column="60">
	      <block type="pseudo"><break pos:line="69" pos:column="15">break;<pos:position pos:line="69" pos:column="21"/></break></block></then></if>  <comment type="block" pos:line="69" pos:column="23">/* something wrong */</comment>
	    <expr_stmt><expr><name pos:line="70" pos:column="13">c1<pos:position pos:line="70" pos:column="15"/></name> <operator pos:line="70" pos:column="16">=<pos:position pos:line="70" pos:column="17"/></operator> <call><name pos:line="70" pos:column="18">base64val<pos:position pos:line="70" pos:column="27"/></name><argument_list pos:line="70" pos:column="27">(<argument><expr><name><name pos:line="70" pos:column="28">pp<pos:position pos:line="70" pos:column="30"/></name><index pos:line="70" pos:column="30">[<expr><literal type="number" pos:line="70" pos:column="31">0<pos:position pos:line="70" pos:column="32"/></literal></expr>]<pos:position pos:line="70" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="70" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="35"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="71" pos:column="13">c2<pos:position pos:line="71" pos:column="15"/></name> <operator pos:line="71" pos:column="16">=<pos:position pos:line="71" pos:column="17"/></operator> <call><name pos:line="71" pos:column="18">base64val<pos:position pos:line="71" pos:column="27"/></name><argument_list pos:line="71" pos:column="27">(<argument><expr><name><name pos:line="71" pos:column="28">pp<pos:position pos:line="71" pos:column="30"/></name><index pos:line="71" pos:column="30">[<expr><literal type="number" pos:line="71" pos:column="31">1<pos:position pos:line="71" pos:column="32"/></literal></expr>]<pos:position pos:line="71" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="71" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="35"/></expr_stmt>
	    <expr_stmt><expr><operator pos:line="72" pos:column="13">*<pos:position pos:line="72" pos:column="14"/></operator><name pos:line="72" pos:column="14">pd<pos:position pos:line="72" pos:column="16"/></name><operator pos:line="72" pos:column="16">++<pos:position pos:line="72" pos:column="18"/></operator> <operator pos:line="72" pos:column="19">=<pos:position pos:line="72" pos:column="20"/></operator> <operator pos:line="72" pos:column="21">(<pos:position pos:line="72" pos:column="22"/></operator><name pos:line="72" pos:column="22">c1<pos:position pos:line="72" pos:column="24"/></name> <operator pos:line="72" pos:column="25">&lt;&lt;<pos:position pos:line="72" pos:column="33"/></operator> <literal type="number" pos:line="72" pos:column="28">2<pos:position pos:line="72" pos:column="29"/></literal><operator pos:line="72" pos:column="29">)<pos:position pos:line="72" pos:column="30"/></operator> <operator pos:line="72" pos:column="31">|<pos:position pos:line="72" pos:column="32"/></operator> <operator pos:line="72" pos:column="33">(<pos:position pos:line="72" pos:column="34"/></operator><operator pos:line="72" pos:column="34">(<pos:position pos:line="72" pos:column="35"/></operator><name pos:line="72" pos:column="35">c2<pos:position pos:line="72" pos:column="37"/></name> <operator pos:line="72" pos:column="38">&gt;&gt;<pos:position pos:line="72" pos:column="43"/></operator> <literal type="number" pos:line="72" pos:column="41">4<pos:position pos:line="72" pos:column="42"/></literal><operator pos:line="72" pos:column="42">)<pos:position pos:line="72" pos:column="43"/></operator> <operator pos:line="72" pos:column="44">&amp;<pos:position pos:line="72" pos:column="49"/></operator> <literal type="number" pos:line="72" pos:column="46">0x3<pos:position pos:line="72" pos:column="49"/></literal><operator pos:line="72" pos:column="49">)<pos:position pos:line="72" pos:column="50"/></operator></expr>;<pos:position pos:line="72" pos:column="51"/></expr_stmt>
	    <if pos:line="73" pos:column="13">if <condition pos:line="73" pos:column="16">(<expr><operator pos:line="73" pos:column="17">--<pos:position pos:line="73" pos:column="19"/></operator><name pos:line="73" pos:column="19">len<pos:position pos:line="73" pos:column="22"/></name> <operator pos:line="73" pos:column="23">==<pos:position pos:line="73" pos:column="25"/></operator> <literal type="number" pos:line="73" pos:column="26">0<pos:position pos:line="73" pos:column="27"/></literal></expr>)<pos:position pos:line="73" pos:column="28"/></condition><then pos:line="73" pos:column="28"> <block type="pseudo"><break pos:line="73" pos:column="29">break;<pos:position pos:line="73" pos:column="35"/></break></block></then></if>
	    
	    <if pos:line="75" pos:column="13">if <condition pos:line="75" pos:column="16">(<expr><name><name pos:line="75" pos:column="17">pp<pos:position pos:line="75" pos:column="19"/></name><index pos:line="75" pos:column="19">[<expr><literal type="number" pos:line="75" pos:column="20">2<pos:position pos:line="75" pos:column="21"/></literal></expr>]<pos:position pos:line="75" pos:column="22"/></index></name> <operator pos:line="75" pos:column="23">==<pos:position pos:line="75" pos:column="25"/></operator> <literal type="number" pos:line="75" pos:column="26">0<pos:position pos:line="75" pos:column="27"/></literal> <operator pos:line="75" pos:column="28">||<pos:position pos:line="75" pos:column="30"/></operator> <name><name pos:line="75" pos:column="31">pp<pos:position pos:line="75" pos:column="33"/></name><index pos:line="75" pos:column="33">[<expr><literal type="number" pos:line="75" pos:column="34">2<pos:position pos:line="75" pos:column="35"/></literal></expr>]<pos:position pos:line="75" pos:column="36"/></index></name> <operator pos:line="75" pos:column="37">==<pos:position pos:line="75" pos:column="39"/></operator> <literal type="char" pos:line="75" pos:column="40">'='<pos:position pos:line="75" pos:column="43"/></literal></expr>)<pos:position pos:line="75" pos:column="44"/></condition><then pos:line="75" pos:column="44"> <block type="pseudo"><break pos:line="75" pos:column="45">break;<pos:position pos:line="75" pos:column="51"/></break></block></then></if>

	    <expr_stmt><expr><name pos:line="77" pos:column="13">c3<pos:position pos:line="77" pos:column="15"/></name> <operator pos:line="77" pos:column="16">=<pos:position pos:line="77" pos:column="17"/></operator> <call><name pos:line="77" pos:column="18">base64val<pos:position pos:line="77" pos:column="27"/></name><argument_list pos:line="77" pos:column="27">(<argument><expr><name><name pos:line="77" pos:column="28">pp<pos:position pos:line="77" pos:column="30"/></name><index pos:line="77" pos:column="30">[<expr><literal type="number" pos:line="77" pos:column="31">2<pos:position pos:line="77" pos:column="32"/></literal></expr>]<pos:position pos:line="77" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="77" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="35"/></expr_stmt>
	    <expr_stmt><expr><operator pos:line="78" pos:column="13">*<pos:position pos:line="78" pos:column="14"/></operator><name pos:line="78" pos:column="14">pd<pos:position pos:line="78" pos:column="16"/></name><operator pos:line="78" pos:column="16">++<pos:position pos:line="78" pos:column="18"/></operator> <operator pos:line="78" pos:column="19">=<pos:position pos:line="78" pos:column="20"/></operator> <operator pos:line="78" pos:column="21">(<pos:position pos:line="78" pos:column="22"/></operator><operator pos:line="78" pos:column="22">(<pos:position pos:line="78" pos:column="23"/></operator><name pos:line="78" pos:column="23">c2<pos:position pos:line="78" pos:column="25"/></name> <operator pos:line="78" pos:column="26">&amp;<pos:position pos:line="78" pos:column="31"/></operator> <literal type="number" pos:line="78" pos:column="28">0xf<pos:position pos:line="78" pos:column="31"/></literal><operator pos:line="78" pos:column="31">)<pos:position pos:line="78" pos:column="32"/></operator> <operator pos:line="78" pos:column="33">&lt;&lt;<pos:position pos:line="78" pos:column="41"/></operator> <literal type="number" pos:line="78" pos:column="36">4<pos:position pos:line="78" pos:column="37"/></literal><operator pos:line="78" pos:column="37">)<pos:position pos:line="78" pos:column="38"/></operator> <operator pos:line="78" pos:column="39">|<pos:position pos:line="78" pos:column="40"/></operator> <operator pos:line="78" pos:column="41">(<pos:position pos:line="78" pos:column="42"/></operator><operator pos:line="78" pos:column="42">(<pos:position pos:line="78" pos:column="43"/></operator><name pos:line="78" pos:column="43">c3<pos:position pos:line="78" pos:column="45"/></name> <operator pos:line="78" pos:column="46">&gt;&gt;<pos:position pos:line="78" pos:column="51"/></operator> <literal type="number" pos:line="78" pos:column="49">2<pos:position pos:line="78" pos:column="50"/></literal><operator pos:line="78" pos:column="50">)<pos:position pos:line="78" pos:column="51"/></operator> <operator pos:line="78" pos:column="52">&amp;<pos:position pos:line="78" pos:column="57"/></operator> <literal type="number" pos:line="78" pos:column="54">0xf<pos:position pos:line="78" pos:column="57"/></literal><operator pos:line="78" pos:column="57">)<pos:position pos:line="78" pos:column="58"/></operator></expr>;<pos:position pos:line="78" pos:column="59"/></expr_stmt>
	    <if pos:line="79" pos:column="13">if <condition pos:line="79" pos:column="16">(<expr><operator pos:line="79" pos:column="17">--<pos:position pos:line="79" pos:column="19"/></operator><name pos:line="79" pos:column="19">len<pos:position pos:line="79" pos:column="22"/></name> <operator pos:line="79" pos:column="23">==<pos:position pos:line="79" pos:column="25"/></operator> <literal type="number" pos:line="79" pos:column="26">0<pos:position pos:line="79" pos:column="27"/></literal></expr>)<pos:position pos:line="79" pos:column="28"/></condition><then pos:line="79" pos:column="28">
	      <block type="pseudo"><break pos:line="80" pos:column="15">break;<pos:position pos:line="80" pos:column="21"/></break></block></then></if>

	    <if pos:line="82" pos:column="13">if <condition pos:line="82" pos:column="16">(<expr><name><name pos:line="82" pos:column="17">pp<pos:position pos:line="82" pos:column="19"/></name><index pos:line="82" pos:column="19">[<expr><literal type="number" pos:line="82" pos:column="20">3<pos:position pos:line="82" pos:column="21"/></literal></expr>]<pos:position pos:line="82" pos:column="22"/></index></name> <operator pos:line="82" pos:column="23">==<pos:position pos:line="82" pos:column="25"/></operator> <literal type="number" pos:line="82" pos:column="26">0<pos:position pos:line="82" pos:column="27"/></literal> <operator pos:line="82" pos:column="28">||<pos:position pos:line="82" pos:column="30"/></operator> <name><name pos:line="82" pos:column="31">pp<pos:position pos:line="82" pos:column="33"/></name><index pos:line="82" pos:column="33">[<expr><literal type="number" pos:line="82" pos:column="34">3<pos:position pos:line="82" pos:column="35"/></literal></expr>]<pos:position pos:line="82" pos:column="36"/></index></name> <operator pos:line="82" pos:column="37">==<pos:position pos:line="82" pos:column="39"/></operator> <literal type="char" pos:line="82" pos:column="40">'='<pos:position pos:line="82" pos:column="43"/></literal></expr>)<pos:position pos:line="82" pos:column="44"/></condition><then pos:line="82" pos:column="44">
	      <block type="pseudo"><break pos:line="83" pos:column="15">break;<pos:position pos:line="83" pos:column="21"/></break></block></then></if>

	    <expr_stmt><expr><name pos:line="85" pos:column="13">c4<pos:position pos:line="85" pos:column="15"/></name> <operator pos:line="85" pos:column="16">=<pos:position pos:line="85" pos:column="17"/></operator> <call><name pos:line="85" pos:column="18">base64val<pos:position pos:line="85" pos:column="27"/></name><argument_list pos:line="85" pos:column="27">(<argument><expr><name><name pos:line="85" pos:column="28">pp<pos:position pos:line="85" pos:column="30"/></name><index pos:line="85" pos:column="30">[<expr><literal type="number" pos:line="85" pos:column="31">3<pos:position pos:line="85" pos:column="32"/></literal></expr>]<pos:position pos:line="85" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="85" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="35"/></expr_stmt>
	    <expr_stmt><expr><operator pos:line="86" pos:column="13">*<pos:position pos:line="86" pos:column="14"/></operator><name pos:line="86" pos:column="14">pd<pos:position pos:line="86" pos:column="16"/></name><operator pos:line="86" pos:column="16">++<pos:position pos:line="86" pos:column="18"/></operator> <operator pos:line="86" pos:column="19">=<pos:position pos:line="86" pos:column="20"/></operator> <operator pos:line="86" pos:column="21">(<pos:position pos:line="86" pos:column="22"/></operator><operator pos:line="86" pos:column="22">(<pos:position pos:line="86" pos:column="23"/></operator><name pos:line="86" pos:column="23">c3<pos:position pos:line="86" pos:column="25"/></name> <operator pos:line="86" pos:column="26">&amp;<pos:position pos:line="86" pos:column="31"/></operator> <literal type="number" pos:line="86" pos:column="28">0x3<pos:position pos:line="86" pos:column="31"/></literal><operator pos:line="86" pos:column="31">)<pos:position pos:line="86" pos:column="32"/></operator> <operator pos:line="86" pos:column="33">&lt;&lt;<pos:position pos:line="86" pos:column="41"/></operator> <literal type="number" pos:line="86" pos:column="36">6<pos:position pos:line="86" pos:column="37"/></literal><operator pos:line="86" pos:column="37">)<pos:position pos:line="86" pos:column="38"/></operator> <operator pos:line="86" pos:column="39">|<pos:position pos:line="86" pos:column="40"/></operator> <name pos:line="86" pos:column="41">c4<pos:position pos:line="86" pos:column="43"/></name></expr>;<pos:position pos:line="86" pos:column="44"/></expr_stmt>
	    <if pos:line="87" pos:column="13">if <condition pos:line="87" pos:column="16">(<expr><operator pos:line="87" pos:column="17">--<pos:position pos:line="87" pos:column="19"/></operator><name pos:line="87" pos:column="19">len<pos:position pos:line="87" pos:column="22"/></name> <operator pos:line="87" pos:column="23">==<pos:position pos:line="87" pos:column="25"/></operator> <literal type="number" pos:line="87" pos:column="26">0<pos:position pos:line="87" pos:column="27"/></literal></expr>)<pos:position pos:line="87" pos:column="28"/></condition><then pos:line="87" pos:column="28">
	      <block type="pseudo"><break pos:line="88" pos:column="15">break;<pos:position pos:line="88" pos:column="21"/></break></block></then></if>

	    <expr_stmt><expr><name pos:line="90" pos:column="13">pp<pos:position pos:line="90" pos:column="15"/></name> <operator pos:line="90" pos:column="16">+=<pos:position pos:line="90" pos:column="18"/></operator> <literal type="number" pos:line="90" pos:column="19">4<pos:position pos:line="90" pos:column="20"/></literal></expr>;<pos:position pos:line="90" pos:column="21"/></expr_stmt>
	  }<pos:position pos:line="91" pos:column="12"/></block></while>
	  <expr_stmt><expr><operator pos:line="92" pos:column="11">*<pos:position pos:line="92" pos:column="12"/></operator><name pos:line="92" pos:column="12">pd<pos:position pos:line="92" pos:column="14"/></name> <operator pos:line="92" pos:column="15">=<pos:position pos:line="92" pos:column="16"/></operator> <literal type="number" pos:line="92" pos:column="17">0<pos:position pos:line="92" pos:column="18"/></literal></expr>;<pos:position pos:line="92" pos:column="19"/></expr_stmt>
	}<pos:position pos:line="93" pos:column="10"/></block></then></if></elseif></if>
	<break pos:line="94" pos:column="9">break;<pos:position pos:line="94" pos:column="15"/></break>
    }<pos:position pos:line="95" pos:column="6"/></block></switch>
  }<pos:position pos:line="96" pos:column="4"/></block></for>
  
  <if pos:line="98" pos:column="3">if <condition pos:line="98" pos:column="6">(<expr><name pos:line="98" pos:column="7">charset<pos:position pos:line="98" pos:column="14"/></name></expr>)<pos:position pos:line="98" pos:column="15"/></condition><then pos:line="98" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="99" pos:column="5">mutt_convert_string<pos:position pos:line="99" pos:column="24"/></name> <argument_list pos:line="99" pos:column="25">(<argument><expr><operator pos:line="99" pos:column="26">&amp;<pos:position pos:line="99" pos:column="31"/></operator><name pos:line="99" pos:column="27">d0<pos:position pos:line="99" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="31">charset<pos:position pos:line="99" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="40">Charset<pos:position pos:line="99" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="49">M_ICONV_HOOK_FROM<pos:position pos:line="99" pos:column="66"/></name></expr></argument>)<pos:position pos:line="99" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="68"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="100" pos:column="3">strfcpy<pos:position pos:line="100" pos:column="10"/></name> <argument_list pos:line="100" pos:column="11">(<argument><expr><name pos:line="100" pos:column="12">d<pos:position pos:line="100" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="15">d0<pos:position pos:line="100" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="19">len<pos:position pos:line="100" pos:column="22"/></name></expr></argument>)<pos:position pos:line="100" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="101" pos:column="3">safe_free<pos:position pos:line="101" pos:column="12"/></name> <argument_list pos:line="101" pos:column="13">(<argument><expr><operator pos:line="101" pos:column="14">(<pos:position pos:line="101" pos:column="15"/></operator><name pos:line="101" pos:column="15">void<pos:position pos:line="101" pos:column="19"/></name> <operator pos:line="101" pos:column="20">*<pos:position pos:line="101" pos:column="21"/></operator><operator pos:line="101" pos:column="21">*<pos:position pos:line="101" pos:column="22"/></operator><operator pos:line="101" pos:column="22">)<pos:position pos:line="101" pos:column="23"/></operator> <operator pos:line="101" pos:column="24">&amp;<pos:position pos:line="101" pos:column="29"/></operator><name pos:line="101" pos:column="25">charset<pos:position pos:line="101" pos:column="32"/></name></expr></argument>)<pos:position pos:line="101" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="102" pos:column="3">safe_free<pos:position pos:line="102" pos:column="12"/></name> <argument_list pos:line="102" pos:column="13">(<argument><expr><operator pos:line="102" pos:column="14">(<pos:position pos:line="102" pos:column="15"/></operator><name pos:line="102" pos:column="15">void<pos:position pos:line="102" pos:column="19"/></name> <operator pos:line="102" pos:column="20">*<pos:position pos:line="102" pos:column="21"/></operator><operator pos:line="102" pos:column="21">*<pos:position pos:line="102" pos:column="22"/></operator><operator pos:line="102" pos:column="22">)<pos:position pos:line="102" pos:column="23"/></operator> <operator pos:line="102" pos:column="24">&amp;<pos:position pos:line="102" pos:column="29"/></operator><name pos:line="102" pos:column="25">d0<pos:position pos:line="102" pos:column="27"/></name></expr></argument>)<pos:position pos:line="102" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="29"/></expr_stmt>
  <return pos:line="103" pos:column="3">return <expr><operator pos:line="103" pos:column="10">(<pos:position pos:line="103" pos:column="11"/></operator><literal type="number" pos:line="103" pos:column="11">0<pos:position pos:line="103" pos:column="12"/></literal><operator pos:line="103" pos:column="12">)<pos:position pos:line="103" pos:column="13"/></operator></expr>;<pos:position pos:line="103" pos:column="14"/></return>
}<pos:position pos:line="104" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_221_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ci_bounce_message<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">HEADER<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">h<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">prompt<pos:position pos:line="3" pos:column="14"/></name><index pos:line="3" pos:column="14">[<expr><name pos:line="3" pos:column="15">SHORT_STRING<pos:position pos:line="3" pos:column="27"/></name></expr>]<pos:position pos:line="3" pos:column="28"/></index></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">scratch<pos:position pos:line="4" pos:column="15"/></name><index pos:line="4" pos:column="15">[<expr><name pos:line="4" pos:column="16">SHORT_STRING<pos:position pos:line="4" pos:column="28"/></name></expr>]<pos:position pos:line="4" pos:column="29"/></index></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">buf<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><name pos:line="5" pos:column="12">HUGE_STRING<pos:position pos:line="5" pos:column="23"/></name></expr>]<pos:position pos:line="5" pos:column="24"/></index></name> <init pos:line="5" pos:column="25">= <expr><block pos:line="5" pos:column="27">{ <expr><literal type="number" pos:line="5" pos:column="29">0<pos:position pos:line="5" pos:column="30"/></literal></expr> }<pos:position pos:line="5" pos:column="32"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">ADDRESS<pos:position pos:line="6" pos:column="10"/></name> <modifier pos:line="6" pos:column="11">*<pos:position pos:line="6" pos:column="12"/></modifier></type><name pos:line="6" pos:column="12">adr<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><name pos:line="6" pos:column="18">NULL<pos:position pos:line="6" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">err<pos:position pos:line="7" pos:column="12"/></name> <init pos:line="7" pos:column="13">= <expr><name pos:line="7" pos:column="15">NULL<pos:position pos:line="7" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">rc<pos:position pos:line="8" pos:column="9"/></name></decl>;<pos:position pos:line="8" pos:column="10"/></decl_stmt>

 <comment type="block" pos:line="10" pos:column="2">/* RfC 5322 mandates a From: header, so warn before bouncing
  * messages without one */</comment>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">h<pos:position pos:line="12" pos:column="8"/></name></expr>)<pos:position pos:line="12" pos:column="9"/></condition><then pos:line="12" pos:column="9">
  <block pos:line="13" pos:column="3">{
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><name><name pos:line="14" pos:column="10">h<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">env<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">from<pos:position pos:line="14" pos:column="22"/></name></name></expr>)<pos:position pos:line="14" pos:column="23"/></condition><then pos:line="14" pos:column="23">
    <block pos:line="15" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="16" pos:column="7">mutt_error<pos:position pos:line="16" pos:column="17"/></name></type> <name pos:line="16" pos:column="18">_<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><literal type="string" pos:line="16" pos:column="20">"Warning: message contains no From: header"<pos:position pos:line="16" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></decl>;<pos:position pos:line="16" pos:column="65"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">mutt_sleep<pos:position pos:line="17" pos:column="17"/></name> <argument_list pos:line="17" pos:column="18">(<argument><expr><literal type="number" pos:line="17" pos:column="19">2<pos:position pos:line="17" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
  }<pos:position pos:line="19" pos:column="4"/></block></then>
  <elseif pos:line="20" pos:column="3">else <if pos:line="20" pos:column="8">if <condition pos:line="20" pos:column="11">(<expr><name pos:line="20" pos:column="12">Context<pos:position pos:line="20" pos:column="19"/></name></expr>)<pos:position pos:line="20" pos:column="20"/></condition><then pos:line="20" pos:column="20">
  <block pos:line="21" pos:column="3">{
    <for pos:line="22" pos:column="5">for <control pos:line="22" pos:column="9">(<init><expr><name pos:line="22" pos:column="10">rc<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <literal type="number" pos:line="22" pos:column="15">0<pos:position pos:line="22" pos:column="16"/></literal></expr>;<pos:position pos:line="22" pos:column="17"/></init> <condition><expr><name pos:line="22" pos:column="18">rc<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">&lt;<pos:position pos:line="22" pos:column="25"/></operator> <name><name pos:line="22" pos:column="23">Context<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">-&gt;<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="32">msgcount<pos:position pos:line="22" pos:column="40"/></name></name></expr>;<pos:position pos:line="22" pos:column="41"/></condition> <incr><expr><name pos:line="22" pos:column="42">rc<pos:position pos:line="22" pos:column="44"/></name><operator pos:line="22" pos:column="44">++<pos:position pos:line="22" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="47"/></control>
    <block pos:line="23" pos:column="5">{
      <if pos:line="24" pos:column="7">if <condition pos:line="24" pos:column="10">(<expr><name><name pos:line="24" pos:column="11">Context<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">-&gt;<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="20">hdrs<pos:position pos:line="24" pos:column="24"/></name><index pos:line="24" pos:column="24">[<expr><name pos:line="24" pos:column="25">rc<pos:position pos:line="24" pos:column="27"/></name></expr>]<pos:position pos:line="24" pos:column="28"/></index></name><operator pos:line="24" pos:column="28">-&gt;<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="30">tagged<pos:position pos:line="24" pos:column="36"/></name> <operator pos:line="24" pos:column="37">&amp;&amp;<pos:position pos:line="24" pos:column="47"/></operator> <operator pos:line="24" pos:column="40">!<pos:position pos:line="24" pos:column="41"/></operator><name><name pos:line="24" pos:column="41">Context<pos:position pos:line="24" pos:column="48"/></name><operator pos:line="24" pos:column="48">-&gt;<pos:position pos:line="24" pos:column="53"/></operator><name pos:line="24" pos:column="50">hdrs<pos:position pos:line="24" pos:column="54"/></name><index pos:line="24" pos:column="54">[<expr><name pos:line="24" pos:column="55">rc<pos:position pos:line="24" pos:column="57"/></name></expr>]<pos:position pos:line="24" pos:column="58"/></index></name><operator pos:line="24" pos:column="58">-&gt;<pos:position pos:line="24" pos:column="63"/></operator><name><name pos:line="24" pos:column="60">env<pos:position pos:line="24" pos:column="63"/></name><operator pos:line="24" pos:column="63">-&gt;<pos:position pos:line="24" pos:column="68"/></operator><name pos:line="24" pos:column="65">from<pos:position pos:line="24" pos:column="69"/></name></name></expr>)<pos:position pos:line="24" pos:column="70"/></condition><then pos:line="24" pos:column="70">
      <block pos:line="25" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="26" pos:column="9">mutt_error<pos:position pos:line="26" pos:column="19"/></name></type> <name pos:line="26" pos:column="20">_<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><literal type="string" pos:line="26" pos:column="22">"Warning: message contains no From: header"<pos:position pos:line="26" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="66"/></argument_list></decl>;<pos:position pos:line="26" pos:column="67"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">mutt_sleep<pos:position pos:line="27" pos:column="19"/></name> <argument_list pos:line="27" pos:column="20">(<argument><expr><literal type="number" pos:line="27" pos:column="21">2<pos:position pos:line="27" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="24"/></expr_stmt>
	<break pos:line="28" pos:column="9">break;<pos:position pos:line="28" pos:column="15"/></break>
      }<pos:position pos:line="29" pos:column="8"/></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></for>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if></elseif></if>

  <if pos:line="33" pos:column="3">if<condition pos:line="33" pos:column="5">(<expr><name pos:line="33" pos:column="6">h<pos:position pos:line="33" pos:column="7"/></name></expr>)<pos:position pos:line="33" pos:column="8"/></condition><then pos:line="33" pos:column="8">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="5">strfcpy<pos:position pos:line="34" pos:column="12"/></name><argument_list pos:line="34" pos:column="12">(<argument><expr><name pos:line="34" pos:column="13">prompt<pos:position pos:line="34" pos:column="19"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="21">_<pos:position pos:line="34" pos:column="22"/></name><argument_list pos:line="34" pos:column="22">(<argument><expr><literal type="string" pos:line="34" pos:column="23">"Bounce message to: "<pos:position pos:line="34" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="47">sizeof<argument_list pos:line="34" pos:column="53">(<argument><expr><name pos:line="34" pos:column="54">prompt<pos:position pos:line="34" pos:column="60"/></name></expr></argument>)<pos:position pos:line="34" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="63"/></expr_stmt></block></then>
  <else pos:line="35" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="5">strfcpy<pos:position pos:line="36" pos:column="12"/></name><argument_list pos:line="36" pos:column="12">(<argument><expr><name pos:line="36" pos:column="13">prompt<pos:position pos:line="36" pos:column="19"/></name></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="21">_<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(<argument><expr><literal type="string" pos:line="36" pos:column="23">"Bounce tagged messages to: "<pos:position pos:line="36" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="55">sizeof<argument_list pos:line="36" pos:column="61">(<argument><expr><name pos:line="36" pos:column="62">prompt<pos:position pos:line="36" pos:column="68"/></name></expr></argument>)<pos:position pos:line="36" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="71"/></expr_stmt></block></else></if>
  
  <expr_stmt><expr><name pos:line="38" pos:column="3">rc<pos:position pos:line="38" pos:column="5"/></name> <operator pos:line="38" pos:column="6">=<pos:position pos:line="38" pos:column="7"/></operator> <call><name pos:line="38" pos:column="8">mutt_get_field<pos:position pos:line="38" pos:column="22"/></name> <argument_list pos:line="38" pos:column="23">(<argument><expr><name pos:line="38" pos:column="24">prompt<pos:position pos:line="38" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="32">buf<pos:position pos:line="38" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="37">sizeof <argument_list pos:line="38" pos:column="44">(<argument><expr><name pos:line="38" pos:column="45">buf<pos:position pos:line="38" pos:column="48"/></name></expr></argument>)<pos:position pos:line="38" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="38" pos:column="51">MUTT_ALIAS<pos:position pos:line="38" pos:column="61"/></name></expr></argument>)<pos:position pos:line="38" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="63"/></expr_stmt>
  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><name pos:line="39" pos:column="7">rc<pos:position pos:line="39" pos:column="9"/></name> <operator pos:line="39" pos:column="10">||<pos:position pos:line="39" pos:column="12"/></operator> <operator pos:line="39" pos:column="13">!<pos:position pos:line="39" pos:column="14"/></operator><name><name pos:line="39" pos:column="14">buf<pos:position pos:line="39" pos:column="17"/></name><index pos:line="39" pos:column="17">[<expr><literal type="number" pos:line="39" pos:column="18">0<pos:position pos:line="39" pos:column="19"/></literal></expr>]<pos:position pos:line="39" pos:column="20"/></index></name></expr>)<pos:position pos:line="39" pos:column="21"/></condition><then pos:line="39" pos:column="21">
    <block type="pseudo"><return pos:line="40" pos:column="5">return;<pos:position pos:line="40" pos:column="12"/></return></block></then></if>

  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><operator pos:line="42" pos:column="7">!<pos:position pos:line="42" pos:column="8"/></operator><operator pos:line="42" pos:column="8">(<pos:position pos:line="42" pos:column="9"/></operator><name pos:line="42" pos:column="9">adr<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">=<pos:position pos:line="42" pos:column="14"/></operator> <call><name pos:line="42" pos:column="15">mutt_parse_adrlist<pos:position pos:line="42" pos:column="33"/></name> <argument_list pos:line="42" pos:column="34">(<argument><expr><name pos:line="42" pos:column="35">adr<pos:position pos:line="42" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="40">buf<pos:position pos:line="42" pos:column="43"/></name></expr></argument>)<pos:position pos:line="42" pos:column="44"/></argument_list></call><operator pos:line="42" pos:column="44">)<pos:position pos:line="42" pos:column="45"/></operator></expr>)<pos:position pos:line="42" pos:column="46"/></condition><then pos:line="42" pos:column="46">
  <block pos:line="43" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="44" pos:column="5">mutt_error<pos:position pos:line="44" pos:column="15"/></name></type> <name pos:line="44" pos:column="16">_<pos:position pos:line="44" pos:column="17"/></name><argument_list pos:line="44" pos:column="17">(<argument><expr><literal type="string" pos:line="44" pos:column="18">"Error parsing address!"<pos:position pos:line="44" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="43"/></argument_list></decl>;<pos:position pos:line="44" pos:column="44"/></decl_stmt>
    <return pos:line="45" pos:column="5">return;<pos:position pos:line="45" pos:column="12"/></return>
  }<pos:position pos:line="46" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="48" pos:column="3">adr<pos:position pos:line="48" pos:column="6"/></name> <operator pos:line="48" pos:column="7">=<pos:position pos:line="48" pos:column="8"/></operator> <call><name pos:line="48" pos:column="9">mutt_expand_aliases<pos:position pos:line="48" pos:column="28"/></name> <argument_list pos:line="48" pos:column="29">(<argument><expr><name pos:line="48" pos:column="30">adr<pos:position pos:line="48" pos:column="33"/></name></expr></argument>)<pos:position pos:line="48" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt>

  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><call><name pos:line="50" pos:column="7">mutt_addrlist_to_intl<pos:position pos:line="50" pos:column="28"/></name> <argument_list pos:line="50" pos:column="29">(<argument><expr><name pos:line="50" pos:column="30">adr<pos:position pos:line="50" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="35">&amp;<pos:position pos:line="50" pos:column="40"/></operator><name pos:line="50" pos:column="36">err<pos:position pos:line="50" pos:column="39"/></name></expr></argument>)<pos:position pos:line="50" pos:column="40"/></argument_list></call> <operator pos:line="50" pos:column="41">&lt;<pos:position pos:line="50" pos:column="45"/></operator> <literal type="number" pos:line="50" pos:column="43">0<pos:position pos:line="50" pos:column="44"/></literal></expr>)<pos:position pos:line="50" pos:column="45"/></condition><then pos:line="50" pos:column="45">
  <block pos:line="51" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">mutt_error<pos:position pos:line="52" pos:column="15"/></name> <argument_list pos:line="52" pos:column="16">(<argument><expr><call><name pos:line="52" pos:column="17">_<pos:position pos:line="52" pos:column="18"/></name><argument_list pos:line="52" pos:column="18">(<argument><expr><literal type="string" pos:line="52" pos:column="19">"Bad IDN: '%s'"<pos:position pos:line="52" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="52" pos:column="37">err<pos:position pos:line="52" pos:column="40"/></name></expr></argument>)<pos:position pos:line="52" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">FREE<pos:position pos:line="53" pos:column="9"/></name> <argument_list pos:line="53" pos:column="10">(<argument><expr><operator pos:line="53" pos:column="11">&amp;<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="12">err<pos:position pos:line="53" pos:column="15"/></name></expr></argument>)<pos:position pos:line="53" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">rfc822_free_address<pos:position pos:line="54" pos:column="24"/></name> <argument_list pos:line="54" pos:column="25">(<argument><expr><operator pos:line="54" pos:column="26">&amp;<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="27">adr<pos:position pos:line="54" pos:column="30"/></name></expr></argument>)<pos:position pos:line="54" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="32"/></expr_stmt>
    <return pos:line="55" pos:column="5">return;<pos:position pos:line="55" pos:column="12"/></return>
  }<pos:position pos:line="56" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="58" pos:column="3">buf<pos:position pos:line="58" pos:column="6"/></name><index pos:line="58" pos:column="6">[<expr><literal type="number" pos:line="58" pos:column="7">0<pos:position pos:line="58" pos:column="8"/></literal></expr>]<pos:position pos:line="58" pos:column="9"/></index></name> <operator pos:line="58" pos:column="10">=<pos:position pos:line="58" pos:column="11"/></operator> <literal type="number" pos:line="58" pos:column="12">0<pos:position pos:line="58" pos:column="13"/></literal></expr>;<pos:position pos:line="58" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="59" pos:column="3">rfc822_write_address<pos:position pos:line="59" pos:column="23"/></name> <argument_list pos:line="59" pos:column="24">(<argument><expr><name pos:line="59" pos:column="25">buf<pos:position pos:line="59" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="59" pos:column="30">sizeof <argument_list pos:line="59" pos:column="37">(<argument><expr><name pos:line="59" pos:column="38">buf<pos:position pos:line="59" pos:column="41"/></name></expr></argument>)<pos:position pos:line="59" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="59" pos:column="44">adr<pos:position pos:line="59" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="49">1<pos:position pos:line="59" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="52"/></expr_stmt>

<cpp:define pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">define<pos:position pos:line="61" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="61" pos:column="9">extra_space<pos:position pos:line="61" pos:column="20"/></name></cpp:macro> <cpp:value pos:line="61" pos:column="21">(15 + 7 + 2)<pos:position pos:line="61" pos:column="33"/></cpp:value></cpp:define>
  <expr_stmt><expr><call><name pos:line="62" pos:column="3">snprintf<pos:position pos:line="62" pos:column="11"/></name> <argument_list pos:line="62" pos:column="12">(<argument><expr><name pos:line="62" pos:column="13">scratch<pos:position pos:line="62" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="62" pos:column="22">sizeof <argument_list pos:line="62" pos:column="29">(<argument><expr><name pos:line="62" pos:column="30">scratch<pos:position pos:line="62" pos:column="37"/></name></expr></argument>)<pos:position pos:line="62" pos:column="38"/></argument_list></sizeof></expr></argument>,
           <argument><expr><operator pos:line="63" pos:column="12">(<pos:position pos:line="63" pos:column="13"/></operator><ternary><condition><expr><name pos:line="63" pos:column="13">h<pos:position pos:line="63" pos:column="14"/></name></expr> ?<pos:position pos:line="63" pos:column="16"/></condition><then pos:line="63" pos:column="16"> <expr><call><name pos:line="63" pos:column="17">_<pos:position pos:line="63" pos:column="18"/></name><argument_list pos:line="63" pos:column="18">(<argument><expr><literal type="string" pos:line="63" pos:column="19">"Bounce message to %s"<pos:position pos:line="63" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="42"/></argument_list></call></expr> <pos:position pos:line="63" pos:column="43"/></then><else pos:line="63" pos:column="43">: <expr><call><name pos:line="63" pos:column="45">_<pos:position pos:line="63" pos:column="46"/></name><argument_list pos:line="63" pos:column="46">(<argument><expr><literal type="string" pos:line="63" pos:column="47">"Bounce messages to %s"<pos:position pos:line="63" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="71"/></argument_list></call></expr></else></ternary><operator pos:line="63" pos:column="71">)<pos:position pos:line="63" pos:column="72"/></operator></expr></argument>, <argument><expr><name pos:line="63" pos:column="74">buf<pos:position pos:line="63" pos:column="77"/></name></expr></argument>)<pos:position pos:line="63" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="79"/></expr_stmt>

  <if pos:line="65" pos:column="3">if <condition pos:line="65" pos:column="6">(<expr><call><name pos:line="65" pos:column="7">mutt_strwidth<pos:position pos:line="65" pos:column="20"/></name> <argument_list pos:line="65" pos:column="21">(<argument><expr><name pos:line="65" pos:column="22">prompt<pos:position pos:line="65" pos:column="28"/></name></expr></argument>)<pos:position pos:line="65" pos:column="29"/></argument_list></call> <operator pos:line="65" pos:column="30">&gt;<pos:position pos:line="65" pos:column="34"/></operator> <name><name pos:line="65" pos:column="32">MuttMessageWindow<pos:position pos:line="65" pos:column="49"/></name><operator pos:line="65" pos:column="49">-&gt;<pos:position pos:line="65" pos:column="54"/></operator><name pos:line="65" pos:column="51">cols<pos:position pos:line="65" pos:column="55"/></name></name> <operator pos:line="65" pos:column="56">-<pos:position pos:line="65" pos:column="57"/></operator> <name pos:line="65" pos:column="58">extra_space<pos:position pos:line="65" pos:column="69"/></name></expr>)<pos:position pos:line="65" pos:column="70"/></condition><then pos:line="65" pos:column="70">
  <block pos:line="66" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">mutt_format_string<pos:position pos:line="67" pos:column="23"/></name> <argument_list pos:line="67" pos:column="24">(<argument><expr><name pos:line="67" pos:column="25">prompt<pos:position pos:line="67" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="67" pos:column="33">sizeof <argument_list pos:line="67" pos:column="40">(<argument><expr><name pos:line="67" pos:column="41">prompt<pos:position pos:line="67" pos:column="47"/></name></expr></argument>)<pos:position pos:line="67" pos:column="48"/></argument_list></sizeof></expr></argument>,
			<argument><expr><literal type="number" pos:line="68" pos:column="25">0<pos:position pos:line="68" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="28">MuttMessageWindow<pos:position pos:line="68" pos:column="45"/></name><operator pos:line="68" pos:column="45">-&gt;<pos:position pos:line="68" pos:column="50"/></operator><name pos:line="68" pos:column="47">cols<pos:position pos:line="68" pos:column="51"/></name></name><operator pos:line="68" pos:column="51">-<pos:position pos:line="68" pos:column="52"/></operator><name pos:line="68" pos:column="52">extra_space<pos:position pos:line="68" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="65">FMT_LEFT<pos:position pos:line="68" pos:column="73"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="75">0<pos:position pos:line="68" pos:column="76"/></literal></expr></argument>,
			<argument><expr><name pos:line="69" pos:column="25">scratch<pos:position pos:line="69" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="69" pos:column="34">sizeof <argument_list pos:line="69" pos:column="41">(<argument><expr><name pos:line="69" pos:column="42">scratch<pos:position pos:line="69" pos:column="49"/></name></expr></argument>)<pos:position pos:line="69" pos:column="50"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="52">0<pos:position pos:line="69" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="70" pos:column="5">safe_strcat<pos:position pos:line="70" pos:column="16"/></name> <argument_list pos:line="70" pos:column="17">(<argument><expr><name pos:line="70" pos:column="18">prompt<pos:position pos:line="70" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="70" pos:column="26">sizeof <argument_list pos:line="70" pos:column="33">(<argument><expr><name pos:line="70" pos:column="34">prompt<pos:position pos:line="70" pos:column="40"/></name></expr></argument>)<pos:position pos:line="70" pos:column="41"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="43">"...?"<pos:position pos:line="70" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="51"/></expr_stmt>
  }<pos:position pos:line="71" pos:column="4"/></block></then>
  <else pos:line="72" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="73" pos:column="5">snprintf<pos:position pos:line="73" pos:column="13"/></name> <argument_list pos:line="73" pos:column="14">(<argument><expr><name pos:line="73" pos:column="15">prompt<pos:position pos:line="73" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="73" pos:column="23">sizeof <argument_list pos:line="73" pos:column="30">(<argument><expr><name pos:line="73" pos:column="31">prompt<pos:position pos:line="73" pos:column="37"/></name></expr></argument>)<pos:position pos:line="73" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="40">"%s?"<pos:position pos:line="73" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="47">scratch<pos:position pos:line="73" pos:column="54"/></name></expr></argument>)<pos:position pos:line="73" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="56"/></expr_stmt></block></else></if>

  <if pos:line="75" pos:column="3">if <condition pos:line="75" pos:column="6">(<expr><call><name pos:line="75" pos:column="7">query_quadoption<pos:position pos:line="75" pos:column="23"/></name> <argument_list pos:line="75" pos:column="24">(<argument><expr><name pos:line="75" pos:column="25">OPT_BOUNCE<pos:position pos:line="75" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="37">prompt<pos:position pos:line="75" pos:column="43"/></name></expr></argument>)<pos:position pos:line="75" pos:column="44"/></argument_list></call> <operator pos:line="75" pos:column="45">!=<pos:position pos:line="75" pos:column="47"/></operator> <name pos:line="75" pos:column="48">MUTT_YES<pos:position pos:line="75" pos:column="56"/></name></expr>)<pos:position pos:line="75" pos:column="57"/></condition><then pos:line="75" pos:column="57">
  <block pos:line="76" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="77" pos:column="5">rfc822_free_address<pos:position pos:line="77" pos:column="24"/></name> <argument_list pos:line="77" pos:column="25">(<argument><expr><operator pos:line="77" pos:column="26">&amp;<pos:position pos:line="77" pos:column="31"/></operator><name pos:line="77" pos:column="27">adr<pos:position pos:line="77" pos:column="30"/></name></expr></argument>)<pos:position pos:line="77" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="78" pos:column="5">mutt_window_clearline<pos:position pos:line="78" pos:column="26"/></name> <argument_list pos:line="78" pos:column="27">(<argument><expr><name pos:line="78" pos:column="28">MuttMessageWindow<pos:position pos:line="78" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="47">0<pos:position pos:line="78" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">mutt_message<pos:position pos:line="79" pos:column="17"/></name> <argument_list pos:line="79" pos:column="18">(<argument><expr><ternary><condition><expr><name pos:line="79" pos:column="19">h<pos:position pos:line="79" pos:column="20"/></name></expr> ?<pos:position pos:line="79" pos:column="22"/></condition><then pos:line="79" pos:column="22"> <expr><call><name pos:line="79" pos:column="23">_<pos:position pos:line="79" pos:column="24"/></name><argument_list pos:line="79" pos:column="24">(<argument><expr><literal type="string" pos:line="79" pos:column="25">"Message not bounced."<pos:position pos:line="79" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="48"/></argument_list></call></expr> <pos:position pos:line="79" pos:column="49"/></then><else pos:line="79" pos:column="49">: <expr><call><name pos:line="79" pos:column="51">_<pos:position pos:line="79" pos:column="52"/></name><argument_list pos:line="79" pos:column="52">(<argument><expr><literal type="string" pos:line="79" pos:column="53">"Messages not bounced."<pos:position pos:line="79" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="77"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="79" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="79"/></expr_stmt>
    <return pos:line="80" pos:column="5">return;<pos:position pos:line="80" pos:column="12"/></return>
  }<pos:position pos:line="81" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="83" pos:column="3">mutt_window_clearline<pos:position pos:line="83" pos:column="24"/></name> <argument_list pos:line="83" pos:column="25">(<argument><expr><name pos:line="83" pos:column="26">MuttMessageWindow<pos:position pos:line="83" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="45">0<pos:position pos:line="83" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="48"/></expr_stmt>
  
  <expr_stmt><expr><name pos:line="85" pos:column="3">rc<pos:position pos:line="85" pos:column="5"/></name> <operator pos:line="85" pos:column="6">=<pos:position pos:line="85" pos:column="7"/></operator> <call><name pos:line="85" pos:column="8">mutt_bounce_message<pos:position pos:line="85" pos:column="27"/></name> <argument_list pos:line="85" pos:column="28">(<argument><expr><name pos:line="85" pos:column="29">NULL<pos:position pos:line="85" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="35">h<pos:position pos:line="85" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="38">adr<pos:position pos:line="85" pos:column="41"/></name></expr></argument>)<pos:position pos:line="85" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="86" pos:column="3">rfc822_free_address<pos:position pos:line="86" pos:column="22"/></name> <argument_list pos:line="86" pos:column="23">(<argument><expr><operator pos:line="86" pos:column="24">&amp;<pos:position pos:line="86" pos:column="29"/></operator><name pos:line="86" pos:column="25">adr<pos:position pos:line="86" pos:column="28"/></name></expr></argument>)<pos:position pos:line="86" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="30"/></expr_stmt>
  <comment type="block" pos:line="87" pos:column="3">/* If no error, or background, display message. */</comment>
  <if pos:line="88" pos:column="3">if <condition pos:line="88" pos:column="6">(<expr><operator pos:line="88" pos:column="7">(<pos:position pos:line="88" pos:column="8"/></operator><name pos:line="88" pos:column="8">rc<pos:position pos:line="88" pos:column="10"/></name> <operator pos:line="88" pos:column="11">==<pos:position pos:line="88" pos:column="13"/></operator> <literal type="number" pos:line="88" pos:column="14">0<pos:position pos:line="88" pos:column="15"/></literal><operator pos:line="88" pos:column="15">)<pos:position pos:line="88" pos:column="16"/></operator> <operator pos:line="88" pos:column="17">||<pos:position pos:line="88" pos:column="19"/></operator> <operator pos:line="88" pos:column="20">(<pos:position pos:line="88" pos:column="21"/></operator><name pos:line="88" pos:column="21">rc<pos:position pos:line="88" pos:column="23"/></name> <operator pos:line="88" pos:column="24">==<pos:position pos:line="88" pos:column="26"/></operator> <name pos:line="88" pos:column="27">S_BKG<pos:position pos:line="88" pos:column="32"/></name><operator pos:line="88" pos:column="32">)<pos:position pos:line="88" pos:column="33"/></operator></expr>)<pos:position pos:line="88" pos:column="34"/></condition><then pos:line="88" pos:column="34">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="89" pos:column="5">mutt_message<pos:position pos:line="89" pos:column="17"/></name> <argument_list pos:line="89" pos:column="18">(<argument><expr><ternary><condition><expr><name pos:line="89" pos:column="19">h<pos:position pos:line="89" pos:column="20"/></name></expr> ?<pos:position pos:line="89" pos:column="22"/></condition><then pos:line="89" pos:column="22"> <expr><call><name pos:line="89" pos:column="23">_<pos:position pos:line="89" pos:column="24"/></name><argument_list pos:line="89" pos:column="24">(<argument><expr><literal type="string" pos:line="89" pos:column="25">"Message bounced."<pos:position pos:line="89" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="44"/></argument_list></call></expr> <pos:position pos:line="89" pos:column="45"/></then><else pos:line="89" pos:column="45">: <expr><call><name pos:line="89" pos:column="47">_<pos:position pos:line="89" pos:column="48"/></name><argument_list pos:line="89" pos:column="48">(<argument><expr><literal type="string" pos:line="89" pos:column="49">"Messages bounced."<pos:position pos:line="89" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="69"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="89" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="71"/></expr_stmt></block></then></if>
}<pos:position pos:line="90" pos:column="2"/></block></function></unit>

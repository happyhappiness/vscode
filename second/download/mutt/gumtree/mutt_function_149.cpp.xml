<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_function_149.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">pretty_default<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">t<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">size_t<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">l<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">s<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">int<pos:position pos:line="1" pos:column="66"/></name></type> <name pos:line="1" pos:column="67">type<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">memset<pos:position pos:line="3" pos:column="9"/></name> <argument_list pos:line="3" pos:column="10">(<argument><expr><name pos:line="3" pos:column="11">t<pos:position pos:line="3" pos:column="12"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="14">0<pos:position pos:line="3" pos:column="15"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="17">l<pos:position pos:line="3" pos:column="18"/></name></expr></argument>)<pos:position pos:line="3" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name pos:line="4" pos:column="3">l<pos:position pos:line="4" pos:column="4"/></name><operator pos:line="4" pos:column="4">--<pos:position pos:line="4" pos:column="6"/></operator></expr>;<pos:position pos:line="4" pos:column="7"/></expr_stmt>

  <switch pos:line="6" pos:column="3">switch <condition pos:line="6" pos:column="10">(<expr><name pos:line="6" pos:column="11">type<pos:position pos:line="6" pos:column="15"/></name></expr>)<pos:position pos:line="6" pos:column="16"/></condition>
  <block pos:line="7" pos:column="3">{
    <case pos:line="8" pos:column="5">case <expr><name pos:line="8" pos:column="10">DT_QUAD<pos:position pos:line="8" pos:column="17"/></name></expr>:<pos:position pos:line="8" pos:column="18"/></case>
    <block pos:line="9" pos:column="5">{    
      <if pos:line="10" pos:column="7">if <condition pos:line="10" pos:column="10">(<expr><operator pos:line="10" pos:column="11">!<pos:position pos:line="10" pos:column="12"/></operator><call><name pos:line="10" pos:column="12">strcasecmp<pos:position pos:line="10" pos:column="22"/></name> <argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">s<pos:position pos:line="10" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="27">"MUTT_YES"<pos:position pos:line="10" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="39"/></condition><then pos:line="10" pos:column="39"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="40">strncpy<pos:position pos:line="10" pos:column="47"/></name> <argument_list pos:line="10" pos:column="48">(<argument><expr><name pos:line="10" pos:column="49">t<pos:position pos:line="10" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="52">"yes"<pos:position pos:line="10" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="59">l<pos:position pos:line="10" pos:column="60"/></name></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="62"/></expr_stmt></block></then>
      <elseif pos:line="11" pos:column="7">else <if pos:line="11" pos:column="12">if <condition pos:line="11" pos:column="15">(<expr><operator pos:line="11" pos:column="16">!<pos:position pos:line="11" pos:column="17"/></operator><call><name pos:line="11" pos:column="17">strcasecmp<pos:position pos:line="11" pos:column="27"/></name> <argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">s<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="32">"MUTT_NO"<pos:position pos:line="11" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="43"/></condition><then pos:line="11" pos:column="43"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="44">strncpy<pos:position pos:line="11" pos:column="51"/></name> <argument_list pos:line="11" pos:column="52">(<argument><expr><name pos:line="11" pos:column="53">t<pos:position pos:line="11" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="56">"no"<pos:position pos:line="11" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="62">l<pos:position pos:line="11" pos:column="63"/></name></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="65"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="12" pos:column="7">else <if pos:line="12" pos:column="12">if <condition pos:line="12" pos:column="15">(<expr><operator pos:line="12" pos:column="16">!<pos:position pos:line="12" pos:column="17"/></operator><call><name pos:line="12" pos:column="17">strcasecmp<pos:position pos:line="12" pos:column="27"/></name> <argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">s<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="32">"MUTT_ASKYES"<pos:position pos:line="12" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="47"/></condition><then pos:line="12" pos:column="47"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="48">strncpy<pos:position pos:line="12" pos:column="55"/></name> <argument_list pos:line="12" pos:column="56">(<argument><expr><name pos:line="12" pos:column="57">t<pos:position pos:line="12" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="60">"ask-yes"<pos:position pos:line="12" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="71">l<pos:position pos:line="12" pos:column="72"/></name></expr></argument>)<pos:position pos:line="12" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="74"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="13" pos:column="7">else <if pos:line="13" pos:column="12">if <condition pos:line="13" pos:column="15">(<expr><operator pos:line="13" pos:column="16">!<pos:position pos:line="13" pos:column="17"/></operator><call><name pos:line="13" pos:column="17">strcasecmp<pos:position pos:line="13" pos:column="27"/></name> <argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">s<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="32">"MUTT_ASKNO"<pos:position pos:line="13" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="46"/></condition><then pos:line="13" pos:column="46"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="47">strncpy<pos:position pos:line="13" pos:column="54"/></name> <argument_list pos:line="13" pos:column="55">(<argument><expr><name pos:line="13" pos:column="56">t<pos:position pos:line="13" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="59">"ask-no"<pos:position pos:line="13" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="69">l<pos:position pos:line="13" pos:column="70"/></name></expr></argument>)<pos:position pos:line="13" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="72"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="14" pos:column="7">break;<pos:position pos:line="14" pos:column="13"/></break>
    }<pos:position pos:line="15" pos:column="6"/></block>
    <case pos:line="16" pos:column="5">case <expr><name pos:line="16" pos:column="10">DT_BOOL<pos:position pos:line="16" pos:column="17"/></name></expr>:<pos:position pos:line="16" pos:column="18"/></case>
    <block pos:line="17" pos:column="5">{
      <if pos:line="18" pos:column="7">if <condition pos:line="18" pos:column="10">(<expr><call><name pos:line="18" pos:column="11">atoi<pos:position pos:line="18" pos:column="15"/></name> <argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">s<pos:position pos:line="18" pos:column="18"/></name></expr></argument>)<pos:position pos:line="18" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="20"/></condition><then pos:line="18" pos:column="20">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="9">strncpy<pos:position pos:line="19" pos:column="16"/></name> <argument_list pos:line="19" pos:column="17">(<argument><expr><name pos:line="19" pos:column="18">t<pos:position pos:line="19" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="21">"yes"<pos:position pos:line="19" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="28">l<pos:position pos:line="19" pos:column="29"/></name></expr></argument>)<pos:position pos:line="19" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt></block></then>
      <else pos:line="20" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="9">strncpy<pos:position pos:line="21" pos:column="16"/></name> <argument_list pos:line="21" pos:column="17">(<argument><expr><name pos:line="21" pos:column="18">t<pos:position pos:line="21" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="21">"no"<pos:position pos:line="21" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="27">l<pos:position pos:line="21" pos:column="28"/></name></expr></argument>)<pos:position pos:line="21" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt></block></else></if>
      <break pos:line="22" pos:column="7">break;<pos:position pos:line="22" pos:column="13"/></break>
    }<pos:position pos:line="23" pos:column="6"/></block>
    <case pos:line="24" pos:column="5">case <expr><name pos:line="24" pos:column="10">DT_SORT<pos:position pos:line="24" pos:column="17"/></name></expr>:<pos:position pos:line="24" pos:column="18"/></case>
    <block pos:line="25" pos:column="5">{
      <comment type="block" pos:line="26" pos:column="7">/* heuristic! */</comment>
      <if pos:line="27" pos:column="7">if <condition pos:line="27" pos:column="10">(<expr><call><name pos:line="27" pos:column="11">strncmp<pos:position pos:line="27" pos:column="18"/></name> <argument_list pos:line="27" pos:column="19">(<argument><expr><name pos:line="27" pos:column="20">s<pos:position pos:line="27" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="23">"SORT_"<pos:position pos:line="27" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="32">5<pos:position pos:line="27" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="35"/></condition><then pos:line="27" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="9">fprintf<pos:position pos:line="28" pos:column="16"/></name> <argument_list pos:line="28" pos:column="17">(<argument><expr><name pos:line="28" pos:column="18">stderr<pos:position pos:line="28" pos:column="24"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="29" pos:column="18">"WARNING: expected prefix of SORT_ for type DT_SORT instead of %s\n"<pos:position pos:line="29" pos:column="86"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="88">s<pos:position pos:line="29" pos:column="89"/></name></expr></argument>)<pos:position pos:line="29" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="91"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">strncpy<pos:position pos:line="30" pos:column="14"/></name> <argument_list pos:line="30" pos:column="15">(<argument><expr><name pos:line="30" pos:column="16">t<pos:position pos:line="30" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="19">s<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">+<pos:position pos:line="30" pos:column="22"/></operator> <literal type="number" pos:line="30" pos:column="23">5<pos:position pos:line="30" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="26">l<pos:position pos:line="30" pos:column="27"/></name></expr></argument>)<pos:position pos:line="30" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>
      <for pos:line="31" pos:column="7">for <control pos:line="31" pos:column="11">(<init pos:line="31" pos:column="12">;<pos:position pos:line="31" pos:column="13"/></init> <condition><expr><operator pos:line="31" pos:column="14">*<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="15">t<pos:position pos:line="31" pos:column="16"/></name></expr>;<pos:position pos:line="31" pos:column="17"/></condition> <incr><expr><name pos:line="31" pos:column="18">t<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">++<pos:position pos:line="31" pos:column="21"/></operator></expr></incr>)<pos:position pos:line="31" pos:column="22"/></control> <block type="pseudo"><expr_stmt><expr><operator pos:line="31" pos:column="23">*<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="24">t<pos:position pos:line="31" pos:column="25"/></name> <operator pos:line="31" pos:column="26">=<pos:position pos:line="31" pos:column="27"/></operator> <call><name pos:line="31" pos:column="28">tolower<pos:position pos:line="31" pos:column="35"/></name> <argument_list pos:line="31" pos:column="36">(<argument><expr><operator pos:line="31" pos:column="37">(<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="38">unsigned<pos:position pos:line="31" pos:column="46"/></name> <name pos:line="31" pos:column="47">char<pos:position pos:line="31" pos:column="51"/></name><operator pos:line="31" pos:column="51">)<pos:position pos:line="31" pos:column="52"/></operator> <operator pos:line="31" pos:column="53">*<pos:position pos:line="31" pos:column="54"/></operator><name pos:line="31" pos:column="54">t<pos:position pos:line="31" pos:column="55"/></name></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="57"/></expr_stmt></block></for>
      <break pos:line="32" pos:column="7">break;<pos:position pos:line="32" pos:column="13"/></break>
    }<pos:position pos:line="33" pos:column="6"/></block>
    <case pos:line="34" pos:column="5">case <expr><name pos:line="34" pos:column="10">DT_MAGIC<pos:position pos:line="34" pos:column="18"/></name></expr>:<pos:position pos:line="34" pos:column="19"/></case>
    <block pos:line="35" pos:column="5">{
      <comment type="block" pos:line="36" pos:column="7">/* heuristic! */</comment>
      <if pos:line="37" pos:column="7">if <condition pos:line="37" pos:column="10">(<expr><call><name pos:line="37" pos:column="11">strncmp<pos:position pos:line="37" pos:column="18"/></name> <argument_list pos:line="37" pos:column="19">(<argument><expr><name pos:line="37" pos:column="20">s<pos:position pos:line="37" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="23">"MUTT_"<pos:position pos:line="37" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="32">5<pos:position pos:line="37" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="35"/></condition><then pos:line="37" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="9">fprintf<pos:position pos:line="38" pos:column="16"/></name> <argument_list pos:line="38" pos:column="17">(<argument><expr><name pos:line="38" pos:column="18">stderr<pos:position pos:line="38" pos:column="24"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="39" pos:column="18">"WARNING: expected prefix of MUTT_ for type DT_MAGIC instead of %s\n"<pos:position pos:line="39" pos:column="87"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="89">s<pos:position pos:line="39" pos:column="90"/></name></expr></argument>)<pos:position pos:line="39" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="92"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">strncpy<pos:position pos:line="40" pos:column="14"/></name> <argument_list pos:line="40" pos:column="15">(<argument><expr><name pos:line="40" pos:column="16">t<pos:position pos:line="40" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="19">s<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">+<pos:position pos:line="40" pos:column="22"/></operator> <literal type="number" pos:line="40" pos:column="23">5<pos:position pos:line="40" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="26">l<pos:position pos:line="40" pos:column="27"/></name></expr></argument>)<pos:position pos:line="40" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>
      <for pos:line="41" pos:column="7">for <control pos:line="41" pos:column="11">(<init pos:line="41" pos:column="12">;<pos:position pos:line="41" pos:column="13"/></init> <condition><expr><operator pos:line="41" pos:column="14">*<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="15">t<pos:position pos:line="41" pos:column="16"/></name></expr>;<pos:position pos:line="41" pos:column="17"/></condition> <incr><expr><name pos:line="41" pos:column="18">t<pos:position pos:line="41" pos:column="19"/></name><operator pos:line="41" pos:column="19">++<pos:position pos:line="41" pos:column="21"/></operator></expr></incr>)<pos:position pos:line="41" pos:column="22"/></control> <block type="pseudo"><expr_stmt><expr><operator pos:line="41" pos:column="23">*<pos:position pos:line="41" pos:column="24"/></operator><name pos:line="41" pos:column="24">t<pos:position pos:line="41" pos:column="25"/></name> <operator pos:line="41" pos:column="26">=<pos:position pos:line="41" pos:column="27"/></operator> <call><name pos:line="41" pos:column="28">tolower<pos:position pos:line="41" pos:column="35"/></name> <argument_list pos:line="41" pos:column="36">(<argument><expr><operator pos:line="41" pos:column="37">(<pos:position pos:line="41" pos:column="38"/></operator><name pos:line="41" pos:column="38">unsigned<pos:position pos:line="41" pos:column="46"/></name> <name pos:line="41" pos:column="47">char<pos:position pos:line="41" pos:column="51"/></name><operator pos:line="41" pos:column="51">)<pos:position pos:line="41" pos:column="52"/></operator> <operator pos:line="41" pos:column="53">*<pos:position pos:line="41" pos:column="54"/></operator><name pos:line="41" pos:column="54">t<pos:position pos:line="41" pos:column="55"/></name></expr></argument>)<pos:position pos:line="41" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="57"/></expr_stmt></block></for>
      <break pos:line="42" pos:column="7">break;<pos:position pos:line="42" pos:column="13"/></break>
    }<pos:position pos:line="43" pos:column="6"/></block>
    <case pos:line="44" pos:column="5">case <expr><name pos:line="44" pos:column="10">DT_STR<pos:position pos:line="44" pos:column="16"/></name></expr>:<pos:position pos:line="44" pos:column="17"/></case>
    <case pos:line="45" pos:column="5">case <expr><name pos:line="45" pos:column="10">DT_RX<pos:position pos:line="45" pos:column="15"/></name></expr>:<pos:position pos:line="45" pos:column="16"/></case>
    <case pos:line="46" pos:column="5">case <expr><name pos:line="46" pos:column="10">DT_ADDR<pos:position pos:line="46" pos:column="17"/></name></expr>:<pos:position pos:line="46" pos:column="18"/></case>
    <case pos:line="47" pos:column="5">case <expr><name pos:line="47" pos:column="10">DT_PATH<pos:position pos:line="47" pos:column="17"/></name></expr>:<pos:position pos:line="47" pos:column="18"/></case>
    <block pos:line="48" pos:column="5">{
      <if pos:line="49" pos:column="7">if <condition pos:line="49" pos:column="10">(<expr><operator pos:line="49" pos:column="11">!<pos:position pos:line="49" pos:column="12"/></operator><call><name pos:line="49" pos:column="12">strcmp<pos:position pos:line="49" pos:column="18"/></name> <argument_list pos:line="49" pos:column="19">(<argument><expr><name pos:line="49" pos:column="20">s<pos:position pos:line="49" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="23">"0"<pos:position pos:line="49" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="28"/></condition><then pos:line="49" pos:column="28">
	<block type="pseudo"><break pos:line="50" pos:column="9">break;<pos:position pos:line="50" pos:column="15"/></break></block></then></if>
      <comment type="block" pos:line="51" pos:column="7">/* fallthrough */</comment>
    }<pos:position pos:line="52" pos:column="6"/></block>
    <default pos:line="53" pos:column="5">default:<pos:position pos:line="53" pos:column="13"/></default>
    <block pos:line="54" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="55" pos:column="7">strncpy<pos:position pos:line="55" pos:column="14"/></name> <argument_list pos:line="55" pos:column="15">(<argument><expr><name pos:line="55" pos:column="16">t<pos:position pos:line="55" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="19">s<pos:position pos:line="55" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="22">l<pos:position pos:line="55" pos:column="23"/></name></expr></argument>)<pos:position pos:line="55" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="25"/></expr_stmt>
      <break pos:line="56" pos:column="7">break;<pos:position pos:line="56" pos:column="13"/></break>
    }<pos:position pos:line="57" pos:column="6"/></block>
  }<pos:position pos:line="58" pos:column="4"/></block></switch>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1731_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_save_attachment<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">FILE<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">fp<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">BODY<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">m<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">path<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">int<pos:position pos:line="1" pos:column="61"/></name></type> <name pos:line="1" pos:column="62">flags<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="69">HEADER<pos:position pos:line="1" pos:column="75"/></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">hdr<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">fp<pos:position pos:line="3" pos:column="9"/></name></expr>)<pos:position pos:line="3" pos:column="10"/></condition><then pos:line="3" pos:column="10">
  <block pos:line="4" pos:column="3">{
    
    <comment type="block" pos:line="6" pos:column="5">/* recv mode */</comment>

    <if pos:line="8" pos:column="5">if<condition pos:line="8" pos:column="7">(<expr><name pos:line="8" pos:column="8">hdr<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">&amp;&amp;<pos:position pos:line="8" pos:column="22"/></operator>
	<name><name pos:line="9" pos:column="9">m<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">hdr<pos:position pos:line="9" pos:column="15"/></name></name> <operator pos:line="9" pos:column="16">&amp;&amp;<pos:position pos:line="9" pos:column="26"/></operator>
	<name><name pos:line="10" pos:column="9">m<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">encoding<pos:position pos:line="10" pos:column="20"/></name></name> <operator pos:line="10" pos:column="21">!=<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="24">ENCBASE64<pos:position pos:line="10" pos:column="33"/></name> <operator pos:line="10" pos:column="34">&amp;&amp;<pos:position pos:line="10" pos:column="44"/></operator>
	<name><name pos:line="11" pos:column="9">m<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">encoding<pos:position pos:line="11" pos:column="20"/></name></name> <operator pos:line="11" pos:column="21">!=<pos:position pos:line="11" pos:column="23"/></operator> <name pos:line="11" pos:column="24">ENCQUOTEDPRINTABLE<pos:position pos:line="11" pos:column="42"/></name> <operator pos:line="11" pos:column="43">&amp;&amp;<pos:position pos:line="11" pos:column="53"/></operator>
	<call><name pos:line="12" pos:column="9">mutt_is_message_type<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name><name pos:line="12" pos:column="30">m<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">-&gt;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="33">type<pos:position pos:line="12" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="39">m<pos:position pos:line="12" pos:column="40"/></name><operator pos:line="12" pos:column="40">-&gt;<pos:position pos:line="12" pos:column="45"/></operator><name pos:line="12" pos:column="42">subtype<pos:position pos:line="12" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="51"/></condition><then pos:line="12" pos:column="51">
    <block pos:line="13" pos:column="5">{
      <comment type="block" pos:line="14" pos:column="7">/* message type attachments are written to mail folders. */</comment>

      <decl_stmt><decl><type><name pos:line="16" pos:column="7">char<pos:position pos:line="16" pos:column="11"/></name></type> <name><name pos:line="16" pos:column="12">buf<pos:position pos:line="16" pos:column="15"/></name><index pos:line="16" pos:column="15">[<expr><name pos:line="16" pos:column="16">HUGE_STRING<pos:position pos:line="16" pos:column="27"/></name></expr>]<pos:position pos:line="16" pos:column="28"/></index></name></decl>;<pos:position pos:line="16" pos:column="29"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="17" pos:column="7">HEADER<pos:position pos:line="17" pos:column="13"/></name> <modifier pos:line="17" pos:column="14">*<pos:position pos:line="17" pos:column="15"/></modifier></type><name pos:line="17" pos:column="15">hn<pos:position pos:line="17" pos:column="17"/></name></decl>;<pos:position pos:line="17" pos:column="18"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="18" pos:column="7">CONTEXT<pos:position pos:line="18" pos:column="14"/></name></type> <name pos:line="18" pos:column="15">ctx<pos:position pos:line="18" pos:column="18"/></name></decl>;<pos:position pos:line="18" pos:column="19"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="19" pos:column="7">MESSAGE<pos:position pos:line="19" pos:column="14"/></name> <modifier pos:line="19" pos:column="15">*<pos:position pos:line="19" pos:column="16"/></modifier></type><name pos:line="19" pos:column="16">msg<pos:position pos:line="19" pos:column="19"/></name></decl>;<pos:position pos:line="19" pos:column="20"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="20" pos:column="7">int<pos:position pos:line="20" pos:column="10"/></name></type> <name pos:line="20" pos:column="11">chflags<pos:position pos:line="20" pos:column="18"/></name> <init pos:line="20" pos:column="19">= <expr><literal type="number" pos:line="20" pos:column="21">0<pos:position pos:line="20" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="23"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="21" pos:column="7">int<pos:position pos:line="21" pos:column="10"/></name></type> <name pos:line="21" pos:column="11">r<pos:position pos:line="21" pos:column="12"/></name> <init pos:line="21" pos:column="13">= <expr><operator pos:line="21" pos:column="15">-<pos:position pos:line="21" pos:column="16"/></operator><literal type="number" pos:line="21" pos:column="16">1<pos:position pos:line="21" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="18"/></decl_stmt>
      
      <expr_stmt><expr><name pos:line="23" pos:column="7">hn<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">=<pos:position pos:line="23" pos:column="11"/></operator> <name><name pos:line="23" pos:column="12">m<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">-&gt;<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="15">hdr<pos:position pos:line="23" pos:column="18"/></name></name></expr>;<pos:position pos:line="23" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="24" pos:column="7">hn<pos:position pos:line="24" pos:column="9"/></name><operator pos:line="24" pos:column="9">-&gt;<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="11">msgno<pos:position pos:line="24" pos:column="16"/></name></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <name><name pos:line="24" pos:column="19">hdr<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">-&gt;<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="24">msgno<pos:position pos:line="24" pos:column="29"/></name></name></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt> <comment type="block" pos:line="24" pos:column="31">/* required for MH/maildir */</comment>
      <expr_stmt><expr><name><name pos:line="25" pos:column="7">hn<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">-&gt;<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="11">read<pos:position pos:line="25" pos:column="15"/></name></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <literal type="number" pos:line="25" pos:column="18">1<pos:position pos:line="25" pos:column="19"/></literal></expr>;<pos:position pos:line="25" pos:column="20"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="27" pos:column="7">fseeko<pos:position pos:line="27" pos:column="13"/></name> <argument_list pos:line="27" pos:column="14">(<argument><expr><name pos:line="27" pos:column="15">fp<pos:position pos:line="27" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="19">m<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">-&gt;<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="22">offset<pos:position pos:line="27" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="30">0<pos:position pos:line="27" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>
      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><call><name pos:line="28" pos:column="11">fgets<pos:position pos:line="28" pos:column="16"/></name> <argument_list pos:line="28" pos:column="17">(<argument><expr><name pos:line="28" pos:column="18">buf<pos:position pos:line="28" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="23">sizeof <argument_list pos:line="28" pos:column="30">(<argument><expr><name pos:line="28" pos:column="31">buf<pos:position pos:line="28" pos:column="34"/></name></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="28" pos:column="37">fp<pos:position pos:line="28" pos:column="39"/></name></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></call> <operator pos:line="28" pos:column="41">==<pos:position pos:line="28" pos:column="43"/></operator> <name pos:line="28" pos:column="44">NULL<pos:position pos:line="28" pos:column="48"/></name></expr>)<pos:position pos:line="28" pos:column="49"/></condition><then pos:line="28" pos:column="49">
	<block type="pseudo"><return pos:line="29" pos:column="9">return <expr><operator pos:line="29" pos:column="16">-<pos:position pos:line="29" pos:column="17"/></operator><literal type="number" pos:line="29" pos:column="17">1<pos:position pos:line="29" pos:column="18"/></literal></expr>;<pos:position pos:line="29" pos:column="19"/></return></block></then></if>
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><call><name pos:line="30" pos:column="11">mx_open_mailbox<pos:position pos:line="30" pos:column="26"/></name><argument_list pos:line="30" pos:column="26">(<argument><expr><name pos:line="30" pos:column="27">path<pos:position pos:line="30" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="33">MUTT_APPEND<pos:position pos:line="30" pos:column="44"/></name> <operator pos:line="30" pos:column="45">|<pos:position pos:line="30" pos:column="46"/></operator> <name pos:line="30" pos:column="47">MUTT_QUIET<pos:position pos:line="30" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="59">&amp;<pos:position pos:line="30" pos:column="64"/></operator><name pos:line="30" pos:column="60">ctx<pos:position pos:line="30" pos:column="63"/></name></expr></argument>)<pos:position pos:line="30" pos:column="64"/></argument_list></call> <operator pos:line="30" pos:column="65">==<pos:position pos:line="30" pos:column="67"/></operator> <name pos:line="30" pos:column="68">NULL<pos:position pos:line="30" pos:column="72"/></name></expr>)<pos:position pos:line="30" pos:column="73"/></condition><then pos:line="30" pos:column="73">
	<block type="pseudo"><return pos:line="31" pos:column="9">return <expr><operator pos:line="31" pos:column="16">-<pos:position pos:line="31" pos:column="17"/></operator><literal type="number" pos:line="31" pos:column="17">1<pos:position pos:line="31" pos:column="18"/></literal></expr>;<pos:position pos:line="31" pos:column="19"/></return></block></then></if>
      <if pos:line="32" pos:column="7">if <condition pos:line="32" pos:column="10">(<expr><operator pos:line="32" pos:column="11">(<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="12">msg<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <call><name pos:line="32" pos:column="18">mx_open_new_message<pos:position pos:line="32" pos:column="37"/></name> <argument_list pos:line="32" pos:column="38">(<argument><expr><operator pos:line="32" pos:column="39">&amp;<pos:position pos:line="32" pos:column="44"/></operator><name pos:line="32" pos:column="40">ctx<pos:position pos:line="32" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="45">hn<pos:position pos:line="32" pos:column="47"/></name></expr></argument>, <argument><expr><ternary><condition><expr><call><name pos:line="32" pos:column="49">is_from<pos:position pos:line="32" pos:column="56"/></name> <argument_list pos:line="32" pos:column="57">(<argument><expr><name pos:line="32" pos:column="58">buf<pos:position pos:line="32" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="63">NULL<pos:position pos:line="32" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="69">0<pos:position pos:line="32" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="72">NULL<pos:position pos:line="32" pos:column="76"/></name></expr></argument>)<pos:position pos:line="32" pos:column="77"/></argument_list></call></expr> ?<pos:position pos:line="32" pos:column="79"/></condition><then pos:line="32" pos:column="79"> <expr><literal type="number" pos:line="32" pos:column="80">0<pos:position pos:line="32" pos:column="81"/></literal></expr> <pos:position pos:line="32" pos:column="82"/></then><else pos:line="32" pos:column="82">: <expr><name pos:line="32" pos:column="84">MUTT_ADD_FROM<pos:position pos:line="32" pos:column="97"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="32" pos:column="98"/></argument_list></call><operator pos:line="32" pos:column="98">)<pos:position pos:line="32" pos:column="99"/></operator> <operator pos:line="32" pos:column="100">==<pos:position pos:line="32" pos:column="102"/></operator> <name pos:line="32" pos:column="103">NULL<pos:position pos:line="32" pos:column="107"/></name></expr>)<pos:position pos:line="32" pos:column="108"/></condition><then pos:line="32" pos:column="108">
      <block pos:line="33" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">mx_close_mailbox<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><operator pos:line="34" pos:column="26">&amp;<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="27">ctx<pos:position pos:line="34" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="32">NULL<pos:position pos:line="34" pos:column="36"/></name></expr></argument>)<pos:position pos:line="34" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="38"/></expr_stmt>
	<return pos:line="35" pos:column="9">return <expr><operator pos:line="35" pos:column="16">-<pos:position pos:line="35" pos:column="17"/></operator><literal type="number" pos:line="35" pos:column="17">1<pos:position pos:line="35" pos:column="18"/></literal></expr>;<pos:position pos:line="35" pos:column="19"/></return>
      }<pos:position pos:line="36" pos:column="8"/></block></then></if>
      <if pos:line="37" pos:column="7">if <condition pos:line="37" pos:column="10">(<expr><name><name pos:line="37" pos:column="11">ctx<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">.<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="15">magic<pos:position pos:line="37" pos:column="20"/></name></name> <operator pos:line="37" pos:column="21">==<pos:position pos:line="37" pos:column="23"/></operator> <name pos:line="37" pos:column="24">MUTT_MBOX<pos:position pos:line="37" pos:column="33"/></name> <operator pos:line="37" pos:column="34">||<pos:position pos:line="37" pos:column="36"/></operator> <name><name pos:line="37" pos:column="37">ctx<pos:position pos:line="37" pos:column="40"/></name><operator pos:line="37" pos:column="40">.<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="41">magic<pos:position pos:line="37" pos:column="46"/></name></name> <operator pos:line="37" pos:column="47">==<pos:position pos:line="37" pos:column="49"/></operator> <name pos:line="37" pos:column="50">MUTT_MMDF<pos:position pos:line="37" pos:column="59"/></name></expr>)<pos:position pos:line="37" pos:column="60"/></condition><then pos:line="37" pos:column="60">
	<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="9">chflags<pos:position pos:line="38" pos:column="16"/></name> <operator pos:line="38" pos:column="17">=<pos:position pos:line="38" pos:column="18"/></operator> <name pos:line="38" pos:column="19">CH_FROM<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">|<pos:position pos:line="38" pos:column="28"/></operator> <name pos:line="38" pos:column="29">CH_UPDATE_LEN<pos:position pos:line="38" pos:column="42"/></name></expr>;<pos:position pos:line="38" pos:column="43"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="39" pos:column="7">chflags<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">|=<pos:position pos:line="39" pos:column="17"/></operator> <operator pos:line="39" pos:column="18">(<pos:position pos:line="39" pos:column="19"/></operator><ternary><condition><expr><name><name pos:line="39" pos:column="19">ctx<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">.<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="23">magic<pos:position pos:line="39" pos:column="28"/></name></name> <operator pos:line="39" pos:column="29">==<pos:position pos:line="39" pos:column="31"/></operator> <name pos:line="39" pos:column="32">MUTT_MAILDIR<pos:position pos:line="39" pos:column="44"/></name></expr> ?<pos:position pos:line="39" pos:column="46"/></condition><then pos:line="39" pos:column="46"> <expr><name pos:line="39" pos:column="47">CH_NOSTATUS<pos:position pos:line="39" pos:column="58"/></name></expr> <pos:position pos:line="39" pos:column="59"/></then><else pos:line="39" pos:column="59">: <expr><name pos:line="39" pos:column="61">CH_UPDATE<pos:position pos:line="39" pos:column="70"/></name></expr></else></ternary><operator pos:line="39" pos:column="70">)<pos:position pos:line="39" pos:column="71"/></operator></expr>;<pos:position pos:line="39" pos:column="72"/></expr_stmt>
      <if pos:line="40" pos:column="7">if <condition pos:line="40" pos:column="10">(<expr><call><name pos:line="40" pos:column="11">_mutt_copy_message<pos:position pos:line="40" pos:column="29"/></name> <argument_list pos:line="40" pos:column="30">(<argument><expr><name><name pos:line="40" pos:column="31">msg<pos:position pos:line="40" pos:column="34"/></name><operator pos:line="40" pos:column="34">-&gt;<pos:position pos:line="40" pos:column="39"/></operator><name pos:line="40" pos:column="36">fp<pos:position pos:line="40" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="40">fp<pos:position pos:line="40" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="44">hn<pos:position pos:line="40" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="48">hn<pos:position pos:line="40" pos:column="50"/></name><operator pos:line="40" pos:column="50">-&gt;<pos:position pos:line="40" pos:column="55"/></operator><name pos:line="40" pos:column="52">content<pos:position pos:line="40" pos:column="59"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="61">0<pos:position pos:line="40" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="64">chflags<pos:position pos:line="40" pos:column="71"/></name></expr></argument>)<pos:position pos:line="40" pos:column="72"/></argument_list></call> <operator pos:line="40" pos:column="73">==<pos:position pos:line="40" pos:column="75"/></operator> <literal type="number" pos:line="40" pos:column="76">0<pos:position pos:line="40" pos:column="77"/></literal> 
	  <operator pos:line="41" pos:column="11">&amp;&amp;<pos:position pos:line="41" pos:column="21"/></operator> <call><name pos:line="41" pos:column="14">mx_commit_message<pos:position pos:line="41" pos:column="31"/></name> <argument_list pos:line="41" pos:column="32">(<argument><expr><name pos:line="41" pos:column="33">msg<pos:position pos:line="41" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="38">&amp;<pos:position pos:line="41" pos:column="43"/></operator><name pos:line="41" pos:column="39">ctx<pos:position pos:line="41" pos:column="42"/></name></expr></argument>)<pos:position pos:line="41" pos:column="43"/></argument_list></call> <operator pos:line="41" pos:column="44">==<pos:position pos:line="41" pos:column="46"/></operator> <literal type="number" pos:line="41" pos:column="47">0<pos:position pos:line="41" pos:column="48"/></literal></expr>)<pos:position pos:line="41" pos:column="49"/></condition><then pos:line="41" pos:column="49">
	<block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="9">r<pos:position pos:line="42" pos:column="10"/></name> <operator pos:line="42" pos:column="11">=<pos:position pos:line="42" pos:column="12"/></operator> <literal type="number" pos:line="42" pos:column="13">0<pos:position pos:line="42" pos:column="14"/></literal></expr>;<pos:position pos:line="42" pos:column="15"/></expr_stmt></block></then>
      <else pos:line="43" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="9">r<pos:position pos:line="44" pos:column="10"/></name> <operator pos:line="44" pos:column="11">=<pos:position pos:line="44" pos:column="12"/></operator> <operator pos:line="44" pos:column="13">-<pos:position pos:line="44" pos:column="14"/></operator><literal type="number" pos:line="44" pos:column="14">1<pos:position pos:line="44" pos:column="15"/></literal></expr>;<pos:position pos:line="44" pos:column="16"/></expr_stmt></block></else></if>

      <expr_stmt><expr><call><name pos:line="46" pos:column="7">mx_close_message<pos:position pos:line="46" pos:column="23"/></name> <argument_list pos:line="46" pos:column="24">(<argument><expr><operator pos:line="46" pos:column="25">&amp;<pos:position pos:line="46" pos:column="30"/></operator><name pos:line="46" pos:column="26">ctx<pos:position pos:line="46" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="31">&amp;<pos:position pos:line="46" pos:column="36"/></operator><name pos:line="46" pos:column="32">msg<pos:position pos:line="46" pos:column="35"/></name></expr></argument>)<pos:position pos:line="46" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="47" pos:column="7">mx_close_mailbox<pos:position pos:line="47" pos:column="23"/></name> <argument_list pos:line="47" pos:column="24">(<argument><expr><operator pos:line="47" pos:column="25">&amp;<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="26">ctx<pos:position pos:line="47" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="31">NULL<pos:position pos:line="47" pos:column="35"/></name></expr></argument>)<pos:position pos:line="47" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="37"/></expr_stmt>
      <return pos:line="48" pos:column="7">return <expr><name pos:line="48" pos:column="14">r<pos:position pos:line="48" pos:column="15"/></name></expr>;<pos:position pos:line="48" pos:column="16"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then>
    <else pos:line="50" pos:column="5">else
    <block pos:line="51" pos:column="5">{
      <comment type="block" pos:line="52" pos:column="7">/* In recv mode, extract from folder and decode */</comment>
      
      <decl_stmt><decl><type><name pos:line="54" pos:column="7">STATE<pos:position pos:line="54" pos:column="12"/></name></type> <name pos:line="54" pos:column="13">s<pos:position pos:line="54" pos:column="14"/></name></decl>;<pos:position pos:line="54" pos:column="15"/></decl_stmt>
      
      <expr_stmt><expr><call><name pos:line="56" pos:column="7">memset<pos:position pos:line="56" pos:column="13"/></name> <argument_list pos:line="56" pos:column="14">(<argument><expr><operator pos:line="56" pos:column="15">&amp;<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="16">s<pos:position pos:line="56" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="19">0<pos:position pos:line="56" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="56" pos:column="22">sizeof <argument_list pos:line="56" pos:column="29">(<argument><expr><name pos:line="56" pos:column="30">s<pos:position pos:line="56" pos:column="31"/></name></expr></argument>)<pos:position pos:line="56" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="56" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="34"/></expr_stmt>
      <if pos:line="57" pos:column="7">if <condition pos:line="57" pos:column="10">(<expr><operator pos:line="57" pos:column="11">(<pos:position pos:line="57" pos:column="12"/></operator><name><name pos:line="57" pos:column="12">s<pos:position pos:line="57" pos:column="13"/></name><operator pos:line="57" pos:column="13">.<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="14">fpout<pos:position pos:line="57" pos:column="19"/></name></name> <operator pos:line="57" pos:column="20">=<pos:position pos:line="57" pos:column="21"/></operator> <call><name pos:line="57" pos:column="22">mutt_save_attachment_open<pos:position pos:line="57" pos:column="47"/></name> <argument_list pos:line="57" pos:column="48">(<argument><expr><name pos:line="57" pos:column="49">path<pos:position pos:line="57" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="55">flags<pos:position pos:line="57" pos:column="60"/></name></expr></argument>)<pos:position pos:line="57" pos:column="61"/></argument_list></call><operator pos:line="57" pos:column="61">)<pos:position pos:line="57" pos:column="62"/></operator> <operator pos:line="57" pos:column="63">==<pos:position pos:line="57" pos:column="65"/></operator> <name pos:line="57" pos:column="66">NULL<pos:position pos:line="57" pos:column="70"/></name></expr>)<pos:position pos:line="57" pos:column="71"/></condition><then pos:line="57" pos:column="71">
      <block pos:line="58" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="59" pos:column="9">mutt_perror<pos:position pos:line="59" pos:column="20"/></name> <argument_list pos:line="59" pos:column="21">(<argument><expr><literal type="string" pos:line="59" pos:column="22">"fopen"<pos:position pos:line="59" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="60" pos:column="9">mutt_sleep<pos:position pos:line="60" pos:column="19"/></name> <argument_list pos:line="60" pos:column="20">(<argument><expr><literal type="number" pos:line="60" pos:column="21">2<pos:position pos:line="60" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="24"/></expr_stmt>
	<return pos:line="61" pos:column="9">return <expr><operator pos:line="61" pos:column="16">(<pos:position pos:line="61" pos:column="17"/></operator><operator pos:line="61" pos:column="17">-<pos:position pos:line="61" pos:column="18"/></operator><literal type="number" pos:line="61" pos:column="18">1<pos:position pos:line="61" pos:column="19"/></literal><operator pos:line="61" pos:column="19">)<pos:position pos:line="61" pos:column="20"/></operator></expr>;<pos:position pos:line="61" pos:column="21"/></return>
      }<pos:position pos:line="62" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="63" pos:column="7">fseeko<pos:position pos:line="63" pos:column="13"/></name> <argument_list pos:line="63" pos:column="14">(<argument><expr><operator pos:line="63" pos:column="15">(<pos:position pos:line="63" pos:column="16"/></operator><name><name pos:line="63" pos:column="16">s<pos:position pos:line="63" pos:column="17"/></name><operator pos:line="63" pos:column="17">.<pos:position pos:line="63" pos:column="18"/></operator><name pos:line="63" pos:column="18">fpin<pos:position pos:line="63" pos:column="22"/></name></name> <operator pos:line="63" pos:column="23">=<pos:position pos:line="63" pos:column="24"/></operator> <name pos:line="63" pos:column="25">fp<pos:position pos:line="63" pos:column="27"/></name><operator pos:line="63" pos:column="27">)<pos:position pos:line="63" pos:column="28"/></operator></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="30">m<pos:position pos:line="63" pos:column="31"/></name><operator pos:line="63" pos:column="31">-&gt;<pos:position pos:line="63" pos:column="36"/></operator><name pos:line="63" pos:column="33">offset<pos:position pos:line="63" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="41">0<pos:position pos:line="63" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="64" pos:column="7">mutt_decode_attachment<pos:position pos:line="64" pos:column="29"/></name> <argument_list pos:line="64" pos:column="30">(<argument><expr><name pos:line="64" pos:column="31">m<pos:position pos:line="64" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="34">&amp;<pos:position pos:line="64" pos:column="39"/></operator><name pos:line="64" pos:column="35">s<pos:position pos:line="64" pos:column="36"/></name></expr></argument>)<pos:position pos:line="64" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="38"/></expr_stmt>
      
      <if pos:line="66" pos:column="7">if <condition pos:line="66" pos:column="10">(<expr><call><name pos:line="66" pos:column="11">fclose<pos:position pos:line="66" pos:column="17"/></name> <argument_list pos:line="66" pos:column="18">(<argument><expr><name><name pos:line="66" pos:column="19">s<pos:position pos:line="66" pos:column="20"/></name><operator pos:line="66" pos:column="20">.<pos:position pos:line="66" pos:column="21"/></operator><name pos:line="66" pos:column="21">fpout<pos:position pos:line="66" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="27"/></argument_list></call> <operator pos:line="66" pos:column="28">!=<pos:position pos:line="66" pos:column="30"/></operator> <literal type="number" pos:line="66" pos:column="31">0<pos:position pos:line="66" pos:column="32"/></literal></expr>)<pos:position pos:line="66" pos:column="33"/></condition><then pos:line="66" pos:column="33">
      <block pos:line="67" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="68" pos:column="9">mutt_perror<pos:position pos:line="68" pos:column="20"/></name> <argument_list pos:line="68" pos:column="21">(<argument><expr><literal type="string" pos:line="68" pos:column="22">"fclose"<pos:position pos:line="68" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="69" pos:column="9">mutt_sleep<pos:position pos:line="69" pos:column="19"/></name> <argument_list pos:line="69" pos:column="20">(<argument><expr><literal type="number" pos:line="69" pos:column="21">2<pos:position pos:line="69" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="24"/></expr_stmt>
	<return pos:line="70" pos:column="9">return <expr><operator pos:line="70" pos:column="16">(<pos:position pos:line="70" pos:column="17"/></operator><operator pos:line="70" pos:column="17">-<pos:position pos:line="70" pos:column="18"/></operator><literal type="number" pos:line="70" pos:column="18">1<pos:position pos:line="70" pos:column="19"/></literal><operator pos:line="70" pos:column="19">)<pos:position pos:line="70" pos:column="20"/></operator></expr>;<pos:position pos:line="70" pos:column="21"/></return>
      }<pos:position pos:line="71" pos:column="8"/></block></then></if>
    }<pos:position pos:line="72" pos:column="6"/></block></else></if>
  }<pos:position pos:line="73" pos:column="4"/></block></then>
  <else pos:line="74" pos:column="3">else
  <block pos:line="75" pos:column="3">{
    <comment type="block" pos:line="76" pos:column="5">/* In send mode, just copy file */</comment>

    <decl_stmt><decl><type><name pos:line="78" pos:column="5">FILE<pos:position pos:line="78" pos:column="9"/></name> <modifier pos:line="78" pos:column="10">*<pos:position pos:line="78" pos:column="11"/></modifier></type><name pos:line="78" pos:column="11">ofp<pos:position pos:line="78" pos:column="14"/></name></decl>, <modifier pos:line="78" pos:column="16">*<pos:position pos:line="78" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="78" pos:column="17">nfp<pos:position pos:line="78" pos:column="20"/></name></decl>;<pos:position pos:line="78" pos:column="21"/></decl_stmt>

    <if pos:line="80" pos:column="5">if <condition pos:line="80" pos:column="8">(<expr><operator pos:line="80" pos:column="9">(<pos:position pos:line="80" pos:column="10"/></operator><name pos:line="80" pos:column="10">ofp<pos:position pos:line="80" pos:column="13"/></name> <operator pos:line="80" pos:column="14">=<pos:position pos:line="80" pos:column="15"/></operator> <call><name pos:line="80" pos:column="16">fopen<pos:position pos:line="80" pos:column="21"/></name> <argument_list pos:line="80" pos:column="22">(<argument><expr><name><name pos:line="80" pos:column="23">m<pos:position pos:line="80" pos:column="24"/></name><operator pos:line="80" pos:column="24">-&gt;<pos:position pos:line="80" pos:column="29"/></operator><name pos:line="80" pos:column="26">filename<pos:position pos:line="80" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="36">"r"<pos:position pos:line="80" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="40"/></argument_list></call><operator pos:line="80" pos:column="40">)<pos:position pos:line="80" pos:column="41"/></operator> <operator pos:line="80" pos:column="42">==<pos:position pos:line="80" pos:column="44"/></operator> <name pos:line="80" pos:column="45">NULL<pos:position pos:line="80" pos:column="49"/></name></expr>)<pos:position pos:line="80" pos:column="50"/></condition><then pos:line="80" pos:column="50">
    <block pos:line="81" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="82" pos:column="7">mutt_perror<pos:position pos:line="82" pos:column="18"/></name> <argument_list pos:line="82" pos:column="19">(<argument><expr><literal type="string" pos:line="82" pos:column="20">"fopen"<pos:position pos:line="82" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="29"/></expr_stmt>
      <return pos:line="83" pos:column="7">return <expr><operator pos:line="83" pos:column="14">(<pos:position pos:line="83" pos:column="15"/></operator><operator pos:line="83" pos:column="15">-<pos:position pos:line="83" pos:column="16"/></operator><literal type="number" pos:line="83" pos:column="16">1<pos:position pos:line="83" pos:column="17"/></literal><operator pos:line="83" pos:column="17">)<pos:position pos:line="83" pos:column="18"/></operator></expr>;<pos:position pos:line="83" pos:column="19"/></return>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if>
    
    <if pos:line="86" pos:column="5">if <condition pos:line="86" pos:column="8">(<expr><operator pos:line="86" pos:column="9">(<pos:position pos:line="86" pos:column="10"/></operator><name pos:line="86" pos:column="10">nfp<pos:position pos:line="86" pos:column="13"/></name> <operator pos:line="86" pos:column="14">=<pos:position pos:line="86" pos:column="15"/></operator> <call><name pos:line="86" pos:column="16">mutt_save_attachment_open<pos:position pos:line="86" pos:column="41"/></name> <argument_list pos:line="86" pos:column="42">(<argument><expr><name pos:line="86" pos:column="43">path<pos:position pos:line="86" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="49">flags<pos:position pos:line="86" pos:column="54"/></name></expr></argument>)<pos:position pos:line="86" pos:column="55"/></argument_list></call><operator pos:line="86" pos:column="55">)<pos:position pos:line="86" pos:column="56"/></operator> <operator pos:line="86" pos:column="57">==<pos:position pos:line="86" pos:column="59"/></operator> <name pos:line="86" pos:column="60">NULL<pos:position pos:line="86" pos:column="64"/></name></expr>)<pos:position pos:line="86" pos:column="65"/></condition><then pos:line="86" pos:column="65">
    <block pos:line="87" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="88" pos:column="7">mutt_perror<pos:position pos:line="88" pos:column="18"/></name> <argument_list pos:line="88" pos:column="19">(<argument><expr><literal type="string" pos:line="88" pos:column="20">"fopen"<pos:position pos:line="88" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="89" pos:column="7">safe_fclose<pos:position pos:line="89" pos:column="18"/></name> <argument_list pos:line="89" pos:column="19">(<argument><expr><operator pos:line="89" pos:column="20">&amp;<pos:position pos:line="89" pos:column="25"/></operator><name pos:line="89" pos:column="21">ofp<pos:position pos:line="89" pos:column="24"/></name></expr></argument>)<pos:position pos:line="89" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="26"/></expr_stmt>
      <return pos:line="90" pos:column="7">return <expr><operator pos:line="90" pos:column="14">(<pos:position pos:line="90" pos:column="15"/></operator><operator pos:line="90" pos:column="15">-<pos:position pos:line="90" pos:column="16"/></operator><literal type="number" pos:line="90" pos:column="16">1<pos:position pos:line="90" pos:column="17"/></literal><operator pos:line="90" pos:column="17">)<pos:position pos:line="90" pos:column="18"/></operator></expr>;<pos:position pos:line="90" pos:column="19"/></return>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>

    <if pos:line="93" pos:column="5">if <condition pos:line="93" pos:column="8">(<expr><call><name pos:line="93" pos:column="9">mutt_copy_stream<pos:position pos:line="93" pos:column="25"/></name> <argument_list pos:line="93" pos:column="26">(<argument><expr><name pos:line="93" pos:column="27">ofp<pos:position pos:line="93" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="32">nfp<pos:position pos:line="93" pos:column="35"/></name></expr></argument>)<pos:position pos:line="93" pos:column="36"/></argument_list></call> <operator pos:line="93" pos:column="37">==<pos:position pos:line="93" pos:column="39"/></operator> <operator pos:line="93" pos:column="40">-<pos:position pos:line="93" pos:column="41"/></operator><literal type="number" pos:line="93" pos:column="41">1<pos:position pos:line="93" pos:column="42"/></literal></expr>)<pos:position pos:line="93" pos:column="43"/></condition><then pos:line="93" pos:column="43">
    <block pos:line="94" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="95" pos:column="7">mutt_error<pos:position pos:line="95" pos:column="17"/></name></type> <name pos:line="95" pos:column="18">_<pos:position pos:line="95" pos:column="19"/></name><argument_list pos:line="95" pos:column="19">(<argument><expr><literal type="string" pos:line="95" pos:column="20">"Write fault!"<pos:position pos:line="95" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="35"/></argument_list></decl>;<pos:position pos:line="95" pos:column="36"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="96" pos:column="7">safe_fclose<pos:position pos:line="96" pos:column="18"/></name> <argument_list pos:line="96" pos:column="19">(<argument><expr><operator pos:line="96" pos:column="20">&amp;<pos:position pos:line="96" pos:column="25"/></operator><name pos:line="96" pos:column="21">ofp<pos:position pos:line="96" pos:column="24"/></name></expr></argument>)<pos:position pos:line="96" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="97" pos:column="7">safe_fclose<pos:position pos:line="97" pos:column="18"/></name> <argument_list pos:line="97" pos:column="19">(<argument><expr><operator pos:line="97" pos:column="20">&amp;<pos:position pos:line="97" pos:column="25"/></operator><name pos:line="97" pos:column="21">nfp<pos:position pos:line="97" pos:column="24"/></name></expr></argument>)<pos:position pos:line="97" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="26"/></expr_stmt>
      <return pos:line="98" pos:column="7">return <expr><operator pos:line="98" pos:column="14">(<pos:position pos:line="98" pos:column="15"/></operator><operator pos:line="98" pos:column="15">-<pos:position pos:line="98" pos:column="16"/></operator><literal type="number" pos:line="98" pos:column="16">1<pos:position pos:line="98" pos:column="17"/></literal><operator pos:line="98" pos:column="17">)<pos:position pos:line="98" pos:column="18"/></operator></expr>;<pos:position pos:line="98" pos:column="19"/></return>
    }<pos:position pos:line="99" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="100" pos:column="5">safe_fclose<pos:position pos:line="100" pos:column="16"/></name> <argument_list pos:line="100" pos:column="17">(<argument><expr><operator pos:line="100" pos:column="18">&amp;<pos:position pos:line="100" pos:column="23"/></operator><name pos:line="100" pos:column="19">ofp<pos:position pos:line="100" pos:column="22"/></name></expr></argument>)<pos:position pos:line="100" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="101" pos:column="5">safe_fclose<pos:position pos:line="101" pos:column="16"/></name> <argument_list pos:line="101" pos:column="17">(<argument><expr><operator pos:line="101" pos:column="18">&amp;<pos:position pos:line="101" pos:column="23"/></operator><name pos:line="101" pos:column="19">nfp<pos:position pos:line="101" pos:column="22"/></name></expr></argument>)<pos:position pos:line="101" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="102" pos:column="4"/></block></else></if>

  <return pos:line="104" pos:column="3">return <expr><literal type="number" pos:line="104" pos:column="10">0<pos:position pos:line="104" pos:column="11"/></literal></expr>;<pos:position pos:line="104" pos:column="12"/></return>
}<pos:position pos:line="105" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1054_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">unsigned<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">char<pos:position pos:line="1" pos:column="21"/></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type>
<name pos:line="2" pos:column="1">dump_int<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name pos:line="2" pos:column="10">unsigned<pos:position pos:line="2" pos:column="18"/></name> <name pos:line="2" pos:column="19">int<pos:position pos:line="2" pos:column="22"/></name></type> <name pos:line="2" pos:column="23">i<pos:position pos:line="2" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="26">unsigned<pos:position pos:line="2" pos:column="34"/></name> <name pos:line="2" pos:column="35">char<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">d<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">int<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">off<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">lazy_realloc<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">(<argument><expr><operator pos:line="4" pos:column="16">&amp;<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="17">d<pos:position pos:line="4" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="21">off<pos:position pos:line="4" pos:column="24"/></name> <operator pos:line="4" pos:column="25">+<pos:position pos:line="4" pos:column="26"/></operator> <sizeof pos:line="4" pos:column="27">sizeof <argument_list pos:line="4" pos:column="34">(<argument><expr><name pos:line="4" pos:column="35">int<pos:position pos:line="4" pos:column="38"/></name></expr></argument>)<pos:position pos:line="4" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">memcpy<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name pos:line="5" pos:column="10">d<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">+<pos:position pos:line="5" pos:column="13"/></operator> <operator pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="15">off<pos:position pos:line="5" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="20">&amp;<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="21">i<pos:position pos:line="5" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="24">sizeof <argument_list pos:line="5" pos:column="31">(<argument><expr><name pos:line="5" pos:column="32">int<pos:position pos:line="5" pos:column="35"/></name></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="6" pos:column="3">(<pos:position pos:line="6" pos:column="4"/></operator><operator pos:line="6" pos:column="4">*<pos:position pos:line="6" pos:column="5"/></operator><name pos:line="6" pos:column="5">off<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">)<pos:position pos:line="6" pos:column="9"/></operator> <operator pos:line="6" pos:column="10">+=<pos:position pos:line="6" pos:column="12"/></operator> <sizeof pos:line="6" pos:column="13">sizeof <argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">int<pos:position pos:line="6" pos:column="24"/></name></expr></argument>)<pos:position pos:line="6" pos:column="25"/></argument_list></sizeof></expr>;<pos:position pos:line="6" pos:column="26"/></expr_stmt>

  <return pos:line="8" pos:column="3">return <expr><name pos:line="8" pos:column="10">d<pos:position pos:line="8" pos:column="11"/></name></expr>;<pos:position pos:line="8" pos:column="12"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1281_mutt-1.4.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cmd_handle_untagged<pos:position pos:line="1" pos:column="31"/></name> <parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">IMAP_DATA<pos:position pos:line="1" pos:column="42"/></name><modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type> <name pos:line="1" pos:column="44">idata<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name><modifier pos:line="3" pos:column="7">*<pos:position pos:line="3" pos:column="8"/></modifier></type> <name pos:line="3" pos:column="9">s<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name><modifier pos:line="4" pos:column="7">*<pos:position pos:line="4" pos:column="8"/></modifier></type> <name pos:line="4" pos:column="9">pn<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">count<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">s<pos:position pos:line="7" pos:column="4"/></name> <operator pos:line="7" pos:column="5">=<pos:position pos:line="7" pos:column="6"/></operator> <call><name pos:line="7" pos:column="7">imap_next_word<pos:position pos:line="7" pos:column="21"/></name> <argument_list pos:line="7" pos:column="22">(<argument><expr><name><name pos:line="7" pos:column="23">idata<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">-&gt;<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="30">cmd<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">.<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="34">buf<pos:position pos:line="7" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="39"/></expr_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">(<pos:position pos:line="9" pos:column="8"/></operator><name><name pos:line="9" pos:column="8">idata<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">state<pos:position pos:line="9" pos:column="20"/></name></name> <operator pos:line="9" pos:column="21">==<pos:position pos:line="9" pos:column="23"/></operator> <name pos:line="9" pos:column="24">IMAP_SELECTED<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">)<pos:position pos:line="9" pos:column="38"/></operator> <operator pos:line="9" pos:column="39">&amp;&amp;<pos:position pos:line="9" pos:column="49"/></operator> <call><name pos:line="9" pos:column="42">isdigit<pos:position pos:line="9" pos:column="49"/></name> <argument_list pos:line="9" pos:column="50">(<argument><expr><operator pos:line="9" pos:column="51">*<pos:position pos:line="9" pos:column="52"/></operator><name pos:line="9" pos:column="52">s<pos:position pos:line="9" pos:column="53"/></name></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="55"/></condition><then pos:line="9" pos:column="55">
  <block pos:line="10" pos:column="3">{
    <expr_stmt><expr><name pos:line="11" pos:column="5">pn<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <name pos:line="11" pos:column="10">s<pos:position pos:line="11" pos:column="11"/></name></expr>;<pos:position pos:line="11" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">s<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <call><name pos:line="12" pos:column="9">imap_next_word<pos:position pos:line="12" pos:column="23"/></name> <argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">s<pos:position pos:line="12" pos:column="26"/></name></expr></argument>)<pos:position pos:line="12" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt>

    <comment type="block" pos:line="14" pos:column="5">/* EXISTS and EXPUNGE are always related to the SELECTED mailbox for the
     * connection, so update that one.
     */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name pos:line="17" pos:column="9">ascii_strncasecmp<pos:position pos:line="17" pos:column="26"/></name> <argument_list pos:line="17" pos:column="27">(<argument><expr><literal type="string" pos:line="17" pos:column="28">"EXISTS"<pos:position pos:line="17" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="38">s<pos:position pos:line="17" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="41">6<pos:position pos:line="17" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call> <operator pos:line="17" pos:column="44">==<pos:position pos:line="17" pos:column="46"/></operator> <literal type="number" pos:line="17" pos:column="47">0<pos:position pos:line="17" pos:column="48"/></literal></expr>)<pos:position pos:line="17" pos:column="49"/></condition><then pos:line="17" pos:column="49">
    <block pos:line="18" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">dprint<pos:position pos:line="19" pos:column="13"/></name> <argument_list pos:line="19" pos:column="14">(<argument><expr><literal type="number" pos:line="19" pos:column="15">2<pos:position pos:line="19" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="18">(<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="19">debugfile<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">,<pos:position pos:line="19" pos:column="29"/></operator> <literal type="string" pos:line="19" pos:column="30">"Handling EXISTS\n"<pos:position pos:line="19" pos:column="49"/></literal><operator pos:line="19" pos:column="49">)<pos:position pos:line="19" pos:column="50"/></operator></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="52"/></expr_stmt>

      <comment type="block" pos:line="21" pos:column="7">/* new mail arrived */</comment>
      <expr_stmt><expr><name pos:line="22" pos:column="7">count<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <call><name pos:line="22" pos:column="15">atoi<pos:position pos:line="22" pos:column="19"/></name> <argument_list pos:line="22" pos:column="20">(<argument><expr><name pos:line="22" pos:column="21">pn<pos:position pos:line="22" pos:column="23"/></name></expr></argument>)<pos:position pos:line="22" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>

      <if pos:line="24" pos:column="7">if <condition pos:line="24" pos:column="10">( <expr><operator pos:line="24" pos:column="12">!<pos:position pos:line="24" pos:column="13"/></operator><operator pos:line="24" pos:column="13">(<pos:position pos:line="24" pos:column="14"/></operator><name><name pos:line="24" pos:column="14">idata<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">-&gt;<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="21">reopen<pos:position pos:line="24" pos:column="27"/></name></name> <operator pos:line="24" pos:column="28">&amp;<pos:position pos:line="24" pos:column="33"/></operator> <name pos:line="24" pos:column="30">IMAP_EXPUNGE_PENDING<pos:position pos:line="24" pos:column="50"/></name><operator pos:line="24" pos:column="50">)<pos:position pos:line="24" pos:column="51"/></operator> <operator pos:line="24" pos:column="52">&amp;&amp;<pos:position pos:line="24" pos:column="62"/></operator>
	   <name pos:line="25" pos:column="12">count<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">&lt;<pos:position pos:line="25" pos:column="22"/></operator> <name><name pos:line="25" pos:column="20">idata<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">-&gt;<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="27">ctx<pos:position pos:line="25" pos:column="30"/></name><operator pos:line="25" pos:column="30">-&gt;<pos:position pos:line="25" pos:column="35"/></operator><name pos:line="25" pos:column="32">msgcount<pos:position pos:line="25" pos:column="40"/></name></name></expr>)<pos:position pos:line="25" pos:column="41"/></condition><then pos:line="25" pos:column="41">
      <block pos:line="26" pos:column="7">{
	<comment type="block" pos:line="27" pos:column="9">/* something is wrong because the server reported fewer messages
	 * than we previously saw
	 */</comment>
	<decl_stmt><decl><type><name pos:line="30" pos:column="9">mutt_error<pos:position pos:line="30" pos:column="19"/></name></type> <name pos:line="30" pos:column="20">_<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><literal type="string" pos:line="30" pos:column="22">"Fatal error.  Message count is out of sync!"<pos:position pos:line="30" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="68"/></argument_list></decl>;<pos:position pos:line="30" pos:column="69"/></decl_stmt>
	<expr_stmt><expr><name><name pos:line="31" pos:column="9">idata<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">-&gt;<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="16">status<pos:position pos:line="31" pos:column="22"/></name></name> <operator pos:line="31" pos:column="23">=<pos:position pos:line="31" pos:column="24"/></operator> <name pos:line="31" pos:column="25">IMAP_FATAL<pos:position pos:line="31" pos:column="35"/></name></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt>
	<return pos:line="32" pos:column="9">return <expr><operator pos:line="32" pos:column="16">-<pos:position pos:line="32" pos:column="17"/></operator><literal type="number" pos:line="32" pos:column="17">1<pos:position pos:line="32" pos:column="18"/></literal></expr>;<pos:position pos:line="32" pos:column="19"/></return>
      }<pos:position pos:line="33" pos:column="8"/></block></then>
      <comment type="block" pos:line="34" pos:column="7">/* at least the InterChange server sends EXISTS messages freely,
       * even when there is no new mail */</comment>
      <elseif pos:line="36" pos:column="7">else <if pos:line="36" pos:column="12">if <condition pos:line="36" pos:column="15">(<expr><name pos:line="36" pos:column="16">count<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">==<pos:position pos:line="36" pos:column="24"/></operator> <name><name pos:line="36" pos:column="25">idata<pos:position pos:line="36" pos:column="30"/></name><operator pos:line="36" pos:column="30">-&gt;<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="32">ctx<pos:position pos:line="36" pos:column="35"/></name><operator pos:line="36" pos:column="35">-&gt;<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="37">msgcount<pos:position pos:line="36" pos:column="45"/></name></name></expr>)<pos:position pos:line="36" pos:column="46"/></condition><then pos:line="36" pos:column="46">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="9">dprint<pos:position pos:line="37" pos:column="15"/></name> <argument_list pos:line="37" pos:column="16">(<argument><expr><literal type="number" pos:line="37" pos:column="17">3<pos:position pos:line="37" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="37" pos:column="20">(<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="21">debugfile<pos:position pos:line="37" pos:column="30"/></name><operator pos:line="37" pos:column="30">,<pos:position pos:line="37" pos:column="31"/></operator>
          <literal type="string" pos:line="38" pos:column="11">"cmd_handle_untagged: superfluous EXISTS message.\n"<pos:position pos:line="38" pos:column="63"/></literal><operator pos:line="38" pos:column="63">)<pos:position pos:line="38" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="38" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="66"/></expr_stmt></block></then></if></elseif>
      <else pos:line="39" pos:column="7">else
      <block pos:line="40" pos:column="7">{
	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">!<pos:position pos:line="41" pos:column="14"/></operator><operator pos:line="41" pos:column="14">(<pos:position pos:line="41" pos:column="15"/></operator><name><name pos:line="41" pos:column="15">idata<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">-&gt;<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="22">reopen<pos:position pos:line="41" pos:column="28"/></name></name> <operator pos:line="41" pos:column="29">&amp;<pos:position pos:line="41" pos:column="34"/></operator> <name pos:line="41" pos:column="31">IMAP_EXPUNGE_PENDING<pos:position pos:line="41" pos:column="51"/></name><operator pos:line="41" pos:column="51">)<pos:position pos:line="41" pos:column="52"/></operator></expr>)<pos:position pos:line="41" pos:column="53"/></condition><then pos:line="41" pos:column="53">
        <block pos:line="42" pos:column="9">{
          <expr_stmt><expr><call><name pos:line="43" pos:column="11">dprint<pos:position pos:line="43" pos:column="17"/></name> <argument_list pos:line="43" pos:column="18">(<argument><expr><literal type="number" pos:line="43" pos:column="19">2<pos:position pos:line="43" pos:column="20"/></literal></expr></argument>, <argument><expr><operator pos:line="43" pos:column="22">(<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="23">debugfile<pos:position pos:line="43" pos:column="32"/></name><operator pos:line="43" pos:column="32">,<pos:position pos:line="43" pos:column="33"/></operator>
            <literal type="string" pos:line="44" pos:column="13">"cmd_handle_untagged: New mail in %s - %d messages total.\n"<pos:position pos:line="44" pos:column="73"/></literal><operator pos:line="44" pos:column="73">,<pos:position pos:line="44" pos:column="74"/></operator>
            <name><name pos:line="45" pos:column="13">idata<pos:position pos:line="45" pos:column="18"/></name><operator pos:line="45" pos:column="18">-&gt;<pos:position pos:line="45" pos:column="23"/></operator><name pos:line="45" pos:column="20">mailbox<pos:position pos:line="45" pos:column="27"/></name></name><operator pos:line="45" pos:column="27">,<pos:position pos:line="45" pos:column="28"/></operator> <name pos:line="45" pos:column="29">count<pos:position pos:line="45" pos:column="34"/></name><operator pos:line="45" pos:column="34">)<pos:position pos:line="45" pos:column="35"/></operator></expr></argument>)<pos:position pos:line="45" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="37"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="46" pos:column="11">idata<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">-&gt;<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="18">reopen<pos:position pos:line="46" pos:column="24"/></name></name> <operator pos:line="46" pos:column="25">|=<pos:position pos:line="46" pos:column="27"/></operator> <name pos:line="46" pos:column="28">IMAP_NEWMAIL_PENDING<pos:position pos:line="46" pos:column="48"/></name></expr>;<pos:position pos:line="46" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="47" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="48" pos:column="9">idata<pos:position pos:line="48" pos:column="14"/></name><operator pos:line="48" pos:column="14">-&gt;<pos:position pos:line="48" pos:column="19"/></operator><name pos:line="48" pos:column="16">newMailCount<pos:position pos:line="48" pos:column="28"/></name></name> <operator pos:line="48" pos:column="29">=<pos:position pos:line="48" pos:column="30"/></operator> <name pos:line="48" pos:column="31">count<pos:position pos:line="48" pos:column="36"/></name></expr>;<pos:position pos:line="48" pos:column="37"/></expr_stmt>
      }<pos:position pos:line="49" pos:column="8"/></block></else></if>
    }<pos:position pos:line="50" pos:column="6"/></block></then>
    <comment type="block" pos:line="51" pos:column="5">/* pn vs. s: need initial seqno */</comment>
    <elseif pos:line="52" pos:column="5">else <if pos:line="52" pos:column="10">if <condition pos:line="52" pos:column="13">(<expr><call><name pos:line="52" pos:column="14">ascii_strncasecmp<pos:position pos:line="52" pos:column="31"/></name> <argument_list pos:line="52" pos:column="32">(<argument><expr><literal type="string" pos:line="52" pos:column="33">"EXPUNGE"<pos:position pos:line="52" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="44">s<pos:position pos:line="52" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="47">7<pos:position pos:line="52" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="49"/></argument_list></call> <operator pos:line="52" pos:column="50">==<pos:position pos:line="52" pos:column="52"/></operator> <literal type="number" pos:line="52" pos:column="53">0<pos:position pos:line="52" pos:column="54"/></literal></expr>)<pos:position pos:line="52" pos:column="55"/></condition><then pos:line="52" pos:column="55">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="7">cmd_parse_expunge<pos:position pos:line="53" pos:column="24"/></name> <argument_list pos:line="53" pos:column="25">(<argument><expr><name pos:line="53" pos:column="26">idata<pos:position pos:line="53" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="33">pn<pos:position pos:line="53" pos:column="35"/></name></expr></argument>)<pos:position pos:line="53" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="37"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="54" pos:column="5">else <if pos:line="54" pos:column="10">if <condition pos:line="54" pos:column="13">(<expr><call><name pos:line="54" pos:column="14">ascii_strncasecmp<pos:position pos:line="54" pos:column="31"/></name> <argument_list pos:line="54" pos:column="32">(<argument><expr><literal type="string" pos:line="54" pos:column="33">"FETCH"<pos:position pos:line="54" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="42">s<pos:position pos:line="54" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="45">5<pos:position pos:line="54" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="47"/></argument_list></call> <operator pos:line="54" pos:column="48">==<pos:position pos:line="54" pos:column="50"/></operator> <literal type="number" pos:line="54" pos:column="51">0<pos:position pos:line="54" pos:column="52"/></literal></expr>)<pos:position pos:line="54" pos:column="53"/></condition><then pos:line="54" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="7">cmd_parse_fetch<pos:position pos:line="55" pos:column="22"/></name> <argument_list pos:line="55" pos:column="23">(<argument><expr><name pos:line="55" pos:column="24">idata<pos:position pos:line="55" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="31">pn<pos:position pos:line="55" pos:column="33"/></name></expr></argument>)<pos:position pos:line="55" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="35"/></expr_stmt></block></then></if></elseif></if>
  }<pos:position pos:line="56" pos:column="4"/></block></then>
  <elseif pos:line="57" pos:column="3">else <if pos:line="57" pos:column="8">if <condition pos:line="57" pos:column="11">(<expr><call><name pos:line="57" pos:column="12">ascii_strncasecmp<pos:position pos:line="57" pos:column="29"/></name> <argument_list pos:line="57" pos:column="30">(<argument><expr><literal type="string" pos:line="57" pos:column="31">"CAPABILITY"<pos:position pos:line="57" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="45">s<pos:position pos:line="57" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="48">10<pos:position pos:line="57" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="51"/></argument_list></call> <operator pos:line="57" pos:column="52">==<pos:position pos:line="57" pos:column="54"/></operator> <literal type="number" pos:line="57" pos:column="55">0<pos:position pos:line="57" pos:column="56"/></literal></expr>)<pos:position pos:line="57" pos:column="57"/></condition><then pos:line="57" pos:column="57">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="5">cmd_parse_capabilities<pos:position pos:line="58" pos:column="27"/></name> <argument_list pos:line="58" pos:column="28">(<argument><expr><name pos:line="58" pos:column="29">idata<pos:position pos:line="58" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="36">s<pos:position pos:line="58" pos:column="37"/></name></expr></argument>)<pos:position pos:line="58" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="39"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="59" pos:column="3">else <if pos:line="59" pos:column="8">if <condition pos:line="59" pos:column="11">(<expr><call><name pos:line="59" pos:column="12">ascii_strncasecmp<pos:position pos:line="59" pos:column="29"/></name> <argument_list pos:line="59" pos:column="30">(<argument><expr><literal type="string" pos:line="59" pos:column="31">"MYRIGHTS"<pos:position pos:line="59" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="43">s<pos:position pos:line="59" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="46">8<pos:position pos:line="59" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="48"/></argument_list></call> <operator pos:line="59" pos:column="49">==<pos:position pos:line="59" pos:column="51"/></operator> <literal type="number" pos:line="59" pos:column="52">0<pos:position pos:line="59" pos:column="53"/></literal></expr>)<pos:position pos:line="59" pos:column="54"/></condition><then pos:line="59" pos:column="54">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="5">cmd_parse_myrights<pos:position pos:line="60" pos:column="23"/></name> <argument_list pos:line="60" pos:column="24">(<argument><expr><name pos:line="60" pos:column="25">idata<pos:position pos:line="60" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="32">s<pos:position pos:line="60" pos:column="33"/></name></expr></argument>)<pos:position pos:line="60" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="35"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="61" pos:column="3">else <if pos:line="61" pos:column="8">if <condition pos:line="61" pos:column="11">(<expr><call><name pos:line="61" pos:column="12">ascii_strncasecmp<pos:position pos:line="61" pos:column="29"/></name> <argument_list pos:line="61" pos:column="30">(<argument><expr><literal type="string" pos:line="61" pos:column="31">"BYE"<pos:position pos:line="61" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="38">s<pos:position pos:line="61" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="41">3<pos:position pos:line="61" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="43"/></argument_list></call> <operator pos:line="61" pos:column="44">==<pos:position pos:line="61" pos:column="46"/></operator> <literal type="number" pos:line="61" pos:column="47">0<pos:position pos:line="61" pos:column="48"/></literal></expr>)<pos:position pos:line="61" pos:column="49"/></condition><then pos:line="61" pos:column="49">
  <block pos:line="62" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="63" pos:column="5">dprint<pos:position pos:line="63" pos:column="11"/></name> <argument_list pos:line="63" pos:column="12">(<argument><expr><literal type="number" pos:line="63" pos:column="13">2<pos:position pos:line="63" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="63" pos:column="16">(<pos:position pos:line="63" pos:column="17"/></operator><name pos:line="63" pos:column="17">debugfile<pos:position pos:line="63" pos:column="26"/></name><operator pos:line="63" pos:column="26">,<pos:position pos:line="63" pos:column="27"/></operator> <literal type="string" pos:line="63" pos:column="28">"Handling BYE\n"<pos:position pos:line="63" pos:column="44"/></literal><operator pos:line="63" pos:column="44">)<pos:position pos:line="63" pos:column="45"/></operator></expr></argument>)<pos:position pos:line="63" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="47"/></expr_stmt>

    <comment type="block" pos:line="65" pos:column="5">/* check if we're logging out */</comment>
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name><name pos:line="66" pos:column="9">idata<pos:position pos:line="66" pos:column="14"/></name><operator pos:line="66" pos:column="14">-&gt;<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="16">status<pos:position pos:line="66" pos:column="22"/></name></name> <operator pos:line="66" pos:column="23">==<pos:position pos:line="66" pos:column="25"/></operator> <name pos:line="66" pos:column="26">IMAP_BYE<pos:position pos:line="66" pos:column="34"/></name></expr>)<pos:position pos:line="66" pos:column="35"/></condition><then pos:line="66" pos:column="35">
      <block type="pseudo"><return pos:line="67" pos:column="7">return <expr><literal type="number" pos:line="67" pos:column="14">0<pos:position pos:line="67" pos:column="15"/></literal></expr>;<pos:position pos:line="67" pos:column="16"/></return></block></then></if>

    <comment type="block" pos:line="69" pos:column="5">/* server shut down our connection */</comment>
    <expr_stmt><expr><name pos:line="70" pos:column="5">s<pos:position pos:line="70" pos:column="6"/></name> <operator pos:line="70" pos:column="7">+=<pos:position pos:line="70" pos:column="9"/></operator> <literal type="number" pos:line="70" pos:column="10">3<pos:position pos:line="70" pos:column="11"/></literal></expr>;<pos:position pos:line="70" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">SKIPWS<pos:position pos:line="71" pos:column="11"/></name> <argument_list pos:line="71" pos:column="12">(<argument><expr><name pos:line="71" pos:column="13">s<pos:position pos:line="71" pos:column="14"/></name></expr></argument>)<pos:position pos:line="71" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">mutt_error<pos:position pos:line="72" pos:column="15"/></name> <argument_list pos:line="72" pos:column="16">(<argument><expr><literal type="string" pos:line="72" pos:column="17">"%s"<pos:position pos:line="72" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="23">s<pos:position pos:line="72" pos:column="24"/></name></expr></argument>)<pos:position pos:line="72" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="73" pos:column="5">idata<pos:position pos:line="73" pos:column="10"/></name><operator pos:line="73" pos:column="10">-&gt;<pos:position pos:line="73" pos:column="15"/></operator><name pos:line="73" pos:column="12">status<pos:position pos:line="73" pos:column="18"/></name></name> <operator pos:line="73" pos:column="19">=<pos:position pos:line="73" pos:column="20"/></operator> <name pos:line="73" pos:column="21">IMAP_BYE<pos:position pos:line="73" pos:column="29"/></name></expr>;<pos:position pos:line="73" pos:column="30"/></expr_stmt>
    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><name><name pos:line="74" pos:column="9">idata<pos:position pos:line="74" pos:column="14"/></name><operator pos:line="74" pos:column="14">-&gt;<pos:position pos:line="74" pos:column="19"/></operator><name pos:line="74" pos:column="16">state<pos:position pos:line="74" pos:column="21"/></name></name> <operator pos:line="74" pos:column="22">==<pos:position pos:line="74" pos:column="24"/></operator> <name pos:line="74" pos:column="25">IMAP_SELECTED<pos:position pos:line="74" pos:column="38"/></name></expr>)<pos:position pos:line="74" pos:column="39"/></condition><then pos:line="74" pos:column="39">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="75" pos:column="7">mx_fastclose_mailbox<pos:position pos:line="75" pos:column="27"/></name> <argument_list pos:line="75" pos:column="28">(<argument><expr><name><name pos:line="75" pos:column="29">idata<pos:position pos:line="75" pos:column="34"/></name><operator pos:line="75" pos:column="34">-&gt;<pos:position pos:line="75" pos:column="39"/></operator><name pos:line="75" pos:column="36">ctx<pos:position pos:line="75" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="41"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="76" pos:column="5">mutt_socket_close<pos:position pos:line="76" pos:column="22"/></name> <argument_list pos:line="76" pos:column="23">(<argument><expr><name><name pos:line="76" pos:column="24">idata<pos:position pos:line="76" pos:column="29"/></name><operator pos:line="76" pos:column="29">-&gt;<pos:position pos:line="76" pos:column="34"/></operator><name pos:line="76" pos:column="31">conn<pos:position pos:line="76" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="77" pos:column="5">idata<pos:position pos:line="77" pos:column="10"/></name><operator pos:line="77" pos:column="10">-&gt;<pos:position pos:line="77" pos:column="15"/></operator><name pos:line="77" pos:column="12">state<pos:position pos:line="77" pos:column="17"/></name></name> <operator pos:line="77" pos:column="18">=<pos:position pos:line="77" pos:column="19"/></operator> <name pos:line="77" pos:column="20">IMAP_DISCONNECTED<pos:position pos:line="77" pos:column="37"/></name></expr>;<pos:position pos:line="77" pos:column="38"/></expr_stmt>

    <return pos:line="79" pos:column="5">return <expr><operator pos:line="79" pos:column="12">-<pos:position pos:line="79" pos:column="13"/></operator><literal type="number" pos:line="79" pos:column="13">1<pos:position pos:line="79" pos:column="14"/></literal></expr>;<pos:position pos:line="79" pos:column="15"/></return>
  }<pos:position pos:line="80" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="81" pos:column="3">else <if pos:line="81" pos:column="8">if <condition pos:line="81" pos:column="11">(<expr><call><name pos:line="81" pos:column="12">option<pos:position pos:line="81" pos:column="18"/></name> <argument_list pos:line="81" pos:column="19">(<argument><expr><name pos:line="81" pos:column="20">OPTIMAPSERVERNOISE<pos:position pos:line="81" pos:column="38"/></name></expr></argument>)<pos:position pos:line="81" pos:column="39"/></argument_list></call> <operator pos:line="81" pos:column="40">&amp;&amp;<pos:position pos:line="81" pos:column="50"/></operator> <operator pos:line="81" pos:column="43">(<pos:position pos:line="81" pos:column="44"/></operator><call><name pos:line="81" pos:column="44">ascii_strncasecmp<pos:position pos:line="81" pos:column="61"/></name> <argument_list pos:line="81" pos:column="62">(<argument><expr><literal type="string" pos:line="81" pos:column="63">"NO"<pos:position pos:line="81" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="69">s<pos:position pos:line="81" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="81" pos:column="72">2<pos:position pos:line="81" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="74"/></argument_list></call> <operator pos:line="81" pos:column="75">==<pos:position pos:line="81" pos:column="77"/></operator> <literal type="number" pos:line="81" pos:column="78">0<pos:position pos:line="81" pos:column="79"/></literal><operator pos:line="81" pos:column="79">)<pos:position pos:line="81" pos:column="80"/></operator></expr>)<pos:position pos:line="81" pos:column="81"/></condition><then pos:line="81" pos:column="81">
  <block pos:line="82" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">dprint<pos:position pos:line="83" pos:column="11"/></name> <argument_list pos:line="83" pos:column="12">(<argument><expr><literal type="number" pos:line="83" pos:column="13">2<pos:position pos:line="83" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="83" pos:column="16">(<pos:position pos:line="83" pos:column="17"/></operator><name pos:line="83" pos:column="17">debugfile<pos:position pos:line="83" pos:column="26"/></name><operator pos:line="83" pos:column="26">,<pos:position pos:line="83" pos:column="27"/></operator> <literal type="string" pos:line="83" pos:column="28">"Handling untagged NO\n"<pos:position pos:line="83" pos:column="52"/></literal><operator pos:line="83" pos:column="52">)<pos:position pos:line="83" pos:column="53"/></operator></expr></argument>)<pos:position pos:line="83" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="55"/></expr_stmt>

    <comment type="block" pos:line="85" pos:column="5">/* Display the warning message from the server */</comment>
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">mutt_error<pos:position pos:line="86" pos:column="15"/></name> <argument_list pos:line="86" pos:column="16">(<argument><expr><literal type="string" pos:line="86" pos:column="17">"%s"<pos:position pos:line="86" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="86" pos:column="23">s<pos:position pos:line="86" pos:column="24"/></name><operator pos:line="86" pos:column="24">+<pos:position pos:line="86" pos:column="25"/></operator><literal type="number" pos:line="86" pos:column="25">3<pos:position pos:line="86" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">mutt_sleep<pos:position pos:line="87" pos:column="15"/></name> <argument_list pos:line="87" pos:column="16">(<argument><expr><literal type="number" pos:line="87" pos:column="17">2<pos:position pos:line="87" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="88" pos:column="4"/></block></then></if></elseif></if>

  <return pos:line="90" pos:column="3">return <expr><literal type="number" pos:line="90" pos:column="10">0<pos:position pos:line="90" pos:column="11"/></literal></expr>;<pos:position pos:line="90" pos:column="12"/></return>
}<pos:position pos:line="91" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_358_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">km_error_key<pos:position pos:line="1" pos:column="18"/></name> <parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">menu<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="29"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buf<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">SHORT_STRING<pos:position pos:line="3" pos:column="24"/></name></expr>]<pos:position pos:line="3" pos:column="25"/></index></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">keymap_t<pos:position pos:line="4" pos:column="18"/></name></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">key<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">p<pos:position pos:line="5" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="10">op<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">key<pos:position pos:line="7" pos:column="6"/></name> <operator pos:line="7" pos:column="7">=<pos:position pos:line="7" pos:column="8"/></operator> <call><name pos:line="7" pos:column="9">km_find_func<pos:position pos:line="7" pos:column="21"/></name> <argument_list pos:line="7" pos:column="22">(<argument><expr><name pos:line="7" pos:column="23">menu<pos:position pos:line="7" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="29">OP_HELP<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">key<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">&amp;&amp;<pos:position pos:line="8" pos:column="22"/></operator> <operator pos:line="8" pos:column="15">(<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">menu<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">!=<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="24">MENU_EDITOR<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">)<pos:position pos:line="8" pos:column="36"/></operator> <operator pos:line="8" pos:column="37">&amp;&amp;<pos:position pos:line="8" pos:column="47"/></operator> <operator pos:line="8" pos:column="40">(<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="41">menu<pos:position pos:line="8" pos:column="45"/></name> <operator pos:line="8" pos:column="46">!=<pos:position pos:line="8" pos:column="48"/></operator> <name pos:line="8" pos:column="49">MENU_PAGER<pos:position pos:line="8" pos:column="59"/></name><operator pos:line="8" pos:column="59">)<pos:position pos:line="8" pos:column="60"/></operator></expr>)<pos:position pos:line="8" pos:column="61"/></condition><then pos:line="8" pos:column="61">
    <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="5">key<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator> <call><name pos:line="9" pos:column="11">km_find_func<pos:position pos:line="9" pos:column="23"/></name> <argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">MENU_GENERIC<pos:position pos:line="9" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="39">OP_HELP<pos:position pos:line="9" pos:column="46"/></name></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="48"/></expr_stmt></block></then></if>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">!<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">key<pos:position pos:line="10" pos:column="11"/></name></expr>)<pos:position pos:line="10" pos:column="12"/></condition><then pos:line="10" pos:column="12">
  <block pos:line="11" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">mutt_error<pos:position pos:line="12" pos:column="15"/></name></type> <name pos:line="12" pos:column="16">_<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><literal type="string" pos:line="12" pos:column="18">"Key is not bound."<pos:position pos:line="12" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="38"/></argument_list></decl>;<pos:position pos:line="12" pos:column="39"/></decl_stmt>
    <return pos:line="13" pos:column="5">return;<pos:position pos:line="13" pos:column="12"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="16" pos:column="3">/* Make sure the key is really the help key in this menu.
   *
   * OP_END_COND is used as a barrier to ensure nothing extra
   * is left in the unget buffer.
   *
   * Note that km_expand_key() + tokenize_unget_string() should
   * not be used here: control sequences are expanded to a form
   * (e.g. "^H") not recognized by km_dokey(). */</comment>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">mutt_unget_event<pos:position pos:line="24" pos:column="19"/></name> <argument_list pos:line="24" pos:column="20">(<argument><expr><literal type="number" pos:line="24" pos:column="21">0<pos:position pos:line="24" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="24">OP_END_COND<pos:position pos:line="24" pos:column="35"/></name></expr></argument>)<pos:position pos:line="24" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name pos:line="25" pos:column="3">p<pos:position pos:line="25" pos:column="4"/></name> <operator pos:line="25" pos:column="5">=<pos:position pos:line="25" pos:column="6"/></operator> <name><name pos:line="25" pos:column="7">key<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">-&gt;<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="12">len<pos:position pos:line="25" pos:column="15"/></name></name></expr>;<pos:position pos:line="25" pos:column="16"/></expr_stmt>
  <while pos:line="26" pos:column="3">while <condition pos:line="26" pos:column="9">(<expr><name pos:line="26" pos:column="10">p<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">--<pos:position pos:line="26" pos:column="13"/></operator></expr>)<pos:position pos:line="26" pos:column="14"/></condition>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="5">mutt_unget_event<pos:position pos:line="27" pos:column="21"/></name> <argument_list pos:line="27" pos:column="22">(<argument><expr><name><name pos:line="27" pos:column="23">key<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">-&gt;<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="28">keys<pos:position pos:line="27" pos:column="32"/></name><index pos:line="27" pos:column="32">[<expr><name pos:line="27" pos:column="33">p<pos:position pos:line="27" pos:column="34"/></name></expr>]<pos:position pos:line="27" pos:column="35"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="37">0<pos:position pos:line="27" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="40"/></expr_stmt></block></while>

  <comment type="block" pos:line="29" pos:column="3">/* Note, e.g. for the index menu:
   *   bind generic ?   noop
   *   bind generic ,a  help
   *   bind index   ,ab quit
   * The index keybinding shadows the generic binding.
   * OP_END_COND will be read and returned as the op.
   *
   *   bind generic ?   noop
   *   bind generic dq  help
   *   bind index   d   delete-message
   * OP_DELETE will be returned as the op, leaving "q" + OP_END_COND
   * in the unget buffer.
   */</comment>
  <expr_stmt><expr><name pos:line="42" pos:column="3">op<pos:position pos:line="42" pos:column="5"/></name> <operator pos:line="42" pos:column="6">=<pos:position pos:line="42" pos:column="7"/></operator> <call><name pos:line="42" pos:column="8">km_dokey<pos:position pos:line="42" pos:column="16"/></name> <argument_list pos:line="42" pos:column="17">(<argument><expr><name pos:line="42" pos:column="18">menu<pos:position pos:line="42" pos:column="22"/></name></expr></argument>)<pos:position pos:line="42" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="24"/></expr_stmt>
  <if pos:line="43" pos:column="3">if <condition pos:line="43" pos:column="6">(<expr><name pos:line="43" pos:column="7">op<pos:position pos:line="43" pos:column="9"/></name> <operator pos:line="43" pos:column="10">!=<pos:position pos:line="43" pos:column="12"/></operator> <name pos:line="43" pos:column="13">OP_END_COND<pos:position pos:line="43" pos:column="24"/></name></expr>)<pos:position pos:line="43" pos:column="25"/></condition><then pos:line="43" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="5">mutt_flush_unget_to_endcond<pos:position pos:line="44" pos:column="32"/></name> <argument_list pos:line="44" pos:column="33">()<pos:position pos:line="44" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="36"/></expr_stmt></block></then></if>
  <if pos:line="45" pos:column="3">if <condition pos:line="45" pos:column="6">(<expr><name pos:line="45" pos:column="7">op<pos:position pos:line="45" pos:column="9"/></name> <operator pos:line="45" pos:column="10">!=<pos:position pos:line="45" pos:column="12"/></operator> <name pos:line="45" pos:column="13">OP_HELP<pos:position pos:line="45" pos:column="20"/></name></expr>)<pos:position pos:line="45" pos:column="21"/></condition><then pos:line="45" pos:column="21">
  <block pos:line="46" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="47" pos:column="5">mutt_error<pos:position pos:line="47" pos:column="15"/></name></type> <name pos:line="47" pos:column="16">_<pos:position pos:line="47" pos:column="17"/></name><argument_list pos:line="47" pos:column="17">(<argument><expr><literal type="string" pos:line="47" pos:column="18">"Key is not bound."<pos:position pos:line="47" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="38"/></argument_list></decl>;<pos:position pos:line="47" pos:column="39"/></decl_stmt>
    <return pos:line="48" pos:column="5">return;<pos:position pos:line="48" pos:column="12"/></return>
  }<pos:position pos:line="49" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="51" pos:column="3">km_expand_key<pos:position pos:line="51" pos:column="16"/></name> <argument_list pos:line="51" pos:column="17">(<argument><expr><name pos:line="51" pos:column="18">buf<pos:position pos:line="51" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="23">sizeof<argument_list pos:line="51" pos:column="29">(<argument><expr><name pos:line="51" pos:column="30">buf<pos:position pos:line="51" pos:column="33"/></name></expr></argument>)<pos:position pos:line="51" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="51" pos:column="36">key<pos:position pos:line="51" pos:column="39"/></name></expr></argument>)<pos:position pos:line="51" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="52" pos:column="3">mutt_error<pos:position pos:line="52" pos:column="13"/></name> <argument_list pos:line="52" pos:column="14">(<argument><expr><call><name pos:line="52" pos:column="15">_<pos:position pos:line="52" pos:column="16"/></name><argument_list pos:line="52" pos:column="16">(<argument><expr><literal type="string" pos:line="52" pos:column="17">"Key is not bound.  Press '%s' for help."<pos:position pos:line="52" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="52" pos:column="61">buf<pos:position pos:line="52" pos:column="64"/></name></expr></argument>)<pos:position pos:line="52" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="66"/></expr_stmt>
  <return pos:line="53" pos:column="3">return;<pos:position pos:line="53" pos:column="10"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

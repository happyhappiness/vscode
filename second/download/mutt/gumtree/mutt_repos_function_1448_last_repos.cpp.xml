<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1448_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">mutt_apply_replace<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">dbuf<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">size_t<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">dlen<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">sbuf<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">REPLACE_LIST<pos:position pos:line="1" pos:column="76"/></name> <modifier pos:line="1" pos:column="77">*<pos:position pos:line="1" pos:column="78"/></modifier></type><name pos:line="1" pos:column="78">rlist<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="84"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">REPLACE_LIST<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">l<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="4" pos:column="3">static<pos:position pos:line="4" pos:column="9"/></specifier> <type><name pos:line="4" pos:column="10">regmatch_t<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">pmatch<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><name pos:line="4" pos:column="31">NULL<pos:position pos:line="4" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="5" pos:column="3">static<pos:position pos:line="5" pos:column="9"/></specifier> <type><name pos:line="5" pos:column="10">int<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">nmatch<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="6" pos:column="3">static<pos:position pos:line="6" pos:column="9"/></specifier> <type><name pos:line="6" pos:column="10">char<pos:position pos:line="6" pos:column="14"/></name></type> <name><name pos:line="6" pos:column="15">twinbuf<pos:position pos:line="6" pos:column="22"/></name><index pos:line="6" pos:column="22">[<expr><literal type="number" pos:line="6" pos:column="23">2<pos:position pos:line="6" pos:column="24"/></literal></expr>]<pos:position pos:line="6" pos:column="25"/></index><index pos:line="6" pos:column="25">[<expr><name pos:line="6" pos:column="26">LONG_STRING<pos:position pos:line="6" pos:column="37"/></name></expr>]<pos:position pos:line="6" pos:column="38"/></index></name></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">switcher<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">p<pos:position pos:line="8" pos:column="10"/></name></decl>;<pos:position pos:line="8" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">i<pos:position pos:line="9" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="10">n<pos:position pos:line="9" pos:column="11"/></name></decl>;<pos:position pos:line="9" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">size_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">cpysize<pos:position pos:line="10" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="19">tlen<pos:position pos:line="10" pos:column="23"/></name></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">src<pos:position pos:line="11" pos:column="12"/></name></decl>, <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="11" pos:column="15">dst<pos:position pos:line="11" pos:column="18"/></name></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">dbuf<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">&amp;&amp;<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="15">dlen<pos:position pos:line="13" pos:column="19"/></name></expr>)<pos:position pos:line="13" pos:column="20"/></condition><then pos:line="13" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="5">dbuf<pos:position pos:line="14" pos:column="9"/></name><index pos:line="14" pos:column="9">[<expr><literal type="number" pos:line="14" pos:column="10">0<pos:position pos:line="14" pos:column="11"/></literal></expr>]<pos:position pos:line="14" pos:column="12"/></index></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <literal type="char" pos:line="14" pos:column="15">'\0'<pos:position pos:line="14" pos:column="19"/></literal></expr>;<pos:position pos:line="14" pos:column="20"/></expr_stmt></block></then></if>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">sbuf<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">==<pos:position pos:line="16" pos:column="14"/></operator> <name pos:line="16" pos:column="15">NULL<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">||<pos:position pos:line="16" pos:column="22"/></operator> <operator pos:line="16" pos:column="23">*<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">sbuf<pos:position pos:line="16" pos:column="28"/></name> <operator pos:line="16" pos:column="29">==<pos:position pos:line="16" pos:column="31"/></operator> <literal type="char" pos:line="16" pos:column="32">'\0'<pos:position pos:line="16" pos:column="36"/></literal> <operator pos:line="16" pos:column="37">||<pos:position pos:line="16" pos:column="39"/></operator> <operator pos:line="16" pos:column="40">(<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="41">dbuf<pos:position pos:line="16" pos:column="45"/></name> <operator pos:line="16" pos:column="46">&amp;&amp;<pos:position pos:line="16" pos:column="56"/></operator> <operator pos:line="16" pos:column="49">!<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="50">dlen<pos:position pos:line="16" pos:column="54"/></name><operator pos:line="16" pos:column="54">)<pos:position pos:line="16" pos:column="55"/></operator></expr>)<pos:position pos:line="16" pos:column="56"/></condition><then pos:line="16" pos:column="56">
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">dbuf<pos:position pos:line="17" pos:column="16"/></name></expr>;<pos:position pos:line="17" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="19" pos:column="3">twinbuf<pos:position pos:line="19" pos:column="10"/></name><index pos:line="19" pos:column="10">[<expr><literal type="number" pos:line="19" pos:column="11">0<pos:position pos:line="19" pos:column="12"/></literal></expr>]<pos:position pos:line="19" pos:column="13"/></index><index pos:line="19" pos:column="13">[<expr><literal type="number" pos:line="19" pos:column="14">0<pos:position pos:line="19" pos:column="15"/></literal></expr>]<pos:position pos:line="19" pos:column="16"/></index></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <literal type="char" pos:line="19" pos:column="19">'\0'<pos:position pos:line="19" pos:column="23"/></literal></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">twinbuf<pos:position pos:line="20" pos:column="10"/></name><index pos:line="20" pos:column="10">[<expr><literal type="number" pos:line="20" pos:column="11">1<pos:position pos:line="20" pos:column="12"/></literal></expr>]<pos:position pos:line="20" pos:column="13"/></index><index pos:line="20" pos:column="13">[<expr><literal type="number" pos:line="20" pos:column="14">0<pos:position pos:line="20" pos:column="15"/></literal></expr>]<pos:position pos:line="20" pos:column="16"/></index></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <literal type="char" pos:line="20" pos:column="19">'\0'<pos:position pos:line="20" pos:column="23"/></literal></expr>;<pos:position pos:line="20" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="21" pos:column="3">src<pos:position pos:line="21" pos:column="6"/></name> <operator pos:line="21" pos:column="7">=<pos:position pos:line="21" pos:column="8"/></operator> <name><name pos:line="21" pos:column="9">twinbuf<pos:position pos:line="21" pos:column="16"/></name><index pos:line="21" pos:column="16">[<expr><name pos:line="21" pos:column="17">switcher<pos:position pos:line="21" pos:column="25"/></name></expr>]<pos:position pos:line="21" pos:column="26"/></index></name></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name pos:line="22" pos:column="3">dst<pos:position pos:line="22" pos:column="6"/></name> <operator pos:line="22" pos:column="7">=<pos:position pos:line="22" pos:column="8"/></operator> <name pos:line="22" pos:column="9">src<pos:position pos:line="22" pos:column="12"/></name></expr>;<pos:position pos:line="22" pos:column="13"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="24" pos:column="3">strfcpy<pos:position pos:line="24" pos:column="10"/></name><argument_list pos:line="24" pos:column="10">(<argument><expr><name pos:line="24" pos:column="11">src<pos:position pos:line="24" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="16">sbuf<pos:position pos:line="24" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="22">LONG_STRING<pos:position pos:line="24" pos:column="33"/></name></expr></argument>)<pos:position pos:line="24" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="35"/></expr_stmt>

  <for pos:line="26" pos:column="3">for <control pos:line="26" pos:column="7">(<init><expr><name pos:line="26" pos:column="8">l<pos:position pos:line="26" pos:column="9"/></name> <operator pos:line="26" pos:column="10">=<pos:position pos:line="26" pos:column="11"/></operator> <name pos:line="26" pos:column="12">rlist<pos:position pos:line="26" pos:column="17"/></name></expr>;<pos:position pos:line="26" pos:column="18"/></init> <condition><expr><name pos:line="26" pos:column="19">l<pos:position pos:line="26" pos:column="20"/></name></expr>;<pos:position pos:line="26" pos:column="21"/></condition> <incr><expr><name pos:line="26" pos:column="22">l<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <name><name pos:line="26" pos:column="26">l<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">-&gt;<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="29">next<pos:position pos:line="26" pos:column="33"/></name></name></expr></incr>)<pos:position pos:line="26" pos:column="34"/></control>
  <block pos:line="27" pos:column="3">{
    <comment type="block" pos:line="28" pos:column="5">/* If this pattern needs more matches, expand pmatch. */</comment>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name><name pos:line="29" pos:column="9">l<pos:position pos:line="29" pos:column="10"/></name><operator pos:line="29" pos:column="10">-&gt;<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="12">nmatch<pos:position pos:line="29" pos:column="18"/></name></name> <operator pos:line="29" pos:column="19">&gt;<pos:position pos:line="29" pos:column="23"/></operator> <name pos:line="29" pos:column="21">nmatch<pos:position pos:line="29" pos:column="27"/></name></expr>)<pos:position pos:line="29" pos:column="28"/></condition><then pos:line="29" pos:column="28">
    <block pos:line="30" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">safe_realloc<pos:position pos:line="31" pos:column="19"/></name> <argument_list pos:line="31" pos:column="20">(<argument><expr><operator pos:line="31" pos:column="21">&amp;<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="22">pmatch<pos:position pos:line="31" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="30">l<pos:position pos:line="31" pos:column="31"/></name><operator pos:line="31" pos:column="31">-&gt;<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="33">nmatch<pos:position pos:line="31" pos:column="39"/></name></name> <operator pos:line="31" pos:column="40">*<pos:position pos:line="31" pos:column="41"/></operator> <sizeof pos:line="31" pos:column="42">sizeof<argument_list pos:line="31" pos:column="48">(<argument><expr><name pos:line="31" pos:column="49">regmatch_t<pos:position pos:line="31" pos:column="59"/></name></expr></argument>)<pos:position pos:line="31" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="62"/></expr_stmt>
      <expr_stmt><expr><name pos:line="32" pos:column="7">nmatch<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <name><name pos:line="32" pos:column="16">l<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">-&gt;<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="19">nmatch<pos:position pos:line="32" pos:column="25"/></name></name></expr>;<pos:position pos:line="32" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><call><name pos:line="35" pos:column="9">regexec<pos:position pos:line="35" pos:column="16"/></name> <argument_list pos:line="35" pos:column="17">(<argument><expr><name><name pos:line="35" pos:column="18">l<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">-&gt;<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="21">rx<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">-&gt;<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="25">rx<pos:position pos:line="35" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="29">src<pos:position pos:line="35" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="34">l<pos:position pos:line="35" pos:column="35"/></name><operator pos:line="35" pos:column="35">-&gt;<pos:position pos:line="35" pos:column="40"/></operator><name pos:line="35" pos:column="37">nmatch<pos:position pos:line="35" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="45">pmatch<pos:position pos:line="35" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="53">0<pos:position pos:line="35" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="55"/></argument_list></call> <operator pos:line="35" pos:column="56">==<pos:position pos:line="35" pos:column="58"/></operator> <literal type="number" pos:line="35" pos:column="59">0<pos:position pos:line="35" pos:column="60"/></literal></expr>)<pos:position pos:line="35" pos:column="61"/></condition><then pos:line="35" pos:column="61">
    <block pos:line="36" pos:column="5">{
      <expr_stmt><expr><name pos:line="37" pos:column="7">tlen<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <literal type="number" pos:line="37" pos:column="14">0<pos:position pos:line="37" pos:column="15"/></literal></expr>;<pos:position pos:line="37" pos:column="16"/></expr_stmt>
      <expr_stmt><expr><name pos:line="38" pos:column="7">switcher<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">^=<pos:position pos:line="38" pos:column="18"/></operator> <literal type="number" pos:line="38" pos:column="19">1<pos:position pos:line="38" pos:column="20"/></literal></expr>;<pos:position pos:line="38" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name pos:line="39" pos:column="7">dst<pos:position pos:line="39" pos:column="10"/></name> <operator pos:line="39" pos:column="11">=<pos:position pos:line="39" pos:column="12"/></operator> <name><name pos:line="39" pos:column="13">twinbuf<pos:position pos:line="39" pos:column="20"/></name><index pos:line="39" pos:column="20">[<expr><name pos:line="39" pos:column="21">switcher<pos:position pos:line="39" pos:column="29"/></name></expr>]<pos:position pos:line="39" pos:column="30"/></index></name></expr>;<pos:position pos:line="39" pos:column="31"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="41" pos:column="7">dprint<pos:position pos:line="41" pos:column="13"/></name> <argument_list pos:line="41" pos:column="14">(<argument><expr><literal type="number" pos:line="41" pos:column="15">5<pos:position pos:line="41" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="41" pos:column="18">(<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="19">debugfile<pos:position pos:line="41" pos:column="28"/></name><operator pos:line="41" pos:column="28">,<pos:position pos:line="41" pos:column="29"/></operator> <literal type="string" pos:line="41" pos:column="30">"mutt_apply_replace: %s matches %s\n"<pos:position pos:line="41" pos:column="67"/></literal><operator pos:line="41" pos:column="67">,<pos:position pos:line="41" pos:column="68"/></operator> <name pos:line="41" pos:column="69">src<pos:position pos:line="41" pos:column="72"/></name><operator pos:line="41" pos:column="72">,<pos:position pos:line="41" pos:column="73"/></operator> <name><name pos:line="41" pos:column="74">l<pos:position pos:line="41" pos:column="75"/></name><operator pos:line="41" pos:column="75">-&gt;<pos:position pos:line="41" pos:column="80"/></operator><name pos:line="41" pos:column="77">rx<pos:position pos:line="41" pos:column="79"/></name><operator pos:line="41" pos:column="79">-&gt;<pos:position pos:line="41" pos:column="84"/></operator><name pos:line="41" pos:column="81">pattern<pos:position pos:line="41" pos:column="88"/></name></name><operator pos:line="41" pos:column="88">)<pos:position pos:line="41" pos:column="89"/></operator></expr></argument>)<pos:position pos:line="41" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="91"/></expr_stmt>

      <comment type="block" pos:line="43" pos:column="7">/* Copy into other twinbuf with substitutions */</comment>
      <if pos:line="44" pos:column="7">if <condition pos:line="44" pos:column="10">(<expr><name><name pos:line="44" pos:column="11">l<pos:position pos:line="44" pos:column="12"/></name><operator pos:line="44" pos:column="12">-&gt;<pos:position pos:line="44" pos:column="17"/></operator><name><specifier pos:line="44" pos:column="14">template<pos:position pos:line="44" pos:column="22"/></specifier><name/></name></name></expr>)<pos:position pos:line="44" pos:column="23"/></condition><then pos:line="44" pos:column="23">
      <block pos:line="45" pos:column="7">{
        <for pos:line="46" pos:column="9">for <control pos:line="46" pos:column="13">(<init><expr><name pos:line="46" pos:column="14">p<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">=<pos:position pos:line="46" pos:column="17"/></operator> <name><name pos:line="46" pos:column="18">l<pos:position pos:line="46" pos:column="19"/></name><operator pos:line="46" pos:column="19">-&gt;<pos:position pos:line="46" pos:column="24"/></operator><name><specifier pos:line="46" pos:column="21">template<pos:position pos:line="46" pos:column="29"/></specifier><name/></name></name></expr>;<pos:position pos:line="46" pos:column="30"/></init> <condition><expr><operator pos:line="46" pos:column="31">*<pos:position pos:line="46" pos:column="32"/></operator><name pos:line="46" pos:column="32">p<pos:position pos:line="46" pos:column="33"/></name> <operator pos:line="46" pos:column="34">&amp;&amp;<pos:position pos:line="46" pos:column="44"/></operator> <operator pos:line="46" pos:column="37">(<pos:position pos:line="46" pos:column="38"/></operator><name pos:line="46" pos:column="38">tlen<pos:position pos:line="46" pos:column="42"/></name> <operator pos:line="46" pos:column="43">&lt;<pos:position pos:line="46" pos:column="47"/></operator> <name pos:line="46" pos:column="45">LONG_STRING<pos:position pos:line="46" pos:column="56"/></name> <operator pos:line="46" pos:column="57">-<pos:position pos:line="46" pos:column="58"/></operator> <literal type="number" pos:line="46" pos:column="59">1<pos:position pos:line="46" pos:column="60"/></literal><operator pos:line="46" pos:column="60">)<pos:position pos:line="46" pos:column="61"/></operator></expr>;<pos:position pos:line="46" pos:column="62"/></condition> <incr/>)<pos:position pos:line="46" pos:column="64"/></control>
        <block pos:line="47" pos:column="9">{
	  <if pos:line="48" pos:column="11">if <condition pos:line="48" pos:column="14">(<expr><operator pos:line="48" pos:column="15">*<pos:position pos:line="48" pos:column="16"/></operator><name pos:line="48" pos:column="16">p<pos:position pos:line="48" pos:column="17"/></name> <operator pos:line="48" pos:column="18">==<pos:position pos:line="48" pos:column="20"/></operator> <literal type="char" pos:line="48" pos:column="21">'%'<pos:position pos:line="48" pos:column="24"/></literal></expr>)<pos:position pos:line="48" pos:column="25"/></condition><then pos:line="48" pos:column="25">
	  <block pos:line="49" pos:column="11">{
	    <expr_stmt><expr><name pos:line="50" pos:column="13">p<pos:position pos:line="50" pos:column="14"/></name><operator pos:line="50" pos:column="14">++<pos:position pos:line="50" pos:column="16"/></operator></expr>;<pos:position pos:line="50" pos:column="17"/></expr_stmt>
	    <if pos:line="51" pos:column="13">if <condition pos:line="51" pos:column="16">(<expr><operator pos:line="51" pos:column="17">*<pos:position pos:line="51" pos:column="18"/></operator><name pos:line="51" pos:column="18">p<pos:position pos:line="51" pos:column="19"/></name> <operator pos:line="51" pos:column="20">==<pos:position pos:line="51" pos:column="22"/></operator> <literal type="char" pos:line="51" pos:column="23">'L'<pos:position pos:line="51" pos:column="26"/></literal></expr>)<pos:position pos:line="51" pos:column="27"/></condition><then pos:line="51" pos:column="27">
	    <block pos:line="52" pos:column="13">{
	      <expr_stmt><expr><name pos:line="53" pos:column="15">p<pos:position pos:line="53" pos:column="16"/></name><operator pos:line="53" pos:column="16">++<pos:position pos:line="53" pos:column="18"/></operator></expr>;<pos:position pos:line="53" pos:column="19"/></expr_stmt>
              <expr_stmt><expr><name pos:line="54" pos:column="15">cpysize<pos:position pos:line="54" pos:column="22"/></name> <operator pos:line="54" pos:column="23">=<pos:position pos:line="54" pos:column="24"/></operator> <call><name pos:line="54" pos:column="25">MIN<pos:position pos:line="54" pos:column="28"/></name> <argument_list pos:line="54" pos:column="29">(<argument><expr><name><name pos:line="54" pos:column="30">pmatch<pos:position pos:line="54" pos:column="36"/></name><index pos:line="54" pos:column="36">[<expr><literal type="number" pos:line="54" pos:column="37">0<pos:position pos:line="54" pos:column="38"/></literal></expr>]<pos:position pos:line="54" pos:column="39"/></index></name><operator pos:line="54" pos:column="39">.<pos:position pos:line="54" pos:column="40"/></operator><name pos:line="54" pos:column="40">rm_so<pos:position pos:line="54" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="47">LONG_STRING<pos:position pos:line="54" pos:column="58"/></name> <operator pos:line="54" pos:column="59">-<pos:position pos:line="54" pos:column="60"/></operator> <name pos:line="54" pos:column="61">tlen<pos:position pos:line="54" pos:column="65"/></name> <operator pos:line="54" pos:column="66">-<pos:position pos:line="54" pos:column="67"/></operator> <literal type="number" pos:line="54" pos:column="68">1<pos:position pos:line="54" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="71"/></expr_stmt>
	      <expr_stmt><expr><call><name pos:line="55" pos:column="15">strncpy<pos:position pos:line="55" pos:column="22"/></name><argument_list pos:line="55" pos:column="22">(<argument><expr><operator pos:line="55" pos:column="23">&amp;<pos:position pos:line="55" pos:column="28"/></operator><name><name pos:line="55" pos:column="24">dst<pos:position pos:line="55" pos:column="27"/></name><index pos:line="55" pos:column="27">[<expr><name pos:line="55" pos:column="28">tlen<pos:position pos:line="55" pos:column="32"/></name></expr>]<pos:position pos:line="55" pos:column="33"/></index></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="35">src<pos:position pos:line="55" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="40">cpysize<pos:position pos:line="55" pos:column="47"/></name></expr></argument>)<pos:position pos:line="55" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="49"/></expr_stmt>
	      <expr_stmt><expr><name pos:line="56" pos:column="15">tlen<pos:position pos:line="56" pos:column="19"/></name> <operator pos:line="56" pos:column="20">+=<pos:position pos:line="56" pos:column="22"/></operator> <name pos:line="56" pos:column="23">cpysize<pos:position pos:line="56" pos:column="30"/></name></expr>;<pos:position pos:line="56" pos:column="31"/></expr_stmt>
	    }<pos:position pos:line="57" pos:column="14"/></block></then>
	    <elseif pos:line="58" pos:column="13">else <if pos:line="58" pos:column="18">if <condition pos:line="58" pos:column="21">(<expr><operator pos:line="58" pos:column="22">*<pos:position pos:line="58" pos:column="23"/></operator><name pos:line="58" pos:column="23">p<pos:position pos:line="58" pos:column="24"/></name> <operator pos:line="58" pos:column="25">==<pos:position pos:line="58" pos:column="27"/></operator> <literal type="char" pos:line="58" pos:column="28">'R'<pos:position pos:line="58" pos:column="31"/></literal></expr>)<pos:position pos:line="58" pos:column="32"/></condition><then pos:line="58" pos:column="32">
	    <block pos:line="59" pos:column="13">{
	      <expr_stmt><expr><name pos:line="60" pos:column="15">p<pos:position pos:line="60" pos:column="16"/></name><operator pos:line="60" pos:column="16">++<pos:position pos:line="60" pos:column="18"/></operator></expr>;<pos:position pos:line="60" pos:column="19"/></expr_stmt>
              <expr_stmt><expr><name pos:line="61" pos:column="15">cpysize<pos:position pos:line="61" pos:column="22"/></name> <operator pos:line="61" pos:column="23">=<pos:position pos:line="61" pos:column="24"/></operator> <call><name pos:line="61" pos:column="25">MIN<pos:position pos:line="61" pos:column="28"/></name> <argument_list pos:line="61" pos:column="29">(<argument><expr><call><name pos:line="61" pos:column="30">strlen<pos:position pos:line="61" pos:column="36"/></name> <argument_list pos:line="61" pos:column="37">(<argument><expr><name pos:line="61" pos:column="38">src<pos:position pos:line="61" pos:column="41"/></name></expr></argument>)<pos:position pos:line="61" pos:column="42"/></argument_list></call> <operator pos:line="61" pos:column="43">-<pos:position pos:line="61" pos:column="44"/></operator> <name><name pos:line="61" pos:column="45">pmatch<pos:position pos:line="61" pos:column="51"/></name><index pos:line="61" pos:column="51">[<expr><literal type="number" pos:line="61" pos:column="52">0<pos:position pos:line="61" pos:column="53"/></literal></expr>]<pos:position pos:line="61" pos:column="54"/></index></name><operator pos:line="61" pos:column="54">.<pos:position pos:line="61" pos:column="55"/></operator><name pos:line="61" pos:column="55">rm_eo<pos:position pos:line="61" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="62">LONG_STRING<pos:position pos:line="61" pos:column="73"/></name> <operator pos:line="61" pos:column="74">-<pos:position pos:line="61" pos:column="75"/></operator> <name pos:line="61" pos:column="76">tlen<pos:position pos:line="61" pos:column="80"/></name> <operator pos:line="61" pos:column="81">-<pos:position pos:line="61" pos:column="82"/></operator> <literal type="number" pos:line="61" pos:column="83">1<pos:position pos:line="61" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="86"/></expr_stmt>
	      <expr_stmt><expr><call><name pos:line="62" pos:column="15">strncpy<pos:position pos:line="62" pos:column="22"/></name><argument_list pos:line="62" pos:column="22">(<argument><expr><operator pos:line="62" pos:column="23">&amp;<pos:position pos:line="62" pos:column="28"/></operator><name><name pos:line="62" pos:column="24">dst<pos:position pos:line="62" pos:column="27"/></name><index pos:line="62" pos:column="27">[<expr><name pos:line="62" pos:column="28">tlen<pos:position pos:line="62" pos:column="32"/></name></expr>]<pos:position pos:line="62" pos:column="33"/></index></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="35">&amp;<pos:position pos:line="62" pos:column="40"/></operator><name><name pos:line="62" pos:column="36">src<pos:position pos:line="62" pos:column="39"/></name><index pos:line="62" pos:column="39">[<expr><name><name pos:line="62" pos:column="40">pmatch<pos:position pos:line="62" pos:column="46"/></name><index pos:line="62" pos:column="46">[<expr><literal type="number" pos:line="62" pos:column="47">0<pos:position pos:line="62" pos:column="48"/></literal></expr>]<pos:position pos:line="62" pos:column="49"/></index></name><operator pos:line="62" pos:column="49">.<pos:position pos:line="62" pos:column="50"/></operator><name pos:line="62" pos:column="50">rm_eo<pos:position pos:line="62" pos:column="55"/></name></expr>]<pos:position pos:line="62" pos:column="56"/></index></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="58">cpysize<pos:position pos:line="62" pos:column="65"/></name></expr></argument>)<pos:position pos:line="62" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="67"/></expr_stmt>
	      <expr_stmt><expr><name pos:line="63" pos:column="15">tlen<pos:position pos:line="63" pos:column="19"/></name> <operator pos:line="63" pos:column="20">+=<pos:position pos:line="63" pos:column="22"/></operator> <name pos:line="63" pos:column="23">cpysize<pos:position pos:line="63" pos:column="30"/></name></expr>;<pos:position pos:line="63" pos:column="31"/></expr_stmt>
	    }<pos:position pos:line="64" pos:column="14"/></block></then></if></elseif>
	    <else pos:line="65" pos:column="13">else
	    <block pos:line="66" pos:column="13">{
	      <expr_stmt><expr><name pos:line="67" pos:column="15">n<pos:position pos:line="67" pos:column="16"/></name> <operator pos:line="67" pos:column="17">=<pos:position pos:line="67" pos:column="18"/></operator> <call><name pos:line="67" pos:column="19">strtoul<pos:position pos:line="67" pos:column="26"/></name><argument_list pos:line="67" pos:column="26">(<argument><expr><name pos:line="67" pos:column="27">p<pos:position pos:line="67" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="30">&amp;<pos:position pos:line="67" pos:column="35"/></operator><name pos:line="67" pos:column="31">p<pos:position pos:line="67" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="34">10<pos:position pos:line="67" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="38"/></expr_stmt>               <comment type="block" pos:line="67" pos:column="53">/* get subst number */</comment>
	      <while pos:line="68" pos:column="15">while <condition pos:line="68" pos:column="21">(<expr><call><name pos:line="68" pos:column="22">isdigit<pos:position pos:line="68" pos:column="29"/></name><argument_list pos:line="68" pos:column="29">(<argument><expr><operator pos:line="68" pos:column="30">(<pos:position pos:line="68" pos:column="31"/></operator><name pos:line="68" pos:column="31">unsigned<pos:position pos:line="68" pos:column="39"/></name> <name pos:line="68" pos:column="40">char<pos:position pos:line="68" pos:column="44"/></name><operator pos:line="68" pos:column="44">)<pos:position pos:line="68" pos:column="45"/></operator><operator pos:line="68" pos:column="45">*<pos:position pos:line="68" pos:column="46"/></operator><name pos:line="68" pos:column="46">p<pos:position pos:line="68" pos:column="47"/></name></expr></argument>)<pos:position pos:line="68" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="49"/></condition>    <comment type="block" pos:line="68" pos:column="53">/* skip subst token */</comment>
                <block type="pseudo"><expr_stmt><expr><operator pos:line="69" pos:column="17">++<pos:position pos:line="69" pos:column="19"/></operator><name pos:line="69" pos:column="19">p<pos:position pos:line="69" pos:column="20"/></name></expr>;<pos:position pos:line="69" pos:column="21"/></expr_stmt></block></while>
	      <for pos:line="70" pos:column="15">for <control pos:line="70" pos:column="19">(<init><expr><name pos:line="70" pos:column="20">i<pos:position pos:line="70" pos:column="21"/></name> <operator pos:line="70" pos:column="22">=<pos:position pos:line="70" pos:column="23"/></operator> <name><name pos:line="70" pos:column="24">pmatch<pos:position pos:line="70" pos:column="30"/></name><index pos:line="70" pos:column="30">[<expr><name pos:line="70" pos:column="31">n<pos:position pos:line="70" pos:column="32"/></name></expr>]<pos:position pos:line="70" pos:column="33"/></index></name><operator pos:line="70" pos:column="33">.<pos:position pos:line="70" pos:column="34"/></operator><name pos:line="70" pos:column="34">rm_so<pos:position pos:line="70" pos:column="39"/></name></expr>;<pos:position pos:line="70" pos:column="40"/></init> <condition><expr><operator pos:line="70" pos:column="41">(<pos:position pos:line="70" pos:column="42"/></operator><name pos:line="70" pos:column="42">i<pos:position pos:line="70" pos:column="43"/></name> <operator pos:line="70" pos:column="44">&lt;<pos:position pos:line="70" pos:column="48"/></operator> <name><name pos:line="70" pos:column="46">pmatch<pos:position pos:line="70" pos:column="52"/></name><index pos:line="70" pos:column="52">[<expr><name pos:line="70" pos:column="53">n<pos:position pos:line="70" pos:column="54"/></name></expr>]<pos:position pos:line="70" pos:column="55"/></index></name><operator pos:line="70" pos:column="55">.<pos:position pos:line="70" pos:column="56"/></operator><name pos:line="70" pos:column="56">rm_eo<pos:position pos:line="70" pos:column="61"/></name><operator pos:line="70" pos:column="61">)<pos:position pos:line="70" pos:column="62"/></operator> <operator pos:line="70" pos:column="63">&amp;&amp;<pos:position pos:line="70" pos:column="73"/></operator> <operator pos:line="70" pos:column="66">(<pos:position pos:line="70" pos:column="67"/></operator><name pos:line="70" pos:column="67">tlen<pos:position pos:line="70" pos:column="71"/></name> <operator pos:line="70" pos:column="72">&lt;<pos:position pos:line="70" pos:column="76"/></operator> <name pos:line="70" pos:column="74">LONG_STRING<pos:position pos:line="70" pos:column="85"/></name><operator pos:line="70" pos:column="85">-<pos:position pos:line="70" pos:column="86"/></operator><literal type="number" pos:line="70" pos:column="86">1<pos:position pos:line="70" pos:column="87"/></literal><operator pos:line="70" pos:column="87">)<pos:position pos:line="70" pos:column="88"/></operator></expr>;<pos:position pos:line="70" pos:column="89"/></condition> <incr><expr><name pos:line="70" pos:column="90">i<pos:position pos:line="70" pos:column="91"/></name><operator pos:line="70" pos:column="91">++<pos:position pos:line="70" pos:column="93"/></operator></expr></incr>)<pos:position pos:line="70" pos:column="94"/></control>
	        <block type="pseudo"><expr_stmt><expr><name><name pos:line="71" pos:column="17">dst<pos:position pos:line="71" pos:column="20"/></name><index pos:line="71" pos:column="20">[<expr><name pos:line="71" pos:column="21">tlen<pos:position pos:line="71" pos:column="25"/></name><operator pos:line="71" pos:column="25">++<pos:position pos:line="71" pos:column="27"/></operator></expr>]<pos:position pos:line="71" pos:column="28"/></index></name> <operator pos:line="71" pos:column="29">=<pos:position pos:line="71" pos:column="30"/></operator> <name><name pos:line="71" pos:column="31">src<pos:position pos:line="71" pos:column="34"/></name><index pos:line="71" pos:column="34">[<expr><name pos:line="71" pos:column="35">i<pos:position pos:line="71" pos:column="36"/></name></expr>]<pos:position pos:line="71" pos:column="37"/></index></name></expr>;<pos:position pos:line="71" pos:column="38"/></expr_stmt></block></for>
	    }<pos:position pos:line="72" pos:column="14"/></block></else></if>
	  }<pos:position pos:line="73" pos:column="12"/></block></then>
	  <else pos:line="74" pos:column="11">else
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="75" pos:column="13">dst<pos:position pos:line="75" pos:column="16"/></name><index pos:line="75" pos:column="16">[<expr><name pos:line="75" pos:column="17">tlen<pos:position pos:line="75" pos:column="21"/></name><operator pos:line="75" pos:column="21">++<pos:position pos:line="75" pos:column="23"/></operator></expr>]<pos:position pos:line="75" pos:column="24"/></index></name> <operator pos:line="75" pos:column="25">=<pos:position pos:line="75" pos:column="26"/></operator> <operator pos:line="75" pos:column="27">*<pos:position pos:line="75" pos:column="28"/></operator><name pos:line="75" pos:column="28">p<pos:position pos:line="75" pos:column="29"/></name><operator pos:line="75" pos:column="29">++<pos:position pos:line="75" pos:column="31"/></operator></expr>;<pos:position pos:line="75" pos:column="32"/></expr_stmt></block></else></if>
        }<pos:position pos:line="76" pos:column="10"/></block></for>
      }<pos:position pos:line="77" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="78" pos:column="7">dst<pos:position pos:line="78" pos:column="10"/></name><index pos:line="78" pos:column="10">[<expr><name pos:line="78" pos:column="11">tlen<pos:position pos:line="78" pos:column="15"/></name></expr>]<pos:position pos:line="78" pos:column="16"/></index></name> <operator pos:line="78" pos:column="17">=<pos:position pos:line="78" pos:column="18"/></operator> <literal type="char" pos:line="78" pos:column="19">'\0'<pos:position pos:line="78" pos:column="23"/></literal></expr>;<pos:position pos:line="78" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="79" pos:column="7">dprint<pos:position pos:line="79" pos:column="13"/></name> <argument_list pos:line="79" pos:column="14">(<argument><expr><literal type="number" pos:line="79" pos:column="15">5<pos:position pos:line="79" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="79" pos:column="18">(<pos:position pos:line="79" pos:column="19"/></operator><name pos:line="79" pos:column="19">debugfile<pos:position pos:line="79" pos:column="28"/></name><operator pos:line="79" pos:column="28">,<pos:position pos:line="79" pos:column="29"/></operator> <literal type="string" pos:line="79" pos:column="30">"mutt_apply_replace: subst %s\n"<pos:position pos:line="79" pos:column="62"/></literal><operator pos:line="79" pos:column="62">,<pos:position pos:line="79" pos:column="63"/></operator> <name pos:line="79" pos:column="64">dst<pos:position pos:line="79" pos:column="67"/></name><operator pos:line="79" pos:column="67">)<pos:position pos:line="79" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="79" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="70"/></expr_stmt>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="81" pos:column="5">src<pos:position pos:line="81" pos:column="8"/></name> <operator pos:line="81" pos:column="9">=<pos:position pos:line="81" pos:column="10"/></operator> <name pos:line="81" pos:column="11">dst<pos:position pos:line="81" pos:column="14"/></name></expr>;<pos:position pos:line="81" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="82" pos:column="4"/></block></for>

  <if pos:line="84" pos:column="3">if <condition pos:line="84" pos:column="6">(<expr><name pos:line="84" pos:column="7">dbuf<pos:position pos:line="84" pos:column="11"/></name></expr>)<pos:position pos:line="84" pos:column="12"/></condition><then pos:line="84" pos:column="12">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="85" pos:column="5">strfcpy<pos:position pos:line="85" pos:column="12"/></name><argument_list pos:line="85" pos:column="12">(<argument><expr><name pos:line="85" pos:column="13">dbuf<pos:position pos:line="85" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="19">dst<pos:position pos:line="85" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="24">dlen<pos:position pos:line="85" pos:column="28"/></name></expr></argument>)<pos:position pos:line="85" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="30"/></expr_stmt></block></then>
  <else pos:line="86" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="87" pos:column="5">dbuf<pos:position pos:line="87" pos:column="9"/></name> <operator pos:line="87" pos:column="10">=<pos:position pos:line="87" pos:column="11"/></operator> <call><name pos:line="87" pos:column="12">safe_strdup<pos:position pos:line="87" pos:column="23"/></name><argument_list pos:line="87" pos:column="23">(<argument><expr><name pos:line="87" pos:column="24">dst<pos:position pos:line="87" pos:column="27"/></name></expr></argument>)<pos:position pos:line="87" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="29"/></expr_stmt></block></else></if>
  <return pos:line="88" pos:column="3">return <expr><name pos:line="88" pos:column="10">dbuf<pos:position pos:line="88" pos:column="14"/></name></expr>;<pos:position pos:line="88" pos:column="15"/></return>
}<pos:position pos:line="89" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1288_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BODY<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">mutt_make_file_attach<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">path<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">BODY<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">att<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CONTENT<pos:position pos:line="4" pos:column="10"/></name> <modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">info<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">att<pos:position pos:line="6" pos:column="6"/></name> <operator pos:line="6" pos:column="7">=<pos:position pos:line="6" pos:column="8"/></operator> <call><name pos:line="6" pos:column="9">mutt_new_body<pos:position pos:line="6" pos:column="22"/></name> <argument_list pos:line="6" pos:column="23">()<pos:position pos:line="6" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="7" pos:column="3">att<pos:position pos:line="7" pos:column="6"/></name><operator pos:line="7" pos:column="6">-&gt;<pos:position pos:line="7" pos:column="11"/></operator><name pos:line="7" pos:column="8">filename<pos:position pos:line="7" pos:column="16"/></name></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <call><name pos:line="7" pos:column="19">safe_strdup<pos:position pos:line="7" pos:column="30"/></name> <argument_list pos:line="7" pos:column="31">(<argument><expr><name pos:line="7" pos:column="32">path<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">MimeTypeQueryCmd<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">&amp;&amp;<pos:position pos:line="9" pos:column="34"/></operator> <operator pos:line="9" pos:column="27">*<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="28">MimeTypeQueryCmd<pos:position pos:line="9" pos:column="44"/></name> <operator pos:line="9" pos:column="45">&amp;&amp;<pos:position pos:line="9" pos:column="55"/></operator>
      <call><name pos:line="10" pos:column="7">option<pos:position pos:line="10" pos:column="13"/></name> <argument_list pos:line="10" pos:column="14">(<argument><expr><name pos:line="10" pos:column="15">OPTMIMETYPEQUERYFIRST<pos:position pos:line="10" pos:column="36"/></name></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="38"/></condition><then pos:line="10" pos:column="38">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="5">run_mime_type_query<pos:position pos:line="11" pos:column="24"/></name> <argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">att<pos:position pos:line="11" pos:column="29"/></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="13" pos:column="3">/* Attempt to determine the appropriate content-type based on the filename
   * suffix.
   */</comment>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><operator pos:line="16" pos:column="7">!<pos:position pos:line="16" pos:column="8"/></operator><name><name pos:line="16" pos:column="8">att<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">subtype<pos:position pos:line="16" pos:column="20"/></name></name></expr>)<pos:position pos:line="16" pos:column="21"/></condition><then pos:line="16" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="5">mutt_lookup_mime_type<pos:position pos:line="17" pos:column="26"/></name> <argument_list pos:line="17" pos:column="27">(<argument><expr><name pos:line="17" pos:column="28">att<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="33">path<pos:position pos:line="17" pos:column="37"/></name></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt></block></then></if>

  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><operator pos:line="19" pos:column="7">!<pos:position pos:line="19" pos:column="8"/></operator><name><name pos:line="19" pos:column="8">att<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">subtype<pos:position pos:line="19" pos:column="20"/></name></name> <operator pos:line="19" pos:column="21">&amp;&amp;<pos:position pos:line="19" pos:column="31"/></operator>
      <name pos:line="20" pos:column="7">MimeTypeQueryCmd<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">&amp;&amp;<pos:position pos:line="20" pos:column="34"/></operator> <operator pos:line="20" pos:column="27">*<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="28">MimeTypeQueryCmd<pos:position pos:line="20" pos:column="44"/></name> <operator pos:line="20" pos:column="45">&amp;&amp;<pos:position pos:line="20" pos:column="55"/></operator>
      <operator pos:line="21" pos:column="7">!<pos:position pos:line="21" pos:column="8"/></operator><call><name pos:line="21" pos:column="8">option<pos:position pos:line="21" pos:column="14"/></name> <argument_list pos:line="21" pos:column="15">(<argument><expr><name pos:line="21" pos:column="16">OPTMIMETYPEQUERYFIRST<pos:position pos:line="21" pos:column="37"/></name></expr></argument>)<pos:position pos:line="21" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="39"/></condition><then pos:line="21" pos:column="39">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="5">run_mime_type_query<pos:position pos:line="22" pos:column="24"/></name> <argument_list pos:line="22" pos:column="25">(<argument><expr><name pos:line="22" pos:column="26">att<pos:position pos:line="22" pos:column="29"/></name></expr></argument>)<pos:position pos:line="22" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt></block></then></if>

  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><operator pos:line="24" pos:column="7">(<pos:position pos:line="24" pos:column="8"/></operator><name pos:line="24" pos:column="8">info<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <call><name pos:line="24" pos:column="15">mutt_get_content_info<pos:position pos:line="24" pos:column="36"/></name> <argument_list pos:line="24" pos:column="37">(<argument><expr><name pos:line="24" pos:column="38">path<pos:position pos:line="24" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="44">att<pos:position pos:line="24" pos:column="47"/></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call><operator pos:line="24" pos:column="48">)<pos:position pos:line="24" pos:column="49"/></operator> <operator pos:line="24" pos:column="50">==<pos:position pos:line="24" pos:column="52"/></operator> <name pos:line="24" pos:column="53">NULL<pos:position pos:line="24" pos:column="57"/></name></expr>)<pos:position pos:line="24" pos:column="58"/></condition><then pos:line="24" pos:column="58">
  <block pos:line="25" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">mutt_free_body<pos:position pos:line="26" pos:column="19"/></name> <argument_list pos:line="26" pos:column="20">(<argument><expr><operator pos:line="26" pos:column="21">&amp;<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="22">att<pos:position pos:line="26" pos:column="25"/></name></expr></argument>)<pos:position pos:line="26" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><name pos:line="27" pos:column="12">NULL<pos:position pos:line="27" pos:column="16"/></name></expr>;<pos:position pos:line="27" pos:column="17"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><operator pos:line="30" pos:column="7">!<pos:position pos:line="30" pos:column="8"/></operator><name><name pos:line="30" pos:column="8">att<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">-&gt;<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="13">subtype<pos:position pos:line="30" pos:column="20"/></name></name></expr>)<pos:position pos:line="30" pos:column="21"/></condition><then pos:line="30" pos:column="21">
  <block pos:line="31" pos:column="3">{
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><operator pos:line="32" pos:column="9">(<pos:position pos:line="32" pos:column="10"/></operator><name><name pos:line="32" pos:column="10">info<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">-&gt;<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="16">nulbin<pos:position pos:line="32" pos:column="22"/></name></name> <operator pos:line="32" pos:column="23">==<pos:position pos:line="32" pos:column="25"/></operator> <literal type="number" pos:line="32" pos:column="26">0<pos:position pos:line="32" pos:column="27"/></literal><operator pos:line="32" pos:column="27">)<pos:position pos:line="32" pos:column="28"/></operator> <operator pos:line="32" pos:column="29">&amp;&amp;<pos:position pos:line="32" pos:column="39"/></operator>
        <operator pos:line="33" pos:column="9">(<pos:position pos:line="33" pos:column="10"/></operator><name><name pos:line="33" pos:column="10">info<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">-&gt;<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="16">lobin<pos:position pos:line="33" pos:column="21"/></name></name> <operator pos:line="33" pos:column="22">==<pos:position pos:line="33" pos:column="24"/></operator> <literal type="number" pos:line="33" pos:column="25">0<pos:position pos:line="33" pos:column="26"/></literal> <operator pos:line="33" pos:column="27">||<pos:position pos:line="33" pos:column="29"/></operator> <operator pos:line="33" pos:column="30">(<pos:position pos:line="33" pos:column="31"/></operator><name><name pos:line="33" pos:column="31">info<pos:position pos:line="33" pos:column="35"/></name><operator pos:line="33" pos:column="35">-&gt;<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="37">lobin<pos:position pos:line="33" pos:column="42"/></name></name> <operator pos:line="33" pos:column="43">+<pos:position pos:line="33" pos:column="44"/></operator> <name><name pos:line="33" pos:column="45">info<pos:position pos:line="33" pos:column="49"/></name><operator pos:line="33" pos:column="49">-&gt;<pos:position pos:line="33" pos:column="54"/></operator><name pos:line="33" pos:column="51">hibin<pos:position pos:line="33" pos:column="56"/></name></name> <operator pos:line="33" pos:column="57">+<pos:position pos:line="33" pos:column="58"/></operator> <name><name pos:line="33" pos:column="59">info<pos:position pos:line="33" pos:column="63"/></name><operator pos:line="33" pos:column="63">-&gt;<pos:position pos:line="33" pos:column="68"/></operator><name pos:line="33" pos:column="65">ascii<pos:position pos:line="33" pos:column="70"/></name></name><operator pos:line="33" pos:column="70">)<pos:position pos:line="33" pos:column="71"/></operator><operator pos:line="33" pos:column="71">/<pos:position pos:line="33" pos:column="72"/></operator> <name><name pos:line="33" pos:column="73">info<pos:position pos:line="33" pos:column="77"/></name><operator pos:line="33" pos:column="77">-&gt;<pos:position pos:line="33" pos:column="82"/></operator><name pos:line="33" pos:column="79">lobin<pos:position pos:line="33" pos:column="84"/></name></name> <operator pos:line="33" pos:column="85">&gt;=<pos:position pos:line="33" pos:column="90"/></operator> <literal type="number" pos:line="33" pos:column="88">10<pos:position pos:line="33" pos:column="90"/></literal><operator pos:line="33" pos:column="90">)<pos:position pos:line="33" pos:column="91"/></operator></expr>)<pos:position pos:line="33" pos:column="92"/></condition><then pos:line="33" pos:column="92">
    <block pos:line="34" pos:column="5">{
      <comment type="block" pos:line="35" pos:column="7">/*
       * Statistically speaking, there should be more than 10% "lobin"
       * chars if this is really a binary file...
       */</comment>
      <expr_stmt><expr><name><name pos:line="39" pos:column="7">att<pos:position pos:line="39" pos:column="10"/></name><operator pos:line="39" pos:column="10">-&gt;<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="12">type<pos:position pos:line="39" pos:column="16"/></name></name> <operator pos:line="39" pos:column="17">=<pos:position pos:line="39" pos:column="18"/></operator> <name pos:line="39" pos:column="19">TYPETEXT<pos:position pos:line="39" pos:column="27"/></name></expr>;<pos:position pos:line="39" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="40" pos:column="7">att<pos:position pos:line="40" pos:column="10"/></name><operator pos:line="40" pos:column="10">-&gt;<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="12">subtype<pos:position pos:line="40" pos:column="19"/></name></name> <operator pos:line="40" pos:column="20">=<pos:position pos:line="40" pos:column="21"/></operator> <call><name pos:line="40" pos:column="22">safe_strdup<pos:position pos:line="40" pos:column="33"/></name> <argument_list pos:line="40" pos:column="34">(<argument><expr><literal type="string" pos:line="40" pos:column="35">"plain"<pos:position pos:line="40" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then>
    <else pos:line="42" pos:column="5">else
    <block pos:line="43" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="44" pos:column="7">att<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">-&gt;<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="12">type<pos:position pos:line="44" pos:column="16"/></name></name> <operator pos:line="44" pos:column="17">=<pos:position pos:line="44" pos:column="18"/></operator> <name pos:line="44" pos:column="19">TYPEAPPLICATION<pos:position pos:line="44" pos:column="34"/></name></expr>;<pos:position pos:line="44" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="45" pos:column="7">att<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">-&gt;<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="12">subtype<pos:position pos:line="45" pos:column="19"/></name></name> <operator pos:line="45" pos:column="20">=<pos:position pos:line="45" pos:column="21"/></operator> <call><name pos:line="45" pos:column="22">safe_strdup<pos:position pos:line="45" pos:column="33"/></name> <argument_list pos:line="45" pos:column="34">(<argument><expr><literal type="string" pos:line="45" pos:column="35">"octet-stream"<pos:position pos:line="45" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></else></if>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="49" pos:column="3">FREE<pos:position pos:line="49" pos:column="7"/></name><argument_list pos:line="49" pos:column="7">(<argument><expr><operator pos:line="49" pos:column="8">&amp;<pos:position pos:line="49" pos:column="13"/></operator><name pos:line="49" pos:column="9">info<pos:position pos:line="49" pos:column="13"/></name></expr></argument>)<pos:position pos:line="49" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="50" pos:column="3">mutt_update_encoding<pos:position pos:line="50" pos:column="23"/></name> <argument_list pos:line="50" pos:column="24">(<argument><expr><name pos:line="50" pos:column="25">att<pos:position pos:line="50" pos:column="28"/></name></expr></argument>)<pos:position pos:line="50" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="30"/></expr_stmt>
  <return pos:line="51" pos:column="3">return <expr><operator pos:line="51" pos:column="10">(<pos:position pos:line="51" pos:column="11"/></operator><name pos:line="51" pos:column="11">att<pos:position pos:line="51" pos:column="14"/></name><operator pos:line="51" pos:column="14">)<pos:position pos:line="51" pos:column="15"/></operator></expr>;<pos:position pos:line="51" pos:column="16"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

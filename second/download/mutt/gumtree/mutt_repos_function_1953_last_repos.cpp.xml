<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1953_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">argz_stringify__<pos:position pos:line="2" pos:column="17"/></name> <argument_list pos:line="2" pos:column="18">(<argument><expr><name pos:line="2" pos:column="19">argz<pos:position pos:line="2" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="25">len<pos:position pos:line="2" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="30">sep<pos:position pos:line="2" pos:column="33"/></name></expr></argument>)<pos:position pos:line="2" pos:column="34"/></argument_list>
     <name pos:line="3" pos:column="6">char<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier><name pos:line="3" pos:column="12">argz<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="4" pos:column="6">size_t<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">len<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="5" pos:column="6">int<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">sep<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
<block pos:line="6" pos:column="1">{
  <while pos:line="7" pos:column="3">while <condition pos:line="7" pos:column="9">(<expr><name pos:line="7" pos:column="10">len<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">&gt;<pos:position pos:line="7" pos:column="18"/></operator> <literal type="number" pos:line="7" pos:column="16">0<pos:position pos:line="7" pos:column="17"/></literal></expr>)<pos:position pos:line="7" pos:column="18"/></condition>
    <block pos:line="8" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="9" pos:column="7">size_t<pos:position pos:line="9" pos:column="13"/></name></type> <name pos:line="9" pos:column="14">part_len<pos:position pos:line="9" pos:column="22"/></name> <init pos:line="9" pos:column="23">= <expr><call><name pos:line="9" pos:column="25">strlen<pos:position pos:line="9" pos:column="31"/></name> <argument_list pos:line="9" pos:column="32">(<argument><expr><name pos:line="9" pos:column="33">argz<pos:position pos:line="9" pos:column="37"/></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
      <expr_stmt><expr><name pos:line="10" pos:column="7">argz<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">+=<pos:position pos:line="10" pos:column="14"/></operator> <name pos:line="10" pos:column="15">part_len<pos:position pos:line="10" pos:column="23"/></name></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name pos:line="11" pos:column="7">len<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">-=<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">part_len<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">+<pos:position pos:line="11" pos:column="24"/></operator> <literal type="number" pos:line="11" pos:column="25">1<pos:position pos:line="11" pos:column="26"/></literal></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>
      <if pos:line="12" pos:column="7">if <condition pos:line="12" pos:column="10">(<expr><name pos:line="12" pos:column="11">len<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">&gt;<pos:position pos:line="12" pos:column="19"/></operator> <literal type="number" pos:line="12" pos:column="17">0<pos:position pos:line="12" pos:column="18"/></literal></expr>)<pos:position pos:line="12" pos:column="19"/></condition><then pos:line="12" pos:column="19">
	<block type="pseudo"><expr_stmt><expr><operator pos:line="13" pos:column="9">*<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">argz<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">++<pos:position pos:line="13" pos:column="16"/></operator> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">sep<pos:position pos:line="13" pos:column="22"/></name></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt></block></then></if>
    }<pos:position pos:line="14" pos:column="6"/></block></while>
}<pos:position pos:line="15" pos:column="2"/></block></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2098_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">IMAP_DATA<pos:position pos:line="1" pos:column="10"/></name><modifier pos:line="1" pos:column="10">*<pos:position pos:line="1" pos:column="11"/></modifier></type> <name pos:line="1" pos:column="12">imap_new_idata<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">IMAP_DATA<pos:position pos:line="3" pos:column="12"/></name><modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type> <name pos:line="3" pos:column="14">idata<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><call><name pos:line="3" pos:column="22">safe_calloc<pos:position pos:line="3" pos:column="33"/></name> <argument_list pos:line="3" pos:column="34">(<argument><expr><literal type="number" pos:line="3" pos:column="35">1<pos:position pos:line="3" pos:column="36"/></literal></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="38">sizeof <argument_list pos:line="3" pos:column="45">(<argument><expr><name pos:line="3" pos:column="46">IMAP_DATA<pos:position pos:line="3" pos:column="55"/></name></expr></argument>)<pos:position pos:line="3" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="58"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">!<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">idata<pos:position pos:line="5" pos:column="13"/></name></expr>)<pos:position pos:line="5" pos:column="14"/></condition><then pos:line="5" pos:column="14">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><name pos:line="6" pos:column="12">NULL<pos:position pos:line="6" pos:column="16"/></name></expr>;<pos:position pos:line="6" pos:column="17"/></return></block></then></if>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><operator pos:line="8" pos:column="8">(<pos:position pos:line="8" pos:column="9"/></operator><name><name pos:line="8" pos:column="9">idata<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">cmdbuf<pos:position pos:line="8" pos:column="22"/></name></name> <operator pos:line="8" pos:column="23">=<pos:position pos:line="8" pos:column="24"/></operator> <call><name pos:line="8" pos:column="25">mutt_buffer_new<pos:position pos:line="8" pos:column="40"/></name> <argument_list pos:line="8" pos:column="41">()<pos:position pos:line="8" pos:column="43"/></argument_list></call><operator pos:line="8" pos:column="43">)<pos:position pos:line="8" pos:column="44"/></operator></expr>)<pos:position pos:line="8" pos:column="45"/></condition><then pos:line="8" pos:column="45">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="5">FREE<pos:position pos:line="9" pos:column="9"/></name> <argument_list pos:line="9" pos:column="10">(<argument><expr><operator pos:line="9" pos:column="11">&amp;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="12">idata<pos:position pos:line="9" pos:column="17"/></name></expr></argument>)<pos:position pos:line="9" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name><name pos:line="11" pos:column="3">idata<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">-&gt;<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="10">cmdslots<pos:position pos:line="11" pos:column="18"/></name></name> <operator pos:line="11" pos:column="19">=<pos:position pos:line="11" pos:column="20"/></operator> <name pos:line="11" pos:column="21">ImapPipelineDepth<pos:position pos:line="11" pos:column="38"/></name> <operator pos:line="11" pos:column="39">+<pos:position pos:line="11" pos:column="40"/></operator> <literal type="number" pos:line="11" pos:column="41">2<pos:position pos:line="11" pos:column="42"/></literal></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><operator pos:line="12" pos:column="8">(<pos:position pos:line="12" pos:column="9"/></operator><name><name pos:line="12" pos:column="9">idata<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">cmds<pos:position pos:line="12" pos:column="20"/></name></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <call><name pos:line="12" pos:column="23">safe_calloc<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><name><name pos:line="12" pos:column="35">idata<pos:position pos:line="12" pos:column="40"/></name><operator pos:line="12" pos:column="40">-&gt;<pos:position pos:line="12" pos:column="45"/></operator><name pos:line="12" pos:column="42">cmdslots<pos:position pos:line="12" pos:column="50"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="52">sizeof<argument_list pos:line="12" pos:column="58">(<argument><expr><operator pos:line="12" pos:column="59">*<pos:position pos:line="12" pos:column="60"/></operator><name><name pos:line="12" pos:column="60">idata<pos:position pos:line="12" pos:column="65"/></name><operator pos:line="12" pos:column="65">-&gt;<pos:position pos:line="12" pos:column="70"/></operator><name pos:line="12" pos:column="67">cmds<pos:position pos:line="12" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="73"/></argument_list></call><operator pos:line="12" pos:column="73">)<pos:position pos:line="12" pos:column="74"/></operator></expr>)<pos:position pos:line="12" pos:column="75"/></condition><then pos:line="12" pos:column="75">
  <block pos:line="13" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">mutt_buffer_free<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><operator pos:line="14" pos:column="22">&amp;<pos:position pos:line="14" pos:column="27"/></operator><name><name pos:line="14" pos:column="23">idata<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">cmdbuf<pos:position pos:line="14" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">FREE<pos:position pos:line="15" pos:column="9"/></name> <argument_list pos:line="15" pos:column="10">(<argument><expr><operator pos:line="15" pos:column="11">&amp;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="12">idata<pos:position pos:line="15" pos:column="17"/></name></expr></argument>)<pos:position pos:line="15" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <return pos:line="18" pos:column="3">return <expr><name pos:line="18" pos:column="10">idata<pos:position pos:line="18" pos:column="15"/></name></expr>;<pos:position pos:line="18" pos:column="16"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

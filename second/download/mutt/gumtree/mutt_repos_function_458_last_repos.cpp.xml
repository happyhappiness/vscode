<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_458_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">event_t<pos:position pos:line="1" pos:column="8"/></name></type> <name pos:line="1" pos:column="9">mutt_getch<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">void<pos:position pos:line="1" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">ch<pos:position pos:line="3" pos:column="9"/></name></decl>;<pos:position pos:line="3" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">event_t<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">err<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><block pos:line="4" pos:column="17">{<expr><operator pos:line="4" pos:column="18">-<pos:position pos:line="4" pos:column="19"/></operator><literal type="number" pos:line="4" pos:column="19">1<pos:position pos:line="4" pos:column="20"/></literal></expr>, <expr><name pos:line="4" pos:column="22">OP_NULL<pos:position pos:line="4" pos:column="29"/></name></expr> }<pos:position pos:line="4" pos:column="31"/></block></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="33">ret<pos:position pos:line="4" pos:column="36"/></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">event_t<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">timeout<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><block pos:line="5" pos:column="21">{<expr><operator pos:line="5" pos:column="22">-<pos:position pos:line="5" pos:column="23"/></operator><literal type="number" pos:line="5" pos:column="23">2<pos:position pos:line="5" pos:column="24"/></literal></expr>, <expr><name pos:line="5" pos:column="26">OP_NULL<pos:position pos:line="5" pos:column="33"/></name></expr>}<pos:position pos:line="5" pos:column="34"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">UngetCount<pos:position pos:line="7" pos:column="17"/></name></expr>)<pos:position pos:line="7" pos:column="18"/></condition><then pos:line="7" pos:column="18">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><name><name pos:line="8" pos:column="13">UngetKeyEvents<pos:position pos:line="8" pos:column="27"/></name><index pos:line="8" pos:column="27">[<expr><operator pos:line="8" pos:column="28">--<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="30">UngetCount<pos:position pos:line="8" pos:column="40"/></name></expr>]<pos:position pos:line="8" pos:column="41"/></index></name><operator pos:line="8" pos:column="41">)<pos:position pos:line="8" pos:column="42"/></operator></expr>;<pos:position pos:line="8" pos:column="43"/></return></block></then></if>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">!<pos:position pos:line="10" pos:column="8"/></operator><call><name pos:line="10" pos:column="8">option<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(<argument><expr><name pos:line="10" pos:column="15">OPTIGNOREMACROEVENTS<pos:position pos:line="10" pos:column="35"/></name></expr></argument>)<pos:position pos:line="10" pos:column="36"/></argument_list></call> <operator pos:line="10" pos:column="37">&amp;&amp;<pos:position pos:line="10" pos:column="47"/></operator> <name pos:line="10" pos:column="40">MacroBufferCount<pos:position pos:line="10" pos:column="56"/></name></expr>)<pos:position pos:line="10" pos:column="57"/></condition><then pos:line="10" pos:column="57">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><name><name pos:line="11" pos:column="13">MacroEvents<pos:position pos:line="11" pos:column="24"/></name><index pos:line="11" pos:column="24">[<expr><operator pos:line="11" pos:column="25">--<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="27">MacroBufferCount<pos:position pos:line="11" pos:column="43"/></name></expr>]<pos:position pos:line="11" pos:column="44"/></index></name><operator pos:line="11" pos:column="44">)<pos:position pos:line="11" pos:column="45"/></operator></expr>;<pos:position pos:line="11" pos:column="46"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="13" pos:column="3">SigInt<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <literal type="number" pos:line="13" pos:column="12">0<pos:position pos:line="13" pos:column="13"/></literal></expr>;<pos:position pos:line="13" pos:column="14"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">mutt_allow_interrupt<pos:position pos:line="15" pos:column="23"/></name> <argument_list pos:line="15" pos:column="24">(<argument><expr><literal type="number" pos:line="15" pos:column="25">1<pos:position pos:line="15" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="28"/></expr_stmt>
<cpp:ifdef pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">ifdef<pos:position pos:line="16" pos:column="7"/></cpp:directive> <name pos:line="16" pos:column="8">KEY_RESIZE<pos:position pos:line="16" pos:column="18"/></name></cpp:ifdef>
  <comment type="block" pos:line="17" pos:column="3">/* ncurses 4.2 sends this when the screen is resized */</comment>
  <expr_stmt><expr><name pos:line="18" pos:column="3">ch<pos:position pos:line="18" pos:column="5"/></name> <operator pos:line="18" pos:column="6">=<pos:position pos:line="18" pos:column="7"/></operator> <name pos:line="18" pos:column="8">KEY_RESIZE<pos:position pos:line="18" pos:column="18"/></name></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>
  <while pos:line="19" pos:column="3">while <condition pos:line="19" pos:column="9">(<expr><name pos:line="19" pos:column="10">ch<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">==<pos:position pos:line="19" pos:column="15"/></operator> <name pos:line="19" pos:column="16">KEY_RESIZE<pos:position pos:line="19" pos:column="26"/></name></expr>)<pos:position pos:line="19" pos:column="27"/></condition>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="20" pos:column="8">/* KEY_RESIZE */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="5">ch<pos:position pos:line="21" pos:column="7"/></name> <operator pos:line="21" pos:column="8">=<pos:position pos:line="21" pos:column="9"/></operator> <call><name pos:line="21" pos:column="10">getch<pos:position pos:line="21" pos:column="15"/></name> <argument_list pos:line="21" pos:column="16">()<pos:position pos:line="21" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="19"/></expr_stmt></block></while>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">mutt_allow_interrupt<pos:position pos:line="22" pos:column="23"/></name> <argument_list pos:line="22" pos:column="24">(<argument><expr><literal type="number" pos:line="22" pos:column="25">0<pos:position pos:line="22" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>

  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name pos:line="24" pos:column="7">SigInt<pos:position pos:line="24" pos:column="13"/></name></expr>)<pos:position pos:line="24" pos:column="14"/></condition><then pos:line="24" pos:column="14">
  <block pos:line="25" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">mutt_query_exit<pos:position pos:line="26" pos:column="20"/></name> <argument_list pos:line="26" pos:column="21">()<pos:position pos:line="26" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><name pos:line="27" pos:column="12">err<pos:position pos:line="27" pos:column="15"/></name></expr>;<pos:position pos:line="27" pos:column="16"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="30" pos:column="3">/* either timeout, a sigwinch (if timeout is set), or the terminal
   * has been lost */</comment>
  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name pos:line="32" pos:column="7">ch<pos:position pos:line="32" pos:column="9"/></name> <operator pos:line="32" pos:column="10">==<pos:position pos:line="32" pos:column="12"/></operator> <name pos:line="32" pos:column="13">ERR<pos:position pos:line="32" pos:column="16"/></name></expr>)<pos:position pos:line="32" pos:column="17"/></condition><then pos:line="32" pos:column="17">
  <block pos:line="33" pos:column="3">{
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><operator pos:line="34" pos:column="9">!<pos:position pos:line="34" pos:column="10"/></operator><call><name pos:line="34" pos:column="10">isatty<pos:position pos:line="34" pos:column="16"/></name> <argument_list pos:line="34" pos:column="17">(<argument><expr><literal type="number" pos:line="34" pos:column="18">0<pos:position pos:line="34" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="20"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="21"/></condition><then pos:line="34" pos:column="21">
    <block pos:line="35" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="36" pos:column="7">endwin<pos:position pos:line="36" pos:column="13"/></name> <argument_list pos:line="36" pos:column="14">()<pos:position pos:line="36" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="37" pos:column="7">exit<pos:position pos:line="37" pos:column="11"/></name> <argument_list pos:line="37" pos:column="12">(<argument><expr><literal type="number" pos:line="37" pos:column="13">1<pos:position pos:line="37" pos:column="14"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
    <return pos:line="39" pos:column="5">return <expr><name pos:line="39" pos:column="12">timeout<pos:position pos:line="39" pos:column="19"/></name></expr>;<pos:position pos:line="39" pos:column="20"/></return>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>

  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><operator pos:line="42" pos:column="7">(<pos:position pos:line="42" pos:column="8"/></operator><name pos:line="42" pos:column="8">ch<pos:position pos:line="42" pos:column="10"/></name> <operator pos:line="42" pos:column="11">&amp;<pos:position pos:line="42" pos:column="16"/></operator> <literal type="number" pos:line="42" pos:column="13">0x80<pos:position pos:line="42" pos:column="17"/></literal><operator pos:line="42" pos:column="17">)<pos:position pos:line="42" pos:column="18"/></operator> <operator pos:line="42" pos:column="19">&amp;&amp;<pos:position pos:line="42" pos:column="29"/></operator> <call><name pos:line="42" pos:column="22">option<pos:position pos:line="42" pos:column="28"/></name> <argument_list pos:line="42" pos:column="29">(<argument><expr><name pos:line="42" pos:column="30">OPTMETAKEY<pos:position pos:line="42" pos:column="40"/></name></expr></argument>)<pos:position pos:line="42" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="42"/></condition><then pos:line="42" pos:column="42">
  <block pos:line="43" pos:column="3">{
    <comment type="block" pos:line="44" pos:column="5">/* send ALT-x as ESC-x */</comment>
    <expr_stmt><expr><name pos:line="45" pos:column="5">ch<pos:position pos:line="45" pos:column="7"/></name> <operator pos:line="45" pos:column="8">&amp;=<pos:position pos:line="45" pos:column="14"/></operator> <operator pos:line="45" pos:column="11">~<pos:position pos:line="45" pos:column="12"/></operator><literal type="number" pos:line="45" pos:column="12">0x80<pos:position pos:line="45" pos:column="16"/></literal></expr>;<pos:position pos:line="45" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">mutt_unget_event<pos:position pos:line="46" pos:column="21"/></name> <argument_list pos:line="46" pos:column="22">(<argument><expr><name pos:line="46" pos:column="23">ch<pos:position pos:line="46" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="27">0<pos:position pos:line="46" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="47" pos:column="5">ret<pos:position pos:line="47" pos:column="8"/></name><operator pos:line="47" pos:column="8">.<pos:position pos:line="47" pos:column="9"/></operator><name pos:line="47" pos:column="9">ch<pos:position pos:line="47" pos:column="11"/></name></name> <operator pos:line="47" pos:column="12">=<pos:position pos:line="47" pos:column="13"/></operator> <literal type="char" pos:line="47" pos:column="14">'\033'<pos:position pos:line="47" pos:column="20"/></literal></expr>;<pos:position pos:line="47" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="48" pos:column="5">ret<pos:position pos:line="48" pos:column="8"/></name><operator pos:line="48" pos:column="8">.<pos:position pos:line="48" pos:column="9"/></operator><name pos:line="48" pos:column="9">op<pos:position pos:line="48" pos:column="11"/></name></name> <operator pos:line="48" pos:column="12">=<pos:position pos:line="48" pos:column="13"/></operator> <literal type="number" pos:line="48" pos:column="14">0<pos:position pos:line="48" pos:column="15"/></literal></expr>;<pos:position pos:line="48" pos:column="16"/></expr_stmt>
    <return pos:line="49" pos:column="5">return <expr><name pos:line="49" pos:column="12">ret<pos:position pos:line="49" pos:column="15"/></name></expr>;<pos:position pos:line="49" pos:column="16"/></return>
  }<pos:position pos:line="50" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="52" pos:column="3">ret<pos:position pos:line="52" pos:column="6"/></name><operator pos:line="52" pos:column="6">.<pos:position pos:line="52" pos:column="7"/></operator><name pos:line="52" pos:column="7">ch<pos:position pos:line="52" pos:column="9"/></name></name> <operator pos:line="52" pos:column="10">=<pos:position pos:line="52" pos:column="11"/></operator> <name pos:line="52" pos:column="12">ch<pos:position pos:line="52" pos:column="14"/></name></expr>;<pos:position pos:line="52" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="53" pos:column="3">ret<pos:position pos:line="53" pos:column="6"/></name><operator pos:line="53" pos:column="6">.<pos:position pos:line="53" pos:column="7"/></operator><name pos:line="53" pos:column="7">op<pos:position pos:line="53" pos:column="9"/></name></name> <operator pos:line="53" pos:column="10">=<pos:position pos:line="53" pos:column="11"/></operator> <literal type="number" pos:line="53" pos:column="12">0<pos:position pos:line="53" pos:column="13"/></literal></expr>;<pos:position pos:line="53" pos:column="14"/></expr_stmt>
  <return pos:line="54" pos:column="3">return <expr><operator pos:line="54" pos:column="10">(<pos:position pos:line="54" pos:column="11"/></operator><ternary><condition><expr><name pos:line="54" pos:column="11">ch<pos:position pos:line="54" pos:column="13"/></name> <operator pos:line="54" pos:column="14">==<pos:position pos:line="54" pos:column="16"/></operator> <call><name pos:line="54" pos:column="17">ctrl<pos:position pos:line="54" pos:column="21"/></name> <argument_list pos:line="54" pos:column="22">(<argument><expr><literal type="char" pos:line="54" pos:column="23">'G'<pos:position pos:line="54" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="27"/></argument_list></call></expr> ?<pos:position pos:line="54" pos:column="29"/></condition><then pos:line="54" pos:column="29"> <expr><name pos:line="54" pos:column="30">err<pos:position pos:line="54" pos:column="33"/></name></expr> <pos:position pos:line="54" pos:column="34"/></then><else pos:line="54" pos:column="34">: <expr><name pos:line="54" pos:column="36">ret<pos:position pos:line="54" pos:column="39"/></name></expr></else></ternary><operator pos:line="54" pos:column="39">)<pos:position pos:line="54" pos:column="40"/></operator></expr>;<pos:position pos:line="54" pos:column="41"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

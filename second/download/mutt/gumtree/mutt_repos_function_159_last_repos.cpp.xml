<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_159_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">safe_calloc<pos:position pos:line="1" pos:column="18"/></name> <parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">size_t<pos:position pos:line="1" pos:column="26"/></name></type> <name pos:line="1" pos:column="27">nmemb<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">size_t<pos:position pos:line="1" pos:column="40"/></name></type> <name pos:line="1" pos:column="41">size<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">void<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">p<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">!<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">nmemb<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">||<pos:position pos:line="5" pos:column="16"/></operator> <operator pos:line="5" pos:column="17">!<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="18">size<pos:position pos:line="5" pos:column="22"/></name></expr>)<pos:position pos:line="5" pos:column="23"/></condition><then pos:line="5" pos:column="23">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><name pos:line="6" pos:column="12">NULL<pos:position pos:line="6" pos:column="16"/></name></expr>;<pos:position pos:line="6" pos:column="17"/></return></block></then></if>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">(<pos:position pos:line="8" pos:column="8"/></operator><operator pos:line="8" pos:column="8">(<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="9">size_t<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">)<pos:position pos:line="8" pos:column="16"/></operator> <operator pos:line="8" pos:column="17">-<pos:position pos:line="8" pos:column="18"/></operator><literal type="number" pos:line="8" pos:column="18">1<pos:position pos:line="8" pos:column="19"/></literal><operator pos:line="8" pos:column="19">)<pos:position pos:line="8" pos:column="20"/></operator> <operator pos:line="8" pos:column="21">/<pos:position pos:line="8" pos:column="22"/></operator> <name pos:line="8" pos:column="23">nmemb<pos:position pos:line="8" pos:column="28"/></name> <operator pos:line="8" pos:column="29">&lt;=<pos:position pos:line="8" pos:column="34"/></operator> <name pos:line="8" pos:column="32">size<pos:position pos:line="8" pos:column="36"/></name></expr>)<pos:position pos:line="8" pos:column="37"/></condition><then pos:line="8" pos:column="37">
  <block pos:line="9" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">mutt_error<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">_<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><literal type="string" pos:line="10" pos:column="18">"Integer overflow -- can't allocate memory!"<pos:position pos:line="10" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></decl>;<pos:position pos:line="10" pos:column="64"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">sleep<pos:position pos:line="11" pos:column="10"/></name> <argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="number" pos:line="11" pos:column="12">1<pos:position pos:line="11" pos:column="13"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">mutt_exit<pos:position pos:line="12" pos:column="14"/></name> <argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="number" pos:line="12" pos:column="16">1<pos:position pos:line="12" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>
  
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><operator pos:line="15" pos:column="7">!<pos:position pos:line="15" pos:column="8"/></operator><operator pos:line="15" pos:column="8">(<pos:position pos:line="15" pos:column="9"/></operator><name pos:line="15" pos:column="9">p<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <call><name pos:line="15" pos:column="13">calloc<pos:position pos:line="15" pos:column="19"/></name> <argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">nmemb<pos:position pos:line="15" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="28">size<pos:position pos:line="15" pos:column="32"/></name></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call><operator pos:line="15" pos:column="33">)<pos:position pos:line="15" pos:column="34"/></operator></expr>)<pos:position pos:line="15" pos:column="35"/></condition><then pos:line="15" pos:column="35">
  <block pos:line="16" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">mutt_error<pos:position pos:line="17" pos:column="15"/></name></type> <name pos:line="17" pos:column="16">_<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">(<argument><expr><literal type="string" pos:line="17" pos:column="18">"Out of memory!"<pos:position pos:line="17" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></decl>;<pos:position pos:line="17" pos:column="36"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">sleep<pos:position pos:line="18" pos:column="10"/></name> <argument_list pos:line="18" pos:column="11">(<argument><expr><literal type="number" pos:line="18" pos:column="12">1<pos:position pos:line="18" pos:column="13"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">mutt_exit<pos:position pos:line="19" pos:column="14"/></name> <argument_list pos:line="19" pos:column="15">(<argument><expr><literal type="number" pos:line="19" pos:column="16">1<pos:position pos:line="19" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>
  <return pos:line="21" pos:column="3">return <expr><name pos:line="21" pos:column="10">p<pos:position pos:line="21" pos:column="11"/></name></expr>;<pos:position pos:line="21" pos:column="12"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

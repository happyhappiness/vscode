<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_485_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_any_key_to_continue<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">s<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">termios<pos:position pos:line="3" pos:column="17"/></name></name></type> <name pos:line="3" pos:column="18">t<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">termios<pos:position pos:line="4" pos:column="17"/></name></name></type> <name pos:line="4" pos:column="18">old<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">f<pos:position pos:line="5" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="10">ch<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">f<pos:position pos:line="7" pos:column="4"/></name> <operator pos:line="7" pos:column="5">=<pos:position pos:line="7" pos:column="6"/></operator> <call><name pos:line="7" pos:column="7">open<pos:position pos:line="7" pos:column="11"/></name> <argument_list pos:line="7" pos:column="12">(<argument><expr><literal type="string" pos:line="7" pos:column="13">"/dev/tty"<pos:position pos:line="7" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="25">O_RDONLY<pos:position pos:line="7" pos:column="33"/></name></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">tcgetattr<pos:position pos:line="8" pos:column="12"/></name> <argument_list pos:line="8" pos:column="13">(<argument><expr><name pos:line="8" pos:column="14">f<pos:position pos:line="8" pos:column="15"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="17">&amp;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="18">t<pos:position pos:line="8" pos:column="19"/></name></expr></argument>)<pos:position pos:line="8" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">memcpy<pos:position pos:line="9" pos:column="9"/></name> <argument_list pos:line="9" pos:column="10">(<argument><expr><operator pos:line="9" pos:column="11">(<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="12">void<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></operator><operator pos:line="9" pos:column="18">)<pos:position pos:line="9" pos:column="19"/></operator><operator pos:line="9" pos:column="19">&amp;<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="20">old<pos:position pos:line="9" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="25">(<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">void<pos:position pos:line="9" pos:column="30"/></name> <operator pos:line="9" pos:column="31">*<pos:position pos:line="9" pos:column="32"/></operator><operator pos:line="9" pos:column="32">)<pos:position pos:line="9" pos:column="33"/></operator><operator pos:line="9" pos:column="33">&amp;<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="34">t<pos:position pos:line="9" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="37">sizeof<argument_list pos:line="9" pos:column="43">(<argument><expr pos:line="9" pos:column="44">struct <name pos:line="9" pos:column="51">termios<pos:position pos:line="9" pos:column="58"/></name></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="61"/></expr_stmt> <comment type="block" pos:line="9" pos:column="62">/* save original state */</comment>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">t<pos:position pos:line="10" pos:column="4"/></name><operator pos:line="10" pos:column="4">.<pos:position pos:line="10" pos:column="5"/></operator><name pos:line="10" pos:column="5">c_lflag<pos:position pos:line="10" pos:column="12"/></name></name> <operator pos:line="10" pos:column="13">&amp;=<pos:position pos:line="10" pos:column="19"/></operator> <operator pos:line="10" pos:column="16">~<pos:position pos:line="10" pos:column="17"/></operator><operator pos:line="10" pos:column="17">(<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">ICANON<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">|<pos:position pos:line="10" pos:column="26"/></operator> <name pos:line="10" pos:column="27">ECHO<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">)<pos:position pos:line="10" pos:column="32"/></operator></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">t<pos:position pos:line="11" pos:column="4"/></name><operator pos:line="11" pos:column="4">.<pos:position pos:line="11" pos:column="5"/></operator><name pos:line="11" pos:column="5">c_cc<pos:position pos:line="11" pos:column="9"/></name><index pos:line="11" pos:column="9">[<expr><name pos:line="11" pos:column="10">VMIN<pos:position pos:line="11" pos:column="14"/></name></expr>]<pos:position pos:line="11" pos:column="15"/></index></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">1<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">t<pos:position pos:line="12" pos:column="4"/></name><operator pos:line="12" pos:column="4">.<pos:position pos:line="12" pos:column="5"/></operator><name pos:line="12" pos:column="5">c_cc<pos:position pos:line="12" pos:column="9"/></name><index pos:line="12" pos:column="9">[<expr><name pos:line="12" pos:column="10">VTIME<pos:position pos:line="12" pos:column="15"/></name></expr>]<pos:position pos:line="12" pos:column="16"/></index></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <literal type="number" pos:line="12" pos:column="19">0<pos:position pos:line="12" pos:column="20"/></literal></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">tcsetattr<pos:position pos:line="13" pos:column="12"/></name> <argument_list pos:line="13" pos:column="13">(<argument><expr><name pos:line="13" pos:column="14">f<pos:position pos:line="13" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="17">TCSADRAIN<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="28">&amp;<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="29">t<pos:position pos:line="13" pos:column="30"/></name></expr></argument>)<pos:position pos:line="13" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">fflush<pos:position pos:line="14" pos:column="9"/></name> <argument_list pos:line="14" pos:column="10">(<argument><expr><name pos:line="14" pos:column="11">stdout<pos:position pos:line="14" pos:column="17"/></name></expr></argument>)<pos:position pos:line="14" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="19"/></expr_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">s<pos:position pos:line="15" pos:column="8"/></name></expr>)<pos:position pos:line="15" pos:column="9"/></condition><then pos:line="15" pos:column="9">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="5">fputs<pos:position pos:line="16" pos:column="10"/></name> <argument_list pos:line="16" pos:column="11">(<argument><expr><name pos:line="16" pos:column="12">s<pos:position pos:line="16" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="15">stdout<pos:position pos:line="16" pos:column="21"/></name></expr></argument>)<pos:position pos:line="16" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt></block></then>
  <else pos:line="17" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="5">fputs<pos:position pos:line="18" pos:column="10"/></name> <argument_list pos:line="18" pos:column="11">(<argument><expr><call><name pos:line="18" pos:column="12">_<pos:position pos:line="18" pos:column="13"/></name><argument_list pos:line="18" pos:column="13">(<argument><expr><literal type="string" pos:line="18" pos:column="14">"Press any key to continue..."<pos:position pos:line="18" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="18" pos:column="47">stdout<pos:position pos:line="18" pos:column="53"/></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="55"/></expr_stmt></block></else></if>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">fflush<pos:position pos:line="19" pos:column="9"/></name> <argument_list pos:line="19" pos:column="10">(<argument><expr><name pos:line="19" pos:column="11">stdout<pos:position pos:line="19" pos:column="17"/></name></expr></argument>)<pos:position pos:line="19" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name pos:line="20" pos:column="3">ch<pos:position pos:line="20" pos:column="5"/></name> <operator pos:line="20" pos:column="6">=<pos:position pos:line="20" pos:column="7"/></operator> <call><name pos:line="20" pos:column="8">fgetc<pos:position pos:line="20" pos:column="13"/></name> <argument_list pos:line="20" pos:column="14">(<argument><expr><name pos:line="20" pos:column="15">stdin<pos:position pos:line="20" pos:column="20"/></name></expr></argument>)<pos:position pos:line="20" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">fflush<pos:position pos:line="21" pos:column="9"/></name> <argument_list pos:line="21" pos:column="10">(<argument><expr><name pos:line="21" pos:column="11">stdin<pos:position pos:line="21" pos:column="16"/></name></expr></argument>)<pos:position pos:line="21" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">tcsetattr<pos:position pos:line="22" pos:column="12"/></name> <argument_list pos:line="22" pos:column="13">(<argument><expr><name pos:line="22" pos:column="14">f<pos:position pos:line="22" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="17">TCSADRAIN<pos:position pos:line="22" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="28">&amp;<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="29">old<pos:position pos:line="22" pos:column="32"/></name></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">close<pos:position pos:line="23" pos:column="8"/></name> <argument_list pos:line="23" pos:column="9">(<argument><expr><name pos:line="23" pos:column="10">f<pos:position pos:line="23" pos:column="11"/></name></expr></argument>)<pos:position pos:line="23" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">fputs<pos:position pos:line="24" pos:column="8"/></name> <argument_list pos:line="24" pos:column="9">(<argument><expr><literal type="string" pos:line="24" pos:column="10">"\r\n"<pos:position pos:line="24" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="18">stdout<pos:position pos:line="24" pos:column="24"/></name></expr></argument>)<pos:position pos:line="24" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">mutt_clear_error<pos:position pos:line="25" pos:column="19"/></name> <argument_list pos:line="25" pos:column="20">()<pos:position pos:line="25" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
  <return pos:line="26" pos:column="3">return <expr><operator pos:line="26" pos:column="10">(<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="11">ch<pos:position pos:line="26" pos:column="13"/></name><operator pos:line="26" pos:column="13">)<pos:position pos:line="26" pos:column="14"/></operator></expr>;<pos:position pos:line="26" pos:column="15"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

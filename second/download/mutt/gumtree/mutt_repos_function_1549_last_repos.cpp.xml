<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1549_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">mh_update_sequences<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">CONTEXT<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type> <name pos:line="1" pos:column="44">ctx<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">FILE<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">ofp<pos:position pos:line="3" pos:column="12"/></name></decl>, <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="15">nfp<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">sequences<pos:position pos:line="5" pos:column="17"/></name><index pos:line="5" pos:column="17">[<expr><name pos:line="5" pos:column="18">_POSIX_PATH_MAX<pos:position pos:line="5" pos:column="33"/></name></expr>]<pos:position pos:line="5" pos:column="34"/></index></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">tmpfname<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">buff<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><name pos:line="7" pos:column="16">NULL<pos:position pos:line="7" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">p<pos:position pos:line="8" pos:column="10"/></name></decl>;<pos:position pos:line="8" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">s<pos:position pos:line="9" pos:column="11"/></name></decl>;<pos:position pos:line="9" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">l<pos:position pos:line="10" pos:column="8"/></name> <init pos:line="10" pos:column="9">= <expr><literal type="number" pos:line="10" pos:column="11">0<pos:position pos:line="10" pos:column="12"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">i<pos:position pos:line="11" pos:column="8"/></name></decl>;<pos:position pos:line="11" pos:column="9"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type> <name pos:line="13" pos:column="7">unseen<pos:position pos:line="13" pos:column="13"/></name> <init pos:line="13" pos:column="14">= <expr><literal type="number" pos:line="13" pos:column="16">0<pos:position pos:line="13" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">flagged<pos:position pos:line="14" pos:column="14"/></name> <init pos:line="14" pos:column="15">= <expr><literal type="number" pos:line="14" pos:column="17">0<pos:position pos:line="14" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type> <name pos:line="15" pos:column="7">replied<pos:position pos:line="15" pos:column="14"/></name> <init pos:line="15" pos:column="15">= <expr><literal type="number" pos:line="15" pos:column="17">0<pos:position pos:line="15" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="19"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="17" pos:column="3">char<pos:position pos:line="17" pos:column="7"/></name></type> <name><name pos:line="17" pos:column="8">seq_unseen<pos:position pos:line="17" pos:column="18"/></name><index pos:line="17" pos:column="18">[<expr><name pos:line="17" pos:column="19">STRING<pos:position pos:line="17" pos:column="25"/></name></expr>]<pos:position pos:line="17" pos:column="26"/></index></name></decl>;<pos:position pos:line="17" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">char<pos:position pos:line="18" pos:column="7"/></name></type> <name><name pos:line="18" pos:column="8">seq_replied<pos:position pos:line="18" pos:column="19"/></name><index pos:line="18" pos:column="19">[<expr><name pos:line="18" pos:column="20">STRING<pos:position pos:line="18" pos:column="26"/></name></expr>]<pos:position pos:line="18" pos:column="27"/></index></name></decl>;<pos:position pos:line="18" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">char<pos:position pos:line="19" pos:column="7"/></name></type> <name><name pos:line="19" pos:column="8">seq_flagged<pos:position pos:line="19" pos:column="19"/></name><index pos:line="19" pos:column="19">[<expr><name pos:line="19" pos:column="20">STRING<pos:position pos:line="19" pos:column="26"/></name></expr>]<pos:position pos:line="19" pos:column="27"/></index></name></decl>;<pos:position pos:line="19" pos:column="28"/></decl_stmt>


  <decl_stmt><decl><type><name><name pos:line="22" pos:column="3">struct<pos:position pos:line="22" pos:column="9"/></name> <name pos:line="22" pos:column="10">mh_sequences<pos:position pos:line="22" pos:column="22"/></name></name></type> <name pos:line="22" pos:column="23">mhs<pos:position pos:line="22" pos:column="26"/></name></decl>;<pos:position pos:line="22" pos:column="27"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">memset<pos:position pos:line="23" pos:column="9"/></name> <argument_list pos:line="23" pos:column="10">(<argument><expr><operator pos:line="23" pos:column="11">&amp;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="12">mhs<pos:position pos:line="23" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="17">0<pos:position pos:line="23" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="20">sizeof <argument_list pos:line="23" pos:column="27">(<argument><expr><name pos:line="23" pos:column="28">mhs<pos:position pos:line="23" pos:column="31"/></name></expr></argument>)<pos:position pos:line="23" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">snprintf<pos:position pos:line="25" pos:column="11"/></name> <argument_list pos:line="25" pos:column="12">(<argument><expr><name pos:line="25" pos:column="13">seq_unseen<pos:position pos:line="25" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="25">sizeof <argument_list pos:line="25" pos:column="32">(<argument><expr><name pos:line="25" pos:column="33">seq_unseen<pos:position pos:line="25" pos:column="43"/></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="46">"%s:"<pos:position pos:line="25" pos:column="51"/></literal></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="53">NONULL<pos:position pos:line="25" pos:column="59"/></name> <argument_list pos:line="25" pos:column="60">(<argument><expr><name pos:line="25" pos:column="61">MhUnseen<pos:position pos:line="25" pos:column="69"/></name></expr></argument>)<pos:position pos:line="25" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="72"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">snprintf<pos:position pos:line="26" pos:column="11"/></name> <argument_list pos:line="26" pos:column="12">(<argument><expr><name pos:line="26" pos:column="13">seq_replied<pos:position pos:line="26" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="26">sizeof <argument_list pos:line="26" pos:column="33">(<argument><expr><name pos:line="26" pos:column="34">seq_replied<pos:position pos:line="26" pos:column="45"/></name></expr></argument>)<pos:position pos:line="26" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="48">"%s:"<pos:position pos:line="26" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="55">NONULL<pos:position pos:line="26" pos:column="61"/></name> <argument_list pos:line="26" pos:column="62">(<argument><expr><name pos:line="26" pos:column="63">MhReplied<pos:position pos:line="26" pos:column="72"/></name></expr></argument>)<pos:position pos:line="26" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="75"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">snprintf<pos:position pos:line="27" pos:column="11"/></name> <argument_list pos:line="27" pos:column="12">(<argument><expr><name pos:line="27" pos:column="13">seq_flagged<pos:position pos:line="27" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="26">sizeof <argument_list pos:line="27" pos:column="33">(<argument><expr><name pos:line="27" pos:column="34">seq_flagged<pos:position pos:line="27" pos:column="45"/></name></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="48">"%s:"<pos:position pos:line="27" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="55">NONULL<pos:position pos:line="27" pos:column="61"/></name> <argument_list pos:line="27" pos:column="62">(<argument><expr><name pos:line="27" pos:column="63">MhFlagged<pos:position pos:line="27" pos:column="72"/></name></expr></argument>)<pos:position pos:line="27" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="75"/></expr_stmt>

  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><call><name pos:line="29" pos:column="7">mh_mkstemp<pos:position pos:line="29" pos:column="17"/></name> <argument_list pos:line="29" pos:column="18">(<argument><expr><name pos:line="29" pos:column="19">ctx<pos:position pos:line="29" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="24">&amp;<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="25">nfp<pos:position pos:line="29" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="30">&amp;<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="31">tmpfname<pos:position pos:line="29" pos:column="39"/></name></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></call> <operator pos:line="29" pos:column="41">!=<pos:position pos:line="29" pos:column="43"/></operator> <literal type="number" pos:line="29" pos:column="44">0<pos:position pos:line="29" pos:column="45"/></literal></expr>)<pos:position pos:line="29" pos:column="46"/></condition><then pos:line="29" pos:column="46">
  <block pos:line="30" pos:column="3">{
    <comment type="block" pos:line="31" pos:column="5">/* error message? */</comment>
    <return pos:line="32" pos:column="5">return;<pos:position pos:line="32" pos:column="12"/></return>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="35" pos:column="3">snprintf<pos:position pos:line="35" pos:column="11"/></name> <argument_list pos:line="35" pos:column="12">(<argument><expr><name pos:line="35" pos:column="13">sequences<pos:position pos:line="35" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="24">sizeof <argument_list pos:line="35" pos:column="31">(<argument><expr><name pos:line="35" pos:column="32">sequences<pos:position pos:line="35" pos:column="41"/></name></expr></argument>)<pos:position pos:line="35" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="44">"%s/.mh_sequences"<pos:position pos:line="35" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="64">ctx<pos:position pos:line="35" pos:column="67"/></name><operator pos:line="35" pos:column="67">-&gt;<pos:position pos:line="35" pos:column="72"/></operator><name pos:line="35" pos:column="69">path<pos:position pos:line="35" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="75"/></expr_stmt>


  <comment type="block" pos:line="38" pos:column="3">/* first, copy unknown sequences */</comment>
  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><operator pos:line="39" pos:column="7">(<pos:position pos:line="39" pos:column="8"/></operator><name pos:line="39" pos:column="8">ofp<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator> <call><name pos:line="39" pos:column="14">fopen<pos:position pos:line="39" pos:column="19"/></name> <argument_list pos:line="39" pos:column="20">(<argument><expr><name pos:line="39" pos:column="21">sequences<pos:position pos:line="39" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="32">"r"<pos:position pos:line="39" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="36"/></argument_list></call><operator pos:line="39" pos:column="36">)<pos:position pos:line="39" pos:column="37"/></operator></expr>)<pos:position pos:line="39" pos:column="38"/></condition><then pos:line="39" pos:column="38">
  <block pos:line="40" pos:column="3">{
    <while pos:line="41" pos:column="5">while <condition pos:line="41" pos:column="11">(<expr><operator pos:line="41" pos:column="12">(<pos:position pos:line="41" pos:column="13"/></operator><name pos:line="41" pos:column="13">buff<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">=<pos:position pos:line="41" pos:column="19"/></operator> <call><name pos:line="41" pos:column="20">mutt_read_line<pos:position pos:line="41" pos:column="34"/></name> <argument_list pos:line="41" pos:column="35">(<argument><expr><name pos:line="41" pos:column="36">buff<pos:position pos:line="41" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="42">&amp;<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="43">s<pos:position pos:line="41" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="46">ofp<pos:position pos:line="41" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="51">&amp;<pos:position pos:line="41" pos:column="56"/></operator><name pos:line="41" pos:column="52">l<pos:position pos:line="41" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="55">0<pos:position pos:line="41" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="57"/></argument_list></call><operator pos:line="41" pos:column="57">)<pos:position pos:line="41" pos:column="58"/></operator></expr>)<pos:position pos:line="41" pos:column="59"/></condition>
    <block pos:line="42" pos:column="5">{
      <if pos:line="43" pos:column="7">if <condition pos:line="43" pos:column="10">(<expr><operator pos:line="43" pos:column="11">!<pos:position pos:line="43" pos:column="12"/></operator><call><name pos:line="43" pos:column="12">mutt_strncmp<pos:position pos:line="43" pos:column="24"/></name> <argument_list pos:line="43" pos:column="25">(<argument><expr><name pos:line="43" pos:column="26">buff<pos:position pos:line="43" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="32">seq_unseen<pos:position pos:line="43" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="44">mutt_strlen<pos:position pos:line="43" pos:column="55"/></name> <argument_list pos:line="43" pos:column="56">(<argument><expr><name pos:line="43" pos:column="57">seq_unseen<pos:position pos:line="43" pos:column="67"/></name></expr></argument>)<pos:position pos:line="43" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="70"/></condition><then pos:line="43" pos:column="70">
	<block type="pseudo"><continue pos:line="44" pos:column="9">continue;<pos:position pos:line="44" pos:column="18"/></continue></block></then></if>
      <if pos:line="45" pos:column="7">if <condition pos:line="45" pos:column="10">(<expr><operator pos:line="45" pos:column="11">!<pos:position pos:line="45" pos:column="12"/></operator><call><name pos:line="45" pos:column="12">mutt_strncmp<pos:position pos:line="45" pos:column="24"/></name> <argument_list pos:line="45" pos:column="25">(<argument><expr><name pos:line="45" pos:column="26">buff<pos:position pos:line="45" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="32">seq_flagged<pos:position pos:line="45" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="45">mutt_strlen<pos:position pos:line="45" pos:column="56"/></name> <argument_list pos:line="45" pos:column="57">(<argument><expr><name pos:line="45" pos:column="58">seq_flagged<pos:position pos:line="45" pos:column="69"/></name></expr></argument>)<pos:position pos:line="45" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="72"/></condition><then pos:line="45" pos:column="72">
	<block type="pseudo"><continue pos:line="46" pos:column="9">continue;<pos:position pos:line="46" pos:column="18"/></continue></block></then></if>
      <if pos:line="47" pos:column="7">if <condition pos:line="47" pos:column="10">(<expr><operator pos:line="47" pos:column="11">!<pos:position pos:line="47" pos:column="12"/></operator><call><name pos:line="47" pos:column="12">mutt_strncmp<pos:position pos:line="47" pos:column="24"/></name> <argument_list pos:line="47" pos:column="25">(<argument><expr><name pos:line="47" pos:column="26">buff<pos:position pos:line="47" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="32">seq_replied<pos:position pos:line="47" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="45">mutt_strlen<pos:position pos:line="47" pos:column="56"/></name> <argument_list pos:line="47" pos:column="57">(<argument><expr><name pos:line="47" pos:column="58">seq_replied<pos:position pos:line="47" pos:column="69"/></name></expr></argument>)<pos:position pos:line="47" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="72"/></condition><then pos:line="47" pos:column="72">
	<block type="pseudo"><continue pos:line="48" pos:column="9">continue;<pos:position pos:line="48" pos:column="18"/></continue></block></then></if>

      <expr_stmt><expr><call><name pos:line="50" pos:column="7">fprintf<pos:position pos:line="50" pos:column="14"/></name> <argument_list pos:line="50" pos:column="15">(<argument><expr><name pos:line="50" pos:column="16">nfp<pos:position pos:line="50" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="21">"%s\n"<pos:position pos:line="50" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="29">buff<pos:position pos:line="50" pos:column="33"/></name></expr></argument>)<pos:position pos:line="50" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="51" pos:column="6"/></block></while>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="53" pos:column="3">safe_fclose<pos:position pos:line="53" pos:column="14"/></name> <argument_list pos:line="53" pos:column="15">(<argument><expr><operator pos:line="53" pos:column="16">&amp;<pos:position pos:line="53" pos:column="21"/></operator><name pos:line="53" pos:column="17">ofp<pos:position pos:line="53" pos:column="20"/></name></expr></argument>)<pos:position pos:line="53" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="22"/></expr_stmt>

  <comment type="block" pos:line="55" pos:column="3">/* now, update our unseen, flagged, and replied sequences */</comment>
  <for pos:line="56" pos:column="3">for <control pos:line="56" pos:column="7">(<init><expr><name pos:line="56" pos:column="8">l<pos:position pos:line="56" pos:column="9"/></name> <operator pos:line="56" pos:column="10">=<pos:position pos:line="56" pos:column="11"/></operator> <literal type="number" pos:line="56" pos:column="12">0<pos:position pos:line="56" pos:column="13"/></literal></expr>;<pos:position pos:line="56" pos:column="14"/></init> <condition><expr><name pos:line="56" pos:column="15">l<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">&lt;<pos:position pos:line="56" pos:column="21"/></operator> <name><name pos:line="56" pos:column="19">ctx<pos:position pos:line="56" pos:column="22"/></name><operator pos:line="56" pos:column="22">-&gt;<pos:position pos:line="56" pos:column="27"/></operator><name pos:line="56" pos:column="24">msgcount<pos:position pos:line="56" pos:column="32"/></name></name></expr>;<pos:position pos:line="56" pos:column="33"/></condition> <incr><expr><name pos:line="56" pos:column="34">l<pos:position pos:line="56" pos:column="35"/></name><operator pos:line="56" pos:column="35">++<pos:position pos:line="56" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="56" pos:column="38"/></control>
  <block pos:line="57" pos:column="3">{
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name><name pos:line="58" pos:column="9">ctx<pos:position pos:line="58" pos:column="12"/></name><operator pos:line="58" pos:column="12">-&gt;<pos:position pos:line="58" pos:column="17"/></operator><name pos:line="58" pos:column="14">hdrs<pos:position pos:line="58" pos:column="18"/></name><index pos:line="58" pos:column="18">[<expr><name pos:line="58" pos:column="19">l<pos:position pos:line="58" pos:column="20"/></name></expr>]<pos:position pos:line="58" pos:column="21"/></index></name><operator pos:line="58" pos:column="21">-&gt;<pos:position pos:line="58" pos:column="26"/></operator><name pos:line="58" pos:column="23">deleted<pos:position pos:line="58" pos:column="30"/></name></expr>)<pos:position pos:line="58" pos:column="31"/></condition><then pos:line="58" pos:column="31">
      <block type="pseudo"><continue pos:line="59" pos:column="7">continue;<pos:position pos:line="59" pos:column="16"/></continue></block></then></if>

    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><operator pos:line="61" pos:column="9">(<pos:position pos:line="61" pos:column="10"/></operator><name pos:line="61" pos:column="10">p<pos:position pos:line="61" pos:column="11"/></name> <operator pos:line="61" pos:column="12">=<pos:position pos:line="61" pos:column="13"/></operator> <call><name pos:line="61" pos:column="14">strrchr<pos:position pos:line="61" pos:column="21"/></name> <argument_list pos:line="61" pos:column="22">(<argument><expr><name><name pos:line="61" pos:column="23">ctx<pos:position pos:line="61" pos:column="26"/></name><operator pos:line="61" pos:column="26">-&gt;<pos:position pos:line="61" pos:column="31"/></operator><name pos:line="61" pos:column="28">hdrs<pos:position pos:line="61" pos:column="32"/></name><index pos:line="61" pos:column="32">[<expr><name pos:line="61" pos:column="33">l<pos:position pos:line="61" pos:column="34"/></name></expr>]<pos:position pos:line="61" pos:column="35"/></index></name><operator pos:line="61" pos:column="35">-&gt;<pos:position pos:line="61" pos:column="40"/></operator><name pos:line="61" pos:column="37">path<pos:position pos:line="61" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="61" pos:column="43">'/'<pos:position pos:line="61" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="47"/></argument_list></call><operator pos:line="61" pos:column="47">)<pos:position pos:line="61" pos:column="48"/></operator></expr>)<pos:position pos:line="61" pos:column="49"/></condition><then pos:line="61" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="7">p<pos:position pos:line="62" pos:column="8"/></name><operator pos:line="62" pos:column="8">++<pos:position pos:line="62" pos:column="10"/></operator></expr>;<pos:position pos:line="62" pos:column="11"/></expr_stmt></block></then>
    <else pos:line="63" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="7">p<pos:position pos:line="64" pos:column="8"/></name> <operator pos:line="64" pos:column="9">=<pos:position pos:line="64" pos:column="10"/></operator> <name><name pos:line="64" pos:column="11">ctx<pos:position pos:line="64" pos:column="14"/></name><operator pos:line="64" pos:column="14">-&gt;<pos:position pos:line="64" pos:column="19"/></operator><name pos:line="64" pos:column="16">hdrs<pos:position pos:line="64" pos:column="20"/></name><index pos:line="64" pos:column="20">[<expr><name pos:line="64" pos:column="21">l<pos:position pos:line="64" pos:column="22"/></name></expr>]<pos:position pos:line="64" pos:column="23"/></index></name><operator pos:line="64" pos:column="23">-&gt;<pos:position pos:line="64" pos:column="28"/></operator><name pos:line="64" pos:column="25">path<pos:position pos:line="64" pos:column="29"/></name></expr>;<pos:position pos:line="64" pos:column="30"/></expr_stmt></block></else></if>

    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><call><name pos:line="66" pos:column="9">mutt_atoi<pos:position pos:line="66" pos:column="18"/></name> <argument_list pos:line="66" pos:column="19">(<argument><expr><name pos:line="66" pos:column="20">p<pos:position pos:line="66" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="23">&amp;<pos:position pos:line="66" pos:column="28"/></operator><name pos:line="66" pos:column="24">i<pos:position pos:line="66" pos:column="25"/></name></expr></argument>)<pos:position pos:line="66" pos:column="26"/></argument_list></call> <operator pos:line="66" pos:column="27">&lt;<pos:position pos:line="66" pos:column="31"/></operator> <literal type="number" pos:line="66" pos:column="29">0<pos:position pos:line="66" pos:column="30"/></literal></expr>)<pos:position pos:line="66" pos:column="31"/></condition><then pos:line="66" pos:column="31">
      <block type="pseudo"><continue pos:line="67" pos:column="7">continue;<pos:position pos:line="67" pos:column="16"/></continue></block></then></if>

    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><operator pos:line="69" pos:column="9">!<pos:position pos:line="69" pos:column="10"/></operator><name><name pos:line="69" pos:column="10">ctx<pos:position pos:line="69" pos:column="13"/></name><operator pos:line="69" pos:column="13">-&gt;<pos:position pos:line="69" pos:column="18"/></operator><name pos:line="69" pos:column="15">hdrs<pos:position pos:line="69" pos:column="19"/></name><index pos:line="69" pos:column="19">[<expr><name pos:line="69" pos:column="20">l<pos:position pos:line="69" pos:column="21"/></name></expr>]<pos:position pos:line="69" pos:column="22"/></index></name><operator pos:line="69" pos:column="22">-&gt;<pos:position pos:line="69" pos:column="27"/></operator><name pos:line="69" pos:column="24">read<pos:position pos:line="69" pos:column="28"/></name></expr>)<pos:position pos:line="69" pos:column="29"/></condition><then pos:line="69" pos:column="29">
    <block pos:line="70" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="71" pos:column="7">mhs_set<pos:position pos:line="71" pos:column="14"/></name> <argument_list pos:line="71" pos:column="15">(<argument><expr><operator pos:line="71" pos:column="16">&amp;<pos:position pos:line="71" pos:column="21"/></operator><name pos:line="71" pos:column="17">mhs<pos:position pos:line="71" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="22">i<pos:position pos:line="71" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="25">MH_SEQ_UNSEEN<pos:position pos:line="71" pos:column="38"/></name></expr></argument>)<pos:position pos:line="71" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name pos:line="72" pos:column="7">unseen<pos:position pos:line="72" pos:column="13"/></name><operator pos:line="72" pos:column="13">++<pos:position pos:line="72" pos:column="15"/></operator></expr>;<pos:position pos:line="72" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>
    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><name><name pos:line="74" pos:column="9">ctx<pos:position pos:line="74" pos:column="12"/></name><operator pos:line="74" pos:column="12">-&gt;<pos:position pos:line="74" pos:column="17"/></operator><name pos:line="74" pos:column="14">hdrs<pos:position pos:line="74" pos:column="18"/></name><index pos:line="74" pos:column="18">[<expr><name pos:line="74" pos:column="19">l<pos:position pos:line="74" pos:column="20"/></name></expr>]<pos:position pos:line="74" pos:column="21"/></index></name><operator pos:line="74" pos:column="21">-&gt;<pos:position pos:line="74" pos:column="26"/></operator><name pos:line="74" pos:column="23">flagged<pos:position pos:line="74" pos:column="30"/></name></expr>)<pos:position pos:line="74" pos:column="31"/></condition><then pos:line="74" pos:column="31">
    <block pos:line="75" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="76" pos:column="7">mhs_set<pos:position pos:line="76" pos:column="14"/></name> <argument_list pos:line="76" pos:column="15">(<argument><expr><operator pos:line="76" pos:column="16">&amp;<pos:position pos:line="76" pos:column="21"/></operator><name pos:line="76" pos:column="17">mhs<pos:position pos:line="76" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="22">i<pos:position pos:line="76" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="25">MH_SEQ_FLAGGED<pos:position pos:line="76" pos:column="39"/></name></expr></argument>)<pos:position pos:line="76" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name pos:line="77" pos:column="7">flagged<pos:position pos:line="77" pos:column="14"/></name><operator pos:line="77" pos:column="14">++<pos:position pos:line="77" pos:column="16"/></operator></expr>;<pos:position pos:line="77" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="78" pos:column="6"/></block></then></if>
    <if pos:line="79" pos:column="5">if <condition pos:line="79" pos:column="8">(<expr><name><name pos:line="79" pos:column="9">ctx<pos:position pos:line="79" pos:column="12"/></name><operator pos:line="79" pos:column="12">-&gt;<pos:position pos:line="79" pos:column="17"/></operator><name pos:line="79" pos:column="14">hdrs<pos:position pos:line="79" pos:column="18"/></name><index pos:line="79" pos:column="18">[<expr><name pos:line="79" pos:column="19">l<pos:position pos:line="79" pos:column="20"/></name></expr>]<pos:position pos:line="79" pos:column="21"/></index></name><operator pos:line="79" pos:column="21">-&gt;<pos:position pos:line="79" pos:column="26"/></operator><name pos:line="79" pos:column="23">replied<pos:position pos:line="79" pos:column="30"/></name></expr>)<pos:position pos:line="79" pos:column="31"/></condition><then pos:line="79" pos:column="31">
    <block pos:line="80" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="81" pos:column="7">mhs_set<pos:position pos:line="81" pos:column="14"/></name> <argument_list pos:line="81" pos:column="15">(<argument><expr><operator pos:line="81" pos:column="16">&amp;<pos:position pos:line="81" pos:column="21"/></operator><name pos:line="81" pos:column="17">mhs<pos:position pos:line="81" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="22">i<pos:position pos:line="81" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="25">MH_SEQ_REPLIED<pos:position pos:line="81" pos:column="39"/></name></expr></argument>)<pos:position pos:line="81" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name pos:line="82" pos:column="7">replied<pos:position pos:line="82" pos:column="14"/></name><operator pos:line="82" pos:column="14">++<pos:position pos:line="82" pos:column="16"/></operator></expr>;<pos:position pos:line="82" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></then></if>
  }<pos:position pos:line="84" pos:column="4"/></block></for>

  <comment type="block" pos:line="86" pos:column="3">/* write out the new sequences */</comment>
  <if pos:line="87" pos:column="3">if <condition pos:line="87" pos:column="6">(<expr><name pos:line="87" pos:column="7">unseen<pos:position pos:line="87" pos:column="13"/></name></expr>)<pos:position pos:line="87" pos:column="14"/></condition><then pos:line="87" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="88" pos:column="5">mhs_write_one_sequence<pos:position pos:line="88" pos:column="27"/></name> <argument_list pos:line="88" pos:column="28">(<argument><expr><name pos:line="88" pos:column="29">nfp<pos:position pos:line="88" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="34">&amp;<pos:position pos:line="88" pos:column="39"/></operator><name pos:line="88" pos:column="35">mhs<pos:position pos:line="88" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="40">MH_SEQ_UNSEEN<pos:position pos:line="88" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="88" pos:column="55">NONULL<pos:position pos:line="88" pos:column="61"/></name> <argument_list pos:line="88" pos:column="62">(<argument><expr><name pos:line="88" pos:column="63">MhUnseen<pos:position pos:line="88" pos:column="71"/></name></expr></argument>)<pos:position pos:line="88" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="88" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="74"/></expr_stmt></block></then></if>
  <if pos:line="89" pos:column="3">if <condition pos:line="89" pos:column="6">(<expr><name pos:line="89" pos:column="7">flagged<pos:position pos:line="89" pos:column="14"/></name></expr>)<pos:position pos:line="89" pos:column="15"/></condition><then pos:line="89" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="5">mhs_write_one_sequence<pos:position pos:line="90" pos:column="27"/></name> <argument_list pos:line="90" pos:column="28">(<argument><expr><name pos:line="90" pos:column="29">nfp<pos:position pos:line="90" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="34">&amp;<pos:position pos:line="90" pos:column="39"/></operator><name pos:line="90" pos:column="35">mhs<pos:position pos:line="90" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="40">MH_SEQ_FLAGGED<pos:position pos:line="90" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="90" pos:column="56">NONULL<pos:position pos:line="90" pos:column="62"/></name> <argument_list pos:line="90" pos:column="63">(<argument><expr><name pos:line="90" pos:column="64">MhFlagged<pos:position pos:line="90" pos:column="73"/></name></expr></argument>)<pos:position pos:line="90" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="90" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="76"/></expr_stmt></block></then></if>
  <if pos:line="91" pos:column="3">if <condition pos:line="91" pos:column="6">(<expr><name pos:line="91" pos:column="7">replied<pos:position pos:line="91" pos:column="14"/></name></expr>)<pos:position pos:line="91" pos:column="15"/></condition><then pos:line="91" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="92" pos:column="5">mhs_write_one_sequence<pos:position pos:line="92" pos:column="27"/></name> <argument_list pos:line="92" pos:column="28">(<argument><expr><name pos:line="92" pos:column="29">nfp<pos:position pos:line="92" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="92" pos:column="34">&amp;<pos:position pos:line="92" pos:column="39"/></operator><name pos:line="92" pos:column="35">mhs<pos:position pos:line="92" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="40">MH_SEQ_REPLIED<pos:position pos:line="92" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="92" pos:column="56">NONULL<pos:position pos:line="92" pos:column="62"/></name> <argument_list pos:line="92" pos:column="63">(<argument><expr><name pos:line="92" pos:column="64">MhReplied<pos:position pos:line="92" pos:column="73"/></name></expr></argument>)<pos:position pos:line="92" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="92" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="76"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="94" pos:column="3">mhs_free_sequences<pos:position pos:line="94" pos:column="21"/></name> <argument_list pos:line="94" pos:column="22">(<argument><expr><operator pos:line="94" pos:column="23">&amp;<pos:position pos:line="94" pos:column="28"/></operator><name pos:line="94" pos:column="24">mhs<pos:position pos:line="94" pos:column="27"/></name></expr></argument>)<pos:position pos:line="94" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="29"/></expr_stmt>


  <comment type="block" pos:line="97" pos:column="3">/* try to commit the changes - no guarantee here */</comment>
  <expr_stmt><expr><call><name pos:line="98" pos:column="3">safe_fclose<pos:position pos:line="98" pos:column="14"/></name> <argument_list pos:line="98" pos:column="15">(<argument><expr><operator pos:line="98" pos:column="16">&amp;<pos:position pos:line="98" pos:column="21"/></operator><name pos:line="98" pos:column="17">nfp<pos:position pos:line="98" pos:column="20"/></name></expr></argument>)<pos:position pos:line="98" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="100" pos:column="3">unlink<pos:position pos:line="100" pos:column="9"/></name> <argument_list pos:line="100" pos:column="10">(<argument><expr><name pos:line="100" pos:column="11">sequences<pos:position pos:line="100" pos:column="20"/></name></expr></argument>)<pos:position pos:line="100" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="22"/></expr_stmt>
  <if pos:line="101" pos:column="3">if <condition pos:line="101" pos:column="6">(<expr><call><name pos:line="101" pos:column="7">safe_rename<pos:position pos:line="101" pos:column="18"/></name> <argument_list pos:line="101" pos:column="19">(<argument><expr><name pos:line="101" pos:column="20">tmpfname<pos:position pos:line="101" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="30">sequences<pos:position pos:line="101" pos:column="39"/></name></expr></argument>)<pos:position pos:line="101" pos:column="40"/></argument_list></call> <operator pos:line="101" pos:column="41">!=<pos:position pos:line="101" pos:column="43"/></operator> <literal type="number" pos:line="101" pos:column="44">0<pos:position pos:line="101" pos:column="45"/></literal></expr>)<pos:position pos:line="101" pos:column="46"/></condition><then pos:line="101" pos:column="46">
  <block pos:line="102" pos:column="3">{
    <comment type="block" pos:line="103" pos:column="5">/* report an error? */</comment>
    <expr_stmt><expr><call><name pos:line="104" pos:column="5">unlink<pos:position pos:line="104" pos:column="11"/></name> <argument_list pos:line="104" pos:column="12">(<argument><expr><name pos:line="104" pos:column="13">tmpfname<pos:position pos:line="104" pos:column="21"/></name></expr></argument>)<pos:position pos:line="104" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="105" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="107" pos:column="3">FREE<pos:position pos:line="107" pos:column="7"/></name> <argument_list pos:line="107" pos:column="8">(<argument><expr><operator pos:line="107" pos:column="9">&amp;<pos:position pos:line="107" pos:column="14"/></operator><name pos:line="107" pos:column="10">tmpfname<pos:position pos:line="107" pos:column="18"/></name></expr></argument>)<pos:position pos:line="107" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="20"/></expr_stmt>
}<pos:position pos:line="108" pos:column="2"/></block></function></unit>

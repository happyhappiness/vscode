<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_520_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_parse_rfc822_line<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">ENVELOPE<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">e<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">HEADER<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">hdr<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">line<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">char<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">p<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="76">short<pos:position pos:line="1" pos:column="81"/></name></type> <name pos:line="1" pos:column="82">user_hdrs<pos:position pos:line="1" pos:column="91"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="93">short<pos:position pos:line="1" pos:column="98"/></name></type> <name pos:line="1" pos:column="99">weed<pos:position pos:line="1" pos:column="103"/></name></decl></parameter>,
			    <parameter><decl><type><name pos:line="2" pos:column="29">short<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">do_2047<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">LIST<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier><modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">lastp<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">matched<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><literal type="number" pos:line="4" pos:column="17">0<pos:position pos:line="4" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">LIST<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">last<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><name pos:line="5" pos:column="16">NULL<pos:position pos:line="5" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">lastp<pos:position pos:line="7" pos:column="12"/></name></expr>)<pos:position pos:line="7" pos:column="13"/></condition><then pos:line="7" pos:column="13">
    <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="5">last<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <operator pos:line="8" pos:column="12">*<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">lastp<pos:position pos:line="8" pos:column="18"/></name></expr>;<pos:position pos:line="8" pos:column="19"/></expr_stmt></block></then></if>
  
  <switch pos:line="10" pos:column="3">switch <condition pos:line="10" pos:column="10">(<expr><call><name pos:line="10" pos:column="11">ascii_tolower<pos:position pos:line="10" pos:column="24"/></name> <argument_list pos:line="10" pos:column="25">(<argument><expr><name><name pos:line="10" pos:column="26">line<pos:position pos:line="10" pos:column="30"/></name><index pos:line="10" pos:column="30">[<expr><literal type="number" pos:line="10" pos:column="31">0<pos:position pos:line="10" pos:column="32"/></literal></expr>]<pos:position pos:line="10" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="35"/></condition>
  <block pos:line="11" pos:column="3">{
    <case pos:line="12" pos:column="5">case <expr><literal type="char" pos:line="12" pos:column="10">'a'<pos:position pos:line="12" pos:column="13"/></literal></expr>:<pos:position pos:line="12" pos:column="14"/></case>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">ascii_strcasecmp<pos:position pos:line="13" pos:column="25"/></name> <argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">line<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">+<pos:position pos:line="13" pos:column="32"/></operator><literal type="number" pos:line="13" pos:column="32">1<pos:position pos:line="13" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="35">"pparently-to"<pos:position pos:line="13" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="50"/></argument_list></call> <operator pos:line="13" pos:column="51">==<pos:position pos:line="13" pos:column="53"/></operator> <literal type="number" pos:line="13" pos:column="54">0<pos:position pos:line="13" pos:column="55"/></literal></expr>)<pos:position pos:line="13" pos:column="56"/></condition><then pos:line="13" pos:column="56">
    <block pos:line="14" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="15" pos:column="7">e<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">-&gt;<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="10">to<pos:position pos:line="15" pos:column="12"/></name></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <call><name pos:line="15" pos:column="15">rfc822_parse_adrlist<pos:position pos:line="15" pos:column="35"/></name> <argument_list pos:line="15" pos:column="36">(<argument><expr><name><name pos:line="15" pos:column="37">e<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">-&gt;<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="40">to<pos:position pos:line="15" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="44">p<pos:position pos:line="15" pos:column="45"/></name></expr></argument>)<pos:position pos:line="15" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><name pos:line="16" pos:column="7">matched<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <literal type="number" pos:line="16" pos:column="17">1<pos:position pos:line="16" pos:column="18"/></literal></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then>
    <elseif pos:line="18" pos:column="5">else <if pos:line="18" pos:column="10">if <condition pos:line="18" pos:column="13">(<expr><call><name pos:line="18" pos:column="14">ascii_strcasecmp<pos:position pos:line="18" pos:column="30"/></name> <argument_list pos:line="18" pos:column="31">(<argument><expr><name pos:line="18" pos:column="32">line<pos:position pos:line="18" pos:column="36"/></name><operator pos:line="18" pos:column="36">+<pos:position pos:line="18" pos:column="37"/></operator><literal type="number" pos:line="18" pos:column="37">1<pos:position pos:line="18" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="40">"pparently-from"<pos:position pos:line="18" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="57"/></argument_list></call> <operator pos:line="18" pos:column="58">==<pos:position pos:line="18" pos:column="60"/></operator> <literal type="number" pos:line="18" pos:column="61">0<pos:position pos:line="18" pos:column="62"/></literal></expr>)<pos:position pos:line="18" pos:column="63"/></condition><then pos:line="18" pos:column="63">
    <block pos:line="19" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="20" pos:column="7">e<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">-&gt;<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="10">from<pos:position pos:line="20" pos:column="14"/></name></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <call><name pos:line="20" pos:column="17">rfc822_parse_adrlist<pos:position pos:line="20" pos:column="37"/></name> <argument_list pos:line="20" pos:column="38">(<argument><expr><name><name pos:line="20" pos:column="39">e<pos:position pos:line="20" pos:column="40"/></name><operator pos:line="20" pos:column="40">-&gt;<pos:position pos:line="20" pos:column="45"/></operator><name pos:line="20" pos:column="42">from<pos:position pos:line="20" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="48">p<pos:position pos:line="20" pos:column="49"/></name></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name pos:line="21" pos:column="7">matched<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <literal type="number" pos:line="21" pos:column="17">1<pos:position pos:line="21" pos:column="18"/></literal></expr>;<pos:position pos:line="21" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if></elseif></if>
    <break pos:line="23" pos:column="5">break;<pos:position pos:line="23" pos:column="11"/></break>
    
    <case pos:line="25" pos:column="5">case <expr><literal type="char" pos:line="25" pos:column="10">'b'<pos:position pos:line="25" pos:column="13"/></literal></expr>:<pos:position pos:line="25" pos:column="14"/></case>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><call><name pos:line="26" pos:column="9">ascii_strcasecmp<pos:position pos:line="26" pos:column="25"/></name> <argument_list pos:line="26" pos:column="26">(<argument><expr><name pos:line="26" pos:column="27">line<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">+<pos:position pos:line="26" pos:column="32"/></operator><literal type="number" pos:line="26" pos:column="32">1<pos:position pos:line="26" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="35">"cc"<pos:position pos:line="26" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></call> <operator pos:line="26" pos:column="41">==<pos:position pos:line="26" pos:column="43"/></operator> <literal type="number" pos:line="26" pos:column="44">0<pos:position pos:line="26" pos:column="45"/></literal></expr>)<pos:position pos:line="26" pos:column="46"/></condition><then pos:line="26" pos:column="46">
    <block pos:line="27" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="28" pos:column="7">e<pos:position pos:line="28" pos:column="8"/></name><operator pos:line="28" pos:column="8">-&gt;<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="10">bcc<pos:position pos:line="28" pos:column="13"/></name></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <call><name pos:line="28" pos:column="16">rfc822_parse_adrlist<pos:position pos:line="28" pos:column="36"/></name> <argument_list pos:line="28" pos:column="37">(<argument><expr><name><name pos:line="28" pos:column="38">e<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">-&gt;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="41">bcc<pos:position pos:line="28" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="46">p<pos:position pos:line="28" pos:column="47"/></name></expr></argument>)<pos:position pos:line="28" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><name pos:line="29" pos:column="7">matched<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator> <literal type="number" pos:line="29" pos:column="17">1<pos:position pos:line="29" pos:column="18"/></literal></expr>;<pos:position pos:line="29" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
    <break pos:line="31" pos:column="5">break;<pos:position pos:line="31" pos:column="11"/></break>
    
    <case pos:line="33" pos:column="5">case <expr><literal type="char" pos:line="33" pos:column="10">'c'<pos:position pos:line="33" pos:column="13"/></literal></expr>:<pos:position pos:line="33" pos:column="14"/></case>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><call><name pos:line="34" pos:column="9">ascii_strcasecmp<pos:position pos:line="34" pos:column="25"/></name> <argument_list pos:line="34" pos:column="26">(<argument><expr><name pos:line="34" pos:column="27">line<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">+<pos:position pos:line="34" pos:column="32"/></operator><literal type="number" pos:line="34" pos:column="32">1<pos:position pos:line="34" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="35">"c"<pos:position pos:line="34" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="39"/></argument_list></call> <operator pos:line="34" pos:column="40">==<pos:position pos:line="34" pos:column="42"/></operator> <literal type="number" pos:line="34" pos:column="43">0<pos:position pos:line="34" pos:column="44"/></literal></expr>)<pos:position pos:line="34" pos:column="45"/></condition><then pos:line="34" pos:column="45">
    <block pos:line="35" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="36" pos:column="7">e<pos:position pos:line="36" pos:column="8"/></name><operator pos:line="36" pos:column="8">-&gt;<pos:position pos:line="36" pos:column="13"/></operator><name pos:line="36" pos:column="10">cc<pos:position pos:line="36" pos:column="12"/></name></name> <operator pos:line="36" pos:column="13">=<pos:position pos:line="36" pos:column="14"/></operator> <call><name pos:line="36" pos:column="15">rfc822_parse_adrlist<pos:position pos:line="36" pos:column="35"/></name> <argument_list pos:line="36" pos:column="36">(<argument><expr><name><name pos:line="36" pos:column="37">e<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">-&gt;<pos:position pos:line="36" pos:column="43"/></operator><name pos:line="36" pos:column="40">cc<pos:position pos:line="36" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="44">p<pos:position pos:line="36" pos:column="45"/></name></expr></argument>)<pos:position pos:line="36" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><name pos:line="37" pos:column="7">matched<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <literal type="number" pos:line="37" pos:column="17">1<pos:position pos:line="37" pos:column="18"/></literal></expr>;<pos:position pos:line="37" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then>
    <elseif pos:line="39" pos:column="5">else <if pos:line="39" pos:column="10">if <condition pos:line="39" pos:column="13">(<expr><call><name pos:line="39" pos:column="14">ascii_strncasecmp<pos:position pos:line="39" pos:column="31"/></name> <argument_list pos:line="39" pos:column="32">(<argument><expr><name pos:line="39" pos:column="33">line<pos:position pos:line="39" pos:column="37"/></name> <operator pos:line="39" pos:column="38">+<pos:position pos:line="39" pos:column="39"/></operator> <literal type="number" pos:line="39" pos:column="40">1<pos:position pos:line="39" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="43">"ontent-"<pos:position pos:line="39" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="54">7<pos:position pos:line="39" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="56"/></argument_list></call> <operator pos:line="39" pos:column="57">==<pos:position pos:line="39" pos:column="59"/></operator> <literal type="number" pos:line="39" pos:column="60">0<pos:position pos:line="39" pos:column="61"/></literal></expr>)<pos:position pos:line="39" pos:column="62"/></condition><then pos:line="39" pos:column="62">
    <block pos:line="40" pos:column="5">{
      <if pos:line="41" pos:column="7">if <condition pos:line="41" pos:column="10">(<expr><call><name pos:line="41" pos:column="11">ascii_strcasecmp<pos:position pos:line="41" pos:column="27"/></name> <argument_list pos:line="41" pos:column="28">(<argument><expr><name pos:line="41" pos:column="29">line<pos:position pos:line="41" pos:column="33"/></name><operator pos:line="41" pos:column="33">+<pos:position pos:line="41" pos:column="34"/></operator><literal type="number" pos:line="41" pos:column="34">8<pos:position pos:line="41" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="37">"type"<pos:position pos:line="41" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="44"/></argument_list></call> <operator pos:line="41" pos:column="45">==<pos:position pos:line="41" pos:column="47"/></operator> <literal type="number" pos:line="41" pos:column="48">0<pos:position pos:line="41" pos:column="49"/></literal></expr>)<pos:position pos:line="41" pos:column="50"/></condition><then pos:line="41" pos:column="50">
      <block pos:line="42" pos:column="7">{
	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">hdr<pos:position pos:line="43" pos:column="16"/></name></expr>)<pos:position pos:line="43" pos:column="17"/></condition><then pos:line="43" pos:column="17">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="11">mutt_parse_content_type<pos:position pos:line="44" pos:column="34"/></name> <argument_list pos:line="44" pos:column="35">(<argument><expr><name pos:line="44" pos:column="36">p<pos:position pos:line="44" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="39">hdr<pos:position pos:line="44" pos:column="42"/></name><operator pos:line="44" pos:column="42">-&gt;<pos:position pos:line="44" pos:column="47"/></operator><name pos:line="44" pos:column="44">content<pos:position pos:line="44" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="53"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="45" pos:column="9">matched<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">=<pos:position pos:line="45" pos:column="18"/></operator> <literal type="number" pos:line="45" pos:column="19">1<pos:position pos:line="45" pos:column="20"/></literal></expr>;<pos:position pos:line="45" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="46" pos:column="8"/></block></then>
      <elseif pos:line="47" pos:column="7">else <if pos:line="47" pos:column="12">if <condition pos:line="47" pos:column="15">(<expr><call><name pos:line="47" pos:column="16">ascii_strcasecmp<pos:position pos:line="47" pos:column="32"/></name> <argument_list pos:line="47" pos:column="33">(<argument><expr><name pos:line="47" pos:column="34">line<pos:position pos:line="47" pos:column="38"/></name><operator pos:line="47" pos:column="38">+<pos:position pos:line="47" pos:column="39"/></operator><literal type="number" pos:line="47" pos:column="39">8<pos:position pos:line="47" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="42">"transfer-encoding"<pos:position pos:line="47" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="62"/></argument_list></call> <operator pos:line="47" pos:column="63">==<pos:position pos:line="47" pos:column="65"/></operator> <literal type="number" pos:line="47" pos:column="66">0<pos:position pos:line="47" pos:column="67"/></literal></expr>)<pos:position pos:line="47" pos:column="68"/></condition><then pos:line="47" pos:column="68">
      <block pos:line="48" pos:column="7">{
	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">hdr<pos:position pos:line="49" pos:column="16"/></name></expr>)<pos:position pos:line="49" pos:column="17"/></condition><then pos:line="49" pos:column="17">
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="50" pos:column="11">hdr<pos:position pos:line="50" pos:column="14"/></name><operator pos:line="50" pos:column="14">-&gt;<pos:position pos:line="50" pos:column="19"/></operator><name pos:line="50" pos:column="16">content<pos:position pos:line="50" pos:column="23"/></name><operator pos:line="50" pos:column="23">-&gt;<pos:position pos:line="50" pos:column="28"/></operator><name pos:line="50" pos:column="25">encoding<pos:position pos:line="50" pos:column="33"/></name></name> <operator pos:line="50" pos:column="34">=<pos:position pos:line="50" pos:column="35"/></operator> <call><name pos:line="50" pos:column="36">mutt_check_encoding<pos:position pos:line="50" pos:column="55"/></name> <argument_list pos:line="50" pos:column="56">(<argument><expr><name pos:line="50" pos:column="57">p<pos:position pos:line="50" pos:column="58"/></name></expr></argument>)<pos:position pos:line="50" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="60"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="51" pos:column="9">matched<pos:position pos:line="51" pos:column="16"/></name> <operator pos:line="51" pos:column="17">=<pos:position pos:line="51" pos:column="18"/></operator> <literal type="number" pos:line="51" pos:column="19">1<pos:position pos:line="51" pos:column="20"/></literal></expr>;<pos:position pos:line="51" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="52" pos:column="8"/></block></then></if></elseif>
      <elseif pos:line="53" pos:column="7">else <if pos:line="53" pos:column="12">if <condition pos:line="53" pos:column="15">(<expr><call><name pos:line="53" pos:column="16">ascii_strcasecmp<pos:position pos:line="53" pos:column="32"/></name> <argument_list pos:line="53" pos:column="33">(<argument><expr><name pos:line="53" pos:column="34">line<pos:position pos:line="53" pos:column="38"/></name><operator pos:line="53" pos:column="38">+<pos:position pos:line="53" pos:column="39"/></operator><literal type="number" pos:line="53" pos:column="39">8<pos:position pos:line="53" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="42">"length"<pos:position pos:line="53" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="51"/></argument_list></call> <operator pos:line="53" pos:column="52">==<pos:position pos:line="53" pos:column="54"/></operator> <literal type="number" pos:line="53" pos:column="55">0<pos:position pos:line="53" pos:column="56"/></literal></expr>)<pos:position pos:line="53" pos:column="57"/></condition><then pos:line="53" pos:column="57">
      <block pos:line="54" pos:column="7">{
	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name pos:line="55" pos:column="13">hdr<pos:position pos:line="55" pos:column="16"/></name></expr>)<pos:position pos:line="55" pos:column="17"/></condition><then pos:line="55" pos:column="17">
	<block pos:line="56" pos:column="9">{
	  <if pos:line="57" pos:column="11">if <condition pos:line="57" pos:column="14">(<expr><operator pos:line="57" pos:column="15">(<pos:position pos:line="57" pos:column="16"/></operator><name><name pos:line="57" pos:column="16">hdr<pos:position pos:line="57" pos:column="19"/></name><operator pos:line="57" pos:column="19">-&gt;<pos:position pos:line="57" pos:column="24"/></operator><name pos:line="57" pos:column="21">content<pos:position pos:line="57" pos:column="28"/></name><operator pos:line="57" pos:column="28">-&gt;<pos:position pos:line="57" pos:column="33"/></operator><name pos:line="57" pos:column="30">length<pos:position pos:line="57" pos:column="36"/></name></name> <operator pos:line="57" pos:column="37">=<pos:position pos:line="57" pos:column="38"/></operator> <call><name pos:line="57" pos:column="39">atol<pos:position pos:line="57" pos:column="43"/></name> <argument_list pos:line="57" pos:column="44">(<argument><expr><name pos:line="57" pos:column="45">p<pos:position pos:line="57" pos:column="46"/></name></expr></argument>)<pos:position pos:line="57" pos:column="47"/></argument_list></call><operator pos:line="57" pos:column="47">)<pos:position pos:line="57" pos:column="48"/></operator> <operator pos:line="57" pos:column="49">&lt;<pos:position pos:line="57" pos:column="53"/></operator> <literal type="number" pos:line="57" pos:column="51">0<pos:position pos:line="57" pos:column="52"/></literal></expr>)<pos:position pos:line="57" pos:column="53"/></condition><then pos:line="57" pos:column="53">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="58" pos:column="13">hdr<pos:position pos:line="58" pos:column="16"/></name><operator pos:line="58" pos:column="16">-&gt;<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="18">content<pos:position pos:line="58" pos:column="25"/></name><operator pos:line="58" pos:column="25">-&gt;<pos:position pos:line="58" pos:column="30"/></operator><name pos:line="58" pos:column="27">length<pos:position pos:line="58" pos:column="33"/></name></name> <operator pos:line="58" pos:column="34">=<pos:position pos:line="58" pos:column="35"/></operator> <operator pos:line="58" pos:column="36">-<pos:position pos:line="58" pos:column="37"/></operator><literal type="number" pos:line="58" pos:column="37">1<pos:position pos:line="58" pos:column="38"/></literal></expr>;<pos:position pos:line="58" pos:column="39"/></expr_stmt></block></then></if>
	}<pos:position pos:line="59" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="60" pos:column="9">matched<pos:position pos:line="60" pos:column="16"/></name> <operator pos:line="60" pos:column="17">=<pos:position pos:line="60" pos:column="18"/></operator> <literal type="number" pos:line="60" pos:column="19">1<pos:position pos:line="60" pos:column="20"/></literal></expr>;<pos:position pos:line="60" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="61" pos:column="8"/></block></then></if></elseif>
      <elseif pos:line="62" pos:column="7">else <if pos:line="62" pos:column="12">if <condition pos:line="62" pos:column="15">(<expr><call><name pos:line="62" pos:column="16">ascii_strcasecmp<pos:position pos:line="62" pos:column="32"/></name> <argument_list pos:line="62" pos:column="33">(<argument><expr><name pos:line="62" pos:column="34">line<pos:position pos:line="62" pos:column="38"/></name><operator pos:line="62" pos:column="38">+<pos:position pos:line="62" pos:column="39"/></operator><literal type="number" pos:line="62" pos:column="39">8<pos:position pos:line="62" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="42">"description"<pos:position pos:line="62" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="56"/></argument_list></call> <operator pos:line="62" pos:column="57">==<pos:position pos:line="62" pos:column="59"/></operator> <literal type="number" pos:line="62" pos:column="60">0<pos:position pos:line="62" pos:column="61"/></literal></expr>)<pos:position pos:line="62" pos:column="62"/></condition><then pos:line="62" pos:column="62">
      <block pos:line="63" pos:column="7">{
	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name pos:line="64" pos:column="13">hdr<pos:position pos:line="64" pos:column="16"/></name></expr>)<pos:position pos:line="64" pos:column="17"/></condition><then pos:line="64" pos:column="17">
	<block pos:line="65" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="66" pos:column="11">mutt_str_replace<pos:position pos:line="66" pos:column="27"/></name> <argument_list pos:line="66" pos:column="28">(<argument><expr><operator pos:line="66" pos:column="29">&amp;<pos:position pos:line="66" pos:column="34"/></operator><name><name pos:line="66" pos:column="30">hdr<pos:position pos:line="66" pos:column="33"/></name><operator pos:line="66" pos:column="33">-&gt;<pos:position pos:line="66" pos:column="38"/></operator><name pos:line="66" pos:column="35">content<pos:position pos:line="66" pos:column="42"/></name><operator pos:line="66" pos:column="42">-&gt;<pos:position pos:line="66" pos:column="47"/></operator><name pos:line="66" pos:column="44">description<pos:position pos:line="66" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="57">p<pos:position pos:line="66" pos:column="58"/></name></expr></argument>)<pos:position pos:line="66" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="60"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="67" pos:column="11">rfc2047_decode<pos:position pos:line="67" pos:column="25"/></name> <argument_list pos:line="67" pos:column="26">(<argument><expr><operator pos:line="67" pos:column="27">&amp;<pos:position pos:line="67" pos:column="32"/></operator><name><name pos:line="67" pos:column="28">hdr<pos:position pos:line="67" pos:column="31"/></name><operator pos:line="67" pos:column="31">-&gt;<pos:position pos:line="67" pos:column="36"/></operator><name pos:line="67" pos:column="33">content<pos:position pos:line="67" pos:column="40"/></name><operator pos:line="67" pos:column="40">-&gt;<pos:position pos:line="67" pos:column="45"/></operator><name pos:line="67" pos:column="42">description<pos:position pos:line="67" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="55"/></expr_stmt>
	}<pos:position pos:line="68" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="69" pos:column="9">matched<pos:position pos:line="69" pos:column="16"/></name> <operator pos:line="69" pos:column="17">=<pos:position pos:line="69" pos:column="18"/></operator> <literal type="number" pos:line="69" pos:column="19">1<pos:position pos:line="69" pos:column="20"/></literal></expr>;<pos:position pos:line="69" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="70" pos:column="8"/></block></then></if></elseif>
      <elseif pos:line="71" pos:column="7">else <if pos:line="71" pos:column="12">if <condition pos:line="71" pos:column="15">(<expr><call><name pos:line="71" pos:column="16">ascii_strcasecmp<pos:position pos:line="71" pos:column="32"/></name> <argument_list pos:line="71" pos:column="33">(<argument><expr><name pos:line="71" pos:column="34">line<pos:position pos:line="71" pos:column="38"/></name><operator pos:line="71" pos:column="38">+<pos:position pos:line="71" pos:column="39"/></operator><literal type="number" pos:line="71" pos:column="39">8<pos:position pos:line="71" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="42">"disposition"<pos:position pos:line="71" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="56"/></argument_list></call> <operator pos:line="71" pos:column="57">==<pos:position pos:line="71" pos:column="59"/></operator> <literal type="number" pos:line="71" pos:column="60">0<pos:position pos:line="71" pos:column="61"/></literal></expr>)<pos:position pos:line="71" pos:column="62"/></condition><then pos:line="71" pos:column="62">
      <block pos:line="72" pos:column="7">{
	<if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name pos:line="73" pos:column="13">hdr<pos:position pos:line="73" pos:column="16"/></name></expr>)<pos:position pos:line="73" pos:column="17"/></condition><then pos:line="73" pos:column="17">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="11">parse_content_disposition<pos:position pos:line="74" pos:column="36"/></name> <argument_list pos:line="74" pos:column="37">(<argument><expr><name pos:line="74" pos:column="38">p<pos:position pos:line="74" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="41">hdr<pos:position pos:line="74" pos:column="44"/></name><operator pos:line="74" pos:column="44">-&gt;<pos:position pos:line="74" pos:column="49"/></operator><name pos:line="74" pos:column="46">content<pos:position pos:line="74" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="55"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="75" pos:column="9">matched<pos:position pos:line="75" pos:column="16"/></name> <operator pos:line="75" pos:column="17">=<pos:position pos:line="75" pos:column="18"/></operator> <literal type="number" pos:line="75" pos:column="19">1<pos:position pos:line="75" pos:column="20"/></literal></expr>;<pos:position pos:line="75" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="76" pos:column="8"/></block></then></if></elseif></if>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if></elseif></if>
    <break pos:line="78" pos:column="5">break;<pos:position pos:line="78" pos:column="11"/></break>
    
    <case pos:line="80" pos:column="5">case <expr><literal type="char" pos:line="80" pos:column="10">'d'<pos:position pos:line="80" pos:column="13"/></literal></expr>:<pos:position pos:line="80" pos:column="14"/></case>
    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><operator pos:line="81" pos:column="9">!<pos:position pos:line="81" pos:column="10"/></operator><call><name pos:line="81" pos:column="10">ascii_strcasecmp<pos:position pos:line="81" pos:column="26"/></name> <argument_list pos:line="81" pos:column="27">(<argument><expr><literal type="string" pos:line="81" pos:column="28">"ate"<pos:position pos:line="81" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="35">line<pos:position pos:line="81" pos:column="39"/></name> <operator pos:line="81" pos:column="40">+<pos:position pos:line="81" pos:column="41"/></operator> <literal type="number" pos:line="81" pos:column="42">1<pos:position pos:line="81" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="45"/></condition><then pos:line="81" pos:column="45">
    <block pos:line="82" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="83" pos:column="7">mutt_str_replace<pos:position pos:line="83" pos:column="23"/></name> <argument_list pos:line="83" pos:column="24">(<argument><expr><operator pos:line="83" pos:column="25">&amp;<pos:position pos:line="83" pos:column="30"/></operator><name><name pos:line="83" pos:column="26">e<pos:position pos:line="83" pos:column="27"/></name><operator pos:line="83" pos:column="27">-&gt;<pos:position pos:line="83" pos:column="32"/></operator><name pos:line="83" pos:column="29">date<pos:position pos:line="83" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="35">p<pos:position pos:line="83" pos:column="36"/></name></expr></argument>)<pos:position pos:line="83" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="38"/></expr_stmt>
      <if pos:line="84" pos:column="7">if <condition pos:line="84" pos:column="10">(<expr><name pos:line="84" pos:column="11">hdr<pos:position pos:line="84" pos:column="14"/></name></expr>)<pos:position pos:line="84" pos:column="15"/></condition><then pos:line="84" pos:column="15">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="85" pos:column="9">hdr<pos:position pos:line="85" pos:column="12"/></name><operator pos:line="85" pos:column="12">-&gt;<pos:position pos:line="85" pos:column="17"/></operator><name pos:line="85" pos:column="14">date_sent<pos:position pos:line="85" pos:column="23"/></name></name> <operator pos:line="85" pos:column="24">=<pos:position pos:line="85" pos:column="25"/></operator> <call><name pos:line="85" pos:column="26">mutt_parse_date<pos:position pos:line="85" pos:column="41"/></name> <argument_list pos:line="85" pos:column="42">(<argument><expr><name pos:line="85" pos:column="43">p<pos:position pos:line="85" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="46">hdr<pos:position pos:line="85" pos:column="49"/></name></expr></argument>)<pos:position pos:line="85" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="51"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="86" pos:column="7">matched<pos:position pos:line="86" pos:column="14"/></name> <operator pos:line="86" pos:column="15">=<pos:position pos:line="86" pos:column="16"/></operator> <literal type="number" pos:line="86" pos:column="17">1<pos:position pos:line="86" pos:column="18"/></literal></expr>;<pos:position pos:line="86" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="87" pos:column="6"/></block></then></if>
    <break pos:line="88" pos:column="5">break;<pos:position pos:line="88" pos:column="11"/></break>
    
    <case pos:line="90" pos:column="5">case <expr><literal type="char" pos:line="90" pos:column="10">'e'<pos:position pos:line="90" pos:column="13"/></literal></expr>:<pos:position pos:line="90" pos:column="14"/></case>
    <if pos:line="91" pos:column="5">if <condition pos:line="91" pos:column="8">(<expr><operator pos:line="91" pos:column="9">!<pos:position pos:line="91" pos:column="10"/></operator><call><name pos:line="91" pos:column="10">ascii_strcasecmp<pos:position pos:line="91" pos:column="26"/></name> <argument_list pos:line="91" pos:column="27">(<argument><expr><literal type="string" pos:line="91" pos:column="28">"xpires"<pos:position pos:line="91" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="91" pos:column="38">line<pos:position pos:line="91" pos:column="42"/></name> <operator pos:line="91" pos:column="43">+<pos:position pos:line="91" pos:column="44"/></operator> <literal type="number" pos:line="91" pos:column="45">1<pos:position pos:line="91" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="47"/></argument_list></call> <operator pos:line="91" pos:column="48">&amp;&amp;<pos:position pos:line="91" pos:column="58"/></operator>
	<name pos:line="92" pos:column="9">hdr<pos:position pos:line="92" pos:column="12"/></name> <operator pos:line="92" pos:column="13">&amp;&amp;<pos:position pos:line="92" pos:column="23"/></operator> <call><name pos:line="92" pos:column="16">mutt_parse_date<pos:position pos:line="92" pos:column="31"/></name> <argument_list pos:line="92" pos:column="32">(<argument><expr><name pos:line="92" pos:column="33">p<pos:position pos:line="92" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="36">NULL<pos:position pos:line="92" pos:column="40"/></name></expr></argument>)<pos:position pos:line="92" pos:column="41"/></argument_list></call> <operator pos:line="92" pos:column="42">&lt;<pos:position pos:line="92" pos:column="46"/></operator> <call><name pos:line="92" pos:column="44">time<pos:position pos:line="92" pos:column="48"/></name> <argument_list pos:line="92" pos:column="49">(<argument><expr><name pos:line="92" pos:column="50">NULL<pos:position pos:line="92" pos:column="54"/></name></expr></argument>)<pos:position pos:line="92" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="92" pos:column="56"/></condition><then pos:line="92" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="93" pos:column="7">hdr<pos:position pos:line="93" pos:column="10"/></name><operator pos:line="93" pos:column="10">-&gt;<pos:position pos:line="93" pos:column="15"/></operator><name pos:line="93" pos:column="12">expired<pos:position pos:line="93" pos:column="19"/></name></name> <operator pos:line="93" pos:column="20">=<pos:position pos:line="93" pos:column="21"/></operator> <literal type="number" pos:line="93" pos:column="22">1<pos:position pos:line="93" pos:column="23"/></literal></expr>;<pos:position pos:line="93" pos:column="24"/></expr_stmt></block></then></if>
    <break pos:line="94" pos:column="5">break;<pos:position pos:line="94" pos:column="11"/></break>
    
    <case pos:line="96" pos:column="5">case <expr><literal type="char" pos:line="96" pos:column="10">'f'<pos:position pos:line="96" pos:column="13"/></literal></expr>:<pos:position pos:line="96" pos:column="14"/></case>
    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><operator pos:line="97" pos:column="9">!<pos:position pos:line="97" pos:column="10"/></operator><call><name pos:line="97" pos:column="10">ascii_strcasecmp<pos:position pos:line="97" pos:column="26"/></name> <argument_list pos:line="97" pos:column="27">(<argument><expr><literal type="string" pos:line="97" pos:column="28">"rom"<pos:position pos:line="97" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="97" pos:column="35">line<pos:position pos:line="97" pos:column="39"/></name> <operator pos:line="97" pos:column="40">+<pos:position pos:line="97" pos:column="41"/></operator> <literal type="number" pos:line="97" pos:column="42">1<pos:position pos:line="97" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="97" pos:column="45"/></condition><then pos:line="97" pos:column="45">
    <block pos:line="98" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="99" pos:column="7">e<pos:position pos:line="99" pos:column="8"/></name><operator pos:line="99" pos:column="8">-&gt;<pos:position pos:line="99" pos:column="13"/></operator><name pos:line="99" pos:column="10">from<pos:position pos:line="99" pos:column="14"/></name></name> <operator pos:line="99" pos:column="15">=<pos:position pos:line="99" pos:column="16"/></operator> <call><name pos:line="99" pos:column="17">rfc822_parse_adrlist<pos:position pos:line="99" pos:column="37"/></name> <argument_list pos:line="99" pos:column="38">(<argument><expr><name><name pos:line="99" pos:column="39">e<pos:position pos:line="99" pos:column="40"/></name><operator pos:line="99" pos:column="40">-&gt;<pos:position pos:line="99" pos:column="45"/></operator><name pos:line="99" pos:column="42">from<pos:position pos:line="99" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="48">p<pos:position pos:line="99" pos:column="49"/></name></expr></argument>)<pos:position pos:line="99" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name pos:line="100" pos:column="7">matched<pos:position pos:line="100" pos:column="14"/></name> <operator pos:line="100" pos:column="15">=<pos:position pos:line="100" pos:column="16"/></operator> <literal type="number" pos:line="100" pos:column="17">1<pos:position pos:line="100" pos:column="18"/></literal></expr>;<pos:position pos:line="100" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="101" pos:column="6"/></block></then></if>
    <break pos:line="102" pos:column="5">break;<pos:position pos:line="102" pos:column="11"/></break>
    
    <case pos:line="104" pos:column="5">case <expr><literal type="char" pos:line="104" pos:column="10">'i'<pos:position pos:line="104" pos:column="13"/></literal></expr>:<pos:position pos:line="104" pos:column="14"/></case>
    <if pos:line="105" pos:column="5">if <condition pos:line="105" pos:column="8">(<expr><operator pos:line="105" pos:column="9">!<pos:position pos:line="105" pos:column="10"/></operator><call><name pos:line="105" pos:column="10">ascii_strcasecmp<pos:position pos:line="105" pos:column="26"/></name> <argument_list pos:line="105" pos:column="27">(<argument><expr><name pos:line="105" pos:column="28">line<pos:position pos:line="105" pos:column="32"/></name><operator pos:line="105" pos:column="32">+<pos:position pos:line="105" pos:column="33"/></operator><literal type="number" pos:line="105" pos:column="33">1<pos:position pos:line="105" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="36">"n-reply-to"<pos:position pos:line="105" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="105" pos:column="50"/></condition><then pos:line="105" pos:column="50">
    <block pos:line="106" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="107" pos:column="7">mutt_free_list<pos:position pos:line="107" pos:column="21"/></name> <argument_list pos:line="107" pos:column="22">(<argument><expr><operator pos:line="107" pos:column="23">&amp;<pos:position pos:line="107" pos:column="28"/></operator><name><name pos:line="107" pos:column="24">e<pos:position pos:line="107" pos:column="25"/></name><operator pos:line="107" pos:column="25">-&gt;<pos:position pos:line="107" pos:column="30"/></operator><name pos:line="107" pos:column="27">in_reply_to<pos:position pos:line="107" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="108" pos:column="7">e<pos:position pos:line="108" pos:column="8"/></name><operator pos:line="108" pos:column="8">-&gt;<pos:position pos:line="108" pos:column="13"/></operator><name pos:line="108" pos:column="10">in_reply_to<pos:position pos:line="108" pos:column="21"/></name></name> <operator pos:line="108" pos:column="22">=<pos:position pos:line="108" pos:column="23"/></operator> <call><name pos:line="108" pos:column="24">mutt_parse_references<pos:position pos:line="108" pos:column="45"/></name> <argument_list pos:line="108" pos:column="46">(<argument><expr><name pos:line="108" pos:column="47">p<pos:position pos:line="108" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="108" pos:column="50">1<pos:position pos:line="108" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><name pos:line="109" pos:column="7">matched<pos:position pos:line="109" pos:column="14"/></name> <operator pos:line="109" pos:column="15">=<pos:position pos:line="109" pos:column="16"/></operator> <literal type="number" pos:line="109" pos:column="17">1<pos:position pos:line="109" pos:column="18"/></literal></expr>;<pos:position pos:line="109" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="110" pos:column="6"/></block></then></if>
    <break pos:line="111" pos:column="5">break;<pos:position pos:line="111" pos:column="11"/></break>
    
    <case pos:line="113" pos:column="5">case <expr><literal type="char" pos:line="113" pos:column="10">'l'<pos:position pos:line="113" pos:column="13"/></literal></expr>:<pos:position pos:line="113" pos:column="14"/></case>
    <if pos:line="114" pos:column="5">if <condition pos:line="114" pos:column="8">(<expr><operator pos:line="114" pos:column="9">!<pos:position pos:line="114" pos:column="10"/></operator><call><name pos:line="114" pos:column="10">ascii_strcasecmp<pos:position pos:line="114" pos:column="26"/></name> <argument_list pos:line="114" pos:column="27">(<argument><expr><name pos:line="114" pos:column="28">line<pos:position pos:line="114" pos:column="32"/></name> <operator pos:line="114" pos:column="33">+<pos:position pos:line="114" pos:column="34"/></operator> <literal type="number" pos:line="114" pos:column="35">1<pos:position pos:line="114" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="38">"ines"<pos:position pos:line="114" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="114" pos:column="46"/></condition><then pos:line="114" pos:column="46">
    <block pos:line="115" pos:column="5">{
      <if pos:line="116" pos:column="7">if <condition pos:line="116" pos:column="10">(<expr><name pos:line="116" pos:column="11">hdr<pos:position pos:line="116" pos:column="14"/></name></expr>)<pos:position pos:line="116" pos:column="15"/></condition><then pos:line="116" pos:column="15">
      <block pos:line="117" pos:column="7">{
	<comment type="block" pos:line="118" pos:column="9">/* 
	 * HACK - mutt has, for a very short time, produced negative
	 * Lines header values.  Ignore them. 
	 */</comment>
	<if pos:line="122" pos:column="9">if <condition pos:line="122" pos:column="12">(<expr><call><name pos:line="122" pos:column="13">mutt_atoi<pos:position pos:line="122" pos:column="22"/></name> <argument_list pos:line="122" pos:column="23">(<argument><expr><name pos:line="122" pos:column="24">p<pos:position pos:line="122" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="122" pos:column="27">&amp;<pos:position pos:line="122" pos:column="32"/></operator><name><name pos:line="122" pos:column="28">hdr<pos:position pos:line="122" pos:column="31"/></name><operator pos:line="122" pos:column="31">-&gt;<pos:position pos:line="122" pos:column="36"/></operator><name pos:line="122" pos:column="33">lines<pos:position pos:line="122" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="122" pos:column="39"/></argument_list></call> <operator pos:line="122" pos:column="40">&lt;<pos:position pos:line="122" pos:column="44"/></operator> <literal type="number" pos:line="122" pos:column="42">0<pos:position pos:line="122" pos:column="43"/></literal> <operator pos:line="122" pos:column="44">||<pos:position pos:line="122" pos:column="46"/></operator> <name><name pos:line="122" pos:column="47">hdr<pos:position pos:line="122" pos:column="50"/></name><operator pos:line="122" pos:column="50">-&gt;<pos:position pos:line="122" pos:column="55"/></operator><name pos:line="122" pos:column="52">lines<pos:position pos:line="122" pos:column="57"/></name></name> <operator pos:line="122" pos:column="58">&lt;<pos:position pos:line="122" pos:column="62"/></operator> <literal type="number" pos:line="122" pos:column="60">0<pos:position pos:line="122" pos:column="61"/></literal></expr>)<pos:position pos:line="122" pos:column="62"/></condition><then pos:line="122" pos:column="62">
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="123" pos:column="11">hdr<pos:position pos:line="123" pos:column="14"/></name><operator pos:line="123" pos:column="14">-&gt;<pos:position pos:line="123" pos:column="19"/></operator><name pos:line="123" pos:column="16">lines<pos:position pos:line="123" pos:column="21"/></name></name> <operator pos:line="123" pos:column="22">=<pos:position pos:line="123" pos:column="23"/></operator> <literal type="number" pos:line="123" pos:column="24">0<pos:position pos:line="123" pos:column="25"/></literal></expr>;<pos:position pos:line="123" pos:column="26"/></expr_stmt></block></then></if>
      }<pos:position pos:line="124" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="126" pos:column="7">matched<pos:position pos:line="126" pos:column="14"/></name> <operator pos:line="126" pos:column="15">=<pos:position pos:line="126" pos:column="16"/></operator> <literal type="number" pos:line="126" pos:column="17">1<pos:position pos:line="126" pos:column="18"/></literal></expr>;<pos:position pos:line="126" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="127" pos:column="6"/></block></then>
    <elseif pos:line="128" pos:column="5">else <if pos:line="128" pos:column="10">if <condition pos:line="128" pos:column="13">(<expr><operator pos:line="128" pos:column="14">!<pos:position pos:line="128" pos:column="15"/></operator><call><name pos:line="128" pos:column="15">ascii_strcasecmp<pos:position pos:line="128" pos:column="31"/></name> <argument_list pos:line="128" pos:column="32">(<argument><expr><name pos:line="128" pos:column="33">line<pos:position pos:line="128" pos:column="37"/></name> <operator pos:line="128" pos:column="38">+<pos:position pos:line="128" pos:column="39"/></operator> <literal type="number" pos:line="128" pos:column="40">1<pos:position pos:line="128" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="128" pos:column="43">"ist-Post"<pos:position pos:line="128" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="128" pos:column="55"/></condition><then pos:line="128" pos:column="55">
    <block pos:line="129" pos:column="5">{
      <comment type="block" pos:line="130" pos:column="7">/* RFC 2369.  FIXME: We should ignore whitespace, but don't. */</comment>
      <if pos:line="131" pos:column="7">if <condition pos:line="131" pos:column="10">(<expr><call><name pos:line="131" pos:column="11">strncmp<pos:position pos:line="131" pos:column="18"/></name> <argument_list pos:line="131" pos:column="19">(<argument><expr><name pos:line="131" pos:column="20">p<pos:position pos:line="131" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="23">"NO"<pos:position pos:line="131" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="131" pos:column="29">2<pos:position pos:line="131" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="131" pos:column="32"/></condition><then pos:line="131" pos:column="32">
      <block pos:line="132" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="133" pos:column="9">char<pos:position pos:line="133" pos:column="13"/></name> <modifier pos:line="133" pos:column="14">*<pos:position pos:line="133" pos:column="15"/></modifier></type><name pos:line="133" pos:column="15">beg<pos:position pos:line="133" pos:column="18"/></name></decl>, <modifier pos:line="133" pos:column="20">*<pos:position pos:line="133" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="133" pos:column="21">end<pos:position pos:line="133" pos:column="24"/></name></decl>;<pos:position pos:line="133" pos:column="25"/></decl_stmt>
	<for pos:line="134" pos:column="9">for <control pos:line="134" pos:column="13">(<init><expr><name pos:line="134" pos:column="14">beg<pos:position pos:line="134" pos:column="17"/></name> <operator pos:line="134" pos:column="18">=<pos:position pos:line="134" pos:column="19"/></operator> <call><name pos:line="134" pos:column="20">strchr<pos:position pos:line="134" pos:column="26"/></name> <argument_list pos:line="134" pos:column="27">(<argument><expr><name pos:line="134" pos:column="28">p<pos:position pos:line="134" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="134" pos:column="31">'&lt;'<pos:position pos:line="134" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="36"/></init> <condition><expr><name pos:line="134" pos:column="37">beg<pos:position pos:line="134" pos:column="40"/></name></expr>;<pos:position pos:line="134" pos:column="41"/></condition> <incr><expr><name pos:line="134" pos:column="42">beg<pos:position pos:line="134" pos:column="45"/></name> <operator pos:line="134" pos:column="46">=<pos:position pos:line="134" pos:column="47"/></operator> <call><name pos:line="134" pos:column="48">strchr<pos:position pos:line="134" pos:column="54"/></name> <argument_list pos:line="134" pos:column="55">(<argument><expr><name pos:line="134" pos:column="56">end<pos:position pos:line="134" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="134" pos:column="61">','<pos:position pos:line="134" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="65"/></argument_list></call></expr></incr>)<pos:position pos:line="134" pos:column="66"/></control>
	<block pos:line="135" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="136" pos:column="11">++<pos:position pos:line="136" pos:column="13"/></operator><name pos:line="136" pos:column="13">beg<pos:position pos:line="136" pos:column="16"/></name></expr>;<pos:position pos:line="136" pos:column="17"/></expr_stmt>
	  <if pos:line="137" pos:column="11">if <condition pos:line="137" pos:column="14">(<expr><operator pos:line="137" pos:column="15">!<pos:position pos:line="137" pos:column="16"/></operator><operator pos:line="137" pos:column="16">(<pos:position pos:line="137" pos:column="17"/></operator><name pos:line="137" pos:column="17">end<pos:position pos:line="137" pos:column="20"/></name> <operator pos:line="137" pos:column="21">=<pos:position pos:line="137" pos:column="22"/></operator> <call><name pos:line="137" pos:column="23">strchr<pos:position pos:line="137" pos:column="29"/></name> <argument_list pos:line="137" pos:column="30">(<argument><expr><name pos:line="137" pos:column="31">beg<pos:position pos:line="137" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="137" pos:column="36">'&gt;'<pos:position pos:line="137" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="40"/></argument_list></call><operator pos:line="137" pos:column="40">)<pos:position pos:line="137" pos:column="41"/></operator></expr>)<pos:position pos:line="137" pos:column="42"/></condition><then pos:line="137" pos:column="42">
	    <block type="pseudo"><break pos:line="138" pos:column="13">break;<pos:position pos:line="138" pos:column="19"/></break></block></then></if>
	  
	  <comment type="block" pos:line="140" pos:column="11">/* Take the first mailto URL */</comment>
	  <if pos:line="141" pos:column="11">if <condition pos:line="141" pos:column="14">(<expr><call><name pos:line="141" pos:column="15">url_check_scheme<pos:position pos:line="141" pos:column="31"/></name> <argument_list pos:line="141" pos:column="32">(<argument><expr><name pos:line="141" pos:column="33">beg<pos:position pos:line="141" pos:column="36"/></name></expr></argument>)<pos:position pos:line="141" pos:column="37"/></argument_list></call> <operator pos:line="141" pos:column="38">==<pos:position pos:line="141" pos:column="40"/></operator> <name pos:line="141" pos:column="41">U_MAILTO<pos:position pos:line="141" pos:column="49"/></name></expr>)<pos:position pos:line="141" pos:column="50"/></condition><then pos:line="141" pos:column="50">
	  <block pos:line="142" pos:column="11">{
	    <expr_stmt><expr><call><name pos:line="143" pos:column="13">FREE<pos:position pos:line="143" pos:column="17"/></name> <argument_list pos:line="143" pos:column="18">(<argument><expr><operator pos:line="143" pos:column="19">&amp;<pos:position pos:line="143" pos:column="24"/></operator><name><name pos:line="143" pos:column="20">e<pos:position pos:line="143" pos:column="21"/></name><operator pos:line="143" pos:column="21">-&gt;<pos:position pos:line="143" pos:column="26"/></operator><name pos:line="143" pos:column="23">list_post<pos:position pos:line="143" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="143" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="34"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="144" pos:column="13">e<pos:position pos:line="144" pos:column="14"/></name><operator pos:line="144" pos:column="14">-&gt;<pos:position pos:line="144" pos:column="19"/></operator><name pos:line="144" pos:column="16">list_post<pos:position pos:line="144" pos:column="25"/></name></name> <operator pos:line="144" pos:column="26">=<pos:position pos:line="144" pos:column="27"/></operator> <call><name pos:line="144" pos:column="28">mutt_substrdup<pos:position pos:line="144" pos:column="42"/></name> <argument_list pos:line="144" pos:column="43">(<argument><expr><name pos:line="144" pos:column="44">beg<pos:position pos:line="144" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="49">end<pos:position pos:line="144" pos:column="52"/></name></expr></argument>)<pos:position pos:line="144" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="54"/></expr_stmt>
	    <break pos:line="145" pos:column="13">break;<pos:position pos:line="145" pos:column="19"/></break>
	  }<pos:position pos:line="146" pos:column="12"/></block></then></if>
	}<pos:position pos:line="147" pos:column="10"/></block></for>
      }<pos:position pos:line="148" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="149" pos:column="7">matched<pos:position pos:line="149" pos:column="14"/></name> <operator pos:line="149" pos:column="15">=<pos:position pos:line="149" pos:column="16"/></operator> <literal type="number" pos:line="149" pos:column="17">1<pos:position pos:line="149" pos:column="18"/></literal></expr>;<pos:position pos:line="149" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="150" pos:column="6"/></block></then></if></elseif></if>
    <break pos:line="151" pos:column="5">break;<pos:position pos:line="151" pos:column="11"/></break>
    
    <case pos:line="153" pos:column="5">case <expr><literal type="char" pos:line="153" pos:column="10">'m'<pos:position pos:line="153" pos:column="13"/></literal></expr>:<pos:position pos:line="153" pos:column="14"/></case>
    <if pos:line="154" pos:column="5">if <condition pos:line="154" pos:column="8">(<expr><operator pos:line="154" pos:column="9">!<pos:position pos:line="154" pos:column="10"/></operator><call><name pos:line="154" pos:column="10">ascii_strcasecmp<pos:position pos:line="154" pos:column="26"/></name> <argument_list pos:line="154" pos:column="27">(<argument><expr><name pos:line="154" pos:column="28">line<pos:position pos:line="154" pos:column="32"/></name> <operator pos:line="154" pos:column="33">+<pos:position pos:line="154" pos:column="34"/></operator> <literal type="number" pos:line="154" pos:column="35">1<pos:position pos:line="154" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="154" pos:column="38">"ime-version"<pos:position pos:line="154" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="154" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="154" pos:column="53"/></condition><then pos:line="154" pos:column="53">
    <block pos:line="155" pos:column="5">{
      <if pos:line="156" pos:column="7">if <condition pos:line="156" pos:column="10">(<expr><name pos:line="156" pos:column="11">hdr<pos:position pos:line="156" pos:column="14"/></name></expr>)<pos:position pos:line="156" pos:column="15"/></condition><then pos:line="156" pos:column="15">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="157" pos:column="9">hdr<pos:position pos:line="157" pos:column="12"/></name><operator pos:line="157" pos:column="12">-&gt;<pos:position pos:line="157" pos:column="17"/></operator><name pos:line="157" pos:column="14">mime<pos:position pos:line="157" pos:column="18"/></name></name> <operator pos:line="157" pos:column="19">=<pos:position pos:line="157" pos:column="20"/></operator> <literal type="number" pos:line="157" pos:column="21">1<pos:position pos:line="157" pos:column="22"/></literal></expr>;<pos:position pos:line="157" pos:column="23"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="158" pos:column="7">matched<pos:position pos:line="158" pos:column="14"/></name> <operator pos:line="158" pos:column="15">=<pos:position pos:line="158" pos:column="16"/></operator> <literal type="number" pos:line="158" pos:column="17">1<pos:position pos:line="158" pos:column="18"/></literal></expr>;<pos:position pos:line="158" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="159" pos:column="6"/></block></then>
    <elseif pos:line="160" pos:column="5">else <if pos:line="160" pos:column="10">if <condition pos:line="160" pos:column="13">(<expr><operator pos:line="160" pos:column="14">!<pos:position pos:line="160" pos:column="15"/></operator><call><name pos:line="160" pos:column="15">ascii_strcasecmp<pos:position pos:line="160" pos:column="31"/></name> <argument_list pos:line="160" pos:column="32">(<argument><expr><name pos:line="160" pos:column="33">line<pos:position pos:line="160" pos:column="37"/></name> <operator pos:line="160" pos:column="38">+<pos:position pos:line="160" pos:column="39"/></operator> <literal type="number" pos:line="160" pos:column="40">1<pos:position pos:line="160" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="160" pos:column="43">"essage-id"<pos:position pos:line="160" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="160" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="160" pos:column="56"/></condition><then pos:line="160" pos:column="56">
    <block pos:line="161" pos:column="5">{
      <comment type="block" pos:line="162" pos:column="7">/* We add a new "Message-ID:" when building a message */</comment>
      <expr_stmt><expr><call><name pos:line="163" pos:column="7">FREE<pos:position pos:line="163" pos:column="11"/></name> <argument_list pos:line="163" pos:column="12">(<argument><expr><operator pos:line="163" pos:column="13">&amp;<pos:position pos:line="163" pos:column="18"/></operator><name><name pos:line="163" pos:column="14">e<pos:position pos:line="163" pos:column="15"/></name><operator pos:line="163" pos:column="15">-&gt;<pos:position pos:line="163" pos:column="20"/></operator><name pos:line="163" pos:column="17">message_id<pos:position pos:line="163" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="163" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="164" pos:column="7">e<pos:position pos:line="164" pos:column="8"/></name><operator pos:line="164" pos:column="8">-&gt;<pos:position pos:line="164" pos:column="13"/></operator><name pos:line="164" pos:column="10">message_id<pos:position pos:line="164" pos:column="20"/></name></name> <operator pos:line="164" pos:column="21">=<pos:position pos:line="164" pos:column="22"/></operator> <call><name pos:line="164" pos:column="23">mutt_extract_message_id<pos:position pos:line="164" pos:column="46"/></name> <argument_list pos:line="164" pos:column="47">(<argument><expr><name pos:line="164" pos:column="48">p<pos:position pos:line="164" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="51">NULL<pos:position pos:line="164" pos:column="55"/></name></expr></argument>)<pos:position pos:line="164" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="57"/></expr_stmt>
      <expr_stmt><expr><name pos:line="165" pos:column="7">matched<pos:position pos:line="165" pos:column="14"/></name> <operator pos:line="165" pos:column="15">=<pos:position pos:line="165" pos:column="16"/></operator> <literal type="number" pos:line="165" pos:column="17">1<pos:position pos:line="165" pos:column="18"/></literal></expr>;<pos:position pos:line="165" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="166" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="167" pos:column="5">else <if pos:line="167" pos:column="10">if <condition pos:line="167" pos:column="13">(<expr><operator pos:line="167" pos:column="14">!<pos:position pos:line="167" pos:column="15"/></operator><call><name pos:line="167" pos:column="15">ascii_strncasecmp<pos:position pos:line="167" pos:column="32"/></name> <argument_list pos:line="167" pos:column="33">(<argument><expr><name pos:line="167" pos:column="34">line<pos:position pos:line="167" pos:column="38"/></name> <operator pos:line="167" pos:column="39">+<pos:position pos:line="167" pos:column="40"/></operator> <literal type="number" pos:line="167" pos:column="41">1<pos:position pos:line="167" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="167" pos:column="44">"ail-"<pos:position pos:line="167" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="167" pos:column="52">4<pos:position pos:line="167" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="167" pos:column="55"/></condition><then pos:line="167" pos:column="55">
    <block pos:line="168" pos:column="5">{
      <if pos:line="169" pos:column="7">if <condition pos:line="169" pos:column="10">(<expr><operator pos:line="169" pos:column="11">!<pos:position pos:line="169" pos:column="12"/></operator><call><name pos:line="169" pos:column="12">ascii_strcasecmp<pos:position pos:line="169" pos:column="28"/></name> <argument_list pos:line="169" pos:column="29">(<argument><expr><name pos:line="169" pos:column="30">line<pos:position pos:line="169" pos:column="34"/></name> <operator pos:line="169" pos:column="35">+<pos:position pos:line="169" pos:column="36"/></operator> <literal type="number" pos:line="169" pos:column="37">5<pos:position pos:line="169" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="169" pos:column="40">"reply-to"<pos:position pos:line="169" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="169" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="169" pos:column="52"/></condition><then pos:line="169" pos:column="52">
      <block pos:line="170" pos:column="7">{
	<comment type="block" pos:line="171" pos:column="9">/* override the Reply-To: field */</comment>
	<expr_stmt><expr><call><name pos:line="172" pos:column="9">rfc822_free_address<pos:position pos:line="172" pos:column="28"/></name> <argument_list pos:line="172" pos:column="29">(<argument><expr><operator pos:line="172" pos:column="30">&amp;<pos:position pos:line="172" pos:column="35"/></operator><name><name pos:line="172" pos:column="31">e<pos:position pos:line="172" pos:column="32"/></name><operator pos:line="172" pos:column="32">-&gt;<pos:position pos:line="172" pos:column="37"/></operator><name pos:line="172" pos:column="34">reply_to<pos:position pos:line="172" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="172" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="173" pos:column="9">e<pos:position pos:line="173" pos:column="10"/></name><operator pos:line="173" pos:column="10">-&gt;<pos:position pos:line="173" pos:column="15"/></operator><name pos:line="173" pos:column="12">reply_to<pos:position pos:line="173" pos:column="20"/></name></name> <operator pos:line="173" pos:column="21">=<pos:position pos:line="173" pos:column="22"/></operator> <call><name pos:line="173" pos:column="23">rfc822_parse_adrlist<pos:position pos:line="173" pos:column="43"/></name> <argument_list pos:line="173" pos:column="44">(<argument><expr><name><name pos:line="173" pos:column="45">e<pos:position pos:line="173" pos:column="46"/></name><operator pos:line="173" pos:column="46">-&gt;<pos:position pos:line="173" pos:column="51"/></operator><name pos:line="173" pos:column="48">reply_to<pos:position pos:line="173" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="58">p<pos:position pos:line="173" pos:column="59"/></name></expr></argument>)<pos:position pos:line="173" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="61"/></expr_stmt>
	<expr_stmt><expr><name pos:line="174" pos:column="9">matched<pos:position pos:line="174" pos:column="16"/></name> <operator pos:line="174" pos:column="17">=<pos:position pos:line="174" pos:column="18"/></operator> <literal type="number" pos:line="174" pos:column="19">1<pos:position pos:line="174" pos:column="20"/></literal></expr>;<pos:position pos:line="174" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="175" pos:column="8"/></block></then>
      <elseif pos:line="176" pos:column="7">else <if pos:line="176" pos:column="12">if <condition pos:line="176" pos:column="15">(<expr><operator pos:line="176" pos:column="16">!<pos:position pos:line="176" pos:column="17"/></operator><call><name pos:line="176" pos:column="17">ascii_strcasecmp<pos:position pos:line="176" pos:column="33"/></name> <argument_list pos:line="176" pos:column="34">(<argument><expr><name pos:line="176" pos:column="35">line<pos:position pos:line="176" pos:column="39"/></name> <operator pos:line="176" pos:column="40">+<pos:position pos:line="176" pos:column="41"/></operator> <literal type="number" pos:line="176" pos:column="42">5<pos:position pos:line="176" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="176" pos:column="45">"followup-to"<pos:position pos:line="176" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="176" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="176" pos:column="60"/></condition><then pos:line="176" pos:column="60">
      <block pos:line="177" pos:column="7">{
	<expr_stmt><expr><name><name pos:line="178" pos:column="9">e<pos:position pos:line="178" pos:column="10"/></name><operator pos:line="178" pos:column="10">-&gt;<pos:position pos:line="178" pos:column="15"/></operator><name pos:line="178" pos:column="12">mail_followup_to<pos:position pos:line="178" pos:column="28"/></name></name> <operator pos:line="178" pos:column="29">=<pos:position pos:line="178" pos:column="30"/></operator> <call><name pos:line="178" pos:column="31">rfc822_parse_adrlist<pos:position pos:line="178" pos:column="51"/></name> <argument_list pos:line="178" pos:column="52">(<argument><expr><name><name pos:line="178" pos:column="53">e<pos:position pos:line="178" pos:column="54"/></name><operator pos:line="178" pos:column="54">-&gt;<pos:position pos:line="178" pos:column="59"/></operator><name pos:line="178" pos:column="56">mail_followup_to<pos:position pos:line="178" pos:column="72"/></name></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="74">p<pos:position pos:line="178" pos:column="75"/></name></expr></argument>)<pos:position pos:line="178" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="77"/></expr_stmt>
	<expr_stmt><expr><name pos:line="179" pos:column="9">matched<pos:position pos:line="179" pos:column="16"/></name> <operator pos:line="179" pos:column="17">=<pos:position pos:line="179" pos:column="18"/></operator> <literal type="number" pos:line="179" pos:column="19">1<pos:position pos:line="179" pos:column="20"/></literal></expr>;<pos:position pos:line="179" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="180" pos:column="8"/></block></then></if></elseif></if>
    }<pos:position pos:line="181" pos:column="6"/></block></then></if></elseif></if>
    <break pos:line="182" pos:column="5">break;<pos:position pos:line="182" pos:column="11"/></break>
    
    <case pos:line="184" pos:column="5">case <expr><literal type="char" pos:line="184" pos:column="10">'r'<pos:position pos:line="184" pos:column="13"/></literal></expr>:<pos:position pos:line="184" pos:column="14"/></case>
    <if pos:line="185" pos:column="5">if <condition pos:line="185" pos:column="8">(<expr><operator pos:line="185" pos:column="9">!<pos:position pos:line="185" pos:column="10"/></operator><call><name pos:line="185" pos:column="10">ascii_strcasecmp<pos:position pos:line="185" pos:column="26"/></name> <argument_list pos:line="185" pos:column="27">(<argument><expr><name pos:line="185" pos:column="28">line<pos:position pos:line="185" pos:column="32"/></name> <operator pos:line="185" pos:column="33">+<pos:position pos:line="185" pos:column="34"/></operator> <literal type="number" pos:line="185" pos:column="35">1<pos:position pos:line="185" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="185" pos:column="38">"eferences"<pos:position pos:line="185" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="185" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="185" pos:column="51"/></condition><then pos:line="185" pos:column="51">
    <block pos:line="186" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="187" pos:column="7">mutt_free_list<pos:position pos:line="187" pos:column="21"/></name> <argument_list pos:line="187" pos:column="22">(<argument><expr><operator pos:line="187" pos:column="23">&amp;<pos:position pos:line="187" pos:column="28"/></operator><name><name pos:line="187" pos:column="24">e<pos:position pos:line="187" pos:column="25"/></name><operator pos:line="187" pos:column="25">-&gt;<pos:position pos:line="187" pos:column="30"/></operator><name pos:line="187" pos:column="27">references<pos:position pos:line="187" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="187" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="188" pos:column="7">e<pos:position pos:line="188" pos:column="8"/></name><operator pos:line="188" pos:column="8">-&gt;<pos:position pos:line="188" pos:column="13"/></operator><name pos:line="188" pos:column="10">references<pos:position pos:line="188" pos:column="20"/></name></name> <operator pos:line="188" pos:column="21">=<pos:position pos:line="188" pos:column="22"/></operator> <call><name pos:line="188" pos:column="23">mutt_parse_references<pos:position pos:line="188" pos:column="44"/></name> <argument_list pos:line="188" pos:column="45">(<argument><expr><name pos:line="188" pos:column="46">p<pos:position pos:line="188" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="188" pos:column="49">0<pos:position pos:line="188" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="188" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><name pos:line="189" pos:column="7">matched<pos:position pos:line="189" pos:column="14"/></name> <operator pos:line="189" pos:column="15">=<pos:position pos:line="189" pos:column="16"/></operator> <literal type="number" pos:line="189" pos:column="17">1<pos:position pos:line="189" pos:column="18"/></literal></expr>;<pos:position pos:line="189" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="190" pos:column="6"/></block></then>
    <elseif pos:line="191" pos:column="5">else <if pos:line="191" pos:column="10">if <condition pos:line="191" pos:column="13">(<expr><operator pos:line="191" pos:column="14">!<pos:position pos:line="191" pos:column="15"/></operator><call><name pos:line="191" pos:column="15">ascii_strcasecmp<pos:position pos:line="191" pos:column="31"/></name> <argument_list pos:line="191" pos:column="32">(<argument><expr><name pos:line="191" pos:column="33">line<pos:position pos:line="191" pos:column="37"/></name> <operator pos:line="191" pos:column="38">+<pos:position pos:line="191" pos:column="39"/></operator> <literal type="number" pos:line="191" pos:column="40">1<pos:position pos:line="191" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="191" pos:column="43">"eply-to"<pos:position pos:line="191" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="191" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="191" pos:column="54"/></condition><then pos:line="191" pos:column="54">
    <block pos:line="192" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="193" pos:column="7">e<pos:position pos:line="193" pos:column="8"/></name><operator pos:line="193" pos:column="8">-&gt;<pos:position pos:line="193" pos:column="13"/></operator><name pos:line="193" pos:column="10">reply_to<pos:position pos:line="193" pos:column="18"/></name></name> <operator pos:line="193" pos:column="19">=<pos:position pos:line="193" pos:column="20"/></operator> <call><name pos:line="193" pos:column="21">rfc822_parse_adrlist<pos:position pos:line="193" pos:column="41"/></name> <argument_list pos:line="193" pos:column="42">(<argument><expr><name><name pos:line="193" pos:column="43">e<pos:position pos:line="193" pos:column="44"/></name><operator pos:line="193" pos:column="44">-&gt;<pos:position pos:line="193" pos:column="49"/></operator><name pos:line="193" pos:column="46">reply_to<pos:position pos:line="193" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="56">p<pos:position pos:line="193" pos:column="57"/></name></expr></argument>)<pos:position pos:line="193" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="59"/></expr_stmt>
      <expr_stmt><expr><name pos:line="194" pos:column="7">matched<pos:position pos:line="194" pos:column="14"/></name> <operator pos:line="194" pos:column="15">=<pos:position pos:line="194" pos:column="16"/></operator> <literal type="number" pos:line="194" pos:column="17">1<pos:position pos:line="194" pos:column="18"/></literal></expr>;<pos:position pos:line="194" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="195" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="196" pos:column="5">else <if pos:line="196" pos:column="10">if <condition pos:line="196" pos:column="13">(<expr><operator pos:line="196" pos:column="14">!<pos:position pos:line="196" pos:column="15"/></operator><call><name pos:line="196" pos:column="15">ascii_strcasecmp<pos:position pos:line="196" pos:column="31"/></name> <argument_list pos:line="196" pos:column="32">(<argument><expr><name pos:line="196" pos:column="33">line<pos:position pos:line="196" pos:column="37"/></name> <operator pos:line="196" pos:column="38">+<pos:position pos:line="196" pos:column="39"/></operator> <literal type="number" pos:line="196" pos:column="40">1<pos:position pos:line="196" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="196" pos:column="43">"eturn-path"<pos:position pos:line="196" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="196" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="196" pos:column="57"/></condition><then pos:line="196" pos:column="57">
    <block pos:line="197" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="198" pos:column="7">e<pos:position pos:line="198" pos:column="8"/></name><operator pos:line="198" pos:column="8">-&gt;<pos:position pos:line="198" pos:column="13"/></operator><name pos:line="198" pos:column="10">return_path<pos:position pos:line="198" pos:column="21"/></name></name> <operator pos:line="198" pos:column="22">=<pos:position pos:line="198" pos:column="23"/></operator> <call><name pos:line="198" pos:column="24">rfc822_parse_adrlist<pos:position pos:line="198" pos:column="44"/></name> <argument_list pos:line="198" pos:column="45">(<argument><expr><name><name pos:line="198" pos:column="46">e<pos:position pos:line="198" pos:column="47"/></name><operator pos:line="198" pos:column="47">-&gt;<pos:position pos:line="198" pos:column="52"/></operator><name pos:line="198" pos:column="49">return_path<pos:position pos:line="198" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="198" pos:column="62">p<pos:position pos:line="198" pos:column="63"/></name></expr></argument>)<pos:position pos:line="198" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="65"/></expr_stmt>
      <expr_stmt><expr><name pos:line="199" pos:column="7">matched<pos:position pos:line="199" pos:column="14"/></name> <operator pos:line="199" pos:column="15">=<pos:position pos:line="199" pos:column="16"/></operator> <literal type="number" pos:line="199" pos:column="17">1<pos:position pos:line="199" pos:column="18"/></literal></expr>;<pos:position pos:line="199" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="200" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="201" pos:column="5">else <if pos:line="201" pos:column="10">if <condition pos:line="201" pos:column="13">(<expr><operator pos:line="201" pos:column="14">!<pos:position pos:line="201" pos:column="15"/></operator><call><name pos:line="201" pos:column="15">ascii_strcasecmp<pos:position pos:line="201" pos:column="31"/></name> <argument_list pos:line="201" pos:column="32">(<argument><expr><name pos:line="201" pos:column="33">line<pos:position pos:line="201" pos:column="37"/></name> <operator pos:line="201" pos:column="38">+<pos:position pos:line="201" pos:column="39"/></operator> <literal type="number" pos:line="201" pos:column="40">1<pos:position pos:line="201" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="201" pos:column="43">"eceived"<pos:position pos:line="201" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="201" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="201" pos:column="54"/></condition><then pos:line="201" pos:column="54">
    <block pos:line="202" pos:column="5">{
      <if pos:line="203" pos:column="7">if <condition pos:line="203" pos:column="10">(<expr><name pos:line="203" pos:column="11">hdr<pos:position pos:line="203" pos:column="14"/></name> <operator pos:line="203" pos:column="15">&amp;&amp;<pos:position pos:line="203" pos:column="25"/></operator> <operator pos:line="203" pos:column="18">!<pos:position pos:line="203" pos:column="19"/></operator><name><name pos:line="203" pos:column="19">hdr<pos:position pos:line="203" pos:column="22"/></name><operator pos:line="203" pos:column="22">-&gt;<pos:position pos:line="203" pos:column="27"/></operator><name pos:line="203" pos:column="24">received<pos:position pos:line="203" pos:column="32"/></name></name></expr>)<pos:position pos:line="203" pos:column="33"/></condition><then pos:line="203" pos:column="33">
      <block pos:line="204" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="205" pos:column="9">char<pos:position pos:line="205" pos:column="13"/></name> <modifier pos:line="205" pos:column="14">*<pos:position pos:line="205" pos:column="15"/></modifier></type><name pos:line="205" pos:column="15">d<pos:position pos:line="205" pos:column="16"/></name> <init pos:line="205" pos:column="17">= <expr><call><name pos:line="205" pos:column="19">strrchr<pos:position pos:line="205" pos:column="26"/></name> <argument_list pos:line="205" pos:column="27">(<argument><expr><name pos:line="205" pos:column="28">p<pos:position pos:line="205" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="205" pos:column="31">';'<pos:position pos:line="205" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="205" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="205" pos:column="36"/></decl_stmt>
	
	<if pos:line="207" pos:column="9">if <condition pos:line="207" pos:column="12">(<expr><name pos:line="207" pos:column="13">d<pos:position pos:line="207" pos:column="14"/></name></expr>)<pos:position pos:line="207" pos:column="15"/></condition><then pos:line="207" pos:column="15">
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="208" pos:column="11">hdr<pos:position pos:line="208" pos:column="14"/></name><operator pos:line="208" pos:column="14">-&gt;<pos:position pos:line="208" pos:column="19"/></operator><name pos:line="208" pos:column="16">received<pos:position pos:line="208" pos:column="24"/></name></name> <operator pos:line="208" pos:column="25">=<pos:position pos:line="208" pos:column="26"/></operator> <call><name pos:line="208" pos:column="27">mutt_parse_date<pos:position pos:line="208" pos:column="42"/></name> <argument_list pos:line="208" pos:column="43">(<argument><expr><name pos:line="208" pos:column="44">d<pos:position pos:line="208" pos:column="45"/></name> <operator pos:line="208" pos:column="46">+<pos:position pos:line="208" pos:column="47"/></operator> <literal type="number" pos:line="208" pos:column="48">1<pos:position pos:line="208" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="208" pos:column="51">NULL<pos:position pos:line="208" pos:column="55"/></name></expr></argument>)<pos:position pos:line="208" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="57"/></expr_stmt></block></then></if>
      }<pos:position pos:line="209" pos:column="8"/></block></then></if>
    }<pos:position pos:line="210" pos:column="6"/></block></then></if></elseif></if>
    <break pos:line="211" pos:column="5">break;<pos:position pos:line="211" pos:column="11"/></break>
    
    <case pos:line="213" pos:column="5">case <expr><literal type="char" pos:line="213" pos:column="10">'s'<pos:position pos:line="213" pos:column="13"/></literal></expr>:<pos:position pos:line="213" pos:column="14"/></case>
    <if pos:line="214" pos:column="5">if <condition pos:line="214" pos:column="8">(<expr><operator pos:line="214" pos:column="9">!<pos:position pos:line="214" pos:column="10"/></operator><call><name pos:line="214" pos:column="10">ascii_strcasecmp<pos:position pos:line="214" pos:column="26"/></name> <argument_list pos:line="214" pos:column="27">(<argument><expr><name pos:line="214" pos:column="28">line<pos:position pos:line="214" pos:column="32"/></name> <operator pos:line="214" pos:column="33">+<pos:position pos:line="214" pos:column="34"/></operator> <literal type="number" pos:line="214" pos:column="35">1<pos:position pos:line="214" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="214" pos:column="38">"ubject"<pos:position pos:line="214" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="214" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="214" pos:column="48"/></condition><then pos:line="214" pos:column="48">
    <block pos:line="215" pos:column="5">{
      <if pos:line="216" pos:column="7">if <condition pos:line="216" pos:column="10">(<expr><operator pos:line="216" pos:column="11">!<pos:position pos:line="216" pos:column="12"/></operator><name><name pos:line="216" pos:column="12">e<pos:position pos:line="216" pos:column="13"/></name><operator pos:line="216" pos:column="13">-&gt;<pos:position pos:line="216" pos:column="18"/></operator><name pos:line="216" pos:column="15">subject<pos:position pos:line="216" pos:column="22"/></name></name></expr>)<pos:position pos:line="216" pos:column="23"/></condition><then pos:line="216" pos:column="23">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="217" pos:column="9">e<pos:position pos:line="217" pos:column="10"/></name><operator pos:line="217" pos:column="10">-&gt;<pos:position pos:line="217" pos:column="15"/></operator><name pos:line="217" pos:column="12">subject<pos:position pos:line="217" pos:column="19"/></name></name> <operator pos:line="217" pos:column="20">=<pos:position pos:line="217" pos:column="21"/></operator> <call><name pos:line="217" pos:column="22">safe_strdup<pos:position pos:line="217" pos:column="33"/></name> <argument_list pos:line="217" pos:column="34">(<argument><expr><name pos:line="217" pos:column="35">p<pos:position pos:line="217" pos:column="36"/></name></expr></argument>)<pos:position pos:line="217" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="38"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="218" pos:column="7">matched<pos:position pos:line="218" pos:column="14"/></name> <operator pos:line="218" pos:column="15">=<pos:position pos:line="218" pos:column="16"/></operator> <literal type="number" pos:line="218" pos:column="17">1<pos:position pos:line="218" pos:column="18"/></literal></expr>;<pos:position pos:line="218" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="219" pos:column="6"/></block></then>
    <elseif pos:line="220" pos:column="5">else <if pos:line="220" pos:column="10">if <condition pos:line="220" pos:column="13">(<expr><operator pos:line="220" pos:column="14">!<pos:position pos:line="220" pos:column="15"/></operator><call><name pos:line="220" pos:column="15">ascii_strcasecmp<pos:position pos:line="220" pos:column="31"/></name> <argument_list pos:line="220" pos:column="32">(<argument><expr><name pos:line="220" pos:column="33">line<pos:position pos:line="220" pos:column="37"/></name> <operator pos:line="220" pos:column="38">+<pos:position pos:line="220" pos:column="39"/></operator> <literal type="number" pos:line="220" pos:column="40">1<pos:position pos:line="220" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="220" pos:column="43">"ender"<pos:position pos:line="220" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="220" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="220" pos:column="52"/></condition><then pos:line="220" pos:column="52">
    <block pos:line="221" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="222" pos:column="7">e<pos:position pos:line="222" pos:column="8"/></name><operator pos:line="222" pos:column="8">-&gt;<pos:position pos:line="222" pos:column="13"/></operator><name pos:line="222" pos:column="10">sender<pos:position pos:line="222" pos:column="16"/></name></name> <operator pos:line="222" pos:column="17">=<pos:position pos:line="222" pos:column="18"/></operator> <call><name pos:line="222" pos:column="19">rfc822_parse_adrlist<pos:position pos:line="222" pos:column="39"/></name> <argument_list pos:line="222" pos:column="40">(<argument><expr><name><name pos:line="222" pos:column="41">e<pos:position pos:line="222" pos:column="42"/></name><operator pos:line="222" pos:column="42">-&gt;<pos:position pos:line="222" pos:column="47"/></operator><name pos:line="222" pos:column="44">sender<pos:position pos:line="222" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="222" pos:column="52">p<pos:position pos:line="222" pos:column="53"/></name></expr></argument>)<pos:position pos:line="222" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name pos:line="223" pos:column="7">matched<pos:position pos:line="223" pos:column="14"/></name> <operator pos:line="223" pos:column="15">=<pos:position pos:line="223" pos:column="16"/></operator> <literal type="number" pos:line="223" pos:column="17">1<pos:position pos:line="223" pos:column="18"/></literal></expr>;<pos:position pos:line="223" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="224" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="225" pos:column="5">else <if pos:line="225" pos:column="10">if <condition pos:line="225" pos:column="13">(<expr><operator pos:line="225" pos:column="14">!<pos:position pos:line="225" pos:column="15"/></operator><call><name pos:line="225" pos:column="15">ascii_strcasecmp<pos:position pos:line="225" pos:column="31"/></name> <argument_list pos:line="225" pos:column="32">(<argument><expr><name pos:line="225" pos:column="33">line<pos:position pos:line="225" pos:column="37"/></name> <operator pos:line="225" pos:column="38">+<pos:position pos:line="225" pos:column="39"/></operator> <literal type="number" pos:line="225" pos:column="40">1<pos:position pos:line="225" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="225" pos:column="43">"tatus"<pos:position pos:line="225" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="225" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="225" pos:column="52"/></condition><then pos:line="225" pos:column="52">
    <block pos:line="226" pos:column="5">{
      <if pos:line="227" pos:column="7">if <condition pos:line="227" pos:column="10">(<expr><name pos:line="227" pos:column="11">hdr<pos:position pos:line="227" pos:column="14"/></name></expr>)<pos:position pos:line="227" pos:column="15"/></condition><then pos:line="227" pos:column="15">
      <block pos:line="228" pos:column="7">{
	<while pos:line="229" pos:column="9">while <condition pos:line="229" pos:column="15">(<expr><operator pos:line="229" pos:column="16">*<pos:position pos:line="229" pos:column="17"/></operator><name pos:line="229" pos:column="17">p<pos:position pos:line="229" pos:column="18"/></name></expr>)<pos:position pos:line="229" pos:column="19"/></condition>
	<block pos:line="230" pos:column="9">{
	  <switch pos:line="231" pos:column="11">switch<condition pos:line="231" pos:column="17">(<expr><operator pos:line="231" pos:column="18">*<pos:position pos:line="231" pos:column="19"/></operator><name pos:line="231" pos:column="19">p<pos:position pos:line="231" pos:column="20"/></name></expr>)<pos:position pos:line="231" pos:column="21"/></condition>
	  <block pos:line="232" pos:column="11">{
	    <case pos:line="233" pos:column="13">case <expr><literal type="char" pos:line="233" pos:column="18">'r'<pos:position pos:line="233" pos:column="21"/></literal></expr>:<pos:position pos:line="233" pos:column="22"/></case>
	    <expr_stmt><expr><name><name pos:line="234" pos:column="13">hdr<pos:position pos:line="234" pos:column="16"/></name><operator pos:line="234" pos:column="16">-&gt;<pos:position pos:line="234" pos:column="21"/></operator><name pos:line="234" pos:column="18">replied<pos:position pos:line="234" pos:column="25"/></name></name> <operator pos:line="234" pos:column="26">=<pos:position pos:line="234" pos:column="27"/></operator> <literal type="number" pos:line="234" pos:column="28">1<pos:position pos:line="234" pos:column="29"/></literal></expr>;<pos:position pos:line="234" pos:column="30"/></expr_stmt>
	    <break pos:line="235" pos:column="13">break;<pos:position pos:line="235" pos:column="19"/></break>
	    <case pos:line="236" pos:column="13">case <expr><literal type="char" pos:line="236" pos:column="18">'O'<pos:position pos:line="236" pos:column="21"/></literal></expr>:<pos:position pos:line="236" pos:column="22"/></case>
	      <expr_stmt><expr><name><name pos:line="237" pos:column="15">hdr<pos:position pos:line="237" pos:column="18"/></name><operator pos:line="237" pos:column="18">-&gt;<pos:position pos:line="237" pos:column="23"/></operator><name pos:line="237" pos:column="20">old<pos:position pos:line="237" pos:column="23"/></name></name> <operator pos:line="237" pos:column="24">=<pos:position pos:line="237" pos:column="25"/></operator> <literal type="number" pos:line="237" pos:column="26">1<pos:position pos:line="237" pos:column="27"/></literal></expr>;<pos:position pos:line="237" pos:column="28"/></expr_stmt>
	    <break pos:line="238" pos:column="13">break;<pos:position pos:line="238" pos:column="19"/></break>
	    <case pos:line="239" pos:column="13">case <expr><literal type="char" pos:line="239" pos:column="18">'R'<pos:position pos:line="239" pos:column="21"/></literal></expr>:<pos:position pos:line="239" pos:column="22"/></case>
	    <expr_stmt><expr><name><name pos:line="240" pos:column="13">hdr<pos:position pos:line="240" pos:column="16"/></name><operator pos:line="240" pos:column="16">-&gt;<pos:position pos:line="240" pos:column="21"/></operator><name pos:line="240" pos:column="18">read<pos:position pos:line="240" pos:column="22"/></name></name> <operator pos:line="240" pos:column="23">=<pos:position pos:line="240" pos:column="24"/></operator> <literal type="number" pos:line="240" pos:column="25">1<pos:position pos:line="240" pos:column="26"/></literal></expr>;<pos:position pos:line="240" pos:column="27"/></expr_stmt>
	    <break pos:line="241" pos:column="13">break;<pos:position pos:line="241" pos:column="19"/></break>
	  }<pos:position pos:line="242" pos:column="12"/></block></switch>
	  <expr_stmt><expr><name pos:line="243" pos:column="11">p<pos:position pos:line="243" pos:column="12"/></name><operator pos:line="243" pos:column="12">++<pos:position pos:line="243" pos:column="14"/></operator></expr>;<pos:position pos:line="243" pos:column="15"/></expr_stmt>
	}<pos:position pos:line="244" pos:column="10"/></block></while>
      }<pos:position pos:line="245" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="246" pos:column="7">matched<pos:position pos:line="246" pos:column="14"/></name> <operator pos:line="246" pos:column="15">=<pos:position pos:line="246" pos:column="16"/></operator> <literal type="number" pos:line="246" pos:column="17">1<pos:position pos:line="246" pos:column="18"/></literal></expr>;<pos:position pos:line="246" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="247" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="248" pos:column="5">else <if pos:line="248" pos:column="10">if <condition pos:line="248" pos:column="13">(<expr><operator pos:line="248" pos:column="14">(<pos:position pos:line="248" pos:column="15"/></operator><operator pos:line="248" pos:column="15">!<pos:position pos:line="248" pos:column="16"/></operator><call><name pos:line="248" pos:column="16">ascii_strcasecmp<pos:position pos:line="248" pos:column="32"/></name> <argument_list pos:line="248" pos:column="33">(<argument><expr><literal type="string" pos:line="248" pos:column="34">"upersedes"<pos:position pos:line="248" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="248" pos:column="47">line<pos:position pos:line="248" pos:column="51"/></name> <operator pos:line="248" pos:column="52">+<pos:position pos:line="248" pos:column="53"/></operator> <literal type="number" pos:line="248" pos:column="54">1<pos:position pos:line="248" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="248" pos:column="56"/></argument_list></call> <operator pos:line="248" pos:column="57">||<pos:position pos:line="248" pos:column="59"/></operator>
	      <operator pos:line="249" pos:column="15">!<pos:position pos:line="249" pos:column="16"/></operator><call><name pos:line="249" pos:column="16">ascii_strcasecmp<pos:position pos:line="249" pos:column="32"/></name> <argument_list pos:line="249" pos:column="33">(<argument><expr><literal type="string" pos:line="249" pos:column="34">"upercedes"<pos:position pos:line="249" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="249" pos:column="47">line<pos:position pos:line="249" pos:column="51"/></name> <operator pos:line="249" pos:column="52">+<pos:position pos:line="249" pos:column="53"/></operator> <literal type="number" pos:line="249" pos:column="54">1<pos:position pos:line="249" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="249" pos:column="56"/></argument_list></call><operator pos:line="249" pos:column="56">)<pos:position pos:line="249" pos:column="57"/></operator> <operator pos:line="249" pos:column="58">&amp;&amp;<pos:position pos:line="249" pos:column="68"/></operator> <name pos:line="249" pos:column="61">hdr<pos:position pos:line="249" pos:column="64"/></name></expr>)<pos:position pos:line="249" pos:column="65"/></condition><then pos:line="249" pos:column="65">
    <block pos:line="250" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="251" pos:column="7">FREE<pos:position pos:line="251" pos:column="11"/></name><argument_list pos:line="251" pos:column="11">(<argument><expr><operator pos:line="251" pos:column="12">&amp;<pos:position pos:line="251" pos:column="17"/></operator><name><name pos:line="251" pos:column="13">e<pos:position pos:line="251" pos:column="14"/></name><operator pos:line="251" pos:column="14">-&gt;<pos:position pos:line="251" pos:column="19"/></operator><name pos:line="251" pos:column="16">supersedes<pos:position pos:line="251" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="251" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="252" pos:column="7">e<pos:position pos:line="252" pos:column="8"/></name><operator pos:line="252" pos:column="8">-&gt;<pos:position pos:line="252" pos:column="13"/></operator><name pos:line="252" pos:column="10">supersedes<pos:position pos:line="252" pos:column="20"/></name></name> <operator pos:line="252" pos:column="21">=<pos:position pos:line="252" pos:column="22"/></operator> <call><name pos:line="252" pos:column="23">safe_strdup<pos:position pos:line="252" pos:column="34"/></name> <argument_list pos:line="252" pos:column="35">(<argument><expr><name pos:line="252" pos:column="36">p<pos:position pos:line="252" pos:column="37"/></name></expr></argument>)<pos:position pos:line="252" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="253" pos:column="6"/></block></then></if></elseif></if>
    <break pos:line="254" pos:column="5">break;<pos:position pos:line="254" pos:column="11"/></break>
    
    <case pos:line="256" pos:column="5">case <expr><literal type="char" pos:line="256" pos:column="10">'t'<pos:position pos:line="256" pos:column="13"/></literal></expr>:<pos:position pos:line="256" pos:column="14"/></case>
    <if pos:line="257" pos:column="5">if <condition pos:line="257" pos:column="8">(<expr><call><name pos:line="257" pos:column="9">ascii_strcasecmp<pos:position pos:line="257" pos:column="25"/></name> <argument_list pos:line="257" pos:column="26">(<argument><expr><name pos:line="257" pos:column="27">line<pos:position pos:line="257" pos:column="31"/></name><operator pos:line="257" pos:column="31">+<pos:position pos:line="257" pos:column="32"/></operator><literal type="number" pos:line="257" pos:column="32">1<pos:position pos:line="257" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="257" pos:column="35">"o"<pos:position pos:line="257" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="257" pos:column="39"/></argument_list></call> <operator pos:line="257" pos:column="40">==<pos:position pos:line="257" pos:column="42"/></operator> <literal type="number" pos:line="257" pos:column="43">0<pos:position pos:line="257" pos:column="44"/></literal></expr>)<pos:position pos:line="257" pos:column="45"/></condition><then pos:line="257" pos:column="45">
    <block pos:line="258" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="259" pos:column="7">e<pos:position pos:line="259" pos:column="8"/></name><operator pos:line="259" pos:column="8">-&gt;<pos:position pos:line="259" pos:column="13"/></operator><name pos:line="259" pos:column="10">to<pos:position pos:line="259" pos:column="12"/></name></name> <operator pos:line="259" pos:column="13">=<pos:position pos:line="259" pos:column="14"/></operator> <call><name pos:line="259" pos:column="15">rfc822_parse_adrlist<pos:position pos:line="259" pos:column="35"/></name> <argument_list pos:line="259" pos:column="36">(<argument><expr><name><name pos:line="259" pos:column="37">e<pos:position pos:line="259" pos:column="38"/></name><operator pos:line="259" pos:column="38">-&gt;<pos:position pos:line="259" pos:column="43"/></operator><name pos:line="259" pos:column="40">to<pos:position pos:line="259" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="259" pos:column="44">p<pos:position pos:line="259" pos:column="45"/></name></expr></argument>)<pos:position pos:line="259" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><name pos:line="260" pos:column="7">matched<pos:position pos:line="260" pos:column="14"/></name> <operator pos:line="260" pos:column="15">=<pos:position pos:line="260" pos:column="16"/></operator> <literal type="number" pos:line="260" pos:column="17">1<pos:position pos:line="260" pos:column="18"/></literal></expr>;<pos:position pos:line="260" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="261" pos:column="6"/></block></then></if>
    <break pos:line="262" pos:column="5">break;<pos:position pos:line="262" pos:column="11"/></break>
    
    <case pos:line="264" pos:column="5">case <expr><literal type="char" pos:line="264" pos:column="10">'x'<pos:position pos:line="264" pos:column="13"/></literal></expr>:<pos:position pos:line="264" pos:column="14"/></case>
    <if pos:line="265" pos:column="5">if <condition pos:line="265" pos:column="8">(<expr><call><name pos:line="265" pos:column="9">ascii_strcasecmp<pos:position pos:line="265" pos:column="25"/></name> <argument_list pos:line="265" pos:column="26">(<argument><expr><name pos:line="265" pos:column="27">line<pos:position pos:line="265" pos:column="31"/></name><operator pos:line="265" pos:column="31">+<pos:position pos:line="265" pos:column="32"/></operator><literal type="number" pos:line="265" pos:column="32">1<pos:position pos:line="265" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="265" pos:column="35">"-status"<pos:position pos:line="265" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="265" pos:column="45"/></argument_list></call> <operator pos:line="265" pos:column="46">==<pos:position pos:line="265" pos:column="48"/></operator> <literal type="number" pos:line="265" pos:column="49">0<pos:position pos:line="265" pos:column="50"/></literal></expr>)<pos:position pos:line="265" pos:column="51"/></condition><then pos:line="265" pos:column="51">
    <block pos:line="266" pos:column="5">{
      <if pos:line="267" pos:column="7">if <condition pos:line="267" pos:column="10">(<expr><name pos:line="267" pos:column="11">hdr<pos:position pos:line="267" pos:column="14"/></name></expr>)<pos:position pos:line="267" pos:column="15"/></condition><then pos:line="267" pos:column="15">
      <block pos:line="268" pos:column="7">{
	<while pos:line="269" pos:column="9">while <condition pos:line="269" pos:column="15">(<expr><operator pos:line="269" pos:column="16">*<pos:position pos:line="269" pos:column="17"/></operator><name pos:line="269" pos:column="17">p<pos:position pos:line="269" pos:column="18"/></name></expr>)<pos:position pos:line="269" pos:column="19"/></condition>
	<block pos:line="270" pos:column="9">{
	  <switch pos:line="271" pos:column="11">switch <condition pos:line="271" pos:column="18">(<expr><operator pos:line="271" pos:column="19">*<pos:position pos:line="271" pos:column="20"/></operator><name pos:line="271" pos:column="20">p<pos:position pos:line="271" pos:column="21"/></name></expr>)<pos:position pos:line="271" pos:column="22"/></condition>
	  <block pos:line="272" pos:column="11">{
	    <case pos:line="273" pos:column="13">case <expr><literal type="char" pos:line="273" pos:column="18">'A'<pos:position pos:line="273" pos:column="21"/></literal></expr>:<pos:position pos:line="273" pos:column="22"/></case>
	    <expr_stmt><expr><name><name pos:line="274" pos:column="13">hdr<pos:position pos:line="274" pos:column="16"/></name><operator pos:line="274" pos:column="16">-&gt;<pos:position pos:line="274" pos:column="21"/></operator><name pos:line="274" pos:column="18">replied<pos:position pos:line="274" pos:column="25"/></name></name> <operator pos:line="274" pos:column="26">=<pos:position pos:line="274" pos:column="27"/></operator> <literal type="number" pos:line="274" pos:column="28">1<pos:position pos:line="274" pos:column="29"/></literal></expr>;<pos:position pos:line="274" pos:column="30"/></expr_stmt>
	    <break pos:line="275" pos:column="13">break;<pos:position pos:line="275" pos:column="19"/></break>
	    <case pos:line="276" pos:column="13">case <expr><literal type="char" pos:line="276" pos:column="18">'D'<pos:position pos:line="276" pos:column="21"/></literal></expr>:<pos:position pos:line="276" pos:column="22"/></case>
	    <expr_stmt><expr><name><name pos:line="277" pos:column="13">hdr<pos:position pos:line="277" pos:column="16"/></name><operator pos:line="277" pos:column="16">-&gt;<pos:position pos:line="277" pos:column="21"/></operator><name pos:line="277" pos:column="18">deleted<pos:position pos:line="277" pos:column="25"/></name></name> <operator pos:line="277" pos:column="26">=<pos:position pos:line="277" pos:column="27"/></operator> <literal type="number" pos:line="277" pos:column="28">1<pos:position pos:line="277" pos:column="29"/></literal></expr>;<pos:position pos:line="277" pos:column="30"/></expr_stmt>
	    <break pos:line="278" pos:column="13">break;<pos:position pos:line="278" pos:column="19"/></break>
	    <case pos:line="279" pos:column="13">case <expr><literal type="char" pos:line="279" pos:column="18">'F'<pos:position pos:line="279" pos:column="21"/></literal></expr>:<pos:position pos:line="279" pos:column="22"/></case>
	    <expr_stmt><expr><name><name pos:line="280" pos:column="13">hdr<pos:position pos:line="280" pos:column="16"/></name><operator pos:line="280" pos:column="16">-&gt;<pos:position pos:line="280" pos:column="21"/></operator><name pos:line="280" pos:column="18">flagged<pos:position pos:line="280" pos:column="25"/></name></name> <operator pos:line="280" pos:column="26">=<pos:position pos:line="280" pos:column="27"/></operator> <literal type="number" pos:line="280" pos:column="28">1<pos:position pos:line="280" pos:column="29"/></literal></expr>;<pos:position pos:line="280" pos:column="30"/></expr_stmt>
	    <break pos:line="281" pos:column="13">break;<pos:position pos:line="281" pos:column="19"/></break>
	    <default pos:line="282" pos:column="13">default:<pos:position pos:line="282" pos:column="21"/></default>
	    <break pos:line="283" pos:column="13">break;<pos:position pos:line="283" pos:column="19"/></break>
	  }<pos:position pos:line="284" pos:column="12"/></block></switch>
	  <expr_stmt><expr><name pos:line="285" pos:column="11">p<pos:position pos:line="285" pos:column="12"/></name><operator pos:line="285" pos:column="12">++<pos:position pos:line="285" pos:column="14"/></operator></expr>;<pos:position pos:line="285" pos:column="15"/></expr_stmt>
	}<pos:position pos:line="286" pos:column="10"/></block></while>
      }<pos:position pos:line="287" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="288" pos:column="7">matched<pos:position pos:line="288" pos:column="14"/></name> <operator pos:line="288" pos:column="15">=<pos:position pos:line="288" pos:column="16"/></operator> <literal type="number" pos:line="288" pos:column="17">1<pos:position pos:line="288" pos:column="18"/></literal></expr>;<pos:position pos:line="288" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="289" pos:column="6"/></block></then>
    <elseif pos:line="290" pos:column="5">else <if pos:line="290" pos:column="10">if <condition pos:line="290" pos:column="13">(<expr><call><name pos:line="290" pos:column="14">ascii_strcasecmp<pos:position pos:line="290" pos:column="30"/></name> <argument_list pos:line="290" pos:column="31">(<argument><expr><name pos:line="290" pos:column="32">line<pos:position pos:line="290" pos:column="36"/></name><operator pos:line="290" pos:column="36">+<pos:position pos:line="290" pos:column="37"/></operator><literal type="number" pos:line="290" pos:column="37">1<pos:position pos:line="290" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="290" pos:column="40">"-label"<pos:position pos:line="290" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="290" pos:column="49"/></argument_list></call> <operator pos:line="290" pos:column="50">==<pos:position pos:line="290" pos:column="52"/></operator> <literal type="number" pos:line="290" pos:column="53">0<pos:position pos:line="290" pos:column="54"/></literal></expr>)<pos:position pos:line="290" pos:column="55"/></condition><then pos:line="290" pos:column="55">
    <block pos:line="291" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="292" pos:column="7">FREE<pos:position pos:line="292" pos:column="11"/></name><argument_list pos:line="292" pos:column="11">(<argument><expr><operator pos:line="292" pos:column="12">&amp;<pos:position pos:line="292" pos:column="17"/></operator><name><name pos:line="292" pos:column="13">e<pos:position pos:line="292" pos:column="14"/></name><operator pos:line="292" pos:column="14">-&gt;<pos:position pos:line="292" pos:column="19"/></operator><name pos:line="292" pos:column="16">x_label<pos:position pos:line="292" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="292" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="293" pos:column="7">e<pos:position pos:line="293" pos:column="8"/></name><operator pos:line="293" pos:column="8">-&gt;<pos:position pos:line="293" pos:column="13"/></operator><name pos:line="293" pos:column="10">x_label<pos:position pos:line="293" pos:column="17"/></name></name> <operator pos:line="293" pos:column="18">=<pos:position pos:line="293" pos:column="19"/></operator> <call><name pos:line="293" pos:column="20">safe_strdup<pos:position pos:line="293" pos:column="31"/></name><argument_list pos:line="293" pos:column="31">(<argument><expr><name pos:line="293" pos:column="32">p<pos:position pos:line="293" pos:column="33"/></name></expr></argument>)<pos:position pos:line="293" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name pos:line="294" pos:column="7">matched<pos:position pos:line="294" pos:column="14"/></name> <operator pos:line="294" pos:column="15">=<pos:position pos:line="294" pos:column="16"/></operator> <literal type="number" pos:line="294" pos:column="17">1<pos:position pos:line="294" pos:column="18"/></literal></expr>;<pos:position pos:line="294" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="295" pos:column="6"/></block></then></if></elseif></if>
    
    <default pos:line="297" pos:column="5">default:<pos:position pos:line="297" pos:column="13"/></default>
    <break pos:line="298" pos:column="5">break;<pos:position pos:line="298" pos:column="11"/></break>
  }<pos:position pos:line="299" pos:column="4"/></block></switch>
  
  <comment type="block" pos:line="301" pos:column="3">/* Keep track of the user-defined headers */</comment>
  <if pos:line="302" pos:column="3">if <condition pos:line="302" pos:column="6">(<expr><operator pos:line="302" pos:column="7">!<pos:position pos:line="302" pos:column="8"/></operator><name pos:line="302" pos:column="8">matched<pos:position pos:line="302" pos:column="15"/></name> <operator pos:line="302" pos:column="16">&amp;&amp;<pos:position pos:line="302" pos:column="26"/></operator> <name pos:line="302" pos:column="19">user_hdrs<pos:position pos:line="302" pos:column="28"/></name></expr>)<pos:position pos:line="302" pos:column="29"/></condition><then pos:line="302" pos:column="29">
  <block pos:line="303" pos:column="3">{
    <comment type="block" pos:line="304" pos:column="5">/* restore the original line */</comment>
    <expr_stmt><expr><name><name pos:line="305" pos:column="5">line<pos:position pos:line="305" pos:column="9"/></name><index pos:line="305" pos:column="9">[<expr><call><name pos:line="305" pos:column="10">strlen<pos:position pos:line="305" pos:column="16"/></name> <argument_list pos:line="305" pos:column="17">(<argument><expr><name pos:line="305" pos:column="18">line<pos:position pos:line="305" pos:column="22"/></name></expr></argument>)<pos:position pos:line="305" pos:column="23"/></argument_list></call></expr>]<pos:position pos:line="305" pos:column="24"/></index></name> <operator pos:line="305" pos:column="25">=<pos:position pos:line="305" pos:column="26"/></operator> <literal type="char" pos:line="305" pos:column="27">':'<pos:position pos:line="305" pos:column="30"/></literal></expr>;<pos:position pos:line="305" pos:column="31"/></expr_stmt>
    
    <if pos:line="307" pos:column="5">if <condition pos:line="307" pos:column="8">(<expr><name pos:line="307" pos:column="9">weed<pos:position pos:line="307" pos:column="13"/></name> <operator pos:line="307" pos:column="14">&amp;&amp;<pos:position pos:line="307" pos:column="24"/></operator> <call><name pos:line="307" pos:column="17">option<pos:position pos:line="307" pos:column="23"/></name> <argument_list pos:line="307" pos:column="24">(<argument><expr><name pos:line="307" pos:column="25">OPTWEED<pos:position pos:line="307" pos:column="32"/></name></expr></argument>)<pos:position pos:line="307" pos:column="33"/></argument_list></call> <operator pos:line="307" pos:column="34">&amp;&amp;<pos:position pos:line="307" pos:column="44"/></operator> <call><name pos:line="307" pos:column="37">mutt_matches_ignore<pos:position pos:line="307" pos:column="56"/></name> <argument_list pos:line="307" pos:column="57">(<argument><expr><name pos:line="307" pos:column="58">line<pos:position pos:line="307" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="307" pos:column="64">Ignore<pos:position pos:line="307" pos:column="70"/></name></expr></argument>)<pos:position pos:line="307" pos:column="71"/></argument_list></call>
	<operator pos:line="308" pos:column="9">&amp;&amp;<pos:position pos:line="308" pos:column="19"/></operator> <operator pos:line="308" pos:column="12">!<pos:position pos:line="308" pos:column="13"/></operator><call><name pos:line="308" pos:column="13">mutt_matches_ignore<pos:position pos:line="308" pos:column="32"/></name> <argument_list pos:line="308" pos:column="33">(<argument><expr><name pos:line="308" pos:column="34">line<pos:position pos:line="308" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="308" pos:column="40">UnIgnore<pos:position pos:line="308" pos:column="48"/></name></expr></argument>)<pos:position pos:line="308" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="308" pos:column="50"/></condition><then pos:line="308" pos:column="50">
      <block type="pseudo"><goto pos:line="309" pos:column="7">goto <name pos:line="309" pos:column="12">done<pos:position pos:line="309" pos:column="16"/></name>;<pos:position pos:line="309" pos:column="17"/></goto></block></then></if>

    <if pos:line="311" pos:column="5">if <condition pos:line="311" pos:column="8">(<expr><name pos:line="311" pos:column="9">last<pos:position pos:line="311" pos:column="13"/></name></expr>)<pos:position pos:line="311" pos:column="14"/></condition><then pos:line="311" pos:column="14">
    <block pos:line="312" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="313" pos:column="7">last<pos:position pos:line="313" pos:column="11"/></name><operator pos:line="313" pos:column="11">-&gt;<pos:position pos:line="313" pos:column="16"/></operator><name pos:line="313" pos:column="13">next<pos:position pos:line="313" pos:column="17"/></name></name> <operator pos:line="313" pos:column="18">=<pos:position pos:line="313" pos:column="19"/></operator> <call><name pos:line="313" pos:column="20">mutt_new_list<pos:position pos:line="313" pos:column="33"/></name> <argument_list pos:line="313" pos:column="34">()<pos:position pos:line="313" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="313" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><name pos:line="314" pos:column="7">last<pos:position pos:line="314" pos:column="11"/></name> <operator pos:line="314" pos:column="12">=<pos:position pos:line="314" pos:column="13"/></operator> <name><name pos:line="314" pos:column="14">last<pos:position pos:line="314" pos:column="18"/></name><operator pos:line="314" pos:column="18">-&gt;<pos:position pos:line="314" pos:column="23"/></operator><name pos:line="314" pos:column="20">next<pos:position pos:line="314" pos:column="24"/></name></name></expr>;<pos:position pos:line="314" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="315" pos:column="6"/></block></then>
    <else pos:line="316" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="317" pos:column="7">last<pos:position pos:line="317" pos:column="11"/></name> <operator pos:line="317" pos:column="12">=<pos:position pos:line="317" pos:column="13"/></operator> <name><name pos:line="317" pos:column="14">e<pos:position pos:line="317" pos:column="15"/></name><operator pos:line="317" pos:column="15">-&gt;<pos:position pos:line="317" pos:column="20"/></operator><name pos:line="317" pos:column="17">userhdrs<pos:position pos:line="317" pos:column="25"/></name></name> <operator pos:line="317" pos:column="26">=<pos:position pos:line="317" pos:column="27"/></operator> <call><name pos:line="317" pos:column="28">mutt_new_list<pos:position pos:line="317" pos:column="41"/></name> <argument_list pos:line="317" pos:column="42">()<pos:position pos:line="317" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="317" pos:column="45"/></expr_stmt></block></else></if>
    <expr_stmt><expr><name><name pos:line="318" pos:column="5">last<pos:position pos:line="318" pos:column="9"/></name><operator pos:line="318" pos:column="9">-&gt;<pos:position pos:line="318" pos:column="14"/></operator><name pos:line="318" pos:column="11">data<pos:position pos:line="318" pos:column="15"/></name></name> <operator pos:line="318" pos:column="16">=<pos:position pos:line="318" pos:column="17"/></operator> <call><name pos:line="318" pos:column="18">safe_strdup<pos:position pos:line="318" pos:column="29"/></name> <argument_list pos:line="318" pos:column="30">(<argument><expr><name pos:line="318" pos:column="31">line<pos:position pos:line="318" pos:column="35"/></name></expr></argument>)<pos:position pos:line="318" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="318" pos:column="37"/></expr_stmt>
    <if pos:line="319" pos:column="5">if <condition pos:line="319" pos:column="8">(<expr><name pos:line="319" pos:column="9">do_2047<pos:position pos:line="319" pos:column="16"/></name></expr>)<pos:position pos:line="319" pos:column="17"/></condition><then pos:line="319" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="320" pos:column="7">rfc2047_decode<pos:position pos:line="320" pos:column="21"/></name> <argument_list pos:line="320" pos:column="22">(<argument><expr><operator pos:line="320" pos:column="23">&amp;<pos:position pos:line="320" pos:column="28"/></operator><name><name pos:line="320" pos:column="24">last<pos:position pos:line="320" pos:column="28"/></name><operator pos:line="320" pos:column="28">-&gt;<pos:position pos:line="320" pos:column="33"/></operator><name pos:line="320" pos:column="30">data<pos:position pos:line="320" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="320" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="320" pos:column="36"/></expr_stmt></block></then></if>
  }<pos:position pos:line="321" pos:column="4"/></block></then></if>

  <label><name pos:line="323" pos:column="3">done<pos:position pos:line="323" pos:column="7"/></name>:<pos:position pos:line="323" pos:column="8"/></label>
  
  <expr_stmt><expr><operator pos:line="325" pos:column="3">*<pos:position pos:line="325" pos:column="4"/></operator><name pos:line="325" pos:column="4">lastp<pos:position pos:line="325" pos:column="9"/></name> <operator pos:line="325" pos:column="10">=<pos:position pos:line="325" pos:column="11"/></operator> <name pos:line="325" pos:column="12">last<pos:position pos:line="325" pos:column="16"/></name></expr>;<pos:position pos:line="325" pos:column="17"/></expr_stmt>
  <return pos:line="326" pos:column="3">return <expr><name pos:line="326" pos:column="10">matched<pos:position pos:line="326" pos:column="17"/></name></expr>;<pos:position pos:line="326" pos:column="18"/></return>
}<pos:position pos:line="327" pos:column="2"/></block></function></unit>

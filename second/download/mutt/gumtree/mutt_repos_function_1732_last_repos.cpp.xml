<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1732_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_decode_save_attachment<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">FILE<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">fp<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">BODY<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">m<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">path<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
				 <parameter><decl><type><name pos:line="2" pos:column="34">int<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">displaying<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">int<pos:position pos:line="2" pos:column="53"/></name></type> <name pos:line="2" pos:column="54">flags<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">STATE<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">s<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">unsigned<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">int<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">saved_encoding<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><literal type="number" pos:line="5" pos:column="33">0<pos:position pos:line="5" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">BODY<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">saved_parts<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name pos:line="6" pos:column="23">NULL<pos:position pos:line="6" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">HEADER<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">saved_hdr<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name pos:line="7" pos:column="23">NULL<pos:position pos:line="7" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">memset<pos:position pos:line="9" pos:column="9"/></name> <argument_list pos:line="9" pos:column="10">(<argument><expr><operator pos:line="9" pos:column="11">&amp;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="12">s<pos:position pos:line="9" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="15">0<pos:position pos:line="9" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="18">sizeof <argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">s<pos:position pos:line="9" pos:column="27"/></name></expr></argument>)<pos:position pos:line="9" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">s<pos:position pos:line="10" pos:column="4"/></name><operator pos:line="10" pos:column="4">.<pos:position pos:line="10" pos:column="5"/></operator><name pos:line="10" pos:column="5">flags<pos:position pos:line="10" pos:column="10"/></name></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <name pos:line="10" pos:column="13">displaying<pos:position pos:line="10" pos:column="23"/></name></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">flags<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">==<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">MUTT_SAVE_APPEND<pos:position pos:line="12" pos:column="32"/></name></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="5">s<pos:position pos:line="13" pos:column="6"/></name><operator pos:line="13" pos:column="6">.<pos:position pos:line="13" pos:column="7"/></operator><name pos:line="13" pos:column="7">fpout<pos:position pos:line="13" pos:column="12"/></name></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <call><name pos:line="13" pos:column="15">fopen<pos:position pos:line="13" pos:column="20"/></name> <argument_list pos:line="13" pos:column="21">(<argument><expr><name pos:line="13" pos:column="22">path<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="28">"a"<pos:position pos:line="13" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt></block></then>
  <elseif pos:line="14" pos:column="3">else <if pos:line="14" pos:column="8">if <condition pos:line="14" pos:column="11">(<expr><name pos:line="14" pos:column="12">flags<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">==<pos:position pos:line="14" pos:column="20"/></operator> <name pos:line="14" pos:column="21">MUTT_SAVE_OVERWRITE<pos:position pos:line="14" pos:column="40"/></name></expr>)<pos:position pos:line="14" pos:column="41"/></condition><then pos:line="14" pos:column="41">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="15" pos:column="5">s<pos:position pos:line="15" pos:column="6"/></name><operator pos:line="15" pos:column="6">.<pos:position pos:line="15" pos:column="7"/></operator><name pos:line="15" pos:column="7">fpout<pos:position pos:line="15" pos:column="12"/></name></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <call><name pos:line="15" pos:column="15">fopen<pos:position pos:line="15" pos:column="20"/></name> <argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">path<pos:position pos:line="15" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="28">"w"<pos:position pos:line="15" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt></block></then></if></elseif>	<comment type="block" pos:line="15" pos:column="41">/* __FOPEN_CHECKED__ */</comment>
  <else pos:line="16" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="5">s<pos:position pos:line="17" pos:column="6"/></name><operator pos:line="17" pos:column="6">.<pos:position pos:line="17" pos:column="7"/></operator><name pos:line="17" pos:column="7">fpout<pos:position pos:line="17" pos:column="12"/></name></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">safe_fopen<pos:position pos:line="17" pos:column="25"/></name> <argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">path<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="33">"w"<pos:position pos:line="17" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt></block></else></if>

  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name><name pos:line="19" pos:column="7">s<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">.<pos:position pos:line="19" pos:column="9"/></operator><name pos:line="19" pos:column="9">fpout<pos:position pos:line="19" pos:column="14"/></name></name> <operator pos:line="19" pos:column="15">==<pos:position pos:line="19" pos:column="17"/></operator> <name pos:line="19" pos:column="18">NULL<pos:position pos:line="19" pos:column="22"/></name></expr>)<pos:position pos:line="19" pos:column="23"/></condition><then pos:line="19" pos:column="23">
  <block pos:line="20" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">mutt_perror<pos:position pos:line="21" pos:column="16"/></name> <argument_list pos:line="21" pos:column="17">(<argument><expr><literal type="string" pos:line="21" pos:column="18">"fopen"<pos:position pos:line="21" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
    <return pos:line="22" pos:column="5">return <expr><operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><operator pos:line="22" pos:column="13">-<pos:position pos:line="22" pos:column="14"/></operator><literal type="number" pos:line="22" pos:column="14">1<pos:position pos:line="22" pos:column="15"/></literal><operator pos:line="22" pos:column="15">)<pos:position pos:line="22" pos:column="16"/></operator></expr>;<pos:position pos:line="22" pos:column="17"/></return>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">fp<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">==<pos:position pos:line="25" pos:column="12"/></operator> <name pos:line="25" pos:column="13">NULL<pos:position pos:line="25" pos:column="17"/></name></expr>)<pos:position pos:line="25" pos:column="18"/></condition><then pos:line="25" pos:column="18">
  <block pos:line="26" pos:column="3">{
    <comment type="block" pos:line="27" pos:column="5">/* When called from the compose menu, the attachment isn't parsed,
     * so we need to do it here. */</comment>
    <decl_stmt><decl><type><name><name pos:line="29" pos:column="5">struct<pos:position pos:line="29" pos:column="11"/></name> <name pos:line="29" pos:column="12">stat<pos:position pos:line="29" pos:column="16"/></name></name></type> <name pos:line="29" pos:column="17">st<pos:position pos:line="29" pos:column="19"/></name></decl>;<pos:position pos:line="29" pos:column="20"/></decl_stmt>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><call><name pos:line="31" pos:column="9">stat<pos:position pos:line="31" pos:column="13"/></name> <argument_list pos:line="31" pos:column="14">(<argument><expr><name><name pos:line="31" pos:column="15">m<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">-&gt;<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="18">filename<pos:position pos:line="31" pos:column="26"/></name></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="28">&amp;<pos:position pos:line="31" pos:column="33"/></operator><name pos:line="31" pos:column="29">st<pos:position pos:line="31" pos:column="31"/></name></expr></argument>)<pos:position pos:line="31" pos:column="32"/></argument_list></call> <operator pos:line="31" pos:column="33">==<pos:position pos:line="31" pos:column="35"/></operator> <operator pos:line="31" pos:column="36">-<pos:position pos:line="31" pos:column="37"/></operator><literal type="number" pos:line="31" pos:column="37">1<pos:position pos:line="31" pos:column="38"/></literal></expr>)<pos:position pos:line="31" pos:column="39"/></condition><then pos:line="31" pos:column="39">
    <block pos:line="32" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">mutt_perror<pos:position pos:line="33" pos:column="18"/></name> <argument_list pos:line="33" pos:column="19">(<argument><expr><literal type="string" pos:line="33" pos:column="20">"stat"<pos:position pos:line="33" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">safe_fclose<pos:position pos:line="34" pos:column="18"/></name> <argument_list pos:line="34" pos:column="19">(<argument><expr><operator pos:line="34" pos:column="20">&amp;<pos:position pos:line="34" pos:column="25"/></operator><name><name pos:line="34" pos:column="21">s<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">.<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="23">fpout<pos:position pos:line="34" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="30"/></expr_stmt>
      <return pos:line="35" pos:column="7">return <expr><operator pos:line="35" pos:column="14">(<pos:position pos:line="35" pos:column="15"/></operator><operator pos:line="35" pos:column="15">-<pos:position pos:line="35" pos:column="16"/></operator><literal type="number" pos:line="35" pos:column="16">1<pos:position pos:line="35" pos:column="17"/></literal><operator pos:line="35" pos:column="17">)<pos:position pos:line="35" pos:column="18"/></operator></expr>;<pos:position pos:line="35" pos:column="19"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><operator pos:line="38" pos:column="9">(<pos:position pos:line="38" pos:column="10"/></operator><name><name pos:line="38" pos:column="10">s<pos:position pos:line="38" pos:column="11"/></name><operator pos:line="38" pos:column="11">.<pos:position pos:line="38" pos:column="12"/></operator><name pos:line="38" pos:column="12">fpin<pos:position pos:line="38" pos:column="16"/></name></name> <operator pos:line="38" pos:column="17">=<pos:position pos:line="38" pos:column="18"/></operator> <call><name pos:line="38" pos:column="19">fopen<pos:position pos:line="38" pos:column="24"/></name> <argument_list pos:line="38" pos:column="25">(<argument><expr><name><name pos:line="38" pos:column="26">m<pos:position pos:line="38" pos:column="27"/></name><operator pos:line="38" pos:column="27">-&gt;<pos:position pos:line="38" pos:column="32"/></operator><name pos:line="38" pos:column="29">filename<pos:position pos:line="38" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="39">"r"<pos:position pos:line="38" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="43"/></argument_list></call><operator pos:line="38" pos:column="43">)<pos:position pos:line="38" pos:column="44"/></operator> <operator pos:line="38" pos:column="45">==<pos:position pos:line="38" pos:column="47"/></operator> <name pos:line="38" pos:column="48">NULL<pos:position pos:line="38" pos:column="52"/></name></expr>)<pos:position pos:line="38" pos:column="53"/></condition><then pos:line="38" pos:column="53">
    <block pos:line="39" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">mutt_perror<pos:position pos:line="40" pos:column="18"/></name> <argument_list pos:line="40" pos:column="19">(<argument><expr><literal type="string" pos:line="40" pos:column="20">"fopen"<pos:position pos:line="40" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>
      <return pos:line="41" pos:column="7">return <expr><operator pos:line="41" pos:column="14">(<pos:position pos:line="41" pos:column="15"/></operator><operator pos:line="41" pos:column="15">-<pos:position pos:line="41" pos:column="16"/></operator><literal type="number" pos:line="41" pos:column="16">1<pos:position pos:line="41" pos:column="17"/></literal><operator pos:line="41" pos:column="17">)<pos:position pos:line="41" pos:column="18"/></operator></expr>;<pos:position pos:line="41" pos:column="19"/></return>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="44" pos:column="5">saved_encoding<pos:position pos:line="44" pos:column="19"/></name> <operator pos:line="44" pos:column="20">=<pos:position pos:line="44" pos:column="21"/></operator> <name><name pos:line="44" pos:column="22">m<pos:position pos:line="44" pos:column="23"/></name><operator pos:line="44" pos:column="23">-&gt;<pos:position pos:line="44" pos:column="28"/></operator><name pos:line="44" pos:column="25">encoding<pos:position pos:line="44" pos:column="33"/></name></name></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><operator pos:line="45" pos:column="9">!<pos:position pos:line="45" pos:column="10"/></operator><call><name pos:line="45" pos:column="10">is_multipart<pos:position pos:line="45" pos:column="22"/></name> <argument_list pos:line="45" pos:column="23">(<argument><expr><name pos:line="45" pos:column="24">m<pos:position pos:line="45" pos:column="25"/></name></expr></argument>)<pos:position pos:line="45" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="27"/></condition><then pos:line="45" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="46" pos:column="7">m<pos:position pos:line="46" pos:column="8"/></name><operator pos:line="46" pos:column="8">-&gt;<pos:position pos:line="46" pos:column="13"/></operator><name pos:line="46" pos:column="10">encoding<pos:position pos:line="46" pos:column="18"/></name></name> <operator pos:line="46" pos:column="19">=<pos:position pos:line="46" pos:column="20"/></operator> <name pos:line="46" pos:column="21">ENC8BIT<pos:position pos:line="46" pos:column="28"/></name></expr>;<pos:position pos:line="46" pos:column="29"/></expr_stmt></block></then></if>
    
    <expr_stmt><expr><name><name pos:line="48" pos:column="5">m<pos:position pos:line="48" pos:column="6"/></name><operator pos:line="48" pos:column="6">-&gt;<pos:position pos:line="48" pos:column="11"/></operator><name pos:line="48" pos:column="8">length<pos:position pos:line="48" pos:column="14"/></name></name> <operator pos:line="48" pos:column="15">=<pos:position pos:line="48" pos:column="16"/></operator> <name><name pos:line="48" pos:column="17">st<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">.<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="20">st_size<pos:position pos:line="48" pos:column="27"/></name></name></expr>;<pos:position pos:line="48" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="49" pos:column="5">m<pos:position pos:line="49" pos:column="6"/></name><operator pos:line="49" pos:column="6">-&gt;<pos:position pos:line="49" pos:column="11"/></operator><name pos:line="49" pos:column="8">offset<pos:position pos:line="49" pos:column="14"/></name></name> <operator pos:line="49" pos:column="15">=<pos:position pos:line="49" pos:column="16"/></operator> <literal type="number" pos:line="49" pos:column="17">0<pos:position pos:line="49" pos:column="18"/></literal></expr>;<pos:position pos:line="49" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="50" pos:column="5">saved_parts<pos:position pos:line="50" pos:column="16"/></name> <operator pos:line="50" pos:column="17">=<pos:position pos:line="50" pos:column="18"/></operator> <name><name pos:line="50" pos:column="19">m<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">-&gt;<pos:position pos:line="50" pos:column="25"/></operator><name pos:line="50" pos:column="22">parts<pos:position pos:line="50" pos:column="27"/></name></name></expr>;<pos:position pos:line="50" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="51" pos:column="5">saved_hdr<pos:position pos:line="51" pos:column="14"/></name> <operator pos:line="51" pos:column="15">=<pos:position pos:line="51" pos:column="16"/></operator> <name><name pos:line="51" pos:column="17">m<pos:position pos:line="51" pos:column="18"/></name><operator pos:line="51" pos:column="18">-&gt;<pos:position pos:line="51" pos:column="23"/></operator><name pos:line="51" pos:column="20">hdr<pos:position pos:line="51" pos:column="23"/></name></name></expr>;<pos:position pos:line="51" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">mutt_parse_part<pos:position pos:line="52" pos:column="20"/></name> <argument_list pos:line="52" pos:column="21">(<argument><expr><name><name pos:line="52" pos:column="22">s<pos:position pos:line="52" pos:column="23"/></name><operator pos:line="52" pos:column="23">.<pos:position pos:line="52" pos:column="24"/></operator><name pos:line="52" pos:column="24">fpin<pos:position pos:line="52" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="30">m<pos:position pos:line="52" pos:column="31"/></name></expr></argument>)<pos:position pos:line="52" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="33"/></expr_stmt>

    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name><name pos:line="54" pos:column="9">m<pos:position pos:line="54" pos:column="10"/></name><operator pos:line="54" pos:column="10">-&gt;<pos:position pos:line="54" pos:column="15"/></operator><name pos:line="54" pos:column="12">noconv<pos:position pos:line="54" pos:column="18"/></name></name> <operator pos:line="54" pos:column="19">||<pos:position pos:line="54" pos:column="21"/></operator> <call><name pos:line="54" pos:column="22">is_multipart<pos:position pos:line="54" pos:column="34"/></name> <argument_list pos:line="54" pos:column="35">(<argument><expr><name pos:line="54" pos:column="36">m<pos:position pos:line="54" pos:column="37"/></name></expr></argument>)<pos:position pos:line="54" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="39"/></condition><then pos:line="54" pos:column="39">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="55" pos:column="7">s<pos:position pos:line="55" pos:column="8"/></name><operator pos:line="55" pos:column="8">.<pos:position pos:line="55" pos:column="9"/></operator><name pos:line="55" pos:column="9">flags<pos:position pos:line="55" pos:column="14"/></name></name> <operator pos:line="55" pos:column="15">|=<pos:position pos:line="55" pos:column="17"/></operator> <name pos:line="55" pos:column="18">MUTT_CHARCONV<pos:position pos:line="55" pos:column="31"/></name></expr>;<pos:position pos:line="55" pos:column="32"/></expr_stmt></block></then></if>
  }<pos:position pos:line="56" pos:column="4"/></block></then>
  <else pos:line="57" pos:column="3">else
  <block pos:line="58" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="59" pos:column="5">s<pos:position pos:line="59" pos:column="6"/></name><operator pos:line="59" pos:column="6">.<pos:position pos:line="59" pos:column="7"/></operator><name pos:line="59" pos:column="7">fpin<pos:position pos:line="59" pos:column="11"/></name></name> <operator pos:line="59" pos:column="12">=<pos:position pos:line="59" pos:column="13"/></operator> <name pos:line="59" pos:column="14">fp<pos:position pos:line="59" pos:column="16"/></name></expr>;<pos:position pos:line="59" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="60" pos:column="5">s<pos:position pos:line="60" pos:column="6"/></name><operator pos:line="60" pos:column="6">.<pos:position pos:line="60" pos:column="7"/></operator><name pos:line="60" pos:column="7">flags<pos:position pos:line="60" pos:column="12"/></name></name> <operator pos:line="60" pos:column="13">|=<pos:position pos:line="60" pos:column="15"/></operator> <name pos:line="60" pos:column="16">MUTT_CHARCONV<pos:position pos:line="60" pos:column="29"/></name></expr>;<pos:position pos:line="60" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="61" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="63" pos:column="3">mutt_body_handler<pos:position pos:line="63" pos:column="20"/></name> <argument_list pos:line="63" pos:column="21">(<argument><expr><name pos:line="63" pos:column="22">m<pos:position pos:line="63" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="25">&amp;<pos:position pos:line="63" pos:column="30"/></operator><name pos:line="63" pos:column="26">s<pos:position pos:line="63" pos:column="27"/></name></expr></argument>)<pos:position pos:line="63" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="65" pos:column="3">safe_fclose<pos:position pos:line="65" pos:column="14"/></name> <argument_list pos:line="65" pos:column="15">(<argument><expr><operator pos:line="65" pos:column="16">&amp;<pos:position pos:line="65" pos:column="21"/></operator><name><name pos:line="65" pos:column="17">s<pos:position pos:line="65" pos:column="18"/></name><operator pos:line="65" pos:column="18">.<pos:position pos:line="65" pos:column="19"/></operator><name pos:line="65" pos:column="19">fpout<pos:position pos:line="65" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="26"/></expr_stmt>
  <if pos:line="66" pos:column="3">if <condition pos:line="66" pos:column="6">(<expr><name pos:line="66" pos:column="7">fp<pos:position pos:line="66" pos:column="9"/></name> <operator pos:line="66" pos:column="10">==<pos:position pos:line="66" pos:column="12"/></operator> <name pos:line="66" pos:column="13">NULL<pos:position pos:line="66" pos:column="17"/></name></expr>)<pos:position pos:line="66" pos:column="18"/></condition><then pos:line="66" pos:column="18">
  <block pos:line="67" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="68" pos:column="5">m<pos:position pos:line="68" pos:column="6"/></name><operator pos:line="68" pos:column="6">-&gt;<pos:position pos:line="68" pos:column="11"/></operator><name pos:line="68" pos:column="8">length<pos:position pos:line="68" pos:column="14"/></name></name> <operator pos:line="68" pos:column="15">=<pos:position pos:line="68" pos:column="16"/></operator> <literal type="number" pos:line="68" pos:column="17">0<pos:position pos:line="68" pos:column="18"/></literal></expr>;<pos:position pos:line="68" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="69" pos:column="5">m<pos:position pos:line="69" pos:column="6"/></name><operator pos:line="69" pos:column="6">-&gt;<pos:position pos:line="69" pos:column="11"/></operator><name pos:line="69" pos:column="8">encoding<pos:position pos:line="69" pos:column="16"/></name></name> <operator pos:line="69" pos:column="17">=<pos:position pos:line="69" pos:column="18"/></operator> <name pos:line="69" pos:column="19">saved_encoding<pos:position pos:line="69" pos:column="33"/></name></expr>;<pos:position pos:line="69" pos:column="34"/></expr_stmt>
    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><name pos:line="70" pos:column="9">saved_parts<pos:position pos:line="70" pos:column="20"/></name></expr>)<pos:position pos:line="70" pos:column="21"/></condition><then pos:line="70" pos:column="21">
    <block pos:line="71" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="72" pos:column="7">mutt_free_header<pos:position pos:line="72" pos:column="23"/></name> <argument_list pos:line="72" pos:column="24">(<argument><expr><operator pos:line="72" pos:column="25">&amp;<pos:position pos:line="72" pos:column="30"/></operator><name><name pos:line="72" pos:column="26">m<pos:position pos:line="72" pos:column="27"/></name><operator pos:line="72" pos:column="27">-&gt;<pos:position pos:line="72" pos:column="32"/></operator><name pos:line="72" pos:column="29">hdr<pos:position pos:line="72" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="73" pos:column="7">m<pos:position pos:line="73" pos:column="8"/></name><operator pos:line="73" pos:column="8">-&gt;<pos:position pos:line="73" pos:column="13"/></operator><name pos:line="73" pos:column="10">parts<pos:position pos:line="73" pos:column="15"/></name></name> <operator pos:line="73" pos:column="16">=<pos:position pos:line="73" pos:column="17"/></operator> <name pos:line="73" pos:column="18">saved_parts<pos:position pos:line="73" pos:column="29"/></name></expr>;<pos:position pos:line="73" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="74" pos:column="7">m<pos:position pos:line="74" pos:column="8"/></name><operator pos:line="74" pos:column="8">-&gt;<pos:position pos:line="74" pos:column="13"/></operator><name pos:line="74" pos:column="10">hdr<pos:position pos:line="74" pos:column="13"/></name></name> <operator pos:line="74" pos:column="14">=<pos:position pos:line="74" pos:column="15"/></operator> <name pos:line="74" pos:column="16">saved_hdr<pos:position pos:line="74" pos:column="25"/></name></expr>;<pos:position pos:line="74" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="75" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="76" pos:column="5">safe_fclose<pos:position pos:line="76" pos:column="16"/></name> <argument_list pos:line="76" pos:column="17">(<argument><expr><operator pos:line="76" pos:column="18">&amp;<pos:position pos:line="76" pos:column="23"/></operator><name><name pos:line="76" pos:column="19">s<pos:position pos:line="76" pos:column="20"/></name><operator pos:line="76" pos:column="20">.<pos:position pos:line="76" pos:column="21"/></operator><name pos:line="76" pos:column="21">fpin<pos:position pos:line="76" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="77" pos:column="4"/></block></then></if>

  <return pos:line="79" pos:column="3">return <expr><operator pos:line="79" pos:column="10">(<pos:position pos:line="79" pos:column="11"/></operator><literal type="number" pos:line="79" pos:column="11">0<pos:position pos:line="79" pos:column="12"/></literal><operator pos:line="79" pos:column="12">)<pos:position pos:line="79" pos:column="13"/></operator></expr>;<pos:position pos:line="79" pos:column="14"/></return>
}<pos:position pos:line="80" pos:column="2"/></block></function></unit>

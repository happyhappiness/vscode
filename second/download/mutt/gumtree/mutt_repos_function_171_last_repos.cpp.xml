<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_171_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_unlink<pos:position pos:line="1" pos:column="17"/></name> <parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><specifier pos:line="1" pos:column="19">const<pos:position pos:line="1" pos:column="24"/></specifier> <name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">s<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">fd<pos:position pos:line="3" pos:column="9"/></name></decl>;<pos:position pos:line="3" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">flags<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">f<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">stat<pos:position pos:line="6" pos:column="14"/></name></name></type> <name pos:line="6" pos:column="15">sb<pos:position pos:line="6" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="19">sb2<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">buf<pos:position pos:line="7" pos:column="11"/></name><index pos:line="7" pos:column="11">[<expr><literal type="number" pos:line="7" pos:column="12">2048<pos:position pos:line="7" pos:column="16"/></literal></expr>]<pos:position pos:line="7" pos:column="17"/></index></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* Defend against symlink attacks */</comment>
  
<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef<pos:position pos:line="11" pos:column="7"/></cpp:directive> <name pos:line="11" pos:column="8">O_NOFOLLOW<pos:position pos:line="11" pos:column="18"/></name></cpp:ifdef> 
  <expr_stmt><expr><name pos:line="12" pos:column="3">flags<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <name pos:line="12" pos:column="11">O_RDWR<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">|<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="20">O_NOFOLLOW<pos:position pos:line="12" pos:column="30"/></name></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
<cpp:else pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">else<pos:position pos:line="13" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><name pos:line="14" pos:column="3">flags<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">=<pos:position pos:line="14" pos:column="10"/></operator> <name pos:line="14" pos:column="11">O_RDWR<pos:position pos:line="14" pos:column="17"/></name></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
  
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><call><name pos:line="17" pos:column="7">lstat<pos:position pos:line="17" pos:column="12"/></name> <argument_list pos:line="17" pos:column="13">(<argument><expr><name pos:line="17" pos:column="14">s<pos:position pos:line="17" pos:column="15"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="17">&amp;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="18">sb<pos:position pos:line="17" pos:column="20"/></name></expr></argument>)<pos:position pos:line="17" pos:column="21"/></argument_list></call> <operator pos:line="17" pos:column="22">==<pos:position pos:line="17" pos:column="24"/></operator> <literal type="number" pos:line="17" pos:column="25">0<pos:position pos:line="17" pos:column="26"/></literal> <operator pos:line="17" pos:column="27">&amp;&amp;<pos:position pos:line="17" pos:column="37"/></operator> <call><name pos:line="17" pos:column="30">S_ISREG<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name><name pos:line="17" pos:column="38">sb<pos:position pos:line="17" pos:column="40"/></name><operator pos:line="17" pos:column="40">.<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="41">st_mode<pos:position pos:line="17" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="50"/></condition><then pos:line="17" pos:column="50">
  <block pos:line="18" pos:column="3">{
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">fd<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <call><name pos:line="19" pos:column="15">open<pos:position pos:line="19" pos:column="19"/></name> <argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">s<pos:position pos:line="19" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="24">flags<pos:position pos:line="19" pos:column="29"/></name></expr></argument>)<pos:position pos:line="19" pos:column="30"/></argument_list></call><operator pos:line="19" pos:column="30">)<pos:position pos:line="19" pos:column="31"/></operator> <operator pos:line="19" pos:column="32">&lt;<pos:position pos:line="19" pos:column="36"/></operator> <literal type="number" pos:line="19" pos:column="34">0<pos:position pos:line="19" pos:column="35"/></literal></expr>)<pos:position pos:line="19" pos:column="36"/></condition><then pos:line="19" pos:column="36">
      <block type="pseudo"><return pos:line="20" pos:column="7">return;<pos:position pos:line="20" pos:column="14"/></return></block></then></if>
    
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><call><name pos:line="22" pos:column="10">fstat<pos:position pos:line="22" pos:column="15"/></name> <argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">fd<pos:position pos:line="22" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="21">&amp;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="22">sb2<pos:position pos:line="22" pos:column="25"/></name></expr></argument>)<pos:position pos:line="22" pos:column="26"/></argument_list></call> <operator pos:line="22" pos:column="27">!=<pos:position pos:line="22" pos:column="29"/></operator> <literal type="number" pos:line="22" pos:column="30">0<pos:position pos:line="22" pos:column="31"/></literal><operator pos:line="22" pos:column="31">)<pos:position pos:line="22" pos:column="32"/></operator> <operator pos:line="22" pos:column="33">||<pos:position pos:line="22" pos:column="35"/></operator> <operator pos:line="22" pos:column="36">!<pos:position pos:line="22" pos:column="37"/></operator><call><name pos:line="22" pos:column="37">S_ISREG<pos:position pos:line="22" pos:column="44"/></name> <argument_list pos:line="22" pos:column="45">(<argument><expr><name><name pos:line="22" pos:column="46">sb2<pos:position pos:line="22" pos:column="49"/></name><operator pos:line="22" pos:column="49">.<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="50">st_mode<pos:position pos:line="22" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call> 
	<operator pos:line="23" pos:column="9">||<pos:position pos:line="23" pos:column="11"/></operator> <operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><name><name pos:line="23" pos:column="13">sb<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">.<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="16">st_dev<pos:position pos:line="23" pos:column="22"/></name></name> <operator pos:line="23" pos:column="23">!=<pos:position pos:line="23" pos:column="25"/></operator> <name><name pos:line="23" pos:column="26">sb2<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">.<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="30">st_dev<pos:position pos:line="23" pos:column="36"/></name></name><operator pos:line="23" pos:column="36">)<pos:position pos:line="23" pos:column="37"/></operator> <operator pos:line="23" pos:column="38">||<pos:position pos:line="23" pos:column="40"/></operator> <operator pos:line="23" pos:column="41">(<pos:position pos:line="23" pos:column="42"/></operator><name><name pos:line="23" pos:column="42">sb<pos:position pos:line="23" pos:column="44"/></name><operator pos:line="23" pos:column="44">.<pos:position pos:line="23" pos:column="45"/></operator><name pos:line="23" pos:column="45">st_ino<pos:position pos:line="23" pos:column="51"/></name></name> <operator pos:line="23" pos:column="52">!=<pos:position pos:line="23" pos:column="54"/></operator> <name><name pos:line="23" pos:column="55">sb2<pos:position pos:line="23" pos:column="58"/></name><operator pos:line="23" pos:column="58">.<pos:position pos:line="23" pos:column="59"/></operator><name pos:line="23" pos:column="59">st_ino<pos:position pos:line="23" pos:column="65"/></name></name><operator pos:line="23" pos:column="65">)<pos:position pos:line="23" pos:column="66"/></operator></expr>)<pos:position pos:line="23" pos:column="67"/></condition><then pos:line="23" pos:column="67">
    <block pos:line="24" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">close<pos:position pos:line="25" pos:column="12"/></name> <argument_list pos:line="25" pos:column="13">(<argument><expr><name pos:line="25" pos:column="14">fd<pos:position pos:line="25" pos:column="16"/></name></expr></argument>)<pos:position pos:line="25" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="18"/></expr_stmt>
      <return pos:line="26" pos:column="7">return;<pos:position pos:line="26" pos:column="14"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
    
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">(<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">f<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <call><name pos:line="29" pos:column="14">fdopen<pos:position pos:line="29" pos:column="20"/></name> <argument_list pos:line="29" pos:column="21">(<argument><expr><name pos:line="29" pos:column="22">fd<pos:position pos:line="29" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="26">"r+"<pos:position pos:line="29" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="31"/></argument_list></call><operator pos:line="29" pos:column="31">)<pos:position pos:line="29" pos:column="32"/></operator></expr>)<pos:position pos:line="29" pos:column="33"/></condition><then pos:line="29" pos:column="33">
    <block pos:line="30" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">unlink<pos:position pos:line="31" pos:column="13"/></name> <argument_list pos:line="31" pos:column="14">(<argument><expr><name pos:line="31" pos:column="15">s<pos:position pos:line="31" pos:column="16"/></name></expr></argument>)<pos:position pos:line="31" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">memset<pos:position pos:line="32" pos:column="13"/></name> <argument_list pos:line="32" pos:column="14">(<argument><expr><name pos:line="32" pos:column="15">buf<pos:position pos:line="32" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="20">0<pos:position pos:line="32" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="23">sizeof <argument_list pos:line="32" pos:column="30">(<argument><expr><name pos:line="32" pos:column="31">buf<pos:position pos:line="32" pos:column="34"/></name></expr></argument>)<pos:position pos:line="32" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt>
      <while pos:line="33" pos:column="7">while <condition pos:line="33" pos:column="13">(<expr><name><name pos:line="33" pos:column="14">sb<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">.<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">st_size<pos:position pos:line="33" pos:column="24"/></name></name> <operator pos:line="33" pos:column="25">&gt;<pos:position pos:line="33" pos:column="29"/></operator> <literal type="number" pos:line="33" pos:column="27">0<pos:position pos:line="33" pos:column="28"/></literal></expr>)<pos:position pos:line="33" pos:column="29"/></condition>
      <block pos:line="34" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">fwrite<pos:position pos:line="35" pos:column="15"/></name> <argument_list pos:line="35" pos:column="16">(<argument><expr><name pos:line="35" pos:column="17">buf<pos:position pos:line="35" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="22">1<pos:position pos:line="35" pos:column="23"/></literal></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="25">MIN<pos:position pos:line="35" pos:column="28"/></name> <argument_list pos:line="35" pos:column="29">(<argument><expr><sizeof pos:line="35" pos:column="30">sizeof <argument_list pos:line="35" pos:column="37">(<argument><expr><name pos:line="35" pos:column="38">buf<pos:position pos:line="35" pos:column="41"/></name></expr></argument>)<pos:position pos:line="35" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="44">sb<pos:position pos:line="35" pos:column="46"/></name><operator pos:line="35" pos:column="46">.<pos:position pos:line="35" pos:column="47"/></operator><name pos:line="35" pos:column="47">st_size<pos:position pos:line="35" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="35" pos:column="57">f<pos:position pos:line="35" pos:column="58"/></name></expr></argument>)<pos:position pos:line="35" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="36" pos:column="9">sb<pos:position pos:line="36" pos:column="11"/></name><operator pos:line="36" pos:column="11">.<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="12">st_size<pos:position pos:line="36" pos:column="19"/></name></name> <operator pos:line="36" pos:column="20">-=<pos:position pos:line="36" pos:column="22"/></operator> <call><name pos:line="36" pos:column="23">MIN<pos:position pos:line="36" pos:column="26"/></name> <argument_list pos:line="36" pos:column="27">(<argument><expr><sizeof pos:line="36" pos:column="28">sizeof <argument_list pos:line="36" pos:column="35">(<argument><expr><name pos:line="36" pos:column="36">buf<pos:position pos:line="36" pos:column="39"/></name></expr></argument>)<pos:position pos:line="36" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="42">sb<pos:position pos:line="36" pos:column="44"/></name><operator pos:line="36" pos:column="44">.<pos:position pos:line="36" pos:column="45"/></operator><name pos:line="36" pos:column="45">st_size<pos:position pos:line="36" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="54"/></expr_stmt>
      }<pos:position pos:line="37" pos:column="8"/></block></while>
      <expr_stmt><expr><call><name pos:line="38" pos:column="7">safe_fclose<pos:position pos:line="38" pos:column="18"/></name> <argument_list pos:line="38" pos:column="19">(<argument><expr><operator pos:line="38" pos:column="20">&amp;<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="21">f<pos:position pos:line="38" pos:column="22"/></name></expr></argument>)<pos:position pos:line="38" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

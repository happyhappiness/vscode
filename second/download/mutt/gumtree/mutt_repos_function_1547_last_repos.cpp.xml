<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1547_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mh_mkstemp<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">CONTEXT<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type> <name pos:line="1" pos:column="34">dest<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">FILE<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier><modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type> <name pos:line="1" pos:column="48">fp<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier><modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">tgt<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">fd<pos:position pos:line="3" pos:column="9"/></name></decl>;<pos:position pos:line="3" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">path<pos:position pos:line="4" pos:column="12"/></name><index pos:line="4" pos:column="12">[<expr><name pos:line="4" pos:column="13">_POSIX_PATH_MAX<pos:position pos:line="4" pos:column="28"/></name></expr>]<pos:position pos:line="4" pos:column="29"/></index></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">mode_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">omask<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">omask<pos:position pos:line="7" pos:column="8"/></name> <operator pos:line="7" pos:column="9">=<pos:position pos:line="7" pos:column="10"/></operator> <call><name pos:line="7" pos:column="11">umask<pos:position pos:line="7" pos:column="16"/></name> <argument_list pos:line="7" pos:column="17">(<argument><expr><call><name pos:line="7" pos:column="18">mh_umask<pos:position pos:line="7" pos:column="26"/></name> <argument_list pos:line="7" pos:column="27">(<argument><expr><name pos:line="7" pos:column="28">dest<pos:position pos:line="7" pos:column="32"/></name></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>
  <macro><name pos:line="8" pos:column="3">FOREVER<pos:position pos:line="8" pos:column="10"/></name></macro>
  <block pos:line="9" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">snprintf<pos:position pos:line="10" pos:column="13"/></name> <argument_list pos:line="10" pos:column="14">(<argument><expr><name pos:line="10" pos:column="15">path<pos:position pos:line="10" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="21">_POSIX_PATH_MAX<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="38">"%s/.mutt-%s-%d-%d"<pos:position pos:line="10" pos:column="57"/></literal></expr></argument>,
	      <argument><expr><name><name pos:line="11" pos:column="15">dest<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">path<pos:position pos:line="11" pos:column="25"/></name></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="27">NONULL<pos:position pos:line="11" pos:column="33"/></name> <argument_list pos:line="11" pos:column="34">(<argument><expr><name pos:line="11" pos:column="35">Hostname<pos:position pos:line="11" pos:column="43"/></name></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="11" pos:column="46">(<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="47">int<pos:position pos:line="11" pos:column="50"/></name><operator pos:line="11" pos:column="50">)<pos:position pos:line="11" pos:column="51"/></operator> <call><name pos:line="11" pos:column="52">getpid<pos:position pos:line="11" pos:column="58"/></name> <argument_list pos:line="11" pos:column="59">()<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="11" pos:column="63">Counter<pos:position pos:line="11" pos:column="70"/></name><operator pos:line="11" pos:column="70">++<pos:position pos:line="11" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="11" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="74"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">fd<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <call><name pos:line="12" pos:column="15">open<pos:position pos:line="12" pos:column="19"/></name> <argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">path<pos:position pos:line="12" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="27">O_WRONLY<pos:position pos:line="12" pos:column="35"/></name> <operator pos:line="12" pos:column="36">|<pos:position pos:line="12" pos:column="37"/></operator> <name pos:line="12" pos:column="38">O_EXCL<pos:position pos:line="12" pos:column="44"/></name> <operator pos:line="12" pos:column="45">|<pos:position pos:line="12" pos:column="46"/></operator> <name pos:line="12" pos:column="47">O_CREAT<pos:position pos:line="12" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="56">0666<pos:position pos:line="12" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="61"/></argument_list></call><operator pos:line="12" pos:column="61">)<pos:position pos:line="12" pos:column="62"/></operator> <operator pos:line="12" pos:column="63">==<pos:position pos:line="12" pos:column="65"/></operator> <operator pos:line="12" pos:column="66">-<pos:position pos:line="12" pos:column="67"/></operator><literal type="number" pos:line="12" pos:column="67">1<pos:position pos:line="12" pos:column="68"/></literal></expr>)<pos:position pos:line="12" pos:column="69"/></condition><then pos:line="12" pos:column="69">
    <block pos:line="13" pos:column="5">{
      <if pos:line="14" pos:column="7">if <condition pos:line="14" pos:column="10">(<expr><name pos:line="14" pos:column="11">errno<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">!=<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="20">EEXIST<pos:position pos:line="14" pos:column="26"/></name></expr>)<pos:position pos:line="14" pos:column="27"/></condition><then pos:line="14" pos:column="27">
      <block pos:line="15" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">mutt_perror<pos:position pos:line="16" pos:column="20"/></name> <argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">path<pos:position pos:line="16" pos:column="26"/></name></expr></argument>)<pos:position pos:line="16" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">umask<pos:position pos:line="17" pos:column="14"/></name> <argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">omask<pos:position pos:line="17" pos:column="21"/></name></expr></argument>)<pos:position pos:line="17" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>
	<return pos:line="18" pos:column="9">return <expr><operator pos:line="18" pos:column="16">-<pos:position pos:line="18" pos:column="17"/></operator><literal type="number" pos:line="18" pos:column="17">1<pos:position pos:line="18" pos:column="18"/></literal></expr>;<pos:position pos:line="18" pos:column="19"/></return>
      }<pos:position pos:line="19" pos:column="8"/></block></then></if>
    }<pos:position pos:line="20" pos:column="6"/></block></then>
    <else pos:line="21" pos:column="5">else
    <block pos:line="22" pos:column="5">{
      <expr_stmt><expr><operator pos:line="23" pos:column="7">*<pos:position pos:line="23" pos:column="8"/></operator><name pos:line="23" pos:column="8">tgt<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <call><name pos:line="23" pos:column="14">safe_strdup<pos:position pos:line="23" pos:column="25"/></name> <argument_list pos:line="23" pos:column="26">(<argument><expr><name pos:line="23" pos:column="27">path<pos:position pos:line="23" pos:column="31"/></name></expr></argument>)<pos:position pos:line="23" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="33"/></expr_stmt>
      <break pos:line="24" pos:column="7">break;<pos:position pos:line="24" pos:column="13"/></break>
    }<pos:position pos:line="25" pos:column="6"/></block></else></if>
  }<pos:position pos:line="26" pos:column="4"/></block>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">umask<pos:position pos:line="27" pos:column="8"/></name> <argument_list pos:line="27" pos:column="9">(<argument><expr><name pos:line="27" pos:column="10">omask<pos:position pos:line="27" pos:column="15"/></name></expr></argument>)<pos:position pos:line="27" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="17"/></expr_stmt>

  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><operator pos:line="29" pos:column="7">(<pos:position pos:line="29" pos:column="8"/></operator><operator pos:line="29" pos:column="8">*<pos:position pos:line="29" pos:column="9"/></operator><name pos:line="29" pos:column="9">fp<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <call><name pos:line="29" pos:column="14">fdopen<pos:position pos:line="29" pos:column="20"/></name> <argument_list pos:line="29" pos:column="21">(<argument><expr><name pos:line="29" pos:column="22">fd<pos:position pos:line="29" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="26">"w"<pos:position pos:line="29" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="30"/></argument_list></call><operator pos:line="29" pos:column="30">)<pos:position pos:line="29" pos:column="31"/></operator> <operator pos:line="29" pos:column="32">==<pos:position pos:line="29" pos:column="34"/></operator> <name pos:line="29" pos:column="35">NULL<pos:position pos:line="29" pos:column="39"/></name></expr>)<pos:position pos:line="29" pos:column="40"/></condition><then pos:line="29" pos:column="40">
  <block pos:line="30" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">FREE<pos:position pos:line="31" pos:column="9"/></name> <argument_list pos:line="31" pos:column="10">(<argument><expr><name pos:line="31" pos:column="11">tgt<pos:position pos:line="31" pos:column="14"/></name></expr></argument>)<pos:position pos:line="31" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="16"/></expr_stmt>		<comment type="block" pos:line="31" pos:column="25">/* __FREE_CHECKED__ */</comment>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">close<pos:position pos:line="32" pos:column="10"/></name> <argument_list pos:line="32" pos:column="11">(<argument><expr><name pos:line="32" pos:column="12">fd<pos:position pos:line="32" pos:column="14"/></name></expr></argument>)<pos:position pos:line="32" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">unlink<pos:position pos:line="33" pos:column="11"/></name> <argument_list pos:line="33" pos:column="12">(<argument><expr><name pos:line="33" pos:column="13">path<pos:position pos:line="33" pos:column="17"/></name></expr></argument>)<pos:position pos:line="33" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="19"/></expr_stmt>
    <return pos:line="34" pos:column="5">return <expr><operator pos:line="34" pos:column="12">(<pos:position pos:line="34" pos:column="13"/></operator><operator pos:line="34" pos:column="13">-<pos:position pos:line="34" pos:column="14"/></operator><literal type="number" pos:line="34" pos:column="14">1<pos:position pos:line="34" pos:column="15"/></literal><operator pos:line="34" pos:column="15">)<pos:position pos:line="34" pos:column="16"/></operator></expr>;<pos:position pos:line="34" pos:column="17"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <return pos:line="37" pos:column="3">return <expr><literal type="number" pos:line="37" pos:column="10">0<pos:position pos:line="37" pos:column="11"/></literal></expr>;<pos:position pos:line="37" pos:column="12"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

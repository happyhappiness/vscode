<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1182_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name> <parameter_list pos:line="1" pos:column="10">(<parameter><decl><type><name pos:line="1" pos:column="11">int<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">argc<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier><modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">argv<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">p<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">utsname<pos:position pos:line="5" pos:column="17"/></name></name></type> <name pos:line="5" pos:column="18">utsname<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* first, drop privileges */</comment>
  
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><call><name pos:line="9" pos:column="7">dotlock_init_privs<pos:position pos:line="9" pos:column="25"/></name> <argument_list pos:line="9" pos:column="26">()<pos:position pos:line="9" pos:column="28"/></argument_list></call> <operator pos:line="9" pos:column="29">==<pos:position pos:line="9" pos:column="31"/></operator> <operator pos:line="9" pos:column="32">-<pos:position pos:line="9" pos:column="33"/></operator><literal type="number" pos:line="9" pos:column="33">1<pos:position pos:line="9" pos:column="34"/></literal></expr>)<pos:position pos:line="9" pos:column="35"/></condition><then pos:line="9" pos:column="35">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">DL_EX_ERROR<pos:position pos:line="10" pos:column="23"/></name></expr>;<pos:position pos:line="10" pos:column="24"/></return></block></then></if>


  <comment type="block" pos:line="13" pos:column="3">/* determine the system's host name */</comment>
  
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">uname<pos:position pos:line="15" pos:column="8"/></name> <argument_list pos:line="15" pos:column="9">(<argument><expr><operator pos:line="15" pos:column="10">&amp;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="11">utsname<pos:position pos:line="15" pos:column="18"/></name></expr></argument>)<pos:position pos:line="15" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><operator pos:line="16" pos:column="7">!<pos:position pos:line="16" pos:column="8"/></operator><operator pos:line="16" pos:column="8">(<pos:position pos:line="16" pos:column="9"/></operator><name pos:line="16" pos:column="9">Hostname<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <call><name pos:line="16" pos:column="20">strdup<pos:position pos:line="16" pos:column="26"/></name> <argument_list pos:line="16" pos:column="27">(<argument><expr><name><name pos:line="16" pos:column="28">utsname<pos:position pos:line="16" pos:column="35"/></name><operator pos:line="16" pos:column="35">.<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="36">nodename<pos:position pos:line="16" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call><operator pos:line="16" pos:column="45">)<pos:position pos:line="16" pos:column="46"/></operator></expr>)<pos:position pos:line="16" pos:column="47"/></condition><then pos:line="16" pos:column="47">	<comment type="block" pos:line="16" pos:column="49">/* __MEM_CHECKED__ */</comment>
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">DL_EX_ERROR<pos:position pos:line="17" pos:column="23"/></name></expr>;<pos:position pos:line="17" pos:column="24"/></return></block></then></if>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">(<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">p<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <call><name pos:line="18" pos:column="12">strchr<pos:position pos:line="18" pos:column="18"/></name> <argument_list pos:line="18" pos:column="19">(<argument><expr><name pos:line="18" pos:column="20">Hostname<pos:position pos:line="18" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="18" pos:column="30">'.'<pos:position pos:line="18" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="34"/></argument_list></call><operator pos:line="18" pos:column="34">)<pos:position pos:line="18" pos:column="35"/></operator></expr>)<pos:position pos:line="18" pos:column="36"/></condition><then pos:line="18" pos:column="36">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="19" pos:column="5">*<pos:position pos:line="19" pos:column="6"/></operator><name pos:line="19" pos:column="6">p<pos:position pos:line="19" pos:column="7"/></name> <operator pos:line="19" pos:column="8">=<pos:position pos:line="19" pos:column="9"/></operator> <literal type="char" pos:line="19" pos:column="10">'\0'<pos:position pos:line="19" pos:column="14"/></literal></expr>;<pos:position pos:line="19" pos:column="15"/></expr_stmt></block></then></if>


  <comment type="block" pos:line="22" pos:column="3">/* parse the command line options. */</comment>
  <expr_stmt><expr><name pos:line="23" pos:column="3">DotlockFlags<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <literal type="number" pos:line="23" pos:column="18">0<pos:position pos:line="23" pos:column="19"/></literal></expr>;<pos:position pos:line="23" pos:column="20"/></expr_stmt>
  
  <while pos:line="25" pos:column="3">while <condition pos:line="25" pos:column="9">(<expr><operator pos:line="25" pos:column="10">(<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="11">i<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">=<pos:position pos:line="25" pos:column="14"/></operator> <call><name pos:line="25" pos:column="15">getopt<pos:position pos:line="25" pos:column="21"/></name> <argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">argc<pos:position pos:line="25" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="29">argv<pos:position pos:line="25" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="35">"dtfupr:"<pos:position pos:line="25" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call><operator pos:line="25" pos:column="45">)<pos:position pos:line="25" pos:column="46"/></operator> <operator pos:line="25" pos:column="47">!=<pos:position pos:line="25" pos:column="49"/></operator> <name pos:line="25" pos:column="50">EOF<pos:position pos:line="25" pos:column="53"/></name></expr>)<pos:position pos:line="25" pos:column="54"/></condition>
  <block pos:line="26" pos:column="3">{
    <switch pos:line="27" pos:column="5">switch <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">i<pos:position pos:line="27" pos:column="14"/></name></expr>)<pos:position pos:line="27" pos:column="15"/></condition>
    <block pos:line="28" pos:column="5">{
      <comment type="block" pos:line="29" pos:column="7">/* actions, mutually exclusive */</comment>
      <case pos:line="30" pos:column="7">case <expr><literal type="char" pos:line="30" pos:column="12">'t'<pos:position pos:line="30" pos:column="15"/></literal></expr>:<pos:position pos:line="30" pos:column="16"/></case> <expr_stmt><expr><call><name pos:line="30" pos:column="17">check_flags<pos:position pos:line="30" pos:column="28"/></name> <argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">DotlockFlags<pos:position pos:line="30" pos:column="42"/></name></expr></argument>)<pos:position pos:line="30" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt> <expr_stmt><expr><name pos:line="30" pos:column="45">DotlockFlags<pos:position pos:line="30" pos:column="57"/></name> <operator pos:line="30" pos:column="58">|=<pos:position pos:line="30" pos:column="60"/></operator> <name pos:line="30" pos:column="61">DL_FL_TRY<pos:position pos:line="30" pos:column="70"/></name></expr>;<pos:position pos:line="30" pos:column="71"/></expr_stmt> <break pos:line="30" pos:column="72">break;<pos:position pos:line="30" pos:column="78"/></break>
      <case pos:line="31" pos:column="7">case <expr><literal type="char" pos:line="31" pos:column="12">'d'<pos:position pos:line="31" pos:column="15"/></literal></expr>:<pos:position pos:line="31" pos:column="16"/></case> <expr_stmt><expr><call><name pos:line="31" pos:column="17">check_flags<pos:position pos:line="31" pos:column="28"/></name> <argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">DotlockFlags<pos:position pos:line="31" pos:column="42"/></name></expr></argument>)<pos:position pos:line="31" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="44"/></expr_stmt> <expr_stmt><expr><name pos:line="31" pos:column="45">DotlockFlags<pos:position pos:line="31" pos:column="57"/></name> <operator pos:line="31" pos:column="58">|=<pos:position pos:line="31" pos:column="60"/></operator> <name pos:line="31" pos:column="61">DL_FL_UNLINK<pos:position pos:line="31" pos:column="73"/></name></expr>;<pos:position pos:line="31" pos:column="74"/></expr_stmt> <break pos:line="31" pos:column="75">break;<pos:position pos:line="31" pos:column="81"/></break>
      <case pos:line="32" pos:column="7">case <expr><literal type="char" pos:line="32" pos:column="12">'u'<pos:position pos:line="32" pos:column="15"/></literal></expr>:<pos:position pos:line="32" pos:column="16"/></case> <expr_stmt><expr><call><name pos:line="32" pos:column="17">check_flags<pos:position pos:line="32" pos:column="28"/></name> <argument_list pos:line="32" pos:column="29">(<argument><expr><name pos:line="32" pos:column="30">DotlockFlags<pos:position pos:line="32" pos:column="42"/></name></expr></argument>)<pos:position pos:line="32" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="44"/></expr_stmt> <expr_stmt><expr><name pos:line="32" pos:column="45">DotlockFlags<pos:position pos:line="32" pos:column="57"/></name> <operator pos:line="32" pos:column="58">|=<pos:position pos:line="32" pos:column="60"/></operator> <name pos:line="32" pos:column="61">DL_FL_UNLOCK<pos:position pos:line="32" pos:column="73"/></name></expr>;<pos:position pos:line="32" pos:column="74"/></expr_stmt> <break pos:line="32" pos:column="75">break;<pos:position pos:line="32" pos:column="81"/></break>

      <comment type="block" pos:line="34" pos:column="7">/* other flags */</comment>
      <case pos:line="35" pos:column="7">case <expr><literal type="char" pos:line="35" pos:column="12">'f'<pos:position pos:line="35" pos:column="15"/></literal></expr>:<pos:position pos:line="35" pos:column="16"/></case> <expr_stmt><expr><name pos:line="35" pos:column="17">DotlockFlags<pos:position pos:line="35" pos:column="29"/></name> <operator pos:line="35" pos:column="30">|=<pos:position pos:line="35" pos:column="32"/></operator> <name pos:line="35" pos:column="33">DL_FL_FORCE<pos:position pos:line="35" pos:column="44"/></name></expr>;<pos:position pos:line="35" pos:column="45"/></expr_stmt> <break pos:line="35" pos:column="46">break;<pos:position pos:line="35" pos:column="52"/></break>
      <case pos:line="36" pos:column="7">case <expr><literal type="char" pos:line="36" pos:column="12">'p'<pos:position pos:line="36" pos:column="15"/></literal></expr>:<pos:position pos:line="36" pos:column="16"/></case> <expr_stmt><expr><name pos:line="36" pos:column="17">DotlockFlags<pos:position pos:line="36" pos:column="29"/></name> <operator pos:line="36" pos:column="30">|=<pos:position pos:line="36" pos:column="32"/></operator> <name pos:line="36" pos:column="33">DL_FL_USEPRIV<pos:position pos:line="36" pos:column="46"/></name></expr>;<pos:position pos:line="36" pos:column="47"/></expr_stmt> <break pos:line="36" pos:column="48">break;<pos:position pos:line="36" pos:column="54"/></break>
      <case pos:line="37" pos:column="7">case <expr><literal type="char" pos:line="37" pos:column="12">'r'<pos:position pos:line="37" pos:column="15"/></literal></expr>:<pos:position pos:line="37" pos:column="16"/></case> <expr_stmt><expr><name pos:line="37" pos:column="17">DotlockFlags<pos:position pos:line="37" pos:column="29"/></name> <operator pos:line="37" pos:column="30">|=<pos:position pos:line="37" pos:column="32"/></operator> <name pos:line="37" pos:column="33">DL_FL_RETRY<pos:position pos:line="37" pos:column="44"/></name></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt> <expr_stmt><expr><name pos:line="37" pos:column="46">Retry<pos:position pos:line="37" pos:column="51"/></name> <operator pos:line="37" pos:column="52">=<pos:position pos:line="37" pos:column="53"/></operator> <call><name pos:line="37" pos:column="54">atoi<pos:position pos:line="37" pos:column="58"/></name> <argument_list pos:line="37" pos:column="59">(<argument><expr><name pos:line="37" pos:column="60">optarg<pos:position pos:line="37" pos:column="66"/></name></expr></argument>)<pos:position pos:line="37" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="68"/></expr_stmt> <break pos:line="37" pos:column="69">break;<pos:position pos:line="37" pos:column="75"/></break>
      
      <default pos:line="39" pos:column="7">default:<pos:position pos:line="39" pos:column="15"/></default> <expr_stmt><expr><call><name pos:line="39" pos:column="16">usage<pos:position pos:line="39" pos:column="21"/></name> <argument_list pos:line="39" pos:column="22">(<argument><expr><name><name pos:line="39" pos:column="23">argv<pos:position pos:line="39" pos:column="27"/></name><index pos:line="39" pos:column="27">[<expr><literal type="number" pos:line="39" pos:column="28">0<pos:position pos:line="39" pos:column="29"/></literal></expr>]<pos:position pos:line="39" pos:column="30"/></index></name></expr></argument>)<pos:position pos:line="39" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></switch>
  }<pos:position pos:line="41" pos:column="4"/></block></while>

  <if pos:line="43" pos:column="3">if <condition pos:line="43" pos:column="6">(<expr><name pos:line="43" pos:column="7">optind<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">==<pos:position pos:line="43" pos:column="16"/></operator> <name pos:line="43" pos:column="17">argc<pos:position pos:line="43" pos:column="21"/></name> <operator pos:line="43" pos:column="22">||<pos:position pos:line="43" pos:column="24"/></operator> <name pos:line="43" pos:column="25">Retry<pos:position pos:line="43" pos:column="30"/></name> <operator pos:line="43" pos:column="31">&lt;<pos:position pos:line="43" pos:column="35"/></operator> <literal type="number" pos:line="43" pos:column="33">0<pos:position pos:line="43" pos:column="34"/></literal></expr>)<pos:position pos:line="43" pos:column="35"/></condition><then pos:line="43" pos:column="35">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="5">usage<pos:position pos:line="44" pos:column="10"/></name> <argument_list pos:line="44" pos:column="11">(<argument><expr><name><name pos:line="44" pos:column="12">argv<pos:position pos:line="44" pos:column="16"/></name><index pos:line="44" pos:column="16">[<expr><literal type="number" pos:line="44" pos:column="17">0<pos:position pos:line="44" pos:column="18"/></literal></expr>]<pos:position pos:line="44" pos:column="19"/></index></name></expr></argument>)<pos:position pos:line="44" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="21"/></expr_stmt></block></then></if>

  <return pos:line="46" pos:column="3">return <expr><call><name pos:line="46" pos:column="10">dotlock_dispatch<pos:position pos:line="46" pos:column="26"/></name> <argument_list pos:line="46" pos:column="27">(<argument><expr><name><name pos:line="46" pos:column="28">argv<pos:position pos:line="46" pos:column="32"/></name><index pos:line="46" pos:column="32">[<expr><name pos:line="46" pos:column="33">optind<pos:position pos:line="46" pos:column="39"/></name></expr>]<pos:position pos:line="46" pos:column="40"/></index></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="42">-<pos:position pos:line="46" pos:column="43"/></operator><literal type="number" pos:line="46" pos:column="43">1<pos:position pos:line="46" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="46"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

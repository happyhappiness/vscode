<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2085_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">imap_auth_res_t<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">imap_auth_login<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">IMAP_DATA<pos:position pos:line="1" pos:column="43"/></name><modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type> <name pos:line="1" pos:column="45">idata<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name><modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type> <name pos:line="1" pos:column="64">method<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">q_user<pos:position pos:line="3" pos:column="14"/></name><index pos:line="3" pos:column="14">[<expr><name pos:line="3" pos:column="15">SHORT_STRING<pos:position pos:line="3" pos:column="27"/></name></expr>]<pos:position pos:line="3" pos:column="28"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="3" pos:column="30">q_pass<pos:position pos:line="3" pos:column="36"/></name><index pos:line="3" pos:column="36">[<expr><name pos:line="3" pos:column="37">SHORT_STRING<pos:position pos:line="3" pos:column="49"/></name></expr>]<pos:position pos:line="3" pos:column="50"/></index></name></decl>;<pos:position pos:line="3" pos:column="51"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buf<pos:position pos:line="4" pos:column="11"/></name><index pos:line="4" pos:column="11">[<expr><name pos:line="4" pos:column="12">STRING<pos:position pos:line="4" pos:column="18"/></name></expr>]<pos:position pos:line="4" pos:column="19"/></index></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">rc<pos:position pos:line="5" pos:column="9"/></name></decl>;<pos:position pos:line="5" pos:column="10"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><call><name pos:line="7" pos:column="7">mutt_bit_isset<pos:position pos:line="7" pos:column="21"/></name> <argument_list pos:line="7" pos:column="22">(<argument><expr><name><name pos:line="7" pos:column="23">idata<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">-&gt;<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="30">capabilities<pos:position pos:line="7" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="44">LOGINDISABLED<pos:position pos:line="7" pos:column="57"/></name></expr></argument>)<pos:position pos:line="7" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="59"/></condition><then pos:line="7" pos:column="59">
  <block pos:line="8" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">mutt_message<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">_<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><literal type="string" pos:line="9" pos:column="20">"LOGIN disabled on this server."<pos:position pos:line="9" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></decl>;<pos:position pos:line="9" pos:column="54"/></decl_stmt>
    <return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">IMAP_AUTH_UNAVAIL<pos:position pos:line="10" pos:column="29"/></name></expr>;<pos:position pos:line="10" pos:column="30"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><call><name pos:line="13" pos:column="7">mutt_account_getuser<pos:position pos:line="13" pos:column="27"/></name> <argument_list pos:line="13" pos:column="28">(<argument><expr><operator pos:line="13" pos:column="29">&amp;<pos:position pos:line="13" pos:column="34"/></operator><name><name pos:line="13" pos:column="30">idata<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">-&gt;<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="37">conn<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">-&gt;<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="43">account<pos:position pos:line="13" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="52"/></condition><then pos:line="13" pos:column="52">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">IMAP_AUTH_FAILURE<pos:position pos:line="14" pos:column="29"/></name></expr>;<pos:position pos:line="14" pos:column="30"/></return></block></then></if>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><call><name pos:line="15" pos:column="7">mutt_account_getpass<pos:position pos:line="15" pos:column="27"/></name> <argument_list pos:line="15" pos:column="28">(<argument><expr><operator pos:line="15" pos:column="29">&amp;<pos:position pos:line="15" pos:column="34"/></operator><name><name pos:line="15" pos:column="30">idata<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">-&gt;<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="37">conn<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">-&gt;<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="43">account<pos:position pos:line="15" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="52"/></condition><then pos:line="15" pos:column="52">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">IMAP_AUTH_FAILURE<pos:position pos:line="16" pos:column="29"/></name></expr>;<pos:position pos:line="16" pos:column="30"/></return></block></then></if>

  <decl_stmt><decl><type><name pos:line="18" pos:column="3">mutt_message<pos:position pos:line="18" pos:column="15"/></name></type> <name pos:line="18" pos:column="16">_<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><literal type="string" pos:line="18" pos:column="18">"Logging in..."<pos:position pos:line="18" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="34"/></argument_list></decl>;<pos:position pos:line="18" pos:column="35"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">imap_quote_string<pos:position pos:line="20" pos:column="20"/></name> <argument_list pos:line="20" pos:column="21">(<argument><expr><name pos:line="20" pos:column="22">q_user<pos:position pos:line="20" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="30">sizeof <argument_list pos:line="20" pos:column="37">(<argument><expr><name pos:line="20" pos:column="38">q_user<pos:position pos:line="20" pos:column="44"/></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="47">idata<pos:position pos:line="20" pos:column="52"/></name><operator pos:line="20" pos:column="52">-&gt;<pos:position pos:line="20" pos:column="57"/></operator><name pos:line="20" pos:column="54">conn<pos:position pos:line="20" pos:column="58"/></name><operator pos:line="20" pos:column="58">-&gt;<pos:position pos:line="20" pos:column="63"/></operator><name pos:line="20" pos:column="60">account<pos:position pos:line="20" pos:column="67"/></name><operator pos:line="20" pos:column="67">.<pos:position pos:line="20" pos:column="68"/></operator><name pos:line="20" pos:column="68">user<pos:position pos:line="20" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="74"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">imap_quote_string<pos:position pos:line="21" pos:column="20"/></name> <argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">q_pass<pos:position pos:line="21" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="30">sizeof <argument_list pos:line="21" pos:column="37">(<argument><expr><name pos:line="21" pos:column="38">q_pass<pos:position pos:line="21" pos:column="44"/></name></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="47">idata<pos:position pos:line="21" pos:column="52"/></name><operator pos:line="21" pos:column="52">-&gt;<pos:position pos:line="21" pos:column="57"/></operator><name pos:line="21" pos:column="54">conn<pos:position pos:line="21" pos:column="58"/></name><operator pos:line="21" pos:column="58">-&gt;<pos:position pos:line="21" pos:column="63"/></operator><name pos:line="21" pos:column="60">account<pos:position pos:line="21" pos:column="67"/></name><operator pos:line="21" pos:column="67">.<pos:position pos:line="21" pos:column="68"/></operator><name pos:line="21" pos:column="68">pass<pos:position pos:line="21" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="74"/></expr_stmt>

<cpp:ifdef pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">ifdef<pos:position pos:line="23" pos:column="7"/></cpp:directive> <name pos:line="23" pos:column="8">DEBUG<pos:position pos:line="23" pos:column="13"/></name></cpp:ifdef>
  <comment type="block" pos:line="24" pos:column="3">/* don't print the password unless we're at the ungodly debugging level
   * of 5 or higher */</comment>

  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">debuglevel<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">&lt;<pos:position pos:line="27" pos:column="22"/></operator> <name pos:line="27" pos:column="20">IMAP_LOG_PASS<pos:position pos:line="27" pos:column="33"/></name></expr>)<pos:position pos:line="27" pos:column="34"/></condition><then pos:line="27" pos:column="34">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="5">dprint<pos:position pos:line="28" pos:column="11"/></name> <argument_list pos:line="28" pos:column="12">(<argument><expr><literal type="number" pos:line="28" pos:column="13">2<pos:position pos:line="28" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="28" pos:column="16">(<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">debugfile<pos:position pos:line="28" pos:column="26"/></name><operator pos:line="28" pos:column="26">,<pos:position pos:line="28" pos:column="27"/></operator> <literal type="string" pos:line="28" pos:column="28">"Sending LOGIN command for %s...\n"<pos:position pos:line="28" pos:column="63"/></literal><operator pos:line="28" pos:column="63">,<pos:position pos:line="28" pos:column="64"/></operator>
      <name><name pos:line="29" pos:column="7">idata<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">-&gt;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="14">conn<pos:position pos:line="29" pos:column="18"/></name><operator pos:line="29" pos:column="18">-&gt;<pos:position pos:line="29" pos:column="23"/></operator><name pos:line="29" pos:column="20">account<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">.<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="28">user<pos:position pos:line="29" pos:column="32"/></name></name><operator pos:line="29" pos:column="32">)<pos:position pos:line="29" pos:column="33"/></operator></expr></argument>)<pos:position pos:line="29" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="35"/></expr_stmt></block></then></if>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="32" pos:column="3">snprintf<pos:position pos:line="32" pos:column="11"/></name> <argument_list pos:line="32" pos:column="12">(<argument><expr><name pos:line="32" pos:column="13">buf<pos:position pos:line="32" pos:column="16"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="18">sizeof <argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">buf<pos:position pos:line="32" pos:column="29"/></name></expr></argument>)<pos:position pos:line="32" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="32">"LOGIN %s %s"<pos:position pos:line="32" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="47">q_user<pos:position pos:line="32" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="55">q_pass<pos:position pos:line="32" pos:column="61"/></name></expr></argument>)<pos:position pos:line="32" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="63"/></expr_stmt>
  <expr_stmt><expr><name pos:line="33" pos:column="3">rc<pos:position pos:line="33" pos:column="5"/></name> <operator pos:line="33" pos:column="6">=<pos:position pos:line="33" pos:column="7"/></operator> <call><name pos:line="33" pos:column="8">imap_exec<pos:position pos:line="33" pos:column="17"/></name> <argument_list pos:line="33" pos:column="18">(<argument><expr><name pos:line="33" pos:column="19">idata<pos:position pos:line="33" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="26">buf<pos:position pos:line="33" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="31">IMAP_CMD_FAIL_OK<pos:position pos:line="33" pos:column="47"/></name> <operator pos:line="33" pos:column="48">|<pos:position pos:line="33" pos:column="49"/></operator> <name pos:line="33" pos:column="50">IMAP_CMD_PASS<pos:position pos:line="33" pos:column="63"/></name></expr></argument>)<pos:position pos:line="33" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="65"/></expr_stmt>
  
  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><operator pos:line="35" pos:column="7">!<pos:position pos:line="35" pos:column="8"/></operator><name pos:line="35" pos:column="8">rc<pos:position pos:line="35" pos:column="10"/></name></expr>)<pos:position pos:line="35" pos:column="11"/></condition><then pos:line="35" pos:column="11">
  <block pos:line="36" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">mutt_clear_error<pos:position pos:line="37" pos:column="21"/></name><argument_list pos:line="37" pos:column="21">()<pos:position pos:line="37" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="24"/></expr_stmt> <comment type="block" pos:line="37" pos:column="25">/* clear "Logging in...".  fixes #3524 */</comment>
    <return pos:line="38" pos:column="5">return <expr><name pos:line="38" pos:column="12">IMAP_AUTH_SUCCESS<pos:position pos:line="38" pos:column="29"/></name></expr>;<pos:position pos:line="38" pos:column="30"/></return>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="41" pos:column="3">mutt_error<pos:position pos:line="41" pos:column="13"/></name></type> <name pos:line="41" pos:column="14">_<pos:position pos:line="41" pos:column="15"/></name><argument_list pos:line="41" pos:column="15">(<argument><expr><literal type="string" pos:line="41" pos:column="16">"Login failed."<pos:position pos:line="41" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="32"/></argument_list></decl>;<pos:position pos:line="41" pos:column="33"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">mutt_sleep<pos:position pos:line="42" pos:column="13"/></name> <argument_list pos:line="42" pos:column="14">(<argument><expr><literal type="number" pos:line="42" pos:column="15">2<pos:position pos:line="42" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="18"/></expr_stmt>
  <return pos:line="43" pos:column="3">return <expr><name pos:line="43" pos:column="10">IMAP_AUTH_FAILURE<pos:position pos:line="43" pos:column="27"/></name></expr>;<pos:position pos:line="43" pos:column="28"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

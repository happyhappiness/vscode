<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_604_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_set_charset<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">charset<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buffer<pos:position pos:line="3" pos:column="14"/></name><index pos:line="3" pos:column="14">[<expr><name pos:line="3" pos:column="15">STRING<pos:position pos:line="3" pos:column="21"/></name></expr>]<pos:position pos:line="3" pos:column="22"/></index></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">mutt_canonical_charset<pos:position pos:line="5" pos:column="25"/></name> <argument_list pos:line="5" pos:column="26">(<argument><expr><name pos:line="5" pos:column="27">buffer<pos:position pos:line="5" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="35">sizeof <argument_list pos:line="5" pos:column="42">(<argument><expr><name pos:line="5" pos:column="43">buffer<pos:position pos:line="5" pos:column="49"/></name></expr></argument>)<pos:position pos:line="5" pos:column="50"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="5" pos:column="52">charset<pos:position pos:line="5" pos:column="59"/></name></expr></argument>)<pos:position pos:line="5" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="61"/></expr_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">Charset_is_utf8<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">=<pos:position pos:line="7" pos:column="20"/></operator> <literal type="number" pos:line="7" pos:column="21">0<pos:position pos:line="7" pos:column="22"/></literal></expr>;<pos:position pos:line="7" pos:column="23"/></expr_stmt>
<cpp:ifndef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifndef<pos:position pos:line="8" pos:column="8"/></cpp:directive> <name pos:line="8" pos:column="9">HAVE_WC_FUNCS<pos:position pos:line="8" pos:column="22"/></name></cpp:ifndef>
  <expr_stmt><expr><name pos:line="9" pos:column="3">charset_is_ja<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <literal type="number" pos:line="9" pos:column="19">0<pos:position pos:line="9" pos:column="20"/></literal></expr>;<pos:position pos:line="9" pos:column="21"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">charset_to_utf8<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">!=<pos:position pos:line="10" pos:column="25"/></operator> <call pos:line="10" pos:column="26">(<name pos:line="10" pos:column="27">iconv_t<pos:position pos:line="10" pos:column="34"/></name>)<argument_list pos:line="10" pos:column="35">(<argument><expr><operator pos:line="10" pos:column="36">-<pos:position pos:line="10" pos:column="37"/></operator><literal type="number" pos:line="10" pos:column="37">1<pos:position pos:line="10" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="40"/></condition><then pos:line="10" pos:column="40">
  <block pos:line="11" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">iconv_close<pos:position pos:line="12" pos:column="16"/></name> <argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">charset_to_utf8<pos:position pos:line="12" pos:column="33"/></name></expr></argument>)<pos:position pos:line="12" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">charset_to_utf8<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <call pos:line="13" pos:column="23">(<name pos:line="13" pos:column="24">iconv_t<pos:position pos:line="13" pos:column="31"/></name>)<argument_list pos:line="13" pos:column="32">(<argument><expr><operator pos:line="13" pos:column="33">-<pos:position pos:line="13" pos:column="34"/></operator><literal type="number" pos:line="13" pos:column="34">1<pos:position pos:line="13" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">charset_from_utf8<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">!=<pos:position pos:line="15" pos:column="27"/></operator> <call pos:line="15" pos:column="28">(<name pos:line="15" pos:column="29">iconv_t<pos:position pos:line="15" pos:column="36"/></name>)<argument_list pos:line="15" pos:column="37">(<argument><expr><operator pos:line="15" pos:column="38">-<pos:position pos:line="15" pos:column="39"/></operator><literal type="number" pos:line="15" pos:column="39">1<pos:position pos:line="15" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="42"/></condition><then pos:line="15" pos:column="42">
  <block pos:line="16" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">iconv_close<pos:position pos:line="17" pos:column="16"/></name> <argument_list pos:line="17" pos:column="17">(<argument><expr><name pos:line="17" pos:column="18">charset_from_utf8<pos:position pos:line="17" pos:column="35"/></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">charset_from_utf8<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">=<pos:position pos:line="18" pos:column="24"/></operator> <call pos:line="18" pos:column="25">(<name pos:line="18" pos:column="26">iconv_t<pos:position pos:line="18" pos:column="33"/></name>)<argument_list pos:line="18" pos:column="34">(<argument><expr><operator pos:line="18" pos:column="35">-<pos:position pos:line="18" pos:column="36"/></operator><literal type="number" pos:line="18" pos:column="36">1<pos:position pos:line="18" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><call><name pos:line="22" pos:column="7">mutt_is_utf8<pos:position pos:line="22" pos:column="19"/></name> <argument_list pos:line="22" pos:column="20">(<argument><expr><name pos:line="22" pos:column="21">buffer<pos:position pos:line="22" pos:column="27"/></name></expr></argument>)<pos:position pos:line="22" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="29"/></condition><then pos:line="22" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="5">Charset_is_utf8<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <literal type="number" pos:line="23" pos:column="23">1<pos:position pos:line="23" pos:column="24"/></literal></expr>;<pos:position pos:line="23" pos:column="25"/></expr_stmt></block></then>
<cpp:ifndef pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">ifndef<pos:position pos:line="24" pos:column="8"/></cpp:directive> <name pos:line="24" pos:column="9">HAVE_WC_FUNCS<pos:position pos:line="24" pos:column="22"/></name></cpp:ifndef>
  <elseif pos:line="25" pos:column="3">else <if pos:line="25" pos:column="8">if <condition pos:line="25" pos:column="11">(<expr><operator pos:line="25" pos:column="12">!<pos:position pos:line="25" pos:column="13"/></operator><call><name pos:line="25" pos:column="13">ascii_strcasecmp<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name pos:line="25" pos:column="30">buffer<pos:position pos:line="25" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="38">"euc-jp"<pos:position pos:line="25" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call> <operator pos:line="25" pos:column="48">||<pos:position pos:line="25" pos:column="50"/></operator> <operator pos:line="25" pos:column="51">!<pos:position pos:line="25" pos:column="52"/></operator><call><name pos:line="25" pos:column="52">ascii_strcasecmp<pos:position pos:line="25" pos:column="68"/></name><argument_list pos:line="25" pos:column="68">(<argument><expr><name pos:line="25" pos:column="69">buffer<pos:position pos:line="25" pos:column="75"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="77">"shift_jis"<pos:position pos:line="25" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="89"/></argument_list></call>
  	<operator pos:line="26" pos:column="9">||<pos:position pos:line="26" pos:column="11"/></operator> <operator pos:line="26" pos:column="12">!<pos:position pos:line="26" pos:column="13"/></operator><call><name pos:line="26" pos:column="13">ascii_strcasecmp<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">buffer<pos:position pos:line="26" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="38">"cp932"<pos:position pos:line="26" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="46"/></argument_list></call> <operator pos:line="26" pos:column="47">||<pos:position pos:line="26" pos:column="49"/></operator> <operator pos:line="26" pos:column="50">!<pos:position pos:line="26" pos:column="51"/></operator><call><name pos:line="26" pos:column="51">ascii_strcasecmp<pos:position pos:line="26" pos:column="67"/></name><argument_list pos:line="26" pos:column="67">(<argument><expr><name pos:line="26" pos:column="68">buffer<pos:position pos:line="26" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="76">"eucJP-ms"<pos:position pos:line="26" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="87"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="88"/></condition><then pos:line="26" pos:column="88">
  <block pos:line="27" pos:column="3">{
    <expr_stmt><expr><name pos:line="28" pos:column="5">charset_is_ja<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">=<pos:position pos:line="28" pos:column="20"/></operator> <literal type="number" pos:line="28" pos:column="21">1<pos:position pos:line="28" pos:column="22"/></literal></expr>;<pos:position pos:line="28" pos:column="23"/></expr_stmt>

    <comment type="block" pos:line="30" pos:column="5">/* Note flags=0 to skip charset-hooks: User masters the $charset
     * name, and we are sure of our "utf-8" constant. So there is no
     * possibility of wrong name that we would want to try to correct
     * with a charset-hook. Or rather: If $charset was wrong, we would
     * want to try to correct... $charset directly.
     */</comment>
    <expr_stmt><expr><name pos:line="36" pos:column="5">charset_to_utf8<pos:position pos:line="36" pos:column="20"/></name> <operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator> <call><name pos:line="36" pos:column="23">mutt_iconv_open<pos:position pos:line="36" pos:column="38"/></name> <argument_list pos:line="36" pos:column="39">(<argument><expr><literal type="string" pos:line="36" pos:column="40">"utf-8"<pos:position pos:line="36" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="49">charset<pos:position pos:line="36" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="58">0<pos:position pos:line="36" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><name pos:line="37" pos:column="5">charset_from_utf8<pos:position pos:line="37" pos:column="22"/></name> <operator pos:line="37" pos:column="23">=<pos:position pos:line="37" pos:column="24"/></operator> <call><name pos:line="37" pos:column="25">mutt_iconv_open<pos:position pos:line="37" pos:column="40"/></name> <argument_list pos:line="37" pos:column="41">(<argument><expr><name pos:line="37" pos:column="42">charset<pos:position pos:line="37" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="51">"utf-8"<pos:position pos:line="37" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="60">0<pos:position pos:line="37" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="63"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if></elseif></if>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">if<pos:position pos:line="41" pos:column="4"/></cpp:directive> <expr><call><name pos:line="41" pos:column="5">defined<pos:position pos:line="41" pos:column="12"/></name><argument_list pos:line="41" pos:column="12">(<argument><expr><name pos:line="41" pos:column="13">HAVE_BIND_TEXTDOMAIN_CODESET<pos:position pos:line="41" pos:column="41"/></name></expr></argument>)<pos:position pos:line="41" pos:column="42"/></argument_list></call> <operator pos:line="41" pos:column="43">&amp;&amp;<pos:position pos:line="41" pos:column="53"/></operator> <call><name pos:line="41" pos:column="46">defined<pos:position pos:line="41" pos:column="53"/></name><argument_list pos:line="41" pos:column="53">(<argument><expr><name pos:line="41" pos:column="54">ENABLE_NLS<pos:position pos:line="41" pos:column="64"/></name></expr></argument>)<pos:position pos:line="41" pos:column="65"/></argument_list></call></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">bind_textdomain_codeset<pos:position pos:line="42" pos:column="26"/></name><argument_list pos:line="42" pos:column="26">(<argument><expr><name pos:line="42" pos:column="27">PACKAGE<pos:position pos:line="42" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="36">buffer<pos:position pos:line="42" pos:column="42"/></name></expr></argument>)<pos:position pos:line="42" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="44"/></expr_stmt>
<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif<pos:position pos:line="43" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

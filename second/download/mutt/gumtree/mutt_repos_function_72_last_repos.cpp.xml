<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_72_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">edit_address<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">ADDRESS<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier><modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">a<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="39">/* const */</comment> <parameter><decl><type><name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">field<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buf<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">HUGE_STRING<pos:position pos:line="3" pos:column="23"/></name></expr>]<pos:position pos:line="3" pos:column="24"/></index></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">err<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name pos:line="4" pos:column="15">NULL<pos:position pos:line="4" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">idna_ok<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><literal type="number" pos:line="5" pos:column="17">0<pos:position pos:line="5" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  
  <do pos:line="7" pos:column="3">do
  <block pos:line="8" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">buf<pos:position pos:line="9" pos:column="8"/></name><index pos:line="9" pos:column="8">[<expr><literal type="number" pos:line="9" pos:column="9">0<pos:position pos:line="9" pos:column="10"/></literal></expr>]<pos:position pos:line="9" pos:column="11"/></index></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <literal type="number" pos:line="9" pos:column="14">0<pos:position pos:line="9" pos:column="15"/></literal></expr>;<pos:position pos:line="9" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">mutt_addrlist_to_local<pos:position pos:line="10" pos:column="27"/></name> <argument_list pos:line="10" pos:column="28">(<argument><expr><operator pos:line="10" pos:column="29">*<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="30">a<pos:position pos:line="10" pos:column="31"/></name></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">rfc822_write_address<pos:position pos:line="11" pos:column="25"/></name> <argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">buf<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="32">sizeof <argument_list pos:line="11" pos:column="39">(<argument><expr><name pos:line="11" pos:column="40">buf<pos:position pos:line="11" pos:column="43"/></name></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="11" pos:column="46">*<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="47">a<pos:position pos:line="11" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="50">0<pos:position pos:line="11" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="53"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">mutt_get_field<pos:position pos:line="12" pos:column="23"/></name> <argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">field<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="32">buf<pos:position pos:line="12" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="37">sizeof <argument_list pos:line="12" pos:column="44">(<argument><expr><name pos:line="12" pos:column="45">buf<pos:position pos:line="12" pos:column="48"/></name></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="12" pos:column="51">MUTT_ALIAS<pos:position pos:line="12" pos:column="61"/></name></expr></argument>)<pos:position pos:line="12" pos:column="62"/></argument_list></call> <operator pos:line="12" pos:column="63">!=<pos:position pos:line="12" pos:column="65"/></operator> <literal type="number" pos:line="12" pos:column="66">0<pos:position pos:line="12" pos:column="67"/></literal></expr>)<pos:position pos:line="12" pos:column="68"/></condition><then pos:line="12" pos:column="68">
      <block type="pseudo"><return pos:line="13" pos:column="7">return <expr><operator pos:line="13" pos:column="14">(<pos:position pos:line="13" pos:column="15"/></operator><operator pos:line="13" pos:column="15">-<pos:position pos:line="13" pos:column="16"/></operator><literal type="number" pos:line="13" pos:column="16">1<pos:position pos:line="13" pos:column="17"/></literal><operator pos:line="13" pos:column="17">)<pos:position pos:line="13" pos:column="18"/></operator></expr>;<pos:position pos:line="13" pos:column="19"/></return></block></then></if>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">rfc822_free_address<pos:position pos:line="14" pos:column="24"/></name> <argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">a<pos:position pos:line="14" pos:column="27"/></name></expr></argument>)<pos:position pos:line="14" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="15" pos:column="5">*<pos:position pos:line="15" pos:column="6"/></operator><name pos:line="15" pos:column="6">a<pos:position pos:line="15" pos:column="7"/></name> <operator pos:line="15" pos:column="8">=<pos:position pos:line="15" pos:column="9"/></operator> <call><name pos:line="15" pos:column="10">mutt_expand_aliases<pos:position pos:line="15" pos:column="29"/></name> <argument_list pos:line="15" pos:column="30">(<argument><expr><call><name pos:line="15" pos:column="31">mutt_parse_adrlist<pos:position pos:line="15" pos:column="49"/></name> <argument_list pos:line="15" pos:column="50">(<argument><expr><name pos:line="15" pos:column="51">NULL<pos:position pos:line="15" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="57">buf<pos:position pos:line="15" pos:column="60"/></name></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="63"/></expr_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">idna_ok<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <call><name pos:line="16" pos:column="20">mutt_addrlist_to_intl<pos:position pos:line="16" pos:column="41"/></name> <argument_list pos:line="16" pos:column="42">(<argument><expr><operator pos:line="16" pos:column="43">*<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="44">a<pos:position pos:line="16" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="47">&amp;<pos:position pos:line="16" pos:column="52"/></operator><name pos:line="16" pos:column="48">err<pos:position pos:line="16" pos:column="51"/></name></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call><operator pos:line="16" pos:column="52">)<pos:position pos:line="16" pos:column="53"/></operator> <operator pos:line="16" pos:column="54">!=<pos:position pos:line="16" pos:column="56"/></operator> <literal type="number" pos:line="16" pos:column="57">0<pos:position pos:line="16" pos:column="58"/></literal></expr>)<pos:position pos:line="16" pos:column="59"/></condition><then pos:line="16" pos:column="59">
    <block pos:line="17" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">mutt_error<pos:position pos:line="18" pos:column="17"/></name> <argument_list pos:line="18" pos:column="18">(<argument><expr><call><name pos:line="18" pos:column="19">_<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><literal type="string" pos:line="18" pos:column="21">"Error: '%s' is a bad IDN."<pos:position pos:line="18" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="18" pos:column="51">err<pos:position pos:line="18" pos:column="54"/></name></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="56"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">mutt_refresh<pos:position pos:line="19" pos:column="19"/></name> <argument_list pos:line="19" pos:column="20">()<pos:position pos:line="19" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">mutt_sleep<pos:position pos:line="20" pos:column="17"/></name> <argument_list pos:line="20" pos:column="18">(<argument><expr><literal type="number" pos:line="20" pos:column="19">2<pos:position pos:line="20" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">FREE<pos:position pos:line="21" pos:column="11"/></name> <argument_list pos:line="21" pos:column="12">(<argument><expr><operator pos:line="21" pos:column="13">&amp;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="14">err<pos:position pos:line="21" pos:column="17"/></name></expr></argument>)<pos:position pos:line="21" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
  }<pos:position pos:line="23" pos:column="4"/></block> 
  while <condition pos:line="24" pos:column="9">(<expr><name pos:line="24" pos:column="10">idna_ok<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">!=<pos:position pos:line="24" pos:column="20"/></operator> <literal type="number" pos:line="24" pos:column="21">0<pos:position pos:line="24" pos:column="22"/></literal></expr>)<pos:position pos:line="24" pos:column="23"/></condition>;<pos:position pos:line="24" pos:column="24"/></do>
  <return pos:line="25" pos:column="3">return <expr><literal type="number" pos:line="25" pos:column="10">0<pos:position pos:line="25" pos:column="11"/></literal></expr>;<pos:position pos:line="25" pos:column="12"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1315_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_bounce_message<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">FILE<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">fp<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">HEADER<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">h<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">ADDRESS<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">to<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">ADDRESS<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">from<pos:position pos:line="3" pos:column="16"/></name></decl>, <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="19">resent_to<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">fqdn<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><call><name pos:line="4" pos:column="22">mutt_fqdn<pos:position pos:line="4" pos:column="31"/></name> <argument_list pos:line="4" pos:column="32">(<argument><expr><literal type="number" pos:line="4" pos:column="33">1<pos:position pos:line="4" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">resent_from<pos:position pos:line="5" pos:column="19"/></name><index pos:line="5" pos:column="19">[<expr><name pos:line="5" pos:column="20">STRING<pos:position pos:line="5" pos:column="26"/></name></expr>]<pos:position pos:line="5" pos:column="27"/></index></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">ret<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">err<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="9" pos:column="3">resent_from<pos:position pos:line="9" pos:column="14"/></name><index pos:line="9" pos:column="14">[<expr><literal type="number" pos:line="9" pos:column="15">0<pos:position pos:line="9" pos:column="16"/></literal></expr>]<pos:position pos:line="9" pos:column="17"/></index></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <literal type="char" pos:line="9" pos:column="20">'\0'<pos:position pos:line="9" pos:column="24"/></literal></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name pos:line="10" pos:column="3">from<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <call><name pos:line="10" pos:column="10">mutt_default_from<pos:position pos:line="10" pos:column="27"/></name> <argument_list pos:line="10" pos:column="28">()<pos:position pos:line="10" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>

  <comment type="block" pos:line="12" pos:column="3">/*
   * mutt_default_from() does not use $realname if the real name is not set
   * in $from, so we add it here.  The reason it is not added in
   * mutt_default_from() is that during normal sending, we execute
   * send-hooks and set the realname last so that it can be changed based
   * upon message criteria.
   */</comment>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><operator pos:line="19" pos:column="7">!<pos:position pos:line="19" pos:column="8"/></operator> <name><name pos:line="19" pos:column="9">from<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">-&gt;<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="15">personal<pos:position pos:line="19" pos:column="23"/></name></name></expr>)<pos:position pos:line="19" pos:column="24"/></condition><then pos:line="19" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="20" pos:column="5">from<pos:position pos:line="20" pos:column="9"/></name><operator pos:line="20" pos:column="9">-&gt;<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="11">personal<pos:position pos:line="20" pos:column="19"/></name></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <call><name pos:line="20" pos:column="22">safe_strdup<pos:position pos:line="20" pos:column="33"/></name><argument_list pos:line="20" pos:column="33">(<argument><expr><name pos:line="20" pos:column="34">Realname<pos:position pos:line="20" pos:column="42"/></name></expr></argument>)<pos:position pos:line="20" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="44"/></expr_stmt></block></then></if>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name pos:line="22" pos:column="7">fqdn<pos:position pos:line="22" pos:column="11"/></name></expr>)<pos:position pos:line="22" pos:column="12"/></condition><then pos:line="22" pos:column="12">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="5">rfc822_qualify<pos:position pos:line="23" pos:column="19"/></name> <argument_list pos:line="23" pos:column="20">(<argument><expr><name pos:line="23" pos:column="21">from<pos:position pos:line="23" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="27">fqdn<pos:position pos:line="23" pos:column="31"/></name></expr></argument>)<pos:position pos:line="23" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="33"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">rfc2047_encode_adrlist<pos:position pos:line="25" pos:column="25"/></name> <argument_list pos:line="25" pos:column="26">(<argument><expr><name pos:line="25" pos:column="27">from<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="33">"Resent-From"<pos:position pos:line="25" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="48"/></expr_stmt>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><call><name pos:line="26" pos:column="7">mutt_addrlist_to_intl<pos:position pos:line="26" pos:column="28"/></name> <argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">from<pos:position pos:line="26" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="36">&amp;<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="37">err<pos:position pos:line="26" pos:column="40"/></name></expr></argument>)<pos:position pos:line="26" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="42"/></condition><then pos:line="26" pos:column="42">
  <block pos:line="27" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">mutt_error<pos:position pos:line="28" pos:column="15"/></name> <argument_list pos:line="28" pos:column="16">(<argument><expr><call><name pos:line="28" pos:column="17">_<pos:position pos:line="28" pos:column="18"/></name><argument_list pos:line="28" pos:column="18">(<argument><expr><literal type="string" pos:line="28" pos:column="19">"Bad IDN %s while preparing resent-from."<pos:position pos:line="28" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="61"/></argument_list></call></expr></argument>,
		<argument><expr><name pos:line="29" pos:column="17">err<pos:position pos:line="29" pos:column="20"/></name></expr></argument>)<pos:position pos:line="29" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">rfc822_free_address<pos:position pos:line="30" pos:column="24"/></name> <argument_list pos:line="30" pos:column="25">(<argument><expr><operator pos:line="30" pos:column="26">&amp;<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="27">from<pos:position pos:line="30" pos:column="31"/></name></expr></argument>)<pos:position pos:line="30" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
    <return pos:line="31" pos:column="5">return <expr><operator pos:line="31" pos:column="12">-<pos:position pos:line="31" pos:column="13"/></operator><literal type="number" pos:line="31" pos:column="13">1<pos:position pos:line="31" pos:column="14"/></literal></expr>;<pos:position pos:line="31" pos:column="15"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">rfc822_write_address<pos:position pos:line="33" pos:column="23"/></name> <argument_list pos:line="33" pos:column="24">(<argument><expr><name pos:line="33" pos:column="25">resent_from<pos:position pos:line="33" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="38">sizeof <argument_list pos:line="33" pos:column="45">(<argument><expr><name pos:line="33" pos:column="46">resent_from<pos:position pos:line="33" pos:column="57"/></name></expr></argument>)<pos:position pos:line="33" pos:column="58"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="33" pos:column="60">from<pos:position pos:line="33" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="66">0<pos:position pos:line="33" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="69"/></expr_stmt>

  <comment type="block" pos:line="35" pos:column="3">/*
   * prepare recipient list. idna conversion appears to happen before this
   * function is called, since the user receives confirmation of the address
   * list being bounced to.
   */</comment>
  <expr_stmt><expr><name pos:line="40" pos:column="3">resent_to<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">=<pos:position pos:line="40" pos:column="14"/></operator> <call><name pos:line="40" pos:column="15">rfc822_cpy_adr<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><name pos:line="40" pos:column="30">to<pos:position pos:line="40" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="34">0<pos:position pos:line="40" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="41" pos:column="3">rfc2047_encode_adrlist<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><name pos:line="41" pos:column="26">resent_to<pos:position pos:line="41" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="37">"Resent-To"<pos:position pos:line="41" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="50"/></expr_stmt>

  <expr_stmt><expr><name pos:line="43" pos:column="3">ret<pos:position pos:line="43" pos:column="6"/></name> <operator pos:line="43" pos:column="7">=<pos:position pos:line="43" pos:column="8"/></operator> <call><name pos:line="43" pos:column="9">_mutt_bounce_message<pos:position pos:line="43" pos:column="29"/></name> <argument_list pos:line="43" pos:column="30">(<argument><expr><name pos:line="43" pos:column="31">fp<pos:position pos:line="43" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="35">h<pos:position pos:line="43" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="38">resent_to<pos:position pos:line="43" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="49">resent_from<pos:position pos:line="43" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="62">from<pos:position pos:line="43" pos:column="66"/></name></expr></argument>)<pos:position pos:line="43" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="68"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="45" pos:column="3">rfc822_free_address<pos:position pos:line="45" pos:column="22"/></name> <argument_list pos:line="45" pos:column="23">(<argument><expr><operator pos:line="45" pos:column="24">&amp;<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="25">resent_to<pos:position pos:line="45" pos:column="34"/></name></expr></argument>)<pos:position pos:line="45" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="46" pos:column="3">rfc822_free_address<pos:position pos:line="46" pos:column="22"/></name> <argument_list pos:line="46" pos:column="23">(<argument><expr><operator pos:line="46" pos:column="24">&amp;<pos:position pos:line="46" pos:column="29"/></operator><name pos:line="46" pos:column="25">from<pos:position pos:line="46" pos:column="29"/></name></expr></argument>)<pos:position pos:line="46" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="31"/></expr_stmt>

  <return pos:line="48" pos:column="3">return <expr><name pos:line="48" pos:column="10">ret<pos:position pos:line="48" pos:column="13"/></name></expr>;<pos:position pos:line="48" pos:column="14"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

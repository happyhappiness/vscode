<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_982_mutt-1.4.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">fill_buffer<pos:position pos:line="2" pos:column="12"/></name> <parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">FILE<pos:position pos:line="2" pos:column="18"/></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier></type><name pos:line="2" pos:column="20">f<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="23">long<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">last_pos<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">long<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">offset<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">unsigned<pos:position pos:line="2" pos:column="60"/></name> <name pos:line="2" pos:column="61">char<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">buf<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>, 
	     <parameter><decl><type><name pos:line="3" pos:column="14">unsigned<pos:position pos:line="3" pos:column="22"/></name> <name pos:line="3" pos:column="23">char<pos:position pos:line="3" pos:column="27"/></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">fmt<pos:position pos:line="3" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="34">size_t<pos:position pos:line="3" pos:column="40"/></name></type> <name pos:line="3" pos:column="41">blen<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="47">int<pos:position pos:line="3" pos:column="50"/></name> <modifier pos:line="3" pos:column="51">*<pos:position pos:line="3" pos:column="52"/></modifier></type><name pos:line="3" pos:column="52">buf_ready<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="62"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">unsigned<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">char<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">p<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="6" pos:column="3">static<pos:position pos:line="6" pos:column="9"/></specifier> <type><name pos:line="6" pos:column="10">int<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">b_read<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">*<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">buf_ready<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">==<pos:position pos:line="8" pos:column="20"/></operator> <literal type="number" pos:line="8" pos:column="21">0<pos:position pos:line="8" pos:column="22"/></literal></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23">
  <block pos:line="9" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">buf<pos:position pos:line="10" pos:column="8"/></name><index pos:line="10" pos:column="8">[<expr><name pos:line="10" pos:column="9">blen<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">-<pos:position pos:line="10" pos:column="15"/></operator> <literal type="number" pos:line="10" pos:column="16">1<pos:position pos:line="10" pos:column="17"/></literal></expr>]<pos:position pos:line="10" pos:column="18"/></index></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <literal type="number" pos:line="10" pos:column="21">0<pos:position pos:line="10" pos:column="22"/></literal></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">offset<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">!=<pos:position pos:line="11" pos:column="18"/></operator> <operator pos:line="11" pos:column="19">*<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">last_pos<pos:position pos:line="11" pos:column="28"/></name></expr>)<pos:position pos:line="11" pos:column="29"/></condition><then pos:line="11" pos:column="29">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="7">fseek<pos:position pos:line="12" pos:column="12"/></name> <argument_list pos:line="12" pos:column="13">(<argument><expr><name pos:line="12" pos:column="14">f<pos:position pos:line="12" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="17">offset<pos:position pos:line="12" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="25">0<pos:position pos:line="12" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt></block></then></if>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">fgets<pos:position pos:line="13" pos:column="14"/></name> <argument_list pos:line="13" pos:column="15">(<argument><expr><operator pos:line="13" pos:column="16">(<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">char<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">*<pos:position pos:line="13" pos:column="23"/></operator><operator pos:line="13" pos:column="23">)<pos:position pos:line="13" pos:column="24"/></operator> <name pos:line="13" pos:column="25">buf<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="30">blen<pos:position pos:line="13" pos:column="34"/></name> <operator pos:line="13" pos:column="35">-<pos:position pos:line="13" pos:column="36"/></operator> <literal type="number" pos:line="13" pos:column="37">1<pos:position pos:line="13" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="40">f<pos:position pos:line="13" pos:column="41"/></name></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call> <operator pos:line="13" pos:column="43">==<pos:position pos:line="13" pos:column="45"/></operator> <name pos:line="13" pos:column="46">NULL<pos:position pos:line="13" pos:column="50"/></name></expr>)<pos:position pos:line="13" pos:column="51"/></condition><then pos:line="13" pos:column="51">
    <block pos:line="14" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="15" pos:column="7">fmt<pos:position pos:line="15" pos:column="10"/></name><index pos:line="15" pos:column="10">[<expr><literal type="number" pos:line="15" pos:column="11">0<pos:position pos:line="15" pos:column="12"/></literal></expr>]<pos:position pos:line="15" pos:column="13"/></index></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <literal type="number" pos:line="15" pos:column="16">0<pos:position pos:line="15" pos:column="17"/></literal></expr>;<pos:position pos:line="15" pos:column="18"/></expr_stmt>
      <return pos:line="16" pos:column="7">return <expr><operator pos:line="16" pos:column="14">(<pos:position pos:line="16" pos:column="15"/></operator><operator pos:line="16" pos:column="15">-<pos:position pos:line="16" pos:column="16"/></operator><literal type="number" pos:line="16" pos:column="16">1<pos:position pos:line="16" pos:column="17"/></literal><operator pos:line="16" pos:column="17">)<pos:position pos:line="16" pos:column="18"/></operator></expr>;<pos:position pos:line="16" pos:column="19"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="18" pos:column="5">*<pos:position pos:line="18" pos:column="6"/></operator><name pos:line="18" pos:column="6">last_pos<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <call><name pos:line="18" pos:column="17">ftell<pos:position pos:line="18" pos:column="22"/></name> <argument_list pos:line="18" pos:column="23">(<argument><expr><name pos:line="18" pos:column="24">f<pos:position pos:line="18" pos:column="25"/></name></expr></argument>)<pos:position pos:line="18" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">b_read<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <call pos:line="19" pos:column="14">(<name pos:line="19" pos:column="15">int<pos:position pos:line="19" pos:column="18"/></name>) <argument_list pos:line="19" pos:column="20">(<argument><expr><operator pos:line="19" pos:column="21">*<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">last_pos<pos:position pos:line="19" pos:column="30"/></name> <operator pos:line="19" pos:column="31">-<pos:position pos:line="19" pos:column="32"/></operator> <name pos:line="19" pos:column="33">offset<pos:position pos:line="19" pos:column="39"/></name></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="20" pos:column="5">*<pos:position pos:line="20" pos:column="6"/></operator><name pos:line="20" pos:column="6">buf_ready<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <literal type="number" pos:line="20" pos:column="18">1<pos:position pos:line="20" pos:column="19"/></literal></expr>;<pos:position pos:line="20" pos:column="20"/></expr_stmt>

    <comment type="block" pos:line="22" pos:column="5">/* copy "buf" to "fmt", but without bold and underline controls */</comment>
    <expr_stmt><expr><name pos:line="23" pos:column="5">p<pos:position pos:line="23" pos:column="6"/></name> <operator pos:line="23" pos:column="7">=<pos:position pos:line="23" pos:column="8"/></operator> <name pos:line="23" pos:column="9">buf<pos:position pos:line="23" pos:column="12"/></name></expr>;<pos:position pos:line="23" pos:column="13"/></expr_stmt>
    <while pos:line="24" pos:column="5">while <condition pos:line="24" pos:column="11">(<expr><operator pos:line="24" pos:column="12">*<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">p<pos:position pos:line="24" pos:column="14"/></name></expr>)<pos:position pos:line="24" pos:column="15"/></condition>
    <block pos:line="25" pos:column="5">{
      <if pos:line="26" pos:column="7">if <condition pos:line="26" pos:column="10">(<expr><operator pos:line="26" pos:column="11">*<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="12">p<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">==<pos:position pos:line="26" pos:column="16"/></operator> <literal type="char" pos:line="26" pos:column="17">'\010'<pos:position pos:line="26" pos:column="23"/></literal> <operator pos:line="26" pos:column="24">&amp;&amp;<pos:position pos:line="26" pos:column="34"/></operator> <operator pos:line="26" pos:column="27">(<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="28">p<pos:position pos:line="26" pos:column="29"/></name> <operator pos:line="26" pos:column="30">&gt;<pos:position pos:line="26" pos:column="34"/></operator> <name pos:line="26" pos:column="32">buf<pos:position pos:line="26" pos:column="35"/></name><operator pos:line="26" pos:column="35">)<pos:position pos:line="26" pos:column="36"/></operator></expr>)<pos:position pos:line="26" pos:column="37"/></condition><then pos:line="26" pos:column="37">
      <block pos:line="27" pos:column="7">{
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">*<pos:position pos:line="28" pos:column="14"/></operator><operator pos:line="28" pos:column="14">(<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="15">p<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">+<pos:position pos:line="28" pos:column="17"/></operator><literal type="number" pos:line="28" pos:column="17">1<pos:position pos:line="28" pos:column="18"/></literal><operator pos:line="28" pos:column="18">)<pos:position pos:line="28" pos:column="19"/></operator> <operator pos:line="28" pos:column="20">==<pos:position pos:line="28" pos:column="22"/></operator> <literal type="char" pos:line="28" pos:column="23">'_'<pos:position pos:line="28" pos:column="26"/></literal></expr>)<pos:position pos:line="28" pos:column="27"/></condition><then pos:line="28" pos:column="27">	<comment type="block" pos:line="28" pos:column="33">/* underline */</comment>
	  <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="11">p<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">+=<pos:position pos:line="29" pos:column="15"/></operator> <literal type="number" pos:line="29" pos:column="16">2<pos:position pos:line="29" pos:column="17"/></literal></expr>;<pos:position pos:line="29" pos:column="18"/></expr_stmt></block></then>
	<elseif pos:line="30" pos:column="9">else <if pos:line="30" pos:column="14">if <condition pos:line="30" pos:column="17">(<expr><operator pos:line="30" pos:column="18">*<pos:position pos:line="30" pos:column="19"/></operator><operator pos:line="30" pos:column="19">(<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="20">p<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">+<pos:position pos:line="30" pos:column="22"/></operator><literal type="number" pos:line="30" pos:column="22">1<pos:position pos:line="30" pos:column="23"/></literal><operator pos:line="30" pos:column="23">)<pos:position pos:line="30" pos:column="24"/></operator></expr>)<pos:position pos:line="30" pos:column="25"/></condition><then pos:line="30" pos:column="25">	<comment type="block" pos:line="30" pos:column="33">/* bold or overstrike */</comment>
	<block pos:line="31" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="32" pos:column="11">*<pos:position pos:line="32" pos:column="12"/></operator><operator pos:line="32" pos:column="12">(<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="13">fmt<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">-<pos:position pos:line="32" pos:column="17"/></operator><literal type="number" pos:line="32" pos:column="17">1<pos:position pos:line="32" pos:column="18"/></literal><operator pos:line="32" pos:column="18">)<pos:position pos:line="32" pos:column="19"/></operator> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <operator pos:line="32" pos:column="22">*<pos:position pos:line="32" pos:column="23"/></operator><operator pos:line="32" pos:column="23">(<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="24">p<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">+<pos:position pos:line="32" pos:column="26"/></operator><literal type="number" pos:line="32" pos:column="26">1<pos:position pos:line="32" pos:column="27"/></literal><operator pos:line="32" pos:column="27">)<pos:position pos:line="32" pos:column="28"/></operator></expr>;<pos:position pos:line="32" pos:column="29"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="33" pos:column="11">p<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">+=<pos:position pos:line="33" pos:column="15"/></operator> <literal type="number" pos:line="33" pos:column="16">2<pos:position pos:line="33" pos:column="17"/></literal></expr>;<pos:position pos:line="33" pos:column="18"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if></elseif>
	<else pos:line="35" pos:column="9">else			<comment type="block" pos:line="35" pos:column="33">/* ^H */</comment>
	  <block type="pseudo"><expr_stmt><expr><operator pos:line="36" pos:column="11">*<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="12">fmt<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">++<pos:position pos:line="36" pos:column="17"/></operator> <operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <operator pos:line="36" pos:column="20">*<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="21">p<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">++<pos:position pos:line="36" pos:column="24"/></operator></expr>;<pos:position pos:line="36" pos:column="25"/></expr_stmt></block></else></if>
      }<pos:position pos:line="37" pos:column="8"/></block></then>
      <elseif pos:line="38" pos:column="7">else <if pos:line="38" pos:column="12">if <condition pos:line="38" pos:column="15">(<expr><operator pos:line="38" pos:column="16">*<pos:position pos:line="38" pos:column="17"/></operator><name pos:line="38" pos:column="17">p<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">==<pos:position pos:line="38" pos:column="21"/></operator> <literal type="char" pos:line="38" pos:column="22">'\033'<pos:position pos:line="38" pos:column="28"/></literal> <operator pos:line="38" pos:column="29">&amp;&amp;<pos:position pos:line="38" pos:column="39"/></operator> <operator pos:line="38" pos:column="32">*<pos:position pos:line="38" pos:column="33"/></operator><operator pos:line="38" pos:column="33">(<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="34">p<pos:position pos:line="38" pos:column="35"/></name><operator pos:line="38" pos:column="35">+<pos:position pos:line="38" pos:column="36"/></operator><literal type="number" pos:line="38" pos:column="36">1<pos:position pos:line="38" pos:column="37"/></literal><operator pos:line="38" pos:column="37">)<pos:position pos:line="38" pos:column="38"/></operator> <operator pos:line="38" pos:column="39">==<pos:position pos:line="38" pos:column="41"/></operator> <literal type="char" pos:line="38" pos:column="42">'['<pos:position pos:line="38" pos:column="45"/></literal> <operator pos:line="38" pos:column="46">&amp;&amp;<pos:position pos:line="38" pos:column="56"/></operator> <call><name pos:line="38" pos:column="49">is_ansi<pos:position pos:line="38" pos:column="56"/></name> <argument_list pos:line="38" pos:column="57">(<argument><expr><name pos:line="38" pos:column="58">p<pos:position pos:line="38" pos:column="59"/></name> <operator pos:line="38" pos:column="60">+<pos:position pos:line="38" pos:column="61"/></operator> <literal type="number" pos:line="38" pos:column="62">2<pos:position pos:line="38" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="65"/></condition><then pos:line="38" pos:column="65">
      <block pos:line="39" pos:column="7">{
	<while pos:line="40" pos:column="9">while <condition pos:line="40" pos:column="15">(<expr><operator pos:line="40" pos:column="16">*<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="17">p<pos:position pos:line="40" pos:column="18"/></name><operator pos:line="40" pos:column="18">++<pos:position pos:line="40" pos:column="20"/></operator> <operator pos:line="40" pos:column="21">!=<pos:position pos:line="40" pos:column="23"/></operator> <literal type="char" pos:line="40" pos:column="24">'m'<pos:position pos:line="40" pos:column="27"/></literal></expr>)<pos:position pos:line="40" pos:column="28"/></condition>	<comment type="block" pos:line="40" pos:column="33">/* skip ANSI sequence */</comment>
	  <block type="pseudo"><empty_stmt pos:line="41" pos:column="11">;<pos:position pos:line="41" pos:column="12"/></empty_stmt></block></while>
      }<pos:position pos:line="42" pos:column="8"/></block></then></if></elseif>
      <elseif pos:line="43" pos:column="7">else <if pos:line="43" pos:column="12">if <condition pos:line="43" pos:column="15">(<expr><operator pos:line="43" pos:column="16">*<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="17">p<pos:position pos:line="43" pos:column="18"/></name> <operator pos:line="43" pos:column="19">==<pos:position pos:line="43" pos:column="21"/></operator> <literal type="char" pos:line="43" pos:column="22">'\033'<pos:position pos:line="43" pos:column="28"/></literal> <operator pos:line="43" pos:column="29">&amp;&amp;<pos:position pos:line="43" pos:column="39"/></operator> <operator pos:line="43" pos:column="32">*<pos:position pos:line="43" pos:column="33"/></operator><operator pos:line="43" pos:column="33">(<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="34">p<pos:position pos:line="43" pos:column="35"/></name><operator pos:line="43" pos:column="35">+<pos:position pos:line="43" pos:column="36"/></operator><literal type="number" pos:line="43" pos:column="36">1<pos:position pos:line="43" pos:column="37"/></literal><operator pos:line="43" pos:column="37">)<pos:position pos:line="43" pos:column="38"/></operator> <operator pos:line="43" pos:column="39">==<pos:position pos:line="43" pos:column="41"/></operator> <literal type="char" pos:line="43" pos:column="42">']'<pos:position pos:line="43" pos:column="45"/></literal> <operator pos:line="43" pos:column="46">&amp;&amp;<pos:position pos:line="43" pos:column="56"/></operator> <call><name pos:line="43" pos:column="49">check_attachment_marker<pos:position pos:line="43" pos:column="72"/></name> <argument_list pos:line="43" pos:column="73">(<argument><expr><operator pos:line="43" pos:column="74">(<pos:position pos:line="43" pos:column="75"/></operator><name pos:line="43" pos:column="75">char<pos:position pos:line="43" pos:column="79"/></name> <operator pos:line="43" pos:column="80">*<pos:position pos:line="43" pos:column="81"/></operator><operator pos:line="43" pos:column="81">)<pos:position pos:line="43" pos:column="82"/></operator> <name pos:line="43" pos:column="83">p<pos:position pos:line="43" pos:column="84"/></name></expr></argument>)<pos:position pos:line="43" pos:column="85"/></argument_list></call> <operator pos:line="43" pos:column="86">==<pos:position pos:line="43" pos:column="88"/></operator> <literal type="number" pos:line="43" pos:column="89">0<pos:position pos:line="43" pos:column="90"/></literal></expr>)<pos:position pos:line="43" pos:column="91"/></condition><then pos:line="43" pos:column="91">
      <block pos:line="44" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="45" pos:column="9">dprint<pos:position pos:line="45" pos:column="15"/></name> <argument_list pos:line="45" pos:column="16">(<argument><expr><literal type="number" pos:line="45" pos:column="17">2<pos:position pos:line="45" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="45" pos:column="20">(<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="21">debugfile<pos:position pos:line="45" pos:column="30"/></name><operator pos:line="45" pos:column="30">,<pos:position pos:line="45" pos:column="31"/></operator> <literal type="string" pos:line="45" pos:column="32">"fill_buffer: Seen attachment marker.\n"<pos:position pos:line="45" pos:column="72"/></literal><operator pos:line="45" pos:column="72">)<pos:position pos:line="45" pos:column="73"/></operator></expr></argument>)<pos:position pos:line="45" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="75"/></expr_stmt>
	<while pos:line="46" pos:column="9">while <condition pos:line="46" pos:column="15">(<expr><operator pos:line="46" pos:column="16">*<pos:position pos:line="46" pos:column="17"/></operator><name pos:line="46" pos:column="17">p<pos:position pos:line="46" pos:column="18"/></name><operator pos:line="46" pos:column="18">++<pos:position pos:line="46" pos:column="20"/></operator> <operator pos:line="46" pos:column="21">!=<pos:position pos:line="46" pos:column="23"/></operator> <literal type="char" pos:line="46" pos:column="24">'\a'<pos:position pos:line="46" pos:column="28"/></literal></expr>)<pos:position pos:line="46" pos:column="29"/></condition>	<comment type="block" pos:line="46" pos:column="33">/* skip pseudo-ANSI sequence */</comment>
	  <block type="pseudo"><empty_stmt pos:line="47" pos:column="11">;<pos:position pos:line="47" pos:column="12"/></empty_stmt></block></while>
      }<pos:position pos:line="48" pos:column="8"/></block></then></if></elseif>
      <else pos:line="49" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><operator pos:line="50" pos:column="9">*<pos:position pos:line="50" pos:column="10"/></operator><name pos:line="50" pos:column="10">fmt<pos:position pos:line="50" pos:column="13"/></name><operator pos:line="50" pos:column="13">++<pos:position pos:line="50" pos:column="15"/></operator> <operator pos:line="50" pos:column="16">=<pos:position pos:line="50" pos:column="17"/></operator> <operator pos:line="50" pos:column="18">*<pos:position pos:line="50" pos:column="19"/></operator><name pos:line="50" pos:column="19">p<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">++<pos:position pos:line="50" pos:column="22"/></operator></expr>;<pos:position pos:line="50" pos:column="23"/></expr_stmt></block></else></if>
    }<pos:position pos:line="51" pos:column="6"/></block></while>
    <expr_stmt><expr><operator pos:line="52" pos:column="5">*<pos:position pos:line="52" pos:column="6"/></operator><name pos:line="52" pos:column="6">fmt<pos:position pos:line="52" pos:column="9"/></name> <operator pos:line="52" pos:column="10">=<pos:position pos:line="52" pos:column="11"/></operator> <literal type="number" pos:line="52" pos:column="12">0<pos:position pos:line="52" pos:column="13"/></literal></expr>;<pos:position pos:line="52" pos:column="14"/></expr_stmt>
  }<pos:position pos:line="53" pos:column="4"/></block></then></if>
  <return pos:line="54" pos:column="3">return <expr><name pos:line="54" pos:column="10">b_read<pos:position pos:line="54" pos:column="16"/></name></expr>;<pos:position pos:line="54" pos:column="17"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

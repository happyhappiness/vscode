<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1671_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">pop_connect<pos:position pos:line="1" pos:column="16"/></name> <parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">POP_DATA<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">pop_data<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buf<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">LONG_STRING<pos:position pos:line="3" pos:column="23"/></name></expr>]<pos:position pos:line="3" pos:column="24"/></index></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="5" pos:column="3">pop_data<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">-&gt;<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="13">status<pos:position pos:line="5" pos:column="19"/></name></name> <operator pos:line="5" pos:column="20">=<pos:position pos:line="5" pos:column="21"/></operator> <name pos:line="5" pos:column="22">POP_NONE<pos:position pos:line="5" pos:column="30"/></name></expr>;<pos:position pos:line="5" pos:column="31"/></expr_stmt>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><call><name pos:line="6" pos:column="7">mutt_socket_open<pos:position pos:line="6" pos:column="23"/></name> <argument_list pos:line="6" pos:column="24">(<argument><expr><name><name pos:line="6" pos:column="25">pop_data<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">conn<pos:position pos:line="6" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call> <operator pos:line="6" pos:column="41">&lt;<pos:position pos:line="6" pos:column="45"/></operator> <literal type="number" pos:line="6" pos:column="43">0<pos:position pos:line="6" pos:column="44"/></literal> <operator pos:line="6" pos:column="45">||<pos:position pos:line="6" pos:column="47"/></operator>
      <call><name pos:line="7" pos:column="7">mutt_socket_readln<pos:position pos:line="7" pos:column="25"/></name> <argument_list pos:line="7" pos:column="26">(<argument><expr><name pos:line="7" pos:column="27">buf<pos:position pos:line="7" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="32">sizeof <argument_list pos:line="7" pos:column="39">(<argument><expr><name pos:line="7" pos:column="40">buf<pos:position pos:line="7" pos:column="43"/></name></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="46">pop_data<pos:position pos:line="7" pos:column="54"/></name><operator pos:line="7" pos:column="54">-&gt;<pos:position pos:line="7" pos:column="59"/></operator><name pos:line="7" pos:column="56">conn<pos:position pos:line="7" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="61"/></argument_list></call> <operator pos:line="7" pos:column="62">&lt;<pos:position pos:line="7" pos:column="66"/></operator> <literal type="number" pos:line="7" pos:column="64">0<pos:position pos:line="7" pos:column="65"/></literal></expr>)<pos:position pos:line="7" pos:column="66"/></condition><then pos:line="7" pos:column="66">
  <block pos:line="8" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">mutt_error<pos:position pos:line="9" pos:column="15"/></name> <argument_list pos:line="9" pos:column="16">(<argument><expr><call><name pos:line="9" pos:column="17">_<pos:position pos:line="9" pos:column="18"/></name><argument_list pos:line="9" pos:column="18">(<argument><expr><literal type="string" pos:line="9" pos:column="19">"Error connecting to server: %s"<pos:position pos:line="9" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="54">pop_data<pos:position pos:line="9" pos:column="62"/></name><operator pos:line="9" pos:column="62">-&gt;<pos:position pos:line="9" pos:column="67"/></operator><name pos:line="9" pos:column="64">conn<pos:position pos:line="9" pos:column="68"/></name><operator pos:line="9" pos:column="68">-&gt;<pos:position pos:line="9" pos:column="73"/></operator><name pos:line="9" pos:column="70">account<pos:position pos:line="9" pos:column="77"/></name><operator pos:line="9" pos:column="77">.<pos:position pos:line="9" pos:column="78"/></operator><name pos:line="9" pos:column="78">host<pos:position pos:line="9" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="84"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">-<pos:position pos:line="10" pos:column="13"/></operator><literal type="number" pos:line="10" pos:column="13">1<pos:position pos:line="10" pos:column="14"/></literal></expr>;<pos:position pos:line="10" pos:column="15"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="13" pos:column="3">pop_data<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">status<pos:position pos:line="13" pos:column="19"/></name></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="22">POP_CONNECTED<pos:position pos:line="13" pos:column="35"/></name></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><call><name pos:line="15" pos:column="7">mutt_strncmp<pos:position pos:line="15" pos:column="19"/></name> <argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">buf<pos:position pos:line="15" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="26">"+OK"<pos:position pos:line="15" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="33">3<pos:position pos:line="15" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="36"/></condition><then pos:line="15" pos:column="36">
  <block pos:line="16" pos:column="3">{
    <expr_stmt><expr><operator pos:line="17" pos:column="5">*<pos:position pos:line="17" pos:column="6"/></operator><name><name pos:line="17" pos:column="6">pop_data<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">err_msg<pos:position pos:line="17" pos:column="23"/></name></name> <operator pos:line="17" pos:column="24">=<pos:position pos:line="17" pos:column="25"/></operator> <literal type="char" pos:line="17" pos:column="26">'\0'<pos:position pos:line="17" pos:column="30"/></literal></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">pop_error<pos:position pos:line="18" pos:column="14"/></name> <argument_list pos:line="18" pos:column="15">(<argument><expr><name pos:line="18" pos:column="16">pop_data<pos:position pos:line="18" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="26">buf<pos:position pos:line="18" pos:column="29"/></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">mutt_error<pos:position pos:line="19" pos:column="15"/></name> <argument_list pos:line="19" pos:column="16">(<argument><expr><literal type="string" pos:line="19" pos:column="17">"%s"<pos:position pos:line="19" pos:column="21"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="23">pop_data<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">-&gt;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="33">err_msg<pos:position pos:line="19" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">-<pos:position pos:line="20" pos:column="13"/></operator><literal type="number" pos:line="20" pos:column="13">2<pos:position pos:line="20" pos:column="14"/></literal></expr>;<pos:position pos:line="20" pos:column="15"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">pop_apop_timestamp<pos:position pos:line="23" pos:column="21"/></name> <argument_list pos:line="23" pos:column="22">(<argument><expr><name pos:line="23" pos:column="23">pop_data<pos:position pos:line="23" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="33">buf<pos:position pos:line="23" pos:column="36"/></name></expr></argument>)<pos:position pos:line="23" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>

  <return pos:line="25" pos:column="3">return <expr><literal type="number" pos:line="25" pos:column="10">0<pos:position pos:line="25" pos:column="11"/></literal></expr>;<pos:position pos:line="25" pos:column="12"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

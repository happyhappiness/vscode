<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_763_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">dn_array_s<pos:position pos:line="1" pos:column="25"/></name></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type>
<name pos:line="2" pos:column="1">parse_dn<pos:position pos:line="2" pos:column="9"/></name> <parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><specifier pos:line="2" pos:column="11">const<pos:position pos:line="2" pos:column="16"/></specifier> <name pos:line="2" pos:column="17">unsigned<pos:position pos:line="2" pos:column="25"/></name> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">string<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="39"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">dn_array_s<pos:position pos:line="4" pos:column="20"/></name></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">array<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">arrayidx<pos:position pos:line="5" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="20">arraysize<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">i<pos:position pos:line="6" pos:column="8"/></name></decl>;<pos:position pos:line="6" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">arraysize<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <literal type="number" pos:line="8" pos:column="15">7<pos:position pos:line="8" pos:column="16"/></literal></expr>;<pos:position pos:line="8" pos:column="17"/></expr_stmt> <comment type="block" pos:line="8" pos:column="18">/* C,ST,L,O,OU,CN,email */</comment>
  <expr_stmt><expr><name pos:line="9" pos:column="3">array<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator> <call><name pos:line="9" pos:column="11">safe_malloc<pos:position pos:line="9" pos:column="22"/></name> <argument_list pos:line="9" pos:column="23">(<argument><expr><operator pos:line="9" pos:column="24">(<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="25">arraysize<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">+<pos:position pos:line="9" pos:column="35"/></operator><literal type="number" pos:line="9" pos:column="35">1<pos:position pos:line="9" pos:column="36"/></literal><operator pos:line="9" pos:column="36">)<pos:position pos:line="9" pos:column="37"/></operator> <operator pos:line="9" pos:column="38">*<pos:position pos:line="9" pos:column="39"/></operator> <sizeof pos:line="9" pos:column="40">sizeof <name><pos:position pos:line="9" pos:column="47"/></name></sizeof>*<name pos:line="9" pos:column="48">array<pos:position pos:line="9" pos:column="53"/></name></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="55"/></expr_stmt>
  <expr_stmt><expr><name pos:line="10" pos:column="3">arrayidx<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <literal type="number" pos:line="10" pos:column="14">0<pos:position pos:line="10" pos:column="15"/></literal></expr>;<pos:position pos:line="10" pos:column="16"/></expr_stmt>
  <while pos:line="11" pos:column="3">while <condition pos:line="11" pos:column="9">(<expr><operator pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">string<pos:position pos:line="11" pos:column="17"/></name></expr>)<pos:position pos:line="11" pos:column="18"/></condition>
    <block pos:line="12" pos:column="5">{
      <while pos:line="13" pos:column="7">while <condition pos:line="13" pos:column="13">(<expr><operator pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">string<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">==<pos:position pos:line="13" pos:column="24"/></operator> <literal type="char" pos:line="13" pos:column="25">' '<pos:position pos:line="13" pos:column="28"/></literal></expr>)<pos:position pos:line="13" pos:column="29"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="9">string<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">++<pos:position pos:line="14" pos:column="17"/></operator></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt></block></while>
      <if pos:line="15" pos:column="7">if <condition pos:line="15" pos:column="10">(<expr><operator pos:line="15" pos:column="11">!<pos:position pos:line="15" pos:column="12"/></operator><operator pos:line="15" pos:column="12">*<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">string<pos:position pos:line="15" pos:column="19"/></name></expr>)<pos:position pos:line="15" pos:column="20"/></condition><then pos:line="15" pos:column="20">
        <block type="pseudo"><break pos:line="16" pos:column="9">break;<pos:position pos:line="16" pos:column="15"/></break></block></then></if> <comment type="block" pos:line="16" pos:column="16">/* ready */</comment>
      <if pos:line="17" pos:column="7">if <condition pos:line="17" pos:column="10">(<expr><name pos:line="17" pos:column="11">arrayidx<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">&gt;=<pos:position pos:line="17" pos:column="25"/></operator> <name pos:line="17" pos:column="23">arraysize<pos:position pos:line="17" pos:column="32"/></name></expr>)<pos:position pos:line="17" pos:column="33"/></condition><then pos:line="17" pos:column="33">
        <block pos:line="18" pos:column="9">{ <comment type="block" pos:line="18" pos:column="11">/* mutt lacks a real safe_realoc - so we need to copy */</comment>
          <decl_stmt><decl><type><name><name pos:line="19" pos:column="11">struct<pos:position pos:line="19" pos:column="17"/></name> <name pos:line="19" pos:column="18">dn_array_s<pos:position pos:line="19" pos:column="28"/></name></name> <modifier pos:line="19" pos:column="29">*<pos:position pos:line="19" pos:column="30"/></modifier></type><name pos:line="19" pos:column="30">a2<pos:position pos:line="19" pos:column="32"/></name></decl>;<pos:position pos:line="19" pos:column="33"/></decl_stmt>

          <expr_stmt><expr><name pos:line="21" pos:column="11">arraysize<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">+=<pos:position pos:line="21" pos:column="23"/></operator> <literal type="number" pos:line="21" pos:column="24">5<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
          <expr_stmt><expr><name pos:line="22" pos:column="11">a2<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <call><name pos:line="22" pos:column="16">safe_malloc<pos:position pos:line="22" pos:column="27"/></name> <argument_list pos:line="22" pos:column="28">(<argument><expr><operator pos:line="22" pos:column="29">(<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="30">arraysize<pos:position pos:line="22" pos:column="39"/></name><operator pos:line="22" pos:column="39">+<pos:position pos:line="22" pos:column="40"/></operator><literal type="number" pos:line="22" pos:column="40">1<pos:position pos:line="22" pos:column="41"/></literal><operator pos:line="22" pos:column="41">)<pos:position pos:line="22" pos:column="42"/></operator> <operator pos:line="22" pos:column="43">*<pos:position pos:line="22" pos:column="44"/></operator> <sizeof pos:line="22" pos:column="45">sizeof <name><pos:position pos:line="22" pos:column="52"/></name></sizeof>*<name pos:line="22" pos:column="53">array<pos:position pos:line="22" pos:column="58"/></name></expr></argument>)<pos:position pos:line="22" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="60"/></expr_stmt>
          <for pos:line="23" pos:column="11">for <control pos:line="23" pos:column="15">(<init><expr><name pos:line="23" pos:column="16">i<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator><literal type="number" pos:line="23" pos:column="18">0<pos:position pos:line="23" pos:column="19"/></literal></expr>;<pos:position pos:line="23" pos:column="20"/></init> <condition><expr><name pos:line="23" pos:column="21">i<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">&lt;<pos:position pos:line="23" pos:column="27"/></operator> <name pos:line="23" pos:column="25">arrayidx<pos:position pos:line="23" pos:column="33"/></name></expr>;<pos:position pos:line="23" pos:column="34"/></condition> <incr><expr><name pos:line="23" pos:column="35">i<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">++<pos:position pos:line="23" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="39"/></control>
            <block pos:line="24" pos:column="13">{
              <expr_stmt><expr><name><name pos:line="25" pos:column="15">a2<pos:position pos:line="25" pos:column="17"/></name><index pos:line="25" pos:column="17">[<expr><name pos:line="25" pos:column="18">i<pos:position pos:line="25" pos:column="19"/></name></expr>]<pos:position pos:line="25" pos:column="20"/></index></name><operator pos:line="25" pos:column="20">.<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="21">key<pos:position pos:line="25" pos:column="24"/></name> <operator pos:line="25" pos:column="25">=<pos:position pos:line="25" pos:column="26"/></operator> <name><name pos:line="25" pos:column="27">array<pos:position pos:line="25" pos:column="32"/></name><index pos:line="25" pos:column="32">[<expr><name pos:line="25" pos:column="33">i<pos:position pos:line="25" pos:column="34"/></name></expr>]<pos:position pos:line="25" pos:column="35"/></index></name><operator pos:line="25" pos:column="35">.<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="36">key<pos:position pos:line="25" pos:column="39"/></name></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt>
              <expr_stmt><expr><name><name pos:line="26" pos:column="15">a2<pos:position pos:line="26" pos:column="17"/></name><index pos:line="26" pos:column="17">[<expr><name pos:line="26" pos:column="18">i<pos:position pos:line="26" pos:column="19"/></name></expr>]<pos:position pos:line="26" pos:column="20"/></index></name><operator pos:line="26" pos:column="20">.<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="21">value<pos:position pos:line="26" pos:column="26"/></name> <operator pos:line="26" pos:column="27">=<pos:position pos:line="26" pos:column="28"/></operator> <name><name pos:line="26" pos:column="29">array<pos:position pos:line="26" pos:column="34"/></name><index pos:line="26" pos:column="34">[<expr><name pos:line="26" pos:column="35">i<pos:position pos:line="26" pos:column="36"/></name></expr>]<pos:position pos:line="26" pos:column="37"/></index></name><operator pos:line="26" pos:column="37">.<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="38">value<pos:position pos:line="26" pos:column="43"/></name></expr>;<pos:position pos:line="26" pos:column="44"/></expr_stmt>
            }<pos:position pos:line="27" pos:column="14"/></block></for>
          <expr_stmt><expr><call><name pos:line="28" pos:column="11">FREE<pos:position pos:line="28" pos:column="15"/></name> <argument_list pos:line="28" pos:column="16">(<argument><expr><operator pos:line="28" pos:column="17">&amp;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="18">array<pos:position pos:line="28" pos:column="23"/></name></expr></argument>)<pos:position pos:line="28" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>
          <expr_stmt><expr><name pos:line="29" pos:column="11">array<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <name pos:line="29" pos:column="19">a2<pos:position pos:line="29" pos:column="21"/></name></expr>;<pos:position pos:line="29" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="31" pos:column="7">array<pos:position pos:line="31" pos:column="12"/></name><index pos:line="31" pos:column="12">[<expr><name pos:line="31" pos:column="13">arrayidx<pos:position pos:line="31" pos:column="21"/></name></expr>]<pos:position pos:line="31" pos:column="22"/></index></name><operator pos:line="31" pos:column="22">.<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="23">key<pos:position pos:line="31" pos:column="26"/></name> <operator pos:line="31" pos:column="27">=<pos:position pos:line="31" pos:column="28"/></operator> <name pos:line="31" pos:column="29">NULL<pos:position pos:line="31" pos:column="33"/></name></expr>;<pos:position pos:line="31" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="32" pos:column="7">array<pos:position pos:line="32" pos:column="12"/></name><index pos:line="32" pos:column="12">[<expr><name pos:line="32" pos:column="13">arrayidx<pos:position pos:line="32" pos:column="21"/></name></expr>]<pos:position pos:line="32" pos:column="22"/></index></name><operator pos:line="32" pos:column="22">.<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="23">value<pos:position pos:line="32" pos:column="28"/></name> <operator pos:line="32" pos:column="29">=<pos:position pos:line="32" pos:column="30"/></operator> <name pos:line="32" pos:column="31">NULL<pos:position pos:line="32" pos:column="35"/></name></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name pos:line="33" pos:column="7">string<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <call><name pos:line="33" pos:column="16">parse_dn_part<pos:position pos:line="33" pos:column="29"/></name> <argument_list pos:line="33" pos:column="30">(<argument><expr><name pos:line="33" pos:column="31">array<pos:position pos:line="33" pos:column="36"/></name><operator pos:line="33" pos:column="36">+<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="37">arrayidx<pos:position pos:line="33" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="47">string<pos:position pos:line="33" pos:column="53"/></name></expr></argument>)<pos:position pos:line="33" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name pos:line="34" pos:column="7">arrayidx<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">++<pos:position pos:line="34" pos:column="17"/></operator></expr>;<pos:position pos:line="34" pos:column="18"/></expr_stmt>
      <if pos:line="35" pos:column="7">if <condition pos:line="35" pos:column="10">(<expr><operator pos:line="35" pos:column="11">!<pos:position pos:line="35" pos:column="12"/></operator><name pos:line="35" pos:column="12">string<pos:position pos:line="35" pos:column="18"/></name></expr>)<pos:position pos:line="35" pos:column="19"/></condition><then pos:line="35" pos:column="19">
        <block type="pseudo"><goto pos:line="36" pos:column="9">goto <name pos:line="36" pos:column="14">failure<pos:position pos:line="36" pos:column="21"/></name>;<pos:position pos:line="36" pos:column="22"/></goto></block></then></if>
      <while pos:line="37" pos:column="7">while <condition pos:line="37" pos:column="13">(<expr><operator pos:line="37" pos:column="14">*<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="15">string<pos:position pos:line="37" pos:column="21"/></name> <operator pos:line="37" pos:column="22">==<pos:position pos:line="37" pos:column="24"/></operator> <literal type="char" pos:line="37" pos:column="25">' '<pos:position pos:line="37" pos:column="28"/></literal></expr>)<pos:position pos:line="37" pos:column="29"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="9">string<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">++<pos:position pos:line="38" pos:column="17"/></operator></expr>;<pos:position pos:line="38" pos:column="18"/></expr_stmt></block></while>
      <if pos:line="39" pos:column="7">if <condition pos:line="39" pos:column="10">(<expr><operator pos:line="39" pos:column="11">*<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="12">string<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">&amp;&amp;<pos:position pos:line="39" pos:column="29"/></operator> <operator pos:line="39" pos:column="22">*<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="23">string<pos:position pos:line="39" pos:column="29"/></name> <operator pos:line="39" pos:column="30">!=<pos:position pos:line="39" pos:column="32"/></operator> <literal type="char" pos:line="39" pos:column="33">','<pos:position pos:line="39" pos:column="36"/></literal> <operator pos:line="39" pos:column="37">&amp;&amp;<pos:position pos:line="39" pos:column="47"/></operator> <operator pos:line="39" pos:column="40">*<pos:position pos:line="39" pos:column="41"/></operator><name pos:line="39" pos:column="41">string<pos:position pos:line="39" pos:column="47"/></name> <operator pos:line="39" pos:column="48">!=<pos:position pos:line="39" pos:column="50"/></operator> <literal type="char" pos:line="39" pos:column="51">';'<pos:position pos:line="39" pos:column="54"/></literal> <operator pos:line="39" pos:column="55">&amp;&amp;<pos:position pos:line="39" pos:column="65"/></operator> <operator pos:line="39" pos:column="58">*<pos:position pos:line="39" pos:column="59"/></operator><name pos:line="39" pos:column="59">string<pos:position pos:line="39" pos:column="65"/></name> <operator pos:line="39" pos:column="66">!=<pos:position pos:line="39" pos:column="68"/></operator> <literal type="char" pos:line="39" pos:column="69">'+'<pos:position pos:line="39" pos:column="72"/></literal></expr>)<pos:position pos:line="39" pos:column="73"/></condition><then pos:line="39" pos:column="73">
        <block type="pseudo"><goto pos:line="40" pos:column="9">goto <name pos:line="40" pos:column="14">failure<pos:position pos:line="40" pos:column="21"/></name>;<pos:position pos:line="40" pos:column="22"/></goto></block></then></if> <comment type="block" pos:line="40" pos:column="23">/* invalid delimiter */</comment>
      <if pos:line="41" pos:column="7">if <condition pos:line="41" pos:column="10">(<expr><operator pos:line="41" pos:column="11">*<pos:position pos:line="41" pos:column="12"/></operator><name pos:line="41" pos:column="12">string<pos:position pos:line="41" pos:column="18"/></name></expr>)<pos:position pos:line="41" pos:column="19"/></condition><then pos:line="41" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="9">string<pos:position pos:line="42" pos:column="15"/></name><operator pos:line="42" pos:column="15">++<pos:position pos:line="42" pos:column="17"/></operator></expr>;<pos:position pos:line="42" pos:column="18"/></expr_stmt></block></then></if>
    }<pos:position pos:line="43" pos:column="6"/></block></while>
  <expr_stmt><expr><name><name pos:line="44" pos:column="3">array<pos:position pos:line="44" pos:column="8"/></name><index pos:line="44" pos:column="8">[<expr><name pos:line="44" pos:column="9">arrayidx<pos:position pos:line="44" pos:column="17"/></name></expr>]<pos:position pos:line="44" pos:column="18"/></index></name><operator pos:line="44" pos:column="18">.<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="19">key<pos:position pos:line="44" pos:column="22"/></name> <operator pos:line="44" pos:column="23">=<pos:position pos:line="44" pos:column="24"/></operator> <name pos:line="44" pos:column="25">NULL<pos:position pos:line="44" pos:column="29"/></name></expr>;<pos:position pos:line="44" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="45" pos:column="3">array<pos:position pos:line="45" pos:column="8"/></name><index pos:line="45" pos:column="8">[<expr><name pos:line="45" pos:column="9">arrayidx<pos:position pos:line="45" pos:column="17"/></name></expr>]<pos:position pos:line="45" pos:column="18"/></index></name><operator pos:line="45" pos:column="18">.<pos:position pos:line="45" pos:column="19"/></operator><name pos:line="45" pos:column="19">value<pos:position pos:line="45" pos:column="24"/></name> <operator pos:line="45" pos:column="25">=<pos:position pos:line="45" pos:column="26"/></operator> <name pos:line="45" pos:column="27">NULL<pos:position pos:line="45" pos:column="31"/></name></expr>;<pos:position pos:line="45" pos:column="32"/></expr_stmt>
  <return pos:line="46" pos:column="3">return <expr><name pos:line="46" pos:column="10">array<pos:position pos:line="46" pos:column="15"/></name></expr>;<pos:position pos:line="46" pos:column="16"/></return>

 <label><name pos:line="48" pos:column="2">failure<pos:position pos:line="48" pos:column="9"/></name>:<pos:position pos:line="48" pos:column="10"/></label>
  <for pos:line="49" pos:column="3">for <control pos:line="49" pos:column="7">(<init><expr><name pos:line="49" pos:column="8">i<pos:position pos:line="49" pos:column="9"/></name><operator pos:line="49" pos:column="9">=<pos:position pos:line="49" pos:column="10"/></operator><literal type="number" pos:line="49" pos:column="10">0<pos:position pos:line="49" pos:column="11"/></literal></expr>;<pos:position pos:line="49" pos:column="12"/></init> <condition><expr><name pos:line="49" pos:column="13">i<pos:position pos:line="49" pos:column="14"/></name> <operator pos:line="49" pos:column="15">&lt;<pos:position pos:line="49" pos:column="19"/></operator> <name pos:line="49" pos:column="17">arrayidx<pos:position pos:line="49" pos:column="25"/></name></expr>;<pos:position pos:line="49" pos:column="26"/></condition> <incr><expr><name pos:line="49" pos:column="27">i<pos:position pos:line="49" pos:column="28"/></name><operator pos:line="49" pos:column="28">++<pos:position pos:line="49" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="49" pos:column="31"/></control>
    <block pos:line="50" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="51" pos:column="7">FREE<pos:position pos:line="51" pos:column="11"/></name> <argument_list pos:line="51" pos:column="12">(<argument><expr><operator pos:line="51" pos:column="13">&amp;<pos:position pos:line="51" pos:column="18"/></operator><name><name pos:line="51" pos:column="14">array<pos:position pos:line="51" pos:column="19"/></name><index pos:line="51" pos:column="19">[<expr><name pos:line="51" pos:column="20">i<pos:position pos:line="51" pos:column="21"/></name></expr>]<pos:position pos:line="51" pos:column="22"/></index></name><operator pos:line="51" pos:column="22">.<pos:position pos:line="51" pos:column="23"/></operator><name pos:line="51" pos:column="23">key<pos:position pos:line="51" pos:column="26"/></name></expr></argument>)<pos:position pos:line="51" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="52" pos:column="7">FREE<pos:position pos:line="52" pos:column="11"/></name> <argument_list pos:line="52" pos:column="12">(<argument><expr><operator pos:line="52" pos:column="13">&amp;<pos:position pos:line="52" pos:column="18"/></operator><name><name pos:line="52" pos:column="14">array<pos:position pos:line="52" pos:column="19"/></name><index pos:line="52" pos:column="19">[<expr><name pos:line="52" pos:column="20">i<pos:position pos:line="52" pos:column="21"/></name></expr>]<pos:position pos:line="52" pos:column="22"/></index></name><operator pos:line="52" pos:column="22">.<pos:position pos:line="52" pos:column="23"/></operator><name pos:line="52" pos:column="23">value<pos:position pos:line="52" pos:column="28"/></name></expr></argument>)<pos:position pos:line="52" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></for>
  <expr_stmt><expr><call><name pos:line="54" pos:column="3">FREE<pos:position pos:line="54" pos:column="7"/></name> <argument_list pos:line="54" pos:column="8">(<argument><expr><operator pos:line="54" pos:column="9">&amp;<pos:position pos:line="54" pos:column="14"/></operator><name pos:line="54" pos:column="10">array<pos:position pos:line="54" pos:column="15"/></name></expr></argument>)<pos:position pos:line="54" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="17"/></expr_stmt>
  <return pos:line="55" pos:column="3">return <expr><name pos:line="55" pos:column="10">NULL<pos:position pos:line="55" pos:column="14"/></name></expr>;<pos:position pos:line="55" pos:column="15"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_95_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">send_message<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">HEADER<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">msg<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{  
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">tempfile<pos:position pos:line="3" pos:column="16"/></name><index pos:line="3" pos:column="16">[<expr><name pos:line="3" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="3" pos:column="32"/></name></expr>]<pos:position pos:line="3" pos:column="33"/></index></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">FILE<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">tempfp<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name></decl>;<pos:position pos:line="5" pos:column="9"/></decl_stmt>
<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">USE_SMTP<pos:position pos:line="6" pos:column="16"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">short<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">old_write_bcc<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>
  
  <comment type="block" pos:line="10" pos:column="3">/* Write out the message in MIME form. */</comment>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">mutt_mktemp<pos:position pos:line="11" pos:column="14"/></name> <argument_list pos:line="11" pos:column="15">(<argument><expr><name pos:line="11" pos:column="16">tempfile<pos:position pos:line="11" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="26">sizeof <argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">tempfile<pos:position pos:line="11" pos:column="42"/></name></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="45"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">(<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">tempfp<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <call><name pos:line="12" pos:column="17">safe_fopen<pos:position pos:line="12" pos:column="27"/></name> <argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">tempfile<pos:position pos:line="12" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="39">"w"<pos:position pos:line="12" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call><operator pos:line="12" pos:column="43">)<pos:position pos:line="12" pos:column="44"/></operator> <operator pos:line="12" pos:column="45">==<pos:position pos:line="12" pos:column="47"/></operator> <name pos:line="12" pos:column="48">NULL<pos:position pos:line="12" pos:column="52"/></name></expr>)<pos:position pos:line="12" pos:column="53"/></condition><then pos:line="12" pos:column="53">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><operator pos:line="13" pos:column="13">-<pos:position pos:line="13" pos:column="14"/></operator><literal type="number" pos:line="13" pos:column="14">1<pos:position pos:line="13" pos:column="15"/></literal><operator pos:line="13" pos:column="15">)<pos:position pos:line="13" pos:column="16"/></operator></expr>;<pos:position pos:line="13" pos:column="17"/></return></block></then></if>

<cpp:ifdef pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">ifdef<pos:position pos:line="15" pos:column="7"/></cpp:directive> <name pos:line="15" pos:column="8">USE_SMTP<pos:position pos:line="15" pos:column="16"/></name></cpp:ifdef>
  <expr_stmt><expr><name pos:line="16" pos:column="3">old_write_bcc<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <call><name pos:line="16" pos:column="19">option<pos:position pos:line="16" pos:column="25"/></name> <argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">OPTWRITEBCC<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">SmtpUrl<pos:position pos:line="17" pos:column="14"/></name></expr>)<pos:position pos:line="17" pos:column="15"/></condition><then pos:line="17" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="5">unset_option<pos:position pos:line="18" pos:column="17"/></name> <argument_list pos:line="18" pos:column="18">(<argument><expr><name pos:line="18" pos:column="19">OPTWRITEBCC<pos:position pos:line="18" pos:column="30"/></name></expr></argument>)<pos:position pos:line="18" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt></block></then></if>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">ifdef<pos:position pos:line="20" pos:column="7"/></cpp:directive> <name pos:line="20" pos:column="8">MIXMASTER<pos:position pos:line="20" pos:column="17"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">mutt_write_rfc822_header<pos:position pos:line="21" pos:column="27"/></name> <argument_list pos:line="21" pos:column="28">(<argument><expr><name pos:line="21" pos:column="29">tempfp<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="37">msg<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">-&gt;<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="42">env<pos:position pos:line="21" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="47">msg<pos:position pos:line="21" pos:column="50"/></name><operator pos:line="21" pos:column="50">-&gt;<pos:position pos:line="21" pos:column="55"/></operator><name pos:line="21" pos:column="52">content<pos:position pos:line="21" pos:column="59"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="61">0<pos:position pos:line="21" pos:column="62"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="21" pos:column="64">msg<pos:position pos:line="21" pos:column="67"/></name><operator pos:line="21" pos:column="67">-&gt;<pos:position pos:line="21" pos:column="72"/></operator><name pos:line="21" pos:column="69">chain<pos:position pos:line="21" pos:column="74"/></name></name></expr> ?<pos:position pos:line="21" pos:column="76"/></condition><then pos:line="21" pos:column="76"> <expr><literal type="number" pos:line="21" pos:column="77">1<pos:position pos:line="21" pos:column="78"/></literal></expr> <pos:position pos:line="21" pos:column="79"/></then><else pos:line="21" pos:column="79">: <expr><literal type="number" pos:line="21" pos:column="81">0<pos:position pos:line="21" pos:column="82"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="21" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="84"/></expr_stmt>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifndef pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">ifndef<pos:position pos:line="23" pos:column="8"/></cpp:directive> <name pos:line="23" pos:column="9">MIXMASTER<pos:position pos:line="23" pos:column="18"/></name></cpp:ifndef>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">mutt_write_rfc822_header<pos:position pos:line="24" pos:column="27"/></name> <argument_list pos:line="24" pos:column="28">(<argument><expr><name pos:line="24" pos:column="29">tempfp<pos:position pos:line="24" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="37">msg<pos:position pos:line="24" pos:column="40"/></name><operator pos:line="24" pos:column="40">-&gt;<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="42">env<pos:position pos:line="24" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="47">msg<pos:position pos:line="24" pos:column="50"/></name><operator pos:line="24" pos:column="50">-&gt;<pos:position pos:line="24" pos:column="55"/></operator><name pos:line="24" pos:column="52">content<pos:position pos:line="24" pos:column="59"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="61">0<pos:position pos:line="24" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="64">0<pos:position pos:line="24" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="67"/></expr_stmt>
<cpp:endif pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">endif<pos:position pos:line="25" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">ifdef<pos:position pos:line="26" pos:column="7"/></cpp:directive> <name pos:line="26" pos:column="8">USE_SMTP<pos:position pos:line="26" pos:column="16"/></name></cpp:ifdef>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">old_write_bcc<pos:position pos:line="27" pos:column="20"/></name></expr>)<pos:position pos:line="27" pos:column="21"/></condition><then pos:line="27" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="5">set_option<pos:position pos:line="28" pos:column="15"/></name> <argument_list pos:line="28" pos:column="16">(<argument><expr><name pos:line="28" pos:column="17">OPTWRITEBCC<pos:position pos:line="28" pos:column="28"/></name></expr></argument>)<pos:position pos:line="28" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt></block></then></if>
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif>
  
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">fputc<pos:position pos:line="31" pos:column="8"/></name> <argument_list pos:line="31" pos:column="9">(<argument><expr><literal type="char" pos:line="31" pos:column="10">'\n'<pos:position pos:line="31" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="16">tempfp<pos:position pos:line="31" pos:column="22"/></name></expr></argument>)<pos:position pos:line="31" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt> <comment type="block" pos:line="31" pos:column="25">/* tie off the header. */</comment>

  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><operator pos:line="33" pos:column="7">(<pos:position pos:line="33" pos:column="8"/></operator><call><name pos:line="33" pos:column="8">mutt_write_mime_body<pos:position pos:line="33" pos:column="28"/></name> <argument_list pos:line="33" pos:column="29">(<argument><expr><name><name pos:line="33" pos:column="30">msg<pos:position pos:line="33" pos:column="33"/></name><operator pos:line="33" pos:column="33">-&gt;<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="35">content<pos:position pos:line="33" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="44">tempfp<pos:position pos:line="33" pos:column="50"/></name></expr></argument>)<pos:position pos:line="33" pos:column="51"/></argument_list></call> <operator pos:line="33" pos:column="52">==<pos:position pos:line="33" pos:column="54"/></operator> <operator pos:line="33" pos:column="55">-<pos:position pos:line="33" pos:column="56"/></operator><literal type="number" pos:line="33" pos:column="56">1<pos:position pos:line="33" pos:column="57"/></literal><operator pos:line="33" pos:column="57">)<pos:position pos:line="33" pos:column="58"/></operator></expr>)<pos:position pos:line="33" pos:column="59"/></condition><then pos:line="33" pos:column="59">
  <block pos:line="34" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">safe_fclose<pos:position pos:line="35" pos:column="16"/></name> <argument_list pos:line="35" pos:column="17">(<argument><expr><operator pos:line="35" pos:column="18">&amp;<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="19">tempfp<pos:position pos:line="35" pos:column="25"/></name></expr></argument>)<pos:position pos:line="35" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">unlink<pos:position pos:line="36" pos:column="11"/></name> <argument_list pos:line="36" pos:column="12">(<argument><expr><name pos:line="36" pos:column="13">tempfile<pos:position pos:line="36" pos:column="21"/></name></expr></argument>)<pos:position pos:line="36" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="23"/></expr_stmt>
    <return pos:line="37" pos:column="5">return <expr><operator pos:line="37" pos:column="12">(<pos:position pos:line="37" pos:column="13"/></operator><operator pos:line="37" pos:column="13">-<pos:position pos:line="37" pos:column="14"/></operator><literal type="number" pos:line="37" pos:column="14">1<pos:position pos:line="37" pos:column="15"/></literal><operator pos:line="37" pos:column="15">)<pos:position pos:line="37" pos:column="16"/></operator></expr>;<pos:position pos:line="37" pos:column="17"/></return>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>
  
  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><call><name pos:line="40" pos:column="7">fclose<pos:position pos:line="40" pos:column="13"/></name> <argument_list pos:line="40" pos:column="14">(<argument><expr><name pos:line="40" pos:column="15">tempfp<pos:position pos:line="40" pos:column="21"/></name></expr></argument>)<pos:position pos:line="40" pos:column="22"/></argument_list></call> <operator pos:line="40" pos:column="23">!=<pos:position pos:line="40" pos:column="25"/></operator> <literal type="number" pos:line="40" pos:column="26">0<pos:position pos:line="40" pos:column="27"/></literal></expr>)<pos:position pos:line="40" pos:column="28"/></condition><then pos:line="40" pos:column="28">
  <block pos:line="41" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">mutt_perror<pos:position pos:line="42" pos:column="16"/></name> <argument_list pos:line="42" pos:column="17">(<argument><expr><name pos:line="42" pos:column="18">tempfile<pos:position pos:line="42" pos:column="26"/></name></expr></argument>)<pos:position pos:line="42" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">unlink<pos:position pos:line="43" pos:column="11"/></name> <argument_list pos:line="43" pos:column="12">(<argument><expr><name pos:line="43" pos:column="13">tempfile<pos:position pos:line="43" pos:column="21"/></name></expr></argument>)<pos:position pos:line="43" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="23"/></expr_stmt>
    <return pos:line="44" pos:column="5">return <expr><operator pos:line="44" pos:column="12">(<pos:position pos:line="44" pos:column="13"/></operator><operator pos:line="44" pos:column="13">-<pos:position pos:line="44" pos:column="14"/></operator><literal type="number" pos:line="44" pos:column="14">1<pos:position pos:line="44" pos:column="15"/></literal><operator pos:line="44" pos:column="15">)<pos:position pos:line="44" pos:column="16"/></operator></expr>;<pos:position pos:line="44" pos:column="17"/></return>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">ifdef<pos:position pos:line="47" pos:column="7"/></cpp:directive> <name pos:line="47" pos:column="8">MIXMASTER<pos:position pos:line="47" pos:column="17"/></name></cpp:ifdef>
  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><name><name pos:line="48" pos:column="7">msg<pos:position pos:line="48" pos:column="10"/></name><operator pos:line="48" pos:column="10">-&gt;<pos:position pos:line="48" pos:column="15"/></operator><name pos:line="48" pos:column="12">chain<pos:position pos:line="48" pos:column="17"/></name></name></expr>)<pos:position pos:line="48" pos:column="18"/></condition><then pos:line="48" pos:column="18">
    <block type="pseudo"><return pos:line="49" pos:column="5">return <expr><call><name pos:line="49" pos:column="12">mix_send_message<pos:position pos:line="49" pos:column="28"/></name> <argument_list pos:line="49" pos:column="29">(<argument><expr><name><name pos:line="49" pos:column="30">msg<pos:position pos:line="49" pos:column="33"/></name><operator pos:line="49" pos:column="33">-&gt;<pos:position pos:line="49" pos:column="38"/></operator><name pos:line="49" pos:column="35">chain<pos:position pos:line="49" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="42">tempfile<pos:position pos:line="49" pos:column="50"/></name></expr></argument>)<pos:position pos:line="49" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="52"/></return></block></then></if>
<cpp:endif pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">endif<pos:position pos:line="50" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">if<pos:position pos:line="52" pos:column="4"/></cpp:directive> <expr><name pos:line="52" pos:column="5">USE_SMTP<pos:position pos:line="52" pos:column="13"/></name></expr></cpp:if>
  <if pos:line="53" pos:column="3">if <condition pos:line="53" pos:column="6">(<expr><name pos:line="53" pos:column="7">SmtpUrl<pos:position pos:line="53" pos:column="14"/></name></expr>)<pos:position pos:line="53" pos:column="15"/></condition><then pos:line="53" pos:column="15">
      <block type="pseudo"><return pos:line="54" pos:column="7">return <expr><call><name pos:line="54" pos:column="14">mutt_smtp_send<pos:position pos:line="54" pos:column="28"/></name> <argument_list pos:line="54" pos:column="29">(<argument><expr><name><name pos:line="54" pos:column="30">msg<pos:position pos:line="54" pos:column="33"/></name><operator pos:line="54" pos:column="33">-&gt;<pos:position pos:line="54" pos:column="38"/></operator><name pos:line="54" pos:column="35">env<pos:position pos:line="54" pos:column="38"/></name><operator pos:line="54" pos:column="38">-&gt;<pos:position pos:line="54" pos:column="43"/></operator><name pos:line="54" pos:column="40">from<pos:position pos:line="54" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="46">msg<pos:position pos:line="54" pos:column="49"/></name><operator pos:line="54" pos:column="49">-&gt;<pos:position pos:line="54" pos:column="54"/></operator><name pos:line="54" pos:column="51">env<pos:position pos:line="54" pos:column="54"/></name><operator pos:line="54" pos:column="54">-&gt;<pos:position pos:line="54" pos:column="59"/></operator><name pos:line="54" pos:column="56">to<pos:position pos:line="54" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="60">msg<pos:position pos:line="54" pos:column="63"/></name><operator pos:line="54" pos:column="63">-&gt;<pos:position pos:line="54" pos:column="68"/></operator><name pos:line="54" pos:column="65">env<pos:position pos:line="54" pos:column="68"/></name><operator pos:line="54" pos:column="68">-&gt;<pos:position pos:line="54" pos:column="73"/></operator><name pos:line="54" pos:column="70">cc<pos:position pos:line="54" pos:column="72"/></name></name></expr></argument>,
                             <argument><expr><name><name pos:line="55" pos:column="30">msg<pos:position pos:line="55" pos:column="33"/></name><operator pos:line="55" pos:column="33">-&gt;<pos:position pos:line="55" pos:column="38"/></operator><name pos:line="55" pos:column="35">env<pos:position pos:line="55" pos:column="38"/></name><operator pos:line="55" pos:column="38">-&gt;<pos:position pos:line="55" pos:column="43"/></operator><name pos:line="55" pos:column="40">bcc<pos:position pos:line="55" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="45">tempfile<pos:position pos:line="55" pos:column="53"/></name></expr></argument>,
                             <argument><expr><operator pos:line="56" pos:column="30">(<pos:position pos:line="56" pos:column="31"/></operator><name><name pos:line="56" pos:column="31">msg<pos:position pos:line="56" pos:column="34"/></name><operator pos:line="56" pos:column="34">-&gt;<pos:position pos:line="56" pos:column="39"/></operator><name pos:line="56" pos:column="36">content<pos:position pos:line="56" pos:column="43"/></name><operator pos:line="56" pos:column="43">-&gt;<pos:position pos:line="56" pos:column="48"/></operator><name pos:line="56" pos:column="45">encoding<pos:position pos:line="56" pos:column="53"/></name></name> <operator pos:line="56" pos:column="54">==<pos:position pos:line="56" pos:column="56"/></operator> <name pos:line="56" pos:column="57">ENC8BIT<pos:position pos:line="56" pos:column="64"/></name><operator pos:line="56" pos:column="64">)<pos:position pos:line="56" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="56" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="67"/></return></block></then></if>
<cpp:endif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">endif<pos:position pos:line="57" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="57" pos:column="8">/* USE_SMTP */</comment>

  <expr_stmt><expr><name pos:line="59" pos:column="3">i<pos:position pos:line="59" pos:column="4"/></name> <operator pos:line="59" pos:column="5">=<pos:position pos:line="59" pos:column="6"/></operator> <call><name pos:line="59" pos:column="7">mutt_invoke_sendmail<pos:position pos:line="59" pos:column="27"/></name> <argument_list pos:line="59" pos:column="28">(<argument><expr><name><name pos:line="59" pos:column="29">msg<pos:position pos:line="59" pos:column="32"/></name><operator pos:line="59" pos:column="32">-&gt;<pos:position pos:line="59" pos:column="37"/></operator><name pos:line="59" pos:column="34">env<pos:position pos:line="59" pos:column="37"/></name><operator pos:line="59" pos:column="37">-&gt;<pos:position pos:line="59" pos:column="42"/></operator><name pos:line="59" pos:column="39">from<pos:position pos:line="59" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="45">msg<pos:position pos:line="59" pos:column="48"/></name><operator pos:line="59" pos:column="48">-&gt;<pos:position pos:line="59" pos:column="53"/></operator><name pos:line="59" pos:column="50">env<pos:position pos:line="59" pos:column="53"/></name><operator pos:line="59" pos:column="53">-&gt;<pos:position pos:line="59" pos:column="58"/></operator><name pos:line="59" pos:column="55">to<pos:position pos:line="59" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="59">msg<pos:position pos:line="59" pos:column="62"/></name><operator pos:line="59" pos:column="62">-&gt;<pos:position pos:line="59" pos:column="67"/></operator><name pos:line="59" pos:column="64">env<pos:position pos:line="59" pos:column="67"/></name><operator pos:line="59" pos:column="67">-&gt;<pos:position pos:line="59" pos:column="72"/></operator><name pos:line="59" pos:column="69">cc<pos:position pos:line="59" pos:column="71"/></name></name></expr></argument>, 
			    <argument><expr><name><name pos:line="60" pos:column="29">msg<pos:position pos:line="60" pos:column="32"/></name><operator pos:line="60" pos:column="32">-&gt;<pos:position pos:line="60" pos:column="37"/></operator><name pos:line="60" pos:column="34">env<pos:position pos:line="60" pos:column="37"/></name><operator pos:line="60" pos:column="37">-&gt;<pos:position pos:line="60" pos:column="42"/></operator><name pos:line="60" pos:column="39">bcc<pos:position pos:line="60" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="44">tempfile<pos:position pos:line="60" pos:column="52"/></name></expr></argument>,
                            <argument><expr><operator pos:line="61" pos:column="29">(<pos:position pos:line="61" pos:column="30"/></operator><name><name pos:line="61" pos:column="30">msg<pos:position pos:line="61" pos:column="33"/></name><operator pos:line="61" pos:column="33">-&gt;<pos:position pos:line="61" pos:column="38"/></operator><name pos:line="61" pos:column="35">content<pos:position pos:line="61" pos:column="42"/></name><operator pos:line="61" pos:column="42">-&gt;<pos:position pos:line="61" pos:column="47"/></operator><name pos:line="61" pos:column="44">encoding<pos:position pos:line="61" pos:column="52"/></name></name> <operator pos:line="61" pos:column="53">==<pos:position pos:line="61" pos:column="55"/></operator> <name pos:line="61" pos:column="56">ENC8BIT<pos:position pos:line="61" pos:column="63"/></name><operator pos:line="61" pos:column="63">)<pos:position pos:line="61" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="61" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="66"/></expr_stmt>
  <return pos:line="62" pos:column="3">return <expr><operator pos:line="62" pos:column="10">(<pos:position pos:line="62" pos:column="11"/></operator><name pos:line="62" pos:column="11">i<pos:position pos:line="62" pos:column="12"/></name><operator pos:line="62" pos:column="12">)<pos:position pos:line="62" pos:column="13"/></operator></expr>;<pos:position pos:line="62" pos:column="14"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

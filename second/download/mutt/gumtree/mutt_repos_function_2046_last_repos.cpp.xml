<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2046_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">imap_expunge_mailbox<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">IMAP_DATA<pos:position pos:line="1" pos:column="37"/></name><modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type> <name pos:line="1" pos:column="39">idata<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">HEADER<pos:position pos:line="3" pos:column="9"/></name><modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type> <name pos:line="3" pos:column="11">h<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="10">cacheno<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">short<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">old_sort<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

<cpp:ifdef pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">ifdef<pos:position pos:line="7" pos:column="7"/></cpp:directive> <name pos:line="7" pos:column="8">USE_HCACHE<pos:position pos:line="7" pos:column="18"/></name></cpp:ifdef>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">idata<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">-&gt;<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="10">hcache<pos:position pos:line="8" pos:column="16"/></name></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <call><name pos:line="8" pos:column="19">imap_hcache_open<pos:position pos:line="8" pos:column="35"/></name> <argument_list pos:line="8" pos:column="36">(<argument><expr><name pos:line="8" pos:column="37">idata<pos:position pos:line="8" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="44">NULL<pos:position pos:line="8" pos:column="48"/></name></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="50"/></expr_stmt>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><name pos:line="11" pos:column="3">old_sort<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">Sort<pos:position pos:line="11" pos:column="18"/></name></expr>;<pos:position pos:line="11" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name pos:line="12" pos:column="3">Sort<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <name pos:line="12" pos:column="10">SORT_ORDER<pos:position pos:line="12" pos:column="20"/></name></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">mutt_sort_headers<pos:position pos:line="13" pos:column="20"/></name> <argument_list pos:line="13" pos:column="21">(<argument><expr><name><name pos:line="13" pos:column="22">idata<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">-&gt;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="29">ctx<pos:position pos:line="13" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="34">0<pos:position pos:line="13" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>

  <for pos:line="15" pos:column="3">for <control pos:line="15" pos:column="7">(<init><expr><name pos:line="15" pos:column="8">i<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <literal type="number" pos:line="15" pos:column="12">0<pos:position pos:line="15" pos:column="13"/></literal></expr>;<pos:position pos:line="15" pos:column="14"/></init> <condition><expr><name pos:line="15" pos:column="15">i<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">&lt;<pos:position pos:line="15" pos:column="21"/></operator> <name><name pos:line="15" pos:column="19">idata<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="26">ctx<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">-&gt;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="31">msgcount<pos:position pos:line="15" pos:column="39"/></name></name></expr>;<pos:position pos:line="15" pos:column="40"/></condition> <incr><expr><name pos:line="15" pos:column="41">i<pos:position pos:line="15" pos:column="42"/></name><operator pos:line="15" pos:column="42">++<pos:position pos:line="15" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="45"/></control>
  <block pos:line="16" pos:column="3">{
    <expr_stmt><expr><name pos:line="17" pos:column="5">h<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <name><name pos:line="17" pos:column="9">idata<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">ctx<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">-&gt;<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="21">hdrs<pos:position pos:line="17" pos:column="25"/></name><index pos:line="17" pos:column="25">[<expr><name pos:line="17" pos:column="26">i<pos:position pos:line="17" pos:column="27"/></name></expr>]<pos:position pos:line="17" pos:column="28"/></index></name></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name><name pos:line="19" pos:column="9">h<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">-&gt;<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="12">index<pos:position pos:line="19" pos:column="17"/></name></name> <operator pos:line="19" pos:column="18">==<pos:position pos:line="19" pos:column="20"/></operator> <name pos:line="19" pos:column="21">INT_MAX<pos:position pos:line="19" pos:column="28"/></name></expr>)<pos:position pos:line="19" pos:column="29"/></condition><then pos:line="19" pos:column="29">
    <block pos:line="20" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">dprint<pos:position pos:line="21" pos:column="13"/></name> <argument_list pos:line="21" pos:column="14">(<argument><expr><literal type="number" pos:line="21" pos:column="15">2<pos:position pos:line="21" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="18">(<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">debugfile<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">,<pos:position pos:line="21" pos:column="29"/></operator> <literal type="string" pos:line="21" pos:column="30">"Expunging message UID %d.\n"<pos:position pos:line="21" pos:column="59"/></literal><operator pos:line="21" pos:column="59">,<pos:position pos:line="21" pos:column="60"/></operator> <call><name pos:line="21" pos:column="61">HEADER_DATA<pos:position pos:line="21" pos:column="72"/></name> <argument_list pos:line="21" pos:column="73">(<argument><expr><name pos:line="21" pos:column="74">h<pos:position pos:line="21" pos:column="75"/></name></expr></argument>)<pos:position pos:line="21" pos:column="76"/></argument_list></call><operator pos:line="21" pos:column="76">-&gt;<pos:position pos:line="21" pos:column="81"/></operator><name pos:line="21" pos:column="78">uid<pos:position pos:line="21" pos:column="81"/></name><operator pos:line="21" pos:column="81">)<pos:position pos:line="21" pos:column="82"/></operator></expr></argument>)<pos:position pos:line="21" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="84"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="23" pos:column="7">h<pos:position pos:line="23" pos:column="8"/></name><operator pos:line="23" pos:column="8">-&gt;<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="10">active<pos:position pos:line="23" pos:column="16"/></name></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <literal type="number" pos:line="23" pos:column="19">0<pos:position pos:line="23" pos:column="20"/></literal></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="24" pos:column="7">idata<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">-&gt;<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="14">ctx<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">-&gt;<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="19">size<pos:position pos:line="24" pos:column="23"/></name></name> <operator pos:line="24" pos:column="24">-=<pos:position pos:line="24" pos:column="26"/></operator> <name><name pos:line="24" pos:column="27">h<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">-&gt;<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="30">content<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">-&gt;<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="39">length<pos:position pos:line="24" pos:column="45"/></name></name></expr>;<pos:position pos:line="24" pos:column="46"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="26" pos:column="7">imap_cache_del<pos:position pos:line="26" pos:column="21"/></name> <argument_list pos:line="26" pos:column="22">(<argument><expr><name pos:line="26" pos:column="23">idata<pos:position pos:line="26" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="30">h<pos:position pos:line="26" pos:column="31"/></name></expr></argument>)<pos:position pos:line="26" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt>
<cpp:if pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">if<pos:position pos:line="27" pos:column="4"/></cpp:directive> <expr><name pos:line="27" pos:column="5">USE_HCACHE<pos:position pos:line="27" pos:column="15"/></name></expr></cpp:if>
      <expr_stmt><expr><call><name pos:line="28" pos:column="7">imap_hcache_del<pos:position pos:line="28" pos:column="22"/></name> <argument_list pos:line="28" pos:column="23">(<argument><expr><name pos:line="28" pos:column="24">idata<pos:position pos:line="28" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="31">HEADER_DATA<pos:position pos:line="28" pos:column="42"/></name><argument_list pos:line="28" pos:column="42">(<argument><expr><name pos:line="28" pos:column="43">h<pos:position pos:line="28" pos:column="44"/></name></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call><operator pos:line="28" pos:column="45">-&gt;<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="47">uid<pos:position pos:line="28" pos:column="50"/></name></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="52"/></expr_stmt>
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif>

      <comment type="block" pos:line="31" pos:column="7">/* free cached body from disk, if necessary */</comment>
      <expr_stmt><expr><name pos:line="32" pos:column="7">cacheno<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">=<pos:position pos:line="32" pos:column="16"/></operator> <call><name pos:line="32" pos:column="17">HEADER_DATA<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><name pos:line="32" pos:column="29">h<pos:position pos:line="32" pos:column="30"/></name></expr></argument>)<pos:position pos:line="32" pos:column="31"/></argument_list></call><operator pos:line="32" pos:column="31">-&gt;<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="33">uid<pos:position pos:line="32" pos:column="36"/></name> <operator pos:line="32" pos:column="37">%<pos:position pos:line="32" pos:column="38"/></operator> <name pos:line="32" pos:column="39">IMAP_CACHE_LEN<pos:position pos:line="32" pos:column="53"/></name></expr>;<pos:position pos:line="32" pos:column="54"/></expr_stmt>
      <if pos:line="33" pos:column="7">if <condition pos:line="33" pos:column="10">(<expr><name><name pos:line="33" pos:column="11">idata<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">-&gt;<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="18">cache<pos:position pos:line="33" pos:column="23"/></name><index pos:line="33" pos:column="23">[<expr><name pos:line="33" pos:column="24">cacheno<pos:position pos:line="33" pos:column="31"/></name></expr>]<pos:position pos:line="33" pos:column="32"/></index></name><operator pos:line="33" pos:column="32">.<pos:position pos:line="33" pos:column="33"/></operator><name pos:line="33" pos:column="33">uid<pos:position pos:line="33" pos:column="36"/></name> <operator pos:line="33" pos:column="37">==<pos:position pos:line="33" pos:column="39"/></operator> <call><name pos:line="33" pos:column="40">HEADER_DATA<pos:position pos:line="33" pos:column="51"/></name><argument_list pos:line="33" pos:column="51">(<argument><expr><name pos:line="33" pos:column="52">h<pos:position pos:line="33" pos:column="53"/></name></expr></argument>)<pos:position pos:line="33" pos:column="54"/></argument_list></call><operator pos:line="33" pos:column="54">-&gt;<pos:position pos:line="33" pos:column="59"/></operator><name pos:line="33" pos:column="56">uid<pos:position pos:line="33" pos:column="59"/></name> <operator pos:line="33" pos:column="60">&amp;&amp;<pos:position pos:line="33" pos:column="70"/></operator>
	  <name><name pos:line="34" pos:column="11">idata<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">-&gt;<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="18">cache<pos:position pos:line="34" pos:column="23"/></name><index pos:line="34" pos:column="23">[<expr><name pos:line="34" pos:column="24">cacheno<pos:position pos:line="34" pos:column="31"/></name></expr>]<pos:position pos:line="34" pos:column="32"/></index></name><operator pos:line="34" pos:column="32">.<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="33">path<pos:position pos:line="34" pos:column="37"/></name></expr>)<pos:position pos:line="34" pos:column="38"/></condition><then pos:line="34" pos:column="38">
      <block pos:line="35" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="36" pos:column="9">unlink<pos:position pos:line="36" pos:column="15"/></name> <argument_list pos:line="36" pos:column="16">(<argument><expr><name><name pos:line="36" pos:column="17">idata<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">-&gt;<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="24">cache<pos:position pos:line="36" pos:column="29"/></name><index pos:line="36" pos:column="29">[<expr><name pos:line="36" pos:column="30">cacheno<pos:position pos:line="36" pos:column="37"/></name></expr>]<pos:position pos:line="36" pos:column="38"/></index></name><operator pos:line="36" pos:column="38">.<pos:position pos:line="36" pos:column="39"/></operator><name pos:line="36" pos:column="39">path<pos:position pos:line="36" pos:column="43"/></name></expr></argument>)<pos:position pos:line="36" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">FREE<pos:position pos:line="37" pos:column="13"/></name> <argument_list pos:line="37" pos:column="14">(<argument><expr><operator pos:line="37" pos:column="15">&amp;<pos:position pos:line="37" pos:column="20"/></operator><name><name pos:line="37" pos:column="16">idata<pos:position pos:line="37" pos:column="21"/></name><operator pos:line="37" pos:column="21">-&gt;<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="23">cache<pos:position pos:line="37" pos:column="28"/></name><index pos:line="37" pos:column="28">[<expr><name pos:line="37" pos:column="29">cacheno<pos:position pos:line="37" pos:column="36"/></name></expr>]<pos:position pos:line="37" pos:column="37"/></index></name><operator pos:line="37" pos:column="37">.<pos:position pos:line="37" pos:column="38"/></operator><name pos:line="37" pos:column="38">path<pos:position pos:line="37" pos:column="42"/></name></expr></argument>)<pos:position pos:line="37" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="44"/></expr_stmt>
      }<pos:position pos:line="38" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="40" pos:column="7">int_hash_delete<pos:position pos:line="40" pos:column="22"/></name> <argument_list pos:line="40" pos:column="23">(<argument><expr><name><name pos:line="40" pos:column="24">idata<pos:position pos:line="40" pos:column="29"/></name><operator pos:line="40" pos:column="29">-&gt;<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="31">uid_hash<pos:position pos:line="40" pos:column="39"/></name></name></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="41">HEADER_DATA<pos:position pos:line="40" pos:column="52"/></name><argument_list pos:line="40" pos:column="52">(<argument><expr><name pos:line="40" pos:column="53">h<pos:position pos:line="40" pos:column="54"/></name></expr></argument>)<pos:position pos:line="40" pos:column="55"/></argument_list></call><operator pos:line="40" pos:column="55">-&gt;<pos:position pos:line="40" pos:column="60"/></operator><name pos:line="40" pos:column="57">uid<pos:position pos:line="40" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="62">h<pos:position pos:line="40" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="65">NULL<pos:position pos:line="40" pos:column="69"/></name></expr></argument>)<pos:position pos:line="40" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="71"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="42" pos:column="7">imap_free_header_data<pos:position pos:line="42" pos:column="28"/></name> <argument_list pos:line="42" pos:column="29">(<argument><expr><operator pos:line="42" pos:column="30">(<pos:position pos:line="42" pos:column="31"/></operator><name pos:line="42" pos:column="31">IMAP_HEADER_DATA<pos:position pos:line="42" pos:column="47"/></name><operator pos:line="42" pos:column="47">*<pos:position pos:line="42" pos:column="48"/></operator><operator pos:line="42" pos:column="48">*<pos:position pos:line="42" pos:column="49"/></operator><operator pos:line="42" pos:column="49">)<pos:position pos:line="42" pos:column="50"/></operator><operator pos:line="42" pos:column="50">&amp;<pos:position pos:line="42" pos:column="55"/></operator><name><name pos:line="42" pos:column="51">h<pos:position pos:line="42" pos:column="52"/></name><operator pos:line="42" pos:column="52">-&gt;<pos:position pos:line="42" pos:column="57"/></operator><name pos:line="42" pos:column="54">data<pos:position pos:line="42" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then>
    <else pos:line="44" pos:column="5">else
    <block pos:line="45" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="46" pos:column="7">h<pos:position pos:line="46" pos:column="8"/></name><operator pos:line="46" pos:column="8">-&gt;<pos:position pos:line="46" pos:column="13"/></operator><name pos:line="46" pos:column="10">index<pos:position pos:line="46" pos:column="15"/></name></name> <operator pos:line="46" pos:column="16">=<pos:position pos:line="46" pos:column="17"/></operator> <name pos:line="46" pos:column="18">i<pos:position pos:line="46" pos:column="19"/></name></expr>;<pos:position pos:line="46" pos:column="20"/></expr_stmt>
      <comment type="block" pos:line="47" pos:column="7">/* Mutt has several places where it turns off h-&gt;active as a
       * hack.  For example to avoid FLAG updates, or to exclude from
       * imap_exec_msgset.
       *
       * Unfortunately, when a reopen is allowed and the IMAP_EXPUNGE_PENDING
       * flag becomes set (e.g. a flag update to a modified header),
       * this function will be called by imap_cmd_finish().
       *
       * The mx_update_tables() will free and remove these "inactive" headers,
       * despite that an EXPUNGE was not received for them.
       * This would result in memory leaks and segfaults due to dangling
       * pointers in the msn_index and uid_hash.
       *
       * So this is another hack to work around the hacks.  We don't want to
       * remove the messages, so make sure active is on.
       */</comment>
      <expr_stmt><expr><name><name pos:line="63" pos:column="7">h<pos:position pos:line="63" pos:column="8"/></name><operator pos:line="63" pos:column="8">-&gt;<pos:position pos:line="63" pos:column="13"/></operator><name pos:line="63" pos:column="10">active<pos:position pos:line="63" pos:column="16"/></name></name> <operator pos:line="63" pos:column="17">=<pos:position pos:line="63" pos:column="18"/></operator> <literal type="number" pos:line="63" pos:column="19">1<pos:position pos:line="63" pos:column="20"/></literal></expr>;<pos:position pos:line="63" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="64" pos:column="6"/></block></else></if>
  }<pos:position pos:line="65" pos:column="4"/></block></for>

<cpp:if pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">if<pos:position pos:line="67" pos:column="4"/></cpp:directive> <expr><name pos:line="67" pos:column="5">USE_HCACHE<pos:position pos:line="67" pos:column="15"/></name></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="68" pos:column="3">imap_hcache_close<pos:position pos:line="68" pos:column="20"/></name> <argument_list pos:line="68" pos:column="21">(<argument><expr><name pos:line="68" pos:column="22">idata<pos:position pos:line="68" pos:column="27"/></name></expr></argument>)<pos:position pos:line="68" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="29"/></expr_stmt>
<cpp:endif pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">endif<pos:position pos:line="69" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="71" pos:column="3">/* We may be called on to expunge at any time. We can't rely on the caller
   * to always know to rethread */</comment>
  <expr_stmt><expr><call><name pos:line="73" pos:column="3">mx_update_tables<pos:position pos:line="73" pos:column="19"/></name> <argument_list pos:line="73" pos:column="20">(<argument><expr><name><name pos:line="73" pos:column="21">idata<pos:position pos:line="73" pos:column="26"/></name><operator pos:line="73" pos:column="26">-&gt;<pos:position pos:line="73" pos:column="31"/></operator><name pos:line="73" pos:column="28">ctx<pos:position pos:line="73" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="33">0<pos:position pos:line="73" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name pos:line="74" pos:column="3">Sort<pos:position pos:line="74" pos:column="7"/></name> <operator pos:line="74" pos:column="8">=<pos:position pos:line="74" pos:column="9"/></operator> <name pos:line="74" pos:column="10">old_sort<pos:position pos:line="74" pos:column="18"/></name></expr>;<pos:position pos:line="74" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="75" pos:column="3">mutt_sort_headers<pos:position pos:line="75" pos:column="20"/></name> <argument_list pos:line="75" pos:column="21">(<argument><expr><name><name pos:line="75" pos:column="22">idata<pos:position pos:line="75" pos:column="27"/></name><operator pos:line="75" pos:column="27">-&gt;<pos:position pos:line="75" pos:column="32"/></operator><name pos:line="75" pos:column="29">ctx<pos:position pos:line="75" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="34">1<pos:position pos:line="75" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="37"/></expr_stmt>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

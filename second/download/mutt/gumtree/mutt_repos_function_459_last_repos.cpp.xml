<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_459_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">_mutt_get_field<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">field<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">buf<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">size_t<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">buflen<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">int<pos:position pos:line="1" pos:column="70"/></name></type> <name pos:line="1" pos:column="71">complete<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="81">int<pos:position pos:line="1" pos:column="84"/></name></type> <name pos:line="1" pos:column="85">multiple<pos:position pos:line="1" pos:column="93"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="95">char<pos:position pos:line="1" pos:column="99"/></name> <modifier pos:line="1" pos:column="100">*<pos:position pos:line="1" pos:column="101"/></modifier><modifier pos:line="1" pos:column="101">*<pos:position pos:line="1" pos:column="102"/></modifier><modifier pos:line="1" pos:column="102">*<pos:position pos:line="1" pos:column="103"/></modifier></type><name pos:line="1" pos:column="103">files<pos:position pos:line="1" pos:column="108"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="110">int<pos:position pos:line="1" pos:column="113"/></name> <modifier pos:line="1" pos:column="114">*<pos:position pos:line="1" pos:column="115"/></modifier></type><name pos:line="1" pos:column="115">numfiles<pos:position pos:line="1" pos:column="123"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="124"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">ret<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">x<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">ENTER_STATE<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">es<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><call><name pos:line="6" pos:column="21">mutt_new_enter_state<pos:position pos:line="6" pos:column="41"/></name><argument_list pos:line="6" pos:column="41">()<pos:position pos:line="6" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>
  
  <do pos:line="8" pos:column="3">do
  <block pos:line="9" pos:column="3">{
<cpp:if pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">if<pos:position pos:line="10" pos:column="4"/></cpp:directive> <expr><call><name pos:line="10" pos:column="5">defined<pos:position pos:line="10" pos:column="12"/></name> <argument_list pos:line="10" pos:column="13">(<argument><expr><name pos:line="10" pos:column="14">USE_SLANG_CURSES<pos:position pos:line="10" pos:column="30"/></name></expr></argument>)<pos:position pos:line="10" pos:column="31"/></argument_list></call> <operator pos:line="10" pos:column="32">||<pos:position pos:line="10" pos:column="34"/></operator> <call><name pos:line="10" pos:column="35">defined<pos:position pos:line="10" pos:column="42"/></name> <argument_list pos:line="10" pos:column="43">(<argument><expr><name pos:line="10" pos:column="44">HAVE_RESIZETERM<pos:position pos:line="10" pos:column="59"/></name></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr></cpp:if>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">SigWinch<pos:position pos:line="11" pos:column="17"/></name></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18">
    <block pos:line="12" pos:column="5">{
      <expr_stmt><expr><name pos:line="13" pos:column="7">SigWinch<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal></expr>;<pos:position pos:line="13" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">mutt_resize_screen<pos:position pos:line="14" pos:column="25"/></name> <argument_list pos:line="14" pos:column="26">()<pos:position pos:line="14" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">clearok<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><name pos:line="15" pos:column="15">stdscr<pos:position pos:line="15" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="23">TRUE<pos:position pos:line="15" pos:column="27"/></name></expr></argument>)<pos:position pos:line="15" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">mutt_current_menu_redraw<pos:position pos:line="16" pos:column="31"/></name> <argument_list pos:line="16" pos:column="32">()<pos:position pos:line="16" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">mutt_window_clearline<pos:position pos:line="19" pos:column="26"/></name> <argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">MuttMessageWindow<pos:position pos:line="19" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="47">0<pos:position pos:line="19" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">SETCOLOR<pos:position pos:line="20" pos:column="13"/></name> <argument_list pos:line="20" pos:column="14">(<argument><expr><name pos:line="20" pos:column="15">MT_COLOR_PROMPT<pos:position pos:line="20" pos:column="30"/></name></expr></argument>)<pos:position pos:line="20" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">addstr<pos:position pos:line="21" pos:column="11"/></name> <argument_list pos:line="21" pos:column="12">(<argument><expr><operator pos:line="21" pos:column="13">(<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">char<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">*<pos:position pos:line="21" pos:column="20"/></operator><operator pos:line="21" pos:column="20">)<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="21">field<pos:position pos:line="21" pos:column="26"/></name></expr></argument>)<pos:position pos:line="21" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt> <comment type="block" pos:line="21" pos:column="29">/* cast to get around bad prototypes */</comment>
    <expr_stmt><expr><name pos:line="22" pos:column="5">NORMAL_COLOR<pos:position pos:line="22" pos:column="17"/></name></expr>;<pos:position pos:line="22" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">mutt_refresh<pos:position pos:line="23" pos:column="17"/></name> <argument_list pos:line="23" pos:column="18">()<pos:position pos:line="23" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">mutt_window_getyx<pos:position pos:line="24" pos:column="22"/></name> <argument_list pos:line="24" pos:column="23">(<argument><expr><name pos:line="24" pos:column="24">MuttMessageWindow<pos:position pos:line="24" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="43">NULL<pos:position pos:line="24" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="49">&amp;<pos:position pos:line="24" pos:column="54"/></operator><name pos:line="24" pos:column="50">x<pos:position pos:line="24" pos:column="51"/></name></expr></argument>)<pos:position pos:line="24" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">ret<pos:position pos:line="25" pos:column="8"/></name> <operator pos:line="25" pos:column="9">=<pos:position pos:line="25" pos:column="10"/></operator> <call><name pos:line="25" pos:column="11">_mutt_enter_string<pos:position pos:line="25" pos:column="29"/></name> <argument_list pos:line="25" pos:column="30">(<argument><expr><name pos:line="25" pos:column="31">buf<pos:position pos:line="25" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="36">buflen<pos:position pos:line="25" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="44">x<pos:position pos:line="25" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="47">complete<pos:position pos:line="25" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="57">multiple<pos:position pos:line="25" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="67">files<pos:position pos:line="25" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="74">numfiles<pos:position pos:line="25" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="84">es<pos:position pos:line="25" pos:column="86"/></name></expr></argument>)<pos:position pos:line="25" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="88"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block>
  while <condition pos:line="27" pos:column="9">(<expr><name pos:line="27" pos:column="10">ret<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">==<pos:position pos:line="27" pos:column="16"/></operator> <literal type="number" pos:line="27" pos:column="17">1<pos:position pos:line="27" pos:column="18"/></literal></expr>)<pos:position pos:line="27" pos:column="19"/></condition>;<pos:position pos:line="27" pos:column="20"/></do>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">mutt_window_clearline<pos:position pos:line="28" pos:column="24"/></name> <argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">MuttMessageWindow<pos:position pos:line="28" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="45">0<pos:position pos:line="28" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">mutt_free_enter_state<pos:position pos:line="29" pos:column="24"/></name> <argument_list pos:line="29" pos:column="25">(<argument><expr><operator pos:line="29" pos:column="26">&amp;<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="27">es<pos:position pos:line="29" pos:column="29"/></name></expr></argument>)<pos:position pos:line="29" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>

  <return pos:line="31" pos:column="3">return <expr><operator pos:line="31" pos:column="10">(<pos:position pos:line="31" pos:column="11"/></operator><name pos:line="31" pos:column="11">ret<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">)<pos:position pos:line="31" pos:column="15"/></operator></expr>;<pos:position pos:line="31" pos:column="16"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2070_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">IMAP_STATUS<pos:position pos:line="1" pos:column="12"/></name><modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type> <name pos:line="1" pos:column="14">imap_mboxcache_get<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">IMAP_DATA<pos:position pos:line="1" pos:column="43"/></name><modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type> <name pos:line="1" pos:column="45">idata<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name><modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type> <name pos:line="1" pos:column="64">mbox<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="70">int<pos:position pos:line="1" pos:column="73"/></name></type> <name pos:line="1" pos:column="74">create<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">LIST<pos:position pos:line="3" pos:column="7"/></name><modifier pos:line="3" pos:column="7">*<pos:position pos:line="3" pos:column="8"/></modifier></type> <name pos:line="3" pos:column="9">cur<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">IMAP_STATUS<pos:position pos:line="4" pos:column="14"/></name><modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type> <name pos:line="4" pos:column="16">status<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">IMAP_STATUS<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">scache<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">USE_HCACHE<pos:position pos:line="6" pos:column="18"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">header_cache_t<pos:position pos:line="7" pos:column="17"/></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">hc<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><name pos:line="7" pos:column="24">NULL<pos:position pos:line="7" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">unsigned<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">int<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">uidvalidity<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><name pos:line="8" pos:column="31">NULL<pos:position pos:line="8" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">unsigned<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">int<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">uidnext<pos:position pos:line="9" pos:column="24"/></name> <init pos:line="9" pos:column="25">= <expr><name pos:line="9" pos:column="27">NULL<pos:position pos:line="9" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>

  <for pos:line="12" pos:column="3">for <control pos:line="12" pos:column="7">(<init><expr><name pos:line="12" pos:column="8">cur<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <name><name pos:line="12" pos:column="14">idata<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">-&gt;<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="21">mboxcache<pos:position pos:line="12" pos:column="30"/></name></name></expr>;<pos:position pos:line="12" pos:column="31"/></init> <condition><expr><name pos:line="12" pos:column="32">cur<pos:position pos:line="12" pos:column="35"/></name></expr>;<pos:position pos:line="12" pos:column="36"/></condition> <incr><expr><name pos:line="12" pos:column="37">cur<pos:position pos:line="12" pos:column="40"/></name> <operator pos:line="12" pos:column="41">=<pos:position pos:line="12" pos:column="42"/></operator> <name><name pos:line="12" pos:column="43">cur<pos:position pos:line="12" pos:column="46"/></name><operator pos:line="12" pos:column="46">-&gt;<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="48">next<pos:position pos:line="12" pos:column="52"/></name></name></expr></incr>)<pos:position pos:line="12" pos:column="53"/></control>
  <block pos:line="13" pos:column="3">{
    <expr_stmt><expr><name pos:line="14" pos:column="5">status<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <operator pos:line="14" pos:column="14">(<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">IMAP_STATUS<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">*<pos:position pos:line="14" pos:column="27"/></operator><operator pos:line="14" pos:column="27">)<pos:position pos:line="14" pos:column="28"/></operator><name><name pos:line="14" pos:column="28">cur<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">-&gt;<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="33">data<pos:position pos:line="14" pos:column="37"/></name></name></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><call><name pos:line="16" pos:column="10">imap_mxcmp<pos:position pos:line="16" pos:column="20"/></name> <argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">mbox<pos:position pos:line="16" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="28">status<pos:position pos:line="16" pos:column="34"/></name><operator pos:line="16" pos:column="34">-&gt;<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="36">name<pos:position pos:line="16" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="42"/></condition><then pos:line="16" pos:column="42">
      <block type="pseudo"><return pos:line="17" pos:column="7">return <expr><name pos:line="17" pos:column="14">status<pos:position pos:line="17" pos:column="20"/></name></expr>;<pos:position pos:line="17" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="18" pos:column="4"/></block></for>
  <expr_stmt><expr><name pos:line="19" pos:column="3">status<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <name pos:line="19" pos:column="12">NULL<pos:position pos:line="19" pos:column="16"/></name></expr>;<pos:position pos:line="19" pos:column="17"/></expr_stmt>

  <comment type="block" pos:line="21" pos:column="3">/* lame */</comment>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name pos:line="22" pos:column="7">create<pos:position pos:line="22" pos:column="13"/></name></expr>)<pos:position pos:line="22" pos:column="14"/></condition><then pos:line="22" pos:column="14">
  <block pos:line="23" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">memset<pos:position pos:line="24" pos:column="11"/></name> <argument_list pos:line="24" pos:column="12">(<argument><expr><operator pos:line="24" pos:column="13">&amp;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="14">scache<pos:position pos:line="24" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="22">0<pos:position pos:line="24" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="25">sizeof <argument_list pos:line="24" pos:column="32">(<argument><expr><name pos:line="24" pos:column="33">scache<pos:position pos:line="24" pos:column="39"/></name></expr></argument>)<pos:position pos:line="24" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">scache<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">.<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="12">name<pos:position pos:line="25" pos:column="16"/></name></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <operator pos:line="25" pos:column="19">(<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="20">char<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">*<pos:position pos:line="25" pos:column="25"/></operator><operator pos:line="25" pos:column="25">)<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="26">mbox<pos:position pos:line="25" pos:column="30"/></name></expr>;<pos:position pos:line="25" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">idata<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">-&gt;<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="12">mboxcache<pos:position pos:line="26" pos:column="21"/></name></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <call><name pos:line="26" pos:column="24">mutt_add_list_n<pos:position pos:line="26" pos:column="39"/></name> <argument_list pos:line="26" pos:column="40">(<argument><expr><name><name pos:line="26" pos:column="41">idata<pos:position pos:line="26" pos:column="46"/></name><operator pos:line="26" pos:column="46">-&gt;<pos:position pos:line="26" pos:column="51"/></operator><name pos:line="26" pos:column="48">mboxcache<pos:position pos:line="26" pos:column="57"/></name></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="59">&amp;<pos:position pos:line="26" pos:column="64"/></operator><name pos:line="26" pos:column="60">scache<pos:position pos:line="26" pos:column="66"/></name></expr></argument>,
                                        <argument><expr><sizeof pos:line="27" pos:column="41">sizeof <argument_list pos:line="27" pos:column="48">(<argument><expr><name pos:line="27" pos:column="49">scache<pos:position pos:line="27" pos:column="55"/></name></expr></argument>)<pos:position pos:line="27" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">status<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <call><name pos:line="28" pos:column="14">imap_mboxcache_get<pos:position pos:line="28" pos:column="32"/></name> <argument_list pos:line="28" pos:column="33">(<argument><expr><name pos:line="28" pos:column="34">idata<pos:position pos:line="28" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="41">mbox<pos:position pos:line="28" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="47">0<pos:position pos:line="28" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">status<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">-&gt;<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="13">name<pos:position pos:line="29" pos:column="17"/></name></name> <operator pos:line="29" pos:column="18">=<pos:position pos:line="29" pos:column="19"/></operator> <call><name pos:line="29" pos:column="20">safe_strdup<pos:position pos:line="29" pos:column="31"/></name> <argument_list pos:line="29" pos:column="32">(<argument><expr><name pos:line="29" pos:column="33">mbox<pos:position pos:line="29" pos:column="37"/></name></expr></argument>)<pos:position pos:line="29" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifdef<pos:position pos:line="32" pos:column="7"/></cpp:directive> <name pos:line="32" pos:column="8">USE_HCACHE<pos:position pos:line="32" pos:column="18"/></name></cpp:ifdef>
  <expr_stmt><expr><name pos:line="33" pos:column="3">hc<pos:position pos:line="33" pos:column="5"/></name> <operator pos:line="33" pos:column="6">=<pos:position pos:line="33" pos:column="7"/></operator> <call><name pos:line="33" pos:column="8">imap_hcache_open<pos:position pos:line="33" pos:column="24"/></name> <argument_list pos:line="33" pos:column="25">(<argument><expr><name pos:line="33" pos:column="26">idata<pos:position pos:line="33" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="33">mbox<pos:position pos:line="33" pos:column="37"/></name></expr></argument>)<pos:position pos:line="33" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><name pos:line="34" pos:column="7">hc<pos:position pos:line="34" pos:column="9"/></name></expr>)<pos:position pos:line="34" pos:column="10"/></condition><then pos:line="34" pos:column="10">
  <block pos:line="35" pos:column="3">{
    <expr_stmt><expr><name pos:line="36" pos:column="5">uidvalidity<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator> <call><name pos:line="36" pos:column="19">mutt_hcache_fetch_raw<pos:position pos:line="36" pos:column="40"/></name> <argument_list pos:line="36" pos:column="41">(<argument><expr><name pos:line="36" pos:column="42">hc<pos:position pos:line="36" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="46">"/UIDVALIDITY"<pos:position pos:line="36" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="62">imap_hcache_keylen<pos:position pos:line="36" pos:column="80"/></name></expr></argument>)<pos:position pos:line="36" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="82"/></expr_stmt>
    <expr_stmt><expr><name pos:line="37" pos:column="5">uidnext<pos:position pos:line="37" pos:column="12"/></name> <operator pos:line="37" pos:column="13">=<pos:position pos:line="37" pos:column="14"/></operator> <call><name pos:line="37" pos:column="15">mutt_hcache_fetch_raw<pos:position pos:line="37" pos:column="36"/></name> <argument_list pos:line="37" pos:column="37">(<argument><expr><name pos:line="37" pos:column="38">hc<pos:position pos:line="37" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="42">"/UIDNEXT"<pos:position pos:line="37" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="54">imap_hcache_keylen<pos:position pos:line="37" pos:column="72"/></name></expr></argument>)<pos:position pos:line="37" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="74"/></expr_stmt>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name pos:line="38" pos:column="9">uidvalidity<pos:position pos:line="38" pos:column="20"/></name></expr>)<pos:position pos:line="38" pos:column="21"/></condition><then pos:line="38" pos:column="21">
    <block pos:line="39" pos:column="5">{
      <if pos:line="40" pos:column="7">if <condition pos:line="40" pos:column="10">(<expr><operator pos:line="40" pos:column="11">!<pos:position pos:line="40" pos:column="12"/></operator><name pos:line="40" pos:column="12">status<pos:position pos:line="40" pos:column="18"/></name></expr>)<pos:position pos:line="40" pos:column="19"/></condition><then pos:line="40" pos:column="19">
      <block pos:line="41" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">mutt_hcache_free<pos:position pos:line="42" pos:column="25"/></name> <argument_list pos:line="42" pos:column="26">(<argument><expr><operator pos:line="42" pos:column="27">(<pos:position pos:line="42" pos:column="28"/></operator><name pos:line="42" pos:column="28">void<pos:position pos:line="42" pos:column="32"/></name> <operator pos:line="42" pos:column="33">*<pos:position pos:line="42" pos:column="34"/></operator><operator pos:line="42" pos:column="34">*<pos:position pos:line="42" pos:column="35"/></operator><operator pos:line="42" pos:column="35">)<pos:position pos:line="42" pos:column="36"/></operator><operator pos:line="42" pos:column="36">&amp;<pos:position pos:line="42" pos:column="41"/></operator><name pos:line="42" pos:column="37">uidvalidity<pos:position pos:line="42" pos:column="48"/></name></expr></argument>)<pos:position pos:line="42" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">mutt_hcache_free<pos:position pos:line="43" pos:column="25"/></name> <argument_list pos:line="43" pos:column="26">(<argument><expr><operator pos:line="43" pos:column="27">(<pos:position pos:line="43" pos:column="28"/></operator><name pos:line="43" pos:column="28">void<pos:position pos:line="43" pos:column="32"/></name> <operator pos:line="43" pos:column="33">*<pos:position pos:line="43" pos:column="34"/></operator><operator pos:line="43" pos:column="34">*<pos:position pos:line="43" pos:column="35"/></operator><operator pos:line="43" pos:column="35">)<pos:position pos:line="43" pos:column="36"/></operator><operator pos:line="43" pos:column="36">&amp;<pos:position pos:line="43" pos:column="41"/></operator><name pos:line="43" pos:column="37">uidnext<pos:position pos:line="43" pos:column="44"/></name></expr></argument>)<pos:position pos:line="43" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">mutt_hcache_close<pos:position pos:line="44" pos:column="26"/></name> <argument_list pos:line="44" pos:column="27">(<argument><expr><name pos:line="44" pos:column="28">hc<pos:position pos:line="44" pos:column="30"/></name></expr></argument>)<pos:position pos:line="44" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="32"/></expr_stmt>
        <return pos:line="45" pos:column="9">return <expr><call><name pos:line="45" pos:column="16">imap_mboxcache_get<pos:position pos:line="45" pos:column="34"/></name> <argument_list pos:line="45" pos:column="35">(<argument><expr><name pos:line="45" pos:column="36">idata<pos:position pos:line="45" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="43">mbox<pos:position pos:line="45" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="49">1<pos:position pos:line="45" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="52"/></return>
      }<pos:position pos:line="46" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="47" pos:column="7">status<pos:position pos:line="47" pos:column="13"/></name><operator pos:line="47" pos:column="13">-&gt;<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="15">uidvalidity<pos:position pos:line="47" pos:column="26"/></name></name> <operator pos:line="47" pos:column="27">=<pos:position pos:line="47" pos:column="28"/></operator> <operator pos:line="47" pos:column="29">*<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="30">uidvalidity<pos:position pos:line="47" pos:column="41"/></name></expr>;<pos:position pos:line="47" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="48" pos:column="7">status<pos:position pos:line="48" pos:column="13"/></name><operator pos:line="48" pos:column="13">-&gt;<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="15">uidnext<pos:position pos:line="48" pos:column="22"/></name></name> <operator pos:line="48" pos:column="23">=<pos:position pos:line="48" pos:column="24"/></operator> <ternary><condition><expr><name pos:line="48" pos:column="25">uidnext<pos:position pos:line="48" pos:column="32"/></name></expr> ?<pos:position pos:line="48" pos:column="34"/></condition><then pos:line="48" pos:column="34"> <expr><operator pos:line="48" pos:column="35">*<pos:position pos:line="48" pos:column="36"/></operator><name pos:line="48" pos:column="36">uidnext<pos:position pos:line="48" pos:column="43"/></name></expr></then><else pos:line="48" pos:column="43">: <expr><literal type="number" pos:line="48" pos:column="45">0<pos:position pos:line="48" pos:column="46"/></literal></expr></else></ternary></expr>;<pos:position pos:line="48" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">dprint<pos:position pos:line="49" pos:column="13"/></name> <argument_list pos:line="49" pos:column="14">(<argument><expr><literal type="number" pos:line="49" pos:column="15">3<pos:position pos:line="49" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="49" pos:column="18">(<pos:position pos:line="49" pos:column="19"/></operator><name pos:line="49" pos:column="19">debugfile<pos:position pos:line="49" pos:column="28"/></name><operator pos:line="49" pos:column="28">,<pos:position pos:line="49" pos:column="29"/></operator> <literal type="string" pos:line="49" pos:column="30">"mboxcache: hcache uidvalidity %d, uidnext %d\n"<pos:position pos:line="49" pos:column="78"/></literal><operator pos:line="49" pos:column="78">,<pos:position pos:line="49" pos:column="79"/></operator>
                  <name><name pos:line="50" pos:column="19">status<pos:position pos:line="50" pos:column="25"/></name><operator pos:line="50" pos:column="25">-&gt;<pos:position pos:line="50" pos:column="30"/></operator><name pos:line="50" pos:column="27">uidvalidity<pos:position pos:line="50" pos:column="38"/></name></name><operator pos:line="50" pos:column="38">,<pos:position pos:line="50" pos:column="39"/></operator> <name><name pos:line="50" pos:column="40">status<pos:position pos:line="50" pos:column="46"/></name><operator pos:line="50" pos:column="46">-&gt;<pos:position pos:line="50" pos:column="51"/></operator><name pos:line="50" pos:column="48">uidnext<pos:position pos:line="50" pos:column="55"/></name></name><operator pos:line="50" pos:column="55">)<pos:position pos:line="50" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="50" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">mutt_hcache_free<pos:position pos:line="52" pos:column="21"/></name> <argument_list pos:line="52" pos:column="22">(<argument><expr><operator pos:line="52" pos:column="23">(<pos:position pos:line="52" pos:column="24"/></operator><name pos:line="52" pos:column="24">void<pos:position pos:line="52" pos:column="28"/></name> <operator pos:line="52" pos:column="29">*<pos:position pos:line="52" pos:column="30"/></operator><operator pos:line="52" pos:column="30">*<pos:position pos:line="52" pos:column="31"/></operator><operator pos:line="52" pos:column="31">)<pos:position pos:line="52" pos:column="32"/></operator><operator pos:line="52" pos:column="32">&amp;<pos:position pos:line="52" pos:column="37"/></operator><name pos:line="52" pos:column="33">uidvalidity<pos:position pos:line="52" pos:column="44"/></name></expr></argument>)<pos:position pos:line="52" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">mutt_hcache_free<pos:position pos:line="53" pos:column="21"/></name> <argument_list pos:line="53" pos:column="22">(<argument><expr><operator pos:line="53" pos:column="23">(<pos:position pos:line="53" pos:column="24"/></operator><name pos:line="53" pos:column="24">void<pos:position pos:line="53" pos:column="28"/></name> <operator pos:line="53" pos:column="29">*<pos:position pos:line="53" pos:column="30"/></operator><operator pos:line="53" pos:column="30">*<pos:position pos:line="53" pos:column="31"/></operator><operator pos:line="53" pos:column="31">)<pos:position pos:line="53" pos:column="32"/></operator><operator pos:line="53" pos:column="32">&amp;<pos:position pos:line="53" pos:column="37"/></operator><name pos:line="53" pos:column="33">uidnext<pos:position pos:line="53" pos:column="40"/></name></expr></argument>)<pos:position pos:line="53" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">mutt_hcache_close<pos:position pos:line="54" pos:column="22"/></name> <argument_list pos:line="54" pos:column="23">(<argument><expr><name pos:line="54" pos:column="24">hc<pos:position pos:line="54" pos:column="26"/></name></expr></argument>)<pos:position pos:line="54" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="55" pos:column="4"/></block></then></if>
<cpp:endif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">endif<pos:position pos:line="56" pos:column="7"/></cpp:directive></cpp:endif>

  <return pos:line="58" pos:column="3">return <expr><name pos:line="58" pos:column="10">status<pos:position pos:line="58" pos:column="16"/></name></expr>;<pos:position pos:line="58" pos:column="17"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_105_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">SHA1Update<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">SHA1_CTX<pos:position pos:line="1" pos:column="25"/></name><modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type> <name pos:line="1" pos:column="27">context<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">unsigned<pos:position pos:line="1" pos:column="50"/></name> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name><modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type> <name pos:line="1" pos:column="57">data<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">uint32_t<pos:position pos:line="1" pos:column="71"/></name></type> <name pos:line="1" pos:column="72">len<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
<decl_stmt><decl><type><name pos:line="3" pos:column="1">uint32_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">i<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="4" pos:column="1">uint32_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">j<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">j<pos:position pos:line="6" pos:column="6"/></name> <operator pos:line="6" pos:column="7">=<pos:position pos:line="6" pos:column="8"/></operator> <name><name pos:line="6" pos:column="9">context<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">-&gt;<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="18">count<pos:position pos:line="6" pos:column="23"/></name><index pos:line="6" pos:column="23">[<expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr>]<pos:position pos:line="6" pos:column="26"/></index></name></expr>;<pos:position pos:line="6" pos:column="27"/></expr_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">(<pos:position pos:line="7" pos:column="10"/></operator><name><name pos:line="7" pos:column="10">context<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">count<pos:position pos:line="7" pos:column="24"/></name><index pos:line="7" pos:column="24">[<expr><literal type="number" pos:line="7" pos:column="25">0<pos:position pos:line="7" pos:column="26"/></literal></expr>]<pos:position pos:line="7" pos:column="27"/></index></name> <operator pos:line="7" pos:column="28">+=<pos:position pos:line="7" pos:column="30"/></operator> <name pos:line="7" pos:column="31">len<pos:position pos:line="7" pos:column="34"/></name> <operator pos:line="7" pos:column="35">&lt;&lt;<pos:position pos:line="7" pos:column="43"/></operator> <literal type="number" pos:line="7" pos:column="38">3<pos:position pos:line="7" pos:column="39"/></literal><operator pos:line="7" pos:column="39">)<pos:position pos:line="7" pos:column="40"/></operator> <operator pos:line="7" pos:column="41">&lt;<pos:position pos:line="7" pos:column="45"/></operator> <name pos:line="7" pos:column="43">j<pos:position pos:line="7" pos:column="44"/></name></expr>)<pos:position pos:line="7" pos:column="45"/></condition><then pos:line="7" pos:column="45">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="8" pos:column="9">context<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">count<pos:position pos:line="8" pos:column="23"/></name><index pos:line="8" pos:column="23">[<expr><literal type="number" pos:line="8" pos:column="24">1<pos:position pos:line="8" pos:column="25"/></literal></expr>]<pos:position pos:line="8" pos:column="26"/></index></name><operator pos:line="8" pos:column="26">++<pos:position pos:line="8" pos:column="28"/></operator></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">context<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">count<pos:position pos:line="9" pos:column="19"/></name><index pos:line="9" pos:column="19">[<expr><literal type="number" pos:line="9" pos:column="20">1<pos:position pos:line="9" pos:column="21"/></literal></expr>]<pos:position pos:line="9" pos:column="22"/></index></name> <operator pos:line="9" pos:column="23">+=<pos:position pos:line="9" pos:column="25"/></operator> <operator pos:line="9" pos:column="26">(<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">len<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">&gt;&gt;<pos:position pos:line="9" pos:column="35"/></operator><literal type="number" pos:line="9" pos:column="32">29<pos:position pos:line="9" pos:column="34"/></literal><operator pos:line="9" pos:column="34">)<pos:position pos:line="9" pos:column="35"/></operator></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">j<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">j<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">&gt;&gt;<pos:position pos:line="10" pos:column="17"/></operator> <literal type="number" pos:line="10" pos:column="15">3<pos:position pos:line="10" pos:column="16"/></literal><operator pos:line="10" pos:column="16">)<pos:position pos:line="10" pos:column="17"/></operator> <operator pos:line="10" pos:column="18">&amp;<pos:position pos:line="10" pos:column="23"/></operator> <literal type="number" pos:line="10" pos:column="20">63<pos:position pos:line="10" pos:column="22"/></literal></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">(<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">j<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">+<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">len<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">)<pos:position pos:line="11" pos:column="18"/></operator> <operator pos:line="11" pos:column="19">&gt;<pos:position pos:line="11" pos:column="23"/></operator> <literal type="number" pos:line="11" pos:column="21">63<pos:position pos:line="11" pos:column="23"/></literal></expr>)<pos:position pos:line="11" pos:column="24"/></condition><then pos:line="11" pos:column="24"> <block pos:line="11" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">memcpy<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><operator pos:line="12" pos:column="16">&amp;<pos:position pos:line="12" pos:column="21"/></operator><name><name pos:line="12" pos:column="17">context<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">-&gt;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="26">buffer<pos:position pos:line="12" pos:column="32"/></name><index pos:line="12" pos:column="32">[<expr><name pos:line="12" pos:column="33">j<pos:position pos:line="12" pos:column="34"/></name></expr>]<pos:position pos:line="12" pos:column="35"/></index></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="37">data<pos:position pos:line="12" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="43">(<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="44">i<pos:position pos:line="12" pos:column="45"/></name> <operator pos:line="12" pos:column="46">=<pos:position pos:line="12" pos:column="47"/></operator> <literal type="number" pos:line="12" pos:column="48">64<pos:position pos:line="12" pos:column="50"/></literal><operator pos:line="12" pos:column="50">-<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="51">j<pos:position pos:line="12" pos:column="52"/></name><operator pos:line="12" pos:column="52">)<pos:position pos:line="12" pos:column="53"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">SHA1Transform<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name><name pos:line="13" pos:column="23">context<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">state<pos:position pos:line="13" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="39">context<pos:position pos:line="13" pos:column="46"/></name><operator pos:line="13" pos:column="46">-&gt;<pos:position pos:line="13" pos:column="51"/></operator><name pos:line="13" pos:column="48">buffer<pos:position pos:line="13" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="56"/></expr_stmt>
        <for pos:line="14" pos:column="9">for <control pos:line="14" pos:column="13">( <init pos:line="14" pos:column="15">;<pos:position pos:line="14" pos:column="16"/></init> <condition><expr><name pos:line="14" pos:column="17">i<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">+<pos:position pos:line="14" pos:column="20"/></operator> <literal type="number" pos:line="14" pos:column="21">63<pos:position pos:line="14" pos:column="23"/></literal> <operator pos:line="14" pos:column="24">&lt;<pos:position pos:line="14" pos:column="28"/></operator> <name pos:line="14" pos:column="26">len<pos:position pos:line="14" pos:column="29"/></name></expr>;<pos:position pos:line="14" pos:column="30"/></condition> <incr><expr><name pos:line="14" pos:column="31">i<pos:position pos:line="14" pos:column="32"/></name> <operator pos:line="14" pos:column="33">+=<pos:position pos:line="14" pos:column="35"/></operator> <literal type="number" pos:line="14" pos:column="36">64<pos:position pos:line="14" pos:column="38"/></literal></expr></incr>)<pos:position pos:line="14" pos:column="39"/></control> <block pos:line="14" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">SHA1Transform<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name><name pos:line="15" pos:column="27">context<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">-&gt;<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="36">state<pos:position pos:line="15" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="43">&amp;<pos:position pos:line="15" pos:column="48"/></operator><name><name pos:line="15" pos:column="44">data<pos:position pos:line="15" pos:column="48"/></name><index pos:line="15" pos:column="48">[<expr><name pos:line="15" pos:column="49">i<pos:position pos:line="15" pos:column="50"/></name></expr>]<pos:position pos:line="15" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="16" pos:column="10"/></block></for>
        <expr_stmt><expr><name pos:line="17" pos:column="9">j<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <literal type="number" pos:line="17" pos:column="13">0<pos:position pos:line="17" pos:column="14"/></literal></expr>;<pos:position pos:line="17" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then>
    <else pos:line="19" pos:column="5">else <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="10">i<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <literal type="number" pos:line="19" pos:column="14">0<pos:position pos:line="19" pos:column="15"/></literal></expr>;<pos:position pos:line="19" pos:column="16"/></expr_stmt></block></else></if>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">memcpy<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><operator pos:line="20" pos:column="12">&amp;<pos:position pos:line="20" pos:column="17"/></operator><name><name pos:line="20" pos:column="13">context<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">-&gt;<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="22">buffer<pos:position pos:line="20" pos:column="28"/></name><index pos:line="20" pos:column="28">[<expr><name pos:line="20" pos:column="29">j<pos:position pos:line="20" pos:column="30"/></name></expr>]<pos:position pos:line="20" pos:column="31"/></index></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="33">&amp;<pos:position pos:line="20" pos:column="38"/></operator><name><name pos:line="20" pos:column="34">data<pos:position pos:line="20" pos:column="38"/></name><index pos:line="20" pos:column="38">[<expr><name pos:line="20" pos:column="39">i<pos:position pos:line="20" pos:column="40"/></name></expr>]<pos:position pos:line="20" pos:column="41"/></index></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="43">len<pos:position pos:line="20" pos:column="46"/></name> <operator pos:line="20" pos:column="47">-<pos:position pos:line="20" pos:column="48"/></operator> <name pos:line="20" pos:column="49">i<pos:position pos:line="20" pos:column="50"/></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

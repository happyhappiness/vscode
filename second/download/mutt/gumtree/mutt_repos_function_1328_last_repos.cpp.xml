<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1328_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type>
<name pos:line="2" pos:column="1">parse_route_addr<pos:position pos:line="2" pos:column="17"/></name> <parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name pos:line="2" pos:column="25">char<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">s<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>,
		  <parameter><decl><type><name pos:line="3" pos:column="19">char<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">comment<pos:position pos:line="3" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="34">size_t<pos:position pos:line="3" pos:column="40"/></name> <modifier pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></modifier></type><name pos:line="3" pos:column="42">commentlen<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="54">size_t<pos:position pos:line="3" pos:column="60"/></name></type> <name pos:line="3" pos:column="61">commentmax<pos:position pos:line="3" pos:column="71"/></name></decl></parameter>,
		  <parameter><decl><type><name pos:line="4" pos:column="19">ADDRESS<pos:position pos:line="4" pos:column="26"/></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">addr<pos:position pos:line="4" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="33"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">token<pos:position pos:line="6" pos:column="13"/></name><index pos:line="6" pos:column="13">[<expr><name pos:line="6" pos:column="14">LONG_STRING<pos:position pos:line="6" pos:column="25"/></name></expr>]<pos:position pos:line="6" pos:column="26"/></index></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">tokenlen<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><literal type="number" pos:line="7" pos:column="21">0<pos:position pos:line="7" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">s<pos:position pos:line="9" pos:column="4"/></name> <operator pos:line="9" pos:column="5">=<pos:position pos:line="9" pos:column="6"/></operator> <call><name pos:line="9" pos:column="7">skip_email_wsp<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><name pos:line="9" pos:column="22">s<pos:position pos:line="9" pos:column="23"/></name></expr></argument>)<pos:position pos:line="9" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt>

  <comment type="block" pos:line="11" pos:column="3">/* find the end of the route */</comment>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">*<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">s<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">==<pos:position pos:line="12" pos:column="12"/></operator> <literal type="char" pos:line="12" pos:column="13">'@'<pos:position pos:line="12" pos:column="16"/></literal></expr>)<pos:position pos:line="12" pos:column="17"/></condition><then pos:line="12" pos:column="17">
  <block pos:line="13" pos:column="3">{
    <while pos:line="14" pos:column="5">while <condition pos:line="14" pos:column="11">(<expr><name pos:line="14" pos:column="12">s<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">&amp;&amp;<pos:position pos:line="14" pos:column="24"/></operator> <operator pos:line="14" pos:column="17">*<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">s<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">==<pos:position pos:line="14" pos:column="22"/></operator> <literal type="char" pos:line="14" pos:column="23">'@'<pos:position pos:line="14" pos:column="26"/></literal></expr>)<pos:position pos:line="14" pos:column="27"/></condition>
    <block pos:line="15" pos:column="5">{
      <if pos:line="16" pos:column="7">if <condition pos:line="16" pos:column="10">(<expr><name pos:line="16" pos:column="11">tokenlen<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">&lt;<pos:position pos:line="16" pos:column="24"/></operator> <sizeof pos:line="16" pos:column="22">sizeof <argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">token<pos:position pos:line="16" pos:column="35"/></name></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></sizeof> <operator pos:line="16" pos:column="37">-<pos:position pos:line="16" pos:column="38"/></operator> <literal type="number" pos:line="16" pos:column="39">1<pos:position pos:line="16" pos:column="40"/></literal></expr>)<pos:position pos:line="16" pos:column="41"/></condition><then pos:line="16" pos:column="41">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="9">token<pos:position pos:line="17" pos:column="14"/></name><index pos:line="17" pos:column="14">[<expr><name pos:line="17" pos:column="15">tokenlen<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">++<pos:position pos:line="17" pos:column="25"/></operator></expr>]<pos:position pos:line="17" pos:column="26"/></index></name> <operator pos:line="17" pos:column="27">=<pos:position pos:line="17" pos:column="28"/></operator> <literal type="char" pos:line="17" pos:column="29">'@'<pos:position pos:line="17" pos:column="32"/></literal></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="18" pos:column="7">s<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <call><name pos:line="18" pos:column="11">parse_mailboxdomain<pos:position pos:line="18" pos:column="30"/></name> <argument_list pos:line="18" pos:column="31">(<argument><expr><name pos:line="18" pos:column="32">s<pos:position pos:line="18" pos:column="33"/></name> <operator pos:line="18" pos:column="34">+<pos:position pos:line="18" pos:column="35"/></operator> <literal type="number" pos:line="18" pos:column="36">1<pos:position pos:line="18" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="39">",.\\[]("<pos:position pos:line="18" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="50">token<pos:position pos:line="18" pos:column="55"/></name></expr></argument>,
			       <argument><expr><operator pos:line="19" pos:column="32">&amp;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="33">tokenlen<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="43">sizeof <argument_list pos:line="19" pos:column="50">(<argument><expr><name pos:line="19" pos:column="51">token<pos:position pos:line="19" pos:column="56"/></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></sizeof> <operator pos:line="19" pos:column="58">-<pos:position pos:line="19" pos:column="59"/></operator> <literal type="number" pos:line="19" pos:column="60">1<pos:position pos:line="19" pos:column="61"/></literal></expr></argument>,
			       <argument><expr><name pos:line="20" pos:column="32">comment<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="41">commentlen<pos:position pos:line="20" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="53">commentmax<pos:position pos:line="20" pos:column="63"/></name></expr></argument>)<pos:position pos:line="20" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></while>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">s<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">||<pos:position pos:line="22" pos:column="14"/></operator> <operator pos:line="22" pos:column="15">*<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">s<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">!=<pos:position pos:line="22" pos:column="20"/></operator> <literal type="char" pos:line="22" pos:column="21">':'<pos:position pos:line="22" pos:column="24"/></literal></expr>)<pos:position pos:line="22" pos:column="25"/></condition><then pos:line="22" pos:column="25">
    <block pos:line="23" pos:column="5">{
      <expr_stmt><expr><name pos:line="24" pos:column="7">RFC822Error<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <name pos:line="24" pos:column="21">ERR_BAD_ROUTE<pos:position pos:line="24" pos:column="34"/></name></expr>;<pos:position pos:line="24" pos:column="35"/></expr_stmt>
      <return pos:line="25" pos:column="7">return <expr><name pos:line="25" pos:column="14">NULL<pos:position pos:line="25" pos:column="18"/></name></expr>;<pos:position pos:line="25" pos:column="19"/></return> <comment type="block" pos:line="25" pos:column="20">/* invalid route */</comment>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">tokenlen<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">&lt;<pos:position pos:line="28" pos:column="22"/></operator> <sizeof pos:line="28" pos:column="20">sizeof <argument_list pos:line="28" pos:column="27">(<argument><expr><name pos:line="28" pos:column="28">token<pos:position pos:line="28" pos:column="33"/></name></expr></argument>)<pos:position pos:line="28" pos:column="34"/></argument_list></sizeof> <operator pos:line="28" pos:column="35">-<pos:position pos:line="28" pos:column="36"/></operator> <literal type="number" pos:line="28" pos:column="37">1<pos:position pos:line="28" pos:column="38"/></literal></expr>)<pos:position pos:line="28" pos:column="39"/></condition><then pos:line="28" pos:column="39">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="7">token<pos:position pos:line="29" pos:column="12"/></name><index pos:line="29" pos:column="12">[<expr><name pos:line="29" pos:column="13">tokenlen<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">++<pos:position pos:line="29" pos:column="23"/></operator></expr>]<pos:position pos:line="29" pos:column="24"/></index></name> <operator pos:line="29" pos:column="25">=<pos:position pos:line="29" pos:column="26"/></operator> <literal type="char" pos:line="29" pos:column="27">':'<pos:position pos:line="29" pos:column="30"/></literal></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="30" pos:column="5">s<pos:position pos:line="30" pos:column="6"/></name><operator pos:line="30" pos:column="6">++<pos:position pos:line="30" pos:column="8"/></operator></expr>;<pos:position pos:line="30" pos:column="9"/></expr_stmt>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><operator pos:line="33" pos:column="7">(<pos:position pos:line="33" pos:column="8"/></operator><name pos:line="33" pos:column="8">s<pos:position pos:line="33" pos:column="9"/></name> <operator pos:line="33" pos:column="10">=<pos:position pos:line="33" pos:column="11"/></operator> <call><name pos:line="33" pos:column="12">parse_address<pos:position pos:line="33" pos:column="25"/></name> <argument_list pos:line="33" pos:column="26">(<argument><expr><name pos:line="33" pos:column="27">s<pos:position pos:line="33" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="30">token<pos:position pos:line="33" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="37">&amp;<pos:position pos:line="33" pos:column="42"/></operator><name pos:line="33" pos:column="38">tokenlen<pos:position pos:line="33" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="48">sizeof <argument_list pos:line="33" pos:column="55">(<argument><expr><name pos:line="33" pos:column="56">token<pos:position pos:line="33" pos:column="61"/></name></expr></argument>)<pos:position pos:line="33" pos:column="62"/></argument_list></sizeof> <operator pos:line="33" pos:column="63">-<pos:position pos:line="33" pos:column="64"/></operator> <literal type="number" pos:line="33" pos:column="65">1<pos:position pos:line="33" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="68">comment<pos:position pos:line="33" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="77">commentlen<pos:position pos:line="33" pos:column="87"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="89">commentmax<pos:position pos:line="33" pos:column="99"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="101">addr<pos:position pos:line="33" pos:column="105"/></name></expr></argument>)<pos:position pos:line="33" pos:column="106"/></argument_list></call><operator pos:line="33" pos:column="106">)<pos:position pos:line="33" pos:column="107"/></operator> <operator pos:line="33" pos:column="108">==<pos:position pos:line="33" pos:column="110"/></operator> <name pos:line="33" pos:column="111">NULL<pos:position pos:line="33" pos:column="115"/></name></expr>)<pos:position pos:line="33" pos:column="116"/></condition><then pos:line="33" pos:column="116">
    <block type="pseudo"><return pos:line="34" pos:column="5">return <expr><name pos:line="34" pos:column="12">NULL<pos:position pos:line="34" pos:column="16"/></name></expr>;<pos:position pos:line="34" pos:column="17"/></return></block></then></if>

  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><operator pos:line="36" pos:column="7">*<pos:position pos:line="36" pos:column="8"/></operator><name pos:line="36" pos:column="8">s<pos:position pos:line="36" pos:column="9"/></name> <operator pos:line="36" pos:column="10">!=<pos:position pos:line="36" pos:column="12"/></operator> <literal type="char" pos:line="36" pos:column="13">'&gt;'<pos:position pos:line="36" pos:column="19"/></literal></expr>)<pos:position pos:line="36" pos:column="17"/></condition><then pos:line="36" pos:column="17">
  <block pos:line="37" pos:column="3">{
    <expr_stmt><expr><name pos:line="38" pos:column="5">RFC822Error<pos:position pos:line="38" pos:column="16"/></name> <operator pos:line="38" pos:column="17">=<pos:position pos:line="38" pos:column="18"/></operator> <name pos:line="38" pos:column="19">ERR_BAD_ROUTE_ADDR<pos:position pos:line="38" pos:column="37"/></name></expr>;<pos:position pos:line="38" pos:column="38"/></expr_stmt>
    <return pos:line="39" pos:column="5">return <expr><name pos:line="39" pos:column="12">NULL<pos:position pos:line="39" pos:column="16"/></name></expr>;<pos:position pos:line="39" pos:column="17"/></return>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>

  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><operator pos:line="42" pos:column="7">!<pos:position pos:line="42" pos:column="8"/></operator><name><name pos:line="42" pos:column="8">addr<pos:position pos:line="42" pos:column="12"/></name><operator pos:line="42" pos:column="12">-&gt;<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="14">mailbox<pos:position pos:line="42" pos:column="21"/></name></name></expr>)<pos:position pos:line="42" pos:column="22"/></condition><then pos:line="42" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="43" pos:column="5">addr<pos:position pos:line="43" pos:column="9"/></name><operator pos:line="43" pos:column="9">-&gt;<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="11">mailbox<pos:position pos:line="43" pos:column="18"/></name></name> <operator pos:line="43" pos:column="19">=<pos:position pos:line="43" pos:column="20"/></operator> <call><name pos:line="43" pos:column="21">safe_strdup<pos:position pos:line="43" pos:column="32"/></name> <argument_list pos:line="43" pos:column="33">(<argument><expr><literal type="string" pos:line="43" pos:column="34">"@"<pos:position pos:line="43" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="39"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="45" pos:column="3">s<pos:position pos:line="45" pos:column="4"/></name><operator pos:line="45" pos:column="4">++<pos:position pos:line="45" pos:column="6"/></operator></expr>;<pos:position pos:line="45" pos:column="7"/></expr_stmt>
  <return pos:line="46" pos:column="3">return <expr><name pos:line="46" pos:column="10">s<pos:position pos:line="46" pos:column="11"/></name></expr>;<pos:position pos:line="46" pos:column="12"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

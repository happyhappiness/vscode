<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_416_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">smime_key_t<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type><name pos:line="1" pos:column="21">smime_get_key_by_str<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">str<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">short<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">abilities<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="70">short<pos:position pos:line="1" pos:column="75"/></name> <specifier pos:line="1" pos:column="76">public<pos:position pos:line="1" pos:column="82"/></specifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="83"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">smime_key_t<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">results<pos:position pos:line="3" pos:column="23"/></name></decl>, <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="26">result<pos:position pos:line="3" pos:column="32"/></name></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">smime_key_t<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">matches<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><name pos:line="4" pos:column="26">NULL<pos:position pos:line="4" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">smime_key_t<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier><modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">matches_end<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><operator pos:line="5" pos:column="31">&amp;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="32">matches<pos:position pos:line="5" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">smime_key_t<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">match<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">smime_key_t<pos:position pos:line="7" pos:column="14"/></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">return_key<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><name pos:line="7" pos:column="29">NULL<pos:position pos:line="7" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">!<pos:position pos:line="9" pos:column="8"/></operator> <name pos:line="9" pos:column="9">str<pos:position pos:line="9" pos:column="12"/></name></expr>)<pos:position pos:line="9" pos:column="13"/></condition><then pos:line="9" pos:column="13">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">NULL<pos:position pos:line="10" pos:column="16"/></name></expr>;<pos:position pos:line="10" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="12" pos:column="3">results<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <call><name pos:line="12" pos:column="13">smime_get_candidates<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">str<pos:position pos:line="12" pos:column="37"/></name></expr></argument>, <argument><expr><specifier pos:line="12" pos:column="39">public<pos:position pos:line="12" pos:column="45"/></specifier></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="47"/></expr_stmt>
  <for pos:line="13" pos:column="3">for <control pos:line="13" pos:column="7">(<init><expr><name pos:line="13" pos:column="8">result<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <name pos:line="13" pos:column="17">results<pos:position pos:line="13" pos:column="24"/></name></expr>;<pos:position pos:line="13" pos:column="25"/></init> <condition><expr><name pos:line="13" pos:column="26">result<pos:position pos:line="13" pos:column="32"/></name></expr>;<pos:position pos:line="13" pos:column="33"/></condition> <incr><expr><name pos:line="13" pos:column="34">result<pos:position pos:line="13" pos:column="40"/></name> <operator pos:line="13" pos:column="41">=<pos:position pos:line="13" pos:column="42"/></operator> <name><name pos:line="13" pos:column="43">result<pos:position pos:line="13" pos:column="49"/></name><operator pos:line="13" pos:column="49">-&gt;<pos:position pos:line="13" pos:column="54"/></operator><name pos:line="13" pos:column="51">next<pos:position pos:line="13" pos:column="55"/></name></name></expr></incr>)<pos:position pos:line="13" pos:column="56"/></control>
  <block pos:line="14" pos:column="3">{
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">abilities<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">&amp;&amp;<pos:position pos:line="15" pos:column="29"/></operator> <operator pos:line="15" pos:column="22">!<pos:position pos:line="15" pos:column="23"/></operator><operator pos:line="15" pos:column="23">(<pos:position pos:line="15" pos:column="24"/></operator><name><name pos:line="15" pos:column="24">result<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">-&gt;<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="32">flags<pos:position pos:line="15" pos:column="37"/></name></name> <operator pos:line="15" pos:column="38">&amp;<pos:position pos:line="15" pos:column="43"/></operator> <name pos:line="15" pos:column="40">abilities<pos:position pos:line="15" pos:column="49"/></name><operator pos:line="15" pos:column="49">)<pos:position pos:line="15" pos:column="50"/></operator></expr>)<pos:position pos:line="15" pos:column="51"/></condition><then pos:line="15" pos:column="51">
    <block pos:line="16" pos:column="5">{
      <continue pos:line="17" pos:column="7">continue;<pos:position pos:line="17" pos:column="16"/></continue>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">(<pos:position pos:line="20" pos:column="10"/></operator><call><name pos:line="20" pos:column="10">mutt_strcasecmp<pos:position pos:line="20" pos:column="25"/></name> <argument_list pos:line="20" pos:column="26">(<argument><expr><name pos:line="20" pos:column="27">str<pos:position pos:line="20" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="32">result<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">-&gt;<pos:position pos:line="20" pos:column="43"/></operator><name pos:line="20" pos:column="40">hash<pos:position pos:line="20" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call> <operator pos:line="20" pos:column="46">==<pos:position pos:line="20" pos:column="48"/></operator> <literal type="number" pos:line="20" pos:column="49">0<pos:position pos:line="20" pos:column="50"/></literal><operator pos:line="20" pos:column="50">)<pos:position pos:line="20" pos:column="51"/></operator> <operator pos:line="20" pos:column="52">||<pos:position pos:line="20" pos:column="54"/></operator>
        <call><name pos:line="21" pos:column="9">mutt_stristr<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name><name pos:line="21" pos:column="22">result<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">-&gt;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="30">email<pos:position pos:line="21" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="37">str<pos:position pos:line="21" pos:column="40"/></name></expr></argument>)<pos:position pos:line="21" pos:column="41"/></argument_list></call> <operator pos:line="21" pos:column="42">||<pos:position pos:line="21" pos:column="44"/></operator>
        <call><name pos:line="22" pos:column="9">mutt_stristr<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name><name pos:line="22" pos:column="22">result<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">-&gt;<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="30">label<pos:position pos:line="22" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="37">str<pos:position pos:line="22" pos:column="40"/></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="42"/></condition><then pos:line="22" pos:column="42">
    <block pos:line="23" pos:column="5">{
      <expr_stmt><expr><name pos:line="24" pos:column="7">match<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <call><name pos:line="24" pos:column="15">smime_copy_key<pos:position pos:line="24" pos:column="29"/></name> <argument_list pos:line="24" pos:column="30">(<argument><expr><name pos:line="24" pos:column="31">result<pos:position pos:line="24" pos:column="37"/></name></expr></argument>)<pos:position pos:line="24" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="25" pos:column="7">*<pos:position pos:line="25" pos:column="8"/></operator><name pos:line="25" pos:column="8">matches_end<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <name pos:line="25" pos:column="22">match<pos:position pos:line="25" pos:column="27"/></name></expr>;<pos:position pos:line="25" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name pos:line="26" pos:column="7">matches_end<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <operator pos:line="26" pos:column="21">&amp;<pos:position pos:line="26" pos:column="26"/></operator><name><name pos:line="26" pos:column="22">match<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">-&gt;<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="29">next<pos:position pos:line="26" pos:column="33"/></name></name></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
  }<pos:position pos:line="28" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="30" pos:column="3">smime_free_key<pos:position pos:line="30" pos:column="17"/></name> <argument_list pos:line="30" pos:column="18">(<argument><expr><operator pos:line="30" pos:column="19">&amp;<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="20">results<pos:position pos:line="30" pos:column="27"/></name></expr></argument>)<pos:position pos:line="30" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>

  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name pos:line="32" pos:column="7">matches<pos:position pos:line="32" pos:column="14"/></name></expr>)<pos:position pos:line="32" pos:column="15"/></condition><then pos:line="32" pos:column="15">
  <block pos:line="33" pos:column="3">{
    <expr_stmt><expr><name pos:line="34" pos:column="5">return_key<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <call><name pos:line="34" pos:column="18">smime_copy_key<pos:position pos:line="34" pos:column="32"/></name> <argument_list pos:line="34" pos:column="33">(<argument><expr><call><name pos:line="34" pos:column="34">smime_select_key<pos:position pos:line="34" pos:column="50"/></name> <argument_list pos:line="34" pos:column="51">(<argument><expr><name pos:line="34" pos:column="52">matches<pos:position pos:line="34" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="61">str<pos:position pos:line="34" pos:column="64"/></name></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">smime_free_key<pos:position pos:line="35" pos:column="19"/></name> <argument_list pos:line="35" pos:column="20">(<argument><expr><operator pos:line="35" pos:column="21">&amp;<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="22">matches<pos:position pos:line="35" pos:column="29"/></name></expr></argument>)<pos:position pos:line="35" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>

  <return pos:line="38" pos:column="3">return <expr><name pos:line="38" pos:column="10">return_key<pos:position pos:line="38" pos:column="20"/></name></expr>;<pos:position pos:line="38" pos:column="21"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

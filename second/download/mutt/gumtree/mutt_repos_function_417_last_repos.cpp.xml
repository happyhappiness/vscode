<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_417_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">smime_key_t<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">smime_ask_for_key<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">prompt<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">short<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">abilities<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">short<pos:position pos:line="1" pos:column="68"/></name> <specifier pos:line="1" pos:column="69">public<pos:position pos:line="1" pos:column="75"/></specifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">smime_key_t<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">key<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">resp<pos:position pos:line="4" pos:column="12"/></name><index pos:line="4" pos:column="12">[<expr><name pos:line="4" pos:column="13">SHORT_STRING<pos:position pos:line="4" pos:column="25"/></name></expr>]<pos:position pos:line="4" pos:column="26"/></index></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">!<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">prompt<pos:position pos:line="6" pos:column="14"/></name></expr>)<pos:position pos:line="6" pos:column="15"/></condition><then pos:line="6" pos:column="15"> <block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="16">prompt<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">=<pos:position pos:line="6" pos:column="24"/></operator> <call><name pos:line="6" pos:column="25">_<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><literal type="string" pos:line="6" pos:column="27">"Enter keyID: "<pos:position pos:line="6" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="44"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">mutt_clear_error<pos:position pos:line="8" pos:column="19"/></name> <argument_list pos:line="8" pos:column="20">()<pos:position pos:line="8" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt>

  <macro><name pos:line="10" pos:column="3">FOREVER<pos:position pos:line="10" pos:column="10"/></name></macro>
  <block pos:line="11" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">resp<pos:position pos:line="12" pos:column="9"/></name><index pos:line="12" pos:column="9">[<expr><literal type="number" pos:line="12" pos:column="10">0<pos:position pos:line="12" pos:column="11"/></literal></expr>]<pos:position pos:line="12" pos:column="12"/></index></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <literal type="number" pos:line="12" pos:column="15">0<pos:position pos:line="12" pos:column="16"/></literal></expr>;<pos:position pos:line="12" pos:column="17"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">mutt_get_field<pos:position pos:line="13" pos:column="23"/></name> <argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">prompt<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="33">resp<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="39">sizeof <argument_list pos:line="13" pos:column="46">(<argument><expr><name pos:line="13" pos:column="47">resp<pos:position pos:line="13" pos:column="51"/></name></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="13" pos:column="54">MUTT_CLEAR<pos:position pos:line="13" pos:column="64"/></name></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call> <operator pos:line="13" pos:column="66">!=<pos:position pos:line="13" pos:column="68"/></operator> <literal type="number" pos:line="13" pos:column="69">0<pos:position pos:line="13" pos:column="70"/></literal></expr>)<pos:position pos:line="13" pos:column="71"/></condition><then pos:line="13" pos:column="71">
      <block type="pseudo"><return pos:line="14" pos:column="7">return <expr><name pos:line="14" pos:column="14">NULL<pos:position pos:line="14" pos:column="18"/></name></expr>;<pos:position pos:line="14" pos:column="19"/></return></block></then></if>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">key<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <call><name pos:line="16" pos:column="16">smime_get_key_by_str<pos:position pos:line="16" pos:column="36"/></name> <argument_list pos:line="16" pos:column="37">(<argument><expr><name pos:line="16" pos:column="38">resp<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="44">abilities<pos:position pos:line="16" pos:column="53"/></name></expr></argument>, <argument><expr><specifier pos:line="16" pos:column="55">public<pos:position pos:line="16" pos:column="61"/></specifier></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></call><operator pos:line="16" pos:column="62">)<pos:position pos:line="16" pos:column="63"/></operator></expr>)<pos:position pos:line="16" pos:column="64"/></condition><then pos:line="16" pos:column="64">
      <block type="pseudo"><return pos:line="17" pos:column="7">return <expr><name pos:line="17" pos:column="14">key<pos:position pos:line="17" pos:column="17"/></name></expr>;<pos:position pos:line="17" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">BEEP<pos:position pos:line="19" pos:column="9"/></name> <argument_list pos:line="19" pos:column="10">()<pos:position pos:line="19" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2069_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">imap_status<pos:position pos:line="1" pos:column="16"/></name> <parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">char<pos:position pos:line="1" pos:column="22"/></name><modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type> <name pos:line="1" pos:column="24">path<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="30">int<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">queue<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="3" pos:column="3">static<pos:position pos:line="3" pos:column="9"/></specifier> <type><name pos:line="3" pos:column="10">int<pos:position pos:line="3" pos:column="13"/></name></type> <name pos:line="3" pos:column="14">queued<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><literal type="number" pos:line="3" pos:column="23">0<pos:position pos:line="3" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">IMAP_DATA<pos:position pos:line="5" pos:column="12"/></name> <modifier pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></modifier></type><name pos:line="5" pos:column="14">idata<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">buf<pos:position pos:line="6" pos:column="11"/></name><index pos:line="6" pos:column="11">[<expr><name pos:line="6" pos:column="12">LONG_STRING<pos:position pos:line="6" pos:column="23"/></name></expr>]<pos:position pos:line="6" pos:column="24"/></index></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">mbox<pos:position pos:line="7" pos:column="12"/></name><index pos:line="7" pos:column="12">[<expr><name pos:line="7" pos:column="13">LONG_STRING<pos:position pos:line="7" pos:column="24"/></name></expr>]<pos:position pos:line="7" pos:column="25"/></index></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">IMAP_STATUS<pos:position pos:line="8" pos:column="14"/></name><modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type> <name pos:line="8" pos:column="16">status<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><call><name pos:line="10" pos:column="7">imap_get_mailbox<pos:position pos:line="10" pos:column="23"/></name> <argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">path<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="31">&amp;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="32">idata<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="39">buf<pos:position pos:line="10" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="44">sizeof <argument_list pos:line="10" pos:column="51">(<argument><expr><name pos:line="10" pos:column="52">buf<pos:position pos:line="10" pos:column="55"/></name></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call> <operator pos:line="10" pos:column="58">&lt;<pos:position pos:line="10" pos:column="62"/></operator> <literal type="number" pos:line="10" pos:column="60">0<pos:position pos:line="10" pos:column="61"/></literal></expr>)<pos:position pos:line="10" pos:column="62"/></condition><then pos:line="10" pos:column="62">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">-<pos:position pos:line="11" pos:column="13"/></operator><literal type="number" pos:line="11" pos:column="13">1<pos:position pos:line="11" pos:column="14"/></literal></expr>;<pos:position pos:line="11" pos:column="15"/></return></block></then></if>

  <comment type="block" pos:line="13" pos:column="3">/* We are in the folder we're polling - just return the mailbox count.
   *
   * Note that imap_mxcmp() converts NULL to "INBOX", so we need to
   * make sure the idata really is open to a folder. */</comment>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name><name pos:line="17" pos:column="7">idata<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">ctx<pos:position pos:line="17" pos:column="17"/></name></name> <operator pos:line="17" pos:column="18">&amp;&amp;<pos:position pos:line="17" pos:column="28"/></operator> <operator pos:line="17" pos:column="21">!<pos:position pos:line="17" pos:column="22"/></operator><call><name pos:line="17" pos:column="22">imap_mxcmp<pos:position pos:line="17" pos:column="32"/></name> <argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">buf<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="39">idata<pos:position pos:line="17" pos:column="44"/></name><operator pos:line="17" pos:column="44">-&gt;<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="46">mailbox<pos:position pos:line="17" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="55"/></condition><then pos:line="17" pos:column="55">
    <block type="pseudo"><return pos:line="18" pos:column="5">return <expr><name><name pos:line="18" pos:column="12">idata<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">-&gt;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="19">ctx<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">-&gt;<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="24">msgcount<pos:position pos:line="18" pos:column="32"/></name></name></expr>;<pos:position pos:line="18" pos:column="33"/></return></block></then>
  <elseif pos:line="19" pos:column="3">else <if pos:line="19" pos:column="8">if <condition pos:line="19" pos:column="11">(<expr><call><name pos:line="19" pos:column="12">mutt_bit_isset<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name><name pos:line="19" pos:column="27">idata<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">-&gt;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="34">capabilities<pos:position pos:line="19" pos:column="46"/></name></name></expr></argument>,<argument><expr><name pos:line="19" pos:column="47">IMAP4REV1<pos:position pos:line="19" pos:column="56"/></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call> <operator pos:line="19" pos:column="58">||<pos:position pos:line="19" pos:column="60"/></operator>
	   <call><name pos:line="20" pos:column="12">mutt_bit_isset<pos:position pos:line="20" pos:column="26"/></name><argument_list pos:line="20" pos:column="26">(<argument><expr><name><name pos:line="20" pos:column="27">idata<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">capabilities<pos:position pos:line="20" pos:column="46"/></name></name></expr></argument>,<argument><expr><name pos:line="20" pos:column="47">STATUS<pos:position pos:line="20" pos:column="53"/></name></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="55"/></condition><then pos:line="20" pos:column="55">
  <block pos:line="21" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">imap_munge_mbox_name<pos:position pos:line="22" pos:column="25"/></name> <argument_list pos:line="22" pos:column="26">(<argument><expr><name pos:line="22" pos:column="27">idata<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="34">mbox<pos:position pos:line="22" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="40">sizeof<argument_list pos:line="22" pos:column="46">(<argument><expr><name pos:line="22" pos:column="47">mbox<pos:position pos:line="22" pos:column="51"/></name></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="22" pos:column="54">buf<pos:position pos:line="22" pos:column="57"/></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">snprintf<pos:position pos:line="23" pos:column="13"/></name> <argument_list pos:line="23" pos:column="14">(<argument><expr><name pos:line="23" pos:column="15">buf<pos:position pos:line="23" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="20">sizeof <argument_list pos:line="23" pos:column="27">(<argument><expr><name pos:line="23" pos:column="28">buf<pos:position pos:line="23" pos:column="31"/></name></expr></argument>)<pos:position pos:line="23" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="34">"STATUS %s (%s)"<pos:position pos:line="23" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="52">mbox<pos:position pos:line="23" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="58">"MESSAGES"<pos:position pos:line="23" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">imap_unmunge_mbox_name<pos:position pos:line="24" pos:column="27"/></name> <argument_list pos:line="24" pos:column="28">(<argument><expr><name pos:line="24" pos:column="29">idata<pos:position pos:line="24" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="36">mbox<pos:position pos:line="24" pos:column="40"/></name></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if></elseif>
  <else pos:line="26" pos:column="3">else
    <comment type="block" pos:line="27" pos:column="5">/* Server does not support STATUS, and this is not the current mailbox.
     * There is no lightweight way to check recent arrivals */</comment>
    <block type="pseudo"><return pos:line="29" pos:column="5">return <expr><operator pos:line="29" pos:column="12">-<pos:position pos:line="29" pos:column="13"/></operator><literal type="number" pos:line="29" pos:column="13">1<pos:position pos:line="29" pos:column="14"/></literal></expr>;<pos:position pos:line="29" pos:column="15"/></return></block></else></if>

  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name pos:line="31" pos:column="7">queue<pos:position pos:line="31" pos:column="12"/></name></expr>)<pos:position pos:line="31" pos:column="13"/></condition><then pos:line="31" pos:column="13">
  <block pos:line="32" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">imap_exec<pos:position pos:line="33" pos:column="14"/></name> <argument_list pos:line="33" pos:column="15">(<argument><expr><name pos:line="33" pos:column="16">idata<pos:position pos:line="33" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="23">buf<pos:position pos:line="33" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="28">IMAP_CMD_QUEUE<pos:position pos:line="33" pos:column="42"/></name></expr></argument>)<pos:position pos:line="33" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="34" pos:column="5">queued<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">=<pos:position pos:line="34" pos:column="13"/></operator> <literal type="number" pos:line="34" pos:column="14">1<pos:position pos:line="34" pos:column="15"/></literal></expr>;<pos:position pos:line="34" pos:column="16"/></expr_stmt>
    <return pos:line="35" pos:column="5">return <expr><literal type="number" pos:line="35" pos:column="12">0<pos:position pos:line="35" pos:column="13"/></literal></expr>;<pos:position pos:line="35" pos:column="14"/></return>
  }<pos:position pos:line="36" pos:column="4"/></block></then>
  <elseif pos:line="37" pos:column="3">else <if pos:line="37" pos:column="8">if <condition pos:line="37" pos:column="11">(<expr><operator pos:line="37" pos:column="12">!<pos:position pos:line="37" pos:column="13"/></operator><name pos:line="37" pos:column="13">queued<pos:position pos:line="37" pos:column="19"/></name></expr>)<pos:position pos:line="37" pos:column="20"/></condition><then pos:line="37" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="5">imap_exec<pos:position pos:line="38" pos:column="14"/></name> <argument_list pos:line="38" pos:column="15">(<argument><expr><name pos:line="38" pos:column="16">idata<pos:position pos:line="38" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="23">buf<pos:position pos:line="38" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="28">0<pos:position pos:line="38" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt></block></then></if></elseif></if>

  <expr_stmt><expr><name pos:line="40" pos:column="3">queued<pos:position pos:line="40" pos:column="9"/></name> <operator pos:line="40" pos:column="10">=<pos:position pos:line="40" pos:column="11"/></operator> <literal type="number" pos:line="40" pos:column="12">0<pos:position pos:line="40" pos:column="13"/></literal></expr>;<pos:position pos:line="40" pos:column="14"/></expr_stmt>
  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><operator pos:line="41" pos:column="7">(<pos:position pos:line="41" pos:column="8"/></operator><name pos:line="41" pos:column="8">status<pos:position pos:line="41" pos:column="14"/></name> <operator pos:line="41" pos:column="15">=<pos:position pos:line="41" pos:column="16"/></operator> <call><name pos:line="41" pos:column="17">imap_mboxcache_get<pos:position pos:line="41" pos:column="35"/></name> <argument_list pos:line="41" pos:column="36">(<argument><expr><name pos:line="41" pos:column="37">idata<pos:position pos:line="41" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="44">mbox<pos:position pos:line="41" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="50">0<pos:position pos:line="41" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="52"/></argument_list></call><operator pos:line="41" pos:column="52">)<pos:position pos:line="41" pos:column="53"/></operator></expr>)<pos:position pos:line="41" pos:column="54"/></condition><then pos:line="41" pos:column="54">
    <block type="pseudo"><return pos:line="42" pos:column="5">return <expr><name><name pos:line="42" pos:column="12">status<pos:position pos:line="42" pos:column="18"/></name><operator pos:line="42" pos:column="18">-&gt;<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="20">messages<pos:position pos:line="42" pos:column="28"/></name></name></expr>;<pos:position pos:line="42" pos:column="29"/></return></block></then></if>

  <return pos:line="44" pos:column="3">return <expr><literal type="number" pos:line="44" pos:column="10">0<pos:position pos:line="44" pos:column="11"/></literal></expr>;<pos:position pos:line="44" pos:column="12"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

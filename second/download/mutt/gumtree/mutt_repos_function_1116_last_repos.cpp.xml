<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1116_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">_pgp_free_key<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">pgp_key_t<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">kpp<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">pgp_key_t<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">kp<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">!<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">kpp<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">||<pos:position pos:line="5" pos:column="14"/></operator> <operator pos:line="5" pos:column="15">!<pos:position pos:line="5" pos:column="16"/></operator><operator pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">kpp<pos:position pos:line="5" pos:column="20"/></name></expr>)<pos:position pos:line="5" pos:column="21"/></condition><then pos:line="5" pos:column="21">
    <block type="pseudo"><return pos:line="6" pos:column="5">return;<pos:position pos:line="6" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="8" pos:column="3">kp<pos:position pos:line="8" pos:column="5"/></name> <operator pos:line="8" pos:column="6">=<pos:position pos:line="8" pos:column="7"/></operator> <operator pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="9">kpp<pos:position pos:line="8" pos:column="12"/></name></expr>;<pos:position pos:line="8" pos:column="13"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">pgp_free_uid<pos:position pos:line="10" pos:column="15"/></name> <argument_list pos:line="10" pos:column="16">(<argument><expr><operator pos:line="10" pos:column="17">&amp;<pos:position pos:line="10" pos:column="22"/></operator><name><name pos:line="10" pos:column="18">kp<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">-&gt;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="22">address<pos:position pos:line="10" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">FREE<pos:position pos:line="11" pos:column="7"/></name> <argument_list pos:line="11" pos:column="8">(<argument><expr><operator pos:line="11" pos:column="9">&amp;<pos:position pos:line="11" pos:column="14"/></operator><name><name pos:line="11" pos:column="10">kp<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">-&gt;<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="14">keyid<pos:position pos:line="11" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">FREE<pos:position pos:line="12" pos:column="7"/></name> <argument_list pos:line="12" pos:column="8">(<argument><expr><operator pos:line="12" pos:column="9">&amp;<pos:position pos:line="12" pos:column="14"/></operator><name><name pos:line="12" pos:column="10">kp<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">fingerprint<pos:position pos:line="12" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>
  <comment type="block" pos:line="13" pos:column="3">/* mutt_crypt.h: 'typedef struct pgp_keyinfo *pgp_key_t;' */</comment>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">FREE<pos:position pos:line="14" pos:column="7"/></name> <argument_list pos:line="14" pos:column="8">(<argument><expr><name pos:line="14" pos:column="9">kpp<pos:position pos:line="14" pos:column="12"/></name></expr></argument>)<pos:position pos:line="14" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="14"/></expr_stmt>		<comment type="block" pos:line="14" pos:column="25">/* __FREE_CHECKED__ */</comment>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

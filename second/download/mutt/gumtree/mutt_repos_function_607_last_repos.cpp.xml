<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_607_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type> <name pos:line="1" pos:column="8">mbrtowc_iconv<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">wchar_t<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">pwc<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">s<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">size_t<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">n<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
		      <parameter><decl><type><name pos:line="2" pos:column="23">mbstate_t<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">ps<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">iconv_t<pos:position pos:line="2" pos:column="45"/></name></type> <name pos:line="2" pos:column="46">cd<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="4" pos:column="3">static<pos:position pos:line="4" pos:column="9"/></specifier> <type><name pos:line="4" pos:column="10">mbstate_t<pos:position pos:line="4" pos:column="19"/></name></type> <name pos:line="4" pos:column="20">mbstate<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">ICONV_CONST<pos:position pos:line="5" pos:column="14"/></name> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">ib<pos:position pos:line="5" pos:column="23"/></name></decl>, <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="26">ibmax<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">ob<pos:position pos:line="6" pos:column="11"/></name></decl>, <modifier pos:line="6" pos:column="13">*<pos:position pos:line="6" pos:column="14"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="14">t<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">ibl<pos:position pos:line="7" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="15">obl<pos:position pos:line="7" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="20">k<pos:position pos:line="7" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="23">r<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">bufi<pos:position pos:line="8" pos:column="12"/></name><index pos:line="8" pos:column="12">[<expr><literal type="number" pos:line="8" pos:column="13">8<pos:position pos:line="8" pos:column="14"/></literal></expr>]<pos:position pos:line="8" pos:column="15"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="8" pos:column="17">bufo<pos:position pos:line="8" pos:column="21"/></name><index pos:line="8" pos:column="21">[<expr><literal type="number" pos:line="8" pos:column="22">6<pos:position pos:line="8" pos:column="23"/></literal></expr>]<pos:position pos:line="8" pos:column="24"/></index></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">!<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">n<pos:position pos:line="10" pos:column="9"/></name></expr>)<pos:position pos:line="10" pos:column="10"/></condition><then pos:line="10" pos:column="10">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><call pos:line="11" pos:column="12">(<name pos:line="11" pos:column="13">size_t<pos:position pos:line="11" pos:column="19"/></name>)<argument_list pos:line="11" pos:column="20">(<argument><expr><operator pos:line="11" pos:column="21">-<pos:position pos:line="11" pos:column="22"/></operator><literal type="number" pos:line="11" pos:column="22">2<pos:position pos:line="11" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="25"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="13" pos:column="3">t<pos:position pos:line="13" pos:column="4"/></name> <operator pos:line="13" pos:column="5">=<pos:position pos:line="13" pos:column="6"/></operator> <call><name pos:line="13" pos:column="7">memchr<pos:position pos:line="13" pos:column="13"/></name> <argument_list pos:line="13" pos:column="14">(<argument><expr><name pos:line="13" pos:column="15">ps<pos:position pos:line="13" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="19">0<pos:position pos:line="13" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="22">sizeof <argument_list pos:line="13" pos:column="29">(<argument><expr><operator pos:line="13" pos:column="30">*<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="31">ps<pos:position pos:line="13" pos:column="33"/></name></expr></argument>)<pos:position pos:line="13" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name pos:line="14" pos:column="3">k<pos:position pos:line="14" pos:column="4"/></name> <operator pos:line="14" pos:column="5">=<pos:position pos:line="14" pos:column="6"/></operator> <ternary><condition><expr><name pos:line="14" pos:column="7">t<pos:position pos:line="14" pos:column="8"/></name></expr> ?<pos:position pos:line="14" pos:column="10"/></condition><then pos:line="14" pos:column="10"> <expr><operator pos:line="14" pos:column="11">(<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="12">t<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">-<pos:position pos:line="14" pos:column="15"/></operator> <operator pos:line="14" pos:column="16">(<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">char<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">*<pos:position pos:line="14" pos:column="23"/></operator><operator pos:line="14" pos:column="23">)<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="24">ps<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">)<pos:position pos:line="14" pos:column="27"/></operator></expr> <pos:position pos:line="14" pos:column="28"/></then><else pos:line="14" pos:column="28">: <expr><sizeof pos:line="14" pos:column="30">sizeof <argument_list pos:line="14" pos:column="37">(<argument><expr><operator pos:line="14" pos:column="38">*<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="39">ps<pos:position pos:line="14" pos:column="41"/></name></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></sizeof></expr></else></ternary></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">k<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">&gt;<pos:position pos:line="15" pos:column="13"/></operator> <sizeof pos:line="15" pos:column="11">sizeof <argument_list pos:line="15" pos:column="18">(<argument><expr><name pos:line="15" pos:column="19">bufi<pos:position pos:line="15" pos:column="23"/></name></expr></argument>)<pos:position pos:line="15" pos:column="24"/></argument_list></sizeof></expr>)<pos:position pos:line="15" pos:column="25"/></condition><then pos:line="15" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="5">k<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <literal type="number" pos:line="16" pos:column="9">0<pos:position pos:line="16" pos:column="10"/></literal></expr>;<pos:position pos:line="16" pos:column="11"/></expr_stmt></block></then></if>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">k<pos:position pos:line="17" pos:column="8"/></name></expr>)<pos:position pos:line="17" pos:column="9"/></condition><then pos:line="17" pos:column="9">
  <block pos:line="18" pos:column="3">{
    <comment type="block" pos:line="19" pos:column="5">/* use the buffer for input */</comment>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">memcpy<pos:position pos:line="20" pos:column="11"/></name> <argument_list pos:line="20" pos:column="12">(<argument><expr><name pos:line="20" pos:column="13">bufi<pos:position pos:line="20" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="19">ps<pos:position pos:line="20" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="23">k<pos:position pos:line="20" pos:column="24"/></name></expr></argument>)<pos:position pos:line="20" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">ib<pos:position pos:line="21" pos:column="7"/></name> <operator pos:line="21" pos:column="8">=<pos:position pos:line="21" pos:column="9"/></operator> <name pos:line="21" pos:column="10">bufi<pos:position pos:line="21" pos:column="14"/></name></expr>;<pos:position pos:line="21" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">ibmax<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">=<pos:position pos:line="22" pos:column="12"/></operator> <name pos:line="22" pos:column="13">bufi<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">+<pos:position pos:line="22" pos:column="19"/></operator> <operator pos:line="22" pos:column="20">(<pos:position pos:line="22" pos:column="21"/></operator><ternary><condition><expr><name pos:line="22" pos:column="21">k<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">+<pos:position pos:line="22" pos:column="24"/></operator> <name pos:line="22" pos:column="25">n<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">&lt;<pos:position pos:line="22" pos:column="31"/></operator> <sizeof pos:line="22" pos:column="29">sizeof <argument_list pos:line="22" pos:column="36">(<argument><expr><name pos:line="22" pos:column="37">bufi<pos:position pos:line="22" pos:column="41"/></name></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></sizeof></expr> ?<pos:position pos:line="22" pos:column="44"/></condition><then pos:line="22" pos:column="44"> <expr><name pos:line="22" pos:column="45">k<pos:position pos:line="22" pos:column="46"/></name> <operator pos:line="22" pos:column="47">+<pos:position pos:line="22" pos:column="48"/></operator> <name pos:line="22" pos:column="49">n<pos:position pos:line="22" pos:column="50"/></name></expr> <pos:position pos:line="22" pos:column="51"/></then><else pos:line="22" pos:column="51">: <expr><sizeof pos:line="22" pos:column="53">sizeof <argument_list pos:line="22" pos:column="60">(<argument><expr><name pos:line="22" pos:column="61">bufi<pos:position pos:line="22" pos:column="65"/></name></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></sizeof></expr></else></ternary><operator pos:line="22" pos:column="66">)<pos:position pos:line="22" pos:column="67"/></operator></expr>;<pos:position pos:line="22" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">memcpy<pos:position pos:line="23" pos:column="11"/></name> <argument_list pos:line="23" pos:column="12">(<argument><expr><name pos:line="23" pos:column="13">bufi<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">+<pos:position pos:line="23" pos:column="19"/></operator> <name pos:line="23" pos:column="20">k<pos:position pos:line="23" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="23">s<pos:position pos:line="23" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="26">ibmax<pos:position pos:line="23" pos:column="31"/></name> <operator pos:line="23" pos:column="32">-<pos:position pos:line="23" pos:column="33"/></operator> <name pos:line="23" pos:column="34">bufi<pos:position pos:line="23" pos:column="38"/></name> <operator pos:line="23" pos:column="39">-<pos:position pos:line="23" pos:column="40"/></operator> <name pos:line="23" pos:column="41">k<pos:position pos:line="23" pos:column="42"/></name></expr></argument>)<pos:position pos:line="23" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="44"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></then>
  <else pos:line="25" pos:column="3">else
  <block pos:line="26" pos:column="3">{
    <comment type="block" pos:line="27" pos:column="5">/* use the real input */</comment>
    <expr_stmt><expr><name pos:line="28" pos:column="5">ib<pos:position pos:line="28" pos:column="7"/></name> <operator pos:line="28" pos:column="8">=<pos:position pos:line="28" pos:column="9"/></operator> <operator pos:line="28" pos:column="10">(<pos:position pos:line="28" pos:column="11"/></operator><name pos:line="28" pos:column="11">ICONV_CONST<pos:position pos:line="28" pos:column="22"/></name> <name pos:line="28" pos:column="23">char<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">*<pos:position pos:line="28" pos:column="28"/></operator><operator pos:line="28" pos:column="28">)<pos:position pos:line="28" pos:column="29"/></operator> <name pos:line="28" pos:column="30">s<pos:position pos:line="28" pos:column="31"/></name></expr>;<pos:position pos:line="28" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">ibmax<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">=<pos:position pos:line="29" pos:column="12"/></operator> <operator pos:line="29" pos:column="13">(<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">ICONV_CONST<pos:position pos:line="29" pos:column="25"/></name> <name pos:line="29" pos:column="26">char<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">*<pos:position pos:line="29" pos:column="31"/></operator><operator pos:line="29" pos:column="31">)<pos:position pos:line="29" pos:column="32"/></operator> <name pos:line="29" pos:column="33">s<pos:position pos:line="29" pos:column="34"/></name> <operator pos:line="29" pos:column="35">+<pos:position pos:line="29" pos:column="36"/></operator> <name pos:line="29" pos:column="37">n<pos:position pos:line="29" pos:column="38"/></name></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name pos:line="32" pos:column="3">ob<pos:position pos:line="32" pos:column="5"/></name> <operator pos:line="32" pos:column="6">=<pos:position pos:line="32" pos:column="7"/></operator> <name pos:line="32" pos:column="8">bufo<pos:position pos:line="32" pos:column="12"/></name></expr>;<pos:position pos:line="32" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><name pos:line="33" pos:column="3">obl<pos:position pos:line="33" pos:column="6"/></name> <operator pos:line="33" pos:column="7">=<pos:position pos:line="33" pos:column="8"/></operator> <sizeof pos:line="33" pos:column="9">sizeof <argument_list pos:line="33" pos:column="16">(<argument><expr><name pos:line="33" pos:column="17">bufo<pos:position pos:line="33" pos:column="21"/></name></expr></argument>)<pos:position pos:line="33" pos:column="22"/></argument_list></sizeof></expr>;<pos:position pos:line="33" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name pos:line="34" pos:column="3">ibl<pos:position pos:line="34" pos:column="6"/></name> <operator pos:line="34" pos:column="7">=<pos:position pos:line="34" pos:column="8"/></operator> <literal type="number" pos:line="34" pos:column="9">1<pos:position pos:line="34" pos:column="10"/></literal></expr>;<pos:position pos:line="34" pos:column="11"/></expr_stmt>

  <for pos:line="36" pos:column="3">for <control pos:line="36" pos:column="7">(<init pos:line="36" pos:column="8">;<pos:position pos:line="36" pos:column="9"/></init><condition pos:line="36" pos:column="9">;<pos:position pos:line="36" pos:column="10"/></condition><incr/>)<pos:position pos:line="36" pos:column="11"/></control>
  <block pos:line="37" pos:column="3">{
    <expr_stmt><expr><name pos:line="38" pos:column="5">r<pos:position pos:line="38" pos:column="6"/></name> <operator pos:line="38" pos:column="7">=<pos:position pos:line="38" pos:column="8"/></operator> <call><name pos:line="38" pos:column="9">iconv<pos:position pos:line="38" pos:column="14"/></name> <argument_list pos:line="38" pos:column="15">(<argument><expr><name pos:line="38" pos:column="16">cd<pos:position pos:line="38" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="20">&amp;<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="21">ib<pos:position pos:line="38" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="25">&amp;<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="26">ibl<pos:position pos:line="38" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="31">&amp;<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="32">ob<pos:position pos:line="38" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="36">&amp;<pos:position pos:line="38" pos:column="41"/></operator><name pos:line="38" pos:column="37">obl<pos:position pos:line="38" pos:column="40"/></name></expr></argument>)<pos:position pos:line="38" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="42"/></expr_stmt>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">ob<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">&gt;<pos:position pos:line="39" pos:column="16"/></operator> <name pos:line="39" pos:column="14">bufo<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">&amp;&amp;<pos:position pos:line="39" pos:column="29"/></operator> <operator pos:line="39" pos:column="22">(<pos:position pos:line="39" pos:column="23"/></operator><operator pos:line="39" pos:column="23">!<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="24">k<pos:position pos:line="39" pos:column="25"/></name> <operator pos:line="39" pos:column="26">||<pos:position pos:line="39" pos:column="28"/></operator> <name pos:line="39" pos:column="29">ib<pos:position pos:line="39" pos:column="31"/></name> <operator pos:line="39" pos:column="32">&gt;<pos:position pos:line="39" pos:column="36"/></operator> <name pos:line="39" pos:column="34">bufi<pos:position pos:line="39" pos:column="38"/></name> <operator pos:line="39" pos:column="39">+<pos:position pos:line="39" pos:column="40"/></operator> <name pos:line="39" pos:column="41">k<pos:position pos:line="39" pos:column="42"/></name><operator pos:line="39" pos:column="42">)<pos:position pos:line="39" pos:column="43"/></operator></expr>)<pos:position pos:line="39" pos:column="44"/></condition><then pos:line="39" pos:column="44">
    <block pos:line="40" pos:column="5">{
      <comment type="block" pos:line="41" pos:column="7">/* we have a character */</comment>
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">memset<pos:position pos:line="42" pos:column="13"/></name> <argument_list pos:line="42" pos:column="14">(<argument><expr><name pos:line="42" pos:column="15">ps<pos:position pos:line="42" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="19">0<pos:position pos:line="42" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="22">sizeof <argument_list pos:line="42" pos:column="29">(<argument><expr><operator pos:line="42" pos:column="30">*<pos:position pos:line="42" pos:column="31"/></operator><name pos:line="42" pos:column="31">ps<pos:position pos:line="42" pos:column="33"/></name></expr></argument>)<pos:position pos:line="42" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="43" pos:column="7">utf8rtowc<pos:position pos:line="43" pos:column="16"/></name> <argument_list pos:line="43" pos:column="17">(<argument><expr><name pos:line="43" pos:column="18">pwc<pos:position pos:line="43" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="23">bufo<pos:position pos:line="43" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="29">ob<pos:position pos:line="43" pos:column="31"/></name> <operator pos:line="43" pos:column="32">-<pos:position pos:line="43" pos:column="33"/></operator> <name pos:line="43" pos:column="34">bufo<pos:position pos:line="43" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="40">&amp;<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="41">mbstate<pos:position pos:line="43" pos:column="48"/></name></expr></argument>)<pos:position pos:line="43" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="50"/></expr_stmt>
      <return pos:line="44" pos:column="7">return <expr><ternary><condition><expr><operator pos:line="44" pos:column="14">(<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="15">pwc<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">&amp;&amp;<pos:position pos:line="44" pos:column="29"/></operator> <operator pos:line="44" pos:column="22">*<pos:position pos:line="44" pos:column="23"/></operator><name pos:line="44" pos:column="23">pwc<pos:position pos:line="44" pos:column="26"/></name><operator pos:line="44" pos:column="26">)<pos:position pos:line="44" pos:column="27"/></operator></expr> ?<pos:position pos:line="44" pos:column="29"/></condition><then pos:line="44" pos:column="29"> <expr><operator pos:line="44" pos:column="30">(<pos:position pos:line="44" pos:column="31"/></operator><name pos:line="44" pos:column="31">ib<pos:position pos:line="44" pos:column="33"/></name> <operator pos:line="44" pos:column="34">-<pos:position pos:line="44" pos:column="35"/></operator> <operator pos:line="44" pos:column="36">(<pos:position pos:line="44" pos:column="37"/></operator><ternary><condition><expr><name pos:line="44" pos:column="37">k<pos:position pos:line="44" pos:column="38"/></name></expr> ?<pos:position pos:line="44" pos:column="40"/></condition><then pos:line="44" pos:column="40"> <expr><name pos:line="44" pos:column="41">bufi<pos:position pos:line="44" pos:column="45"/></name> <operator pos:line="44" pos:column="46">+<pos:position pos:line="44" pos:column="47"/></operator> <name pos:line="44" pos:column="48">k<pos:position pos:line="44" pos:column="49"/></name></expr> <pos:position pos:line="44" pos:column="50"/></then><else pos:line="44" pos:column="50">: <expr><name pos:line="44" pos:column="52">s<pos:position pos:line="44" pos:column="53"/></name></expr></else></ternary><operator pos:line="44" pos:column="53">)<pos:position pos:line="44" pos:column="54"/></operator><operator pos:line="44" pos:column="54">)<pos:position pos:line="44" pos:column="55"/></operator></expr> <pos:position pos:line="44" pos:column="56"/></then><else pos:line="44" pos:column="56">: <expr><literal type="number" pos:line="44" pos:column="58">0<pos:position pos:line="44" pos:column="59"/></literal></expr></else></ternary></expr>;<pos:position pos:line="44" pos:column="60"/></return>
    }<pos:position pos:line="45" pos:column="6"/></block></then>
    <elseif pos:line="46" pos:column="5">else <if pos:line="46" pos:column="10">if <condition pos:line="46" pos:column="13">(<expr><operator pos:line="46" pos:column="14">!<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="15">r<pos:position pos:line="46" pos:column="16"/></name> <operator pos:line="46" pos:column="17">||<pos:position pos:line="46" pos:column="19"/></operator> <operator pos:line="46" pos:column="20">(<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="21">r<pos:position pos:line="46" pos:column="22"/></name> <operator pos:line="46" pos:column="23">==<pos:position pos:line="46" pos:column="25"/></operator> <call pos:line="46" pos:column="26">(<name pos:line="46" pos:column="27">size_t<pos:position pos:line="46" pos:column="33"/></name>)<argument_list pos:line="46" pos:column="34">(<argument><expr><operator pos:line="46" pos:column="35">-<pos:position pos:line="46" pos:column="36"/></operator><literal type="number" pos:line="46" pos:column="36">1<pos:position pos:line="46" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="38"/></argument_list></call> <operator pos:line="46" pos:column="39">&amp;&amp;<pos:position pos:line="46" pos:column="49"/></operator> <name pos:line="46" pos:column="42">errno<pos:position pos:line="46" pos:column="47"/></name> <operator pos:line="46" pos:column="48">==<pos:position pos:line="46" pos:column="50"/></operator> <name pos:line="46" pos:column="51">EINVAL<pos:position pos:line="46" pos:column="57"/></name><operator pos:line="46" pos:column="57">)<pos:position pos:line="46" pos:column="58"/></operator></expr>)<pos:position pos:line="46" pos:column="59"/></condition><then pos:line="46" pos:column="59">
    <block pos:line="47" pos:column="5">{
      <if pos:line="48" pos:column="7">if <condition pos:line="48" pos:column="10">(<expr><name pos:line="48" pos:column="11">ib<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">+<pos:position pos:line="48" pos:column="15"/></operator> <name pos:line="48" pos:column="16">ibl<pos:position pos:line="48" pos:column="19"/></name> <operator pos:line="48" pos:column="20">&lt;<pos:position pos:line="48" pos:column="24"/></operator> <name pos:line="48" pos:column="22">ibmax<pos:position pos:line="48" pos:column="27"/></name></expr>)<pos:position pos:line="48" pos:column="28"/></condition><then pos:line="48" pos:column="28">
	<comment type="block" pos:line="49" pos:column="9">/* try using more input */</comment>
	<block type="pseudo"><expr_stmt><expr><operator pos:line="50" pos:column="9">++<pos:position pos:line="50" pos:column="11"/></operator><name pos:line="50" pos:column="11">ibl<pos:position pos:line="50" pos:column="14"/></name></expr>;<pos:position pos:line="50" pos:column="15"/></expr_stmt></block></then>
      <elseif pos:line="51" pos:column="7">else <if pos:line="51" pos:column="12">if <condition pos:line="51" pos:column="15">(<expr><name pos:line="51" pos:column="16">k<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">&amp;&amp;<pos:position pos:line="51" pos:column="28"/></operator> <name pos:line="51" pos:column="21">ib<pos:position pos:line="51" pos:column="23"/></name> <operator pos:line="51" pos:column="24">&gt;<pos:position pos:line="51" pos:column="28"/></operator> <name pos:line="51" pos:column="26">bufi<pos:position pos:line="51" pos:column="30"/></name> <operator pos:line="51" pos:column="31">+<pos:position pos:line="51" pos:column="32"/></operator> <name pos:line="51" pos:column="33">k<pos:position pos:line="51" pos:column="34"/></name> <operator pos:line="51" pos:column="35">&amp;&amp;<pos:position pos:line="51" pos:column="45"/></operator> <name pos:line="51" pos:column="38">bufi<pos:position pos:line="51" pos:column="42"/></name> <operator pos:line="51" pos:column="43">+<pos:position pos:line="51" pos:column="44"/></operator> <name pos:line="51" pos:column="45">k<pos:position pos:line="51" pos:column="46"/></name> <operator pos:line="51" pos:column="47">+<pos:position pos:line="51" pos:column="48"/></operator> <name pos:line="51" pos:column="49">n<pos:position pos:line="51" pos:column="50"/></name> <operator pos:line="51" pos:column="51">&gt;<pos:position pos:line="51" pos:column="55"/></operator> <name pos:line="51" pos:column="53">ibmax<pos:position pos:line="51" pos:column="58"/></name></expr>)<pos:position pos:line="51" pos:column="59"/></condition><then pos:line="51" pos:column="59">
      <block pos:line="52" pos:column="7">{
	<comment type="block" pos:line="53" pos:column="9">/* switch to using real input */</comment>
	<expr_stmt><expr><name pos:line="54" pos:column="9">ib<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">=<pos:position pos:line="54" pos:column="13"/></operator> <operator pos:line="54" pos:column="14">(<pos:position pos:line="54" pos:column="15"/></operator><name pos:line="54" pos:column="15">ICONV_CONST<pos:position pos:line="54" pos:column="26"/></name> <name pos:line="54" pos:column="27">char<pos:position pos:line="54" pos:column="31"/></name><operator pos:line="54" pos:column="31">*<pos:position pos:line="54" pos:column="32"/></operator><operator pos:line="54" pos:column="32">)<pos:position pos:line="54" pos:column="33"/></operator> <name pos:line="54" pos:column="34">s<pos:position pos:line="54" pos:column="35"/></name> <operator pos:line="54" pos:column="36">+<pos:position pos:line="54" pos:column="37"/></operator> <operator pos:line="54" pos:column="38">(<pos:position pos:line="54" pos:column="39"/></operator><name pos:line="54" pos:column="39">ib<pos:position pos:line="54" pos:column="41"/></name> <operator pos:line="54" pos:column="42">-<pos:position pos:line="54" pos:column="43"/></operator> <name pos:line="54" pos:column="44">bufi<pos:position pos:line="54" pos:column="48"/></name> <operator pos:line="54" pos:column="49">-<pos:position pos:line="54" pos:column="50"/></operator> <name pos:line="54" pos:column="51">k<pos:position pos:line="54" pos:column="52"/></name><operator pos:line="54" pos:column="52">)<pos:position pos:line="54" pos:column="53"/></operator></expr>;<pos:position pos:line="54" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><name pos:line="55" pos:column="9">ibmax<pos:position pos:line="55" pos:column="14"/></name> <operator pos:line="55" pos:column="15">=<pos:position pos:line="55" pos:column="16"/></operator> <operator pos:line="55" pos:column="17">(<pos:position pos:line="55" pos:column="18"/></operator><name pos:line="55" pos:column="18">ICONV_CONST<pos:position pos:line="55" pos:column="29"/></name> <name pos:line="55" pos:column="30">char<pos:position pos:line="55" pos:column="34"/></name><operator pos:line="55" pos:column="34">*<pos:position pos:line="55" pos:column="35"/></operator><operator pos:line="55" pos:column="35">)<pos:position pos:line="55" pos:column="36"/></operator> <name pos:line="55" pos:column="37">s<pos:position pos:line="55" pos:column="38"/></name> <operator pos:line="55" pos:column="39">+<pos:position pos:line="55" pos:column="40"/></operator> <name pos:line="55" pos:column="41">n<pos:position pos:line="55" pos:column="42"/></name></expr>;<pos:position pos:line="55" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name pos:line="56" pos:column="9">k<pos:position pos:line="56" pos:column="10"/></name> <operator pos:line="56" pos:column="11">=<pos:position pos:line="56" pos:column="12"/></operator> <literal type="number" pos:line="56" pos:column="13">0<pos:position pos:line="56" pos:column="14"/></literal></expr>;<pos:position pos:line="56" pos:column="15"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="57" pos:column="9">++<pos:position pos:line="57" pos:column="11"/></operator><name pos:line="57" pos:column="11">ibl<pos:position pos:line="57" pos:column="14"/></name></expr>;<pos:position pos:line="57" pos:column="15"/></expr_stmt>
      }<pos:position pos:line="58" pos:column="8"/></block></then></if></elseif>
      <else pos:line="59" pos:column="7">else
      <block pos:line="60" pos:column="7">{
	<comment type="block" pos:line="61" pos:column="9">/* save the state and give up */</comment>
	<expr_stmt><expr><call><name pos:line="62" pos:column="9">memset<pos:position pos:line="62" pos:column="15"/></name> <argument_list pos:line="62" pos:column="16">(<argument><expr><name pos:line="62" pos:column="17">ps<pos:position pos:line="62" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="21">0<pos:position pos:line="62" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="62" pos:column="24">sizeof <argument_list pos:line="62" pos:column="31">(<argument><expr><operator pos:line="62" pos:column="32">*<pos:position pos:line="62" pos:column="33"/></operator><name pos:line="62" pos:column="33">ps<pos:position pos:line="62" pos:column="35"/></name></expr></argument>)<pos:position pos:line="62" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="62" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="38"/></expr_stmt>
	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">ibl<pos:position pos:line="63" pos:column="16"/></name> <operator pos:line="63" pos:column="17">&lt;=<pos:position pos:line="63" pos:column="22"/></operator> <sizeof pos:line="63" pos:column="20">sizeof <argument_list pos:line="63" pos:column="27">(<argument><expr><name pos:line="63" pos:column="28">mbstate_t<pos:position pos:line="63" pos:column="37"/></name></expr></argument>)<pos:position pos:line="63" pos:column="38"/></argument_list></sizeof></expr>)<pos:position pos:line="63" pos:column="39"/></condition><then pos:line="63" pos:column="39"> <comment type="block" pos:line="63" pos:column="40">/* need extra condition here! */</comment>
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="11">memcpy<pos:position pos:line="64" pos:column="17"/></name> <argument_list pos:line="64" pos:column="18">(<argument><expr><name pos:line="64" pos:column="19">ps<pos:position pos:line="64" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="23">ib<pos:position pos:line="64" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="27">ibl<pos:position pos:line="64" pos:column="30"/></name></expr></argument>)<pos:position pos:line="64" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="32"/></expr_stmt></block></then></if>
	<return pos:line="65" pos:column="9">return <expr><call pos:line="65" pos:column="16">(<name pos:line="65" pos:column="17">size_t<pos:position pos:line="65" pos:column="23"/></name>)<argument_list pos:line="65" pos:column="24">(<argument><expr><operator pos:line="65" pos:column="25">-<pos:position pos:line="65" pos:column="26"/></operator><literal type="number" pos:line="65" pos:column="26">2<pos:position pos:line="65" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="29"/></return>
      }<pos:position pos:line="66" pos:column="8"/></block></else></if>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if></elseif>
    <else pos:line="68" pos:column="5">else
    <block pos:line="69" pos:column="5">{
      <comment type="block" pos:line="70" pos:column="7">/* bad input */</comment>
      <expr_stmt><expr><name pos:line="71" pos:column="7">errno<pos:position pos:line="71" pos:column="12"/></name> <operator pos:line="71" pos:column="13">=<pos:position pos:line="71" pos:column="14"/></operator> <name pos:line="71" pos:column="15">EILSEQ<pos:position pos:line="71" pos:column="21"/></name></expr>;<pos:position pos:line="71" pos:column="22"/></expr_stmt>
      <return pos:line="72" pos:column="7">return <expr><call pos:line="72" pos:column="14">(<name pos:line="72" pos:column="15">size_t<pos:position pos:line="72" pos:column="21"/></name>)<argument_list pos:line="72" pos:column="22">(<argument><expr><operator pos:line="72" pos:column="23">-<pos:position pos:line="72" pos:column="24"/></operator><literal type="number" pos:line="72" pos:column="24">1<pos:position pos:line="72" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="27"/></return>
    }<pos:position pos:line="73" pos:column="6"/></block></else></if>
  }<pos:position pos:line="74" pos:column="4"/></block></for>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

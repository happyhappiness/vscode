<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1744_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_extract_token<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">BUFFER<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">dest<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">BUFFER<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">tok<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">int<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">flags<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type>		<name pos:line="3" pos:column="17">ch<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type>		<name pos:line="4" pos:column="17">qc<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt> <comment type="block" pos:line="4" pos:column="25">/* quote char */</comment>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name>		<modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">pc<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* reset the destination pointer to the beginning of the buffer */</comment>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">dest<pos:position pos:line="8" pos:column="7"/></name><operator pos:line="8" pos:column="7">-&gt;<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="9">dptr<pos:position pos:line="8" pos:column="13"/></name></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <name><name pos:line="8" pos:column="16">dest<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">-&gt;<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="22">data<pos:position pos:line="8" pos:column="26"/></name></name></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">SKIPWS<pos:position pos:line="10" pos:column="9"/></name> <argument_list pos:line="10" pos:column="10">(<argument><expr><name><name pos:line="10" pos:column="11">tok<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">-&gt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">dptr<pos:position pos:line="10" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="22"/></expr_stmt>
  <while pos:line="11" pos:column="3">while <condition pos:line="11" pos:column="9">(<expr><operator pos:line="11" pos:column="10">(<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">ch<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <operator pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></operator><name><name pos:line="11" pos:column="17">tok<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">dptr<pos:position pos:line="11" pos:column="26"/></name></name><operator pos:line="11" pos:column="26">)<pos:position pos:line="11" pos:column="27"/></operator></expr>)<pos:position pos:line="11" pos:column="28"/></condition>
  <block pos:line="12" pos:column="3">{
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">qc<pos:position pos:line="13" pos:column="12"/></name></expr>)<pos:position pos:line="13" pos:column="13"/></condition><then pos:line="13" pos:column="13">
    <block pos:line="14" pos:column="5">{
      <if pos:line="15" pos:column="7">if <condition pos:line="15" pos:column="10">(<expr><operator pos:line="15" pos:column="11">(<pos:position pos:line="15" pos:column="12"/></operator><call><name pos:line="15" pos:column="12">ISSPACE<pos:position pos:line="15" pos:column="19"/></name> <argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">ch<pos:position pos:line="15" pos:column="23"/></name></expr></argument>)<pos:position pos:line="15" pos:column="24"/></argument_list></call> <operator pos:line="15" pos:column="25">&amp;&amp;<pos:position pos:line="15" pos:column="35"/></operator> <operator pos:line="15" pos:column="28">!<pos:position pos:line="15" pos:column="29"/></operator><operator pos:line="15" pos:column="29">(<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="30">flags<pos:position pos:line="15" pos:column="35"/></name> <operator pos:line="15" pos:column="36">&amp;<pos:position pos:line="15" pos:column="41"/></operator> <name pos:line="15" pos:column="38">MUTT_TOKEN_SPACE<pos:position pos:line="15" pos:column="54"/></name><operator pos:line="15" pos:column="54">)<pos:position pos:line="15" pos:column="55"/></operator><operator pos:line="15" pos:column="55">)<pos:position pos:line="15" pos:column="56"/></operator> <operator pos:line="15" pos:column="57">||<pos:position pos:line="15" pos:column="59"/></operator>
	  <operator pos:line="16" pos:column="11">(<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">ch<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">==<pos:position pos:line="16" pos:column="17"/></operator> <literal type="char" pos:line="16" pos:column="18">'#'<pos:position pos:line="16" pos:column="21"/></literal> <operator pos:line="16" pos:column="22">&amp;&amp;<pos:position pos:line="16" pos:column="32"/></operator> <operator pos:line="16" pos:column="25">!<pos:position pos:line="16" pos:column="26"/></operator><operator pos:line="16" pos:column="26">(<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="27">flags<pos:position pos:line="16" pos:column="32"/></name> <operator pos:line="16" pos:column="33">&amp;<pos:position pos:line="16" pos:column="38"/></operator> <name pos:line="16" pos:column="35">MUTT_TOKEN_COMMENT<pos:position pos:line="16" pos:column="53"/></name><operator pos:line="16" pos:column="53">)<pos:position pos:line="16" pos:column="54"/></operator><operator pos:line="16" pos:column="54">)<pos:position pos:line="16" pos:column="55"/></operator> <operator pos:line="16" pos:column="56">||<pos:position pos:line="16" pos:column="58"/></operator>
	  <operator pos:line="17" pos:column="11">(<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="12">ch<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">==<pos:position pos:line="17" pos:column="17"/></operator> <literal type="char" pos:line="17" pos:column="18">'='<pos:position pos:line="17" pos:column="21"/></literal> <operator pos:line="17" pos:column="22">&amp;&amp;<pos:position pos:line="17" pos:column="32"/></operator> <operator pos:line="17" pos:column="25">(<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">flags<pos:position pos:line="17" pos:column="31"/></name> <operator pos:line="17" pos:column="32">&amp;<pos:position pos:line="17" pos:column="37"/></operator> <name pos:line="17" pos:column="34">MUTT_TOKEN_EQUAL<pos:position pos:line="17" pos:column="50"/></name><operator pos:line="17" pos:column="50">)<pos:position pos:line="17" pos:column="51"/></operator><operator pos:line="17" pos:column="51">)<pos:position pos:line="17" pos:column="52"/></operator> <operator pos:line="17" pos:column="53">||<pos:position pos:line="17" pos:column="55"/></operator>
	  <operator pos:line="18" pos:column="11">(<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="12">ch<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">==<pos:position pos:line="18" pos:column="17"/></operator> <literal type="char" pos:line="18" pos:column="18">';'<pos:position pos:line="18" pos:column="21"/></literal> <operator pos:line="18" pos:column="22">&amp;&amp;<pos:position pos:line="18" pos:column="32"/></operator> <operator pos:line="18" pos:column="25">!<pos:position pos:line="18" pos:column="26"/></operator><operator pos:line="18" pos:column="26">(<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="27">flags<pos:position pos:line="18" pos:column="32"/></name> <operator pos:line="18" pos:column="33">&amp;<pos:position pos:line="18" pos:column="38"/></operator> <name pos:line="18" pos:column="35">MUTT_TOKEN_SEMICOLON<pos:position pos:line="18" pos:column="55"/></name><operator pos:line="18" pos:column="55">)<pos:position pos:line="18" pos:column="56"/></operator><operator pos:line="18" pos:column="56">)<pos:position pos:line="18" pos:column="57"/></operator> <operator pos:line="18" pos:column="58">||<pos:position pos:line="18" pos:column="60"/></operator>
	  <operator pos:line="19" pos:column="11">(<pos:position pos:line="19" pos:column="12"/></operator><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">flags<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">&amp;<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="21">MUTT_TOKEN_PATTERN<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">)<pos:position pos:line="19" pos:column="40"/></operator> <operator pos:line="19" pos:column="41">&amp;&amp;<pos:position pos:line="19" pos:column="51"/></operator> <call><name pos:line="19" pos:column="44">strchr<pos:position pos:line="19" pos:column="50"/></name> <argument_list pos:line="19" pos:column="51">(<argument><expr><literal type="string" pos:line="19" pos:column="52">"~%=!|"<pos:position pos:line="19" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="61">ch<pos:position pos:line="19" pos:column="63"/></name></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></call><operator pos:line="19" pos:column="64">)<pos:position pos:line="19" pos:column="65"/></operator></expr>)<pos:position pos:line="19" pos:column="66"/></condition><then pos:line="19" pos:column="66">
	<block type="pseudo"><break pos:line="20" pos:column="9">break;<pos:position pos:line="20" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="23" pos:column="5">tok<pos:position pos:line="23" pos:column="8"/></name><operator pos:line="23" pos:column="8">-&gt;<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="10">dptr<pos:position pos:line="23" pos:column="14"/></name></name><operator pos:line="23" pos:column="14">++<pos:position pos:line="23" pos:column="16"/></operator></expr>;<pos:position pos:line="23" pos:column="17"/></expr_stmt>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">ch<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">==<pos:position pos:line="25" pos:column="14"/></operator> <name pos:line="25" pos:column="15">qc<pos:position pos:line="25" pos:column="17"/></name></expr>)<pos:position pos:line="25" pos:column="18"/></condition><then pos:line="25" pos:column="18">
      <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="7">qc<pos:position pos:line="26" pos:column="9"/></name> <operator pos:line="26" pos:column="10">=<pos:position pos:line="26" pos:column="11"/></operator> <literal type="number" pos:line="26" pos:column="12">0<pos:position pos:line="26" pos:column="13"/></literal></expr>;<pos:position pos:line="26" pos:column="14"/></expr_stmt></block></then> <comment type="block" pos:line="26" pos:column="15">/* end of quote */</comment>
    <elseif pos:line="27" pos:column="5">else <if pos:line="27" pos:column="10">if <condition pos:line="27" pos:column="13">(<expr><operator pos:line="27" pos:column="14">!<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="15">qc<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">&amp;&amp;<pos:position pos:line="27" pos:column="28"/></operator> <operator pos:line="27" pos:column="21">(<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">ch<pos:position pos:line="27" pos:column="24"/></name> <operator pos:line="27" pos:column="25">==<pos:position pos:line="27" pos:column="27"/></operator> <literal type="char" pos:line="27" pos:column="28">'\''<pos:position pos:line="27" pos:column="32"/></literal> <operator pos:line="27" pos:column="33">||<pos:position pos:line="27" pos:column="35"/></operator> <name pos:line="27" pos:column="36">ch<pos:position pos:line="27" pos:column="38"/></name> <operator pos:line="27" pos:column="39">==<pos:position pos:line="27" pos:column="41"/></operator> <literal type="char" pos:line="27" pos:column="42">'"'<pos:position pos:line="27" pos:column="45"/></literal><operator pos:line="27" pos:column="45">)<pos:position pos:line="27" pos:column="46"/></operator> <operator pos:line="27" pos:column="47">&amp;&amp;<pos:position pos:line="27" pos:column="57"/></operator> <operator pos:line="27" pos:column="50">!<pos:position pos:line="27" pos:column="51"/></operator><operator pos:line="27" pos:column="51">(<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="52">flags<pos:position pos:line="27" pos:column="57"/></name> <operator pos:line="27" pos:column="58">&amp;<pos:position pos:line="27" pos:column="63"/></operator> <name pos:line="27" pos:column="60">MUTT_TOKEN_QUOTE<pos:position pos:line="27" pos:column="76"/></name><operator pos:line="27" pos:column="76">)<pos:position pos:line="27" pos:column="77"/></operator></expr>)<pos:position pos:line="27" pos:column="78"/></condition><then pos:line="27" pos:column="78">
      <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="7">qc<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <name pos:line="28" pos:column="12">ch<pos:position pos:line="28" pos:column="14"/></name></expr>;<pos:position pos:line="28" pos:column="15"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><name pos:line="29" pos:column="14">ch<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">==<pos:position pos:line="29" pos:column="19"/></operator> <literal type="char" pos:line="29" pos:column="20">'\\'<pos:position pos:line="29" pos:column="24"/></literal> <operator pos:line="29" pos:column="25">&amp;&amp;<pos:position pos:line="29" pos:column="35"/></operator> <name pos:line="29" pos:column="28">qc<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">!=<pos:position pos:line="29" pos:column="33"/></operator> <literal type="char" pos:line="29" pos:column="34">'\''<pos:position pos:line="29" pos:column="38"/></literal></expr>)<pos:position pos:line="29" pos:column="39"/></condition><then pos:line="29" pos:column="39">
    <block pos:line="30" pos:column="5">{
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">!<pos:position pos:line="31" pos:column="14"/></operator><operator pos:line="31" pos:column="14">*<pos:position pos:line="31" pos:column="15"/></operator><name><name pos:line="31" pos:column="15">tok<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">-&gt;<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="20">dptr<pos:position pos:line="31" pos:column="24"/></name></name></expr>)<pos:position pos:line="31" pos:column="25"/></condition><then pos:line="31" pos:column="25">
	    <block type="pseudo"><return pos:line="32" pos:column="13">return <expr><operator pos:line="32" pos:column="20">-<pos:position pos:line="32" pos:column="21"/></operator><literal type="number" pos:line="32" pos:column="21">1<pos:position pos:line="32" pos:column="22"/></literal></expr>;<pos:position pos:line="32" pos:column="23"/></return></block></then></if> <comment type="block" pos:line="32" pos:column="24">/* premature end of token */</comment>
      <switch pos:line="33" pos:column="7">switch <condition pos:line="33" pos:column="14">(<expr><name pos:line="33" pos:column="15">ch<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">=<pos:position pos:line="33" pos:column="19"/></operator> <operator pos:line="33" pos:column="20">*<pos:position pos:line="33" pos:column="21"/></operator><name><name pos:line="33" pos:column="21">tok<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">-&gt;<pos:position pos:line="33" pos:column="29"/></operator><name pos:line="33" pos:column="26">dptr<pos:position pos:line="33" pos:column="30"/></name></name><operator pos:line="33" pos:column="30">++<pos:position pos:line="33" pos:column="32"/></operator></expr>)<pos:position pos:line="33" pos:column="33"/></condition>
      <block pos:line="34" pos:column="7">{
	<case pos:line="35" pos:column="9">case <expr><literal type="char" pos:line="35" pos:column="14">'c'<pos:position pos:line="35" pos:column="17"/></literal></expr>:<pos:position pos:line="35" pos:column="18"/></case>
	<case pos:line="36" pos:column="9">case <expr><literal type="char" pos:line="36" pos:column="14">'C'<pos:position pos:line="36" pos:column="17"/></literal></expr>:<pos:position pos:line="36" pos:column="18"/></case>
	    <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><operator pos:line="37" pos:column="17">!<pos:position pos:line="37" pos:column="18"/></operator><operator pos:line="37" pos:column="18">*<pos:position pos:line="37" pos:column="19"/></operator><name><name pos:line="37" pos:column="19">tok<pos:position pos:line="37" pos:column="22"/></name><operator pos:line="37" pos:column="22">-&gt;<pos:position pos:line="37" pos:column="27"/></operator><name pos:line="37" pos:column="24">dptr<pos:position pos:line="37" pos:column="28"/></name></name></expr>)<pos:position pos:line="37" pos:column="29"/></condition><then pos:line="37" pos:column="29">
		<block type="pseudo"><return pos:line="38" pos:column="17">return <expr><operator pos:line="38" pos:column="24">-<pos:position pos:line="38" pos:column="25"/></operator><literal type="number" pos:line="38" pos:column="25">1<pos:position pos:line="38" pos:column="26"/></literal></expr>;<pos:position pos:line="38" pos:column="27"/></return></block></then></if> <comment type="block" pos:line="38" pos:column="28">/* premature end of token */</comment>
	  <expr_stmt><expr><call><name pos:line="39" pos:column="11">mutt_buffer_addch<pos:position pos:line="39" pos:column="28"/></name> <argument_list pos:line="39" pos:column="29">(<argument><expr><name pos:line="39" pos:column="30">dest<pos:position pos:line="39" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="36">(<pos:position pos:line="39" pos:column="37"/></operator><call><name pos:line="39" pos:column="37">toupper<pos:position pos:line="39" pos:column="44"/></name> <argument_list pos:line="39" pos:column="45">(<argument><expr><operator pos:line="39" pos:column="46">(<pos:position pos:line="39" pos:column="47"/></operator><name pos:line="39" pos:column="47">unsigned<pos:position pos:line="39" pos:column="55"/></name> <name pos:line="39" pos:column="56">char<pos:position pos:line="39" pos:column="60"/></name><operator pos:line="39" pos:column="60">)<pos:position pos:line="39" pos:column="61"/></operator> <operator pos:line="39" pos:column="62">*<pos:position pos:line="39" pos:column="63"/></operator><name><name pos:line="39" pos:column="63">tok<pos:position pos:line="39" pos:column="66"/></name><operator pos:line="39" pos:column="66">-&gt;<pos:position pos:line="39" pos:column="71"/></operator><name pos:line="39" pos:column="68">dptr<pos:position pos:line="39" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="73"/></argument_list></call>
                                    <operator pos:line="40" pos:column="37">-<pos:position pos:line="40" pos:column="38"/></operator> <literal type="char" pos:line="40" pos:column="39">'@'<pos:position pos:line="40" pos:column="42"/></literal><operator pos:line="40" pos:column="42">)<pos:position pos:line="40" pos:column="43"/></operator> <operator pos:line="40" pos:column="44">&amp;<pos:position pos:line="40" pos:column="49"/></operator> <literal type="number" pos:line="40" pos:column="46">0x7f<pos:position pos:line="40" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="52"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="41" pos:column="11">tok<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">-&gt;<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="16">dptr<pos:position pos:line="41" pos:column="20"/></name></name><operator pos:line="41" pos:column="20">++<pos:position pos:line="41" pos:column="22"/></operator></expr>;<pos:position pos:line="41" pos:column="23"/></expr_stmt>
	  <break pos:line="42" pos:column="11">break;<pos:position pos:line="42" pos:column="17"/></break>
	<case pos:line="43" pos:column="9">case <expr><literal type="char" pos:line="43" pos:column="14">'r'<pos:position pos:line="43" pos:column="17"/></literal></expr>:<pos:position pos:line="43" pos:column="18"/></case>
	  <expr_stmt><expr><call><name pos:line="44" pos:column="11">mutt_buffer_addch<pos:position pos:line="44" pos:column="28"/></name> <argument_list pos:line="44" pos:column="29">(<argument><expr><name pos:line="44" pos:column="30">dest<pos:position pos:line="44" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="44" pos:column="36">'\r'<pos:position pos:line="44" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="42"/></expr_stmt>
	  <break pos:line="45" pos:column="11">break;<pos:position pos:line="45" pos:column="17"/></break>
	<case pos:line="46" pos:column="9">case <expr><literal type="char" pos:line="46" pos:column="14">'n'<pos:position pos:line="46" pos:column="17"/></literal></expr>:<pos:position pos:line="46" pos:column="18"/></case>
	  <expr_stmt><expr><call><name pos:line="47" pos:column="11">mutt_buffer_addch<pos:position pos:line="47" pos:column="28"/></name> <argument_list pos:line="47" pos:column="29">(<argument><expr><name pos:line="47" pos:column="30">dest<pos:position pos:line="47" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="47" pos:column="36">'\n'<pos:position pos:line="47" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="42"/></expr_stmt>
	  <break pos:line="48" pos:column="11">break;<pos:position pos:line="48" pos:column="17"/></break>
	<case pos:line="49" pos:column="9">case <expr><literal type="char" pos:line="49" pos:column="14">'t'<pos:position pos:line="49" pos:column="17"/></literal></expr>:<pos:position pos:line="49" pos:column="18"/></case>
	  <expr_stmt><expr><call><name pos:line="50" pos:column="11">mutt_buffer_addch<pos:position pos:line="50" pos:column="28"/></name> <argument_list pos:line="50" pos:column="29">(<argument><expr><name pos:line="50" pos:column="30">dest<pos:position pos:line="50" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="50" pos:column="36">'\t'<pos:position pos:line="50" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="42"/></expr_stmt>
	  <break pos:line="51" pos:column="11">break;<pos:position pos:line="51" pos:column="17"/></break>
	<case pos:line="52" pos:column="9">case <expr><literal type="char" pos:line="52" pos:column="14">'f'<pos:position pos:line="52" pos:column="17"/></literal></expr>:<pos:position pos:line="52" pos:column="18"/></case>
	  <expr_stmt><expr><call><name pos:line="53" pos:column="11">mutt_buffer_addch<pos:position pos:line="53" pos:column="28"/></name> <argument_list pos:line="53" pos:column="29">(<argument><expr><name pos:line="53" pos:column="30">dest<pos:position pos:line="53" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="53" pos:column="36">'\f'<pos:position pos:line="53" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="42"/></expr_stmt>
	  <break pos:line="54" pos:column="11">break;<pos:position pos:line="54" pos:column="17"/></break>
	<case pos:line="55" pos:column="9">case <expr><literal type="char" pos:line="55" pos:column="14">'e'<pos:position pos:line="55" pos:column="17"/></literal></expr>:<pos:position pos:line="55" pos:column="18"/></case>
	  <expr_stmt><expr><call><name pos:line="56" pos:column="11">mutt_buffer_addch<pos:position pos:line="56" pos:column="28"/></name> <argument_list pos:line="56" pos:column="29">(<argument><expr><name pos:line="56" pos:column="30">dest<pos:position pos:line="56" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="56" pos:column="36">'\033'<pos:position pos:line="56" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="44"/></expr_stmt>
	  <break pos:line="57" pos:column="11">break;<pos:position pos:line="57" pos:column="17"/></break>
	<default pos:line="58" pos:column="9">default:<pos:position pos:line="58" pos:column="17"/></default>
	  <if pos:line="59" pos:column="11">if <condition pos:line="59" pos:column="14">(<expr><call><name pos:line="59" pos:column="15">isdigit<pos:position pos:line="59" pos:column="22"/></name> <argument_list pos:line="59" pos:column="23">(<argument><expr><operator pos:line="59" pos:column="24">(<pos:position pos:line="59" pos:column="25"/></operator><name pos:line="59" pos:column="25">unsigned<pos:position pos:line="59" pos:column="33"/></name> <name pos:line="59" pos:column="34">char<pos:position pos:line="59" pos:column="38"/></name><operator pos:line="59" pos:column="38">)<pos:position pos:line="59" pos:column="39"/></operator> <name pos:line="59" pos:column="40">ch<pos:position pos:line="59" pos:column="42"/></name></expr></argument>)<pos:position pos:line="59" pos:column="43"/></argument_list></call> <operator pos:line="59" pos:column="44">&amp;&amp;<pos:position pos:line="59" pos:column="54"/></operator>
	      <call><name pos:line="60" pos:column="15">isdigit<pos:position pos:line="60" pos:column="22"/></name> <argument_list pos:line="60" pos:column="23">(<argument><expr><operator pos:line="60" pos:column="24">(<pos:position pos:line="60" pos:column="25"/></operator><name pos:line="60" pos:column="25">unsigned<pos:position pos:line="60" pos:column="33"/></name> <name pos:line="60" pos:column="34">char<pos:position pos:line="60" pos:column="38"/></name><operator pos:line="60" pos:column="38">)<pos:position pos:line="60" pos:column="39"/></operator> <operator pos:line="60" pos:column="40">*<pos:position pos:line="60" pos:column="41"/></operator><name><name pos:line="60" pos:column="41">tok<pos:position pos:line="60" pos:column="44"/></name><operator pos:line="60" pos:column="44">-&gt;<pos:position pos:line="60" pos:column="49"/></operator><name pos:line="60" pos:column="46">dptr<pos:position pos:line="60" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="51"/></argument_list></call> <operator pos:line="60" pos:column="52">&amp;&amp;<pos:position pos:line="60" pos:column="62"/></operator>
	      <call><name pos:line="61" pos:column="15">isdigit<pos:position pos:line="61" pos:column="22"/></name> <argument_list pos:line="61" pos:column="23">(<argument><expr><operator pos:line="61" pos:column="24">(<pos:position pos:line="61" pos:column="25"/></operator><name pos:line="61" pos:column="25">unsigned<pos:position pos:line="61" pos:column="33"/></name> <name pos:line="61" pos:column="34">char<pos:position pos:line="61" pos:column="38"/></name><operator pos:line="61" pos:column="38">)<pos:position pos:line="61" pos:column="39"/></operator> <operator pos:line="61" pos:column="40">*<pos:position pos:line="61" pos:column="41"/></operator><operator pos:line="61" pos:column="41">(<pos:position pos:line="61" pos:column="42"/></operator><name><name pos:line="61" pos:column="42">tok<pos:position pos:line="61" pos:column="45"/></name><operator pos:line="61" pos:column="45">-&gt;<pos:position pos:line="61" pos:column="50"/></operator><name pos:line="61" pos:column="47">dptr<pos:position pos:line="61" pos:column="51"/></name></name> <operator pos:line="61" pos:column="52">+<pos:position pos:line="61" pos:column="53"/></operator> <literal type="number" pos:line="61" pos:column="54">1<pos:position pos:line="61" pos:column="55"/></literal><operator pos:line="61" pos:column="55">)<pos:position pos:line="61" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="61" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="58"/></condition><then pos:line="61" pos:column="58">
	  <block pos:line="62" pos:column="11">{

	    <expr_stmt><expr><call><name pos:line="64" pos:column="13">mutt_buffer_addch<pos:position pos:line="64" pos:column="30"/></name> <argument_list pos:line="64" pos:column="31">(<argument><expr><name pos:line="64" pos:column="32">dest<pos:position pos:line="64" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="38">(<pos:position pos:line="64" pos:column="39"/></operator><name pos:line="64" pos:column="39">ch<pos:position pos:line="64" pos:column="41"/></name> <operator pos:line="64" pos:column="42">&lt;&lt;<pos:position pos:line="64" pos:column="50"/></operator> <literal type="number" pos:line="64" pos:column="45">6<pos:position pos:line="64" pos:column="46"/></literal><operator pos:line="64" pos:column="46">)<pos:position pos:line="64" pos:column="47"/></operator> <operator pos:line="64" pos:column="48">+<pos:position pos:line="64" pos:column="49"/></operator> <operator pos:line="64" pos:column="50">(<pos:position pos:line="64" pos:column="51"/></operator><operator pos:line="64" pos:column="51">*<pos:position pos:line="64" pos:column="52"/></operator><name><name pos:line="64" pos:column="52">tok<pos:position pos:line="64" pos:column="55"/></name><operator pos:line="64" pos:column="55">-&gt;<pos:position pos:line="64" pos:column="60"/></operator><name pos:line="64" pos:column="57">dptr<pos:position pos:line="64" pos:column="61"/></name></name> <operator pos:line="64" pos:column="62">&lt;&lt;<pos:position pos:line="64" pos:column="70"/></operator> <literal type="number" pos:line="64" pos:column="65">3<pos:position pos:line="64" pos:column="66"/></literal><operator pos:line="64" pos:column="66">)<pos:position pos:line="64" pos:column="67"/></operator> <operator pos:line="64" pos:column="68">+<pos:position pos:line="64" pos:column="69"/></operator> <operator pos:line="64" pos:column="70">*<pos:position pos:line="64" pos:column="71"/></operator><operator pos:line="64" pos:column="71">(<pos:position pos:line="64" pos:column="72"/></operator><name><name pos:line="64" pos:column="72">tok<pos:position pos:line="64" pos:column="75"/></name><operator pos:line="64" pos:column="75">-&gt;<pos:position pos:line="64" pos:column="80"/></operator><name pos:line="64" pos:column="77">dptr<pos:position pos:line="64" pos:column="81"/></name></name> <operator pos:line="64" pos:column="82">+<pos:position pos:line="64" pos:column="83"/></operator> <literal type="number" pos:line="64" pos:column="84">1<pos:position pos:line="64" pos:column="85"/></literal><operator pos:line="64" pos:column="85">)<pos:position pos:line="64" pos:column="86"/></operator> <operator pos:line="64" pos:column="87">-<pos:position pos:line="64" pos:column="88"/></operator> <literal type="number" pos:line="64" pos:column="89">3504<pos:position pos:line="64" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="95"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="65" pos:column="13">tok<pos:position pos:line="65" pos:column="16"/></name><operator pos:line="65" pos:column="16">-&gt;<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="18">dptr<pos:position pos:line="65" pos:column="22"/></name></name> <operator pos:line="65" pos:column="23">+=<pos:position pos:line="65" pos:column="25"/></operator> <literal type="number" pos:line="65" pos:column="26">2<pos:position pos:line="65" pos:column="27"/></literal></expr>;<pos:position pos:line="65" pos:column="28"/></expr_stmt>
	  }<pos:position pos:line="66" pos:column="12"/></block></then>
	  <else pos:line="67" pos:column="11">else
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="13">mutt_buffer_addch<pos:position pos:line="68" pos:column="30"/></name> <argument_list pos:line="68" pos:column="31">(<argument><expr><name pos:line="68" pos:column="32">dest<pos:position pos:line="68" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="38">ch<pos:position pos:line="68" pos:column="40"/></name></expr></argument>)<pos:position pos:line="68" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="42"/></expr_stmt></block></else></if>
      }<pos:position pos:line="69" pos:column="8"/></block></switch>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="71" pos:column="5">else <if pos:line="71" pos:column="10">if <condition pos:line="71" pos:column="13">(<expr><name pos:line="71" pos:column="14">ch<pos:position pos:line="71" pos:column="16"/></name> <operator pos:line="71" pos:column="17">==<pos:position pos:line="71" pos:column="19"/></operator> <literal type="char" pos:line="71" pos:column="20">'^'<pos:position pos:line="71" pos:column="23"/></literal> <operator pos:line="71" pos:column="24">&amp;&amp;<pos:position pos:line="71" pos:column="34"/></operator> <operator pos:line="71" pos:column="27">(<pos:position pos:line="71" pos:column="28"/></operator><name pos:line="71" pos:column="28">flags<pos:position pos:line="71" pos:column="33"/></name> <operator pos:line="71" pos:column="34">&amp;<pos:position pos:line="71" pos:column="39"/></operator> <name pos:line="71" pos:column="36">MUTT_TOKEN_CONDENSE<pos:position pos:line="71" pos:column="55"/></name><operator pos:line="71" pos:column="55">)<pos:position pos:line="71" pos:column="56"/></operator></expr>)<pos:position pos:line="71" pos:column="57"/></condition><then pos:line="71" pos:column="57">
    <block pos:line="72" pos:column="5">{
	<if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><operator pos:line="73" pos:column="13">!<pos:position pos:line="73" pos:column="14"/></operator><operator pos:line="73" pos:column="14">*<pos:position pos:line="73" pos:column="15"/></operator><name><name pos:line="73" pos:column="15">tok<pos:position pos:line="73" pos:column="18"/></name><operator pos:line="73" pos:column="18">-&gt;<pos:position pos:line="73" pos:column="23"/></operator><name pos:line="73" pos:column="20">dptr<pos:position pos:line="73" pos:column="24"/></name></name></expr>)<pos:position pos:line="73" pos:column="25"/></condition><then pos:line="73" pos:column="25">
	    <block type="pseudo"><return pos:line="74" pos:column="13">return <expr><operator pos:line="74" pos:column="20">-<pos:position pos:line="74" pos:column="21"/></operator><literal type="number" pos:line="74" pos:column="21">1<pos:position pos:line="74" pos:column="22"/></literal></expr>;<pos:position pos:line="74" pos:column="23"/></return></block></then></if> <comment type="block" pos:line="74" pos:column="24">/* premature end of token */</comment>
      <expr_stmt><expr><name pos:line="75" pos:column="7">ch<pos:position pos:line="75" pos:column="9"/></name> <operator pos:line="75" pos:column="10">=<pos:position pos:line="75" pos:column="11"/></operator> <operator pos:line="75" pos:column="12">*<pos:position pos:line="75" pos:column="13"/></operator><name><name pos:line="75" pos:column="13">tok<pos:position pos:line="75" pos:column="16"/></name><operator pos:line="75" pos:column="16">-&gt;<pos:position pos:line="75" pos:column="21"/></operator><name pos:line="75" pos:column="18">dptr<pos:position pos:line="75" pos:column="22"/></name></name><operator pos:line="75" pos:column="22">++<pos:position pos:line="75" pos:column="24"/></operator></expr>;<pos:position pos:line="75" pos:column="25"/></expr_stmt>
      <if pos:line="76" pos:column="7">if <condition pos:line="76" pos:column="10">(<expr><name pos:line="76" pos:column="11">ch<pos:position pos:line="76" pos:column="13"/></name> <operator pos:line="76" pos:column="14">==<pos:position pos:line="76" pos:column="16"/></operator> <literal type="char" pos:line="76" pos:column="17">'^'<pos:position pos:line="76" pos:column="20"/></literal></expr>)<pos:position pos:line="76" pos:column="21"/></condition><then pos:line="76" pos:column="21">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="9">mutt_buffer_addch<pos:position pos:line="77" pos:column="26"/></name> <argument_list pos:line="77" pos:column="27">(<argument><expr><name pos:line="77" pos:column="28">dest<pos:position pos:line="77" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="34">ch<pos:position pos:line="77" pos:column="36"/></name></expr></argument>)<pos:position pos:line="77" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="38"/></expr_stmt></block></then>
      <elseif pos:line="78" pos:column="7">else <if pos:line="78" pos:column="12">if <condition pos:line="78" pos:column="15">(<expr><name pos:line="78" pos:column="16">ch<pos:position pos:line="78" pos:column="18"/></name> <operator pos:line="78" pos:column="19">==<pos:position pos:line="78" pos:column="21"/></operator> <literal type="char" pos:line="78" pos:column="22">'['<pos:position pos:line="78" pos:column="25"/></literal></expr>)<pos:position pos:line="78" pos:column="26"/></condition><then pos:line="78" pos:column="26">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="9">mutt_buffer_addch<pos:position pos:line="79" pos:column="26"/></name> <argument_list pos:line="79" pos:column="27">(<argument><expr><name pos:line="79" pos:column="28">dest<pos:position pos:line="79" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="79" pos:column="34">'\033'<pos:position pos:line="79" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="42"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="80" pos:column="7">else <if pos:line="80" pos:column="12">if <condition pos:line="80" pos:column="15">(<expr><call><name pos:line="80" pos:column="16">isalpha<pos:position pos:line="80" pos:column="23"/></name> <argument_list pos:line="80" pos:column="24">(<argument><expr><operator pos:line="80" pos:column="25">(<pos:position pos:line="80" pos:column="26"/></operator><name pos:line="80" pos:column="26">unsigned<pos:position pos:line="80" pos:column="34"/></name> <name pos:line="80" pos:column="35">char<pos:position pos:line="80" pos:column="39"/></name><operator pos:line="80" pos:column="39">)<pos:position pos:line="80" pos:column="40"/></operator> <name pos:line="80" pos:column="41">ch<pos:position pos:line="80" pos:column="43"/></name></expr></argument>)<pos:position pos:line="80" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="45"/></condition><then pos:line="80" pos:column="45">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="81" pos:column="9">mutt_buffer_addch<pos:position pos:line="81" pos:column="26"/></name> <argument_list pos:line="81" pos:column="27">(<argument><expr><name pos:line="81" pos:column="28">dest<pos:position pos:line="81" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="81" pos:column="34">toupper<pos:position pos:line="81" pos:column="41"/></name> <argument_list pos:line="81" pos:column="42">(<argument><expr><operator pos:line="81" pos:column="43">(<pos:position pos:line="81" pos:column="44"/></operator><name pos:line="81" pos:column="44">unsigned<pos:position pos:line="81" pos:column="52"/></name> <name pos:line="81" pos:column="53">char<pos:position pos:line="81" pos:column="57"/></name><operator pos:line="81" pos:column="57">)<pos:position pos:line="81" pos:column="58"/></operator> <name pos:line="81" pos:column="59">ch<pos:position pos:line="81" pos:column="61"/></name></expr></argument>)<pos:position pos:line="81" pos:column="62"/></argument_list></call> <operator pos:line="81" pos:column="63">-<pos:position pos:line="81" pos:column="64"/></operator> <literal type="char" pos:line="81" pos:column="65">'@'<pos:position pos:line="81" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="70"/></expr_stmt></block></then></if></elseif>
      <else pos:line="82" pos:column="7">else
      <block pos:line="83" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="84" pos:column="9">mutt_buffer_addch<pos:position pos:line="84" pos:column="26"/></name> <argument_list pos:line="84" pos:column="27">(<argument><expr><name pos:line="84" pos:column="28">dest<pos:position pos:line="84" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="84" pos:column="34">'^'<pos:position pos:line="84" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="85" pos:column="9">mutt_buffer_addch<pos:position pos:line="85" pos:column="26"/></name> <argument_list pos:line="85" pos:column="27">(<argument><expr><name pos:line="85" pos:column="28">dest<pos:position pos:line="85" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="34">ch<pos:position pos:line="85" pos:column="36"/></name></expr></argument>)<pos:position pos:line="85" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="38"/></expr_stmt>
      }<pos:position pos:line="86" pos:column="8"/></block></else></if>
    }<pos:position pos:line="87" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="88" pos:column="5">else <if pos:line="88" pos:column="10">if <condition pos:line="88" pos:column="13">(<expr><name pos:line="88" pos:column="14">ch<pos:position pos:line="88" pos:column="16"/></name> <operator pos:line="88" pos:column="17">==<pos:position pos:line="88" pos:column="19"/></operator> <literal type="char" pos:line="88" pos:column="20">'`'<pos:position pos:line="88" pos:column="23"/></literal> <operator pos:line="88" pos:column="24">&amp;&amp;<pos:position pos:line="88" pos:column="34"/></operator> <operator pos:line="88" pos:column="27">(<pos:position pos:line="88" pos:column="28"/></operator><operator pos:line="88" pos:column="28">!<pos:position pos:line="88" pos:column="29"/></operator><name pos:line="88" pos:column="29">qc<pos:position pos:line="88" pos:column="31"/></name> <operator pos:line="88" pos:column="32">||<pos:position pos:line="88" pos:column="34"/></operator> <name pos:line="88" pos:column="35">qc<pos:position pos:line="88" pos:column="37"/></name> <operator pos:line="88" pos:column="38">==<pos:position pos:line="88" pos:column="40"/></operator> <literal type="char" pos:line="88" pos:column="41">'"'<pos:position pos:line="88" pos:column="44"/></literal><operator pos:line="88" pos:column="44">)<pos:position pos:line="88" pos:column="45"/></operator></expr>)<pos:position pos:line="88" pos:column="46"/></condition><then pos:line="88" pos:column="46">
    <block pos:line="89" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="90" pos:column="7">FILE<pos:position pos:line="90" pos:column="11"/></name>	<modifier pos:line="90" pos:column="17">*<pos:position pos:line="90" pos:column="18"/></modifier></type><name pos:line="90" pos:column="18">fp<pos:position pos:line="90" pos:column="20"/></name></decl>;<pos:position pos:line="90" pos:column="21"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="91" pos:column="7">pid_t<pos:position pos:line="91" pos:column="12"/></name></type>	<name pos:line="91" pos:column="17">pid<pos:position pos:line="91" pos:column="20"/></name></decl>;<pos:position pos:line="91" pos:column="21"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="92" pos:column="7">char<pos:position pos:line="92" pos:column="11"/></name>	<modifier pos:line="92" pos:column="17">*<pos:position pos:line="92" pos:column="18"/></modifier></type><name pos:line="92" pos:column="18">cmd<pos:position pos:line="92" pos:column="21"/></name></decl>, <modifier pos:line="92" pos:column="23">*<pos:position pos:line="92" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="92" pos:column="24">ptr<pos:position pos:line="92" pos:column="27"/></name></decl>;<pos:position pos:line="92" pos:column="28"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="93" pos:column="7">size_t<pos:position pos:line="93" pos:column="13"/></name></type>	<name pos:line="93" pos:column="17">expnlen<pos:position pos:line="93" pos:column="24"/></name></decl>;<pos:position pos:line="93" pos:column="25"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="94" pos:column="7">BUFFER<pos:position pos:line="94" pos:column="13"/></name></type>	<name pos:line="94" pos:column="17">expn<pos:position pos:line="94" pos:column="21"/></name></decl>;<pos:position pos:line="94" pos:column="22"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="95" pos:column="7">int<pos:position pos:line="95" pos:column="10"/></name></type>	<name pos:line="95" pos:column="17">line<pos:position pos:line="95" pos:column="21"/></name> <init pos:line="95" pos:column="22">= <expr><literal type="number" pos:line="95" pos:column="24">0<pos:position pos:line="95" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="95" pos:column="26"/></decl_stmt>

      <expr_stmt><expr><name pos:line="97" pos:column="7">pc<pos:position pos:line="97" pos:column="9"/></name> <operator pos:line="97" pos:column="10">=<pos:position pos:line="97" pos:column="11"/></operator> <name><name pos:line="97" pos:column="12">tok<pos:position pos:line="97" pos:column="15"/></name><operator pos:line="97" pos:column="15">-&gt;<pos:position pos:line="97" pos:column="20"/></operator><name pos:line="97" pos:column="17">dptr<pos:position pos:line="97" pos:column="21"/></name></name></expr>;<pos:position pos:line="97" pos:column="22"/></expr_stmt>
      <do pos:line="98" pos:column="7">do <block pos:line="98" pos:column="10">{
	<if pos:line="99" pos:column="9">if <condition pos:line="99" pos:column="12">(<expr><operator pos:line="99" pos:column="13">(<pos:position pos:line="99" pos:column="14"/></operator><name pos:line="99" pos:column="14">pc<pos:position pos:line="99" pos:column="16"/></name> <operator pos:line="99" pos:column="17">=<pos:position pos:line="99" pos:column="18"/></operator> <call><name pos:line="99" pos:column="19">strpbrk<pos:position pos:line="99" pos:column="26"/></name> <argument_list pos:line="99" pos:column="27">(<argument><expr><name pos:line="99" pos:column="28">pc<pos:position pos:line="99" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="32">"\\`"<pos:position pos:line="99" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="38"/></argument_list></call><operator pos:line="99" pos:column="38">)<pos:position pos:line="99" pos:column="39"/></operator></expr>)<pos:position pos:line="99" pos:column="40"/></condition><then pos:line="99" pos:column="40">
	<block pos:line="100" pos:column="9">{
	  <comment type="block" pos:line="101" pos:column="11">/* skip any quoted chars */</comment>
	  <if pos:line="102" pos:column="11">if <condition pos:line="102" pos:column="14">(<expr><operator pos:line="102" pos:column="15">*<pos:position pos:line="102" pos:column="16"/></operator><name pos:line="102" pos:column="16">pc<pos:position pos:line="102" pos:column="18"/></name> <operator pos:line="102" pos:column="19">==<pos:position pos:line="102" pos:column="21"/></operator> <literal type="char" pos:line="102" pos:column="22">'\\'<pos:position pos:line="102" pos:column="26"/></literal></expr>)<pos:position pos:line="102" pos:column="27"/></condition><then pos:line="102" pos:column="27">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="103" pos:column="13">pc<pos:position pos:line="103" pos:column="15"/></name> <operator pos:line="103" pos:column="16">+=<pos:position pos:line="103" pos:column="18"/></operator> <literal type="number" pos:line="103" pos:column="19">2<pos:position pos:line="103" pos:column="20"/></literal></expr>;<pos:position pos:line="103" pos:column="21"/></expr_stmt></block></then></if>
	}<pos:position pos:line="104" pos:column="10"/></block></then></if>
      }<pos:position pos:line="105" pos:column="8"/></block> while <condition pos:line="105" pos:column="15">(<expr><name pos:line="105" pos:column="16">pc<pos:position pos:line="105" pos:column="18"/></name> <operator pos:line="105" pos:column="19">&amp;&amp;<pos:position pos:line="105" pos:column="29"/></operator> <operator pos:line="105" pos:column="22">*<pos:position pos:line="105" pos:column="23"/></operator><name pos:line="105" pos:column="23">pc<pos:position pos:line="105" pos:column="25"/></name> <operator pos:line="105" pos:column="26">!=<pos:position pos:line="105" pos:column="28"/></operator> <literal type="char" pos:line="105" pos:column="29">'`'<pos:position pos:line="105" pos:column="32"/></literal></expr>)<pos:position pos:line="105" pos:column="33"/></condition>;<pos:position pos:line="105" pos:column="34"/></do>
      <if pos:line="106" pos:column="7">if <condition pos:line="106" pos:column="10">(<expr><operator pos:line="106" pos:column="11">!<pos:position pos:line="106" pos:column="12"/></operator><name pos:line="106" pos:column="12">pc<pos:position pos:line="106" pos:column="14"/></name></expr>)<pos:position pos:line="106" pos:column="15"/></condition><then pos:line="106" pos:column="15">
      <block pos:line="107" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="108" pos:column="9">dprint<pos:position pos:line="108" pos:column="15"/></name> <argument_list pos:line="108" pos:column="16">(<argument><expr><literal type="number" pos:line="108" pos:column="17">1<pos:position pos:line="108" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="108" pos:column="20">(<pos:position pos:line="108" pos:column="21"/></operator><name pos:line="108" pos:column="21">debugfile<pos:position pos:line="108" pos:column="30"/></name><operator pos:line="108" pos:column="30">,<pos:position pos:line="108" pos:column="31"/></operator> <literal type="string" pos:line="108" pos:column="32">"mutt_get_token: mismatched backticks\n"<pos:position pos:line="108" pos:column="72"/></literal><operator pos:line="108" pos:column="72">)<pos:position pos:line="108" pos:column="73"/></operator></expr></argument>)<pos:position pos:line="108" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="75"/></expr_stmt>
	<return pos:line="109" pos:column="9">return <expr><operator pos:line="109" pos:column="16">(<pos:position pos:line="109" pos:column="17"/></operator><operator pos:line="109" pos:column="17">-<pos:position pos:line="109" pos:column="18"/></operator><literal type="number" pos:line="109" pos:column="18">1<pos:position pos:line="109" pos:column="19"/></literal><operator pos:line="109" pos:column="19">)<pos:position pos:line="109" pos:column="20"/></operator></expr>;<pos:position pos:line="109" pos:column="21"/></return>
      }<pos:position pos:line="110" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="111" pos:column="7">cmd<pos:position pos:line="111" pos:column="10"/></name> <operator pos:line="111" pos:column="11">=<pos:position pos:line="111" pos:column="12"/></operator> <call><name pos:line="111" pos:column="13">mutt_substrdup<pos:position pos:line="111" pos:column="27"/></name> <argument_list pos:line="111" pos:column="28">(<argument><expr><name><name pos:line="111" pos:column="29">tok<pos:position pos:line="111" pos:column="32"/></name><operator pos:line="111" pos:column="32">-&gt;<pos:position pos:line="111" pos:column="37"/></operator><name pos:line="111" pos:column="34">dptr<pos:position pos:line="111" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="40">pc<pos:position pos:line="111" pos:column="42"/></name></expr></argument>)<pos:position pos:line="111" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="44"/></expr_stmt>
      <if pos:line="112" pos:column="7">if <condition pos:line="112" pos:column="10">(<expr><operator pos:line="112" pos:column="11">(<pos:position pos:line="112" pos:column="12"/></operator><name pos:line="112" pos:column="12">pid<pos:position pos:line="112" pos:column="15"/></name> <operator pos:line="112" pos:column="16">=<pos:position pos:line="112" pos:column="17"/></operator> <call><name pos:line="112" pos:column="18">mutt_create_filter<pos:position pos:line="112" pos:column="36"/></name> <argument_list pos:line="112" pos:column="37">(<argument><expr><name pos:line="112" pos:column="38">cmd<pos:position pos:line="112" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="43">NULL<pos:position pos:line="112" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="112" pos:column="49">&amp;<pos:position pos:line="112" pos:column="54"/></operator><name pos:line="112" pos:column="50">fp<pos:position pos:line="112" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="54">NULL<pos:position pos:line="112" pos:column="58"/></name></expr></argument>)<pos:position pos:line="112" pos:column="59"/></argument_list></call><operator pos:line="112" pos:column="59">)<pos:position pos:line="112" pos:column="60"/></operator> <operator pos:line="112" pos:column="61">&lt;<pos:position pos:line="112" pos:column="65"/></operator> <literal type="number" pos:line="112" pos:column="63">0<pos:position pos:line="112" pos:column="64"/></literal></expr>)<pos:position pos:line="112" pos:column="65"/></condition><then pos:line="112" pos:column="65">
      <block pos:line="113" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="114" pos:column="9">dprint<pos:position pos:line="114" pos:column="15"/></name> <argument_list pos:line="114" pos:column="16">(<argument><expr><literal type="number" pos:line="114" pos:column="17">1<pos:position pos:line="114" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="114" pos:column="20">(<pos:position pos:line="114" pos:column="21"/></operator><name pos:line="114" pos:column="21">debugfile<pos:position pos:line="114" pos:column="30"/></name><operator pos:line="114" pos:column="30">,<pos:position pos:line="114" pos:column="31"/></operator> <literal type="string" pos:line="114" pos:column="32">"mutt_get_token: unable to fork command: %s"<pos:position pos:line="114" pos:column="76"/></literal><operator pos:line="114" pos:column="76">,<pos:position pos:line="114" pos:column="77"/></operator> <name pos:line="114" pos:column="78">cmd<pos:position pos:line="114" pos:column="81"/></name><operator pos:line="114" pos:column="81">)<pos:position pos:line="114" pos:column="82"/></operator></expr></argument>)<pos:position pos:line="114" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="84"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="115" pos:column="9">FREE<pos:position pos:line="115" pos:column="13"/></name> <argument_list pos:line="115" pos:column="14">(<argument><expr><operator pos:line="115" pos:column="15">&amp;<pos:position pos:line="115" pos:column="20"/></operator><name pos:line="115" pos:column="16">cmd<pos:position pos:line="115" pos:column="19"/></name></expr></argument>)<pos:position pos:line="115" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="21"/></expr_stmt>
	<return pos:line="116" pos:column="9">return <expr><operator pos:line="116" pos:column="16">(<pos:position pos:line="116" pos:column="17"/></operator><operator pos:line="116" pos:column="17">-<pos:position pos:line="116" pos:column="18"/></operator><literal type="number" pos:line="116" pos:column="18">1<pos:position pos:line="116" pos:column="19"/></literal><operator pos:line="116" pos:column="19">)<pos:position pos:line="116" pos:column="20"/></operator></expr>;<pos:position pos:line="116" pos:column="21"/></return>
      }<pos:position pos:line="117" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="118" pos:column="7">FREE<pos:position pos:line="118" pos:column="11"/></name> <argument_list pos:line="118" pos:column="12">(<argument><expr><operator pos:line="118" pos:column="13">&amp;<pos:position pos:line="118" pos:column="18"/></operator><name pos:line="118" pos:column="14">cmd<pos:position pos:line="118" pos:column="17"/></name></expr></argument>)<pos:position pos:line="118" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="19"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="120" pos:column="7">tok<pos:position pos:line="120" pos:column="10"/></name><operator pos:line="120" pos:column="10">-&gt;<pos:position pos:line="120" pos:column="15"/></operator><name pos:line="120" pos:column="12">dptr<pos:position pos:line="120" pos:column="16"/></name></name> <operator pos:line="120" pos:column="17">=<pos:position pos:line="120" pos:column="18"/></operator> <name pos:line="120" pos:column="19">pc<pos:position pos:line="120" pos:column="21"/></name> <operator pos:line="120" pos:column="22">+<pos:position pos:line="120" pos:column="23"/></operator> <literal type="number" pos:line="120" pos:column="24">1<pos:position pos:line="120" pos:column="25"/></literal></expr>;<pos:position pos:line="120" pos:column="26"/></expr_stmt>

      <comment type="block" pos:line="122" pos:column="7">/* read line */</comment>
      <expr_stmt><expr><call><name pos:line="123" pos:column="7">mutt_buffer_init<pos:position pos:line="123" pos:column="23"/></name> <argument_list pos:line="123" pos:column="24">(<argument><expr><operator pos:line="123" pos:column="25">&amp;<pos:position pos:line="123" pos:column="30"/></operator><name pos:line="123" pos:column="26">expn<pos:position pos:line="123" pos:column="30"/></name></expr></argument>)<pos:position pos:line="123" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="124" pos:column="7">expn<pos:position pos:line="124" pos:column="11"/></name><operator pos:line="124" pos:column="11">.<pos:position pos:line="124" pos:column="12"/></operator><name pos:line="124" pos:column="12">data<pos:position pos:line="124" pos:column="16"/></name></name> <operator pos:line="124" pos:column="17">=<pos:position pos:line="124" pos:column="18"/></operator> <call><name pos:line="124" pos:column="19">mutt_read_line<pos:position pos:line="124" pos:column="33"/></name> <argument_list pos:line="124" pos:column="34">(<argument><expr><name pos:line="124" pos:column="35">NULL<pos:position pos:line="124" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="124" pos:column="41">&amp;<pos:position pos:line="124" pos:column="46"/></operator><name><name pos:line="124" pos:column="42">expn<pos:position pos:line="124" pos:column="46"/></name><operator pos:line="124" pos:column="46">.<pos:position pos:line="124" pos:column="47"/></operator><name pos:line="124" pos:column="47">dsize<pos:position pos:line="124" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="54">fp<pos:position pos:line="124" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="124" pos:column="58">&amp;<pos:position pos:line="124" pos:column="63"/></operator><name pos:line="124" pos:column="59">line<pos:position pos:line="124" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="124" pos:column="65">0<pos:position pos:line="124" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="68"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="125" pos:column="7">safe_fclose<pos:position pos:line="125" pos:column="18"/></name> <argument_list pos:line="125" pos:column="19">(<argument><expr><operator pos:line="125" pos:column="20">&amp;<pos:position pos:line="125" pos:column="25"/></operator><name pos:line="125" pos:column="21">fp<pos:position pos:line="125" pos:column="23"/></name></expr></argument>)<pos:position pos:line="125" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="126" pos:column="7">mutt_wait_filter<pos:position pos:line="126" pos:column="23"/></name> <argument_list pos:line="126" pos:column="24">(<argument><expr><name pos:line="126" pos:column="25">pid<pos:position pos:line="126" pos:column="28"/></name></expr></argument>)<pos:position pos:line="126" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="30"/></expr_stmt>

      <comment type="block" pos:line="128" pos:column="7">/* if we got output, make a new string consisting of the shell output
	 plus whatever else was left on the original line */</comment>
      <comment type="block" pos:line="130" pos:column="7">/* BUT: If this is inside a quoted string, directly add output to 
       * the token */</comment>
      <if pos:line="132" pos:column="7">if <condition pos:line="132" pos:column="10">(<expr><name><name pos:line="132" pos:column="11">expn<pos:position pos:line="132" pos:column="15"/></name><operator pos:line="132" pos:column="15">.<pos:position pos:line="132" pos:column="16"/></operator><name pos:line="132" pos:column="16">data<pos:position pos:line="132" pos:column="20"/></name></name> <operator pos:line="132" pos:column="21">&amp;&amp;<pos:position pos:line="132" pos:column="31"/></operator> <name pos:line="132" pos:column="24">qc<pos:position pos:line="132" pos:column="26"/></name></expr>)<pos:position pos:line="132" pos:column="27"/></condition><then pos:line="132" pos:column="27">
      <block pos:line="133" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="134" pos:column="9">mutt_buffer_addstr<pos:position pos:line="134" pos:column="27"/></name> <argument_list pos:line="134" pos:column="28">(<argument><expr><name pos:line="134" pos:column="29">dest<pos:position pos:line="134" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="134" pos:column="35">expn<pos:position pos:line="134" pos:column="39"/></name><operator pos:line="134" pos:column="39">.<pos:position pos:line="134" pos:column="40"/></operator><name pos:line="134" pos:column="40">data<pos:position pos:line="134" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="134" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="135" pos:column="9">FREE<pos:position pos:line="135" pos:column="13"/></name> <argument_list pos:line="135" pos:column="14">(<argument><expr><operator pos:line="135" pos:column="15">&amp;<pos:position pos:line="135" pos:column="20"/></operator><name><name pos:line="135" pos:column="16">expn<pos:position pos:line="135" pos:column="20"/></name><operator pos:line="135" pos:column="20">.<pos:position pos:line="135" pos:column="21"/></operator><name pos:line="135" pos:column="21">data<pos:position pos:line="135" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="135" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="27"/></expr_stmt>
      }<pos:position pos:line="136" pos:column="8"/></block></then>
      <elseif pos:line="137" pos:column="7">else <if pos:line="137" pos:column="12">if <condition pos:line="137" pos:column="15">(<expr><name><name pos:line="137" pos:column="16">expn<pos:position pos:line="137" pos:column="20"/></name><operator pos:line="137" pos:column="20">.<pos:position pos:line="137" pos:column="21"/></operator><name pos:line="137" pos:column="21">data<pos:position pos:line="137" pos:column="25"/></name></name></expr>)<pos:position pos:line="137" pos:column="26"/></condition><then pos:line="137" pos:column="26">
      <block pos:line="138" pos:column="7">{
	<expr_stmt><expr><name pos:line="139" pos:column="9">expnlen<pos:position pos:line="139" pos:column="16"/></name> <operator pos:line="139" pos:column="17">=<pos:position pos:line="139" pos:column="18"/></operator> <call><name pos:line="139" pos:column="19">mutt_strlen<pos:position pos:line="139" pos:column="30"/></name> <argument_list pos:line="139" pos:column="31">(<argument><expr><name><name pos:line="139" pos:column="32">expn<pos:position pos:line="139" pos:column="36"/></name><operator pos:line="139" pos:column="36">.<pos:position pos:line="139" pos:column="37"/></operator><name pos:line="139" pos:column="37">data<pos:position pos:line="139" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="139" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="140" pos:column="9">tok<pos:position pos:line="140" pos:column="12"/></name><operator pos:line="140" pos:column="12">-&gt;<pos:position pos:line="140" pos:column="17"/></operator><name pos:line="140" pos:column="14">dsize<pos:position pos:line="140" pos:column="19"/></name></name> <operator pos:line="140" pos:column="20">=<pos:position pos:line="140" pos:column="21"/></operator> <name pos:line="140" pos:column="22">expnlen<pos:position pos:line="140" pos:column="29"/></name> <operator pos:line="140" pos:column="30">+<pos:position pos:line="140" pos:column="31"/></operator> <call><name pos:line="140" pos:column="32">mutt_strlen<pos:position pos:line="140" pos:column="43"/></name> <argument_list pos:line="140" pos:column="44">(<argument><expr><name><name pos:line="140" pos:column="45">tok<pos:position pos:line="140" pos:column="48"/></name><operator pos:line="140" pos:column="48">-&gt;<pos:position pos:line="140" pos:column="53"/></operator><name pos:line="140" pos:column="50">dptr<pos:position pos:line="140" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="140" pos:column="55"/></argument_list></call> <operator pos:line="140" pos:column="56">+<pos:position pos:line="140" pos:column="57"/></operator> <literal type="number" pos:line="140" pos:column="58">1<pos:position pos:line="140" pos:column="59"/></literal></expr>;<pos:position pos:line="140" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><name pos:line="141" pos:column="9">ptr<pos:position pos:line="141" pos:column="12"/></name> <operator pos:line="141" pos:column="13">=<pos:position pos:line="141" pos:column="14"/></operator> <call><name pos:line="141" pos:column="15">safe_malloc<pos:position pos:line="141" pos:column="26"/></name> <argument_list pos:line="141" pos:column="27">(<argument><expr><name><name pos:line="141" pos:column="28">tok<pos:position pos:line="141" pos:column="31"/></name><operator pos:line="141" pos:column="31">-&gt;<pos:position pos:line="141" pos:column="36"/></operator><name pos:line="141" pos:column="33">dsize<pos:position pos:line="141" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="141" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="142" pos:column="9">memcpy<pos:position pos:line="142" pos:column="15"/></name> <argument_list pos:line="142" pos:column="16">(<argument><expr><name pos:line="142" pos:column="17">ptr<pos:position pos:line="142" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="142" pos:column="22">expn<pos:position pos:line="142" pos:column="26"/></name><operator pos:line="142" pos:column="26">.<pos:position pos:line="142" pos:column="27"/></operator><name pos:line="142" pos:column="27">data<pos:position pos:line="142" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="33">expnlen<pos:position pos:line="142" pos:column="40"/></name></expr></argument>)<pos:position pos:line="142" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="143" pos:column="9">strcpy<pos:position pos:line="143" pos:column="15"/></name> <argument_list pos:line="143" pos:column="16">(<argument><expr><name pos:line="143" pos:column="17">ptr<pos:position pos:line="143" pos:column="20"/></name> <operator pos:line="143" pos:column="21">+<pos:position pos:line="143" pos:column="22"/></operator> <name pos:line="143" pos:column="23">expnlen<pos:position pos:line="143" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="143" pos:column="32">tok<pos:position pos:line="143" pos:column="35"/></name><operator pos:line="143" pos:column="35">-&gt;<pos:position pos:line="143" pos:column="40"/></operator><name pos:line="143" pos:column="37">dptr<pos:position pos:line="143" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="143" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="43"/></expr_stmt>	<comment type="block" pos:line="143" pos:column="49">/* __STRCPY_CHECKED__ */</comment>
	<if pos:line="144" pos:column="9">if <condition pos:line="144" pos:column="12">(<expr><name><name pos:line="144" pos:column="13">tok<pos:position pos:line="144" pos:column="16"/></name><operator pos:line="144" pos:column="16">-&gt;<pos:position pos:line="144" pos:column="21"/></operator><name pos:line="144" pos:column="18">destroy<pos:position pos:line="144" pos:column="25"/></name></name></expr>)<pos:position pos:line="144" pos:column="26"/></condition><then pos:line="144" pos:column="26">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="145" pos:column="11">FREE<pos:position pos:line="145" pos:column="15"/></name> <argument_list pos:line="145" pos:column="16">(<argument><expr><operator pos:line="145" pos:column="17">&amp;<pos:position pos:line="145" pos:column="22"/></operator><name><name pos:line="145" pos:column="18">tok<pos:position pos:line="145" pos:column="21"/></name><operator pos:line="145" pos:column="21">-&gt;<pos:position pos:line="145" pos:column="26"/></operator><name pos:line="145" pos:column="23">data<pos:position pos:line="145" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="145" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="29"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="146" pos:column="9">tok<pos:position pos:line="146" pos:column="12"/></name><operator pos:line="146" pos:column="12">-&gt;<pos:position pos:line="146" pos:column="17"/></operator><name pos:line="146" pos:column="14">data<pos:position pos:line="146" pos:column="18"/></name></name> <operator pos:line="146" pos:column="19">=<pos:position pos:line="146" pos:column="20"/></operator> <name pos:line="146" pos:column="21">ptr<pos:position pos:line="146" pos:column="24"/></name></expr>;<pos:position pos:line="146" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="147" pos:column="9">tok<pos:position pos:line="147" pos:column="12"/></name><operator pos:line="147" pos:column="12">-&gt;<pos:position pos:line="147" pos:column="17"/></operator><name pos:line="147" pos:column="14">dptr<pos:position pos:line="147" pos:column="18"/></name></name> <operator pos:line="147" pos:column="19">=<pos:position pos:line="147" pos:column="20"/></operator> <name pos:line="147" pos:column="21">ptr<pos:position pos:line="147" pos:column="24"/></name></expr>;<pos:position pos:line="147" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="148" pos:column="9">tok<pos:position pos:line="148" pos:column="12"/></name><operator pos:line="148" pos:column="12">-&gt;<pos:position pos:line="148" pos:column="17"/></operator><name pos:line="148" pos:column="14">destroy<pos:position pos:line="148" pos:column="21"/></name></name> <operator pos:line="148" pos:column="22">=<pos:position pos:line="148" pos:column="23"/></operator> <literal type="number" pos:line="148" pos:column="24">1<pos:position pos:line="148" pos:column="25"/></literal></expr>;<pos:position pos:line="148" pos:column="26"/></expr_stmt> <comment type="block" pos:line="148" pos:column="27">/* mark that the caller should destroy this data */</comment>
	<expr_stmt><expr><name pos:line="149" pos:column="9">ptr<pos:position pos:line="149" pos:column="12"/></name> <operator pos:line="149" pos:column="13">=<pos:position pos:line="149" pos:column="14"/></operator> <name pos:line="149" pos:column="15">NULL<pos:position pos:line="149" pos:column="19"/></name></expr>;<pos:position pos:line="149" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="150" pos:column="9">FREE<pos:position pos:line="150" pos:column="13"/></name> <argument_list pos:line="150" pos:column="14">(<argument><expr><operator pos:line="150" pos:column="15">&amp;<pos:position pos:line="150" pos:column="20"/></operator><name><name pos:line="150" pos:column="16">expn<pos:position pos:line="150" pos:column="20"/></name><operator pos:line="150" pos:column="20">.<pos:position pos:line="150" pos:column="21"/></operator><name pos:line="150" pos:column="21">data<pos:position pos:line="150" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="150" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="27"/></expr_stmt>
      }<pos:position pos:line="151" pos:column="8"/></block></then></if></elseif></if>
    }<pos:position pos:line="152" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="153" pos:column="5">else <if pos:line="153" pos:column="10">if <condition pos:line="153" pos:column="13">(<expr><name pos:line="153" pos:column="14">ch<pos:position pos:line="153" pos:column="16"/></name> <operator pos:line="153" pos:column="17">==<pos:position pos:line="153" pos:column="19"/></operator> <literal type="char" pos:line="153" pos:column="20">'$'<pos:position pos:line="153" pos:column="23"/></literal> <operator pos:line="153" pos:column="24">&amp;&amp;<pos:position pos:line="153" pos:column="34"/></operator> <operator pos:line="153" pos:column="27">(<pos:position pos:line="153" pos:column="28"/></operator><operator pos:line="153" pos:column="28">!<pos:position pos:line="153" pos:column="29"/></operator><name pos:line="153" pos:column="29">qc<pos:position pos:line="153" pos:column="31"/></name> <operator pos:line="153" pos:column="32">||<pos:position pos:line="153" pos:column="34"/></operator> <name pos:line="153" pos:column="35">qc<pos:position pos:line="153" pos:column="37"/></name> <operator pos:line="153" pos:column="38">==<pos:position pos:line="153" pos:column="40"/></operator> <literal type="char" pos:line="153" pos:column="41">'"'<pos:position pos:line="153" pos:column="44"/></literal><operator pos:line="153" pos:column="44">)<pos:position pos:line="153" pos:column="45"/></operator> <operator pos:line="153" pos:column="46">&amp;&amp;<pos:position pos:line="153" pos:column="56"/></operator> <operator pos:line="153" pos:column="49">(<pos:position pos:line="153" pos:column="50"/></operator><operator pos:line="153" pos:column="50">*<pos:position pos:line="153" pos:column="51"/></operator><name><name pos:line="153" pos:column="51">tok<pos:position pos:line="153" pos:column="54"/></name><operator pos:line="153" pos:column="54">-&gt;<pos:position pos:line="153" pos:column="59"/></operator><name pos:line="153" pos:column="56">dptr<pos:position pos:line="153" pos:column="60"/></name></name> <operator pos:line="153" pos:column="61">==<pos:position pos:line="153" pos:column="63"/></operator> <literal type="char" pos:line="153" pos:column="64">'{'<pos:position pos:line="153" pos:column="67"/></literal> <operator pos:line="153" pos:column="68">||<pos:position pos:line="153" pos:column="70"/></operator> <call><name pos:line="153" pos:column="71">isalpha<pos:position pos:line="153" pos:column="78"/></name> <argument_list pos:line="153" pos:column="79">(<argument><expr><operator pos:line="153" pos:column="80">(<pos:position pos:line="153" pos:column="81"/></operator><name pos:line="153" pos:column="81">unsigned<pos:position pos:line="153" pos:column="89"/></name> <name pos:line="153" pos:column="90">char<pos:position pos:line="153" pos:column="94"/></name><operator pos:line="153" pos:column="94">)<pos:position pos:line="153" pos:column="95"/></operator> <operator pos:line="153" pos:column="96">*<pos:position pos:line="153" pos:column="97"/></operator><name><name pos:line="153" pos:column="97">tok<pos:position pos:line="153" pos:column="100"/></name><operator pos:line="153" pos:column="100">-&gt;<pos:position pos:line="153" pos:column="105"/></operator><name pos:line="153" pos:column="102">dptr<pos:position pos:line="153" pos:column="106"/></name></name></expr></argument>)<pos:position pos:line="153" pos:column="107"/></argument_list></call><operator pos:line="153" pos:column="107">)<pos:position pos:line="153" pos:column="108"/></operator></expr>)<pos:position pos:line="153" pos:column="109"/></condition><then pos:line="153" pos:column="109">
    <block pos:line="154" pos:column="5">{
      <decl_stmt><decl><type><specifier pos:line="155" pos:column="7">const<pos:position pos:line="155" pos:column="12"/></specifier> <name pos:line="155" pos:column="13">char<pos:position pos:line="155" pos:column="17"/></name> <modifier pos:line="155" pos:column="18">*<pos:position pos:line="155" pos:column="19"/></modifier></type><name pos:line="155" pos:column="19">env<pos:position pos:line="155" pos:column="22"/></name> <init pos:line="155" pos:column="23">= <expr><name pos:line="155" pos:column="25">NULL<pos:position pos:line="155" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="155" pos:column="30"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="156" pos:column="7">char<pos:position pos:line="156" pos:column="11"/></name> <modifier pos:line="156" pos:column="12">*<pos:position pos:line="156" pos:column="13"/></modifier></type><name pos:line="156" pos:column="13">var<pos:position pos:line="156" pos:column="16"/></name> <init pos:line="156" pos:column="17">= <expr><name pos:line="156" pos:column="19">NULL<pos:position pos:line="156" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="156" pos:column="24"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="157" pos:column="7">int<pos:position pos:line="157" pos:column="10"/></name></type> <name pos:line="157" pos:column="11">idx<pos:position pos:line="157" pos:column="14"/></name></decl>;<pos:position pos:line="157" pos:column="15"/></decl_stmt>

      <if pos:line="159" pos:column="7">if <condition pos:line="159" pos:column="10">(<expr><operator pos:line="159" pos:column="11">*<pos:position pos:line="159" pos:column="12"/></operator><name><name pos:line="159" pos:column="12">tok<pos:position pos:line="159" pos:column="15"/></name><operator pos:line="159" pos:column="15">-&gt;<pos:position pos:line="159" pos:column="20"/></operator><name pos:line="159" pos:column="17">dptr<pos:position pos:line="159" pos:column="21"/></name></name> <operator pos:line="159" pos:column="22">==<pos:position pos:line="159" pos:column="24"/></operator> <literal type="char" pos:line="159" pos:column="25">'{'<pos:position pos:line="159" pos:column="28"/></literal></expr>)<pos:position pos:line="159" pos:column="29"/></condition><then pos:line="159" pos:column="29">
      <block pos:line="160" pos:column="7">{
	<expr_stmt><expr><name><name pos:line="161" pos:column="9">tok<pos:position pos:line="161" pos:column="12"/></name><operator pos:line="161" pos:column="12">-&gt;<pos:position pos:line="161" pos:column="17"/></operator><name pos:line="161" pos:column="14">dptr<pos:position pos:line="161" pos:column="18"/></name></name><operator pos:line="161" pos:column="18">++<pos:position pos:line="161" pos:column="20"/></operator></expr>;<pos:position pos:line="161" pos:column="21"/></expr_stmt>
	<if pos:line="162" pos:column="9">if <condition pos:line="162" pos:column="12">(<expr><operator pos:line="162" pos:column="13">(<pos:position pos:line="162" pos:column="14"/></operator><name pos:line="162" pos:column="14">pc<pos:position pos:line="162" pos:column="16"/></name> <operator pos:line="162" pos:column="17">=<pos:position pos:line="162" pos:column="18"/></operator> <call><name pos:line="162" pos:column="19">strchr<pos:position pos:line="162" pos:column="25"/></name> <argument_list pos:line="162" pos:column="26">(<argument><expr><name><name pos:line="162" pos:column="27">tok<pos:position pos:line="162" pos:column="30"/></name><operator pos:line="162" pos:column="30">-&gt;<pos:position pos:line="162" pos:column="35"/></operator><name pos:line="162" pos:column="32">dptr<pos:position pos:line="162" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="162" pos:column="38">'}'<pos:position pos:line="162" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="162" pos:column="42"/></argument_list></call><operator pos:line="162" pos:column="42">)<pos:position pos:line="162" pos:column="43"/></operator></expr>)<pos:position pos:line="162" pos:column="44"/></condition><then pos:line="162" pos:column="44">
	<block pos:line="163" pos:column="9">{
	  <expr_stmt><expr><name pos:line="164" pos:column="11">var<pos:position pos:line="164" pos:column="14"/></name> <operator pos:line="164" pos:column="15">=<pos:position pos:line="164" pos:column="16"/></operator> <call><name pos:line="164" pos:column="17">mutt_substrdup<pos:position pos:line="164" pos:column="31"/></name> <argument_list pos:line="164" pos:column="32">(<argument><expr><name><name pos:line="164" pos:column="33">tok<pos:position pos:line="164" pos:column="36"/></name><operator pos:line="164" pos:column="36">-&gt;<pos:position pos:line="164" pos:column="41"/></operator><name pos:line="164" pos:column="38">dptr<pos:position pos:line="164" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="44">pc<pos:position pos:line="164" pos:column="46"/></name></expr></argument>)<pos:position pos:line="164" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="48"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="165" pos:column="11">tok<pos:position pos:line="165" pos:column="14"/></name><operator pos:line="165" pos:column="14">-&gt;<pos:position pos:line="165" pos:column="19"/></operator><name pos:line="165" pos:column="16">dptr<pos:position pos:line="165" pos:column="20"/></name></name> <operator pos:line="165" pos:column="21">=<pos:position pos:line="165" pos:column="22"/></operator> <name pos:line="165" pos:column="23">pc<pos:position pos:line="165" pos:column="25"/></name> <operator pos:line="165" pos:column="26">+<pos:position pos:line="165" pos:column="27"/></operator> <literal type="number" pos:line="165" pos:column="28">1<pos:position pos:line="165" pos:column="29"/></literal></expr>;<pos:position pos:line="165" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="166" pos:column="10"/></block></then></if>
      }<pos:position pos:line="167" pos:column="8"/></block></then>
      <else pos:line="168" pos:column="7">else
      <block pos:line="169" pos:column="7">{
	<for pos:line="170" pos:column="9">for <control pos:line="170" pos:column="13">(<init><expr><name pos:line="170" pos:column="14">pc<pos:position pos:line="170" pos:column="16"/></name> <operator pos:line="170" pos:column="17">=<pos:position pos:line="170" pos:column="18"/></operator> <name><name pos:line="170" pos:column="19">tok<pos:position pos:line="170" pos:column="22"/></name><operator pos:line="170" pos:column="22">-&gt;<pos:position pos:line="170" pos:column="27"/></operator><name pos:line="170" pos:column="24">dptr<pos:position pos:line="170" pos:column="28"/></name></name></expr>;<pos:position pos:line="170" pos:column="29"/></init> <condition><expr><call><name pos:line="170" pos:column="30">isalnum<pos:position pos:line="170" pos:column="37"/></name> <argument_list pos:line="170" pos:column="38">(<argument><expr><operator pos:line="170" pos:column="39">(<pos:position pos:line="170" pos:column="40"/></operator><name pos:line="170" pos:column="40">unsigned<pos:position pos:line="170" pos:column="48"/></name> <name pos:line="170" pos:column="49">char<pos:position pos:line="170" pos:column="53"/></name><operator pos:line="170" pos:column="53">)<pos:position pos:line="170" pos:column="54"/></operator> <operator pos:line="170" pos:column="55">*<pos:position pos:line="170" pos:column="56"/></operator><name pos:line="170" pos:column="56">pc<pos:position pos:line="170" pos:column="58"/></name></expr></argument>)<pos:position pos:line="170" pos:column="59"/></argument_list></call> <operator pos:line="170" pos:column="60">||<pos:position pos:line="170" pos:column="62"/></operator> <operator pos:line="170" pos:column="63">*<pos:position pos:line="170" pos:column="64"/></operator><name pos:line="170" pos:column="64">pc<pos:position pos:line="170" pos:column="66"/></name> <operator pos:line="170" pos:column="67">==<pos:position pos:line="170" pos:column="69"/></operator> <literal type="char" pos:line="170" pos:column="70">'_'<pos:position pos:line="170" pos:column="73"/></literal></expr>;<pos:position pos:line="170" pos:column="74"/></condition> <incr><expr><name pos:line="170" pos:column="75">pc<pos:position pos:line="170" pos:column="77"/></name><operator pos:line="170" pos:column="77">++<pos:position pos:line="170" pos:column="79"/></operator></expr></incr>)<pos:position pos:line="170" pos:column="80"/></control>
	  <block type="pseudo"><empty_stmt pos:line="171" pos:column="11">;<pos:position pos:line="171" pos:column="12"/></empty_stmt></block></for>
	<expr_stmt><expr><name pos:line="172" pos:column="9">var<pos:position pos:line="172" pos:column="12"/></name> <operator pos:line="172" pos:column="13">=<pos:position pos:line="172" pos:column="14"/></operator> <call><name pos:line="172" pos:column="15">mutt_substrdup<pos:position pos:line="172" pos:column="29"/></name> <argument_list pos:line="172" pos:column="30">(<argument><expr><name><name pos:line="172" pos:column="31">tok<pos:position pos:line="172" pos:column="34"/></name><operator pos:line="172" pos:column="34">-&gt;<pos:position pos:line="172" pos:column="39"/></operator><name pos:line="172" pos:column="36">dptr<pos:position pos:line="172" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="42">pc<pos:position pos:line="172" pos:column="44"/></name></expr></argument>)<pos:position pos:line="172" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="173" pos:column="9">tok<pos:position pos:line="173" pos:column="12"/></name><operator pos:line="173" pos:column="12">-&gt;<pos:position pos:line="173" pos:column="17"/></operator><name pos:line="173" pos:column="14">dptr<pos:position pos:line="173" pos:column="18"/></name></name> <operator pos:line="173" pos:column="19">=<pos:position pos:line="173" pos:column="20"/></operator> <name pos:line="173" pos:column="21">pc<pos:position pos:line="173" pos:column="23"/></name></expr>;<pos:position pos:line="173" pos:column="24"/></expr_stmt>
      }<pos:position pos:line="174" pos:column="8"/></block></else></if>
      <if pos:line="175" pos:column="7">if <condition pos:line="175" pos:column="10">(<expr><name pos:line="175" pos:column="11">var<pos:position pos:line="175" pos:column="14"/></name></expr>)<pos:position pos:line="175" pos:column="15"/></condition><then pos:line="175" pos:column="15">
      <block pos:line="176" pos:column="7">{
        <if pos:line="177" pos:column="9">if <condition pos:line="177" pos:column="12">(<expr><operator pos:line="177" pos:column="13">(<pos:position pos:line="177" pos:column="14"/></operator><name pos:line="177" pos:column="14">env<pos:position pos:line="177" pos:column="17"/></name> <operator pos:line="177" pos:column="18">=<pos:position pos:line="177" pos:column="19"/></operator> <call><name pos:line="177" pos:column="20">getenv<pos:position pos:line="177" pos:column="26"/></name> <argument_list pos:line="177" pos:column="27">(<argument><expr><name pos:line="177" pos:column="28">var<pos:position pos:line="177" pos:column="31"/></name></expr></argument>)<pos:position pos:line="177" pos:column="32"/></argument_list></call><operator pos:line="177" pos:column="32">)<pos:position pos:line="177" pos:column="33"/></operator> <operator pos:line="177" pos:column="34">||<pos:position pos:line="177" pos:column="36"/></operator> <operator pos:line="177" pos:column="37">(<pos:position pos:line="177" pos:column="38"/></operator><name pos:line="177" pos:column="38">env<pos:position pos:line="177" pos:column="41"/></name> <operator pos:line="177" pos:column="42">=<pos:position pos:line="177" pos:column="43"/></operator> <call><name pos:line="177" pos:column="44">myvar_get<pos:position pos:line="177" pos:column="53"/></name> <argument_list pos:line="177" pos:column="54">(<argument><expr><name pos:line="177" pos:column="55">var<pos:position pos:line="177" pos:column="58"/></name></expr></argument>)<pos:position pos:line="177" pos:column="59"/></argument_list></call><operator pos:line="177" pos:column="59">)<pos:position pos:line="177" pos:column="60"/></operator></expr>)<pos:position pos:line="177" pos:column="61"/></condition><then pos:line="177" pos:column="61">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="178" pos:column="11">mutt_buffer_addstr<pos:position pos:line="178" pos:column="29"/></name> <argument_list pos:line="178" pos:column="30">(<argument><expr><name pos:line="178" pos:column="31">dest<pos:position pos:line="178" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="37">env<pos:position pos:line="178" pos:column="40"/></name></expr></argument>)<pos:position pos:line="178" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="42"/></expr_stmt></block></then>
        <elseif pos:line="179" pos:column="9">else <if pos:line="179" pos:column="14">if <condition pos:line="179" pos:column="17">(<expr><operator pos:line="179" pos:column="18">(<pos:position pos:line="179" pos:column="19"/></operator><name pos:line="179" pos:column="19">idx<pos:position pos:line="179" pos:column="22"/></name> <operator pos:line="179" pos:column="23">=<pos:position pos:line="179" pos:column="24"/></operator> <call><name pos:line="179" pos:column="25">mutt_option_index<pos:position pos:line="179" pos:column="42"/></name> <argument_list pos:line="179" pos:column="43">(<argument><expr><name pos:line="179" pos:column="44">var<pos:position pos:line="179" pos:column="47"/></name></expr></argument>)<pos:position pos:line="179" pos:column="48"/></argument_list></call><operator pos:line="179" pos:column="48">)<pos:position pos:line="179" pos:column="49"/></operator> <operator pos:line="179" pos:column="50">!=<pos:position pos:line="179" pos:column="52"/></operator> <operator pos:line="179" pos:column="53">-<pos:position pos:line="179" pos:column="54"/></operator><literal type="number" pos:line="179" pos:column="54">1<pos:position pos:line="179" pos:column="55"/></literal></expr>)<pos:position pos:line="179" pos:column="56"/></condition><then pos:line="179" pos:column="56">
        <block pos:line="180" pos:column="9">{
          <comment type="block" pos:line="181" pos:column="11">/* expand settable mutt variables */</comment>
          <decl_stmt><decl><type><name pos:line="182" pos:column="11">char<pos:position pos:line="182" pos:column="15"/></name></type> <name><name pos:line="182" pos:column="16">val<pos:position pos:line="182" pos:column="19"/></name><index pos:line="182" pos:column="19">[<expr><name pos:line="182" pos:column="20">LONG_STRING<pos:position pos:line="182" pos:column="31"/></name></expr>]<pos:position pos:line="182" pos:column="32"/></index></name></decl>;<pos:position pos:line="182" pos:column="33"/></decl_stmt>

          <if pos:line="184" pos:column="11">if <condition pos:line="184" pos:column="14">(<expr><call><name pos:line="184" pos:column="15">var_to_string<pos:position pos:line="184" pos:column="28"/></name> <argument_list pos:line="184" pos:column="29">(<argument><expr><name pos:line="184" pos:column="30">idx<pos:position pos:line="184" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="35">val<pos:position pos:line="184" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="184" pos:column="40">sizeof <argument_list pos:line="184" pos:column="47">(<argument><expr><name pos:line="184" pos:column="48">val<pos:position pos:line="184" pos:column="51"/></name></expr></argument>)<pos:position pos:line="184" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="184" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="184" pos:column="54"/></condition><then pos:line="184" pos:column="54">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="185" pos:column="13">mutt_buffer_addstr<pos:position pos:line="185" pos:column="31"/></name> <argument_list pos:line="185" pos:column="32">(<argument><expr><name pos:line="185" pos:column="33">dest<pos:position pos:line="185" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="39">val<pos:position pos:line="185" pos:column="42"/></name></expr></argument>)<pos:position pos:line="185" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="44"/></expr_stmt></block></then></if>
        }<pos:position pos:line="186" pos:column="10"/></block></then></if></elseif></if>
        <expr_stmt><expr><call><name pos:line="187" pos:column="9">FREE<pos:position pos:line="187" pos:column="13"/></name> <argument_list pos:line="187" pos:column="14">(<argument><expr><operator pos:line="187" pos:column="15">&amp;<pos:position pos:line="187" pos:column="20"/></operator><name pos:line="187" pos:column="16">var<pos:position pos:line="187" pos:column="19"/></name></expr></argument>)<pos:position pos:line="187" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="188" pos:column="8"/></block></then></if>
    }<pos:position pos:line="189" pos:column="6"/></block></then></if></elseif>
    <else pos:line="190" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="191" pos:column="7">mutt_buffer_addch<pos:position pos:line="191" pos:column="24"/></name> <argument_list pos:line="191" pos:column="25">(<argument><expr><name pos:line="191" pos:column="26">dest<pos:position pos:line="191" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="32">ch<pos:position pos:line="191" pos:column="34"/></name></expr></argument>)<pos:position pos:line="191" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="36"/></expr_stmt></block></else></if>
  }<pos:position pos:line="192" pos:column="4"/></block></while>
  <expr_stmt><expr><call><name pos:line="193" pos:column="3">mutt_buffer_addch<pos:position pos:line="193" pos:column="20"/></name> <argument_list pos:line="193" pos:column="21">(<argument><expr><name pos:line="193" pos:column="22">dest<pos:position pos:line="193" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="193" pos:column="28">0<pos:position pos:line="193" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="193" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="31"/></expr_stmt> <comment type="block" pos:line="193" pos:column="32">/* terminate the string */</comment>
  <expr_stmt><expr><call><name pos:line="194" pos:column="3">SKIPWS<pos:position pos:line="194" pos:column="9"/></name> <argument_list pos:line="194" pos:column="10">(<argument><expr><name><name pos:line="194" pos:column="11">tok<pos:position pos:line="194" pos:column="14"/></name><operator pos:line="194" pos:column="14">-&gt;<pos:position pos:line="194" pos:column="19"/></operator><name pos:line="194" pos:column="16">dptr<pos:position pos:line="194" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="194" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="22"/></expr_stmt>
  <return pos:line="195" pos:column="3">return <expr><literal type="number" pos:line="195" pos:column="10">0<pos:position pos:line="195" pos:column="11"/></literal></expr>;<pos:position pos:line="195" pos:column="12"/></return>
}<pos:position pos:line="196" pos:column="2"/></block></function></unit>

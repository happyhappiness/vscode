<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1555_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">maildir_update_mtime<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">CONTEXT<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type> <name pos:line="1" pos:column="45">ctx<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buf<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">_POSIX_PATH_MAX<pos:position pos:line="3" pos:column="27"/></name></expr>]<pos:position pos:line="3" pos:column="28"/></index></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">stat<pos:position pos:line="4" pos:column="14"/></name></name></type> <name pos:line="4" pos:column="15">st<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">mh_data<pos:position pos:line="5" pos:column="17"/></name></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">data<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><call><name pos:line="5" pos:column="26">mh_data<pos:position pos:line="5" pos:column="33"/></name> <argument_list pos:line="5" pos:column="34">(<argument><expr><name pos:line="5" pos:column="35">ctx<pos:position pos:line="5" pos:column="38"/></name></expr></argument>)<pos:position pos:line="5" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name><name pos:line="7" pos:column="7">ctx<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">magic<pos:position pos:line="7" pos:column="17"/></name></name> <operator pos:line="7" pos:column="18">==<pos:position pos:line="7" pos:column="20"/></operator> <name pos:line="7" pos:column="21">MUTT_MAILDIR<pos:position pos:line="7" pos:column="33"/></name></expr>)<pos:position pos:line="7" pos:column="34"/></condition><then pos:line="7" pos:column="34">
  <block pos:line="8" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">snprintf<pos:position pos:line="9" pos:column="13"/></name> <argument_list pos:line="9" pos:column="14">(<argument><expr><name pos:line="9" pos:column="15">buf<pos:position pos:line="9" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="20">sizeof <argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">buf<pos:position pos:line="9" pos:column="31"/></name></expr></argument>)<pos:position pos:line="9" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="34">"%s/%s"<pos:position pos:line="9" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="43">ctx<pos:position pos:line="9" pos:column="46"/></name><operator pos:line="9" pos:column="46">-&gt;<pos:position pos:line="9" pos:column="51"/></operator><name pos:line="9" pos:column="48">path<pos:position pos:line="9" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="54">"cur"<pos:position pos:line="9" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="61"/></expr_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">stat<pos:position pos:line="10" pos:column="13"/></name> <argument_list pos:line="10" pos:column="14">(<argument><expr><name pos:line="10" pos:column="15">buf<pos:position pos:line="10" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="20">&amp;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="21">st<pos:position pos:line="10" pos:column="23"/></name></expr></argument>)<pos:position pos:line="10" pos:column="24"/></argument_list></call> <operator pos:line="10" pos:column="25">==<pos:position pos:line="10" pos:column="27"/></operator> <literal type="number" pos:line="10" pos:column="28">0<pos:position pos:line="10" pos:column="29"/></literal></expr>)<pos:position pos:line="10" pos:column="30"/></condition><then pos:line="10" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="11" pos:column="7">data<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">mtime_cur<pos:position pos:line="11" pos:column="22"/></name></name> <operator pos:line="11" pos:column="23">=<pos:position pos:line="11" pos:column="24"/></operator> <name><name pos:line="11" pos:column="25">st<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">.<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="28">st_mtime<pos:position pos:line="11" pos:column="36"/></name></name></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">snprintf<pos:position pos:line="12" pos:column="13"/></name> <argument_list pos:line="12" pos:column="14">(<argument><expr><name pos:line="12" pos:column="15">buf<pos:position pos:line="12" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="20">sizeof <argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">buf<pos:position pos:line="12" pos:column="31"/></name></expr></argument>)<pos:position pos:line="12" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="34">"%s/%s"<pos:position pos:line="12" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="43">ctx<pos:position pos:line="12" pos:column="46"/></name><operator pos:line="12" pos:column="46">-&gt;<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="48">path<pos:position pos:line="12" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="54">"new"<pos:position pos:line="12" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="61"/></expr_stmt>
  }<pos:position pos:line="13" pos:column="4"/></block></then>
  <else pos:line="14" pos:column="3">else
  <block pos:line="15" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">snprintf<pos:position pos:line="16" pos:column="13"/></name> <argument_list pos:line="16" pos:column="14">(<argument><expr><name pos:line="16" pos:column="15">buf<pos:position pos:line="16" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="20">sizeof <argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">buf<pos:position pos:line="16" pos:column="31"/></name></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="34">"%s/.mh_sequences"<pos:position pos:line="16" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="54">ctx<pos:position pos:line="16" pos:column="57"/></name><operator pos:line="16" pos:column="57">-&gt;<pos:position pos:line="16" pos:column="62"/></operator><name pos:line="16" pos:column="59">path<pos:position pos:line="16" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="65"/></expr_stmt>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name pos:line="17" pos:column="9">stat<pos:position pos:line="17" pos:column="13"/></name> <argument_list pos:line="17" pos:column="14">(<argument><expr><name pos:line="17" pos:column="15">buf<pos:position pos:line="17" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="20">&amp;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="21">st<pos:position pos:line="17" pos:column="23"/></name></expr></argument>)<pos:position pos:line="17" pos:column="24"/></argument_list></call> <operator pos:line="17" pos:column="25">==<pos:position pos:line="17" pos:column="27"/></operator> <literal type="number" pos:line="17" pos:column="28">0<pos:position pos:line="17" pos:column="29"/></literal></expr>)<pos:position pos:line="17" pos:column="30"/></condition><then pos:line="17" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="18" pos:column="7">data<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">mtime_cur<pos:position pos:line="18" pos:column="22"/></name></name> <operator pos:line="18" pos:column="23">=<pos:position pos:line="18" pos:column="24"/></operator> <name><name pos:line="18" pos:column="25">st<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">.<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="28">st_mtime<pos:position pos:line="18" pos:column="36"/></name></name></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">strfcpy<pos:position pos:line="20" pos:column="12"/></name> <argument_list pos:line="20" pos:column="13">(<argument><expr><name pos:line="20" pos:column="14">buf<pos:position pos:line="20" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="19">ctx<pos:position pos:line="20" pos:column="22"/></name><operator pos:line="20" pos:column="22">-&gt;<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="24">path<pos:position pos:line="20" pos:column="28"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="30">sizeof <argument_list pos:line="20" pos:column="37">(<argument><expr><name pos:line="20" pos:column="38">buf<pos:position pos:line="20" pos:column="41"/></name></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="44"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></else></if>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><call><name pos:line="23" pos:column="7">stat<pos:position pos:line="23" pos:column="11"/></name> <argument_list pos:line="23" pos:column="12">(<argument><expr><name pos:line="23" pos:column="13">buf<pos:position pos:line="23" pos:column="16"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="18">&amp;<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="19">st<pos:position pos:line="23" pos:column="21"/></name></expr></argument>)<pos:position pos:line="23" pos:column="22"/></argument_list></call> <operator pos:line="23" pos:column="23">==<pos:position pos:line="23" pos:column="25"/></operator> <literal type="number" pos:line="23" pos:column="26">0<pos:position pos:line="23" pos:column="27"/></literal></expr>)<pos:position pos:line="23" pos:column="28"/></condition><then pos:line="23" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="24" pos:column="5">ctx<pos:position pos:line="24" pos:column="8"/></name><operator pos:line="24" pos:column="8">-&gt;<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="10">mtime<pos:position pos:line="24" pos:column="15"/></name></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <name><name pos:line="24" pos:column="18">st<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">.<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="21">st_mtime<pos:position pos:line="24" pos:column="29"/></name></name></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt></block></then></if>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

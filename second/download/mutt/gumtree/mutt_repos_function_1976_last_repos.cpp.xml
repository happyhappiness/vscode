<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1976_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">handle_confline<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">s<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">FILE<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">out<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">varname<pos:position pos:line="3" pos:column="15"/></name><index pos:line="3" pos:column="15">[<expr><name pos:line="3" pos:column="16">BUFFSIZE<pos:position pos:line="3" pos:column="24"/></name></expr>]<pos:position pos:line="3" pos:column="25"/></index></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buff<pos:position pos:line="4" pos:column="12"/></name><index pos:line="4" pos:column="12">[<expr><name pos:line="4" pos:column="13">BUFFSIZE<pos:position pos:line="4" pos:column="21"/></name></expr>]<pos:position pos:line="4" pos:column="22"/></index></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">tmp<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><name pos:line="5" pos:column="12">BUFFSIZE<pos:position pos:line="5" pos:column="20"/></name></expr>]<pos:position pos:line="5" pos:column="21"/></index></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">type<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>
  
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">val<pos:position pos:line="8" pos:column="11"/></name><index pos:line="8" pos:column="11">[<expr><name pos:line="8" pos:column="12">BUFFSIZE<pos:position pos:line="8" pos:column="20"/></name></expr>]<pos:position pos:line="8" pos:column="21"/></index></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* xxx - put this into an actual state machine? */</comment>

  <comment type="block" pos:line="12" pos:column="3">/* variable name */</comment>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><operator pos:line="13" pos:column="7">!<pos:position pos:line="13" pos:column="8"/></operator><operator pos:line="13" pos:column="8">(<pos:position pos:line="13" pos:column="9"/></operator><name pos:line="13" pos:column="9">s<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <call><name pos:line="13" pos:column="13">get_token<pos:position pos:line="13" pos:column="22"/></name> <argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">varname<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="33">sizeof <argument_list pos:line="13" pos:column="40">(<argument><expr><name pos:line="13" pos:column="41">varname<pos:position pos:line="13" pos:column="48"/></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">s<pos:position pos:line="13" pos:column="52"/></name></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call><operator pos:line="13" pos:column="53">)<pos:position pos:line="13" pos:column="54"/></operator></expr>)<pos:position pos:line="13" pos:column="55"/></condition><then pos:line="13" pos:column="55"> <block type="pseudo"><return pos:line="13" pos:column="56">return;<pos:position pos:line="13" pos:column="63"/></return></block></then></if>
  
  <comment type="block" pos:line="15" pos:column="3">/* comma */</comment>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><operator pos:line="16" pos:column="7">!<pos:position pos:line="16" pos:column="8"/></operator><operator pos:line="16" pos:column="8">(<pos:position pos:line="16" pos:column="9"/></operator><name pos:line="16" pos:column="9">s<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <call><name pos:line="16" pos:column="13">get_token<pos:position pos:line="16" pos:column="22"/></name> <argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">buff<pos:position pos:line="16" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="30">sizeof <argument_list pos:line="16" pos:column="37">(<argument><expr><name pos:line="16" pos:column="38">buff<pos:position pos:line="16" pos:column="42"/></name></expr></argument>)<pos:position pos:line="16" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="16" pos:column="45">s<pos:position pos:line="16" pos:column="46"/></name></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></call><operator pos:line="16" pos:column="47">)<pos:position pos:line="16" pos:column="48"/></operator></expr>)<pos:position pos:line="16" pos:column="49"/></condition><then pos:line="16" pos:column="49"> <block type="pseudo"><return pos:line="16" pos:column="50">return;<pos:position pos:line="16" pos:column="57"/></return></block></then></if>
    
  <comment type="block" pos:line="18" pos:column="3">/* type */</comment>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><operator pos:line="19" pos:column="7">!<pos:position pos:line="19" pos:column="8"/></operator><operator pos:line="19" pos:column="8">(<pos:position pos:line="19" pos:column="9"/></operator><name pos:line="19" pos:column="9">s<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <call><name pos:line="19" pos:column="13">get_token<pos:position pos:line="19" pos:column="22"/></name> <argument_list pos:line="19" pos:column="23">(<argument><expr><name pos:line="19" pos:column="24">buff<pos:position pos:line="19" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="30">sizeof <argument_list pos:line="19" pos:column="37">(<argument><expr><name pos:line="19" pos:column="38">buff<pos:position pos:line="19" pos:column="42"/></name></expr></argument>)<pos:position pos:line="19" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="19" pos:column="45">s<pos:position pos:line="19" pos:column="46"/></name></expr></argument>)<pos:position pos:line="19" pos:column="47"/></argument_list></call><operator pos:line="19" pos:column="47">)<pos:position pos:line="19" pos:column="48"/></operator></expr>)<pos:position pos:line="19" pos:column="49"/></condition><then pos:line="19" pos:column="49"> <block type="pseudo"><return pos:line="19" pos:column="50">return;<pos:position pos:line="19" pos:column="57"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="21" pos:column="3">type<pos:position pos:line="21" pos:column="7"/></name> <operator pos:line="21" pos:column="8">=<pos:position pos:line="21" pos:column="9"/></operator> <call><name pos:line="21" pos:column="10">buff2type<pos:position pos:line="21" pos:column="19"/></name> <argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">buff<pos:position pos:line="21" pos:column="25"/></name></expr></argument>)<pos:position pos:line="21" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>

  <comment type="block" pos:line="23" pos:column="3">/* possibly a "|" or comma */</comment>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><operator pos:line="24" pos:column="7">!<pos:position pos:line="24" pos:column="8"/></operator><operator pos:line="24" pos:column="8">(<pos:position pos:line="24" pos:column="9"/></operator><name pos:line="24" pos:column="9">s<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator> <call><name pos:line="24" pos:column="13">get_token<pos:position pos:line="24" pos:column="22"/></name> <argument_list pos:line="24" pos:column="23">(<argument><expr><name pos:line="24" pos:column="24">buff<pos:position pos:line="24" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="30">sizeof <argument_list pos:line="24" pos:column="37">(<argument><expr><name pos:line="24" pos:column="38">buff<pos:position pos:line="24" pos:column="42"/></name></expr></argument>)<pos:position pos:line="24" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="24" pos:column="45">s<pos:position pos:line="24" pos:column="46"/></name></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></call><operator pos:line="24" pos:column="47">)<pos:position pos:line="24" pos:column="48"/></operator></expr>)<pos:position pos:line="24" pos:column="49"/></condition><then pos:line="24" pos:column="49"> <block type="pseudo"><return pos:line="24" pos:column="50">return;<pos:position pos:line="24" pos:column="57"/></return></block></then></if>

  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><operator pos:line="26" pos:column="7">!<pos:position pos:line="26" pos:column="8"/></operator><call><name pos:line="26" pos:column="8">strcmp<pos:position pos:line="26" pos:column="14"/></name> <argument_list pos:line="26" pos:column="15">(<argument><expr><name pos:line="26" pos:column="16">buff<pos:position pos:line="26" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="22">"|"<pos:position pos:line="26" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="27"/></condition><then pos:line="26" pos:column="27">
  <block pos:line="27" pos:column="3">{
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">Debug<pos:position pos:line="28" pos:column="14"/></name></expr>)<pos:position pos:line="28" pos:column="15"/></condition><then pos:line="28" pos:column="15"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="16">fprintf<pos:position pos:line="28" pos:column="23"/></name> <argument_list pos:line="28" pos:column="24">(<argument><expr><name pos:line="28" pos:column="25">stderr<pos:position pos:line="28" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="33">"%s: Expecting &lt;subtype&gt; &lt;comma&gt;.\n"<pos:position pos:line="28" pos:column="81"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="71">Progname<pos:position pos:line="28" pos:column="79"/></name></expr></argument>)<pos:position pos:line="28" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="81"/></expr_stmt></block></then></if>
    <comment type="block" pos:line="29" pos:column="5">/* ignore subtype and comma */</comment>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">!<pos:position pos:line="30" pos:column="10"/></operator><operator pos:line="30" pos:column="10">(<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="11">s<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <call><name pos:line="30" pos:column="15">get_token<pos:position pos:line="30" pos:column="24"/></name> <argument_list pos:line="30" pos:column="25">(<argument><expr><name pos:line="30" pos:column="26">buff<pos:position pos:line="30" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="32">sizeof <argument_list pos:line="30" pos:column="39">(<argument><expr><name pos:line="30" pos:column="40">buff<pos:position pos:line="30" pos:column="44"/></name></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="30" pos:column="47">s<pos:position pos:line="30" pos:column="48"/></name></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></call><operator pos:line="30" pos:column="49">)<pos:position pos:line="30" pos:column="50"/></operator></expr>)<pos:position pos:line="30" pos:column="51"/></condition><then pos:line="30" pos:column="51"> <block type="pseudo"><return pos:line="30" pos:column="52">return;<pos:position pos:line="30" pos:column="59"/></return></block></then></if>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><operator pos:line="31" pos:column="9">!<pos:position pos:line="31" pos:column="10"/></operator><operator pos:line="31" pos:column="10">(<pos:position pos:line="31" pos:column="11"/></operator><name pos:line="31" pos:column="11">s<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">=<pos:position pos:line="31" pos:column="14"/></operator> <call><name pos:line="31" pos:column="15">get_token<pos:position pos:line="31" pos:column="24"/></name> <argument_list pos:line="31" pos:column="25">(<argument><expr><name pos:line="31" pos:column="26">buff<pos:position pos:line="31" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="32">sizeof <argument_list pos:line="31" pos:column="39">(<argument><expr><name pos:line="31" pos:column="40">buff<pos:position pos:line="31" pos:column="44"/></name></expr></argument>)<pos:position pos:line="31" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="31" pos:column="47">s<pos:position pos:line="31" pos:column="48"/></name></expr></argument>)<pos:position pos:line="31" pos:column="49"/></argument_list></call><operator pos:line="31" pos:column="49">)<pos:position pos:line="31" pos:column="50"/></operator></expr>)<pos:position pos:line="31" pos:column="51"/></condition><then pos:line="31" pos:column="51"> <block type="pseudo"><return pos:line="31" pos:column="52">return;<pos:position pos:line="31" pos:column="59"/></return></block></then></if>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="34" pos:column="3">/* redraw, comma */</comment>
  
  <while pos:line="36" pos:column="3">while <condition pos:line="36" pos:column="9">(<expr><literal type="number" pos:line="36" pos:column="10">1<pos:position pos:line="36" pos:column="11"/></literal></expr>)<pos:position pos:line="36" pos:column="12"/></condition>
  <block pos:line="37" pos:column="3">{
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><operator pos:line="38" pos:column="9">!<pos:position pos:line="38" pos:column="10"/></operator><operator pos:line="38" pos:column="10">(<pos:position pos:line="38" pos:column="11"/></operator><name pos:line="38" pos:column="11">s<pos:position pos:line="38" pos:column="12"/></name> <operator pos:line="38" pos:column="13">=<pos:position pos:line="38" pos:column="14"/></operator> <call><name pos:line="38" pos:column="15">get_token<pos:position pos:line="38" pos:column="24"/></name> <argument_list pos:line="38" pos:column="25">(<argument><expr><name pos:line="38" pos:column="26">buff<pos:position pos:line="38" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="32">sizeof <argument_list pos:line="38" pos:column="39">(<argument><expr><name pos:line="38" pos:column="40">buff<pos:position pos:line="38" pos:column="44"/></name></expr></argument>)<pos:position pos:line="38" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="38" pos:column="47">s<pos:position pos:line="38" pos:column="48"/></name></expr></argument>)<pos:position pos:line="38" pos:column="49"/></argument_list></call><operator pos:line="38" pos:column="49">)<pos:position pos:line="38" pos:column="50"/></operator></expr>)<pos:position pos:line="38" pos:column="51"/></condition><then pos:line="38" pos:column="51"> <block type="pseudo"><return pos:line="38" pos:column="52">return;<pos:position pos:line="38" pos:column="59"/></return></block></then></if>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><operator pos:line="39" pos:column="9">!<pos:position pos:line="39" pos:column="10"/></operator><call><name pos:line="39" pos:column="10">strcmp<pos:position pos:line="39" pos:column="16"/></name> <argument_list pos:line="39" pos:column="17">(<argument><expr><name pos:line="39" pos:column="18">buff<pos:position pos:line="39" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="24">","<pos:position pos:line="39" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="29"/></condition><then pos:line="39" pos:column="29">
      <block type="pseudo"><break pos:line="40" pos:column="7">break;<pos:position pos:line="40" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="41" pos:column="4"/></block></while>

  <comment type="block" pos:line="43" pos:column="3">/* option name or UL &amp;address */</comment>
  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><operator pos:line="44" pos:column="7">!<pos:position pos:line="44" pos:column="8"/></operator><operator pos:line="44" pos:column="8">(<pos:position pos:line="44" pos:column="9"/></operator><name pos:line="44" pos:column="9">s<pos:position pos:line="44" pos:column="10"/></name> <operator pos:line="44" pos:column="11">=<pos:position pos:line="44" pos:column="12"/></operator> <call><name pos:line="44" pos:column="13">get_token<pos:position pos:line="44" pos:column="22"/></name> <argument_list pos:line="44" pos:column="23">(<argument><expr><name pos:line="44" pos:column="24">buff<pos:position pos:line="44" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="30">sizeof <argument_list pos:line="44" pos:column="37">(<argument><expr><name pos:line="44" pos:column="38">buff<pos:position pos:line="44" pos:column="42"/></name></expr></argument>)<pos:position pos:line="44" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="44" pos:column="45">s<pos:position pos:line="44" pos:column="46"/></name></expr></argument>)<pos:position pos:line="44" pos:column="47"/></argument_list></call><operator pos:line="44" pos:column="47">)<pos:position pos:line="44" pos:column="48"/></operator></expr>)<pos:position pos:line="44" pos:column="49"/></condition><then pos:line="44" pos:column="49"> <block type="pseudo"><return pos:line="44" pos:column="50">return;<pos:position pos:line="44" pos:column="57"/></return></block></then></if>
  <if pos:line="45" pos:column="3">if <condition pos:line="45" pos:column="6">(<expr><operator pos:line="45" pos:column="7">!<pos:position pos:line="45" pos:column="8"/></operator><call><name pos:line="45" pos:column="8">strcmp<pos:position pos:line="45" pos:column="14"/></name> <argument_list pos:line="45" pos:column="15">(<argument><expr><name pos:line="45" pos:column="16">buff<pos:position pos:line="45" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="22">"UL"<pos:position pos:line="45" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="28"/></condition><then pos:line="45" pos:column="28">
    <block type="pseudo"><if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><operator pos:line="46" pos:column="9">!<pos:position pos:line="46" pos:column="10"/></operator><operator pos:line="46" pos:column="10">(<pos:position pos:line="46" pos:column="11"/></operator><name pos:line="46" pos:column="11">s<pos:position pos:line="46" pos:column="12"/></name> <operator pos:line="46" pos:column="13">=<pos:position pos:line="46" pos:column="14"/></operator> <call><name pos:line="46" pos:column="15">get_token<pos:position pos:line="46" pos:column="24"/></name> <argument_list pos:line="46" pos:column="25">(<argument><expr><name pos:line="46" pos:column="26">buff<pos:position pos:line="46" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="32">sizeof <argument_list pos:line="46" pos:column="39">(<argument><expr><name pos:line="46" pos:column="40">buff<pos:position pos:line="46" pos:column="44"/></name></expr></argument>)<pos:position pos:line="46" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="46" pos:column="47">s<pos:position pos:line="46" pos:column="48"/></name></expr></argument>)<pos:position pos:line="46" pos:column="49"/></argument_list></call><operator pos:line="46" pos:column="49">)<pos:position pos:line="46" pos:column="50"/></operator></expr>)<pos:position pos:line="46" pos:column="51"/></condition><then pos:line="46" pos:column="51"> <block type="pseudo"><return pos:line="46" pos:column="52">return;<pos:position pos:line="46" pos:column="59"/></return></block></then></if></block></then></if>

  <comment type="block" pos:line="48" pos:column="3">/* comma */</comment>
  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><operator pos:line="49" pos:column="7">!<pos:position pos:line="49" pos:column="8"/></operator><operator pos:line="49" pos:column="8">(<pos:position pos:line="49" pos:column="9"/></operator><name pos:line="49" pos:column="9">s<pos:position pos:line="49" pos:column="10"/></name> <operator pos:line="49" pos:column="11">=<pos:position pos:line="49" pos:column="12"/></operator> <call><name pos:line="49" pos:column="13">get_token<pos:position pos:line="49" pos:column="22"/></name> <argument_list pos:line="49" pos:column="23">(<argument><expr><name pos:line="49" pos:column="24">buff<pos:position pos:line="49" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="30">sizeof <argument_list pos:line="49" pos:column="37">(<argument><expr><name pos:line="49" pos:column="38">buff<pos:position pos:line="49" pos:column="42"/></name></expr></argument>)<pos:position pos:line="49" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="49" pos:column="45">s<pos:position pos:line="49" pos:column="46"/></name></expr></argument>)<pos:position pos:line="49" pos:column="47"/></argument_list></call><operator pos:line="49" pos:column="47">)<pos:position pos:line="49" pos:column="48"/></operator></expr>)<pos:position pos:line="49" pos:column="49"/></condition><then pos:line="49" pos:column="49"> <block type="pseudo"><return pos:line="49" pos:column="50">return;<pos:position pos:line="49" pos:column="57"/></return></block></then></if>

  <if pos:line="51" pos:column="3">if <condition pos:line="51" pos:column="6">(<expr><name pos:line="51" pos:column="7">Debug<pos:position pos:line="51" pos:column="12"/></name></expr>)<pos:position pos:line="51" pos:column="13"/></condition><then pos:line="51" pos:column="13"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="14">fprintf<pos:position pos:line="51" pos:column="21"/></name> <argument_list pos:line="51" pos:column="22">(<argument><expr><name pos:line="51" pos:column="23">stderr<pos:position pos:line="51" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="31">"%s: Expecting default value.\n"<pos:position pos:line="51" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="65">Progname<pos:position pos:line="51" pos:column="73"/></name></expr></argument>)<pos:position pos:line="51" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="75"/></expr_stmt></block></then></if>
  
  <comment type="block" pos:line="53" pos:column="3">/* &lt;default value&gt; or UL &lt;default value&gt; */</comment>
  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><operator pos:line="54" pos:column="7">!<pos:position pos:line="54" pos:column="8"/></operator><operator pos:line="54" pos:column="8">(<pos:position pos:line="54" pos:column="9"/></operator><name pos:line="54" pos:column="9">s<pos:position pos:line="54" pos:column="10"/></name> <operator pos:line="54" pos:column="11">=<pos:position pos:line="54" pos:column="12"/></operator> <call><name pos:line="54" pos:column="13">get_token<pos:position pos:line="54" pos:column="22"/></name> <argument_list pos:line="54" pos:column="23">(<argument><expr><name pos:line="54" pos:column="24">buff<pos:position pos:line="54" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="54" pos:column="30">sizeof <argument_list pos:line="54" pos:column="37">(<argument><expr><name pos:line="54" pos:column="38">buff<pos:position pos:line="54" pos:column="42"/></name></expr></argument>)<pos:position pos:line="54" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="54" pos:column="45">s<pos:position pos:line="54" pos:column="46"/></name></expr></argument>)<pos:position pos:line="54" pos:column="47"/></argument_list></call><operator pos:line="54" pos:column="47">)<pos:position pos:line="54" pos:column="48"/></operator></expr>)<pos:position pos:line="54" pos:column="49"/></condition><then pos:line="54" pos:column="49"> <block type="pseudo"><return pos:line="54" pos:column="50">return;<pos:position pos:line="54" pos:column="57"/></return></block></then></if>
  <if pos:line="55" pos:column="3">if <condition pos:line="55" pos:column="6">(<expr><operator pos:line="55" pos:column="7">!<pos:position pos:line="55" pos:column="8"/></operator><call><name pos:line="55" pos:column="8">strcmp<pos:position pos:line="55" pos:column="14"/></name> <argument_list pos:line="55" pos:column="15">(<argument><expr><name pos:line="55" pos:column="16">buff<pos:position pos:line="55" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="22">"UL"<pos:position pos:line="55" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="28"/></condition><then pos:line="55" pos:column="28">
  <block pos:line="56" pos:column="3">{
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><name pos:line="57" pos:column="9">Debug<pos:position pos:line="57" pos:column="14"/></name></expr>)<pos:position pos:line="57" pos:column="15"/></condition><then pos:line="57" pos:column="15"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="16">fprintf<pos:position pos:line="57" pos:column="23"/></name> <argument_list pos:line="57" pos:column="24">(<argument><expr><name pos:line="57" pos:column="25">stderr<pos:position pos:line="57" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="33">"%s: Skipping UL.\n"<pos:position pos:line="57" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="55">Progname<pos:position pos:line="57" pos:column="63"/></name></expr></argument>)<pos:position pos:line="57" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="65"/></expr_stmt></block></then></if>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><operator pos:line="58" pos:column="9">!<pos:position pos:line="58" pos:column="10"/></operator><operator pos:line="58" pos:column="10">(<pos:position pos:line="58" pos:column="11"/></operator><name pos:line="58" pos:column="11">s<pos:position pos:line="58" pos:column="12"/></name> <operator pos:line="58" pos:column="13">=<pos:position pos:line="58" pos:column="14"/></operator> <call><name pos:line="58" pos:column="15">get_token<pos:position pos:line="58" pos:column="24"/></name> <argument_list pos:line="58" pos:column="25">(<argument><expr><name pos:line="58" pos:column="26">buff<pos:position pos:line="58" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="58" pos:column="32">sizeof <argument_list pos:line="58" pos:column="39">(<argument><expr><name pos:line="58" pos:column="40">buff<pos:position pos:line="58" pos:column="44"/></name></expr></argument>)<pos:position pos:line="58" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="58" pos:column="47">s<pos:position pos:line="58" pos:column="48"/></name></expr></argument>)<pos:position pos:line="58" pos:column="49"/></argument_list></call><operator pos:line="58" pos:column="49">)<pos:position pos:line="58" pos:column="50"/></operator></expr>)<pos:position pos:line="58" pos:column="51"/></condition><then pos:line="58" pos:column="51"> <block type="pseudo"><return pos:line="58" pos:column="52">return;<pos:position pos:line="58" pos:column="59"/></return></block></then></if>
  }<pos:position pos:line="59" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="61" pos:column="3">memset<pos:position pos:line="61" pos:column="9"/></name> <argument_list pos:line="61" pos:column="10">(<argument><expr><name pos:line="61" pos:column="11">tmp<pos:position pos:line="61" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="16">0<pos:position pos:line="61" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="19">sizeof <argument_list pos:line="61" pos:column="26">(<argument><expr><name pos:line="61" pos:column="27">tmp<pos:position pos:line="61" pos:column="30"/></name></expr></argument>)<pos:position pos:line="61" pos:column="31"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="61" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="33"/></expr_stmt>

  <do pos:line="63" pos:column="3">do 
  <block pos:line="64" pos:column="3">{
    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><operator pos:line="65" pos:column="9">!<pos:position pos:line="65" pos:column="10"/></operator><call><name pos:line="65" pos:column="10">strcmp<pos:position pos:line="65" pos:column="16"/></name> <argument_list pos:line="65" pos:column="17">(<argument><expr><name pos:line="65" pos:column="18">buff<pos:position pos:line="65" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="24">"}"<pos:position pos:line="65" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="29"/></condition><then pos:line="65" pos:column="29">
      <block type="pseudo"><break pos:line="66" pos:column="7">break;<pos:position pos:line="66" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><call><name pos:line="68" pos:column="5">strncpy<pos:position pos:line="68" pos:column="12"/></name> <argument_list pos:line="68" pos:column="13">(<argument><expr><name pos:line="68" pos:column="14">tmp<pos:position pos:line="68" pos:column="17"/></name> <operator pos:line="68" pos:column="18">+<pos:position pos:line="68" pos:column="19"/></operator> <call><name pos:line="68" pos:column="20">strlen<pos:position pos:line="68" pos:column="26"/></name> <argument_list pos:line="68" pos:column="27">(<argument><expr><name pos:line="68" pos:column="28">tmp<pos:position pos:line="68" pos:column="31"/></name></expr></argument>)<pos:position pos:line="68" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="68" pos:column="34">buff<pos:position pos:line="68" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="68" pos:column="40">sizeof <argument_list pos:line="68" pos:column="47">(<argument><expr><name pos:line="68" pos:column="48">tmp<pos:position pos:line="68" pos:column="51"/></name></expr></argument>)<pos:position pos:line="68" pos:column="52"/></argument_list></sizeof> <operator pos:line="68" pos:column="53">-<pos:position pos:line="68" pos:column="54"/></operator> <call><name pos:line="68" pos:column="55">strlen<pos:position pos:line="68" pos:column="61"/></name> <argument_list pos:line="68" pos:column="62">(<argument><expr><name pos:line="68" pos:column="63">tmp<pos:position pos:line="68" pos:column="66"/></name></expr></argument>)<pos:position pos:line="68" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="69"/></expr_stmt>
  }<pos:position pos:line="69" pos:column="4"/></block>
  while <condition pos:line="70" pos:column="9">(<expr><operator pos:line="70" pos:column="10">(<pos:position pos:line="70" pos:column="11"/></operator><name pos:line="70" pos:column="11">s<pos:position pos:line="70" pos:column="12"/></name> <operator pos:line="70" pos:column="13">=<pos:position pos:line="70" pos:column="14"/></operator> <call><name pos:line="70" pos:column="15">get_token<pos:position pos:line="70" pos:column="24"/></name> <argument_list pos:line="70" pos:column="25">(<argument><expr><name pos:line="70" pos:column="26">buff<pos:position pos:line="70" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="70" pos:column="32">sizeof <argument_list pos:line="70" pos:column="39">(<argument><expr><name pos:line="70" pos:column="40">buff<pos:position pos:line="70" pos:column="44"/></name></expr></argument>)<pos:position pos:line="70" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="70" pos:column="47">s<pos:position pos:line="70" pos:column="48"/></name></expr></argument>)<pos:position pos:line="70" pos:column="49"/></argument_list></call><operator pos:line="70" pos:column="49">)<pos:position pos:line="70" pos:column="50"/></operator></expr>)<pos:position pos:line="70" pos:column="51"/></condition>;<pos:position pos:line="70" pos:column="52"/></do>

  <expr_stmt><expr><call><name pos:line="72" pos:column="3">pretty_default<pos:position pos:line="72" pos:column="17"/></name> <argument_list pos:line="72" pos:column="18">(<argument><expr><name pos:line="72" pos:column="19">val<pos:position pos:line="72" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="72" pos:column="24">sizeof <argument_list pos:line="72" pos:column="31">(<argument><expr><name pos:line="72" pos:column="32">val<pos:position pos:line="72" pos:column="35"/></name></expr></argument>)<pos:position pos:line="72" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="72" pos:column="38">tmp<pos:position pos:line="72" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="43">type<pos:position pos:line="72" pos:column="47"/></name></expr></argument>)<pos:position pos:line="72" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="73" pos:column="3">print_confline<pos:position pos:line="73" pos:column="17"/></name> <argument_list pos:line="73" pos:column="18">(<argument><expr><name pos:line="73" pos:column="19">varname<pos:position pos:line="73" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="28">type<pos:position pos:line="73" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="34">val<pos:position pos:line="73" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="39">out<pos:position pos:line="73" pos:column="42"/></name></expr></argument>)<pos:position pos:line="73" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="44"/></expr_stmt>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

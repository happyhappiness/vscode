<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_173_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_copy_stream<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">FILE<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">fin<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">FILE<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">fout<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">l<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buf<pos:position pos:line="4" pos:column="11"/></name><index pos:line="4" pos:column="11">[<expr><name pos:line="4" pos:column="12">LONG_STRING<pos:position pos:line="4" pos:column="23"/></name></expr>]<pos:position pos:line="4" pos:column="24"/></index></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>

  <while pos:line="6" pos:column="3">while <condition pos:line="6" pos:column="9">(<expr><operator pos:line="6" pos:column="10">(<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">l<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <call><name pos:line="6" pos:column="15">fread<pos:position pos:line="6" pos:column="20"/></name> <argument_list pos:line="6" pos:column="21">(<argument><expr><name pos:line="6" pos:column="22">buf<pos:position pos:line="6" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="27">1<pos:position pos:line="6" pos:column="28"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="30">sizeof <argument_list pos:line="6" pos:column="37">(<argument><expr><name pos:line="6" pos:column="38">buf<pos:position pos:line="6" pos:column="41"/></name></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="6" pos:column="44">fin<pos:position pos:line="6" pos:column="47"/></name></expr></argument>)<pos:position pos:line="6" pos:column="48"/></argument_list></call><operator pos:line="6" pos:column="48">)<pos:position pos:line="6" pos:column="49"/></operator> <operator pos:line="6" pos:column="50">&gt;<pos:position pos:line="6" pos:column="54"/></operator> <literal type="number" pos:line="6" pos:column="52">0<pos:position pos:line="6" pos:column="53"/></literal></expr>)<pos:position pos:line="6" pos:column="54"/></condition>
  <block pos:line="7" pos:column="3">{
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name pos:line="8" pos:column="9">fwrite<pos:position pos:line="8" pos:column="15"/></name> <argument_list pos:line="8" pos:column="16">(<argument><expr><name pos:line="8" pos:column="17">buf<pos:position pos:line="8" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="22">1<pos:position pos:line="8" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="25">l<pos:position pos:line="8" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="28">fout<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call> <operator pos:line="8" pos:column="34">!=<pos:position pos:line="8" pos:column="36"/></operator> <name pos:line="8" pos:column="37">l<pos:position pos:line="8" pos:column="38"/></name></expr>)<pos:position pos:line="8" pos:column="39"/></condition><then pos:line="8" pos:column="39">
      <block type="pseudo"><return pos:line="9" pos:column="7">return <expr><operator pos:line="9" pos:column="14">(<pos:position pos:line="9" pos:column="15"/></operator><operator pos:line="9" pos:column="15">-<pos:position pos:line="9" pos:column="16"/></operator><literal type="number" pos:line="9" pos:column="16">1<pos:position pos:line="9" pos:column="17"/></literal><operator pos:line="9" pos:column="17">)<pos:position pos:line="9" pos:column="18"/></operator></expr>;<pos:position pos:line="9" pos:column="19"/></return></block></then></if>
  }<pos:position pos:line="10" pos:column="4"/></block></while>

  <return pos:line="12" pos:column="3">return <expr><literal type="number" pos:line="12" pos:column="10">0<pos:position pos:line="12" pos:column="11"/></literal></expr>;<pos:position pos:line="12" pos:column="12"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

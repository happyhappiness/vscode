<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1131_mutt-1.4.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">source_rc<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">rcfile<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">BUFFER<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">err<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">FILE<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">f<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">line<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><literal type="number" pos:line="4" pos:column="14">0<pos:position pos:line="4" pos:column="15"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="17">rc<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">BUFFER<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">token<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">linebuf<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><name pos:line="6" pos:column="19">NULL<pos:position pos:line="6" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">buflen<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">pid_t<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">pid<pos:position pos:line="8" pos:column="12"/></name></decl>;<pos:position pos:line="8" pos:column="13"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">(<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">f<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <call><name pos:line="10" pos:column="12">mutt_open_read<pos:position pos:line="10" pos:column="26"/></name> <argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">rcfile<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="36">&amp;<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="37">pid<pos:position pos:line="10" pos:column="40"/></name></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></call><operator pos:line="10" pos:column="41">)<pos:position pos:line="10" pos:column="42"/></operator> <operator pos:line="10" pos:column="43">==<pos:position pos:line="10" pos:column="45"/></operator> <name pos:line="10" pos:column="46">NULL<pos:position pos:line="10" pos:column="50"/></name></expr>)<pos:position pos:line="10" pos:column="51"/></condition><then pos:line="10" pos:column="51">
  <block pos:line="11" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">snprintf<pos:position pos:line="12" pos:column="13"/></name> <argument_list pos:line="12" pos:column="14">(<argument><expr><name><name pos:line="12" pos:column="15">err<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">-&gt;<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="20">data<pos:position pos:line="12" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="26">err<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">dsize<pos:position pos:line="12" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="38">"%s: %s"<pos:position pos:line="12" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="48">rcfile<pos:position pos:line="12" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="56">strerror<pos:position pos:line="12" pos:column="64"/></name> <argument_list pos:line="12" pos:column="65">(<argument><expr><name pos:line="12" pos:column="66">errno<pos:position pos:line="12" pos:column="71"/></name></expr></argument>)<pos:position pos:line="12" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="74"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><operator pos:line="13" pos:column="13">-<pos:position pos:line="13" pos:column="14"/></operator><literal type="number" pos:line="13" pos:column="14">1<pos:position pos:line="13" pos:column="15"/></literal><operator pos:line="13" pos:column="15">)<pos:position pos:line="13" pos:column="16"/></operator></expr>;<pos:position pos:line="13" pos:column="17"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">memset<pos:position pos:line="16" pos:column="9"/></name> <argument_list pos:line="16" pos:column="10">(<argument><expr><operator pos:line="16" pos:column="11">&amp;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="12">token<pos:position pos:line="16" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="19">0<pos:position pos:line="16" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="22">sizeof <argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">token<pos:position pos:line="16" pos:column="35"/></name></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="38"/></expr_stmt>
  <while pos:line="17" pos:column="3">while <condition pos:line="17" pos:column="9">(<expr><operator pos:line="17" pos:column="10">(<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="11">linebuf<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <call><name pos:line="17" pos:column="21">mutt_read_line<pos:position pos:line="17" pos:column="35"/></name> <argument_list pos:line="17" pos:column="36">(<argument><expr><name pos:line="17" pos:column="37">linebuf<pos:position pos:line="17" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="46">&amp;<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="47">buflen<pos:position pos:line="17" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="55">f<pos:position pos:line="17" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="58">&amp;<pos:position pos:line="17" pos:column="63"/></operator><name pos:line="17" pos:column="59">line<pos:position pos:line="17" pos:column="63"/></name></expr></argument>)<pos:position pos:line="17" pos:column="64"/></argument_list></call><operator pos:line="17" pos:column="64">)<pos:position pos:line="17" pos:column="65"/></operator> <operator pos:line="17" pos:column="66">!=<pos:position pos:line="17" pos:column="68"/></operator> <name pos:line="17" pos:column="69">NULL<pos:position pos:line="17" pos:column="73"/></name></expr>)<pos:position pos:line="17" pos:column="74"/></condition>
  <block pos:line="18" pos:column="3">{
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name pos:line="19" pos:column="9">mutt_parse_rc_line<pos:position pos:line="19" pos:column="27"/></name> <argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">linebuf<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="38">&amp;<pos:position pos:line="19" pos:column="43"/></operator><name pos:line="19" pos:column="39">token<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="46">err<pos:position pos:line="19" pos:column="49"/></name></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call> <operator pos:line="19" pos:column="51">==<pos:position pos:line="19" pos:column="53"/></operator> <operator pos:line="19" pos:column="54">-<pos:position pos:line="19" pos:column="55"/></operator><literal type="number" pos:line="19" pos:column="55">1<pos:position pos:line="19" pos:column="56"/></literal></expr>)<pos:position pos:line="19" pos:column="57"/></condition><then pos:line="19" pos:column="57">
    <block pos:line="20" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">mutt_error<pos:position pos:line="21" pos:column="17"/></name> <argument_list pos:line="21" pos:column="18">(<argument><expr><call><name pos:line="21" pos:column="19">_<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><literal type="string" pos:line="21" pos:column="21">"Error in %s, line %d: %s"<pos:position pos:line="21" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="21" pos:column="50">rcfile<pos:position pos:line="21" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="58">line<pos:position pos:line="21" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="64">err<pos:position pos:line="21" pos:column="67"/></name><operator pos:line="21" pos:column="67">-&gt;<pos:position pos:line="21" pos:column="72"/></operator><name pos:line="21" pos:column="69">data<pos:position pos:line="21" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="75"/></expr_stmt>
      <if pos:line="22" pos:column="7">if <condition pos:line="22" pos:column="10">(<expr><operator pos:line="22" pos:column="11">--<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">rc<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">&lt;<pos:position pos:line="22" pos:column="20"/></operator> <operator pos:line="22" pos:column="18">-<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="19">MAXERRS<pos:position pos:line="22" pos:column="26"/></name></expr>)<pos:position pos:line="22" pos:column="27"/></condition><then pos:line="22" pos:column="27">
        <block type="pseudo"><break pos:line="23" pos:column="9">break;<pos:position pos:line="23" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="24" pos:column="6"/></block></then>
    <elseif pos:line="25" pos:column="5">else
      <if pos:line="26" pos:column="7">if <condition pos:line="26" pos:column="10">(<expr><name pos:line="26" pos:column="11">rc<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">&lt;<pos:position pos:line="26" pos:column="18"/></operator> <literal type="number" pos:line="26" pos:column="16">0<pos:position pos:line="26" pos:column="17"/></literal></expr>)<pos:position pos:line="26" pos:column="18"/></condition><then pos:line="26" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="9">rc<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <operator pos:line="27" pos:column="14">-<pos:position pos:line="27" pos:column="15"/></operator><literal type="number" pos:line="27" pos:column="15">1<pos:position pos:line="27" pos:column="16"/></literal></expr>;<pos:position pos:line="27" pos:column="17"/></expr_stmt></block></then></if></elseif></if>
  }<pos:position pos:line="28" pos:column="4"/></block></while>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">FREE<pos:position pos:line="29" pos:column="7"/></name> <argument_list pos:line="29" pos:column="8">(<argument><expr><operator pos:line="29" pos:column="9">&amp;<pos:position pos:line="29" pos:column="14"/></operator><name><name pos:line="29" pos:column="10">token<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">.<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="16">data<pos:position pos:line="29" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">safe_free<pos:position pos:line="30" pos:column="12"/></name> <argument_list pos:line="30" pos:column="13">(<argument><expr><operator pos:line="30" pos:column="14">(<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="15">void<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">*<pos:position pos:line="30" pos:column="21"/></operator><operator pos:line="30" pos:column="21">*<pos:position pos:line="30" pos:column="22"/></operator><operator pos:line="30" pos:column="22">)<pos:position pos:line="30" pos:column="23"/></operator> <operator pos:line="30" pos:column="24">&amp;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="25">linebuf<pos:position pos:line="30" pos:column="32"/></name></expr></argument>)<pos:position pos:line="30" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">fclose<pos:position pos:line="31" pos:column="9"/></name> <argument_list pos:line="31" pos:column="10">(<argument><expr><name pos:line="31" pos:column="11">f<pos:position pos:line="31" pos:column="12"/></name></expr></argument>)<pos:position pos:line="31" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="14"/></expr_stmt>
  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name pos:line="32" pos:column="7">pid<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">!=<pos:position pos:line="32" pos:column="13"/></operator> <operator pos:line="32" pos:column="14">-<pos:position pos:line="32" pos:column="15"/></operator><literal type="number" pos:line="32" pos:column="15">1<pos:position pos:line="32" pos:column="16"/></literal></expr>)<pos:position pos:line="32" pos:column="17"/></condition><then pos:line="32" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="5">mutt_wait_filter<pos:position pos:line="33" pos:column="21"/></name> <argument_list pos:line="33" pos:column="22">(<argument><expr><name pos:line="33" pos:column="23">pid<pos:position pos:line="33" pos:column="26"/></name></expr></argument>)<pos:position pos:line="33" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="28"/></expr_stmt></block></then></if>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><name pos:line="34" pos:column="7">rc<pos:position pos:line="34" pos:column="9"/></name></expr>)<pos:position pos:line="34" pos:column="10"/></condition><then pos:line="34" pos:column="10">
  <block pos:line="35" pos:column="3">{
    <comment type="block" pos:line="36" pos:column="5">/* the muttrc source keyword */</comment>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">snprintf<pos:position pos:line="37" pos:column="13"/></name> <argument_list pos:line="37" pos:column="14">(<argument><expr><name><name pos:line="37" pos:column="15">err<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">-&gt;<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="20">data<pos:position pos:line="37" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="26">err<pos:position pos:line="37" pos:column="29"/></name><operator pos:line="37" pos:column="29">-&gt;<pos:position pos:line="37" pos:column="34"/></operator><name pos:line="37" pos:column="31">dsize<pos:position pos:line="37" pos:column="36"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="37" pos:column="38">rc<pos:position pos:line="37" pos:column="40"/></name> <operator pos:line="37" pos:column="41">&gt;=<pos:position pos:line="37" pos:column="46"/></operator> <operator pos:line="37" pos:column="44">-<pos:position pos:line="37" pos:column="45"/></operator><name pos:line="37" pos:column="45">MAXERRS<pos:position pos:line="37" pos:column="52"/></name></expr> ?<pos:position pos:line="37" pos:column="54"/></condition><then pos:line="37" pos:column="54"> <expr><call><name pos:line="37" pos:column="55">_<pos:position pos:line="37" pos:column="56"/></name><argument_list pos:line="37" pos:column="56">(<argument><expr><literal type="string" pos:line="37" pos:column="57">"source: errors in %s"<pos:position pos:line="37" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="80"/></argument_list></call></expr>
      <pos:position pos:line="38" pos:column="7"/></then><else pos:line="38" pos:column="7">: <expr><call><name pos:line="38" pos:column="9">_<pos:position pos:line="38" pos:column="10"/></name><argument_list pos:line="38" pos:column="10">(<argument><expr><literal type="string" pos:line="38" pos:column="11">"source: reading aborted due too many errors in %s"<pos:position pos:line="38" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="63"/></argument_list></call></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="38" pos:column="65">rcfile<pos:position pos:line="38" pos:column="71"/></name></expr></argument>)<pos:position pos:line="38" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><name pos:line="39" pos:column="5">rc<pos:position pos:line="39" pos:column="7"/></name> <operator pos:line="39" pos:column="8">=<pos:position pos:line="39" pos:column="9"/></operator> <operator pos:line="39" pos:column="10">-<pos:position pos:line="39" pos:column="11"/></operator><literal type="number" pos:line="39" pos:column="11">1<pos:position pos:line="39" pos:column="12"/></literal></expr>;<pos:position pos:line="39" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>
  <return pos:line="41" pos:column="3">return <expr><operator pos:line="41" pos:column="10">(<pos:position pos:line="41" pos:column="11"/></operator><name pos:line="41" pos:column="11">rc<pos:position pos:line="41" pos:column="13"/></name><operator pos:line="41" pos:column="13">)<pos:position pos:line="41" pos:column="14"/></operator></expr>;<pos:position pos:line="41" pos:column="15"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

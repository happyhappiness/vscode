<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_909_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_menuDestroy<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">MUTTMENU<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier><modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">p<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">safe_free<pos:position pos:line="5" pos:column="12"/></name> <argument_list pos:line="5" pos:column="13">(<argument><expr><operator pos:line="5" pos:column="14">(<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="15">void<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></operator><operator pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></operator><operator pos:line="5" pos:column="22">)<pos:position pos:line="5" pos:column="23"/></operator> <operator pos:line="5" pos:column="24">&amp;<pos:position pos:line="5" pos:column="29"/></operator><name><operator pos:line="5" pos:column="25">(<pos:position pos:line="5" pos:column="26"/></operator><operator pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="27">p<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">)<pos:position pos:line="5" pos:column="29"/></operator><operator pos:line="5" pos:column="29">-&gt;<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="31">searchBuf<pos:position pos:line="5" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="42"/></expr_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name><operator pos:line="7" pos:column="7">(<pos:position pos:line="7" pos:column="8"/></operator><operator pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="9">p<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">)<pos:position pos:line="7" pos:column="11"/></operator><operator pos:line="7" pos:column="11">-&gt;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="13">dialog<pos:position pos:line="7" pos:column="19"/></name></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20"> 
  <block pos:line="8" pos:column="3">{
    <for pos:line="9" pos:column="5">for <control pos:line="9" pos:column="9">(<init><expr><name pos:line="9" pos:column="10">i<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator><literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></init> <condition><expr><name pos:line="9" pos:column="15">i<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">&lt;<pos:position pos:line="9" pos:column="21"/></operator> <name><operator pos:line="9" pos:column="19">(<pos:position pos:line="9" pos:column="20"/></operator><operator pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">p<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">)<pos:position pos:line="9" pos:column="23"/></operator><operator pos:line="9" pos:column="23">-&gt;<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="25">max<pos:position pos:line="9" pos:column="28"/></name></name></expr>;<pos:position pos:line="9" pos:column="29"/></condition> <incr><expr><name pos:line="9" pos:column="30">i<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">++<pos:position pos:line="9" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="34"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="7">safe_free<pos:position pos:line="10" pos:column="16"/></name> <argument_list pos:line="10" pos:column="17">(<argument><expr><operator pos:line="10" pos:column="18">(<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">void<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></operator><operator pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></operator><operator pos:line="10" pos:column="26">)<pos:position pos:line="10" pos:column="27"/></operator> <operator pos:line="10" pos:column="28">&amp;<pos:position pos:line="10" pos:column="33"/></operator><name><operator pos:line="10" pos:column="29">(<pos:position pos:line="10" pos:column="30"/></operator><operator pos:line="10" pos:column="30">*<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="31">p<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">)<pos:position pos:line="10" pos:column="33"/></operator><operator pos:line="10" pos:column="33">-&gt;<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="35">dialog<pos:position pos:line="10" pos:column="41"/></name></name><index pos:line="10" pos:column="41">[<expr><name pos:line="10" pos:column="42">i<pos:position pos:line="10" pos:column="43"/></name></expr>]<pos:position pos:line="10" pos:column="44"/></index></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt></block></for>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">safe_free<pos:position pos:line="12" pos:column="14"/></name> <argument_list pos:line="12" pos:column="15">(<argument><expr><operator pos:line="12" pos:column="16">(<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">void<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></operator><operator pos:line="12" pos:column="23">*<pos:position pos:line="12" pos:column="24"/></operator><operator pos:line="12" pos:column="24">)<pos:position pos:line="12" pos:column="25"/></operator> <name><operator pos:line="12" pos:column="26">(<pos:position pos:line="12" pos:column="27"/></operator><operator pos:line="12" pos:column="27">*<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="28">p<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">)<pos:position pos:line="12" pos:column="30"/></operator><operator pos:line="12" pos:column="30">-&gt;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="32">dialog<pos:position pos:line="12" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">safe_free<pos:position pos:line="15" pos:column="12"/></name> <argument_list pos:line="15" pos:column="13">(<argument><expr><operator pos:line="15" pos:column="14">(<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">void<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></operator><operator pos:line="15" pos:column="21">*<pos:position pos:line="15" pos:column="22"/></operator><operator pos:line="15" pos:column="22">)<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="24">p<pos:position pos:line="15" pos:column="25"/></name></expr></argument>)<pos:position pos:line="15" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

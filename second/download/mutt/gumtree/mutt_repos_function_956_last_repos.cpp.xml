<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_956_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rfc1524_mailcap_parse<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">BODY<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">a<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>,
				  <parameter><decl><type><name pos:line="2" pos:column="35">char<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">filename<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>,
				  <parameter><decl><type><name pos:line="3" pos:column="35">char<pos:position pos:line="3" pos:column="39"/></name> <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier></type><name pos:line="3" pos:column="41">type<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>, 
				  <parameter><decl><type><name pos:line="4" pos:column="35">rfc1524_entry<pos:position pos:line="4" pos:column="48"/></name> <modifier pos:line="4" pos:column="49">*<pos:position pos:line="4" pos:column="50"/></modifier></type><name pos:line="4" pos:column="50">entry<pos:position pos:line="4" pos:column="55"/></name></decl></parameter>,
				  <parameter><decl><type><name pos:line="5" pos:column="35">int<pos:position pos:line="5" pos:column="38"/></name></type> <name pos:line="5" pos:column="39">opt<pos:position pos:line="5" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="43"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">FILE<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">fp<pos:position pos:line="7" pos:column="11"/></name></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">buf<pos:position pos:line="8" pos:column="12"/></name> <init pos:line="8" pos:column="13">= <expr><name pos:line="8" pos:column="15">NULL<pos:position pos:line="8" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">buflen<pos:position pos:line="9" pos:column="16"/></name></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">ch<pos:position pos:line="10" pos:column="11"/></name></decl>;<pos:position pos:line="10" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">field<pos:position pos:line="11" pos:column="14"/></name></decl>;<pos:position pos:line="11" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">found<pos:position pos:line="12" pos:column="12"/></name> <init pos:line="12" pos:column="13">= <expr><name pos:line="12" pos:column="15">FALSE<pos:position pos:line="12" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type> <name pos:line="13" pos:column="7">copiousoutput<pos:position pos:line="13" pos:column="20"/></name></decl>;<pos:position pos:line="13" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">composecommand<pos:position pos:line="14" pos:column="21"/></name></decl>;<pos:position pos:line="14" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type> <name pos:line="15" pos:column="7">editcommand<pos:position pos:line="15" pos:column="18"/></name></decl>;<pos:position pos:line="15" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">int<pos:position pos:line="16" pos:column="6"/></name></type> <name pos:line="16" pos:column="7">printcommand<pos:position pos:line="16" pos:column="19"/></name></decl>;<pos:position pos:line="16" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">int<pos:position pos:line="17" pos:column="6"/></name></type> <name pos:line="17" pos:column="7">btlen<pos:position pos:line="17" pos:column="12"/></name></decl>;<pos:position pos:line="17" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">int<pos:position pos:line="18" pos:column="6"/></name></type> <name pos:line="18" pos:column="7">line<pos:position pos:line="18" pos:column="11"/></name> <init pos:line="18" pos:column="12">= <expr><literal type="number" pos:line="18" pos:column="14">0<pos:position pos:line="18" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="16"/></decl_stmt>

  <comment type="block" pos:line="20" pos:column="3">/* rfc1524 mailcap file is of the format:
   * base/type; command; extradefs
   * type can be * for matching all
   * base with no /type is an implicit wild
   * command contains a %s for the filename to pass, default to pipe on stdin
   * extradefs are of the form:
   *  def1="definition"; def2="define \;";
   * line wraps with a \ at the end of the line
   * # for comments
   */</comment>

  <comment type="block" pos:line="31" pos:column="3">/* find length of basetype */</comment>
  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><operator pos:line="32" pos:column="7">(<pos:position pos:line="32" pos:column="8"/></operator><name pos:line="32" pos:column="8">ch<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">=<pos:position pos:line="32" pos:column="12"/></operator> <call><name pos:line="32" pos:column="13">strchr<pos:position pos:line="32" pos:column="19"/></name> <argument_list pos:line="32" pos:column="20">(<argument><expr><name pos:line="32" pos:column="21">type<pos:position pos:line="32" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="32" pos:column="27">'/'<pos:position pos:line="32" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="31"/></argument_list></call><operator pos:line="32" pos:column="31">)<pos:position pos:line="32" pos:column="32"/></operator> <operator pos:line="32" pos:column="33">==<pos:position pos:line="32" pos:column="35"/></operator> <name pos:line="32" pos:column="36">NULL<pos:position pos:line="32" pos:column="40"/></name></expr>)<pos:position pos:line="32" pos:column="41"/></condition><then pos:line="32" pos:column="41">
    <block type="pseudo"><return pos:line="33" pos:column="5">return <expr><name pos:line="33" pos:column="12">FALSE<pos:position pos:line="33" pos:column="17"/></name></expr>;<pos:position pos:line="33" pos:column="18"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="34" pos:column="3">btlen<pos:position pos:line="34" pos:column="8"/></name> <operator pos:line="34" pos:column="9">=<pos:position pos:line="34" pos:column="10"/></operator> <name pos:line="34" pos:column="11">ch<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">-<pos:position pos:line="34" pos:column="15"/></operator> <name pos:line="34" pos:column="16">type<pos:position pos:line="34" pos:column="20"/></name></expr>;<pos:position pos:line="34" pos:column="21"/></expr_stmt>

  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><operator pos:line="36" pos:column="7">(<pos:position pos:line="36" pos:column="8"/></operator><name pos:line="36" pos:column="8">fp<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">=<pos:position pos:line="36" pos:column="12"/></operator> <call><name pos:line="36" pos:column="13">fopen<pos:position pos:line="36" pos:column="18"/></name> <argument_list pos:line="36" pos:column="19">(<argument><expr><name pos:line="36" pos:column="20">filename<pos:position pos:line="36" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="30">"r"<pos:position pos:line="36" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="34"/></argument_list></call><operator pos:line="36" pos:column="34">)<pos:position pos:line="36" pos:column="35"/></operator> <operator pos:line="36" pos:column="36">!=<pos:position pos:line="36" pos:column="38"/></operator> <name pos:line="36" pos:column="39">NULL<pos:position pos:line="36" pos:column="43"/></name></expr>)<pos:position pos:line="36" pos:column="44"/></condition><then pos:line="36" pos:column="44">
  <block pos:line="37" pos:column="3">{
    <while pos:line="38" pos:column="5">while <condition pos:line="38" pos:column="11">(<expr><operator pos:line="38" pos:column="12">!<pos:position pos:line="38" pos:column="13"/></operator><name pos:line="38" pos:column="13">found<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">&amp;&amp;<pos:position pos:line="38" pos:column="29"/></operator> <operator pos:line="38" pos:column="22">(<pos:position pos:line="38" pos:column="23"/></operator><name pos:line="38" pos:column="23">buf<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">=<pos:position pos:line="38" pos:column="28"/></operator> <call><name pos:line="38" pos:column="29">mutt_read_line<pos:position pos:line="38" pos:column="43"/></name> <argument_list pos:line="38" pos:column="44">(<argument><expr><name pos:line="38" pos:column="45">buf<pos:position pos:line="38" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="50">&amp;<pos:position pos:line="38" pos:column="55"/></operator><name pos:line="38" pos:column="51">buflen<pos:position pos:line="38" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="59">fp<pos:position pos:line="38" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="63">&amp;<pos:position pos:line="38" pos:column="68"/></operator><name pos:line="38" pos:column="64">line<pos:position pos:line="38" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="70">MUTT_CONT<pos:position pos:line="38" pos:column="79"/></name></expr></argument>)<pos:position pos:line="38" pos:column="80"/></argument_list></call><operator pos:line="38" pos:column="80">)<pos:position pos:line="38" pos:column="81"/></operator> <operator pos:line="38" pos:column="82">!=<pos:position pos:line="38" pos:column="84"/></operator> <name pos:line="38" pos:column="85">NULL<pos:position pos:line="38" pos:column="89"/></name></expr>)<pos:position pos:line="38" pos:column="90"/></condition>
    <block pos:line="39" pos:column="5">{
      <comment type="block" pos:line="40" pos:column="7">/* ignore comments */</comment>
      <if pos:line="41" pos:column="7">if <condition pos:line="41" pos:column="10">(<expr><operator pos:line="41" pos:column="11">*<pos:position pos:line="41" pos:column="12"/></operator><name pos:line="41" pos:column="12">buf<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">==<pos:position pos:line="41" pos:column="18"/></operator> <literal type="char" pos:line="41" pos:column="19">'#'<pos:position pos:line="41" pos:column="22"/></literal></expr>)<pos:position pos:line="41" pos:column="23"/></condition><then pos:line="41" pos:column="23">
	<block type="pseudo"><continue pos:line="42" pos:column="9">continue;<pos:position pos:line="42" pos:column="18"/></continue></block></then></if>
      <expr_stmt><expr><call><name pos:line="43" pos:column="7">dprint<pos:position pos:line="43" pos:column="13"/></name> <argument_list pos:line="43" pos:column="14">(<argument><expr><literal type="number" pos:line="43" pos:column="15">2<pos:position pos:line="43" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="43" pos:column="18">(<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="19">debugfile<pos:position pos:line="43" pos:column="28"/></name><operator pos:line="43" pos:column="28">,<pos:position pos:line="43" pos:column="29"/></operator> <literal type="string" pos:line="43" pos:column="30">"mailcap entry: %s\n"<pos:position pos:line="43" pos:column="51"/></literal><operator pos:line="43" pos:column="51">,<pos:position pos:line="43" pos:column="52"/></operator> <name pos:line="43" pos:column="53">buf<pos:position pos:line="43" pos:column="56"/></name><operator pos:line="43" pos:column="56">)<pos:position pos:line="43" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="43" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="59"/></expr_stmt>

      <comment type="block" pos:line="45" pos:column="7">/* check type */</comment>
      <expr_stmt><expr><name pos:line="46" pos:column="7">ch<pos:position pos:line="46" pos:column="9"/></name> <operator pos:line="46" pos:column="10">=<pos:position pos:line="46" pos:column="11"/></operator> <call><name pos:line="46" pos:column="12">get_field<pos:position pos:line="46" pos:column="21"/></name> <argument_list pos:line="46" pos:column="22">(<argument><expr><name pos:line="46" pos:column="23">buf<pos:position pos:line="46" pos:column="26"/></name></expr></argument>)<pos:position pos:line="46" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="28"/></expr_stmt>
      <if pos:line="47" pos:column="7">if <condition pos:line="47" pos:column="10">(<expr><call><name pos:line="47" pos:column="11">ascii_strcasecmp<pos:position pos:line="47" pos:column="27"/></name> <argument_list pos:line="47" pos:column="28">(<argument><expr><name pos:line="47" pos:column="29">buf<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="34">type<pos:position pos:line="47" pos:column="38"/></name></expr></argument>)<pos:position pos:line="47" pos:column="39"/></argument_list></call> <operator pos:line="47" pos:column="40">&amp;&amp;<pos:position pos:line="47" pos:column="50"/></operator>
	  <operator pos:line="48" pos:column="11">(<pos:position pos:line="48" pos:column="12"/></operator><call><name pos:line="48" pos:column="12">ascii_strncasecmp<pos:position pos:line="48" pos:column="29"/></name> <argument_list pos:line="48" pos:column="30">(<argument><expr><name pos:line="48" pos:column="31">buf<pos:position pos:line="48" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="36">type<pos:position pos:line="48" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="42">btlen<pos:position pos:line="48" pos:column="47"/></name></expr></argument>)<pos:position pos:line="48" pos:column="48"/></argument_list></call> <operator pos:line="48" pos:column="49">||<pos:position pos:line="48" pos:column="51"/></operator>
	   <operator pos:line="49" pos:column="12">(<pos:position pos:line="49" pos:column="13"/></operator><name><name pos:line="49" pos:column="13">buf<pos:position pos:line="49" pos:column="16"/></name><index pos:line="49" pos:column="16">[<expr><name pos:line="49" pos:column="17">btlen<pos:position pos:line="49" pos:column="22"/></name></expr>]<pos:position pos:line="49" pos:column="23"/></index></name> <operator pos:line="49" pos:column="24">!=<pos:position pos:line="49" pos:column="26"/></operator> <literal type="number" pos:line="49" pos:column="27">0<pos:position pos:line="49" pos:column="28"/></literal> <operator pos:line="49" pos:column="29">&amp;&amp;<pos:position pos:line="49" pos:column="39"/></operator>			<comment type="block" pos:line="49" pos:column="49">/* implicit wild */</comment>
	    <call><name pos:line="50" pos:column="13">mutt_strcmp<pos:position pos:line="50" pos:column="24"/></name> <argument_list pos:line="50" pos:column="25">(<argument><expr><name pos:line="50" pos:column="26">buf<pos:position pos:line="50" pos:column="29"/></name> <operator pos:line="50" pos:column="30">+<pos:position pos:line="50" pos:column="31"/></operator> <name pos:line="50" pos:column="32">btlen<pos:position pos:line="50" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="39">"/*"<pos:position pos:line="50" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="44"/></argument_list></call><operator pos:line="50" pos:column="44">)<pos:position pos:line="50" pos:column="45"/></operator><operator pos:line="50" pos:column="45">)<pos:position pos:line="50" pos:column="46"/></operator></expr>)<pos:position pos:line="50" pos:column="47"/></condition><then pos:line="50" pos:column="47">	<comment type="block" pos:line="50" pos:column="49">/* wildsubtype */</comment>
	<block type="pseudo"><continue pos:line="51" pos:column="9">continue;<pos:position pos:line="51" pos:column="18"/></continue></block></then></if>

      <comment type="block" pos:line="53" pos:column="7">/* next field is the viewcommand */</comment>
      <expr_stmt><expr><name pos:line="54" pos:column="7">field<pos:position pos:line="54" pos:column="12"/></name> <operator pos:line="54" pos:column="13">=<pos:position pos:line="54" pos:column="14"/></operator> <name pos:line="54" pos:column="15">ch<pos:position pos:line="54" pos:column="17"/></name></expr>;<pos:position pos:line="54" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name pos:line="55" pos:column="7">ch<pos:position pos:line="55" pos:column="9"/></name> <operator pos:line="55" pos:column="10">=<pos:position pos:line="55" pos:column="11"/></operator> <call><name pos:line="55" pos:column="12">get_field<pos:position pos:line="55" pos:column="21"/></name> <argument_list pos:line="55" pos:column="22">(<argument><expr><name pos:line="55" pos:column="23">ch<pos:position pos:line="55" pos:column="25"/></name></expr></argument>)<pos:position pos:line="55" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="27"/></expr_stmt>
      <if pos:line="56" pos:column="7">if <condition pos:line="56" pos:column="10">(<expr><name pos:line="56" pos:column="11">entry<pos:position pos:line="56" pos:column="16"/></name></expr>)<pos:position pos:line="56" pos:column="17"/></condition><then pos:line="56" pos:column="17">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="57" pos:column="9">entry<pos:position pos:line="57" pos:column="14"/></name><operator pos:line="57" pos:column="14">-&gt;<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="16">command<pos:position pos:line="57" pos:column="23"/></name></name> <operator pos:line="57" pos:column="24">=<pos:position pos:line="57" pos:column="25"/></operator> <call><name pos:line="57" pos:column="26">safe_strdup<pos:position pos:line="57" pos:column="37"/></name> <argument_list pos:line="57" pos:column="38">(<argument><expr><name pos:line="57" pos:column="39">field<pos:position pos:line="57" pos:column="44"/></name></expr></argument>)<pos:position pos:line="57" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="46"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="59" pos:column="7">/* parse the optional fields */</comment>
      <expr_stmt><expr><name pos:line="60" pos:column="7">found<pos:position pos:line="60" pos:column="12"/></name> <operator pos:line="60" pos:column="13">=<pos:position pos:line="60" pos:column="14"/></operator> <name pos:line="60" pos:column="15">TRUE<pos:position pos:line="60" pos:column="19"/></name></expr>;<pos:position pos:line="60" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name pos:line="61" pos:column="7">copiousoutput<pos:position pos:line="61" pos:column="20"/></name> <operator pos:line="61" pos:column="21">=<pos:position pos:line="61" pos:column="22"/></operator> <name pos:line="61" pos:column="23">FALSE<pos:position pos:line="61" pos:column="28"/></name></expr>;<pos:position pos:line="61" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name pos:line="62" pos:column="7">composecommand<pos:position pos:line="62" pos:column="21"/></name> <operator pos:line="62" pos:column="22">=<pos:position pos:line="62" pos:column="23"/></operator> <name pos:line="62" pos:column="24">FALSE<pos:position pos:line="62" pos:column="29"/></name></expr>;<pos:position pos:line="62" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name pos:line="63" pos:column="7">editcommand<pos:position pos:line="63" pos:column="18"/></name> <operator pos:line="63" pos:column="19">=<pos:position pos:line="63" pos:column="20"/></operator> <name pos:line="63" pos:column="21">FALSE<pos:position pos:line="63" pos:column="26"/></name></expr>;<pos:position pos:line="63" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name pos:line="64" pos:column="7">printcommand<pos:position pos:line="64" pos:column="19"/></name> <operator pos:line="64" pos:column="20">=<pos:position pos:line="64" pos:column="21"/></operator> <name pos:line="64" pos:column="22">FALSE<pos:position pos:line="64" pos:column="27"/></name></expr>;<pos:position pos:line="64" pos:column="28"/></expr_stmt>

      <while pos:line="66" pos:column="7">while <condition pos:line="66" pos:column="13">(<expr><name pos:line="66" pos:column="14">ch<pos:position pos:line="66" pos:column="16"/></name></expr>)<pos:position pos:line="66" pos:column="17"/></condition>
      <block pos:line="67" pos:column="7">{
	<expr_stmt><expr><name pos:line="68" pos:column="9">field<pos:position pos:line="68" pos:column="14"/></name> <operator pos:line="68" pos:column="15">=<pos:position pos:line="68" pos:column="16"/></operator> <name pos:line="68" pos:column="17">ch<pos:position pos:line="68" pos:column="19"/></name></expr>;<pos:position pos:line="68" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><name pos:line="69" pos:column="9">ch<pos:position pos:line="69" pos:column="11"/></name> <operator pos:line="69" pos:column="12">=<pos:position pos:line="69" pos:column="13"/></operator> <call><name pos:line="69" pos:column="14">get_field<pos:position pos:line="69" pos:column="23"/></name> <argument_list pos:line="69" pos:column="24">(<argument><expr><name pos:line="69" pos:column="25">ch<pos:position pos:line="69" pos:column="27"/></name></expr></argument>)<pos:position pos:line="69" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="70" pos:column="9">dprint<pos:position pos:line="70" pos:column="15"/></name> <argument_list pos:line="70" pos:column="16">(<argument><expr><literal type="number" pos:line="70" pos:column="17">2<pos:position pos:line="70" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="70" pos:column="20">(<pos:position pos:line="70" pos:column="21"/></operator><name pos:line="70" pos:column="21">debugfile<pos:position pos:line="70" pos:column="30"/></name><operator pos:line="70" pos:column="30">,<pos:position pos:line="70" pos:column="31"/></operator> <literal type="string" pos:line="70" pos:column="32">"field: %s\n"<pos:position pos:line="70" pos:column="45"/></literal><operator pos:line="70" pos:column="45">,<pos:position pos:line="70" pos:column="46"/></operator> <name pos:line="70" pos:column="47">field<pos:position pos:line="70" pos:column="52"/></name><operator pos:line="70" pos:column="52">)<pos:position pos:line="70" pos:column="53"/></operator></expr></argument>)<pos:position pos:line="70" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="55"/></expr_stmt>

	<if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><operator pos:line="72" pos:column="13">!<pos:position pos:line="72" pos:column="14"/></operator><call><name pos:line="72" pos:column="14">ascii_strcasecmp<pos:position pos:line="72" pos:column="30"/></name> <argument_list pos:line="72" pos:column="31">(<argument><expr><name pos:line="72" pos:column="32">field<pos:position pos:line="72" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="39">"needsterminal"<pos:position pos:line="72" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="56"/></condition><then pos:line="72" pos:column="56">
	<block pos:line="73" pos:column="9">{
	  <if pos:line="74" pos:column="11">if <condition pos:line="74" pos:column="14">(<expr><name pos:line="74" pos:column="15">entry<pos:position pos:line="74" pos:column="20"/></name></expr>)<pos:position pos:line="74" pos:column="21"/></condition><then pos:line="74" pos:column="21">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="75" pos:column="13">entry<pos:position pos:line="75" pos:column="18"/></name><operator pos:line="75" pos:column="18">-&gt;<pos:position pos:line="75" pos:column="23"/></operator><name pos:line="75" pos:column="20">needsterminal<pos:position pos:line="75" pos:column="33"/></name></name> <operator pos:line="75" pos:column="34">=<pos:position pos:line="75" pos:column="35"/></operator> <name pos:line="75" pos:column="36">TRUE<pos:position pos:line="75" pos:column="40"/></name></expr>;<pos:position pos:line="75" pos:column="41"/></expr_stmt></block></then></if>
	}<pos:position pos:line="76" pos:column="10"/></block></then>
	<elseif pos:line="77" pos:column="9">else <if pos:line="77" pos:column="14">if <condition pos:line="77" pos:column="17">(<expr><operator pos:line="77" pos:column="18">!<pos:position pos:line="77" pos:column="19"/></operator><call><name pos:line="77" pos:column="19">ascii_strcasecmp<pos:position pos:line="77" pos:column="35"/></name> <argument_list pos:line="77" pos:column="36">(<argument><expr><name pos:line="77" pos:column="37">field<pos:position pos:line="77" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="44">"copiousoutput"<pos:position pos:line="77" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="61"/></condition><then pos:line="77" pos:column="61">
	<block pos:line="78" pos:column="9">{
	  <expr_stmt><expr><name pos:line="79" pos:column="11">copiousoutput<pos:position pos:line="79" pos:column="24"/></name> <operator pos:line="79" pos:column="25">=<pos:position pos:line="79" pos:column="26"/></operator> <name pos:line="79" pos:column="27">TRUE<pos:position pos:line="79" pos:column="31"/></name></expr>;<pos:position pos:line="79" pos:column="32"/></expr_stmt>
	  <if pos:line="80" pos:column="11">if <condition pos:line="80" pos:column="14">(<expr><name pos:line="80" pos:column="15">entry<pos:position pos:line="80" pos:column="20"/></name></expr>)<pos:position pos:line="80" pos:column="21"/></condition><then pos:line="80" pos:column="21">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="81" pos:column="13">entry<pos:position pos:line="81" pos:column="18"/></name><operator pos:line="81" pos:column="18">-&gt;<pos:position pos:line="81" pos:column="23"/></operator><name pos:line="81" pos:column="20">copiousoutput<pos:position pos:line="81" pos:column="33"/></name></name> <operator pos:line="81" pos:column="34">=<pos:position pos:line="81" pos:column="35"/></operator> <name pos:line="81" pos:column="36">TRUE<pos:position pos:line="81" pos:column="40"/></name></expr>;<pos:position pos:line="81" pos:column="41"/></expr_stmt></block></then></if>
	}<pos:position pos:line="82" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="83" pos:column="9">else <if pos:line="83" pos:column="14">if <condition pos:line="83" pos:column="17">(<expr><operator pos:line="83" pos:column="18">!<pos:position pos:line="83" pos:column="19"/></operator><call><name pos:line="83" pos:column="19">ascii_strncasecmp<pos:position pos:line="83" pos:column="36"/></name> <argument_list pos:line="83" pos:column="37">(<argument><expr><name pos:line="83" pos:column="38">field<pos:position pos:line="83" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="45">"composetyped"<pos:position pos:line="83" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="61">12<pos:position pos:line="83" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="65"/></condition><then pos:line="83" pos:column="65">
	<block pos:line="84" pos:column="9">{
	  <comment type="block" pos:line="85" pos:column="11">/* this compare most occur before compose to match correctly */</comment>
	  <if pos:line="86" pos:column="11">if <condition pos:line="86" pos:column="14">(<expr><call><name pos:line="86" pos:column="15">get_field_text<pos:position pos:line="86" pos:column="29"/></name> <argument_list pos:line="86" pos:column="30">(<argument><expr><name pos:line="86" pos:column="31">field<pos:position pos:line="86" pos:column="36"/></name> <operator pos:line="86" pos:column="37">+<pos:position pos:line="86" pos:column="38"/></operator> <literal type="number" pos:line="86" pos:column="39">12<pos:position pos:line="86" pos:column="41"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="86" pos:column="43">entry<pos:position pos:line="86" pos:column="48"/></name></expr> ?<pos:position pos:line="86" pos:column="50"/></condition><then pos:line="86" pos:column="50"> <expr><operator pos:line="86" pos:column="51">&amp;<pos:position pos:line="86" pos:column="56"/></operator><name><name pos:line="86" pos:column="52">entry<pos:position pos:line="86" pos:column="57"/></name><operator pos:line="86" pos:column="57">-&gt;<pos:position pos:line="86" pos:column="62"/></operator><name pos:line="86" pos:column="59">composetypecommand<pos:position pos:line="86" pos:column="77"/></name></name></expr> <pos:position pos:line="86" pos:column="78"/></then><else pos:line="86" pos:column="78">: <expr><name pos:line="86" pos:column="80">NULL<pos:position pos:line="86" pos:column="84"/></name></expr></else></ternary></expr></argument>,
			      <argument><expr><name pos:line="87" pos:column="31">type<pos:position pos:line="87" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="37">filename<pos:position pos:line="87" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="47">line<pos:position pos:line="87" pos:column="51"/></name></expr></argument>)<pos:position pos:line="87" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="53"/></condition><then pos:line="87" pos:column="53">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="88" pos:column="13">composecommand<pos:position pos:line="88" pos:column="27"/></name> <operator pos:line="88" pos:column="28">=<pos:position pos:line="88" pos:column="29"/></operator> <name pos:line="88" pos:column="30">TRUE<pos:position pos:line="88" pos:column="34"/></name></expr>;<pos:position pos:line="88" pos:column="35"/></expr_stmt></block></then></if>
	}<pos:position pos:line="89" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="90" pos:column="9">else <if pos:line="90" pos:column="14">if <condition pos:line="90" pos:column="17">(<expr><operator pos:line="90" pos:column="18">!<pos:position pos:line="90" pos:column="19"/></operator><call><name pos:line="90" pos:column="19">ascii_strncasecmp<pos:position pos:line="90" pos:column="36"/></name> <argument_list pos:line="90" pos:column="37">(<argument><expr><name pos:line="90" pos:column="38">field<pos:position pos:line="90" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="45">"compose"<pos:position pos:line="90" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="90" pos:column="56">7<pos:position pos:line="90" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="59"/></condition><then pos:line="90" pos:column="59">
	<block pos:line="91" pos:column="9">{
	  <if pos:line="92" pos:column="11">if <condition pos:line="92" pos:column="14">(<expr><call><name pos:line="92" pos:column="15">get_field_text<pos:position pos:line="92" pos:column="29"/></name> <argument_list pos:line="92" pos:column="30">(<argument><expr><name pos:line="92" pos:column="31">field<pos:position pos:line="92" pos:column="36"/></name> <operator pos:line="92" pos:column="37">+<pos:position pos:line="92" pos:column="38"/></operator> <literal type="number" pos:line="92" pos:column="39">7<pos:position pos:line="92" pos:column="40"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="92" pos:column="42">entry<pos:position pos:line="92" pos:column="47"/></name></expr> ?<pos:position pos:line="92" pos:column="49"/></condition><then pos:line="92" pos:column="49"> <expr><operator pos:line="92" pos:column="50">&amp;<pos:position pos:line="92" pos:column="55"/></operator><name><name pos:line="92" pos:column="51">entry<pos:position pos:line="92" pos:column="56"/></name><operator pos:line="92" pos:column="56">-&gt;<pos:position pos:line="92" pos:column="61"/></operator><name pos:line="92" pos:column="58">composecommand<pos:position pos:line="92" pos:column="72"/></name></name></expr> <pos:position pos:line="92" pos:column="73"/></then><else pos:line="92" pos:column="73">: <expr><name pos:line="92" pos:column="75">NULL<pos:position pos:line="92" pos:column="79"/></name></expr></else></ternary></expr></argument>,
			      <argument><expr><name pos:line="93" pos:column="31">type<pos:position pos:line="93" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="37">filename<pos:position pos:line="93" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="47">line<pos:position pos:line="93" pos:column="51"/></name></expr></argument>)<pos:position pos:line="93" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="93" pos:column="53"/></condition><then pos:line="93" pos:column="53">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="94" pos:column="13">composecommand<pos:position pos:line="94" pos:column="27"/></name> <operator pos:line="94" pos:column="28">=<pos:position pos:line="94" pos:column="29"/></operator> <name pos:line="94" pos:column="30">TRUE<pos:position pos:line="94" pos:column="34"/></name></expr>;<pos:position pos:line="94" pos:column="35"/></expr_stmt></block></then></if>
	}<pos:position pos:line="95" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="96" pos:column="9">else <if pos:line="96" pos:column="14">if <condition pos:line="96" pos:column="17">(<expr><operator pos:line="96" pos:column="18">!<pos:position pos:line="96" pos:column="19"/></operator><call><name pos:line="96" pos:column="19">ascii_strncasecmp<pos:position pos:line="96" pos:column="36"/></name> <argument_list pos:line="96" pos:column="37">(<argument><expr><name pos:line="96" pos:column="38">field<pos:position pos:line="96" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="45">"print"<pos:position pos:line="96" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="96" pos:column="54">5<pos:position pos:line="96" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="96" pos:column="57"/></condition><then pos:line="96" pos:column="57">
	<block pos:line="97" pos:column="9">{
	  <if pos:line="98" pos:column="11">if <condition pos:line="98" pos:column="14">(<expr><call><name pos:line="98" pos:column="15">get_field_text<pos:position pos:line="98" pos:column="29"/></name> <argument_list pos:line="98" pos:column="30">(<argument><expr><name pos:line="98" pos:column="31">field<pos:position pos:line="98" pos:column="36"/></name> <operator pos:line="98" pos:column="37">+<pos:position pos:line="98" pos:column="38"/></operator> <literal type="number" pos:line="98" pos:column="39">5<pos:position pos:line="98" pos:column="40"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="98" pos:column="42">entry<pos:position pos:line="98" pos:column="47"/></name></expr> ?<pos:position pos:line="98" pos:column="49"/></condition><then pos:line="98" pos:column="49"> <expr><operator pos:line="98" pos:column="50">&amp;<pos:position pos:line="98" pos:column="55"/></operator><name><name pos:line="98" pos:column="51">entry<pos:position pos:line="98" pos:column="56"/></name><operator pos:line="98" pos:column="56">-&gt;<pos:position pos:line="98" pos:column="61"/></operator><name pos:line="98" pos:column="58">printcommand<pos:position pos:line="98" pos:column="70"/></name></name></expr> <pos:position pos:line="98" pos:column="71"/></then><else pos:line="98" pos:column="71">: <expr><name pos:line="98" pos:column="73">NULL<pos:position pos:line="98" pos:column="77"/></name></expr></else></ternary></expr></argument>,
			      <argument><expr><name pos:line="99" pos:column="31">type<pos:position pos:line="99" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="37">filename<pos:position pos:line="99" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="47">line<pos:position pos:line="99" pos:column="51"/></name></expr></argument>)<pos:position pos:line="99" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="99" pos:column="53"/></condition><then pos:line="99" pos:column="53">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="100" pos:column="13">printcommand<pos:position pos:line="100" pos:column="25"/></name> <operator pos:line="100" pos:column="26">=<pos:position pos:line="100" pos:column="27"/></operator> <name pos:line="100" pos:column="28">TRUE<pos:position pos:line="100" pos:column="32"/></name></expr>;<pos:position pos:line="100" pos:column="33"/></expr_stmt></block></then></if>
	}<pos:position pos:line="101" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="102" pos:column="9">else <if pos:line="102" pos:column="14">if <condition pos:line="102" pos:column="17">(<expr><operator pos:line="102" pos:column="18">!<pos:position pos:line="102" pos:column="19"/></operator><call><name pos:line="102" pos:column="19">ascii_strncasecmp<pos:position pos:line="102" pos:column="36"/></name> <argument_list pos:line="102" pos:column="37">(<argument><expr><name pos:line="102" pos:column="38">field<pos:position pos:line="102" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="45">"edit"<pos:position pos:line="102" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="102" pos:column="53">4<pos:position pos:line="102" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="102" pos:column="56"/></condition><then pos:line="102" pos:column="56">
	<block pos:line="103" pos:column="9">{
	  <if pos:line="104" pos:column="11">if <condition pos:line="104" pos:column="14">(<expr><call><name pos:line="104" pos:column="15">get_field_text<pos:position pos:line="104" pos:column="29"/></name> <argument_list pos:line="104" pos:column="30">(<argument><expr><name pos:line="104" pos:column="31">field<pos:position pos:line="104" pos:column="36"/></name> <operator pos:line="104" pos:column="37">+<pos:position pos:line="104" pos:column="38"/></operator> <literal type="number" pos:line="104" pos:column="39">4<pos:position pos:line="104" pos:column="40"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="104" pos:column="42">entry<pos:position pos:line="104" pos:column="47"/></name></expr> ?<pos:position pos:line="104" pos:column="49"/></condition><then pos:line="104" pos:column="49"> <expr><operator pos:line="104" pos:column="50">&amp;<pos:position pos:line="104" pos:column="55"/></operator><name><name pos:line="104" pos:column="51">entry<pos:position pos:line="104" pos:column="56"/></name><operator pos:line="104" pos:column="56">-&gt;<pos:position pos:line="104" pos:column="61"/></operator><name pos:line="104" pos:column="58">editcommand<pos:position pos:line="104" pos:column="69"/></name></name></expr> <pos:position pos:line="104" pos:column="70"/></then><else pos:line="104" pos:column="70">: <expr><name pos:line="104" pos:column="72">NULL<pos:position pos:line="104" pos:column="76"/></name></expr></else></ternary></expr></argument>,
			      <argument><expr><name pos:line="105" pos:column="31">type<pos:position pos:line="105" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="37">filename<pos:position pos:line="105" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="47">line<pos:position pos:line="105" pos:column="51"/></name></expr></argument>)<pos:position pos:line="105" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="105" pos:column="53"/></condition><then pos:line="105" pos:column="53">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="106" pos:column="13">editcommand<pos:position pos:line="106" pos:column="24"/></name> <operator pos:line="106" pos:column="25">=<pos:position pos:line="106" pos:column="26"/></operator> <name pos:line="106" pos:column="27">TRUE<pos:position pos:line="106" pos:column="31"/></name></expr>;<pos:position pos:line="106" pos:column="32"/></expr_stmt></block></then></if>
	}<pos:position pos:line="107" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="108" pos:column="9">else <if pos:line="108" pos:column="14">if <condition pos:line="108" pos:column="17">(<expr><operator pos:line="108" pos:column="18">!<pos:position pos:line="108" pos:column="19"/></operator><call><name pos:line="108" pos:column="19">ascii_strncasecmp<pos:position pos:line="108" pos:column="36"/></name> <argument_list pos:line="108" pos:column="37">(<argument><expr><name pos:line="108" pos:column="38">field<pos:position pos:line="108" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="45">"nametemplate"<pos:position pos:line="108" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="108" pos:column="61">12<pos:position pos:line="108" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="108" pos:column="65"/></condition><then pos:line="108" pos:column="65">
	<block pos:line="109" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="110" pos:column="11">get_field_text<pos:position pos:line="110" pos:column="25"/></name> <argument_list pos:line="110" pos:column="26">(<argument><expr><name pos:line="110" pos:column="27">field<pos:position pos:line="110" pos:column="32"/></name> <operator pos:line="110" pos:column="33">+<pos:position pos:line="110" pos:column="34"/></operator> <literal type="number" pos:line="110" pos:column="35">12<pos:position pos:line="110" pos:column="37"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="110" pos:column="39">entry<pos:position pos:line="110" pos:column="44"/></name></expr> ?<pos:position pos:line="110" pos:column="46"/></condition><then pos:line="110" pos:column="46"> <expr><operator pos:line="110" pos:column="47">&amp;<pos:position pos:line="110" pos:column="52"/></operator><name><name pos:line="110" pos:column="48">entry<pos:position pos:line="110" pos:column="53"/></name><operator pos:line="110" pos:column="53">-&gt;<pos:position pos:line="110" pos:column="58"/></operator><name pos:line="110" pos:column="55">nametemplate<pos:position pos:line="110" pos:column="67"/></name></name></expr> <pos:position pos:line="110" pos:column="68"/></then><else pos:line="110" pos:column="68">: <expr><name pos:line="110" pos:column="70">NULL<pos:position pos:line="110" pos:column="74"/></name></expr></else></ternary></expr></argument>,
			  <argument><expr><name pos:line="111" pos:column="27">type<pos:position pos:line="111" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="33">filename<pos:position pos:line="111" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="43">line<pos:position pos:line="111" pos:column="47"/></name></expr></argument>)<pos:position pos:line="111" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="112" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="113" pos:column="9">else <if pos:line="113" pos:column="14">if <condition pos:line="113" pos:column="17">(<expr><operator pos:line="113" pos:column="18">!<pos:position pos:line="113" pos:column="19"/></operator><call><name pos:line="113" pos:column="19">ascii_strncasecmp<pos:position pos:line="113" pos:column="36"/></name> <argument_list pos:line="113" pos:column="37">(<argument><expr><name pos:line="113" pos:column="38">field<pos:position pos:line="113" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="113" pos:column="45">"x-convert"<pos:position pos:line="113" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="113" pos:column="58">9<pos:position pos:line="113" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="113" pos:column="61"/></condition><then pos:line="113" pos:column="61">
	<block pos:line="114" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="115" pos:column="11">get_field_text<pos:position pos:line="115" pos:column="25"/></name> <argument_list pos:line="115" pos:column="26">(<argument><expr><name pos:line="115" pos:column="27">field<pos:position pos:line="115" pos:column="32"/></name> <operator pos:line="115" pos:column="33">+<pos:position pos:line="115" pos:column="34"/></operator> <literal type="number" pos:line="115" pos:column="35">9<pos:position pos:line="115" pos:column="36"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="115" pos:column="38">entry<pos:position pos:line="115" pos:column="43"/></name></expr> ?<pos:position pos:line="115" pos:column="45"/></condition><then pos:line="115" pos:column="45"> <expr><operator pos:line="115" pos:column="46">&amp;<pos:position pos:line="115" pos:column="51"/></operator><name><name pos:line="115" pos:column="47">entry<pos:position pos:line="115" pos:column="52"/></name><operator pos:line="115" pos:column="52">-&gt;<pos:position pos:line="115" pos:column="57"/></operator><name pos:line="115" pos:column="54">convert<pos:position pos:line="115" pos:column="61"/></name></name></expr> <pos:position pos:line="115" pos:column="62"/></then><else pos:line="115" pos:column="62">: <expr><name pos:line="115" pos:column="64">NULL<pos:position pos:line="115" pos:column="68"/></name></expr></else></ternary></expr></argument>,
			  <argument><expr><name pos:line="116" pos:column="27">type<pos:position pos:line="116" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="33">filename<pos:position pos:line="116" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="43">line<pos:position pos:line="116" pos:column="47"/></name></expr></argument>)<pos:position pos:line="116" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="117" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="118" pos:column="9">else <if pos:line="118" pos:column="14">if <condition pos:line="118" pos:column="17">(<expr><operator pos:line="118" pos:column="18">!<pos:position pos:line="118" pos:column="19"/></operator><call><name pos:line="118" pos:column="19">ascii_strncasecmp<pos:position pos:line="118" pos:column="36"/></name> <argument_list pos:line="118" pos:column="37">(<argument><expr><name pos:line="118" pos:column="38">field<pos:position pos:line="118" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="45">"test"<pos:position pos:line="118" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="118" pos:column="53">4<pos:position pos:line="118" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="118" pos:column="56"/></condition><then pos:line="118" pos:column="56">
	<block pos:line="119" pos:column="9">{
	  <comment type="block" pos:line="120" pos:column="11">/* 
	   * This routine executes the given test command to determine
	   * if this is the right entry.
	   */</comment>
	  <decl_stmt><decl><type><name pos:line="124" pos:column="11">char<pos:position pos:line="124" pos:column="15"/></name> <modifier pos:line="124" pos:column="16">*<pos:position pos:line="124" pos:column="17"/></modifier></type><name pos:line="124" pos:column="17">test_command<pos:position pos:line="124" pos:column="29"/></name> <init pos:line="124" pos:column="30">= <expr><name pos:line="124" pos:column="32">NULL<pos:position pos:line="124" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="124" pos:column="37"/></decl_stmt>
	  <decl_stmt><decl><type><name pos:line="125" pos:column="11">size_t<pos:position pos:line="125" pos:column="17"/></name></type> <name pos:line="125" pos:column="18">len<pos:position pos:line="125" pos:column="21"/></name></decl>;<pos:position pos:line="125" pos:column="22"/></decl_stmt>

	  <if pos:line="127" pos:column="11">if <condition pos:line="127" pos:column="14">(<expr><call><name pos:line="127" pos:column="15">get_field_text<pos:position pos:line="127" pos:column="29"/></name> <argument_list pos:line="127" pos:column="30">(<argument><expr><name pos:line="127" pos:column="31">field<pos:position pos:line="127" pos:column="36"/></name> <operator pos:line="127" pos:column="37">+<pos:position pos:line="127" pos:column="38"/></operator> <literal type="number" pos:line="127" pos:column="39">4<pos:position pos:line="127" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="127" pos:column="42">&amp;<pos:position pos:line="127" pos:column="47"/></operator><name pos:line="127" pos:column="43">test_command<pos:position pos:line="127" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="57">type<pos:position pos:line="127" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="63">filename<pos:position pos:line="127" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="73">line<pos:position pos:line="127" pos:column="77"/></name></expr></argument>)<pos:position pos:line="127" pos:column="78"/></argument_list></call>
	      <operator pos:line="128" pos:column="15">&amp;&amp;<pos:position pos:line="128" pos:column="25"/></operator> <name pos:line="128" pos:column="18">test_command<pos:position pos:line="128" pos:column="30"/></name></expr>)<pos:position pos:line="128" pos:column="31"/></condition><then pos:line="128" pos:column="31">
	  <block pos:line="129" pos:column="11">{
	    <expr_stmt><expr><name pos:line="130" pos:column="13">len<pos:position pos:line="130" pos:column="16"/></name> <operator pos:line="130" pos:column="17">=<pos:position pos:line="130" pos:column="18"/></operator> <call><name pos:line="130" pos:column="19">mutt_strlen<pos:position pos:line="130" pos:column="30"/></name> <argument_list pos:line="130" pos:column="31">(<argument><expr><name pos:line="130" pos:column="32">test_command<pos:position pos:line="130" pos:column="44"/></name></expr></argument>)<pos:position pos:line="130" pos:column="45"/></argument_list></call> <operator pos:line="130" pos:column="46">+<pos:position pos:line="130" pos:column="47"/></operator> <name pos:line="130" pos:column="48">STRING<pos:position pos:line="130" pos:column="54"/></name></expr>;<pos:position pos:line="130" pos:column="55"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="131" pos:column="13">safe_realloc<pos:position pos:line="131" pos:column="25"/></name> <argument_list pos:line="131" pos:column="26">(<argument><expr><operator pos:line="131" pos:column="27">&amp;<pos:position pos:line="131" pos:column="32"/></operator><name pos:line="131" pos:column="28">test_command<pos:position pos:line="131" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="42">len<pos:position pos:line="131" pos:column="45"/></name></expr></argument>)<pos:position pos:line="131" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="47"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="132" pos:column="13">rfc1524_expand_command<pos:position pos:line="132" pos:column="35"/></name> <argument_list pos:line="132" pos:column="36">(<argument><expr><name pos:line="132" pos:column="37">a<pos:position pos:line="132" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="132" pos:column="40">a<pos:position pos:line="132" pos:column="41"/></name><operator pos:line="132" pos:column="41">-&gt;<pos:position pos:line="132" pos:column="46"/></operator><name pos:line="132" pos:column="43">filename<pos:position pos:line="132" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="53">type<pos:position pos:line="132" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="59">test_command<pos:position pos:line="132" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="73">len<pos:position pos:line="132" pos:column="76"/></name></expr></argument>)<pos:position pos:line="132" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="78"/></expr_stmt>
	    <if pos:line="133" pos:column="13">if <condition pos:line="133" pos:column="16">(<expr><call><name pos:line="133" pos:column="17">mutt_system<pos:position pos:line="133" pos:column="28"/></name> <argument_list pos:line="133" pos:column="29">(<argument><expr><name pos:line="133" pos:column="30">test_command<pos:position pos:line="133" pos:column="42"/></name></expr></argument>)<pos:position pos:line="133" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="133" pos:column="44"/></condition><then pos:line="133" pos:column="44">
	    <block pos:line="134" pos:column="13">{
	      <comment type="block" pos:line="135" pos:column="15">/* a non-zero exit code means test failed */</comment>
	      <expr_stmt><expr><name pos:line="136" pos:column="15">found<pos:position pos:line="136" pos:column="20"/></name> <operator pos:line="136" pos:column="21">=<pos:position pos:line="136" pos:column="22"/></operator> <name pos:line="136" pos:column="23">FALSE<pos:position pos:line="136" pos:column="28"/></name></expr>;<pos:position pos:line="136" pos:column="29"/></expr_stmt>
	    }<pos:position pos:line="137" pos:column="14"/></block></then></if>
	    <expr_stmt><expr><call><name pos:line="138" pos:column="13">FREE<pos:position pos:line="138" pos:column="17"/></name> <argument_list pos:line="138" pos:column="18">(<argument><expr><operator pos:line="138" pos:column="19">&amp;<pos:position pos:line="138" pos:column="24"/></operator><name pos:line="138" pos:column="20">test_command<pos:position pos:line="138" pos:column="32"/></name></expr></argument>)<pos:position pos:line="138" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="34"/></expr_stmt>
	  }<pos:position pos:line="139" pos:column="12"/></block></then></if>
	}<pos:position pos:line="140" pos:column="10"/></block></then></if></elseif></if>
      }<pos:position pos:line="141" pos:column="8"/></block></while> <comment type="block" pos:line="141" pos:column="9">/* while (ch) */</comment>

      <if pos:line="143" pos:column="7">if <condition pos:line="143" pos:column="10">(<expr><name pos:line="143" pos:column="11">opt<pos:position pos:line="143" pos:column="14"/></name> <operator pos:line="143" pos:column="15">==<pos:position pos:line="143" pos:column="17"/></operator> <name pos:line="143" pos:column="18">MUTT_AUTOVIEW<pos:position pos:line="143" pos:column="31"/></name></expr>)<pos:position pos:line="143" pos:column="32"/></condition><then pos:line="143" pos:column="32">
      <block pos:line="144" pos:column="7">{
	<if pos:line="145" pos:column="9">if <condition pos:line="145" pos:column="12">(<expr><operator pos:line="145" pos:column="13">!<pos:position pos:line="145" pos:column="14"/></operator><name pos:line="145" pos:column="14">copiousoutput<pos:position pos:line="145" pos:column="27"/></name></expr>)<pos:position pos:line="145" pos:column="28"/></condition><then pos:line="145" pos:column="28">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="146" pos:column="11">found<pos:position pos:line="146" pos:column="16"/></name> <operator pos:line="146" pos:column="17">=<pos:position pos:line="146" pos:column="18"/></operator> <name pos:line="146" pos:column="19">FALSE<pos:position pos:line="146" pos:column="24"/></name></expr>;<pos:position pos:line="146" pos:column="25"/></expr_stmt></block></then></if>
      }<pos:position pos:line="147" pos:column="8"/></block></then>
      <elseif pos:line="148" pos:column="7">else <if pos:line="148" pos:column="12">if <condition pos:line="148" pos:column="15">(<expr><name pos:line="148" pos:column="16">opt<pos:position pos:line="148" pos:column="19"/></name> <operator pos:line="148" pos:column="20">==<pos:position pos:line="148" pos:column="22"/></operator> <name pos:line="148" pos:column="23">MUTT_COMPOSE<pos:position pos:line="148" pos:column="35"/></name></expr>)<pos:position pos:line="148" pos:column="36"/></condition><then pos:line="148" pos:column="36">
      <block pos:line="149" pos:column="7">{
	<if pos:line="150" pos:column="9">if <condition pos:line="150" pos:column="12">(<expr><operator pos:line="150" pos:column="13">!<pos:position pos:line="150" pos:column="14"/></operator><name pos:line="150" pos:column="14">composecommand<pos:position pos:line="150" pos:column="28"/></name></expr>)<pos:position pos:line="150" pos:column="29"/></condition><then pos:line="150" pos:column="29">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="151" pos:column="11">found<pos:position pos:line="151" pos:column="16"/></name> <operator pos:line="151" pos:column="17">=<pos:position pos:line="151" pos:column="18"/></operator> <name pos:line="151" pos:column="19">FALSE<pos:position pos:line="151" pos:column="24"/></name></expr>;<pos:position pos:line="151" pos:column="25"/></expr_stmt></block></then></if>
      }<pos:position pos:line="152" pos:column="8"/></block></then></if></elseif>
      <elseif pos:line="153" pos:column="7">else <if pos:line="153" pos:column="12">if <condition pos:line="153" pos:column="15">(<expr><name pos:line="153" pos:column="16">opt<pos:position pos:line="153" pos:column="19"/></name> <operator pos:line="153" pos:column="20">==<pos:position pos:line="153" pos:column="22"/></operator> <name pos:line="153" pos:column="23">MUTT_EDIT<pos:position pos:line="153" pos:column="32"/></name></expr>)<pos:position pos:line="153" pos:column="33"/></condition><then pos:line="153" pos:column="33">
      <block pos:line="154" pos:column="7">{
	<if pos:line="155" pos:column="9">if <condition pos:line="155" pos:column="12">(<expr><operator pos:line="155" pos:column="13">!<pos:position pos:line="155" pos:column="14"/></operator><name pos:line="155" pos:column="14">editcommand<pos:position pos:line="155" pos:column="25"/></name></expr>)<pos:position pos:line="155" pos:column="26"/></condition><then pos:line="155" pos:column="26">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="156" pos:column="11">found<pos:position pos:line="156" pos:column="16"/></name> <operator pos:line="156" pos:column="17">=<pos:position pos:line="156" pos:column="18"/></operator> <name pos:line="156" pos:column="19">FALSE<pos:position pos:line="156" pos:column="24"/></name></expr>;<pos:position pos:line="156" pos:column="25"/></expr_stmt></block></then></if>
      }<pos:position pos:line="157" pos:column="8"/></block></then></if></elseif>
      <elseif pos:line="158" pos:column="7">else <if pos:line="158" pos:column="12">if <condition pos:line="158" pos:column="15">(<expr><name pos:line="158" pos:column="16">opt<pos:position pos:line="158" pos:column="19"/></name> <operator pos:line="158" pos:column="20">==<pos:position pos:line="158" pos:column="22"/></operator> <name pos:line="158" pos:column="23">MUTT_PRINT<pos:position pos:line="158" pos:column="33"/></name></expr>)<pos:position pos:line="158" pos:column="34"/></condition><then pos:line="158" pos:column="34">
      <block pos:line="159" pos:column="7">{
	<if pos:line="160" pos:column="9">if <condition pos:line="160" pos:column="12">(<expr><operator pos:line="160" pos:column="13">!<pos:position pos:line="160" pos:column="14"/></operator><name pos:line="160" pos:column="14">printcommand<pos:position pos:line="160" pos:column="26"/></name></expr>)<pos:position pos:line="160" pos:column="27"/></condition><then pos:line="160" pos:column="27">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="161" pos:column="11">found<pos:position pos:line="161" pos:column="16"/></name> <operator pos:line="161" pos:column="17">=<pos:position pos:line="161" pos:column="18"/></operator> <name pos:line="161" pos:column="19">FALSE<pos:position pos:line="161" pos:column="24"/></name></expr>;<pos:position pos:line="161" pos:column="25"/></expr_stmt></block></then></if>
      }<pos:position pos:line="162" pos:column="8"/></block></then></if></elseif></if>
      
      <if pos:line="164" pos:column="7">if <condition pos:line="164" pos:column="10">(<expr><operator pos:line="164" pos:column="11">!<pos:position pos:line="164" pos:column="12"/></operator><name pos:line="164" pos:column="12">found<pos:position pos:line="164" pos:column="17"/></name></expr>)<pos:position pos:line="164" pos:column="18"/></condition><then pos:line="164" pos:column="18">
      <block pos:line="165" pos:column="7">{
	<comment type="block" pos:line="166" pos:column="9">/* reset */</comment>
	<if pos:line="167" pos:column="9">if <condition pos:line="167" pos:column="12">(<expr><name pos:line="167" pos:column="13">entry<pos:position pos:line="167" pos:column="18"/></name></expr>)<pos:position pos:line="167" pos:column="19"/></condition><then pos:line="167" pos:column="19">
	<block pos:line="168" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="169" pos:column="11">FREE<pos:position pos:line="169" pos:column="15"/></name> <argument_list pos:line="169" pos:column="16">(<argument><expr><operator pos:line="169" pos:column="17">&amp;<pos:position pos:line="169" pos:column="22"/></operator><name><name pos:line="169" pos:column="18">entry<pos:position pos:line="169" pos:column="23"/></name><operator pos:line="169" pos:column="23">-&gt;<pos:position pos:line="169" pos:column="28"/></operator><name pos:line="169" pos:column="25">command<pos:position pos:line="169" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="169" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="34"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="170" pos:column="11">FREE<pos:position pos:line="170" pos:column="15"/></name> <argument_list pos:line="170" pos:column="16">(<argument><expr><operator pos:line="170" pos:column="17">&amp;<pos:position pos:line="170" pos:column="22"/></operator><name><name pos:line="170" pos:column="18">entry<pos:position pos:line="170" pos:column="23"/></name><operator pos:line="170" pos:column="23">-&gt;<pos:position pos:line="170" pos:column="28"/></operator><name pos:line="170" pos:column="25">composecommand<pos:position pos:line="170" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="170" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="41"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="171" pos:column="11">FREE<pos:position pos:line="171" pos:column="15"/></name> <argument_list pos:line="171" pos:column="16">(<argument><expr><operator pos:line="171" pos:column="17">&amp;<pos:position pos:line="171" pos:column="22"/></operator><name><name pos:line="171" pos:column="18">entry<pos:position pos:line="171" pos:column="23"/></name><operator pos:line="171" pos:column="23">-&gt;<pos:position pos:line="171" pos:column="28"/></operator><name pos:line="171" pos:column="25">composetypecommand<pos:position pos:line="171" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="171" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="45"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="172" pos:column="11">FREE<pos:position pos:line="172" pos:column="15"/></name> <argument_list pos:line="172" pos:column="16">(<argument><expr><operator pos:line="172" pos:column="17">&amp;<pos:position pos:line="172" pos:column="22"/></operator><name><name pos:line="172" pos:column="18">entry<pos:position pos:line="172" pos:column="23"/></name><operator pos:line="172" pos:column="23">-&gt;<pos:position pos:line="172" pos:column="28"/></operator><name pos:line="172" pos:column="25">editcommand<pos:position pos:line="172" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="172" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="38"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="173" pos:column="11">FREE<pos:position pos:line="173" pos:column="15"/></name> <argument_list pos:line="173" pos:column="16">(<argument><expr><operator pos:line="173" pos:column="17">&amp;<pos:position pos:line="173" pos:column="22"/></operator><name><name pos:line="173" pos:column="18">entry<pos:position pos:line="173" pos:column="23"/></name><operator pos:line="173" pos:column="23">-&gt;<pos:position pos:line="173" pos:column="28"/></operator><name pos:line="173" pos:column="25">printcommand<pos:position pos:line="173" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="173" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="39"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="174" pos:column="11">FREE<pos:position pos:line="174" pos:column="15"/></name> <argument_list pos:line="174" pos:column="16">(<argument><expr><operator pos:line="174" pos:column="17">&amp;<pos:position pos:line="174" pos:column="22"/></operator><name><name pos:line="174" pos:column="18">entry<pos:position pos:line="174" pos:column="23"/></name><operator pos:line="174" pos:column="23">-&gt;<pos:position pos:line="174" pos:column="28"/></operator><name pos:line="174" pos:column="25">nametemplate<pos:position pos:line="174" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="174" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="39"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="175" pos:column="11">FREE<pos:position pos:line="175" pos:column="15"/></name> <argument_list pos:line="175" pos:column="16">(<argument><expr><operator pos:line="175" pos:column="17">&amp;<pos:position pos:line="175" pos:column="22"/></operator><name><name pos:line="175" pos:column="18">entry<pos:position pos:line="175" pos:column="23"/></name><operator pos:line="175" pos:column="23">-&gt;<pos:position pos:line="175" pos:column="28"/></operator><name pos:line="175" pos:column="25">convert<pos:position pos:line="175" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="175" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="34"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="176" pos:column="11">entry<pos:position pos:line="176" pos:column="16"/></name><operator pos:line="176" pos:column="16">-&gt;<pos:position pos:line="176" pos:column="21"/></operator><name pos:line="176" pos:column="18">needsterminal<pos:position pos:line="176" pos:column="31"/></name></name> <operator pos:line="176" pos:column="32">=<pos:position pos:line="176" pos:column="33"/></operator> <literal type="number" pos:line="176" pos:column="34">0<pos:position pos:line="176" pos:column="35"/></literal></expr>;<pos:position pos:line="176" pos:column="36"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="177" pos:column="11">entry<pos:position pos:line="177" pos:column="16"/></name><operator pos:line="177" pos:column="16">-&gt;<pos:position pos:line="177" pos:column="21"/></operator><name pos:line="177" pos:column="18">copiousoutput<pos:position pos:line="177" pos:column="31"/></name></name> <operator pos:line="177" pos:column="32">=<pos:position pos:line="177" pos:column="33"/></operator> <literal type="number" pos:line="177" pos:column="34">0<pos:position pos:line="177" pos:column="35"/></literal></expr>;<pos:position pos:line="177" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="178" pos:column="10"/></block></then></if>
      }<pos:position pos:line="179" pos:column="8"/></block></then></if>
    }<pos:position pos:line="180" pos:column="6"/></block></while> <comment type="block" pos:line="180" pos:column="7">/* while (!found &amp;&amp; (buf = mutt_read_line ())) */</comment>
    <expr_stmt><expr><call><name pos:line="181" pos:column="5">safe_fclose<pos:position pos:line="181" pos:column="16"/></name> <argument_list pos:line="181" pos:column="17">(<argument><expr><operator pos:line="181" pos:column="18">&amp;<pos:position pos:line="181" pos:column="23"/></operator><name pos:line="181" pos:column="19">fp<pos:position pos:line="181" pos:column="21"/></name></expr></argument>)<pos:position pos:line="181" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="182" pos:column="4"/></block></then></if> <comment type="block" pos:line="182" pos:column="5">/* if ((fp = fopen ())) */</comment>
  <expr_stmt><expr><call><name pos:line="183" pos:column="3">FREE<pos:position pos:line="183" pos:column="7"/></name> <argument_list pos:line="183" pos:column="8">(<argument><expr><operator pos:line="183" pos:column="9">&amp;<pos:position pos:line="183" pos:column="14"/></operator><name pos:line="183" pos:column="10">buf<pos:position pos:line="183" pos:column="13"/></name></expr></argument>)<pos:position pos:line="183" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="15"/></expr_stmt>
  <return pos:line="184" pos:column="3">return <expr><name pos:line="184" pos:column="10">found<pos:position pos:line="184" pos:column="15"/></name></expr>;<pos:position pos:line="184" pos:column="16"/></return>
}<pos:position pos:line="185" pos:column="2"/></block></function></unit>

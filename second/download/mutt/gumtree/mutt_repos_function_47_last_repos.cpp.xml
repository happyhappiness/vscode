<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_47_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">crypt_smime_verify_sender<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">HEADER<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">h<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><call><name pos:line="3" pos:column="7">CRYPT_MOD_CALL_CHECK<pos:position pos:line="3" pos:column="27"/></name> <argument_list pos:line="3" pos:column="28">(<argument><expr><name pos:line="3" pos:column="29">SMIME<pos:position pos:line="3" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="36">smime_verify_sender<pos:position pos:line="3" pos:column="55"/></name></expr></argument>)<pos:position pos:line="3" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="57"/></condition><then pos:line="3" pos:column="57">
    <block type="pseudo"><return pos:line="4" pos:column="5">return <expr><operator pos:line="4" pos:column="12">(<pos:position pos:line="4" pos:column="13"/></operator><call><name pos:line="4" pos:column="13">CRYPT_MOD_CALL<pos:position pos:line="4" pos:column="27"/></name> <argument_list pos:line="4" pos:column="28">(<argument><expr><name pos:line="4" pos:column="29">SMIME<pos:position pos:line="4" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="36">smime_verify_sender<pos:position pos:line="4" pos:column="55"/></name></expr></argument>)<pos:position pos:line="4" pos:column="56"/></argument_list></call><operator pos:line="4" pos:column="56">)<pos:position pos:line="4" pos:column="57"/></operator> <operator pos:line="4" pos:column="58">(<pos:position pos:line="4" pos:column="59"/></operator><name pos:line="4" pos:column="59">h<pos:position pos:line="4" pos:column="60"/></name><operator pos:line="4" pos:column="60">)<pos:position pos:line="4" pos:column="61"/></operator></expr>;<pos:position pos:line="4" pos:column="62"/></return></block></then></if>

  <return pos:line="6" pos:column="3">return <expr><literal type="number" pos:line="6" pos:column="10">1<pos:position pos:line="6" pos:column="11"/></literal></expr>;<pos:position pos:line="6" pos:column="12"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

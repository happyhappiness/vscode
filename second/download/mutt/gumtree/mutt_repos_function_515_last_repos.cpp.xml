<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_515_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BODY<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">mutt_parse_multipart<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">FILE<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">fp<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">boundary<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">LOFF_T<pos:position pos:line="1" pos:column="67"/></name></type> <name pos:line="1" pos:column="68">end_off<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="77">int<pos:position pos:line="1" pos:column="80"/></name></type> <name pos:line="1" pos:column="81">digest<pos:position pos:line="1" pos:column="87"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="88"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">SUN_ATTACHMENT<pos:position pos:line="3" pos:column="22"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">lines<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
<cpp:endif pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">endif<pos:position pos:line="5" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">blen<pos:position pos:line="6" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="13">len<pos:position pos:line="6" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="18">crlf<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><literal type="number" pos:line="6" pos:column="25">0<pos:position pos:line="6" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">buffer<pos:position pos:line="7" pos:column="14"/></name><index pos:line="7" pos:column="14">[<expr><name pos:line="7" pos:column="15">LONG_STRING<pos:position pos:line="7" pos:column="26"/></name></expr>]<pos:position pos:line="7" pos:column="27"/></index></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">BODY<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">head<pos:position pos:line="8" pos:column="13"/></name> <init pos:line="8" pos:column="14">= <expr><literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr></init></decl>, <modifier pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="20">last<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><literal type="number" pos:line="8" pos:column="27">0<pos:position pos:line="8" pos:column="28"/></literal></expr></init></decl>, <modifier pos:line="8" pos:column="30">*<pos:position pos:line="8" pos:column="31"/></modifier>new <init pos:line="8" pos:column="35">= <expr><literal type="number" pos:line="8" pos:column="37">0<pos:position pos:line="8" pos:column="38"/></literal></expr></init>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">i<pos:position pos:line="9" pos:column="8"/></name></decl>;<pos:position pos:line="9" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">final<pos:position pos:line="10" pos:column="12"/></name> <init pos:line="10" pos:column="13">= <expr><literal type="number" pos:line="10" pos:column="15">0<pos:position pos:line="10" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="17"/></decl_stmt> <comment type="block" pos:line="10" pos:column="18">/* did we see the ending boundary? */</comment>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">boundary<pos:position pos:line="12" pos:column="16"/></name></expr>)<pos:position pos:line="12" pos:column="17"/></condition><then pos:line="12" pos:column="17">
  <block pos:line="13" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">mutt_error<pos:position pos:line="14" pos:column="15"/></name></type> <name pos:line="14" pos:column="16">_<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><literal type="string" pos:line="14" pos:column="18">"multipart message has no boundary parameter!"<pos:position pos:line="14" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="65"/></argument_list></decl>;<pos:position pos:line="14" pos:column="66"/></decl_stmt>
    <return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">NULL<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">)<pos:position pos:line="15" pos:column="18"/></operator></expr>;<pos:position pos:line="15" pos:column="19"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="18" pos:column="3">blen<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <call><name pos:line="18" pos:column="10">mutt_strlen<pos:position pos:line="18" pos:column="21"/></name> <argument_list pos:line="18" pos:column="22">(<argument><expr><name pos:line="18" pos:column="23">boundary<pos:position pos:line="18" pos:column="31"/></name></expr></argument>)<pos:position pos:line="18" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>
  <while pos:line="19" pos:column="3">while <condition pos:line="19" pos:column="9">(<expr><call><name pos:line="19" pos:column="10">ftello<pos:position pos:line="19" pos:column="16"/></name> <argument_list pos:line="19" pos:column="17">(<argument><expr><name pos:line="19" pos:column="18">fp<pos:position pos:line="19" pos:column="20"/></name></expr></argument>)<pos:position pos:line="19" pos:column="21"/></argument_list></call> <operator pos:line="19" pos:column="22">&lt;<pos:position pos:line="19" pos:column="26"/></operator> <name pos:line="19" pos:column="24">end_off<pos:position pos:line="19" pos:column="31"/></name> <operator pos:line="19" pos:column="32">&amp;&amp;<pos:position pos:line="19" pos:column="42"/></operator> <call><name pos:line="19" pos:column="35">fgets<pos:position pos:line="19" pos:column="40"/></name> <argument_list pos:line="19" pos:column="41">(<argument><expr><name pos:line="19" pos:column="42">buffer<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="50">LONG_STRING<pos:position pos:line="19" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="63">fp<pos:position pos:line="19" pos:column="65"/></name></expr></argument>)<pos:position pos:line="19" pos:column="66"/></argument_list></call> <operator pos:line="19" pos:column="67">!=<pos:position pos:line="19" pos:column="69"/></operator> <name pos:line="19" pos:column="70">NULL<pos:position pos:line="19" pos:column="74"/></name></expr>)<pos:position pos:line="19" pos:column="75"/></condition>
  <block pos:line="20" pos:column="3">{
    <expr_stmt><expr><name pos:line="21" pos:column="5">len<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">=<pos:position pos:line="21" pos:column="10"/></operator> <call><name pos:line="21" pos:column="11">mutt_strlen<pos:position pos:line="21" pos:column="22"/></name> <argument_list pos:line="21" pos:column="23">(<argument><expr><name pos:line="21" pos:column="24">buffer<pos:position pos:line="21" pos:column="30"/></name></expr></argument>)<pos:position pos:line="21" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><name pos:line="23" pos:column="5">crlf<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">=<pos:position pos:line="23" pos:column="11"/></operator>  <ternary><condition><expr><operator pos:line="23" pos:column="13">(<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">len<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">&gt;<pos:position pos:line="23" pos:column="22"/></operator> <literal type="number" pos:line="23" pos:column="20">1<pos:position pos:line="23" pos:column="21"/></literal> <operator pos:line="23" pos:column="22">&amp;&amp;<pos:position pos:line="23" pos:column="32"/></operator> <name><name pos:line="23" pos:column="25">buffer<pos:position pos:line="23" pos:column="31"/></name><index pos:line="23" pos:column="31">[<expr><name pos:line="23" pos:column="32">len<pos:position pos:line="23" pos:column="35"/></name> <operator pos:line="23" pos:column="36">-<pos:position pos:line="23" pos:column="37"/></operator> <literal type="number" pos:line="23" pos:column="38">2<pos:position pos:line="23" pos:column="39"/></literal></expr>]<pos:position pos:line="23" pos:column="40"/></index></name> <operator pos:line="23" pos:column="41">==<pos:position pos:line="23" pos:column="43"/></operator> <literal type="char" pos:line="23" pos:column="44">'\r'<pos:position pos:line="23" pos:column="48"/></literal><operator pos:line="23" pos:column="48">)<pos:position pos:line="23" pos:column="49"/></operator></expr> ?<pos:position pos:line="23" pos:column="51"/></condition><then pos:line="23" pos:column="51"> <expr><literal type="number" pos:line="23" pos:column="52">1<pos:position pos:line="23" pos:column="53"/></literal></expr> <pos:position pos:line="23" pos:column="54"/></then><else pos:line="23" pos:column="54">: <expr><literal type="number" pos:line="23" pos:column="56">0<pos:position pos:line="23" pos:column="57"/></literal></expr></else></ternary></expr>;<pos:position pos:line="23" pos:column="58"/></expr_stmt>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name><name pos:line="25" pos:column="9">buffer<pos:position pos:line="25" pos:column="15"/></name><index pos:line="25" pos:column="15">[<expr><literal type="number" pos:line="25" pos:column="16">0<pos:position pos:line="25" pos:column="17"/></literal></expr>]<pos:position pos:line="25" pos:column="18"/></index></name> <operator pos:line="25" pos:column="19">==<pos:position pos:line="25" pos:column="21"/></operator> <literal type="char" pos:line="25" pos:column="22">'-'<pos:position pos:line="25" pos:column="25"/></literal> <operator pos:line="25" pos:column="26">&amp;&amp;<pos:position pos:line="25" pos:column="36"/></operator> <name><name pos:line="25" pos:column="29">buffer<pos:position pos:line="25" pos:column="35"/></name><index pos:line="25" pos:column="35">[<expr><literal type="number" pos:line="25" pos:column="36">1<pos:position pos:line="25" pos:column="37"/></literal></expr>]<pos:position pos:line="25" pos:column="38"/></index></name> <operator pos:line="25" pos:column="39">==<pos:position pos:line="25" pos:column="41"/></operator> <literal type="char" pos:line="25" pos:column="42">'-'<pos:position pos:line="25" pos:column="45"/></literal> <operator pos:line="25" pos:column="46">&amp;&amp;<pos:position pos:line="25" pos:column="56"/></operator>
	<call><name pos:line="26" pos:column="9">mutt_strncmp<pos:position pos:line="26" pos:column="21"/></name> <argument_list pos:line="26" pos:column="22">(<argument><expr><name pos:line="26" pos:column="23">buffer<pos:position pos:line="26" pos:column="29"/></name> <operator pos:line="26" pos:column="30">+<pos:position pos:line="26" pos:column="31"/></operator> <literal type="number" pos:line="26" pos:column="32">2<pos:position pos:line="26" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="35">boundary<pos:position pos:line="26" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="45">blen<pos:position pos:line="26" pos:column="49"/></name></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></call> <operator pos:line="26" pos:column="51">==<pos:position pos:line="26" pos:column="53"/></operator> <literal type="number" pos:line="26" pos:column="54">0<pos:position pos:line="26" pos:column="55"/></literal></expr>)<pos:position pos:line="26" pos:column="56"/></condition><then pos:line="26" pos:column="56">
    <block pos:line="27" pos:column="5">{
      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><name pos:line="28" pos:column="11">last<pos:position pos:line="28" pos:column="15"/></name></expr>)<pos:position pos:line="28" pos:column="16"/></condition><then pos:line="28" pos:column="16">
      <block pos:line="29" pos:column="7">{
	<expr_stmt><expr><name><name pos:line="30" pos:column="9">last<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">-&gt;<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="15">length<pos:position pos:line="30" pos:column="21"/></name></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <call><name pos:line="30" pos:column="24">ftello<pos:position pos:line="30" pos:column="30"/></name> <argument_list pos:line="30" pos:column="31">(<argument><expr><name pos:line="30" pos:column="32">fp<pos:position pos:line="30" pos:column="34"/></name></expr></argument>)<pos:position pos:line="30" pos:column="35"/></argument_list></call> <operator pos:line="30" pos:column="36">-<pos:position pos:line="30" pos:column="37"/></operator> <name><name pos:line="30" pos:column="38">last<pos:position pos:line="30" pos:column="42"/></name><operator pos:line="30" pos:column="42">-&gt;<pos:position pos:line="30" pos:column="47"/></operator><name pos:line="30" pos:column="44">offset<pos:position pos:line="30" pos:column="50"/></name></name> <operator pos:line="30" pos:column="51">-<pos:position pos:line="30" pos:column="52"/></operator> <name pos:line="30" pos:column="53">len<pos:position pos:line="30" pos:column="56"/></name> <operator pos:line="30" pos:column="57">-<pos:position pos:line="30" pos:column="58"/></operator> <literal type="number" pos:line="30" pos:column="59">1<pos:position pos:line="30" pos:column="60"/></literal> <operator pos:line="30" pos:column="61">-<pos:position pos:line="30" pos:column="62"/></operator> <name pos:line="30" pos:column="63">crlf<pos:position pos:line="30" pos:column="67"/></name></expr>;<pos:position pos:line="30" pos:column="68"/></expr_stmt>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name><name pos:line="31" pos:column="13">last<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">-&gt;<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="19">parts<pos:position pos:line="31" pos:column="24"/></name></name> <operator pos:line="31" pos:column="25">&amp;&amp;<pos:position pos:line="31" pos:column="35"/></operator> <name><name pos:line="31" pos:column="28">last<pos:position pos:line="31" pos:column="32"/></name><operator pos:line="31" pos:column="32">-&gt;<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="34">parts<pos:position pos:line="31" pos:column="39"/></name><operator pos:line="31" pos:column="39">-&gt;<pos:position pos:line="31" pos:column="44"/></operator><name pos:line="31" pos:column="41">length<pos:position pos:line="31" pos:column="47"/></name></name> <operator pos:line="31" pos:column="48">==<pos:position pos:line="31" pos:column="50"/></operator> <literal type="number" pos:line="31" pos:column="51">0<pos:position pos:line="31" pos:column="52"/></literal></expr>)<pos:position pos:line="31" pos:column="53"/></condition><then pos:line="31" pos:column="53">
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="11">last<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">-&gt;<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="17">parts<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">-&gt;<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="24">length<pos:position pos:line="32" pos:column="30"/></name></name> <operator pos:line="32" pos:column="31">=<pos:position pos:line="32" pos:column="32"/></operator> <call><name pos:line="32" pos:column="33">ftello<pos:position pos:line="32" pos:column="39"/></name> <argument_list pos:line="32" pos:column="40">(<argument><expr><name pos:line="32" pos:column="41">fp<pos:position pos:line="32" pos:column="43"/></name></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></call> <operator pos:line="32" pos:column="45">-<pos:position pos:line="32" pos:column="46"/></operator> <name><name pos:line="32" pos:column="47">last<pos:position pos:line="32" pos:column="51"/></name><operator pos:line="32" pos:column="51">-&gt;<pos:position pos:line="32" pos:column="56"/></operator><name pos:line="32" pos:column="53">parts<pos:position pos:line="32" pos:column="58"/></name><operator pos:line="32" pos:column="58">-&gt;<pos:position pos:line="32" pos:column="63"/></operator><name pos:line="32" pos:column="60">offset<pos:position pos:line="32" pos:column="66"/></name></name> <operator pos:line="32" pos:column="67">-<pos:position pos:line="32" pos:column="68"/></operator> <name pos:line="32" pos:column="69">len<pos:position pos:line="32" pos:column="72"/></name> <operator pos:line="32" pos:column="73">-<pos:position pos:line="32" pos:column="74"/></operator> <literal type="number" pos:line="32" pos:column="75">1<pos:position pos:line="32" pos:column="76"/></literal> <operator pos:line="32" pos:column="77">-<pos:position pos:line="32" pos:column="78"/></operator> <name pos:line="32" pos:column="79">crlf<pos:position pos:line="32" pos:column="83"/></name></expr>;<pos:position pos:line="32" pos:column="84"/></expr_stmt></block></then></if>
	<comment type="block" pos:line="33" pos:column="9">/* if the body is empty, we can end up with a -1 length */</comment>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name><name pos:line="34" pos:column="13">last<pos:position pos:line="34" pos:column="17"/></name><operator pos:line="34" pos:column="17">-&gt;<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="19">length<pos:position pos:line="34" pos:column="25"/></name></name> <operator pos:line="34" pos:column="26">&lt;<pos:position pos:line="34" pos:column="30"/></operator> <literal type="number" pos:line="34" pos:column="28">0<pos:position pos:line="34" pos:column="29"/></literal></expr>)<pos:position pos:line="34" pos:column="30"/></condition><then pos:line="34" pos:column="30">
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="35" pos:column="11">last<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">-&gt;<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="17">length<pos:position pos:line="35" pos:column="23"/></name></name> <operator pos:line="35" pos:column="24">=<pos:position pos:line="35" pos:column="25"/></operator> <literal type="number" pos:line="35" pos:column="26">0<pos:position pos:line="35" pos:column="27"/></literal></expr>;<pos:position pos:line="35" pos:column="28"/></expr_stmt></block></then></if>
      }<pos:position pos:line="36" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="38" pos:column="7">/* Remove any trailing whitespace, up to the length of the boundary */</comment>
      <for pos:line="39" pos:column="7">for <control pos:line="39" pos:column="11">(<init><expr><name pos:line="39" pos:column="12">i<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <name pos:line="39" pos:column="16">len<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">-<pos:position pos:line="39" pos:column="21"/></operator> <literal type="number" pos:line="39" pos:column="22">1<pos:position pos:line="39" pos:column="23"/></literal></expr>;<pos:position pos:line="39" pos:column="24"/></init> <condition><expr><call><name pos:line="39" pos:column="25">ISSPACE<pos:position pos:line="39" pos:column="32"/></name> <argument_list pos:line="39" pos:column="33">(<argument><expr><name><name pos:line="39" pos:column="34">buffer<pos:position pos:line="39" pos:column="40"/></name><index pos:line="39" pos:column="40">[<expr><name pos:line="39" pos:column="41">i<pos:position pos:line="39" pos:column="42"/></name></expr>]<pos:position pos:line="39" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="39" pos:column="44"/></argument_list></call> <operator pos:line="39" pos:column="45">&amp;&amp;<pos:position pos:line="39" pos:column="55"/></operator> <name pos:line="39" pos:column="48">i<pos:position pos:line="39" pos:column="49"/></name> <operator pos:line="39" pos:column="50">&gt;=<pos:position pos:line="39" pos:column="55"/></operator> <name pos:line="39" pos:column="53">blen<pos:position pos:line="39" pos:column="57"/></name> <operator pos:line="39" pos:column="58">+<pos:position pos:line="39" pos:column="59"/></operator> <literal type="number" pos:line="39" pos:column="60">2<pos:position pos:line="39" pos:column="61"/></literal></expr>;<pos:position pos:line="39" pos:column="62"/></condition> <incr><expr><name pos:line="39" pos:column="63">i<pos:position pos:line="39" pos:column="64"/></name><operator pos:line="39" pos:column="64">--<pos:position pos:line="39" pos:column="66"/></operator></expr></incr>)<pos:position pos:line="39" pos:column="67"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="40" pos:column="9">buffer<pos:position pos:line="40" pos:column="15"/></name><index pos:line="40" pos:column="15">[<expr><name pos:line="40" pos:column="16">i<pos:position pos:line="40" pos:column="17"/></name></expr>]<pos:position pos:line="40" pos:column="18"/></index></name> <operator pos:line="40" pos:column="19">=<pos:position pos:line="40" pos:column="20"/></operator> <literal type="number" pos:line="40" pos:column="21">0<pos:position pos:line="40" pos:column="22"/></literal></expr>;<pos:position pos:line="40" pos:column="23"/></expr_stmt></block></for>

      <comment type="block" pos:line="42" pos:column="7">/* Check for the end boundary */</comment>
      <if pos:line="43" pos:column="7">if <condition pos:line="43" pos:column="10">(<expr><call><name pos:line="43" pos:column="11">mutt_strcmp<pos:position pos:line="43" pos:column="22"/></name> <argument_list pos:line="43" pos:column="23">(<argument><expr><name pos:line="43" pos:column="24">buffer<pos:position pos:line="43" pos:column="30"/></name> <operator pos:line="43" pos:column="31">+<pos:position pos:line="43" pos:column="32"/></operator> <name pos:line="43" pos:column="33">blen<pos:position pos:line="43" pos:column="37"/></name> <operator pos:line="43" pos:column="38">+<pos:position pos:line="43" pos:column="39"/></operator> <literal type="number" pos:line="43" pos:column="40">2<pos:position pos:line="43" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="43">"--"<pos:position pos:line="43" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="48"/></argument_list></call> <operator pos:line="43" pos:column="49">==<pos:position pos:line="43" pos:column="51"/></operator> <literal type="number" pos:line="43" pos:column="52">0<pos:position pos:line="43" pos:column="53"/></literal></expr>)<pos:position pos:line="43" pos:column="54"/></condition><then pos:line="43" pos:column="54">
      <block pos:line="44" pos:column="7">{
	<expr_stmt><expr><name pos:line="45" pos:column="9">final<pos:position pos:line="45" pos:column="14"/></name> <operator pos:line="45" pos:column="15">=<pos:position pos:line="45" pos:column="16"/></operator> <literal type="number" pos:line="45" pos:column="17">1<pos:position pos:line="45" pos:column="18"/></literal></expr>;<pos:position pos:line="45" pos:column="19"/></expr_stmt>
	<break pos:line="46" pos:column="9">break;<pos:position pos:line="46" pos:column="15"/></break> <comment type="block" pos:line="46" pos:column="16">/* done parsing */</comment>
      }<pos:position pos:line="47" pos:column="8"/></block></then>
      <elseif pos:line="48" pos:column="7">else <if pos:line="48" pos:column="12">if <condition pos:line="48" pos:column="15">(<expr><name><name pos:line="48" pos:column="16">buffer<pos:position pos:line="48" pos:column="22"/></name><index pos:line="48" pos:column="22">[<expr><literal type="number" pos:line="48" pos:column="23">2<pos:position pos:line="48" pos:column="24"/></literal> <operator pos:line="48" pos:column="25">+<pos:position pos:line="48" pos:column="26"/></operator> <name pos:line="48" pos:column="27">blen<pos:position pos:line="48" pos:column="31"/></name></expr>]<pos:position pos:line="48" pos:column="32"/></index></name> <operator pos:line="48" pos:column="33">==<pos:position pos:line="48" pos:column="35"/></operator> <literal type="number" pos:line="48" pos:column="36">0<pos:position pos:line="48" pos:column="37"/></literal></expr>)<pos:position pos:line="48" pos:column="38"/></condition><then pos:line="48" pos:column="38">
      <block pos:line="49" pos:column="7">{
	<expr_stmt><expr><operator pos:line="50" pos:column="9">new<pos:position pos:line="50" pos:column="12"/></operator> <operator pos:line="50" pos:column="13">=<pos:position pos:line="50" pos:column="14"/></operator> <call><name pos:line="50" pos:column="15">mutt_read_mime_header<pos:position pos:line="50" pos:column="36"/></name> <argument_list pos:line="50" pos:column="37">(<argument><expr><name pos:line="50" pos:column="38">fp<pos:position pos:line="50" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="42">digest<pos:position pos:line="50" pos:column="48"/></name></expr></argument>)<pos:position pos:line="50" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="50"/></expr_stmt>

<cpp:ifdef pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">ifdef<pos:position pos:line="52" pos:column="7"/></cpp:directive> <name pos:line="52" pos:column="8">SUN_ATTACHMENT<pos:position pos:line="52" pos:column="22"/></name></cpp:ifdef>
        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><call><name pos:line="53" pos:column="13">mutt_get_parameter<pos:position pos:line="53" pos:column="31"/></name> <argument_list pos:line="53" pos:column="32">(<argument><expr><literal type="string" pos:line="53" pos:column="33">"content-lines"<pos:position pos:line="53" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="53" pos:column="50">new<pos:position pos:line="53" pos:column="53"/></operator><operator pos:line="53" pos:column="53">-&gt;<pos:position pos:line="53" pos:column="58"/></operator><name pos:line="53" pos:column="55">parameter<pos:position pos:line="53" pos:column="64"/></name></expr></argument>)<pos:position pos:line="53" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="66"/></condition><then pos:line="53" pos:column="66"> <block pos:line="53" pos:column="67">{
	  <expr_stmt><expr><call><name pos:line="54" pos:column="11">mutt_atoi<pos:position pos:line="54" pos:column="20"/></name> <argument_list pos:line="54" pos:column="21">(<argument><expr><call><name pos:line="54" pos:column="22">mutt_get_parameter<pos:position pos:line="54" pos:column="40"/></name> <argument_list pos:line="54" pos:column="41">(<argument><expr><literal type="string" pos:line="54" pos:column="42">"content-lines"<pos:position pos:line="54" pos:column="57"/></literal></expr></argument>, <argument><expr><operator pos:line="54" pos:column="59">new<pos:position pos:line="54" pos:column="62"/></operator><operator pos:line="54" pos:column="62">-&gt;<pos:position pos:line="54" pos:column="67"/></operator><name pos:line="54" pos:column="64">parameter<pos:position pos:line="54" pos:column="73"/></name></expr></argument>)<pos:position pos:line="54" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="54" pos:column="76">&amp;<pos:position pos:line="54" pos:column="81"/></operator><name pos:line="54" pos:column="77">lines<pos:position pos:line="54" pos:column="82"/></name></expr></argument>)<pos:position pos:line="54" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="84"/></expr_stmt>
	  <for pos:line="55" pos:column="11">for <control pos:line="55" pos:column="15">( <init pos:line="55" pos:column="17">;<pos:position pos:line="55" pos:column="18"/></init> <condition><expr><name pos:line="55" pos:column="19">lines<pos:position pos:line="55" pos:column="24"/></name></expr>;<pos:position pos:line="55" pos:column="25"/></condition> <incr><expr><name pos:line="55" pos:column="26">lines<pos:position pos:line="55" pos:column="31"/></name><operator pos:line="55" pos:column="31">--<pos:position pos:line="55" pos:column="33"/></operator></expr></incr> )<pos:position pos:line="55" pos:column="35"/></control>
	     <block type="pseudo"><if pos:line="56" pos:column="14">if <condition pos:line="56" pos:column="17">(<expr><call><name pos:line="56" pos:column="18">ftello<pos:position pos:line="56" pos:column="24"/></name> <argument_list pos:line="56" pos:column="25">(<argument><expr><name pos:line="56" pos:column="26">fp<pos:position pos:line="56" pos:column="28"/></name></expr></argument>)<pos:position pos:line="56" pos:column="29"/></argument_list></call> <operator pos:line="56" pos:column="30">&gt;=<pos:position pos:line="56" pos:column="35"/></operator> <name pos:line="56" pos:column="33">end_off<pos:position pos:line="56" pos:column="40"/></name> <operator pos:line="56" pos:column="41">||<pos:position pos:line="56" pos:column="43"/></operator> <call><name pos:line="56" pos:column="44">fgets<pos:position pos:line="56" pos:column="49"/></name> <argument_list pos:line="56" pos:column="50">(<argument><expr><name pos:line="56" pos:column="51">buffer<pos:position pos:line="56" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="59">LONG_STRING<pos:position pos:line="56" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="72">fp<pos:position pos:line="56" pos:column="74"/></name></expr></argument>)<pos:position pos:line="56" pos:column="75"/></argument_list></call> <operator pos:line="56" pos:column="76">==<pos:position pos:line="56" pos:column="78"/></operator> <name pos:line="56" pos:column="79">NULL<pos:position pos:line="56" pos:column="83"/></name></expr>)<pos:position pos:line="56" pos:column="84"/></condition><then pos:line="56" pos:column="84">
	       <block type="pseudo"><break pos:line="57" pos:column="16">break;<pos:position pos:line="57" pos:column="22"/></break></block></then></if></block></for>
	}<pos:position pos:line="58" pos:column="10"/></block></then></if>
<cpp:endif pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">endif<pos:position pos:line="59" pos:column="7"/></cpp:directive></cpp:endif>
	
	<comment type="block" pos:line="61" pos:column="9">/*
	 * Consistency checking - catch
	 * bad attachment end boundaries
	 */</comment>
	
	<if pos:line="66" pos:column="9">if<condition pos:line="66" pos:column="11">(<expr><operator pos:line="66" pos:column="12">new<pos:position pos:line="66" pos:column="15"/></operator><operator pos:line="66" pos:column="15">-&gt;<pos:position pos:line="66" pos:column="20"/></operator><name pos:line="66" pos:column="17">offset<pos:position pos:line="66" pos:column="23"/></name> <operator pos:line="66" pos:column="24">&gt;<pos:position pos:line="66" pos:column="28"/></operator> <name pos:line="66" pos:column="26">end_off<pos:position pos:line="66" pos:column="33"/></name></expr>)<pos:position pos:line="66" pos:column="34"/></condition><then pos:line="66" pos:column="34">
	<block pos:line="67" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="68" pos:column="11">mutt_free_body<pos:position pos:line="68" pos:column="25"/></name><argument_list pos:line="68" pos:column="25">(<argument><expr><operator pos:line="68" pos:column="26">&amp;<pos:position pos:line="68" pos:column="31"/></operator><operator pos:line="68" pos:column="27">new<pos:position pos:line="68" pos:column="30"/></operator></expr></argument>)<pos:position pos:line="68" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="32"/></expr_stmt>
	  <break pos:line="69" pos:column="11">break;<pos:position pos:line="69" pos:column="17"/></break>
	}<pos:position pos:line="70" pos:column="10"/></block></then></if>
	<if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><name pos:line="71" pos:column="13">head<pos:position pos:line="71" pos:column="17"/></name></expr>)<pos:position pos:line="71" pos:column="18"/></condition><then pos:line="71" pos:column="18">
	<block pos:line="72" pos:column="9">{
	  <expr_stmt><expr><name><name pos:line="73" pos:column="11">last<pos:position pos:line="73" pos:column="15"/></name><operator pos:line="73" pos:column="15">-&gt;<pos:position pos:line="73" pos:column="20"/></operator><name pos:line="73" pos:column="17">next<pos:position pos:line="73" pos:column="21"/></name></name> <operator pos:line="73" pos:column="22">=<pos:position pos:line="73" pos:column="23"/></operator> <operator pos:line="73" pos:column="24">new<pos:position pos:line="73" pos:column="27"/></operator></expr>;<pos:position pos:line="73" pos:column="28"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="74" pos:column="11">last<pos:position pos:line="74" pos:column="15"/></name> <operator pos:line="74" pos:column="16">=<pos:position pos:line="74" pos:column="17"/></operator> <operator pos:line="74" pos:column="18">new<pos:position pos:line="74" pos:column="21"/></operator></expr>;<pos:position pos:line="74" pos:column="22"/></expr_stmt>
	}<pos:position pos:line="75" pos:column="10"/></block></then>
	<else pos:line="76" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><name pos:line="77" pos:column="11">last<pos:position pos:line="77" pos:column="15"/></name> <operator pos:line="77" pos:column="16">=<pos:position pos:line="77" pos:column="17"/></operator> <name pos:line="77" pos:column="18">head<pos:position pos:line="77" pos:column="22"/></name> <operator pos:line="77" pos:column="23">=<pos:position pos:line="77" pos:column="24"/></operator> <operator pos:line="77" pos:column="25">new<pos:position pos:line="77" pos:column="28"/></operator></expr>;<pos:position pos:line="77" pos:column="29"/></expr_stmt></block></else></if>
      }<pos:position pos:line="78" pos:column="8"/></block></then></if></elseif></if>
    }<pos:position pos:line="79" pos:column="6"/></block></then></if>
  }<pos:position pos:line="80" pos:column="4"/></block></while>

  <comment type="block" pos:line="82" pos:column="3">/* in case of missing end boundary, set the length to something reasonable */</comment>
  <if pos:line="83" pos:column="3">if <condition pos:line="83" pos:column="6">(<expr><name pos:line="83" pos:column="7">last<pos:position pos:line="83" pos:column="11"/></name> <operator pos:line="83" pos:column="12">&amp;&amp;<pos:position pos:line="83" pos:column="22"/></operator> <name><name pos:line="83" pos:column="15">last<pos:position pos:line="83" pos:column="19"/></name><operator pos:line="83" pos:column="19">-&gt;<pos:position pos:line="83" pos:column="24"/></operator><name pos:line="83" pos:column="21">length<pos:position pos:line="83" pos:column="27"/></name></name> <operator pos:line="83" pos:column="28">==<pos:position pos:line="83" pos:column="30"/></operator> <literal type="number" pos:line="83" pos:column="31">0<pos:position pos:line="83" pos:column="32"/></literal> <operator pos:line="83" pos:column="33">&amp;&amp;<pos:position pos:line="83" pos:column="43"/></operator> <operator pos:line="83" pos:column="36">!<pos:position pos:line="83" pos:column="37"/></operator><name pos:line="83" pos:column="37">final<pos:position pos:line="83" pos:column="42"/></name></expr>)<pos:position pos:line="83" pos:column="43"/></condition><then pos:line="83" pos:column="43">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="84" pos:column="5">last<pos:position pos:line="84" pos:column="9"/></name><operator pos:line="84" pos:column="9">-&gt;<pos:position pos:line="84" pos:column="14"/></operator><name pos:line="84" pos:column="11">length<pos:position pos:line="84" pos:column="17"/></name></name> <operator pos:line="84" pos:column="18">=<pos:position pos:line="84" pos:column="19"/></operator> <name pos:line="84" pos:column="20">end_off<pos:position pos:line="84" pos:column="27"/></name> <operator pos:line="84" pos:column="28">-<pos:position pos:line="84" pos:column="29"/></operator> <name><name pos:line="84" pos:column="30">last<pos:position pos:line="84" pos:column="34"/></name><operator pos:line="84" pos:column="34">-&gt;<pos:position pos:line="84" pos:column="39"/></operator><name pos:line="84" pos:column="36">offset<pos:position pos:line="84" pos:column="42"/></name></name></expr>;<pos:position pos:line="84" pos:column="43"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="86" pos:column="3">/* parse recursive MIME parts */</comment>
  <for pos:line="87" pos:column="3">for<control pos:line="87" pos:column="6">(<init><expr><name pos:line="87" pos:column="7">last<pos:position pos:line="87" pos:column="11"/></name> <operator pos:line="87" pos:column="12">=<pos:position pos:line="87" pos:column="13"/></operator> <name pos:line="87" pos:column="14">head<pos:position pos:line="87" pos:column="18"/></name></expr>;<pos:position pos:line="87" pos:column="19"/></init> <condition><expr><name pos:line="87" pos:column="20">last<pos:position pos:line="87" pos:column="24"/></name></expr>;<pos:position pos:line="87" pos:column="25"/></condition> <incr><expr><name pos:line="87" pos:column="26">last<pos:position pos:line="87" pos:column="30"/></name> <operator pos:line="87" pos:column="31">=<pos:position pos:line="87" pos:column="32"/></operator> <name><name pos:line="87" pos:column="33">last<pos:position pos:line="87" pos:column="37"/></name><operator pos:line="87" pos:column="37">-&gt;<pos:position pos:line="87" pos:column="42"/></operator><name pos:line="87" pos:column="39">next<pos:position pos:line="87" pos:column="43"/></name></name></expr></incr>)<pos:position pos:line="87" pos:column="44"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="88" pos:column="5">mutt_parse_part<pos:position pos:line="88" pos:column="20"/></name><argument_list pos:line="88" pos:column="20">(<argument><expr><name pos:line="88" pos:column="21">fp<pos:position pos:line="88" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="25">last<pos:position pos:line="88" pos:column="29"/></name></expr></argument>)<pos:position pos:line="88" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="31"/></expr_stmt></block></for>
  
  <return pos:line="90" pos:column="3">return <expr><operator pos:line="90" pos:column="10">(<pos:position pos:line="90" pos:column="11"/></operator><name pos:line="90" pos:column="11">head<pos:position pos:line="90" pos:column="15"/></name><operator pos:line="90" pos:column="15">)<pos:position pos:line="90" pos:column="16"/></operator></expr>;<pos:position pos:line="90" pos:column="17"/></return>
}<pos:position pos:line="91" pos:column="2"/></block></function></unit>

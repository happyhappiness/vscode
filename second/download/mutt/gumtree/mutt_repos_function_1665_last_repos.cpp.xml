<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1665_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">short<pos:position pos:line="1" pos:column="6"/></name></type> <name pos:line="1" pos:column="7">crypt_is_numerical_keyid<pos:position pos:line="1" pos:column="31"/></name> <parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">s<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* or should we require the "0x"? */</comment>
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><call><name pos:line="4" pos:column="7">strncmp<pos:position pos:line="4" pos:column="14"/></name> <argument_list pos:line="4" pos:column="15">(<argument><expr><name pos:line="4" pos:column="16">s<pos:position pos:line="4" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"0x"<pos:position pos:line="4" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="25">2<pos:position pos:line="4" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="27"/></argument_list></call> <operator pos:line="4" pos:column="28">==<pos:position pos:line="4" pos:column="30"/></operator> <literal type="number" pos:line="4" pos:column="31">0<pos:position pos:line="4" pos:column="32"/></literal></expr>)<pos:position pos:line="4" pos:column="33"/></condition><then pos:line="4" pos:column="33">
    <block type="pseudo"><expr_stmt><expr><name pos:line="5" pos:column="5">s<pos:position pos:line="5" pos:column="6"/></name> <operator pos:line="5" pos:column="7">+=<pos:position pos:line="5" pos:column="9"/></operator> <literal type="number" pos:line="5" pos:column="10">2<pos:position pos:line="5" pos:column="11"/></literal></expr>;<pos:position pos:line="5" pos:column="12"/></expr_stmt></block></then></if>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><call><name pos:line="6" pos:column="7">strlen<pos:position pos:line="6" pos:column="13"/></name> <argument_list pos:line="6" pos:column="14">(<argument><expr><name pos:line="6" pos:column="15">s<pos:position pos:line="6" pos:column="16"/></name></expr></argument>)<pos:position pos:line="6" pos:column="17"/></argument_list></call> <operator pos:line="6" pos:column="18">%<pos:position pos:line="6" pos:column="19"/></operator> <literal type="number" pos:line="6" pos:column="20">8<pos:position pos:line="6" pos:column="21"/></literal></expr>)<pos:position pos:line="6" pos:column="22"/></condition><then pos:line="6" pos:column="22">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><literal type="number" pos:line="7" pos:column="12">0<pos:position pos:line="7" pos:column="13"/></literal></expr>;<pos:position pos:line="7" pos:column="14"/></return></block></then></if>
  <while pos:line="8" pos:column="3">while <condition pos:line="8" pos:column="9">(<expr><operator pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="11">s<pos:position pos:line="8" pos:column="12"/></name></expr>)<pos:position pos:line="8" pos:column="13"/></condition>
    <block type="pseudo"><if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">strchr<pos:position pos:line="9" pos:column="15"/></name> <argument_list pos:line="9" pos:column="16">(<argument><expr><literal type="string" pos:line="9" pos:column="17">"0123456789ABCDEFabcdef"<pos:position pos:line="9" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="43">*<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="44">s<pos:position pos:line="9" pos:column="45"/></name><operator pos:line="9" pos:column="45">++<pos:position pos:line="9" pos:column="47"/></operator></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call> <operator pos:line="9" pos:column="49">==<pos:position pos:line="9" pos:column="51"/></operator> <name pos:line="9" pos:column="52">NULL<pos:position pos:line="9" pos:column="56"/></name></expr>)<pos:position pos:line="9" pos:column="57"/></condition><then pos:line="9" pos:column="57">
      <block type="pseudo"><return pos:line="10" pos:column="7">return <expr><literal type="number" pos:line="10" pos:column="14">0<pos:position pos:line="10" pos:column="15"/></literal></expr>;<pos:position pos:line="10" pos:column="16"/></return></block></then></if></block></while>

  <return pos:line="12" pos:column="3">return <expr><literal type="number" pos:line="12" pos:column="10">1<pos:position pos:line="12" pos:column="11"/></literal></expr>;<pos:position pos:line="12" pos:column="12"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

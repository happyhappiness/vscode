<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1478_last_repos.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">_mutt_fmt_pgp_command<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">dest<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>,
				   <parameter><decl><type><name pos:line="2" pos:column="36">size_t<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">destlen<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>,
				   <parameter><decl><type><name pos:line="3" pos:column="36">size_t<pos:position pos:line="3" pos:column="42"/></name></type> <name pos:line="3" pos:column="43">col<pos:position pos:line="3" pos:column="46"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="4" pos:column="36">int<pos:position pos:line="4" pos:column="39"/></name></type> <name pos:line="4" pos:column="40">cols<pos:position pos:line="4" pos:column="44"/></name></decl></parameter>,
				   <parameter><decl><type><name pos:line="5" pos:column="36">char<pos:position pos:line="5" pos:column="40"/></name></type> <name pos:line="5" pos:column="41">op<pos:position pos:line="5" pos:column="43"/></name></decl></parameter>,
				   <parameter><decl><type><specifier pos:line="6" pos:column="36">const<pos:position pos:line="6" pos:column="41"/></specifier> <name pos:line="6" pos:column="42">char<pos:position pos:line="6" pos:column="46"/></name> <modifier pos:line="6" pos:column="47">*<pos:position pos:line="6" pos:column="48"/></modifier></type><name pos:line="6" pos:column="48">src<pos:position pos:line="6" pos:column="51"/></name></decl></parameter>,
				   <parameter><decl><type><specifier pos:line="7" pos:column="36">const<pos:position pos:line="7" pos:column="41"/></specifier> <name pos:line="7" pos:column="42">char<pos:position pos:line="7" pos:column="46"/></name> <modifier pos:line="7" pos:column="47">*<pos:position pos:line="7" pos:column="48"/></modifier></type><name pos:line="7" pos:column="48">prefix<pos:position pos:line="7" pos:column="54"/></name></decl></parameter>,
				   <parameter><decl><type><specifier pos:line="8" pos:column="36">const<pos:position pos:line="8" pos:column="41"/></specifier> <name pos:line="8" pos:column="42">char<pos:position pos:line="8" pos:column="46"/></name> <modifier pos:line="8" pos:column="47">*<pos:position pos:line="8" pos:column="48"/></modifier></type><name pos:line="8" pos:column="48">ifstring<pos:position pos:line="8" pos:column="56"/></name></decl></parameter>,
				   <parameter><decl><type><specifier pos:line="9" pos:column="36">const<pos:position pos:line="9" pos:column="41"/></specifier> <name pos:line="9" pos:column="42">char<pos:position pos:line="9" pos:column="46"/></name> <modifier pos:line="9" pos:column="47">*<pos:position pos:line="9" pos:column="48"/></modifier></type><name pos:line="9" pos:column="48">elsestring<pos:position pos:line="9" pos:column="58"/></name></decl></parameter>,
				   <parameter><decl><type><name pos:line="10" pos:column="36">unsigned<pos:position pos:line="10" pos:column="44"/></name> <name pos:line="10" pos:column="45">long<pos:position pos:line="10" pos:column="49"/></name></type> <name pos:line="10" pos:column="50">data<pos:position pos:line="10" pos:column="54"/></name></decl></parameter>,
				   <parameter><decl><type><name pos:line="11" pos:column="36">format_flag<pos:position pos:line="11" pos:column="47"/></name></type> <name pos:line="11" pos:column="48">flags<pos:position pos:line="11" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="11" pos:column="54"/></parameter_list>
<block pos:line="12" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name></type> <name><name pos:line="13" pos:column="8">fmt<pos:position pos:line="13" pos:column="11"/></name><index pos:line="13" pos:column="11">[<expr><literal type="number" pos:line="13" pos:column="12">16<pos:position pos:line="13" pos:column="14"/></literal></expr>]<pos:position pos:line="13" pos:column="15"/></index></name></decl>;<pos:position pos:line="13" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="14" pos:column="3">struct<pos:position pos:line="14" pos:column="9"/></name> <name pos:line="14" pos:column="10">pgp_command_context<pos:position pos:line="14" pos:column="29"/></name></name> <modifier pos:line="14" pos:column="30">*<pos:position pos:line="14" pos:column="31"/></modifier></type><name pos:line="14" pos:column="31">cctx<pos:position pos:line="14" pos:column="35"/></name> <init pos:line="14" pos:column="36">= <expr><operator pos:line="14" pos:column="38">(<pos:position pos:line="14" pos:column="39"/></operator>struct <name pos:line="14" pos:column="46">pgp_command_context<pos:position pos:line="14" pos:column="65"/></name> <operator pos:line="14" pos:column="66">*<pos:position pos:line="14" pos:column="67"/></operator><operator pos:line="14" pos:column="67">)<pos:position pos:line="14" pos:column="68"/></operator> <name pos:line="14" pos:column="69">data<pos:position pos:line="14" pos:column="73"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="74"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type> <name pos:line="15" pos:column="7">optional<pos:position pos:line="15" pos:column="15"/></name> <init pos:line="15" pos:column="16">= <expr><operator pos:line="15" pos:column="18">(<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="19">flags<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">&amp;<pos:position pos:line="15" pos:column="30"/></operator> <name pos:line="15" pos:column="27">MUTT_FORMAT_OPTIONAL<pos:position pos:line="15" pos:column="47"/></name><operator pos:line="15" pos:column="47">)<pos:position pos:line="15" pos:column="48"/></operator></expr></init></decl>;<pos:position pos:line="15" pos:column="49"/></decl_stmt>
  
  <switch pos:line="17" pos:column="3">switch <condition pos:line="17" pos:column="10">(<expr><name pos:line="17" pos:column="11">op<pos:position pos:line="17" pos:column="13"/></name></expr>)<pos:position pos:line="17" pos:column="14"/></condition>
  <block pos:line="18" pos:column="3">{
    <case pos:line="19" pos:column="5">case <expr><literal type="char" pos:line="19" pos:column="10">'r'<pos:position pos:line="19" pos:column="13"/></literal></expr>:<pos:position pos:line="19" pos:column="14"/></case>
    <block pos:line="20" pos:column="5">{
      <if pos:line="21" pos:column="7">if <condition pos:line="21" pos:column="10">(<expr><operator pos:line="21" pos:column="11">!<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="12">optional<pos:position pos:line="21" pos:column="20"/></name></expr>)<pos:position pos:line="21" pos:column="21"/></condition><then pos:line="21" pos:column="21">
      <block pos:line="22" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">snprintf<pos:position pos:line="23" pos:column="17"/></name> <argument_list pos:line="23" pos:column="18">(<argument><expr><name pos:line="23" pos:column="19">fmt<pos:position pos:line="23" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="24">sizeof <argument_list pos:line="23" pos:column="31">(<argument><expr><name pos:line="23" pos:column="32">fmt<pos:position pos:line="23" pos:column="35"/></name></expr></argument>)<pos:position pos:line="23" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="38">"%%%ss"<pos:position pos:line="23" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="47">prefix<pos:position pos:line="23" pos:column="53"/></name></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">snprintf<pos:position pos:line="24" pos:column="17"/></name> <argument_list pos:line="24" pos:column="18">(<argument><expr><name pos:line="24" pos:column="19">dest<pos:position pos:line="24" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="25">destlen<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="34">fmt<pos:position pos:line="24" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="39">NONULL<pos:position pos:line="24" pos:column="45"/></name> <argument_list pos:line="24" pos:column="46">(<argument><expr><name><name pos:line="24" pos:column="47">cctx<pos:position pos:line="24" pos:column="51"/></name><operator pos:line="24" pos:column="51">-&gt;<pos:position pos:line="24" pos:column="56"/></operator><name pos:line="24" pos:column="53">ids<pos:position pos:line="24" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="59"/></expr_stmt>
      }<pos:position pos:line="25" pos:column="8"/></block></then>
      <elseif pos:line="26" pos:column="7">else <if pos:line="26" pos:column="12">if <condition pos:line="26" pos:column="15">(<expr><operator pos:line="26" pos:column="16">!<pos:position pos:line="26" pos:column="17"/></operator><name><name pos:line="26" pos:column="17">cctx<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">-&gt;<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="23">ids<pos:position pos:line="26" pos:column="26"/></name></name></expr>)<pos:position pos:line="26" pos:column="27"/></condition><then pos:line="26" pos:column="27">
	<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="9">optional<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <literal type="number" pos:line="27" pos:column="20">0<pos:position pos:line="27" pos:column="21"/></literal></expr>;<pos:position pos:line="27" pos:column="22"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="28" pos:column="7">break;<pos:position pos:line="28" pos:column="13"/></break>
    }<pos:position pos:line="29" pos:column="6"/></block>
    
    <case pos:line="31" pos:column="5">case <expr><literal type="char" pos:line="31" pos:column="10">'a'<pos:position pos:line="31" pos:column="13"/></literal></expr>:<pos:position pos:line="31" pos:column="14"/></case>
    <block pos:line="32" pos:column="5">{
      <if pos:line="33" pos:column="7">if <condition pos:line="33" pos:column="10">(<expr><operator pos:line="33" pos:column="11">!<pos:position pos:line="33" pos:column="12"/></operator><name pos:line="33" pos:column="12">optional<pos:position pos:line="33" pos:column="20"/></name></expr>)<pos:position pos:line="33" pos:column="21"/></condition><then pos:line="33" pos:column="21">
      <block pos:line="34" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">snprintf<pos:position pos:line="35" pos:column="17"/></name> <argument_list pos:line="35" pos:column="18">(<argument><expr><name pos:line="35" pos:column="19">fmt<pos:position pos:line="35" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="24">sizeof <argument_list pos:line="35" pos:column="31">(<argument><expr><name pos:line="35" pos:column="32">fmt<pos:position pos:line="35" pos:column="35"/></name></expr></argument>)<pos:position pos:line="35" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="38">"%%%ss"<pos:position pos:line="35" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="47">prefix<pos:position pos:line="35" pos:column="53"/></name></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="36" pos:column="9">snprintf<pos:position pos:line="36" pos:column="17"/></name> <argument_list pos:line="36" pos:column="18">(<argument><expr><name pos:line="36" pos:column="19">dest<pos:position pos:line="36" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="25">destlen<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="34">fmt<pos:position pos:line="36" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="39">NONULL<pos:position pos:line="36" pos:column="45"/></name> <argument_list pos:line="36" pos:column="46">(<argument><expr><name><name pos:line="36" pos:column="47">cctx<pos:position pos:line="36" pos:column="51"/></name><operator pos:line="36" pos:column="51">-&gt;<pos:position pos:line="36" pos:column="56"/></operator><name pos:line="36" pos:column="53">signas<pos:position pos:line="36" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="62"/></expr_stmt>
      }<pos:position pos:line="37" pos:column="8"/></block></then>
      <elseif pos:line="38" pos:column="7">else <if pos:line="38" pos:column="12">if <condition pos:line="38" pos:column="15">(<expr><operator pos:line="38" pos:column="16">!<pos:position pos:line="38" pos:column="17"/></operator><name><name pos:line="38" pos:column="17">cctx<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">-&gt;<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="23">signas<pos:position pos:line="38" pos:column="29"/></name></name></expr>)<pos:position pos:line="38" pos:column="30"/></condition><then pos:line="38" pos:column="30">
	<block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="9">optional<pos:position pos:line="39" pos:column="17"/></name> <operator pos:line="39" pos:column="18">=<pos:position pos:line="39" pos:column="19"/></operator> <literal type="number" pos:line="39" pos:column="20">0<pos:position pos:line="39" pos:column="21"/></literal></expr>;<pos:position pos:line="39" pos:column="22"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="40" pos:column="7">break;<pos:position pos:line="40" pos:column="13"/></break>
    }<pos:position pos:line="41" pos:column="6"/></block>
    
    <case pos:line="43" pos:column="5">case <expr><literal type="char" pos:line="43" pos:column="10">'s'<pos:position pos:line="43" pos:column="13"/></literal></expr>:<pos:position pos:line="43" pos:column="14"/></case>
    <block pos:line="44" pos:column="5">{
      <if pos:line="45" pos:column="7">if <condition pos:line="45" pos:column="10">(<expr><operator pos:line="45" pos:column="11">!<pos:position pos:line="45" pos:column="12"/></operator><name pos:line="45" pos:column="12">optional<pos:position pos:line="45" pos:column="20"/></name></expr>)<pos:position pos:line="45" pos:column="21"/></condition><then pos:line="45" pos:column="21">
      <block pos:line="46" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">snprintf<pos:position pos:line="47" pos:column="17"/></name> <argument_list pos:line="47" pos:column="18">(<argument><expr><name pos:line="47" pos:column="19">fmt<pos:position pos:line="47" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="24">sizeof <argument_list pos:line="47" pos:column="31">(<argument><expr><name pos:line="47" pos:column="32">fmt<pos:position pos:line="47" pos:column="35"/></name></expr></argument>)<pos:position pos:line="47" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="38">"%%%ss"<pos:position pos:line="47" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="47">prefix<pos:position pos:line="47" pos:column="53"/></name></expr></argument>)<pos:position pos:line="47" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">snprintf<pos:position pos:line="48" pos:column="17"/></name> <argument_list pos:line="48" pos:column="18">(<argument><expr><name pos:line="48" pos:column="19">dest<pos:position pos:line="48" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="25">destlen<pos:position pos:line="48" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="34">fmt<pos:position pos:line="48" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="39">NONULL<pos:position pos:line="48" pos:column="45"/></name> <argument_list pos:line="48" pos:column="46">(<argument><expr><name><name pos:line="48" pos:column="47">cctx<pos:position pos:line="48" pos:column="51"/></name><operator pos:line="48" pos:column="51">-&gt;<pos:position pos:line="48" pos:column="56"/></operator><name pos:line="48" pos:column="53">sig_fname<pos:position pos:line="48" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="65"/></expr_stmt>
      }<pos:position pos:line="49" pos:column="8"/></block></then>
      <elseif pos:line="50" pos:column="7">else <if pos:line="50" pos:column="12">if <condition pos:line="50" pos:column="15">(<expr><operator pos:line="50" pos:column="16">!<pos:position pos:line="50" pos:column="17"/></operator><name><name pos:line="50" pos:column="17">cctx<pos:position pos:line="50" pos:column="21"/></name><operator pos:line="50" pos:column="21">-&gt;<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="23">sig_fname<pos:position pos:line="50" pos:column="32"/></name></name></expr>)<pos:position pos:line="50" pos:column="33"/></condition><then pos:line="50" pos:column="33">
	<block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="9">optional<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">=<pos:position pos:line="51" pos:column="19"/></operator> <literal type="number" pos:line="51" pos:column="20">0<pos:position pos:line="51" pos:column="21"/></literal></expr>;<pos:position pos:line="51" pos:column="22"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="52" pos:column="7">break;<pos:position pos:line="52" pos:column="13"/></break>
    }<pos:position pos:line="53" pos:column="6"/></block>
    
    <case pos:line="55" pos:column="5">case <expr><literal type="char" pos:line="55" pos:column="10">'f'<pos:position pos:line="55" pos:column="13"/></literal></expr>:<pos:position pos:line="55" pos:column="14"/></case>
    <block pos:line="56" pos:column="5">{
      <if pos:line="57" pos:column="7">if <condition pos:line="57" pos:column="10">(<expr><operator pos:line="57" pos:column="11">!<pos:position pos:line="57" pos:column="12"/></operator><name pos:line="57" pos:column="12">optional<pos:position pos:line="57" pos:column="20"/></name></expr>)<pos:position pos:line="57" pos:column="21"/></condition><then pos:line="57" pos:column="21">
      <block pos:line="58" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="59" pos:column="9">snprintf<pos:position pos:line="59" pos:column="17"/></name> <argument_list pos:line="59" pos:column="18">(<argument><expr><name pos:line="59" pos:column="19">fmt<pos:position pos:line="59" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="59" pos:column="24">sizeof <argument_list pos:line="59" pos:column="31">(<argument><expr><name pos:line="59" pos:column="32">fmt<pos:position pos:line="59" pos:column="35"/></name></expr></argument>)<pos:position pos:line="59" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="38">"%%%ss"<pos:position pos:line="59" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="47">prefix<pos:position pos:line="59" pos:column="53"/></name></expr></argument>)<pos:position pos:line="59" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="60" pos:column="9">snprintf<pos:position pos:line="60" pos:column="17"/></name> <argument_list pos:line="60" pos:column="18">(<argument><expr><name pos:line="60" pos:column="19">dest<pos:position pos:line="60" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="25">destlen<pos:position pos:line="60" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="34">fmt<pos:position pos:line="60" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="60" pos:column="39">NONULL<pos:position pos:line="60" pos:column="45"/></name> <argument_list pos:line="60" pos:column="46">(<argument><expr><name><name pos:line="60" pos:column="47">cctx<pos:position pos:line="60" pos:column="51"/></name><operator pos:line="60" pos:column="51">-&gt;<pos:position pos:line="60" pos:column="56"/></operator><name pos:line="60" pos:column="53">fname<pos:position pos:line="60" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="61"/></expr_stmt>
      }<pos:position pos:line="61" pos:column="8"/></block></then>
      <elseif pos:line="62" pos:column="7">else <if pos:line="62" pos:column="12">if <condition pos:line="62" pos:column="15">(<expr><operator pos:line="62" pos:column="16">!<pos:position pos:line="62" pos:column="17"/></operator><name><name pos:line="62" pos:column="17">cctx<pos:position pos:line="62" pos:column="21"/></name><operator pos:line="62" pos:column="21">-&gt;<pos:position pos:line="62" pos:column="26"/></operator><name pos:line="62" pos:column="23">fname<pos:position pos:line="62" pos:column="28"/></name></name></expr>)<pos:position pos:line="62" pos:column="29"/></condition><then pos:line="62" pos:column="29">
	<block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="9">optional<pos:position pos:line="63" pos:column="17"/></name> <operator pos:line="63" pos:column="18">=<pos:position pos:line="63" pos:column="19"/></operator> <literal type="number" pos:line="63" pos:column="20">0<pos:position pos:line="63" pos:column="21"/></literal></expr>;<pos:position pos:line="63" pos:column="22"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="64" pos:column="7">break;<pos:position pos:line="64" pos:column="13"/></break>
    }<pos:position pos:line="65" pos:column="6"/></block>
    
    <case pos:line="67" pos:column="5">case <expr><literal type="char" pos:line="67" pos:column="10">'p'<pos:position pos:line="67" pos:column="13"/></literal></expr>:<pos:position pos:line="67" pos:column="14"/></case>
    <block pos:line="68" pos:column="5">{
      <if pos:line="69" pos:column="7">if <condition pos:line="69" pos:column="10">(<expr><operator pos:line="69" pos:column="11">!<pos:position pos:line="69" pos:column="12"/></operator><name pos:line="69" pos:column="12">optional<pos:position pos:line="69" pos:column="20"/></name></expr>)<pos:position pos:line="69" pos:column="21"/></condition><then pos:line="69" pos:column="21">
      <block pos:line="70" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="71" pos:column="9">snprintf<pos:position pos:line="71" pos:column="17"/></name> <argument_list pos:line="71" pos:column="18">(<argument><expr><name pos:line="71" pos:column="19">fmt<pos:position pos:line="71" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="71" pos:column="24">sizeof <argument_list pos:line="71" pos:column="31">(<argument><expr><name pos:line="71" pos:column="32">fmt<pos:position pos:line="71" pos:column="35"/></name></expr></argument>)<pos:position pos:line="71" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="38">"%%%ss"<pos:position pos:line="71" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="47">prefix<pos:position pos:line="71" pos:column="53"/></name></expr></argument>)<pos:position pos:line="71" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="72" pos:column="9">snprintf<pos:position pos:line="72" pos:column="17"/></name> <argument_list pos:line="72" pos:column="18">(<argument><expr><name pos:line="72" pos:column="19">dest<pos:position pos:line="72" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="25">destlen<pos:position pos:line="72" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="34">fmt<pos:position pos:line="72" pos:column="37"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="72" pos:column="39">cctx<pos:position pos:line="72" pos:column="43"/></name><operator pos:line="72" pos:column="43">-&gt;<pos:position pos:line="72" pos:column="48"/></operator><name pos:line="72" pos:column="45">need_passphrase<pos:position pos:line="72" pos:column="60"/></name></name></expr> ?<pos:position pos:line="72" pos:column="62"/></condition><then pos:line="72" pos:column="62"> <expr><literal type="string" pos:line="72" pos:column="63">"PGPPASSFD=0"<pos:position pos:line="72" pos:column="76"/></literal></expr> <pos:position pos:line="72" pos:column="77"/></then><else pos:line="72" pos:column="77">: <expr><literal type="string" pos:line="72" pos:column="79">""<pos:position pos:line="72" pos:column="81"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="72" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="83"/></expr_stmt>
      }<pos:position pos:line="73" pos:column="8"/></block></then>
      <elseif pos:line="74" pos:column="7">else <if pos:line="74" pos:column="12">if <condition pos:line="74" pos:column="15">(<expr><operator pos:line="74" pos:column="16">!<pos:position pos:line="74" pos:column="17"/></operator><name><name pos:line="74" pos:column="17">cctx<pos:position pos:line="74" pos:column="21"/></name><operator pos:line="74" pos:column="21">-&gt;<pos:position pos:line="74" pos:column="26"/></operator><name pos:line="74" pos:column="23">need_passphrase<pos:position pos:line="74" pos:column="38"/></name></name> <operator pos:line="74" pos:column="39">||<pos:position pos:line="74" pos:column="41"/></operator> <call><name pos:line="74" pos:column="42">pgp_use_gpg_agent<pos:position pos:line="74" pos:column="59"/></name><argument_list pos:line="74" pos:column="59">()<pos:position pos:line="74" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="74" pos:column="62"/></condition><then pos:line="74" pos:column="62">
	<block type="pseudo"><expr_stmt><expr><name pos:line="75" pos:column="9">optional<pos:position pos:line="75" pos:column="17"/></name> <operator pos:line="75" pos:column="18">=<pos:position pos:line="75" pos:column="19"/></operator> <literal type="number" pos:line="75" pos:column="20">0<pos:position pos:line="75" pos:column="21"/></literal></expr>;<pos:position pos:line="75" pos:column="22"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="76" pos:column="7">break;<pos:position pos:line="76" pos:column="13"/></break>
    }<pos:position pos:line="77" pos:column="6"/></block>
    <default pos:line="78" pos:column="5">default:<pos:position pos:line="78" pos:column="13"/></default>
    <block pos:line="79" pos:column="5">{
      <expr_stmt><expr><operator pos:line="80" pos:column="7">*<pos:position pos:line="80" pos:column="8"/></operator><name pos:line="80" pos:column="8">dest<pos:position pos:line="80" pos:column="12"/></name> <operator pos:line="80" pos:column="13">=<pos:position pos:line="80" pos:column="14"/></operator> <literal type="char" pos:line="80" pos:column="15">'\0'<pos:position pos:line="80" pos:column="19"/></literal></expr>;<pos:position pos:line="80" pos:column="20"/></expr_stmt>
      <break pos:line="81" pos:column="7">break;<pos:position pos:line="81" pos:column="13"/></break>
    }<pos:position pos:line="82" pos:column="6"/></block>
  }<pos:position pos:line="83" pos:column="4"/></block></switch>

  <if pos:line="85" pos:column="3">if <condition pos:line="85" pos:column="6">(<expr><name pos:line="85" pos:column="7">optional<pos:position pos:line="85" pos:column="15"/></name></expr>)<pos:position pos:line="85" pos:column="16"/></condition><then pos:line="85" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="5">mutt_FormatString<pos:position pos:line="86" pos:column="22"/></name> <argument_list pos:line="86" pos:column="23">(<argument><expr><name pos:line="86" pos:column="24">dest<pos:position pos:line="86" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="30">destlen<pos:position pos:line="86" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="39">col<pos:position pos:line="86" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="44">cols<pos:position pos:line="86" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="50">ifstring<pos:position pos:line="86" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="60">_mutt_fmt_pgp_command<pos:position pos:line="86" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="83">data<pos:position pos:line="86" pos:column="87"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="86" pos:column="89">0<pos:position pos:line="86" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="92"/></expr_stmt></block></then>
  <elseif pos:line="87" pos:column="3">else <if pos:line="87" pos:column="8">if <condition pos:line="87" pos:column="11">(<expr><name pos:line="87" pos:column="12">flags<pos:position pos:line="87" pos:column="17"/></name> <operator pos:line="87" pos:column="18">&amp;<pos:position pos:line="87" pos:column="23"/></operator> <name pos:line="87" pos:column="20">MUTT_FORMAT_OPTIONAL<pos:position pos:line="87" pos:column="40"/></name></expr>)<pos:position pos:line="87" pos:column="41"/></condition><then pos:line="87" pos:column="41">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="88" pos:column="5">mutt_FormatString<pos:position pos:line="88" pos:column="22"/></name> <argument_list pos:line="88" pos:column="23">(<argument><expr><name pos:line="88" pos:column="24">dest<pos:position pos:line="88" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="30">destlen<pos:position pos:line="88" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="39">col<pos:position pos:line="88" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="44">cols<pos:position pos:line="88" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="50">elsestring<pos:position pos:line="88" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="62">_mutt_fmt_pgp_command<pos:position pos:line="88" pos:column="83"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="85">data<pos:position pos:line="88" pos:column="89"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="88" pos:column="91">0<pos:position pos:line="88" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="94"/></expr_stmt></block></then></if></elseif></if>

  <return pos:line="90" pos:column="3">return <expr><operator pos:line="90" pos:column="10">(<pos:position pos:line="90" pos:column="11"/></operator><name pos:line="90" pos:column="11">src<pos:position pos:line="90" pos:column="14"/></name><operator pos:line="90" pos:column="14">)<pos:position pos:line="90" pos:column="15"/></operator></expr>;<pos:position pos:line="90" pos:column="16"/></return>
}<pos:position pos:line="91" pos:column="2"/></block></function></unit>

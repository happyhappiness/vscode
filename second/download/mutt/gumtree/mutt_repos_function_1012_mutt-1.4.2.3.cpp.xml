<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1012_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mh_buffy<pos:position pos:line="1" pos:column="13"/></name> <parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><specifier pos:line="1" pos:column="15">const<pos:position pos:line="1" pos:column="20"/></specifier> <name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">path<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="10">r<pos:position pos:line="3" pos:column="11"/></name> <init pos:line="3" pos:column="12">= <expr><literal type="number" pos:line="3" pos:column="14">0<pos:position pos:line="3" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">mh_sequences<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">mhs<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">memset<pos:position pos:line="5" pos:column="9"/></name> <argument_list pos:line="5" pos:column="10">(<argument><expr><operator pos:line="5" pos:column="11">&amp;<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="12">mhs<pos:position pos:line="5" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="17">0<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="20">sizeof <argument_list pos:line="5" pos:column="27">(<argument><expr><name pos:line="5" pos:column="28">mhs<pos:position pos:line="5" pos:column="31"/></name></expr></argument>)<pos:position pos:line="5" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="34"/></expr_stmt>
  
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">mh_read_sequences<pos:position pos:line="7" pos:column="20"/></name> <argument_list pos:line="7" pos:column="21">(<argument><expr><operator pos:line="7" pos:column="22">&amp;<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="23">mhs<pos:position pos:line="7" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="28">path<pos:position pos:line="7" pos:column="32"/></name></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt>
  <for pos:line="8" pos:column="3">for <control pos:line="8" pos:column="7">(<init><expr><name pos:line="8" pos:column="8">i<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <literal type="number" pos:line="8" pos:column="12">0<pos:position pos:line="8" pos:column="13"/></literal></expr>;<pos:position pos:line="8" pos:column="14"/></init> <condition><expr><operator pos:line="8" pos:column="15">!<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">r<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">&amp;&amp;<pos:position pos:line="8" pos:column="28"/></operator> <name pos:line="8" pos:column="21">i<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">&lt;=<pos:position pos:line="8" pos:column="28"/></operator> <name><name pos:line="8" pos:column="26">mhs<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">.<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="30">max<pos:position pos:line="8" pos:column="33"/></name></name></expr>;<pos:position pos:line="8" pos:column="34"/></condition> <incr><expr><name pos:line="8" pos:column="35">i<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">++<pos:position pos:line="8" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="39"/></control>
    <block type="pseudo"><if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">mhs_check<pos:position pos:line="9" pos:column="18"/></name> <argument_list pos:line="9" pos:column="19">(<argument><expr><operator pos:line="9" pos:column="20">&amp;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="21">mhs<pos:position pos:line="9" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="26">i<pos:position pos:line="9" pos:column="27"/></name></expr></argument>)<pos:position pos:line="9" pos:column="28"/></argument_list></call> <operator pos:line="9" pos:column="29">&amp;<pos:position pos:line="9" pos:column="34"/></operator> <name pos:line="9" pos:column="31">MH_SEQ_UNSEEN<pos:position pos:line="9" pos:column="44"/></name></expr>)<pos:position pos:line="9" pos:column="45"/></condition><then pos:line="9" pos:column="45">
      <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="7">r<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <literal type="number" pos:line="10" pos:column="11">1<pos:position pos:line="10" pos:column="12"/></literal></expr>;<pos:position pos:line="10" pos:column="13"/></expr_stmt></block></then></if></block></for>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">mhs_free_sequences<pos:position pos:line="11" pos:column="21"/></name> <argument_list pos:line="11" pos:column="22">(<argument><expr><operator pos:line="11" pos:column="23">&amp;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="24">mhs<pos:position pos:line="11" pos:column="27"/></name></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>
  <return pos:line="12" pos:column="3">return <expr><name pos:line="12" pos:column="10">r<pos:position pos:line="12" pos:column="11"/></name></expr>;<pos:position pos:line="12" pos:column="12"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_function_127.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name> <parameter_list pos:line="1" pos:column="10">(<parameter><decl><type><name pos:line="1" pos:column="11">int<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">argc<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier><modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">argv<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">folder<pos:position pos:line="3" pos:column="14"/></name><index pos:line="3" pos:column="14">[<expr><name pos:line="3" pos:column="15">_POSIX_PATH_MAX<pos:position pos:line="3" pos:column="30"/></name></expr>]<pos:position pos:line="3" pos:column="31"/></index></name> <init pos:line="3" pos:column="32">= <expr><literal type="string" pos:line="3" pos:column="34">""<pos:position pos:line="3" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">subject<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name pos:line="4" pos:column="19">NULL<pos:position pos:line="4" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">includeFile<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name pos:line="5" pos:column="23">NULL<pos:position pos:line="5" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">draftFile<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">NULL<pos:position pos:line="6" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">newMagic<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><name pos:line="7" pos:column="20">NULL<pos:position pos:line="7" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">HEADER<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">msg<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><name pos:line="8" pos:column="17">NULL<pos:position pos:line="8" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">LIST<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">attach<pos:position pos:line="9" pos:column="15"/></name> <init pos:line="9" pos:column="16">= <expr><name pos:line="9" pos:column="18">NULL<pos:position pos:line="9" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">LIST<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">commands<pos:position pos:line="10" pos:column="17"/></name> <init pos:line="10" pos:column="18">= <expr><name pos:line="10" pos:column="20">NULL<pos:position pos:line="10" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">LIST<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">queries<pos:position pos:line="11" pos:column="16"/></name> <init pos:line="11" pos:column="17">= <expr><name pos:line="11" pos:column="19">NULL<pos:position pos:line="11" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">LIST<pos:position pos:line="12" pos:column="7"/></name> <modifier pos:line="12" pos:column="8">*<pos:position pos:line="12" pos:column="9"/></modifier></type><name pos:line="12" pos:column="9">alias_queries<pos:position pos:line="12" pos:column="22"/></name> <init pos:line="12" pos:column="23">= <expr><name pos:line="12" pos:column="25">NULL<pos:position pos:line="12" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type> <name pos:line="13" pos:column="7">sendflags<pos:position pos:line="13" pos:column="16"/></name> <init pos:line="13" pos:column="17">= <expr><literal type="number" pos:line="13" pos:column="19">0<pos:position pos:line="13" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">flags<pos:position pos:line="14" pos:column="12"/></name> <init pos:line="14" pos:column="13">= <expr><literal type="number" pos:line="14" pos:column="15">0<pos:position pos:line="14" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type> <name pos:line="15" pos:column="7">version<pos:position pos:line="15" pos:column="14"/></name> <init pos:line="15" pos:column="15">= <expr><literal type="number" pos:line="15" pos:column="17">0<pos:position pos:line="15" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">int<pos:position pos:line="16" pos:column="6"/></name></type> <name pos:line="16" pos:column="7">i<pos:position pos:line="16" pos:column="8"/></name></decl>;<pos:position pos:line="16" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">int<pos:position pos:line="17" pos:column="6"/></name></type> <name pos:line="17" pos:column="7">explicit_folder<pos:position pos:line="17" pos:column="22"/></name> <init pos:line="17" pos:column="23">= <expr><literal type="number" pos:line="17" pos:column="25">0<pos:position pos:line="17" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">int<pos:position pos:line="18" pos:column="6"/></name></type> <name pos:line="18" pos:column="7">dump_variables<pos:position pos:line="18" pos:column="21"/></name> <init pos:line="18" pos:column="22">= <expr><literal type="number" pos:line="18" pos:column="24">0<pos:position pos:line="18" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">int<pos:position pos:line="19" pos:column="6"/></name></type> <name pos:line="19" pos:column="7">edit_infile<pos:position pos:line="19" pos:column="18"/></name> <init pos:line="19" pos:column="19">= <expr><literal type="number" pos:line="19" pos:column="21">0<pos:position pos:line="19" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="20" pos:column="3">extern<pos:position pos:line="20" pos:column="9"/></specifier> <type><name pos:line="20" pos:column="10">char<pos:position pos:line="20" pos:column="14"/></name> <modifier pos:line="20" pos:column="15">*<pos:position pos:line="20" pos:column="16"/></modifier></type><name pos:line="20" pos:column="16">optarg<pos:position pos:line="20" pos:column="22"/></name></decl>;<pos:position pos:line="20" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="21" pos:column="3">extern<pos:position pos:line="21" pos:column="9"/></specifier> <type><name pos:line="21" pos:column="10">int<pos:position pos:line="21" pos:column="13"/></name></type> <name pos:line="21" pos:column="14">optind<pos:position pos:line="21" pos:column="20"/></name></decl>;<pos:position pos:line="21" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="22" pos:column="3">int<pos:position pos:line="22" pos:column="6"/></name></type> <name pos:line="22" pos:column="7">double_dash<pos:position pos:line="22" pos:column="18"/></name> <init pos:line="22" pos:column="19">= <expr><name pos:line="22" pos:column="21">argc<pos:position pos:line="22" pos:column="25"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="22" pos:column="27">nargc<pos:position pos:line="22" pos:column="32"/></name> <init pos:line="22" pos:column="33">= <expr><literal type="number" pos:line="22" pos:column="35">1<pos:position pos:line="22" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="37"/></decl_stmt>

  <comment type="block" pos:line="24" pos:column="3">/* sanity check against stupid administrators */</comment>
  
  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">(<expr><call><name pos:line="26" pos:column="6">getegid<pos:position pos:line="26" pos:column="13"/></name><argument_list pos:line="26" pos:column="13">()<pos:position pos:line="26" pos:column="15"/></argument_list></call> <operator pos:line="26" pos:column="16">!=<pos:position pos:line="26" pos:column="18"/></operator> <call><name pos:line="26" pos:column="19">getgid<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">()<pos:position pos:line="26" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="28"/></condition><then pos:line="26" pos:column="28">
  <block pos:line="27" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">fprintf<pos:position pos:line="28" pos:column="12"/></name><argument_list pos:line="28" pos:column="12">(<argument><expr><name pos:line="28" pos:column="13">stderr<pos:position pos:line="28" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="21">"%s: I don't want to run with privileges!\n"<pos:position pos:line="28" pos:column="65"/></literal></expr></argument>,
	    <argument><expr><name><name pos:line="29" pos:column="13">argv<pos:position pos:line="29" pos:column="17"/></name><index pos:line="29" pos:column="17">[<expr><literal type="number" pos:line="29" pos:column="18">0<pos:position pos:line="29" pos:column="19"/></literal></expr>]<pos:position pos:line="29" pos:column="20"/></index></name></expr></argument>)<pos:position pos:line="29" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">exit<pos:position pos:line="30" pos:column="9"/></name><argument_list pos:line="30" pos:column="9">(<argument><expr><literal type="number" pos:line="30" pos:column="10">1<pos:position pos:line="30" pos:column="11"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifdef<pos:position pos:line="33" pos:column="7"/></cpp:directive> <name pos:line="33" pos:column="8">ENABLE_NLS<pos:position pos:line="33" pos:column="18"/></name></cpp:ifdef>
  <comment type="block" pos:line="34" pos:column="3">/* FIXME what about init.c:1439 ? */</comment>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">setlocale<pos:position pos:line="35" pos:column="12"/></name> <argument_list pos:line="35" pos:column="13">(<argument><expr><name pos:line="35" pos:column="14">LC_ALL<pos:position pos:line="35" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="22">""<pos:position pos:line="35" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">bindtextdomain<pos:position pos:line="36" pos:column="17"/></name> <argument_list pos:line="36" pos:column="18">(<argument><expr><name pos:line="36" pos:column="19">PACKAGE<pos:position pos:line="36" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="28">MUTTLOCALEDIR<pos:position pos:line="36" pos:column="41"/></name></expr></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">textdomain<pos:position pos:line="37" pos:column="13"/></name> <argument_list pos:line="37" pos:column="14">(<argument><expr><name pos:line="37" pos:column="15">PACKAGE<pos:position pos:line="37" pos:column="22"/></name></expr></argument>)<pos:position pos:line="37" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="24"/></expr_stmt>
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif<pos:position pos:line="38" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="40" pos:column="3">setlocale<pos:position pos:line="40" pos:column="12"/></name> <argument_list pos:line="40" pos:column="13">(<argument><expr><name pos:line="40" pos:column="14">LC_CTYPE<pos:position pos:line="40" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="24">""<pos:position pos:line="40" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><name pos:line="42" pos:column="3">mutt_error<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">=<pos:position pos:line="42" pos:column="15"/></operator> <name pos:line="42" pos:column="16">mutt_nocurses_error<pos:position pos:line="42" pos:column="35"/></name></expr>;<pos:position pos:line="42" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name pos:line="43" pos:column="3">mutt_message<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <name pos:line="43" pos:column="18">mutt_nocurses_error<pos:position pos:line="43" pos:column="37"/></name></expr>;<pos:position pos:line="43" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">SRAND<pos:position pos:line="44" pos:column="8"/></name> <argument_list pos:line="44" pos:column="9">(<argument><expr><call><name pos:line="44" pos:column="10">time<pos:position pos:line="44" pos:column="14"/></name> <argument_list pos:line="44" pos:column="15">(<argument><expr><name pos:line="44" pos:column="16">NULL<pos:position pos:line="44" pos:column="20"/></name></expr></argument>)<pos:position pos:line="44" pos:column="21"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">umask<pos:position pos:line="45" pos:column="8"/></name> <argument_list pos:line="45" pos:column="9">(<argument><expr><literal type="number" pos:line="45" pos:column="10">077<pos:position pos:line="45" pos:column="13"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="15"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="47" pos:column="3">memset<pos:position pos:line="47" pos:column="9"/></name> <argument_list pos:line="47" pos:column="10">(<argument><expr><name pos:line="47" pos:column="11">Options<pos:position pos:line="47" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="20">0<pos:position pos:line="47" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="23">sizeof <argument_list pos:line="47" pos:column="30">(<argument><expr><name pos:line="47" pos:column="31">Options<pos:position pos:line="47" pos:column="38"/></name></expr></argument>)<pos:position pos:line="47" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="47" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="48" pos:column="3">memset<pos:position pos:line="48" pos:column="9"/></name> <argument_list pos:line="48" pos:column="10">(<argument><expr><name pos:line="48" pos:column="11">QuadOptions<pos:position pos:line="48" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="24">0<pos:position pos:line="48" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="27">sizeof <argument_list pos:line="48" pos:column="34">(<argument><expr><name pos:line="48" pos:column="35">QuadOptions<pos:position pos:line="48" pos:column="46"/></name></expr></argument>)<pos:position pos:line="48" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="48" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="49"/></expr_stmt>

  <for pos:line="50" pos:column="3">for <control pos:line="50" pos:column="7">(<init><expr><name pos:line="50" pos:column="8">optind<pos:position pos:line="50" pos:column="14"/></name> <operator pos:line="50" pos:column="15">=<pos:position pos:line="50" pos:column="16"/></operator> <literal type="number" pos:line="50" pos:column="17">1<pos:position pos:line="50" pos:column="18"/></literal></expr>;<pos:position pos:line="50" pos:column="19"/></init> <condition><expr><name pos:line="50" pos:column="20">optind<pos:position pos:line="50" pos:column="26"/></name> <operator pos:line="50" pos:column="27">&lt;<pos:position pos:line="50" pos:column="31"/></operator> <name pos:line="50" pos:column="29">double_dash<pos:position pos:line="50" pos:column="40"/></name></expr>;<pos:position pos:line="50" pos:column="41"/></condition> <incr/>)<pos:position pos:line="50" pos:column="43"/></control>
  <block pos:line="51" pos:column="3">{
    <comment type="block" pos:line="52" pos:column="5">/* We're getopt'ing POSIXLY, so we'll be here every time getopt()
     * encounters a non-option.  That could be a file to attach 
     * (all non-options between -a and --) or it could be an address
     * (which gets collapsed to the front of argv).
     */</comment>
    <for pos:line="57" pos:column="5">for <control pos:line="57" pos:column="9">(<init pos:line="57" pos:column="10">;<pos:position pos:line="57" pos:column="11"/></init> <condition><expr><name pos:line="57" pos:column="12">optind<pos:position pos:line="57" pos:column="18"/></name> <operator pos:line="57" pos:column="19">&lt;<pos:position pos:line="57" pos:column="23"/></operator> <name pos:line="57" pos:column="21">argc<pos:position pos:line="57" pos:column="25"/></name></expr>;<pos:position pos:line="57" pos:column="26"/></condition> <incr><expr><name pos:line="57" pos:column="27">optind<pos:position pos:line="57" pos:column="33"/></name><operator pos:line="57" pos:column="33">++<pos:position pos:line="57" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="57" pos:column="36"/></control>
    <block pos:line="58" pos:column="5">{
      <if pos:line="59" pos:column="7">if <condition pos:line="59" pos:column="10">(<expr><name><name pos:line="59" pos:column="11">argv<pos:position pos:line="59" pos:column="15"/></name><index pos:line="59" pos:column="15">[<expr><name pos:line="59" pos:column="16">optind<pos:position pos:line="59" pos:column="22"/></name></expr>]<pos:position pos:line="59" pos:column="23"/></index><index pos:line="59" pos:column="23">[<expr><literal type="number" pos:line="59" pos:column="24">0<pos:position pos:line="59" pos:column="25"/></literal></expr>]<pos:position pos:line="59" pos:column="26"/></index></name> <operator pos:line="59" pos:column="27">==<pos:position pos:line="59" pos:column="29"/></operator> <literal type="char" pos:line="59" pos:column="30">'-'<pos:position pos:line="59" pos:column="33"/></literal> <operator pos:line="59" pos:column="34">&amp;&amp;<pos:position pos:line="59" pos:column="44"/></operator> <name><name pos:line="59" pos:column="37">argv<pos:position pos:line="59" pos:column="41"/></name><index pos:line="59" pos:column="41">[<expr><name pos:line="59" pos:column="42">optind<pos:position pos:line="59" pos:column="48"/></name></expr>]<pos:position pos:line="59" pos:column="49"/></index><index pos:line="59" pos:column="49">[<expr><literal type="number" pos:line="59" pos:column="50">1<pos:position pos:line="59" pos:column="51"/></literal></expr>]<pos:position pos:line="59" pos:column="52"/></index></name> <operator pos:line="59" pos:column="53">!=<pos:position pos:line="59" pos:column="55"/></operator> <literal type="char" pos:line="59" pos:column="56">'\0'<pos:position pos:line="59" pos:column="60"/></literal></expr>)<pos:position pos:line="59" pos:column="61"/></condition><then pos:line="59" pos:column="61">
      <block pos:line="60" pos:column="7">{
        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name><name pos:line="61" pos:column="13">argv<pos:position pos:line="61" pos:column="17"/></name><index pos:line="61" pos:column="17">[<expr><name pos:line="61" pos:column="18">optind<pos:position pos:line="61" pos:column="24"/></name></expr>]<pos:position pos:line="61" pos:column="25"/></index><index pos:line="61" pos:column="25">[<expr><literal type="number" pos:line="61" pos:column="26">1<pos:position pos:line="61" pos:column="27"/></literal></expr>]<pos:position pos:line="61" pos:column="28"/></index></name> <operator pos:line="61" pos:column="29">==<pos:position pos:line="61" pos:column="31"/></operator> <literal type="char" pos:line="61" pos:column="32">'-'<pos:position pos:line="61" pos:column="35"/></literal> <operator pos:line="61" pos:column="36">&amp;&amp;<pos:position pos:line="61" pos:column="46"/></operator> <name><name pos:line="61" pos:column="39">argv<pos:position pos:line="61" pos:column="43"/></name><index pos:line="61" pos:column="43">[<expr><name pos:line="61" pos:column="44">optind<pos:position pos:line="61" pos:column="50"/></name></expr>]<pos:position pos:line="61" pos:column="51"/></index><index pos:line="61" pos:column="51">[<expr><literal type="number" pos:line="61" pos:column="52">2<pos:position pos:line="61" pos:column="53"/></literal></expr>]<pos:position pos:line="61" pos:column="54"/></index></name> <operator pos:line="61" pos:column="55">==<pos:position pos:line="61" pos:column="57"/></operator> <literal type="char" pos:line="61" pos:column="58">'\0'<pos:position pos:line="61" pos:column="62"/></literal></expr>)<pos:position pos:line="61" pos:column="63"/></condition><then pos:line="61" pos:column="63">
          <block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="11">double_dash<pos:position pos:line="62" pos:column="22"/></name> <operator pos:line="62" pos:column="23">=<pos:position pos:line="62" pos:column="24"/></operator> <name pos:line="62" pos:column="25">optind<pos:position pos:line="62" pos:column="31"/></name></expr>;<pos:position pos:line="62" pos:column="32"/></expr_stmt></block></then></if> <comment type="block" pos:line="62" pos:column="33">/* quit outer loop after getopt */</comment>
        <break pos:line="63" pos:column="9">break;<pos:position pos:line="63" pos:column="15"/></break>                  <comment type="block" pos:line="63" pos:column="33">/* drop through to getopt */</comment>
      }<pos:position pos:line="64" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="66" pos:column="7">/* non-option, either an attachment or address */</comment>
      <if pos:line="67" pos:column="7">if <condition pos:line="67" pos:column="10">(<expr><name pos:line="67" pos:column="11">attach<pos:position pos:line="67" pos:column="17"/></name></expr>)<pos:position pos:line="67" pos:column="18"/></condition><then pos:line="67" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><name pos:line="68" pos:column="9">attach<pos:position pos:line="68" pos:column="15"/></name> <operator pos:line="68" pos:column="16">=<pos:position pos:line="68" pos:column="17"/></operator> <call><name pos:line="68" pos:column="18">mutt_add_list<pos:position pos:line="68" pos:column="31"/></name> <argument_list pos:line="68" pos:column="32">(<argument><expr><name pos:line="68" pos:column="33">attach<pos:position pos:line="68" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="41">argv<pos:position pos:line="68" pos:column="45"/></name><index pos:line="68" pos:column="45">[<expr><name pos:line="68" pos:column="46">optind<pos:position pos:line="68" pos:column="52"/></name></expr>]<pos:position pos:line="68" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="68" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="55"/></expr_stmt></block></then>
      <else pos:line="69" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="70" pos:column="9">argv<pos:position pos:line="70" pos:column="13"/></name><index pos:line="70" pos:column="13">[<expr><name pos:line="70" pos:column="14">nargc<pos:position pos:line="70" pos:column="19"/></name><operator pos:line="70" pos:column="19">++<pos:position pos:line="70" pos:column="21"/></operator></expr>]<pos:position pos:line="70" pos:column="22"/></index></name> <operator pos:line="70" pos:column="23">=<pos:position pos:line="70" pos:column="24"/></operator> <name><name pos:line="70" pos:column="25">argv<pos:position pos:line="70" pos:column="29"/></name><index pos:line="70" pos:column="29">[<expr><name pos:line="70" pos:column="30">optind<pos:position pos:line="70" pos:column="36"/></name></expr>]<pos:position pos:line="70" pos:column="37"/></index></name></expr>;<pos:position pos:line="70" pos:column="38"/></expr_stmt></block></else></if>
    }<pos:position pos:line="71" pos:column="6"/></block></for>

    <if pos:line="73" pos:column="5">if <condition pos:line="73" pos:column="8">(<expr><operator pos:line="73" pos:column="9">(<pos:position pos:line="73" pos:column="10"/></operator><name pos:line="73" pos:column="10">i<pos:position pos:line="73" pos:column="11"/></name> <operator pos:line="73" pos:column="12">=<pos:position pos:line="73" pos:column="13"/></operator> <call><name pos:line="73" pos:column="14">getopt<pos:position pos:line="73" pos:column="20"/></name> <argument_list pos:line="73" pos:column="21">(<argument><expr><name pos:line="73" pos:column="22">argc<pos:position pos:line="73" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="28">argv<pos:position pos:line="73" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="34">"+A:a:b:F:f:c:Dd:Ee:H:s:i:hm:npQ:RvxyzZ"<pos:position pos:line="73" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="75"/></argument_list></call><operator pos:line="73" pos:column="75">)<pos:position pos:line="73" pos:column="76"/></operator> <operator pos:line="73" pos:column="77">!=<pos:position pos:line="73" pos:column="79"/></operator> <name pos:line="73" pos:column="80">EOF<pos:position pos:line="73" pos:column="83"/></name></expr>)<pos:position pos:line="73" pos:column="84"/></condition><then pos:line="73" pos:column="84">
      <block type="pseudo"><switch pos:line="74" pos:column="7">switch <condition pos:line="74" pos:column="14">(<expr><name pos:line="74" pos:column="15">i<pos:position pos:line="74" pos:column="16"/></name></expr>)<pos:position pos:line="74" pos:column="17"/></condition>
      <block pos:line="75" pos:column="7">{
      <case pos:line="76" pos:column="7">case <expr><literal type="char" pos:line="76" pos:column="12">'A'<pos:position pos:line="76" pos:column="15"/></literal></expr>:<pos:position pos:line="76" pos:column="16"/></case>
        <expr_stmt><expr><name pos:line="77" pos:column="9">alias_queries<pos:position pos:line="77" pos:column="22"/></name> <operator pos:line="77" pos:column="23">=<pos:position pos:line="77" pos:column="24"/></operator> <call><name pos:line="77" pos:column="25">mutt_add_list<pos:position pos:line="77" pos:column="38"/></name> <argument_list pos:line="77" pos:column="39">(<argument><expr><name pos:line="77" pos:column="40">alias_queries<pos:position pos:line="77" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="55">optarg<pos:position pos:line="77" pos:column="61"/></name></expr></argument>)<pos:position pos:line="77" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="63"/></expr_stmt>
        <break pos:line="78" pos:column="9">break;<pos:position pos:line="78" pos:column="15"/></break>
      <case pos:line="79" pos:column="7">case <expr><literal type="char" pos:line="79" pos:column="12">'a'<pos:position pos:line="79" pos:column="15"/></literal></expr>:<pos:position pos:line="79" pos:column="16"/></case>
	<expr_stmt><expr><name pos:line="80" pos:column="9">attach<pos:position pos:line="80" pos:column="15"/></name> <operator pos:line="80" pos:column="16">=<pos:position pos:line="80" pos:column="17"/></operator> <call><name pos:line="80" pos:column="18">mutt_add_list<pos:position pos:line="80" pos:column="31"/></name> <argument_list pos:line="80" pos:column="32">(<argument><expr><name pos:line="80" pos:column="33">attach<pos:position pos:line="80" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="41">optarg<pos:position pos:line="80" pos:column="47"/></name></expr></argument>)<pos:position pos:line="80" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="49"/></expr_stmt>
	<break pos:line="81" pos:column="9">break;<pos:position pos:line="81" pos:column="15"/></break>

      <case pos:line="83" pos:column="7">case <expr><literal type="char" pos:line="83" pos:column="12">'F'<pos:position pos:line="83" pos:column="15"/></literal></expr>:<pos:position pos:line="83" pos:column="16"/></case>
	<expr_stmt><expr><call><name pos:line="84" pos:column="9">mutt_str_replace<pos:position pos:line="84" pos:column="25"/></name> <argument_list pos:line="84" pos:column="26">(<argument><expr><operator pos:line="84" pos:column="27">&amp;<pos:position pos:line="84" pos:column="32"/></operator><name pos:line="84" pos:column="28">Muttrc<pos:position pos:line="84" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="36">optarg<pos:position pos:line="84" pos:column="42"/></name></expr></argument>)<pos:position pos:line="84" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="44"/></expr_stmt>
	<break pos:line="85" pos:column="9">break;<pos:position pos:line="85" pos:column="15"/></break>

      <case pos:line="87" pos:column="7">case <expr><literal type="char" pos:line="87" pos:column="12">'f'<pos:position pos:line="87" pos:column="15"/></literal></expr>:<pos:position pos:line="87" pos:column="16"/></case>
	<expr_stmt><expr><call><name pos:line="88" pos:column="9">strfcpy<pos:position pos:line="88" pos:column="16"/></name> <argument_list pos:line="88" pos:column="17">(<argument><expr><name pos:line="88" pos:column="18">folder<pos:position pos:line="88" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="26">optarg<pos:position pos:line="88" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="88" pos:column="34">sizeof <argument_list pos:line="88" pos:column="41">(<argument><expr><name pos:line="88" pos:column="42">folder<pos:position pos:line="88" pos:column="48"/></name></expr></argument>)<pos:position pos:line="88" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="88" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name pos:line="89" pos:column="9">explicit_folder<pos:position pos:line="89" pos:column="24"/></name> <operator pos:line="89" pos:column="25">=<pos:position pos:line="89" pos:column="26"/></operator> <literal type="number" pos:line="89" pos:column="27">1<pos:position pos:line="89" pos:column="28"/></literal></expr>;<pos:position pos:line="89" pos:column="29"/></expr_stmt>
	<break pos:line="90" pos:column="9">break;<pos:position pos:line="90" pos:column="15"/></break>

      <case pos:line="92" pos:column="7">case <expr><literal type="char" pos:line="92" pos:column="12">'b'<pos:position pos:line="92" pos:column="15"/></literal></expr>:<pos:position pos:line="92" pos:column="16"/></case>
      <case pos:line="93" pos:column="7">case <expr><literal type="char" pos:line="93" pos:column="12">'c'<pos:position pos:line="93" pos:column="15"/></literal></expr>:<pos:position pos:line="93" pos:column="16"/></case>
	<if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><operator pos:line="94" pos:column="13">!<pos:position pos:line="94" pos:column="14"/></operator><name pos:line="94" pos:column="14">msg<pos:position pos:line="94" pos:column="17"/></name></expr>)<pos:position pos:line="94" pos:column="18"/></condition><then pos:line="94" pos:column="18">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="95" pos:column="11">msg<pos:position pos:line="95" pos:column="14"/></name> <operator pos:line="95" pos:column="15">=<pos:position pos:line="95" pos:column="16"/></operator> <call><name pos:line="95" pos:column="17">mutt_new_header<pos:position pos:line="95" pos:column="32"/></name> <argument_list pos:line="95" pos:column="33">()<pos:position pos:line="95" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="36"/></expr_stmt></block></then></if>
	<if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><operator pos:line="96" pos:column="13">!<pos:position pos:line="96" pos:column="14"/></operator><name><name pos:line="96" pos:column="14">msg<pos:position pos:line="96" pos:column="17"/></name><operator pos:line="96" pos:column="17">-&gt;<pos:position pos:line="96" pos:column="22"/></operator><name pos:line="96" pos:column="19">env<pos:position pos:line="96" pos:column="22"/></name></name></expr>)<pos:position pos:line="96" pos:column="23"/></condition><then pos:line="96" pos:column="23">
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="97" pos:column="11">msg<pos:position pos:line="97" pos:column="14"/></name><operator pos:line="97" pos:column="14">-&gt;<pos:position pos:line="97" pos:column="19"/></operator><name pos:line="97" pos:column="16">env<pos:position pos:line="97" pos:column="19"/></name></name> <operator pos:line="97" pos:column="20">=<pos:position pos:line="97" pos:column="21"/></operator> <call><name pos:line="97" pos:column="22">mutt_new_envelope<pos:position pos:line="97" pos:column="39"/></name> <argument_list pos:line="97" pos:column="40">()<pos:position pos:line="97" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="43"/></expr_stmt></block></then></if>
	<if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><name pos:line="98" pos:column="13">i<pos:position pos:line="98" pos:column="14"/></name> <operator pos:line="98" pos:column="15">==<pos:position pos:line="98" pos:column="17"/></operator> <literal type="char" pos:line="98" pos:column="18">'b'<pos:position pos:line="98" pos:column="21"/></literal></expr>)<pos:position pos:line="98" pos:column="22"/></condition><then pos:line="98" pos:column="22">
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="99" pos:column="11">msg<pos:position pos:line="99" pos:column="14"/></name><operator pos:line="99" pos:column="14">-&gt;<pos:position pos:line="99" pos:column="19"/></operator><name pos:line="99" pos:column="16">env<pos:position pos:line="99" pos:column="19"/></name><operator pos:line="99" pos:column="19">-&gt;<pos:position pos:line="99" pos:column="24"/></operator><name pos:line="99" pos:column="21">bcc<pos:position pos:line="99" pos:column="24"/></name></name> <operator pos:line="99" pos:column="25">=<pos:position pos:line="99" pos:column="26"/></operator> <call><name pos:line="99" pos:column="27">rfc822_parse_adrlist<pos:position pos:line="99" pos:column="47"/></name> <argument_list pos:line="99" pos:column="48">(<argument><expr><name><name pos:line="99" pos:column="49">msg<pos:position pos:line="99" pos:column="52"/></name><operator pos:line="99" pos:column="52">-&gt;<pos:position pos:line="99" pos:column="57"/></operator><name pos:line="99" pos:column="54">env<pos:position pos:line="99" pos:column="57"/></name><operator pos:line="99" pos:column="57">-&gt;<pos:position pos:line="99" pos:column="62"/></operator><name pos:line="99" pos:column="59">bcc<pos:position pos:line="99" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="64">optarg<pos:position pos:line="99" pos:column="70"/></name></expr></argument>)<pos:position pos:line="99" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="72"/></expr_stmt></block></then>
	<else pos:line="100" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="101" pos:column="11">msg<pos:position pos:line="101" pos:column="14"/></name><operator pos:line="101" pos:column="14">-&gt;<pos:position pos:line="101" pos:column="19"/></operator><name pos:line="101" pos:column="16">env<pos:position pos:line="101" pos:column="19"/></name><operator pos:line="101" pos:column="19">-&gt;<pos:position pos:line="101" pos:column="24"/></operator><name pos:line="101" pos:column="21">cc<pos:position pos:line="101" pos:column="23"/></name></name> <operator pos:line="101" pos:column="24">=<pos:position pos:line="101" pos:column="25"/></operator> <call><name pos:line="101" pos:column="26">rfc822_parse_adrlist<pos:position pos:line="101" pos:column="46"/></name> <argument_list pos:line="101" pos:column="47">(<argument><expr><name><name pos:line="101" pos:column="48">msg<pos:position pos:line="101" pos:column="51"/></name><operator pos:line="101" pos:column="51">-&gt;<pos:position pos:line="101" pos:column="56"/></operator><name pos:line="101" pos:column="53">env<pos:position pos:line="101" pos:column="56"/></name><operator pos:line="101" pos:column="56">-&gt;<pos:position pos:line="101" pos:column="61"/></operator><name pos:line="101" pos:column="58">cc<pos:position pos:line="101" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="62">optarg<pos:position pos:line="101" pos:column="68"/></name></expr></argument>)<pos:position pos:line="101" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="70"/></expr_stmt></block></else></if>
	<break pos:line="102" pos:column="9">break;<pos:position pos:line="102" pos:column="15"/></break>

      <case pos:line="104" pos:column="7">case <expr><literal type="char" pos:line="104" pos:column="12">'D'<pos:position pos:line="104" pos:column="15"/></literal></expr>:<pos:position pos:line="104" pos:column="16"/></case>
	<expr_stmt><expr><name pos:line="105" pos:column="9">dump_variables<pos:position pos:line="105" pos:column="23"/></name> <operator pos:line="105" pos:column="24">=<pos:position pos:line="105" pos:column="25"/></operator> <literal type="number" pos:line="105" pos:column="26">1<pos:position pos:line="105" pos:column="27"/></literal></expr>;<pos:position pos:line="105" pos:column="28"/></expr_stmt>
	<break pos:line="106" pos:column="9">break;<pos:position pos:line="106" pos:column="15"/></break>

      <case pos:line="108" pos:column="7">case <expr><literal type="char" pos:line="108" pos:column="12">'d'<pos:position pos:line="108" pos:column="15"/></literal></expr>:<pos:position pos:line="108" pos:column="16"/></case>
<cpp:ifdef pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">ifdef<pos:position pos:line="109" pos:column="7"/></cpp:directive> <name pos:line="109" pos:column="8">DEBUG<pos:position pos:line="109" pos:column="13"/></name></cpp:ifdef>
	<if pos:line="110" pos:column="9">if <condition pos:line="110" pos:column="12">(<expr><call><name pos:line="110" pos:column="13">mutt_atoi<pos:position pos:line="110" pos:column="22"/></name> <argument_list pos:line="110" pos:column="23">(<argument><expr><name pos:line="110" pos:column="24">optarg<pos:position pos:line="110" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="110" pos:column="32">&amp;<pos:position pos:line="110" pos:column="37"/></operator><name pos:line="110" pos:column="33">debuglevel<pos:position pos:line="110" pos:column="43"/></name></expr></argument>)<pos:position pos:line="110" pos:column="44"/></argument_list></call> <operator pos:line="110" pos:column="45">&lt;<pos:position pos:line="110" pos:column="49"/></operator> <literal type="number" pos:line="110" pos:column="47">0<pos:position pos:line="110" pos:column="48"/></literal> <operator pos:line="110" pos:column="49">||<pos:position pos:line="110" pos:column="51"/></operator> <name pos:line="110" pos:column="52">debuglevel<pos:position pos:line="110" pos:column="62"/></name> <operator pos:line="110" pos:column="63">&lt;=<pos:position pos:line="110" pos:column="68"/></operator> <literal type="number" pos:line="110" pos:column="66">0<pos:position pos:line="110" pos:column="67"/></literal></expr>)<pos:position pos:line="110" pos:column="68"/></condition><then pos:line="110" pos:column="68">
	<block pos:line="111" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="112" pos:column="11">fprintf<pos:position pos:line="112" pos:column="18"/></name> <argument_list pos:line="112" pos:column="19">(<argument><expr><name pos:line="112" pos:column="20">stderr<pos:position pos:line="112" pos:column="26"/></name></expr></argument>, <argument><expr><call><name pos:line="112" pos:column="28">_<pos:position pos:line="112" pos:column="29"/></name><argument_list pos:line="112" pos:column="29">(<argument><expr><literal type="string" pos:line="112" pos:column="30">"Error: value '%s' is invalid for -d.\n"<pos:position pos:line="112" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="112" pos:column="73">optarg<pos:position pos:line="112" pos:column="79"/></name></expr></argument>)<pos:position pos:line="112" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="81"/></expr_stmt>
	  <return pos:line="113" pos:column="11">return <expr><literal type="number" pos:line="113" pos:column="18">1<pos:position pos:line="113" pos:column="19"/></literal></expr>;<pos:position pos:line="113" pos:column="20"/></return>
	}<pos:position pos:line="114" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="115" pos:column="9">printf<pos:position pos:line="115" pos:column="15"/></name> <argument_list pos:line="115" pos:column="16">(<argument><expr><call><name pos:line="115" pos:column="17">_<pos:position pos:line="115" pos:column="18"/></name><argument_list pos:line="115" pos:column="18">(<argument><expr><literal type="string" pos:line="115" pos:column="19">"Debugging at level %d.\n"<pos:position pos:line="115" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="115" pos:column="48">debuglevel<pos:position pos:line="115" pos:column="58"/></name></expr></argument>)<pos:position pos:line="115" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="60"/></expr_stmt>
<cpp:else pos:line="116" pos:column="1">#<cpp:directive pos:line="116" pos:column="2">else<pos:position pos:line="116" pos:column="6"/></cpp:directive></cpp:else>
	<decl_stmt><decl><type><name pos:line="117" pos:column="9">printf<pos:position pos:line="117" pos:column="15"/></name></type> <name pos:line="117" pos:column="16">_<pos:position pos:line="117" pos:column="17"/></name><argument_list pos:line="117" pos:column="17">(<argument><expr><literal type="string" pos:line="117" pos:column="18">"DEBUG was not defined during compilation.  Ignored.\n"<pos:position pos:line="117" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="74"/></argument_list></decl>;<pos:position pos:line="117" pos:column="75"/></decl_stmt>
<cpp:endif pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">endif<pos:position pos:line="118" pos:column="7"/></cpp:directive></cpp:endif>
	<break pos:line="119" pos:column="9">break;<pos:position pos:line="119" pos:column="15"/></break>

      <case pos:line="121" pos:column="7">case <expr><literal type="char" pos:line="121" pos:column="12">'E'<pos:position pos:line="121" pos:column="15"/></literal></expr>:<pos:position pos:line="121" pos:column="16"/></case>
        <expr_stmt><expr><name pos:line="122" pos:column="9">edit_infile<pos:position pos:line="122" pos:column="20"/></name> <operator pos:line="122" pos:column="21">=<pos:position pos:line="122" pos:column="22"/></operator> <literal type="number" pos:line="122" pos:column="23">1<pos:position pos:line="122" pos:column="24"/></literal></expr>;<pos:position pos:line="122" pos:column="25"/></expr_stmt>
        <break pos:line="123" pos:column="9">break;<pos:position pos:line="123" pos:column="15"/></break>

      <case pos:line="125" pos:column="7">case <expr><literal type="char" pos:line="125" pos:column="12">'e'<pos:position pos:line="125" pos:column="15"/></literal></expr>:<pos:position pos:line="125" pos:column="16"/></case>
	<expr_stmt><expr><name pos:line="126" pos:column="9">commands<pos:position pos:line="126" pos:column="17"/></name> <operator pos:line="126" pos:column="18">=<pos:position pos:line="126" pos:column="19"/></operator> <call><name pos:line="126" pos:column="20">mutt_add_list<pos:position pos:line="126" pos:column="33"/></name> <argument_list pos:line="126" pos:column="34">(<argument><expr><name pos:line="126" pos:column="35">commands<pos:position pos:line="126" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="45">optarg<pos:position pos:line="126" pos:column="51"/></name></expr></argument>)<pos:position pos:line="126" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="53"/></expr_stmt>
	<break pos:line="127" pos:column="9">break;<pos:position pos:line="127" pos:column="15"/></break>

      <case pos:line="129" pos:column="7">case <expr><literal type="char" pos:line="129" pos:column="12">'H'<pos:position pos:line="129" pos:column="15"/></literal></expr>:<pos:position pos:line="129" pos:column="16"/></case>
	<expr_stmt><expr><name pos:line="130" pos:column="9">draftFile<pos:position pos:line="130" pos:column="18"/></name> <operator pos:line="130" pos:column="19">=<pos:position pos:line="130" pos:column="20"/></operator> <name pos:line="130" pos:column="21">optarg<pos:position pos:line="130" pos:column="27"/></name></expr>;<pos:position pos:line="130" pos:column="28"/></expr_stmt>
	<break pos:line="131" pos:column="9">break;<pos:position pos:line="131" pos:column="15"/></break>

      <case pos:line="133" pos:column="7">case <expr><literal type="char" pos:line="133" pos:column="12">'i'<pos:position pos:line="133" pos:column="15"/></literal></expr>:<pos:position pos:line="133" pos:column="16"/></case>
	<expr_stmt><expr><name pos:line="134" pos:column="9">includeFile<pos:position pos:line="134" pos:column="20"/></name> <operator pos:line="134" pos:column="21">=<pos:position pos:line="134" pos:column="22"/></operator> <name pos:line="134" pos:column="23">optarg<pos:position pos:line="134" pos:column="29"/></name></expr>;<pos:position pos:line="134" pos:column="30"/></expr_stmt>
	<break pos:line="135" pos:column="9">break;<pos:position pos:line="135" pos:column="15"/></break>

      <case pos:line="137" pos:column="7">case <expr><literal type="char" pos:line="137" pos:column="12">'m'<pos:position pos:line="137" pos:column="15"/></literal></expr>:<pos:position pos:line="137" pos:column="16"/></case>
	<comment type="block" pos:line="138" pos:column="9">/* should take precedence over .muttrc setting, so save it for later */</comment>
	<expr_stmt><expr><name pos:line="139" pos:column="9">newMagic<pos:position pos:line="139" pos:column="17"/></name> <operator pos:line="139" pos:column="18">=<pos:position pos:line="139" pos:column="19"/></operator> <name pos:line="139" pos:column="20">optarg<pos:position pos:line="139" pos:column="26"/></name></expr>;<pos:position pos:line="139" pos:column="27"/></expr_stmt> 
	<break pos:line="140" pos:column="9">break;<pos:position pos:line="140" pos:column="15"/></break>

      <case pos:line="142" pos:column="7">case <expr><literal type="char" pos:line="142" pos:column="12">'n'<pos:position pos:line="142" pos:column="15"/></literal></expr>:<pos:position pos:line="142" pos:column="16"/></case>
	<expr_stmt><expr><name pos:line="143" pos:column="9">flags<pos:position pos:line="143" pos:column="14"/></name> <operator pos:line="143" pos:column="15">|=<pos:position pos:line="143" pos:column="17"/></operator> <name pos:line="143" pos:column="18">M_NOSYSRC<pos:position pos:line="143" pos:column="27"/></name></expr>;<pos:position pos:line="143" pos:column="28"/></expr_stmt>
	<break pos:line="144" pos:column="9">break;<pos:position pos:line="144" pos:column="15"/></break>

      <case pos:line="146" pos:column="7">case <expr><literal type="char" pos:line="146" pos:column="12">'p'<pos:position pos:line="146" pos:column="15"/></literal></expr>:<pos:position pos:line="146" pos:column="16"/></case>
	<expr_stmt><expr><name pos:line="147" pos:column="9">sendflags<pos:position pos:line="147" pos:column="18"/></name> <operator pos:line="147" pos:column="19">|=<pos:position pos:line="147" pos:column="21"/></operator> <name pos:line="147" pos:column="22">SENDPOSTPONED<pos:position pos:line="147" pos:column="35"/></name></expr>;<pos:position pos:line="147" pos:column="36"/></expr_stmt>
	<break pos:line="148" pos:column="9">break;<pos:position pos:line="148" pos:column="15"/></break>

      <case pos:line="150" pos:column="7">case <expr><literal type="char" pos:line="150" pos:column="12">'Q'<pos:position pos:line="150" pos:column="15"/></literal></expr>:<pos:position pos:line="150" pos:column="16"/></case>
        <expr_stmt><expr><name pos:line="151" pos:column="9">queries<pos:position pos:line="151" pos:column="16"/></name> <operator pos:line="151" pos:column="17">=<pos:position pos:line="151" pos:column="18"/></operator> <call><name pos:line="151" pos:column="19">mutt_add_list<pos:position pos:line="151" pos:column="32"/></name> <argument_list pos:line="151" pos:column="33">(<argument><expr><name pos:line="151" pos:column="34">queries<pos:position pos:line="151" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="43">optarg<pos:position pos:line="151" pos:column="49"/></name></expr></argument>)<pos:position pos:line="151" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="51"/></expr_stmt>
        <break pos:line="152" pos:column="9">break;<pos:position pos:line="152" pos:column="15"/></break>
      
      <case pos:line="154" pos:column="7">case <expr><literal type="char" pos:line="154" pos:column="12">'R'<pos:position pos:line="154" pos:column="15"/></literal></expr>:<pos:position pos:line="154" pos:column="16"/></case>
	<expr_stmt><expr><name pos:line="155" pos:column="9">flags<pos:position pos:line="155" pos:column="14"/></name> <operator pos:line="155" pos:column="15">|=<pos:position pos:line="155" pos:column="17"/></operator> <name pos:line="155" pos:column="18">M_RO<pos:position pos:line="155" pos:column="22"/></name></expr>;<pos:position pos:line="155" pos:column="23"/></expr_stmt> <comment type="block" pos:line="155" pos:column="24">/* read-only mode */</comment>
	<break pos:line="156" pos:column="9">break;<pos:position pos:line="156" pos:column="15"/></break>

      <case pos:line="158" pos:column="7">case <expr><literal type="char" pos:line="158" pos:column="12">'s'<pos:position pos:line="158" pos:column="15"/></literal></expr>:<pos:position pos:line="158" pos:column="16"/></case>
	<expr_stmt><expr><name pos:line="159" pos:column="9">subject<pos:position pos:line="159" pos:column="16"/></name> <operator pos:line="159" pos:column="17">=<pos:position pos:line="159" pos:column="18"/></operator> <name pos:line="159" pos:column="19">optarg<pos:position pos:line="159" pos:column="25"/></name></expr>;<pos:position pos:line="159" pos:column="26"/></expr_stmt>
	<break pos:line="160" pos:column="9">break;<pos:position pos:line="160" pos:column="15"/></break>

      <case pos:line="162" pos:column="7">case <expr><literal type="char" pos:line="162" pos:column="12">'v'<pos:position pos:line="162" pos:column="15"/></literal></expr>:<pos:position pos:line="162" pos:column="16"/></case>
	<expr_stmt><expr><name pos:line="163" pos:column="9">version<pos:position pos:line="163" pos:column="16"/></name><operator pos:line="163" pos:column="16">++<pos:position pos:line="163" pos:column="18"/></operator></expr>;<pos:position pos:line="163" pos:column="19"/></expr_stmt>
	<break pos:line="164" pos:column="9">break;<pos:position pos:line="164" pos:column="15"/></break>

      <case pos:line="166" pos:column="7">case <expr><literal type="char" pos:line="166" pos:column="12">'x'<pos:position pos:line="166" pos:column="15"/></literal></expr>:<pos:position pos:line="166" pos:column="16"/></case> <comment type="block" pos:line="166" pos:column="17">/* mailx compatible send mode */</comment>
	<expr_stmt><expr><name pos:line="167" pos:column="9">sendflags<pos:position pos:line="167" pos:column="18"/></name> <operator pos:line="167" pos:column="19">|=<pos:position pos:line="167" pos:column="21"/></operator> <name pos:line="167" pos:column="22">SENDMAILX<pos:position pos:line="167" pos:column="31"/></name></expr>;<pos:position pos:line="167" pos:column="32"/></expr_stmt>
	<break pos:line="168" pos:column="9">break;<pos:position pos:line="168" pos:column="15"/></break>

      <case pos:line="170" pos:column="7">case <expr><literal type="char" pos:line="170" pos:column="12">'y'<pos:position pos:line="170" pos:column="15"/></literal></expr>:<pos:position pos:line="170" pos:column="16"/></case> <comment type="block" pos:line="170" pos:column="17">/* My special hack mode */</comment>
	<expr_stmt><expr><name pos:line="171" pos:column="9">flags<pos:position pos:line="171" pos:column="14"/></name> <operator pos:line="171" pos:column="15">|=<pos:position pos:line="171" pos:column="17"/></operator> <name pos:line="171" pos:column="18">M_SELECT<pos:position pos:line="171" pos:column="26"/></name></expr>;<pos:position pos:line="171" pos:column="27"/></expr_stmt>
	<break pos:line="172" pos:column="9">break;<pos:position pos:line="172" pos:column="15"/></break>

      <case pos:line="174" pos:column="7">case <expr><literal type="char" pos:line="174" pos:column="12">'z'<pos:position pos:line="174" pos:column="15"/></literal></expr>:<pos:position pos:line="174" pos:column="16"/></case>
	<expr_stmt><expr><name pos:line="175" pos:column="9">flags<pos:position pos:line="175" pos:column="14"/></name> <operator pos:line="175" pos:column="15">|=<pos:position pos:line="175" pos:column="17"/></operator> <name pos:line="175" pos:column="18">M_IGNORE<pos:position pos:line="175" pos:column="26"/></name></expr>;<pos:position pos:line="175" pos:column="27"/></expr_stmt>
	<break pos:line="176" pos:column="9">break;<pos:position pos:line="176" pos:column="15"/></break>

      <case pos:line="178" pos:column="7">case <expr><literal type="char" pos:line="178" pos:column="12">'Z'<pos:position pos:line="178" pos:column="15"/></literal></expr>:<pos:position pos:line="178" pos:column="16"/></case>
	<expr_stmt><expr><name pos:line="179" pos:column="9">flags<pos:position pos:line="179" pos:column="14"/></name> <operator pos:line="179" pos:column="15">|=<pos:position pos:line="179" pos:column="17"/></operator> <name pos:line="179" pos:column="18">M_BUFFY<pos:position pos:line="179" pos:column="25"/></name> <operator pos:line="179" pos:column="26">|<pos:position pos:line="179" pos:column="27"/></operator> <name pos:line="179" pos:column="28">M_IGNORE<pos:position pos:line="179" pos:column="36"/></name></expr>;<pos:position pos:line="179" pos:column="37"/></expr_stmt>
	<break pos:line="180" pos:column="9">break;<pos:position pos:line="180" pos:column="15"/></break>

      <default pos:line="182" pos:column="7">default:<pos:position pos:line="182" pos:column="15"/></default>
	<expr_stmt><expr><call><name pos:line="183" pos:column="9">mutt_usage<pos:position pos:line="183" pos:column="19"/></name> <argument_list pos:line="183" pos:column="20">()<pos:position pos:line="183" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="23"/></expr_stmt>
      }<pos:position pos:line="184" pos:column="8"/></block></switch></block></then></if>
  }<pos:position pos:line="185" pos:column="4"/></block></for>

  <comment type="block" pos:line="187" pos:column="3">/* collapse remaining argv */</comment>
  <while pos:line="188" pos:column="3">while <condition pos:line="188" pos:column="9">(<expr><name pos:line="188" pos:column="10">optind<pos:position pos:line="188" pos:column="16"/></name> <operator pos:line="188" pos:column="17">&lt;<pos:position pos:line="188" pos:column="21"/></operator> <name pos:line="188" pos:column="19">argc<pos:position pos:line="188" pos:column="23"/></name></expr>)<pos:position pos:line="188" pos:column="24"/></condition>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="189" pos:column="5">argv<pos:position pos:line="189" pos:column="9"/></name><index pos:line="189" pos:column="9">[<expr><name pos:line="189" pos:column="10">nargc<pos:position pos:line="189" pos:column="15"/></name><operator pos:line="189" pos:column="15">++<pos:position pos:line="189" pos:column="17"/></operator></expr>]<pos:position pos:line="189" pos:column="18"/></index></name> <operator pos:line="189" pos:column="19">=<pos:position pos:line="189" pos:column="20"/></operator> <name><name pos:line="189" pos:column="21">argv<pos:position pos:line="189" pos:column="25"/></name><index pos:line="189" pos:column="25">[<expr><name pos:line="189" pos:column="26">optind<pos:position pos:line="189" pos:column="32"/></name><operator pos:line="189" pos:column="32">++<pos:position pos:line="189" pos:column="34"/></operator></expr>]<pos:position pos:line="189" pos:column="35"/></index></name></expr>;<pos:position pos:line="189" pos:column="36"/></expr_stmt></block></while>
  <expr_stmt><expr><name pos:line="190" pos:column="3">optind<pos:position pos:line="190" pos:column="9"/></name> <operator pos:line="190" pos:column="10">=<pos:position pos:line="190" pos:column="11"/></operator> <literal type="number" pos:line="190" pos:column="12">1<pos:position pos:line="190" pos:column="13"/></literal></expr>;<pos:position pos:line="190" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><name pos:line="191" pos:column="3">argc<pos:position pos:line="191" pos:column="7"/></name> <operator pos:line="191" pos:column="8">=<pos:position pos:line="191" pos:column="9"/></operator> <name pos:line="191" pos:column="10">nargc<pos:position pos:line="191" pos:column="15"/></name></expr>;<pos:position pos:line="191" pos:column="16"/></expr_stmt>

  <switch pos:line="193" pos:column="3">switch <condition pos:line="193" pos:column="10">(<expr><name pos:line="193" pos:column="11">version<pos:position pos:line="193" pos:column="18"/></name></expr>)<pos:position pos:line="193" pos:column="19"/></condition>
  <block pos:line="194" pos:column="3">{
    <case pos:line="195" pos:column="5">case <expr><literal type="number" pos:line="195" pos:column="10">0<pos:position pos:line="195" pos:column="11"/></literal></expr>:<pos:position pos:line="195" pos:column="12"/></case>
      <break pos:line="196" pos:column="7">break;<pos:position pos:line="196" pos:column="13"/></break>
    <case pos:line="197" pos:column="5">case <expr><literal type="number" pos:line="197" pos:column="10">1<pos:position pos:line="197" pos:column="11"/></literal></expr>:<pos:position pos:line="197" pos:column="12"/></case>
      <expr_stmt><expr><call><name pos:line="198" pos:column="7">show_version<pos:position pos:line="198" pos:column="19"/></name> <argument_list pos:line="198" pos:column="20">()<pos:position pos:line="198" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="23"/></expr_stmt>
      <break pos:line="199" pos:column="7">break;<pos:position pos:line="199" pos:column="13"/></break>
    <default pos:line="200" pos:column="5">default:<pos:position pos:line="200" pos:column="13"/></default>
      <expr_stmt><expr><call><name pos:line="201" pos:column="7">puts<pos:position pos:line="201" pos:column="11"/></name> <argument_list pos:line="201" pos:column="12">(<argument><expr><call><name pos:line="201" pos:column="13">mutt_make_version<pos:position pos:line="201" pos:column="30"/></name> <argument_list pos:line="201" pos:column="31">()<pos:position pos:line="201" pos:column="33"/></argument_list></call></expr></argument>)<pos:position pos:line="201" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="202" pos:column="7">puts<pos:position pos:line="202" pos:column="11"/></name> <argument_list pos:line="202" pos:column="12">(<argument><expr><call><name pos:line="202" pos:column="13">_<pos:position pos:line="202" pos:column="14"/></name><argument_list pos:line="202" pos:column="14">(<argument><expr><name pos:line="202" pos:column="15">Copyright<pos:position pos:line="202" pos:column="24"/></name></expr></argument>)<pos:position pos:line="202" pos:column="25"/></argument_list></call></expr></argument>)<pos:position pos:line="202" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="203" pos:column="7">puts<pos:position pos:line="203" pos:column="11"/></name> <argument_list pos:line="203" pos:column="12">(<argument><expr><call><name pos:line="203" pos:column="13">_<pos:position pos:line="203" pos:column="14"/></name><argument_list pos:line="203" pos:column="14">(<argument><expr><name pos:line="203" pos:column="15">Licence<pos:position pos:line="203" pos:column="22"/></name></expr></argument>)<pos:position pos:line="203" pos:column="23"/></argument_list></call></expr></argument>)<pos:position pos:line="203" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="204" pos:column="7">puts<pos:position pos:line="204" pos:column="11"/></name> <argument_list pos:line="204" pos:column="12">(<argument><expr><call><name pos:line="204" pos:column="13">_<pos:position pos:line="204" pos:column="14"/></name><argument_list pos:line="204" pos:column="14">(<argument><expr><name pos:line="204" pos:column="15">Obtaining<pos:position pos:line="204" pos:column="24"/></name></expr></argument>)<pos:position pos:line="204" pos:column="25"/></argument_list></call></expr></argument>)<pos:position pos:line="204" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="205" pos:column="7">puts<pos:position pos:line="205" pos:column="11"/></name> <argument_list pos:line="205" pos:column="12">(<argument><expr><call><name pos:line="205" pos:column="13">_<pos:position pos:line="205" pos:column="14"/></name><argument_list pos:line="205" pos:column="14">(<argument><expr><name pos:line="205" pos:column="15">ReachingUs<pos:position pos:line="205" pos:column="25"/></name></expr></argument>)<pos:position pos:line="205" pos:column="26"/></argument_list></call></expr></argument>)<pos:position pos:line="205" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="206" pos:column="7">exit<pos:position pos:line="206" pos:column="11"/></name> <argument_list pos:line="206" pos:column="12">(<argument><expr><literal type="number" pos:line="206" pos:column="13">0<pos:position pos:line="206" pos:column="14"/></literal></expr></argument>)<pos:position pos:line="206" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="207" pos:column="4"/></block></switch>

  <comment type="block" pos:line="209" pos:column="3">/* Check for a batch send. */</comment>
  <if pos:line="210" pos:column="3">if <condition pos:line="210" pos:column="6">(<expr><operator pos:line="210" pos:column="7">!<pos:position pos:line="210" pos:column="8"/></operator><call><name pos:line="210" pos:column="8">isatty<pos:position pos:line="210" pos:column="14"/></name> <argument_list pos:line="210" pos:column="15">(<argument><expr><literal type="number" pos:line="210" pos:column="16">0<pos:position pos:line="210" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="210" pos:column="18"/></argument_list></call> <operator pos:line="210" pos:column="19">||<pos:position pos:line="210" pos:column="21"/></operator> <name pos:line="210" pos:column="22">queries<pos:position pos:line="210" pos:column="29"/></name> <operator pos:line="210" pos:column="30">||<pos:position pos:line="210" pos:column="32"/></operator> <name pos:line="210" pos:column="33">alias_queries<pos:position pos:line="210" pos:column="46"/></name> <operator pos:line="210" pos:column="47">||<pos:position pos:line="210" pos:column="49"/></operator> <name pos:line="210" pos:column="50">dump_variables<pos:position pos:line="210" pos:column="64"/></name></expr>)<pos:position pos:line="210" pos:column="65"/></condition><then pos:line="210" pos:column="65">
  <block pos:line="211" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="212" pos:column="5">set_option<pos:position pos:line="212" pos:column="15"/></name> <argument_list pos:line="212" pos:column="16">(<argument><expr><name pos:line="212" pos:column="17">OPTNOCURSES<pos:position pos:line="212" pos:column="28"/></name></expr></argument>)<pos:position pos:line="212" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="213" pos:column="5">sendflags<pos:position pos:line="213" pos:column="14"/></name> <operator pos:line="213" pos:column="15">=<pos:position pos:line="213" pos:column="16"/></operator> <name pos:line="213" pos:column="17">SENDBATCH<pos:position pos:line="213" pos:column="26"/></name></expr>;<pos:position pos:line="213" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="214" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="216" pos:column="3">/* This must come before mutt_init() because curses needs to be started
     before calling the init_pair() function to set the color scheme.  */</comment>
  <if pos:line="218" pos:column="3">if <condition pos:line="218" pos:column="6">(<expr><operator pos:line="218" pos:column="7">!<pos:position pos:line="218" pos:column="8"/></operator><call><name pos:line="218" pos:column="8">option<pos:position pos:line="218" pos:column="14"/></name> <argument_list pos:line="218" pos:column="15">(<argument><expr><name pos:line="218" pos:column="16">OPTNOCURSES<pos:position pos:line="218" pos:column="27"/></name></expr></argument>)<pos:position pos:line="218" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="218" pos:column="29"/></condition><then pos:line="218" pos:column="29">
  <block pos:line="219" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="220" pos:column="5">start_curses<pos:position pos:line="220" pos:column="17"/></name> <argument_list pos:line="220" pos:column="18">()<pos:position pos:line="220" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="21"/></expr_stmt>

    <comment type="block" pos:line="222" pos:column="5">/* check whether terminal status is supported (must follow curses init) */</comment>
    <expr_stmt><expr><name pos:line="223" pos:column="5">TSSupported<pos:position pos:line="223" pos:column="16"/></name> <operator pos:line="223" pos:column="17">=<pos:position pos:line="223" pos:column="18"/></operator> <call><name pos:line="223" pos:column="19">mutt_ts_capability<pos:position pos:line="223" pos:column="37"/></name><argument_list pos:line="223" pos:column="37">()<pos:position pos:line="223" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="224" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="226" pos:column="3">/* set defaults and read init files */</comment>
  <expr_stmt><expr><call><name pos:line="227" pos:column="3">mutt_init<pos:position pos:line="227" pos:column="12"/></name> <argument_list pos:line="227" pos:column="13">(<argument><expr><name pos:line="227" pos:column="14">flags<pos:position pos:line="227" pos:column="19"/></name> <operator pos:line="227" pos:column="20">&amp;<pos:position pos:line="227" pos:column="25"/></operator> <name pos:line="227" pos:column="22">M_NOSYSRC<pos:position pos:line="227" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="227" pos:column="33">commands<pos:position pos:line="227" pos:column="41"/></name></expr></argument>)<pos:position pos:line="227" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="228" pos:column="3">mutt_free_list<pos:position pos:line="228" pos:column="17"/></name> <argument_list pos:line="228" pos:column="18">(<argument><expr><operator pos:line="228" pos:column="19">&amp;<pos:position pos:line="228" pos:column="24"/></operator><name pos:line="228" pos:column="20">commands<pos:position pos:line="228" pos:column="28"/></name></expr></argument>)<pos:position pos:line="228" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="30"/></expr_stmt>

  <comment type="block" pos:line="230" pos:column="3">/* Initialize crypto backends.  */</comment>
  <expr_stmt><expr><call><name pos:line="231" pos:column="3">crypt_init<pos:position pos:line="231" pos:column="13"/></name> <argument_list pos:line="231" pos:column="14">()<pos:position pos:line="231" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="17"/></expr_stmt>

  <if pos:line="233" pos:column="3">if <condition pos:line="233" pos:column="6">(<expr><name pos:line="233" pos:column="7">newMagic<pos:position pos:line="233" pos:column="15"/></name></expr>)<pos:position pos:line="233" pos:column="16"/></condition><then pos:line="233" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="234" pos:column="5">mx_set_magic<pos:position pos:line="234" pos:column="17"/></name> <argument_list pos:line="234" pos:column="18">(<argument><expr><name pos:line="234" pos:column="19">newMagic<pos:position pos:line="234" pos:column="27"/></name></expr></argument>)<pos:position pos:line="234" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="29"/></expr_stmt></block></then></if>

  <if pos:line="236" pos:column="3">if <condition pos:line="236" pos:column="6">(<expr><name pos:line="236" pos:column="7">queries<pos:position pos:line="236" pos:column="14"/></name></expr>)<pos:position pos:line="236" pos:column="15"/></condition><then pos:line="236" pos:column="15">
  <block pos:line="237" pos:column="3">{
    <for pos:line="238" pos:column="5">for <control pos:line="238" pos:column="9">(<init pos:line="238" pos:column="10">;<pos:position pos:line="238" pos:column="11"/></init> <condition><expr><name pos:line="238" pos:column="12">optind<pos:position pos:line="238" pos:column="18"/></name> <operator pos:line="238" pos:column="19">&lt;<pos:position pos:line="238" pos:column="23"/></operator> <name pos:line="238" pos:column="21">argc<pos:position pos:line="238" pos:column="25"/></name></expr>;<pos:position pos:line="238" pos:column="26"/></condition> <incr><expr><name pos:line="238" pos:column="27">optind<pos:position pos:line="238" pos:column="33"/></name><operator pos:line="238" pos:column="33">++<pos:position pos:line="238" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="238" pos:column="36"/></control>
      <block type="pseudo"><expr_stmt><expr><name pos:line="239" pos:column="7">queries<pos:position pos:line="239" pos:column="14"/></name> <operator pos:line="239" pos:column="15">=<pos:position pos:line="239" pos:column="16"/></operator> <call><name pos:line="239" pos:column="17">mutt_add_list<pos:position pos:line="239" pos:column="30"/></name> <argument_list pos:line="239" pos:column="31">(<argument><expr><name pos:line="239" pos:column="32">queries<pos:position pos:line="239" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="239" pos:column="41">argv<pos:position pos:line="239" pos:column="45"/></name><index pos:line="239" pos:column="45">[<expr><name pos:line="239" pos:column="46">optind<pos:position pos:line="239" pos:column="52"/></name></expr>]<pos:position pos:line="239" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="239" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="55"/></expr_stmt></block></for>
    <return pos:line="240" pos:column="5">return <expr><call><name pos:line="240" pos:column="12">mutt_query_variables<pos:position pos:line="240" pos:column="32"/></name> <argument_list pos:line="240" pos:column="33">(<argument><expr><name pos:line="240" pos:column="34">queries<pos:position pos:line="240" pos:column="41"/></name></expr></argument>)<pos:position pos:line="240" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="43"/></return>
  }<pos:position pos:line="241" pos:column="4"/></block></then></if>
  <if pos:line="242" pos:column="3">if <condition pos:line="242" pos:column="6">(<expr><name pos:line="242" pos:column="7">dump_variables<pos:position pos:line="242" pos:column="21"/></name></expr>)<pos:position pos:line="242" pos:column="22"/></condition><then pos:line="242" pos:column="22">
    <block type="pseudo"><return pos:line="243" pos:column="5">return <expr><call><name pos:line="243" pos:column="12">mutt_dump_variables<pos:position pos:line="243" pos:column="31"/></name><argument_list pos:line="243" pos:column="31">()<pos:position pos:line="243" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="34"/></return></block></then></if>

  <if pos:line="245" pos:column="3">if <condition pos:line="245" pos:column="6">(<expr><name pos:line="245" pos:column="7">alias_queries<pos:position pos:line="245" pos:column="20"/></name></expr>)<pos:position pos:line="245" pos:column="21"/></condition><then pos:line="245" pos:column="21">
  <block pos:line="246" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="247" pos:column="5">int<pos:position pos:line="247" pos:column="8"/></name></type> <name pos:line="247" pos:column="9">rv<pos:position pos:line="247" pos:column="11"/></name> <init pos:line="247" pos:column="12">= <expr><literal type="number" pos:line="247" pos:column="14">0<pos:position pos:line="247" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="247" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="248" pos:column="5">ADDRESS<pos:position pos:line="248" pos:column="12"/></name> <modifier pos:line="248" pos:column="13">*<pos:position pos:line="248" pos:column="14"/></modifier></type><name pos:line="248" pos:column="14">a<pos:position pos:line="248" pos:column="15"/></name></decl>;<pos:position pos:line="248" pos:column="16"/></decl_stmt>
    <for pos:line="249" pos:column="5">for <control pos:line="249" pos:column="9">(<init pos:line="249" pos:column="10">;<pos:position pos:line="249" pos:column="11"/></init> <condition><expr><name pos:line="249" pos:column="12">optind<pos:position pos:line="249" pos:column="18"/></name> <operator pos:line="249" pos:column="19">&lt;<pos:position pos:line="249" pos:column="23"/></operator> <name pos:line="249" pos:column="21">argc<pos:position pos:line="249" pos:column="25"/></name></expr>;<pos:position pos:line="249" pos:column="26"/></condition> <incr><expr><name pos:line="249" pos:column="27">optind<pos:position pos:line="249" pos:column="33"/></name><operator pos:line="249" pos:column="33">++<pos:position pos:line="249" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="249" pos:column="36"/></control>
      <block type="pseudo"><expr_stmt><expr><name pos:line="250" pos:column="7">alias_queries<pos:position pos:line="250" pos:column="20"/></name> <operator pos:line="250" pos:column="21">=<pos:position pos:line="250" pos:column="22"/></operator> <call><name pos:line="250" pos:column="23">mutt_add_list<pos:position pos:line="250" pos:column="36"/></name> <argument_list pos:line="250" pos:column="37">(<argument><expr><name pos:line="250" pos:column="38">alias_queries<pos:position pos:line="250" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="250" pos:column="53">argv<pos:position pos:line="250" pos:column="57"/></name><index pos:line="250" pos:column="57">[<expr><name pos:line="250" pos:column="58">optind<pos:position pos:line="250" pos:column="64"/></name></expr>]<pos:position pos:line="250" pos:column="65"/></index></name></expr></argument>)<pos:position pos:line="250" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="67"/></expr_stmt></block></for>
    <for pos:line="251" pos:column="5">for <control pos:line="251" pos:column="9">(<init pos:line="251" pos:column="10">;<pos:position pos:line="251" pos:column="11"/></init> <condition><expr><name pos:line="251" pos:column="12">alias_queries<pos:position pos:line="251" pos:column="25"/></name></expr>;<pos:position pos:line="251" pos:column="26"/></condition> <incr><expr><name pos:line="251" pos:column="27">alias_queries<pos:position pos:line="251" pos:column="40"/></name> <operator pos:line="251" pos:column="41">=<pos:position pos:line="251" pos:column="42"/></operator> <name><name pos:line="251" pos:column="43">alias_queries<pos:position pos:line="251" pos:column="56"/></name><operator pos:line="251" pos:column="56">-&gt;<pos:position pos:line="251" pos:column="61"/></operator><name pos:line="251" pos:column="58">next<pos:position pos:line="251" pos:column="62"/></name></name></expr></incr>)<pos:position pos:line="251" pos:column="63"/></control>
    <block pos:line="252" pos:column="5">{
      <if pos:line="253" pos:column="7">if <condition pos:line="253" pos:column="10">(<expr><operator pos:line="253" pos:column="11">(<pos:position pos:line="253" pos:column="12"/></operator><name pos:line="253" pos:column="12">a<pos:position pos:line="253" pos:column="13"/></name> <operator pos:line="253" pos:column="14">=<pos:position pos:line="253" pos:column="15"/></operator> <call><name pos:line="253" pos:column="16">mutt_lookup_alias<pos:position pos:line="253" pos:column="33"/></name> <argument_list pos:line="253" pos:column="34">(<argument><expr><name><name pos:line="253" pos:column="35">alias_queries<pos:position pos:line="253" pos:column="48"/></name><operator pos:line="253" pos:column="48">-&gt;<pos:position pos:line="253" pos:column="53"/></operator><name pos:line="253" pos:column="50">data<pos:position pos:line="253" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="253" pos:column="55"/></argument_list></call><operator pos:line="253" pos:column="55">)<pos:position pos:line="253" pos:column="56"/></operator></expr>)<pos:position pos:line="253" pos:column="57"/></condition><then pos:line="253" pos:column="57">
      <block pos:line="254" pos:column="7">{	
	<comment type="block" pos:line="255" pos:column="9">/* output in machine-readable form */</comment>
	<expr_stmt><expr><call><name pos:line="256" pos:column="9">mutt_addrlist_to_intl<pos:position pos:line="256" pos:column="30"/></name> <argument_list pos:line="256" pos:column="31">(<argument><expr><name pos:line="256" pos:column="32">a<pos:position pos:line="256" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="256" pos:column="35">NULL<pos:position pos:line="256" pos:column="39"/></name></expr></argument>)<pos:position pos:line="256" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="257" pos:column="9">mutt_write_address_list<pos:position pos:line="257" pos:column="32"/></name> <argument_list pos:line="257" pos:column="33">(<argument><expr><name pos:line="257" pos:column="34">a<pos:position pos:line="257" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="257" pos:column="37">stdout<pos:position pos:line="257" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="257" pos:column="45">0<pos:position pos:line="257" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="257" pos:column="48">0<pos:position pos:line="257" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="257" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="51"/></expr_stmt>
      }<pos:position pos:line="258" pos:column="8"/></block></then>
      <else pos:line="259" pos:column="7">else
      <block pos:line="260" pos:column="7">{
	<expr_stmt><expr><name pos:line="261" pos:column="9">rv<pos:position pos:line="261" pos:column="11"/></name> <operator pos:line="261" pos:column="12">=<pos:position pos:line="261" pos:column="13"/></operator> <literal type="number" pos:line="261" pos:column="14">1<pos:position pos:line="261" pos:column="15"/></literal></expr>;<pos:position pos:line="261" pos:column="16"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="262" pos:column="9">printf<pos:position pos:line="262" pos:column="15"/></name> <argument_list pos:line="262" pos:column="16">(<argument><expr><literal type="string" pos:line="262" pos:column="17">"%s\n"<pos:position pos:line="262" pos:column="23"/></literal></expr></argument>, <argument><expr><name><name pos:line="262" pos:column="25">alias_queries<pos:position pos:line="262" pos:column="38"/></name><operator pos:line="262" pos:column="38">-&gt;<pos:position pos:line="262" pos:column="43"/></operator><name pos:line="262" pos:column="40">data<pos:position pos:line="262" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="262" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="46"/></expr_stmt>
      }<pos:position pos:line="263" pos:column="8"/></block></else></if>
    }<pos:position pos:line="264" pos:column="6"/></block></for>
    <return pos:line="265" pos:column="5">return <expr><name pos:line="265" pos:column="12">rv<pos:position pos:line="265" pos:column="14"/></name></expr>;<pos:position pos:line="265" pos:column="15"/></return>
  }<pos:position pos:line="266" pos:column="4"/></block></then></if>

  <if pos:line="268" pos:column="3">if <condition pos:line="268" pos:column="6">(<expr><operator pos:line="268" pos:column="7">!<pos:position pos:line="268" pos:column="8"/></operator><call><name pos:line="268" pos:column="8">option<pos:position pos:line="268" pos:column="14"/></name> <argument_list pos:line="268" pos:column="15">(<argument><expr><name pos:line="268" pos:column="16">OPTNOCURSES<pos:position pos:line="268" pos:column="27"/></name></expr></argument>)<pos:position pos:line="268" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="268" pos:column="29"/></condition><then pos:line="268" pos:column="29">
  <block pos:line="269" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="270" pos:column="5">SETCOLOR<pos:position pos:line="270" pos:column="13"/></name> <argument_list pos:line="270" pos:column="14">(<argument><expr><name pos:line="270" pos:column="15">MT_COLOR_NORMAL<pos:position pos:line="270" pos:column="30"/></name></expr></argument>)<pos:position pos:line="270" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="271" pos:column="5">clear<pos:position pos:line="271" pos:column="10"/></name> <argument_list pos:line="271" pos:column="11">()<pos:position pos:line="271" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><name pos:line="272" pos:column="5">mutt_error<pos:position pos:line="272" pos:column="15"/></name> <operator pos:line="272" pos:column="16">=<pos:position pos:line="272" pos:column="17"/></operator> <name pos:line="272" pos:column="18">mutt_curses_error<pos:position pos:line="272" pos:column="35"/></name></expr>;<pos:position pos:line="272" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="273" pos:column="5">mutt_message<pos:position pos:line="273" pos:column="17"/></name> <operator pos:line="273" pos:column="18">=<pos:position pos:line="273" pos:column="19"/></operator> <name pos:line="273" pos:column="20">mutt_curses_message<pos:position pos:line="273" pos:column="39"/></name></expr>;<pos:position pos:line="273" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="274" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="276" pos:column="3">/* Create the Maildir directory if it doesn't exist. */</comment>
  <if pos:line="277" pos:column="3">if <condition pos:line="277" pos:column="6">(<expr><operator pos:line="277" pos:column="7">!<pos:position pos:line="277" pos:column="8"/></operator><call><name pos:line="277" pos:column="8">option<pos:position pos:line="277" pos:column="14"/></name> <argument_list pos:line="277" pos:column="15">(<argument><expr><name pos:line="277" pos:column="16">OPTNOCURSES<pos:position pos:line="277" pos:column="27"/></name></expr></argument>)<pos:position pos:line="277" pos:column="28"/></argument_list></call> <operator pos:line="277" pos:column="29">&amp;&amp;<pos:position pos:line="277" pos:column="39"/></operator> <name pos:line="277" pos:column="32">Maildir<pos:position pos:line="277" pos:column="39"/></name></expr>)<pos:position pos:line="277" pos:column="40"/></condition><then pos:line="277" pos:column="40">
  <block pos:line="278" pos:column="3">{
    <decl_stmt><decl><type><name><name pos:line="279" pos:column="5">struct<pos:position pos:line="279" pos:column="11"/></name> <name pos:line="279" pos:column="12">stat<pos:position pos:line="279" pos:column="16"/></name></name></type> <name pos:line="279" pos:column="17">sb<pos:position pos:line="279" pos:column="19"/></name></decl>;<pos:position pos:line="279" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="280" pos:column="5">char<pos:position pos:line="280" pos:column="9"/></name></type> <name><name pos:line="280" pos:column="10">fpath<pos:position pos:line="280" pos:column="15"/></name><index pos:line="280" pos:column="15">[<expr><name pos:line="280" pos:column="16">_POSIX_PATH_MAX<pos:position pos:line="280" pos:column="31"/></name></expr>]<pos:position pos:line="280" pos:column="32"/></index></name></decl>;<pos:position pos:line="280" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="281" pos:column="5">char<pos:position pos:line="281" pos:column="9"/></name></type> <name><name pos:line="281" pos:column="10">msg<pos:position pos:line="281" pos:column="13"/></name><index pos:line="281" pos:column="13">[<expr><name pos:line="281" pos:column="14">STRING<pos:position pos:line="281" pos:column="20"/></name></expr>]<pos:position pos:line="281" pos:column="21"/></index></name></decl>;<pos:position pos:line="281" pos:column="22"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="283" pos:column="5">strfcpy<pos:position pos:line="283" pos:column="12"/></name> <argument_list pos:line="283" pos:column="13">(<argument><expr><name pos:line="283" pos:column="14">fpath<pos:position pos:line="283" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="283" pos:column="21">Maildir<pos:position pos:line="283" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="283" pos:column="30">sizeof <argument_list pos:line="283" pos:column="37">(<argument><expr><name pos:line="283" pos:column="38">fpath<pos:position pos:line="283" pos:column="43"/></name></expr></argument>)<pos:position pos:line="283" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="283" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="284" pos:column="5">mutt_expand_path<pos:position pos:line="284" pos:column="21"/></name> <argument_list pos:line="284" pos:column="22">(<argument><expr><name pos:line="284" pos:column="23">fpath<pos:position pos:line="284" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="284" pos:column="30">sizeof <argument_list pos:line="284" pos:column="37">(<argument><expr><name pos:line="284" pos:column="38">fpath<pos:position pos:line="284" pos:column="43"/></name></expr></argument>)<pos:position pos:line="284" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="284" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="284" pos:column="46"/></expr_stmt>
<cpp:ifdef pos:line="285" pos:column="1">#<cpp:directive pos:line="285" pos:column="2">ifdef<pos:position pos:line="285" pos:column="7"/></cpp:directive> <name pos:line="285" pos:column="8">USE_IMAP<pos:position pos:line="285" pos:column="16"/></name></cpp:ifdef>
    <comment type="block" pos:line="286" pos:column="5">/* we're not connected yet - skip mail folder creation */</comment>
    <if pos:line="287" pos:column="5">if <condition pos:line="287" pos:column="8">(<expr><operator pos:line="287" pos:column="9">!<pos:position pos:line="287" pos:column="10"/></operator><call><name pos:line="287" pos:column="10">mx_is_imap<pos:position pos:line="287" pos:column="20"/></name> <argument_list pos:line="287" pos:column="21">(<argument><expr><name pos:line="287" pos:column="22">fpath<pos:position pos:line="287" pos:column="27"/></name></expr></argument>)<pos:position pos:line="287" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="287" pos:column="29"/></condition><then pos:line="287" pos:column="29">
<cpp:endif pos:line="288" pos:column="1">#<cpp:directive pos:line="288" pos:column="2">endif<pos:position pos:line="288" pos:column="7"/></cpp:directive></cpp:endif>
    <block type="pseudo"><if pos:line="289" pos:column="5">if <condition pos:line="289" pos:column="8">(<expr><call><name pos:line="289" pos:column="9">stat<pos:position pos:line="289" pos:column="13"/></name> <argument_list pos:line="289" pos:column="14">(<argument><expr><name pos:line="289" pos:column="15">fpath<pos:position pos:line="289" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="289" pos:column="22">&amp;<pos:position pos:line="289" pos:column="27"/></operator><name pos:line="289" pos:column="23">sb<pos:position pos:line="289" pos:column="25"/></name></expr></argument>)<pos:position pos:line="289" pos:column="26"/></argument_list></call> <operator pos:line="289" pos:column="27">==<pos:position pos:line="289" pos:column="29"/></operator> <operator pos:line="289" pos:column="30">-<pos:position pos:line="289" pos:column="31"/></operator><literal type="number" pos:line="289" pos:column="31">1<pos:position pos:line="289" pos:column="32"/></literal> <operator pos:line="289" pos:column="33">&amp;&amp;<pos:position pos:line="289" pos:column="43"/></operator> <name pos:line="289" pos:column="36">errno<pos:position pos:line="289" pos:column="41"/></name> <operator pos:line="289" pos:column="42">==<pos:position pos:line="289" pos:column="44"/></operator> <name pos:line="289" pos:column="45">ENOENT<pos:position pos:line="289" pos:column="51"/></name></expr>)<pos:position pos:line="289" pos:column="52"/></condition><then pos:line="289" pos:column="52">
    <block pos:line="290" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="291" pos:column="7">snprintf<pos:position pos:line="291" pos:column="15"/></name> <argument_list pos:line="291" pos:column="16">(<argument><expr><name pos:line="291" pos:column="17">msg<pos:position pos:line="291" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="291" pos:column="22">sizeof <argument_list pos:line="291" pos:column="29">(<argument><expr><name pos:line="291" pos:column="30">msg<pos:position pos:line="291" pos:column="33"/></name></expr></argument>)<pos:position pos:line="291" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="291" pos:column="36">_<pos:position pos:line="291" pos:column="37"/></name><argument_list pos:line="291" pos:column="37">(<argument><expr><literal type="string" pos:line="291" pos:column="38">"%s does not exist. Create it?"<pos:position pos:line="291" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="291" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="291" pos:column="72">Maildir<pos:position pos:line="291" pos:column="79"/></name></expr></argument>)<pos:position pos:line="291" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="81"/></expr_stmt>
      <if pos:line="292" pos:column="7">if <condition pos:line="292" pos:column="10">(<expr><call><name pos:line="292" pos:column="11">mutt_yesorno<pos:position pos:line="292" pos:column="23"/></name> <argument_list pos:line="292" pos:column="24">(<argument><expr><name pos:line="292" pos:column="25">msg<pos:position pos:line="292" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="292" pos:column="30">M_YES<pos:position pos:line="292" pos:column="35"/></name></expr></argument>)<pos:position pos:line="292" pos:column="36"/></argument_list></call> <operator pos:line="292" pos:column="37">==<pos:position pos:line="292" pos:column="39"/></operator> <name pos:line="292" pos:column="40">M_YES<pos:position pos:line="292" pos:column="45"/></name></expr>)<pos:position pos:line="292" pos:column="46"/></condition><then pos:line="292" pos:column="46">
      <block pos:line="293" pos:column="7">{
	<if pos:line="294" pos:column="9">if <condition pos:line="294" pos:column="12">(<expr><call><name pos:line="294" pos:column="13">mkdir<pos:position pos:line="294" pos:column="18"/></name> <argument_list pos:line="294" pos:column="19">(<argument><expr><name pos:line="294" pos:column="20">fpath<pos:position pos:line="294" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="294" pos:column="27">0700<pos:position pos:line="294" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="294" pos:column="32"/></argument_list></call> <operator pos:line="294" pos:column="33">==<pos:position pos:line="294" pos:column="35"/></operator> <operator pos:line="294" pos:column="36">-<pos:position pos:line="294" pos:column="37"/></operator><literal type="number" pos:line="294" pos:column="37">1<pos:position pos:line="294" pos:column="38"/></literal> <operator pos:line="294" pos:column="39">&amp;&amp;<pos:position pos:line="294" pos:column="49"/></operator> <name pos:line="294" pos:column="42">errno<pos:position pos:line="294" pos:column="47"/></name> <operator pos:line="294" pos:column="48">!=<pos:position pos:line="294" pos:column="50"/></operator> <name pos:line="294" pos:column="51">EEXIST<pos:position pos:line="294" pos:column="57"/></name></expr>)<pos:position pos:line="294" pos:column="58"/></condition><then pos:line="294" pos:column="58">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="295" pos:column="11">mutt_error<pos:position pos:line="295" pos:column="21"/></name> <argument_list pos:line="295" pos:column="22">( <argument><expr><call><name pos:line="295" pos:column="24">_<pos:position pos:line="295" pos:column="25"/></name><argument_list pos:line="295" pos:column="25">(<argument><expr><literal type="string" pos:line="295" pos:column="26">"Can't create %s: %s."<pos:position pos:line="295" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="295" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="295" pos:column="51">Maildir<pos:position pos:line="295" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="295" pos:column="60">strerror<pos:position pos:line="295" pos:column="68"/></name> <argument_list pos:line="295" pos:column="69">(<argument><expr><name pos:line="295" pos:column="70">errno<pos:position pos:line="295" pos:column="75"/></name></expr></argument>)<pos:position pos:line="295" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="295" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="295" pos:column="78"/></expr_stmt></block></then></if>
      }<pos:position pos:line="296" pos:column="8"/></block></then></if>
    }<pos:position pos:line="297" pos:column="6"/></block></then></if></block></then></if>
  }<pos:position pos:line="298" pos:column="4"/></block></then></if>

  <if pos:line="300" pos:column="3">if <condition pos:line="300" pos:column="6">(<expr><name pos:line="300" pos:column="7">sendflags<pos:position pos:line="300" pos:column="16"/></name> <operator pos:line="300" pos:column="17">&amp;<pos:position pos:line="300" pos:column="22"/></operator> <name pos:line="300" pos:column="19">SENDPOSTPONED<pos:position pos:line="300" pos:column="32"/></name></expr>)<pos:position pos:line="300" pos:column="33"/></condition><then pos:line="300" pos:column="33">
  <block pos:line="301" pos:column="3">{
    <if pos:line="302" pos:column="5">if <condition pos:line="302" pos:column="8">(<expr><operator pos:line="302" pos:column="9">!<pos:position pos:line="302" pos:column="10"/></operator><call><name pos:line="302" pos:column="10">option<pos:position pos:line="302" pos:column="16"/></name> <argument_list pos:line="302" pos:column="17">(<argument><expr><name pos:line="302" pos:column="18">OPTNOCURSES<pos:position pos:line="302" pos:column="29"/></name></expr></argument>)<pos:position pos:line="302" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="302" pos:column="31"/></condition><then pos:line="302" pos:column="31">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="303" pos:column="7">mutt_flushinp<pos:position pos:line="303" pos:column="20"/></name> <argument_list pos:line="303" pos:column="21">()<pos:position pos:line="303" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="303" pos:column="24"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="304" pos:column="5">ci_send_message<pos:position pos:line="304" pos:column="20"/></name> <argument_list pos:line="304" pos:column="21">(<argument><expr><name pos:line="304" pos:column="22">SENDPOSTPONED<pos:position pos:line="304" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="304" pos:column="37">NULL<pos:position pos:line="304" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="304" pos:column="43">NULL<pos:position pos:line="304" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="304" pos:column="49">NULL<pos:position pos:line="304" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="304" pos:column="55">NULL<pos:position pos:line="304" pos:column="59"/></name></expr></argument>)<pos:position pos:line="304" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="304" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="305" pos:column="5">mutt_endwin<pos:position pos:line="305" pos:column="16"/></name> <argument_list pos:line="305" pos:column="17">(<argument><expr><name pos:line="305" pos:column="18">NULL<pos:position pos:line="305" pos:column="22"/></name></expr></argument>)<pos:position pos:line="305" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="305" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="306" pos:column="4"/></block></then>
  <elseif pos:line="307" pos:column="3">else <if pos:line="307" pos:column="8">if <condition pos:line="307" pos:column="11">(<expr><name pos:line="307" pos:column="12">subject<pos:position pos:line="307" pos:column="19"/></name> <operator pos:line="307" pos:column="20">||<pos:position pos:line="307" pos:column="22"/></operator> <name pos:line="307" pos:column="23">msg<pos:position pos:line="307" pos:column="26"/></name> <operator pos:line="307" pos:column="27">||<pos:position pos:line="307" pos:column="29"/></operator> <name pos:line="307" pos:column="30">sendflags<pos:position pos:line="307" pos:column="39"/></name> <operator pos:line="307" pos:column="40">||<pos:position pos:line="307" pos:column="42"/></operator> <name pos:line="307" pos:column="43">draftFile<pos:position pos:line="307" pos:column="52"/></name> <operator pos:line="307" pos:column="53">||<pos:position pos:line="307" pos:column="55"/></operator> <name pos:line="307" pos:column="56">includeFile<pos:position pos:line="307" pos:column="67"/></name> <operator pos:line="307" pos:column="68">||<pos:position pos:line="307" pos:column="70"/></operator> <name pos:line="307" pos:column="71">attach<pos:position pos:line="307" pos:column="77"/></name> <operator pos:line="307" pos:column="78">||<pos:position pos:line="307" pos:column="80"/></operator>
	   <name pos:line="308" pos:column="12">optind<pos:position pos:line="308" pos:column="18"/></name> <operator pos:line="308" pos:column="19">&lt;<pos:position pos:line="308" pos:column="23"/></operator> <name pos:line="308" pos:column="21">argc<pos:position pos:line="308" pos:column="25"/></name></expr>)<pos:position pos:line="308" pos:column="26"/></condition><then pos:line="308" pos:column="26">
  <block pos:line="309" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="310" pos:column="5">FILE<pos:position pos:line="310" pos:column="9"/></name> <modifier pos:line="310" pos:column="10">*<pos:position pos:line="310" pos:column="11"/></modifier></type><name pos:line="310" pos:column="11">fin<pos:position pos:line="310" pos:column="14"/></name> <init pos:line="310" pos:column="15">= <expr><name pos:line="310" pos:column="17">NULL<pos:position pos:line="310" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="310" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="311" pos:column="5">FILE<pos:position pos:line="311" pos:column="9"/></name> <modifier pos:line="311" pos:column="10">*<pos:position pos:line="311" pos:column="11"/></modifier></type><name pos:line="311" pos:column="11">fout<pos:position pos:line="311" pos:column="15"/></name> <init pos:line="311" pos:column="16">= <expr><name pos:line="311" pos:column="18">NULL<pos:position pos:line="311" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="311" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="312" pos:column="5">char<pos:position pos:line="312" pos:column="9"/></name></type> <name><name pos:line="312" pos:column="10">buf<pos:position pos:line="312" pos:column="13"/></name><index pos:line="312" pos:column="13">[<expr><name pos:line="312" pos:column="14">LONG_STRING<pos:position pos:line="312" pos:column="25"/></name></expr>]<pos:position pos:line="312" pos:column="26"/></index></name></decl>;<pos:position pos:line="312" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="313" pos:column="5">char<pos:position pos:line="313" pos:column="9"/></name> <modifier pos:line="313" pos:column="10">*<pos:position pos:line="313" pos:column="11"/></modifier></type><name pos:line="313" pos:column="11">tempfile<pos:position pos:line="313" pos:column="19"/></name> <init pos:line="313" pos:column="20">= <expr><name pos:line="313" pos:column="22">NULL<pos:position pos:line="313" pos:column="26"/></name></expr></init></decl>, <modifier pos:line="313" pos:column="28">*<pos:position pos:line="313" pos:column="29"/></modifier><decl><type ref="prev"/><name pos:line="313" pos:column="29">infile<pos:position pos:line="313" pos:column="35"/></name> <init pos:line="313" pos:column="36">= <expr><name pos:line="313" pos:column="38">NULL<pos:position pos:line="313" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="313" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="314" pos:column="5">char<pos:position pos:line="314" pos:column="9"/></name> <modifier pos:line="314" pos:column="10">*<pos:position pos:line="314" pos:column="11"/></modifier></type><name pos:line="314" pos:column="11">bodytext<pos:position pos:line="314" pos:column="19"/></name> <init pos:line="314" pos:column="20">= <expr><name pos:line="314" pos:column="22">NULL<pos:position pos:line="314" pos:column="26"/></name></expr></init></decl>, <modifier pos:line="314" pos:column="28">*<pos:position pos:line="314" pos:column="29"/></modifier><decl><type ref="prev"/><name pos:line="314" pos:column="29">bodyfile<pos:position pos:line="314" pos:column="37"/></name> <init pos:line="314" pos:column="38">= <expr><name pos:line="314" pos:column="40">NULL<pos:position pos:line="314" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="314" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="315" pos:column="5">int<pos:position pos:line="315" pos:column="8"/></name></type> <name pos:line="315" pos:column="9">rv<pos:position pos:line="315" pos:column="11"/></name> <init pos:line="315" pos:column="12">= <expr><literal type="number" pos:line="315" pos:column="14">0<pos:position pos:line="315" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="315" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="316" pos:column="5">char<pos:position pos:line="316" pos:column="9"/></name></type> <name><name pos:line="316" pos:column="10">expanded_infile<pos:position pos:line="316" pos:column="25"/></name><index pos:line="316" pos:column="25">[<expr><name pos:line="316" pos:column="26">_POSIX_PATH_MAX<pos:position pos:line="316" pos:column="41"/></name></expr>]<pos:position pos:line="316" pos:column="42"/></index></name></decl>;<pos:position pos:line="316" pos:column="43"/></decl_stmt>
    
    <if pos:line="318" pos:column="5">if <condition pos:line="318" pos:column="8">(<expr><operator pos:line="318" pos:column="9">!<pos:position pos:line="318" pos:column="10"/></operator><call><name pos:line="318" pos:column="10">option<pos:position pos:line="318" pos:column="16"/></name> <argument_list pos:line="318" pos:column="17">(<argument><expr><name pos:line="318" pos:column="18">OPTNOCURSES<pos:position pos:line="318" pos:column="29"/></name></expr></argument>)<pos:position pos:line="318" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="318" pos:column="31"/></condition><then pos:line="318" pos:column="31">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="319" pos:column="7">mutt_flushinp<pos:position pos:line="319" pos:column="20"/></name> <argument_list pos:line="319" pos:column="21">()<pos:position pos:line="319" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="319" pos:column="24"/></expr_stmt></block></then></if>

    <if pos:line="321" pos:column="5">if <condition pos:line="321" pos:column="8">(<expr><operator pos:line="321" pos:column="9">!<pos:position pos:line="321" pos:column="10"/></operator><name pos:line="321" pos:column="10">msg<pos:position pos:line="321" pos:column="13"/></name></expr>)<pos:position pos:line="321" pos:column="14"/></condition><then pos:line="321" pos:column="14">
      <block type="pseudo"><expr_stmt><expr><name pos:line="322" pos:column="7">msg<pos:position pos:line="322" pos:column="10"/></name> <operator pos:line="322" pos:column="11">=<pos:position pos:line="322" pos:column="12"/></operator> <call><name pos:line="322" pos:column="13">mutt_new_header<pos:position pos:line="322" pos:column="28"/></name> <argument_list pos:line="322" pos:column="29">()<pos:position pos:line="322" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="322" pos:column="32"/></expr_stmt></block></then></if>
    <if pos:line="323" pos:column="5">if <condition pos:line="323" pos:column="8">(<expr><operator pos:line="323" pos:column="9">!<pos:position pos:line="323" pos:column="10"/></operator><name><name pos:line="323" pos:column="10">msg<pos:position pos:line="323" pos:column="13"/></name><operator pos:line="323" pos:column="13">-&gt;<pos:position pos:line="323" pos:column="18"/></operator><name pos:line="323" pos:column="15">env<pos:position pos:line="323" pos:column="18"/></name></name></expr>)<pos:position pos:line="323" pos:column="19"/></condition><then pos:line="323" pos:column="19">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="324" pos:column="7">msg<pos:position pos:line="324" pos:column="10"/></name><operator pos:line="324" pos:column="10">-&gt;<pos:position pos:line="324" pos:column="15"/></operator><name pos:line="324" pos:column="12">env<pos:position pos:line="324" pos:column="15"/></name></name> <operator pos:line="324" pos:column="16">=<pos:position pos:line="324" pos:column="17"/></operator> <call><name pos:line="324" pos:column="18">mutt_new_envelope<pos:position pos:line="324" pos:column="35"/></name> <argument_list pos:line="324" pos:column="36">()<pos:position pos:line="324" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="324" pos:column="39"/></expr_stmt></block></then></if>

    <for pos:line="326" pos:column="5">for <control pos:line="326" pos:column="9">(<init><expr><name pos:line="326" pos:column="10">i<pos:position pos:line="326" pos:column="11"/></name> <operator pos:line="326" pos:column="12">=<pos:position pos:line="326" pos:column="13"/></operator> <name pos:line="326" pos:column="14">optind<pos:position pos:line="326" pos:column="20"/></name></expr>;<pos:position pos:line="326" pos:column="21"/></init> <condition><expr><name pos:line="326" pos:column="22">i<pos:position pos:line="326" pos:column="23"/></name> <operator pos:line="326" pos:column="24">&lt;<pos:position pos:line="326" pos:column="28"/></operator> <name pos:line="326" pos:column="26">argc<pos:position pos:line="326" pos:column="30"/></name></expr>;<pos:position pos:line="326" pos:column="31"/></condition> <incr><expr><name pos:line="326" pos:column="32">i<pos:position pos:line="326" pos:column="33"/></name><operator pos:line="326" pos:column="33">++<pos:position pos:line="326" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="326" pos:column="36"/></control>
    <block pos:line="327" pos:column="5">{
      <if pos:line="328" pos:column="7">if <condition pos:line="328" pos:column="10">(<expr><call><name pos:line="328" pos:column="11">url_check_scheme<pos:position pos:line="328" pos:column="27"/></name> <argument_list pos:line="328" pos:column="28">(<argument><expr><name><name pos:line="328" pos:column="29">argv<pos:position pos:line="328" pos:column="33"/></name><index pos:line="328" pos:column="33">[<expr><name pos:line="328" pos:column="34">i<pos:position pos:line="328" pos:column="35"/></name></expr>]<pos:position pos:line="328" pos:column="36"/></index></name></expr></argument>)<pos:position pos:line="328" pos:column="37"/></argument_list></call> <operator pos:line="328" pos:column="38">==<pos:position pos:line="328" pos:column="40"/></operator> <name pos:line="328" pos:column="41">U_MAILTO<pos:position pos:line="328" pos:column="49"/></name></expr>)<pos:position pos:line="328" pos:column="50"/></condition><then pos:line="328" pos:column="50">
      <block pos:line="329" pos:column="7">{
        <if pos:line="330" pos:column="9">if <condition pos:line="330" pos:column="12">(<expr><call><name pos:line="330" pos:column="13">url_parse_mailto<pos:position pos:line="330" pos:column="29"/></name> <argument_list pos:line="330" pos:column="30">(<argument><expr><name><name pos:line="330" pos:column="31">msg<pos:position pos:line="330" pos:column="34"/></name><operator pos:line="330" pos:column="34">-&gt;<pos:position pos:line="330" pos:column="39"/></operator><name pos:line="330" pos:column="36">env<pos:position pos:line="330" pos:column="39"/></name></name></expr></argument>, <argument><expr><operator pos:line="330" pos:column="41">&amp;<pos:position pos:line="330" pos:column="46"/></operator><name pos:line="330" pos:column="42">bodytext<pos:position pos:line="330" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="330" pos:column="52">argv<pos:position pos:line="330" pos:column="56"/></name><index pos:line="330" pos:column="56">[<expr><name pos:line="330" pos:column="57">i<pos:position pos:line="330" pos:column="58"/></name></expr>]<pos:position pos:line="330" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="330" pos:column="60"/></argument_list></call> <operator pos:line="330" pos:column="61">&lt;<pos:position pos:line="330" pos:column="65"/></operator> <literal type="number" pos:line="330" pos:column="63">0<pos:position pos:line="330" pos:column="64"/></literal></expr>)<pos:position pos:line="330" pos:column="65"/></condition><then pos:line="330" pos:column="65">
        <block pos:line="331" pos:column="9">{
          <if pos:line="332" pos:column="11">if <condition pos:line="332" pos:column="14">(<expr><operator pos:line="332" pos:column="15">!<pos:position pos:line="332" pos:column="16"/></operator><call><name pos:line="332" pos:column="16">option<pos:position pos:line="332" pos:column="22"/></name> <argument_list pos:line="332" pos:column="23">(<argument><expr><name pos:line="332" pos:column="24">OPTNOCURSES<pos:position pos:line="332" pos:column="35"/></name></expr></argument>)<pos:position pos:line="332" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="332" pos:column="37"/></condition><then pos:line="332" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="333" pos:column="13">mutt_endwin<pos:position pos:line="333" pos:column="24"/></name> <argument_list pos:line="333" pos:column="25">(<argument><expr><name pos:line="333" pos:column="26">NULL<pos:position pos:line="333" pos:column="30"/></name></expr></argument>)<pos:position pos:line="333" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="333" pos:column="32"/></expr_stmt></block></then></if>
          <expr_stmt><expr><call><name pos:line="334" pos:column="11">fputs<pos:position pos:line="334" pos:column="16"/></name> <argument_list pos:line="334" pos:column="17">(<argument><expr><call><name pos:line="334" pos:column="18">_<pos:position pos:line="334" pos:column="19"/></name><argument_list pos:line="334" pos:column="19">(<argument><expr><literal type="string" pos:line="334" pos:column="20">"Failed to parse mailto: link\n"<pos:position pos:line="334" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="334" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="334" pos:column="55">stderr<pos:position pos:line="334" pos:column="61"/></name></expr></argument>)<pos:position pos:line="334" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="334" pos:column="63"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="335" pos:column="11">exit<pos:position pos:line="335" pos:column="15"/></name> <argument_list pos:line="335" pos:column="16">(<argument><expr><literal type="number" pos:line="335" pos:column="17">1<pos:position pos:line="335" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="335" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="335" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="336" pos:column="10"/></block></then></if>
      }<pos:position pos:line="337" pos:column="8"/></block></then>
      <else pos:line="338" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="339" pos:column="9">msg<pos:position pos:line="339" pos:column="12"/></name><operator pos:line="339" pos:column="12">-&gt;<pos:position pos:line="339" pos:column="17"/></operator><name pos:line="339" pos:column="14">env<pos:position pos:line="339" pos:column="17"/></name><operator pos:line="339" pos:column="17">-&gt;<pos:position pos:line="339" pos:column="22"/></operator><name pos:line="339" pos:column="19">to<pos:position pos:line="339" pos:column="21"/></name></name> <operator pos:line="339" pos:column="22">=<pos:position pos:line="339" pos:column="23"/></operator> <call><name pos:line="339" pos:column="24">rfc822_parse_adrlist<pos:position pos:line="339" pos:column="44"/></name> <argument_list pos:line="339" pos:column="45">(<argument><expr><name><name pos:line="339" pos:column="46">msg<pos:position pos:line="339" pos:column="49"/></name><operator pos:line="339" pos:column="49">-&gt;<pos:position pos:line="339" pos:column="54"/></operator><name pos:line="339" pos:column="51">env<pos:position pos:line="339" pos:column="54"/></name><operator pos:line="339" pos:column="54">-&gt;<pos:position pos:line="339" pos:column="59"/></operator><name pos:line="339" pos:column="56">to<pos:position pos:line="339" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="339" pos:column="60">argv<pos:position pos:line="339" pos:column="64"/></name><index pos:line="339" pos:column="64">[<expr><name pos:line="339" pos:column="65">i<pos:position pos:line="339" pos:column="66"/></name></expr>]<pos:position pos:line="339" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="339" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="339" pos:column="69"/></expr_stmt></block></else></if>
    }<pos:position pos:line="340" pos:column="6"/></block></for>

    <if pos:line="342" pos:column="5">if <condition pos:line="342" pos:column="8">(<expr><operator pos:line="342" pos:column="9">!<pos:position pos:line="342" pos:column="10"/></operator><name pos:line="342" pos:column="10">draftFile<pos:position pos:line="342" pos:column="19"/></name> <operator pos:line="342" pos:column="20">&amp;&amp;<pos:position pos:line="342" pos:column="30"/></operator> <call><name pos:line="342" pos:column="23">option<pos:position pos:line="342" pos:column="29"/></name> <argument_list pos:line="342" pos:column="30">(<argument><expr><name pos:line="342" pos:column="31">OPTAUTOEDIT<pos:position pos:line="342" pos:column="42"/></name></expr></argument>)<pos:position pos:line="342" pos:column="43"/></argument_list></call> <operator pos:line="342" pos:column="44">&amp;&amp;<pos:position pos:line="342" pos:column="54"/></operator> <operator pos:line="342" pos:column="47">!<pos:position pos:line="342" pos:column="48"/></operator><name><name pos:line="342" pos:column="48">msg<pos:position pos:line="342" pos:column="51"/></name><operator pos:line="342" pos:column="51">-&gt;<pos:position pos:line="342" pos:column="56"/></operator><name pos:line="342" pos:column="53">env<pos:position pos:line="342" pos:column="56"/></name><operator pos:line="342" pos:column="56">-&gt;<pos:position pos:line="342" pos:column="61"/></operator><name pos:line="342" pos:column="58">to<pos:position pos:line="342" pos:column="60"/></name></name> <operator pos:line="342" pos:column="61">&amp;&amp;<pos:position pos:line="342" pos:column="71"/></operator> <operator pos:line="342" pos:column="64">!<pos:position pos:line="342" pos:column="65"/></operator><name><name pos:line="342" pos:column="65">msg<pos:position pos:line="342" pos:column="68"/></name><operator pos:line="342" pos:column="68">-&gt;<pos:position pos:line="342" pos:column="73"/></operator><name pos:line="342" pos:column="70">env<pos:position pos:line="342" pos:column="73"/></name><operator pos:line="342" pos:column="73">-&gt;<pos:position pos:line="342" pos:column="78"/></operator><name pos:line="342" pos:column="75">cc<pos:position pos:line="342" pos:column="77"/></name></name></expr>)<pos:position pos:line="342" pos:column="78"/></condition><then pos:line="342" pos:column="78">
    <block pos:line="343" pos:column="5">{
      <if pos:line="344" pos:column="7">if <condition pos:line="344" pos:column="10">(<expr><operator pos:line="344" pos:column="11">!<pos:position pos:line="344" pos:column="12"/></operator><call><name pos:line="344" pos:column="12">option<pos:position pos:line="344" pos:column="18"/></name> <argument_list pos:line="344" pos:column="19">(<argument><expr><name pos:line="344" pos:column="20">OPTNOCURSES<pos:position pos:line="344" pos:column="31"/></name></expr></argument>)<pos:position pos:line="344" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="344" pos:column="33"/></condition><then pos:line="344" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="345" pos:column="9">mutt_endwin<pos:position pos:line="345" pos:column="20"/></name> <argument_list pos:line="345" pos:column="21">(<argument><expr><name pos:line="345" pos:column="22">NULL<pos:position pos:line="345" pos:column="26"/></name></expr></argument>)<pos:position pos:line="345" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="345" pos:column="28"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="346" pos:column="7">fputs<pos:position pos:line="346" pos:column="12"/></name> <argument_list pos:line="346" pos:column="13">(<argument><expr><call><name pos:line="346" pos:column="14">_<pos:position pos:line="346" pos:column="15"/></name><argument_list pos:line="346" pos:column="15">(<argument><expr><literal type="string" pos:line="346" pos:column="16">"No recipients specified.\n"<pos:position pos:line="346" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="346" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="346" pos:column="47">stderr<pos:position pos:line="346" pos:column="53"/></name></expr></argument>)<pos:position pos:line="346" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="346" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="347" pos:column="7">exit<pos:position pos:line="347" pos:column="11"/></name> <argument_list pos:line="347" pos:column="12">(<argument><expr><literal type="number" pos:line="347" pos:column="13">1<pos:position pos:line="347" pos:column="14"/></literal></expr></argument>)<pos:position pos:line="347" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="347" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="348" pos:column="6"/></block></then></if>

    <if pos:line="350" pos:column="5">if <condition pos:line="350" pos:column="8">(<expr><name pos:line="350" pos:column="9">subject<pos:position pos:line="350" pos:column="16"/></name></expr>)<pos:position pos:line="350" pos:column="17"/></condition><then pos:line="350" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="351" pos:column="7">msg<pos:position pos:line="351" pos:column="10"/></name><operator pos:line="351" pos:column="10">-&gt;<pos:position pos:line="351" pos:column="15"/></operator><name pos:line="351" pos:column="12">env<pos:position pos:line="351" pos:column="15"/></name><operator pos:line="351" pos:column="15">-&gt;<pos:position pos:line="351" pos:column="20"/></operator><name pos:line="351" pos:column="17">subject<pos:position pos:line="351" pos:column="24"/></name></name> <operator pos:line="351" pos:column="25">=<pos:position pos:line="351" pos:column="26"/></operator> <call><name pos:line="351" pos:column="27">safe_strdup<pos:position pos:line="351" pos:column="38"/></name> <argument_list pos:line="351" pos:column="39">(<argument><expr><name pos:line="351" pos:column="40">subject<pos:position pos:line="351" pos:column="47"/></name></expr></argument>)<pos:position pos:line="351" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="351" pos:column="49"/></expr_stmt></block></then></if>

    <if pos:line="353" pos:column="5">if <condition pos:line="353" pos:column="8">(<expr><name pos:line="353" pos:column="9">draftFile<pos:position pos:line="353" pos:column="18"/></name></expr>)<pos:position pos:line="353" pos:column="19"/></condition><then pos:line="353" pos:column="19">
    <block pos:line="354" pos:column="5">{
      <expr_stmt><expr><name pos:line="355" pos:column="7">infile<pos:position pos:line="355" pos:column="13"/></name> <operator pos:line="355" pos:column="14">=<pos:position pos:line="355" pos:column="15"/></operator> <name pos:line="355" pos:column="16">draftFile<pos:position pos:line="355" pos:column="25"/></name></expr>;<pos:position pos:line="355" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name pos:line="356" pos:column="7">includeFile<pos:position pos:line="356" pos:column="18"/></name> <operator pos:line="356" pos:column="19">=<pos:position pos:line="356" pos:column="20"/></operator> <name pos:line="356" pos:column="21">NULL<pos:position pos:line="356" pos:column="25"/></name></expr>;<pos:position pos:line="356" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="357" pos:column="6"/></block></then>
    <elseif pos:line="358" pos:column="5">else <if pos:line="358" pos:column="10">if <condition pos:line="358" pos:column="13">(<expr><name pos:line="358" pos:column="14">includeFile<pos:position pos:line="358" pos:column="25"/></name></expr>)<pos:position pos:line="358" pos:column="26"/></condition><then pos:line="358" pos:column="26">
      <block type="pseudo"><expr_stmt><expr><name pos:line="359" pos:column="7">infile<pos:position pos:line="359" pos:column="13"/></name> <operator pos:line="359" pos:column="14">=<pos:position pos:line="359" pos:column="15"/></operator> <name pos:line="359" pos:column="16">includeFile<pos:position pos:line="359" pos:column="27"/></name></expr>;<pos:position pos:line="359" pos:column="28"/></expr_stmt></block></then></if></elseif>
    <else pos:line="360" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="361" pos:column="7">edit_infile<pos:position pos:line="361" pos:column="18"/></name> <operator pos:line="361" pos:column="19">=<pos:position pos:line="361" pos:column="20"/></operator> <literal type="number" pos:line="361" pos:column="21">0<pos:position pos:line="361" pos:column="22"/></literal></expr>;<pos:position pos:line="361" pos:column="23"/></expr_stmt></block></else></if>

    <if pos:line="363" pos:column="5">if <condition pos:line="363" pos:column="8">(<expr><name pos:line="363" pos:column="9">infile<pos:position pos:line="363" pos:column="15"/></name> <operator pos:line="363" pos:column="16">||<pos:position pos:line="363" pos:column="18"/></operator> <name pos:line="363" pos:column="19">bodytext<pos:position pos:line="363" pos:column="27"/></name></expr>)<pos:position pos:line="363" pos:column="28"/></condition><then pos:line="363" pos:column="28">
    <block pos:line="364" pos:column="5">{
      <comment type="block" pos:line="365" pos:column="7">/* Prepare fin and expanded_infile. */</comment>
      <if pos:line="366" pos:column="7">if <condition pos:line="366" pos:column="10">(<expr><name pos:line="366" pos:column="11">infile<pos:position pos:line="366" pos:column="17"/></name></expr>)<pos:position pos:line="366" pos:column="18"/></condition><then pos:line="366" pos:column="18">
      <block pos:line="367" pos:column="7">{
	<if pos:line="368" pos:column="9">if <condition pos:line="368" pos:column="12">(<expr><call><name pos:line="368" pos:column="13">mutt_strcmp<pos:position pos:line="368" pos:column="24"/></name> <argument_list pos:line="368" pos:column="25">(<argument><expr><literal type="string" pos:line="368" pos:column="26">"-"<pos:position pos:line="368" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="368" pos:column="31">infile<pos:position pos:line="368" pos:column="37"/></name></expr></argument>)<pos:position pos:line="368" pos:column="38"/></argument_list></call> <operator pos:line="368" pos:column="39">==<pos:position pos:line="368" pos:column="41"/></operator> <literal type="number" pos:line="368" pos:column="42">0<pos:position pos:line="368" pos:column="43"/></literal></expr>)<pos:position pos:line="368" pos:column="44"/></condition><then pos:line="368" pos:column="44">
        <block pos:line="369" pos:column="9">{
          <if pos:line="370" pos:column="11">if <condition pos:line="370" pos:column="14">(<expr><name pos:line="370" pos:column="15">edit_infile<pos:position pos:line="370" pos:column="26"/></name></expr>)<pos:position pos:line="370" pos:column="27"/></condition><then pos:line="370" pos:column="27">
          <block pos:line="371" pos:column="11">{
            <expr_stmt><expr><call><name pos:line="372" pos:column="13">fputs<pos:position pos:line="372" pos:column="18"/></name> <argument_list pos:line="372" pos:column="19">(<argument><expr><call><name pos:line="372" pos:column="20">_<pos:position pos:line="372" pos:column="21"/></name><argument_list pos:line="372" pos:column="21">(<argument><expr><literal type="string" pos:line="372" pos:column="22">"Cannot use -E flag with stdin\n"<pos:position pos:line="372" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="372" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="372" pos:column="58">stderr<pos:position pos:line="372" pos:column="64"/></name></expr></argument>)<pos:position pos:line="372" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="372" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="373" pos:column="13">exit<pos:position pos:line="373" pos:column="17"/></name> <argument_list pos:line="373" pos:column="18">(<argument><expr><literal type="number" pos:line="373" pos:column="19">1<pos:position pos:line="373" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="373" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="373" pos:column="22"/></expr_stmt>
          }<pos:position pos:line="374" pos:column="12"/></block></then></if>
	  <expr_stmt><expr><name pos:line="375" pos:column="11">fin<pos:position pos:line="375" pos:column="14"/></name> <operator pos:line="375" pos:column="15">=<pos:position pos:line="375" pos:column="16"/></operator> <name pos:line="375" pos:column="17">stdin<pos:position pos:line="375" pos:column="22"/></name></expr>;<pos:position pos:line="375" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="376" pos:column="10"/></block></then>
	<else pos:line="377" pos:column="9">else
	<block pos:line="378" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="379" pos:column="11">strfcpy<pos:position pos:line="379" pos:column="18"/></name> <argument_list pos:line="379" pos:column="19">(<argument><expr><name pos:line="379" pos:column="20">expanded_infile<pos:position pos:line="379" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="379" pos:column="37">infile<pos:position pos:line="379" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="379" pos:column="45">sizeof <argument_list pos:line="379" pos:column="52">(<argument><expr><name pos:line="379" pos:column="53">expanded_infile<pos:position pos:line="379" pos:column="68"/></name></expr></argument>)<pos:position pos:line="379" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="379" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="379" pos:column="71"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="380" pos:column="11">mutt_expand_path<pos:position pos:line="380" pos:column="27"/></name> <argument_list pos:line="380" pos:column="28">(<argument><expr><name pos:line="380" pos:column="29">expanded_infile<pos:position pos:line="380" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="380" pos:column="46">sizeof <argument_list pos:line="380" pos:column="53">(<argument><expr><name pos:line="380" pos:column="54">expanded_infile<pos:position pos:line="380" pos:column="69"/></name></expr></argument>)<pos:position pos:line="380" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="380" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="380" pos:column="72"/></expr_stmt>
	  <if pos:line="381" pos:column="11">if <condition pos:line="381" pos:column="14">(<expr><operator pos:line="381" pos:column="15">(<pos:position pos:line="381" pos:column="16"/></operator><name pos:line="381" pos:column="16">fin<pos:position pos:line="381" pos:column="19"/></name> <operator pos:line="381" pos:column="20">=<pos:position pos:line="381" pos:column="21"/></operator> <call><name pos:line="381" pos:column="22">fopen<pos:position pos:line="381" pos:column="27"/></name> <argument_list pos:line="381" pos:column="28">(<argument><expr><name pos:line="381" pos:column="29">expanded_infile<pos:position pos:line="381" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="381" pos:column="46">"r"<pos:position pos:line="381" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="381" pos:column="50"/></argument_list></call><operator pos:line="381" pos:column="50">)<pos:position pos:line="381" pos:column="51"/></operator> <operator pos:line="381" pos:column="52">==<pos:position pos:line="381" pos:column="54"/></operator> <name pos:line="381" pos:column="55">NULL<pos:position pos:line="381" pos:column="59"/></name></expr>)<pos:position pos:line="381" pos:column="60"/></condition><then pos:line="381" pos:column="60">
	  <block pos:line="382" pos:column="11">{
	    <if pos:line="383" pos:column="13">if <condition pos:line="383" pos:column="16">(<expr><operator pos:line="383" pos:column="17">!<pos:position pos:line="383" pos:column="18"/></operator><call><name pos:line="383" pos:column="18">option<pos:position pos:line="383" pos:column="24"/></name> <argument_list pos:line="383" pos:column="25">(<argument><expr><name pos:line="383" pos:column="26">OPTNOCURSES<pos:position pos:line="383" pos:column="37"/></name></expr></argument>)<pos:position pos:line="383" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="383" pos:column="39"/></condition><then pos:line="383" pos:column="39">
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="384" pos:column="15">mutt_endwin<pos:position pos:line="384" pos:column="26"/></name> <argument_list pos:line="384" pos:column="27">(<argument><expr><name pos:line="384" pos:column="28">NULL<pos:position pos:line="384" pos:column="32"/></name></expr></argument>)<pos:position pos:line="384" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="384" pos:column="34"/></expr_stmt></block></then></if>
	    <expr_stmt><expr><call><name pos:line="385" pos:column="13">perror<pos:position pos:line="385" pos:column="19"/></name> <argument_list pos:line="385" pos:column="20">(<argument><expr><name pos:line="385" pos:column="21">expanded_infile<pos:position pos:line="385" pos:column="36"/></name></expr></argument>)<pos:position pos:line="385" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="385" pos:column="38"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="386" pos:column="13">exit<pos:position pos:line="386" pos:column="17"/></name> <argument_list pos:line="386" pos:column="18">(<argument><expr><literal type="number" pos:line="386" pos:column="19">1<pos:position pos:line="386" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="386" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="386" pos:column="22"/></expr_stmt>
	  }<pos:position pos:line="387" pos:column="12"/></block></then></if>
	}<pos:position pos:line="388" pos:column="10"/></block></else></if>
      }<pos:position pos:line="389" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="391" pos:column="7">/* Copy input to a tempfile, and re-point fin to the tempfile.
       * Note: stdin is always copied to a tempfile, ensuring draftFile
       * can stat and get the correct st_size below.
       */</comment>
      <if pos:line="395" pos:column="7">if <condition pos:line="395" pos:column="10">(<expr><operator pos:line="395" pos:column="11">!<pos:position pos:line="395" pos:column="12"/></operator><name pos:line="395" pos:column="12">edit_infile<pos:position pos:line="395" pos:column="23"/></name></expr>)<pos:position pos:line="395" pos:column="24"/></condition><then pos:line="395" pos:column="24">
      <block pos:line="396" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="397" pos:column="9">mutt_mktemp<pos:position pos:line="397" pos:column="20"/></name> <argument_list pos:line="397" pos:column="21">(<argument><expr><name pos:line="397" pos:column="22">buf<pos:position pos:line="397" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="397" pos:column="27">sizeof <argument_list pos:line="397" pos:column="34">(<argument><expr><name pos:line="397" pos:column="35">buf<pos:position pos:line="397" pos:column="38"/></name></expr></argument>)<pos:position pos:line="397" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="397" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="397" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="398" pos:column="9">tempfile<pos:position pos:line="398" pos:column="17"/></name> <operator pos:line="398" pos:column="18">=<pos:position pos:line="398" pos:column="19"/></operator> <call><name pos:line="398" pos:column="20">safe_strdup<pos:position pos:line="398" pos:column="31"/></name> <argument_list pos:line="398" pos:column="32">(<argument><expr><name pos:line="398" pos:column="33">buf<pos:position pos:line="398" pos:column="36"/></name></expr></argument>)<pos:position pos:line="398" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="398" pos:column="38"/></expr_stmt>

        <if pos:line="400" pos:column="9">if <condition pos:line="400" pos:column="12">(<expr><operator pos:line="400" pos:column="13">(<pos:position pos:line="400" pos:column="14"/></operator><name pos:line="400" pos:column="14">fout<pos:position pos:line="400" pos:column="18"/></name> <operator pos:line="400" pos:column="19">=<pos:position pos:line="400" pos:column="20"/></operator> <call><name pos:line="400" pos:column="21">safe_fopen<pos:position pos:line="400" pos:column="31"/></name> <argument_list pos:line="400" pos:column="32">(<argument><expr><name pos:line="400" pos:column="33">tempfile<pos:position pos:line="400" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="400" pos:column="43">"w"<pos:position pos:line="400" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="400" pos:column="47"/></argument_list></call><operator pos:line="400" pos:column="47">)<pos:position pos:line="400" pos:column="48"/></operator> <operator pos:line="400" pos:column="49">==<pos:position pos:line="400" pos:column="51"/></operator> <name pos:line="400" pos:column="52">NULL<pos:position pos:line="400" pos:column="56"/></name></expr>)<pos:position pos:line="400" pos:column="57"/></condition><then pos:line="400" pos:column="57">
        <block pos:line="401" pos:column="9">{
          <if pos:line="402" pos:column="11">if <condition pos:line="402" pos:column="14">(<expr><operator pos:line="402" pos:column="15">!<pos:position pos:line="402" pos:column="16"/></operator><call><name pos:line="402" pos:column="16">option<pos:position pos:line="402" pos:column="22"/></name> <argument_list pos:line="402" pos:column="23">(<argument><expr><name pos:line="402" pos:column="24">OPTNOCURSES<pos:position pos:line="402" pos:column="35"/></name></expr></argument>)<pos:position pos:line="402" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="402" pos:column="37"/></condition><then pos:line="402" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="403" pos:column="13">mutt_endwin<pos:position pos:line="403" pos:column="24"/></name> <argument_list pos:line="403" pos:column="25">(<argument><expr><name pos:line="403" pos:column="26">NULL<pos:position pos:line="403" pos:column="30"/></name></expr></argument>)<pos:position pos:line="403" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="403" pos:column="32"/></expr_stmt></block></then></if>
          <expr_stmt><expr><call><name pos:line="404" pos:column="11">perror<pos:position pos:line="404" pos:column="17"/></name> <argument_list pos:line="404" pos:column="18">(<argument><expr><name pos:line="404" pos:column="19">tempfile<pos:position pos:line="404" pos:column="27"/></name></expr></argument>)<pos:position pos:line="404" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="404" pos:column="29"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="405" pos:column="11">safe_fclose<pos:position pos:line="405" pos:column="22"/></name> <argument_list pos:line="405" pos:column="23">(<argument><expr><operator pos:line="405" pos:column="24">&amp;<pos:position pos:line="405" pos:column="29"/></operator><name pos:line="405" pos:column="25">fin<pos:position pos:line="405" pos:column="28"/></name></expr></argument>)<pos:position pos:line="405" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="405" pos:column="30"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="406" pos:column="11">FREE<pos:position pos:line="406" pos:column="15"/></name> <argument_list pos:line="406" pos:column="16">(<argument><expr><operator pos:line="406" pos:column="17">&amp;<pos:position pos:line="406" pos:column="22"/></operator><name pos:line="406" pos:column="18">tempfile<pos:position pos:line="406" pos:column="26"/></name></expr></argument>)<pos:position pos:line="406" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="406" pos:column="28"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="407" pos:column="11">exit<pos:position pos:line="407" pos:column="15"/></name> <argument_list pos:line="407" pos:column="16">(<argument><expr><literal type="number" pos:line="407" pos:column="17">1<pos:position pos:line="407" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="407" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="407" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="408" pos:column="10"/></block></then></if>
        <if pos:line="409" pos:column="9">if <condition pos:line="409" pos:column="12">(<expr><name pos:line="409" pos:column="13">fin<pos:position pos:line="409" pos:column="16"/></name></expr>)<pos:position pos:line="409" pos:column="17"/></condition><then pos:line="409" pos:column="17">
        <block pos:line="410" pos:column="9">{
          <expr_stmt><expr><call><name pos:line="411" pos:column="11">mutt_copy_stream<pos:position pos:line="411" pos:column="27"/></name> <argument_list pos:line="411" pos:column="28">(<argument><expr><name pos:line="411" pos:column="29">fin<pos:position pos:line="411" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="411" pos:column="34">fout<pos:position pos:line="411" pos:column="38"/></name></expr></argument>)<pos:position pos:line="411" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="411" pos:column="40"/></expr_stmt>
          <if pos:line="412" pos:column="11">if <condition pos:line="412" pos:column="14">(<expr><name pos:line="412" pos:column="15">fin<pos:position pos:line="412" pos:column="18"/></name> <operator pos:line="412" pos:column="19">!=<pos:position pos:line="412" pos:column="21"/></operator> <name pos:line="412" pos:column="22">stdin<pos:position pos:line="412" pos:column="27"/></name></expr>)<pos:position pos:line="412" pos:column="28"/></condition><then pos:line="412" pos:column="28">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="413" pos:column="13">safe_fclose<pos:position pos:line="413" pos:column="24"/></name> <argument_list pos:line="413" pos:column="25">(<argument><expr><operator pos:line="413" pos:column="26">&amp;<pos:position pos:line="413" pos:column="31"/></operator><name pos:line="413" pos:column="27">fin<pos:position pos:line="413" pos:column="30"/></name></expr></argument>)<pos:position pos:line="413" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="413" pos:column="32"/></expr_stmt></block></then></if>
        }<pos:position pos:line="414" pos:column="10"/></block></then>
        <elseif pos:line="415" pos:column="9">else <if pos:line="415" pos:column="14">if <condition pos:line="415" pos:column="17">(<expr><name pos:line="415" pos:column="18">bodytext<pos:position pos:line="415" pos:column="26"/></name></expr>)<pos:position pos:line="415" pos:column="27"/></condition><then pos:line="415" pos:column="27">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="416" pos:column="11">fputs<pos:position pos:line="416" pos:column="16"/></name> <argument_list pos:line="416" pos:column="17">(<argument><expr><name pos:line="416" pos:column="18">bodytext<pos:position pos:line="416" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="416" pos:column="28">fout<pos:position pos:line="416" pos:column="32"/></name></expr></argument>)<pos:position pos:line="416" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="416" pos:column="34"/></expr_stmt></block></then></if></elseif></if>
        <expr_stmt><expr><call><name pos:line="417" pos:column="9">safe_fclose<pos:position pos:line="417" pos:column="20"/></name> <argument_list pos:line="417" pos:column="21">(<argument><expr><operator pos:line="417" pos:column="22">&amp;<pos:position pos:line="417" pos:column="27"/></operator><name pos:line="417" pos:column="23">fout<pos:position pos:line="417" pos:column="27"/></name></expr></argument>)<pos:position pos:line="417" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="417" pos:column="29"/></expr_stmt>

        <if pos:line="419" pos:column="9">if <condition pos:line="419" pos:column="12">(<expr><operator pos:line="419" pos:column="13">(<pos:position pos:line="419" pos:column="14"/></operator><name pos:line="419" pos:column="14">fin<pos:position pos:line="419" pos:column="17"/></name> <operator pos:line="419" pos:column="18">=<pos:position pos:line="419" pos:column="19"/></operator> <call><name pos:line="419" pos:column="20">fopen<pos:position pos:line="419" pos:column="25"/></name> <argument_list pos:line="419" pos:column="26">(<argument><expr><name pos:line="419" pos:column="27">tempfile<pos:position pos:line="419" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="419" pos:column="37">"r"<pos:position pos:line="419" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="419" pos:column="41"/></argument_list></call><operator pos:line="419" pos:column="41">)<pos:position pos:line="419" pos:column="42"/></operator> <operator pos:line="419" pos:column="43">==<pos:position pos:line="419" pos:column="45"/></operator> <name pos:line="419" pos:column="46">NULL<pos:position pos:line="419" pos:column="50"/></name></expr>)<pos:position pos:line="419" pos:column="51"/></condition><then pos:line="419" pos:column="51">
        <block pos:line="420" pos:column="9">{
          <if pos:line="421" pos:column="11">if <condition pos:line="421" pos:column="14">(<expr><operator pos:line="421" pos:column="15">!<pos:position pos:line="421" pos:column="16"/></operator><call><name pos:line="421" pos:column="16">option<pos:position pos:line="421" pos:column="22"/></name> <argument_list pos:line="421" pos:column="23">(<argument><expr><name pos:line="421" pos:column="24">OPTNOCURSES<pos:position pos:line="421" pos:column="35"/></name></expr></argument>)<pos:position pos:line="421" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="421" pos:column="37"/></condition><then pos:line="421" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="422" pos:column="13">mutt_endwin<pos:position pos:line="422" pos:column="24"/></name> <argument_list pos:line="422" pos:column="25">(<argument><expr><name pos:line="422" pos:column="26">NULL<pos:position pos:line="422" pos:column="30"/></name></expr></argument>)<pos:position pos:line="422" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="422" pos:column="32"/></expr_stmt></block></then></if>
          <expr_stmt><expr><call><name pos:line="423" pos:column="11">perror<pos:position pos:line="423" pos:column="17"/></name> <argument_list pos:line="423" pos:column="18">(<argument><expr><name pos:line="423" pos:column="19">tempfile<pos:position pos:line="423" pos:column="27"/></name></expr></argument>)<pos:position pos:line="423" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="423" pos:column="29"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="424" pos:column="11">FREE<pos:position pos:line="424" pos:column="15"/></name> <argument_list pos:line="424" pos:column="16">(<argument><expr><operator pos:line="424" pos:column="17">&amp;<pos:position pos:line="424" pos:column="22"/></operator><name pos:line="424" pos:column="18">tempfile<pos:position pos:line="424" pos:column="26"/></name></expr></argument>)<pos:position pos:line="424" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="424" pos:column="28"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="425" pos:column="11">exit<pos:position pos:line="425" pos:column="15"/></name> <argument_list pos:line="425" pos:column="16">(<argument><expr><literal type="number" pos:line="425" pos:column="17">1<pos:position pos:line="425" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="425" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="425" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="426" pos:column="10"/></block></then></if>
      }<pos:position pos:line="427" pos:column="8"/></block></then>
      <comment type="block" pos:line="428" pos:column="7">/* If editing the infile, keep it around afterwards so
       * it doesn't get unlinked, and we can rebuild the draftFile
       */</comment>
      <else pos:line="431" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="432" pos:column="9">sendflags<pos:position pos:line="432" pos:column="18"/></name> <operator pos:line="432" pos:column="19">|=<pos:position pos:line="432" pos:column="21"/></operator> <name pos:line="432" pos:column="22">SENDNOFREEHEADER<pos:position pos:line="432" pos:column="38"/></name></expr>;<pos:position pos:line="432" pos:column="39"/></expr_stmt></block></else></if>

      <comment type="block" pos:line="434" pos:column="7">/* Parse the draftFile into the full HEADER/BODY structure.
       * Set SENDDRAFTFILE so ci_send_message doesn't overwrite
       * our msg-&gt;content.
       */</comment>
      <if pos:line="438" pos:column="7">if <condition pos:line="438" pos:column="10">(<expr><name pos:line="438" pos:column="11">draftFile<pos:position pos:line="438" pos:column="20"/></name></expr>)<pos:position pos:line="438" pos:column="21"/></condition><then pos:line="438" pos:column="21">
      <block pos:line="439" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="440" pos:column="9">HEADER<pos:position pos:line="440" pos:column="15"/></name> <modifier pos:line="440" pos:column="16">*<pos:position pos:line="440" pos:column="17"/></modifier></type><name pos:line="440" pos:column="17">context_hdr<pos:position pos:line="440" pos:column="28"/></name> <init pos:line="440" pos:column="29">= <expr><name pos:line="440" pos:column="31">NULL<pos:position pos:line="440" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="440" pos:column="36"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="441" pos:column="9">ENVELOPE<pos:position pos:line="441" pos:column="17"/></name> <modifier pos:line="441" pos:column="18">*<pos:position pos:line="441" pos:column="19"/></modifier></type><name pos:line="441" pos:column="19">opts_env<pos:position pos:line="441" pos:column="27"/></name> <init pos:line="441" pos:column="28">= <expr><name><name pos:line="441" pos:column="30">msg<pos:position pos:line="441" pos:column="33"/></name><operator pos:line="441" pos:column="33">-&gt;<pos:position pos:line="441" pos:column="38"/></operator><name pos:line="441" pos:column="35">env<pos:position pos:line="441" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="441" pos:column="39"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="442" pos:column="9">struct<pos:position pos:line="442" pos:column="15"/></name> <name pos:line="442" pos:column="16">stat<pos:position pos:line="442" pos:column="20"/></name></name></type> <name pos:line="442" pos:column="21">st<pos:position pos:line="442" pos:column="23"/></name></decl>;<pos:position pos:line="442" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="443" pos:column="9">LIST<pos:position pos:line="443" pos:column="13"/></name> <modifier pos:line="443" pos:column="14">*<pos:position pos:line="443" pos:column="15"/></modifier></type><name pos:line="443" pos:column="15">uh<pos:position pos:line="443" pos:column="17"/></name></decl>, <modifier pos:line="443" pos:column="19">*<pos:position pos:line="443" pos:column="20"/></modifier><modifier pos:line="443" pos:column="20">*<pos:position pos:line="443" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="443" pos:column="21">last_uhp<pos:position pos:line="443" pos:column="29"/></name></decl>;<pos:position pos:line="443" pos:column="30"/></decl_stmt>

        <expr_stmt><expr><name pos:line="445" pos:column="9">sendflags<pos:position pos:line="445" pos:column="18"/></name> <operator pos:line="445" pos:column="19">|=<pos:position pos:line="445" pos:column="21"/></operator> <name pos:line="445" pos:column="22">SENDDRAFTFILE<pos:position pos:line="445" pos:column="35"/></name></expr>;<pos:position pos:line="445" pos:column="36"/></expr_stmt>

        <comment type="block" pos:line="447" pos:column="9">/* Set up a "context" header with just enough information so that
         * mutt_prepare_template() can parse the message in fin.
         */</comment>
        <expr_stmt><expr><name pos:line="450" pos:column="9">context_hdr<pos:position pos:line="450" pos:column="20"/></name> <operator pos:line="450" pos:column="21">=<pos:position pos:line="450" pos:column="22"/></operator> <call><name pos:line="450" pos:column="23">mutt_new_header<pos:position pos:line="450" pos:column="38"/></name> <argument_list pos:line="450" pos:column="39">()<pos:position pos:line="450" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="450" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="451" pos:column="9">context_hdr<pos:position pos:line="451" pos:column="20"/></name><operator pos:line="451" pos:column="20">-&gt;<pos:position pos:line="451" pos:column="25"/></operator><name pos:line="451" pos:column="22">offset<pos:position pos:line="451" pos:column="28"/></name></name> <operator pos:line="451" pos:column="29">=<pos:position pos:line="451" pos:column="30"/></operator> <literal type="number" pos:line="451" pos:column="31">0<pos:position pos:line="451" pos:column="32"/></literal></expr>;<pos:position pos:line="451" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="452" pos:column="9">context_hdr<pos:position pos:line="452" pos:column="20"/></name><operator pos:line="452" pos:column="20">-&gt;<pos:position pos:line="452" pos:column="25"/></operator><name pos:line="452" pos:column="22">content<pos:position pos:line="452" pos:column="29"/></name></name> <operator pos:line="452" pos:column="30">=<pos:position pos:line="452" pos:column="31"/></operator> <call><name pos:line="452" pos:column="32">mutt_new_body<pos:position pos:line="452" pos:column="45"/></name> <argument_list pos:line="452" pos:column="46">()<pos:position pos:line="452" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="452" pos:column="49"/></expr_stmt>
        <if pos:line="453" pos:column="9">if <condition pos:line="453" pos:column="12">(<expr><call><name pos:line="453" pos:column="13">fstat<pos:position pos:line="453" pos:column="18"/></name> <argument_list pos:line="453" pos:column="19">(<argument><expr><call><name pos:line="453" pos:column="20">fileno<pos:position pos:line="453" pos:column="26"/></name> <argument_list pos:line="453" pos:column="27">(<argument><expr><name pos:line="453" pos:column="28">fin<pos:position pos:line="453" pos:column="31"/></name></expr></argument>)<pos:position pos:line="453" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="453" pos:column="34">&amp;<pos:position pos:line="453" pos:column="39"/></operator><name pos:line="453" pos:column="35">st<pos:position pos:line="453" pos:column="37"/></name></expr></argument>)<pos:position pos:line="453" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="453" pos:column="39"/></condition><then pos:line="453" pos:column="39">
        <block pos:line="454" pos:column="9">{
          <expr_stmt><expr><call><name pos:line="455" pos:column="11">perror<pos:position pos:line="455" pos:column="17"/></name> <argument_list pos:line="455" pos:column="18">(<argument><expr><name pos:line="455" pos:column="19">draftFile<pos:position pos:line="455" pos:column="28"/></name></expr></argument>)<pos:position pos:line="455" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="455" pos:column="30"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="456" pos:column="11">exit<pos:position pos:line="456" pos:column="15"/></name> <argument_list pos:line="456" pos:column="16">(<argument><expr><literal type="number" pos:line="456" pos:column="17">1<pos:position pos:line="456" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="456" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="456" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="457" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="458" pos:column="9">context_hdr<pos:position pos:line="458" pos:column="20"/></name><operator pos:line="458" pos:column="20">-&gt;<pos:position pos:line="458" pos:column="25"/></operator><name pos:line="458" pos:column="22">content<pos:position pos:line="458" pos:column="29"/></name><operator pos:line="458" pos:column="29">-&gt;<pos:position pos:line="458" pos:column="34"/></operator><name pos:line="458" pos:column="31">length<pos:position pos:line="458" pos:column="37"/></name></name> <operator pos:line="458" pos:column="38">=<pos:position pos:line="458" pos:column="39"/></operator> <name><name pos:line="458" pos:column="40">st<pos:position pos:line="458" pos:column="42"/></name><operator pos:line="458" pos:column="42">.<pos:position pos:line="458" pos:column="43"/></operator><name pos:line="458" pos:column="43">st_size<pos:position pos:line="458" pos:column="50"/></name></name></expr>;<pos:position pos:line="458" pos:column="51"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="460" pos:column="9">mutt_prepare_template<pos:position pos:line="460" pos:column="30"/></name> <argument_list pos:line="460" pos:column="31">(<argument><expr><name pos:line="460" pos:column="32">fin<pos:position pos:line="460" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="460" pos:column="37">NULL<pos:position pos:line="460" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="460" pos:column="43">msg<pos:position pos:line="460" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="460" pos:column="48">context_hdr<pos:position pos:line="460" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="460" pos:column="61">0<pos:position pos:line="460" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="460" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="460" pos:column="64"/></expr_stmt>

        <comment type="block" pos:line="462" pos:column="9">/* Scan for mutt header to set OPTRESUMEDRAFTFILES */</comment>
        <for pos:line="463" pos:column="9">for <control pos:line="463" pos:column="13">(<init><expr><name pos:line="463" pos:column="14">last_uhp<pos:position pos:line="463" pos:column="22"/></name> <operator pos:line="463" pos:column="23">=<pos:position pos:line="463" pos:column="24"/></operator> <operator pos:line="463" pos:column="25">&amp;<pos:position pos:line="463" pos:column="30"/></operator><name><name pos:line="463" pos:column="26">msg<pos:position pos:line="463" pos:column="29"/></name><operator pos:line="463" pos:column="29">-&gt;<pos:position pos:line="463" pos:column="34"/></operator><name pos:line="463" pos:column="31">env<pos:position pos:line="463" pos:column="34"/></name><operator pos:line="463" pos:column="34">-&gt;<pos:position pos:line="463" pos:column="39"/></operator><name pos:line="463" pos:column="36">userhdrs<pos:position pos:line="463" pos:column="44"/></name></name></expr><operator pos:line="463" pos:column="44">,<pos:position pos:line="463" pos:column="45"/></operator> <expr><name pos:line="463" pos:column="46">uh<pos:position pos:line="463" pos:column="48"/></name> <operator pos:line="463" pos:column="49">=<pos:position pos:line="463" pos:column="50"/></operator> <operator pos:line="463" pos:column="51">*<pos:position pos:line="463" pos:column="52"/></operator><name pos:line="463" pos:column="52">last_uhp<pos:position pos:line="463" pos:column="60"/></name></expr>;<pos:position pos:line="463" pos:column="61"/></init>
             <condition><expr><name pos:line="464" pos:column="14">uh<pos:position pos:line="464" pos:column="16"/></name></expr>;<pos:position pos:line="464" pos:column="17"/></condition> <incr><expr><name pos:line="464" pos:column="18">uh<pos:position pos:line="464" pos:column="20"/></name> <operator pos:line="464" pos:column="21">=<pos:position pos:line="464" pos:column="22"/></operator> <operator pos:line="464" pos:column="23">*<pos:position pos:line="464" pos:column="24"/></operator><name pos:line="464" pos:column="24">last_uhp<pos:position pos:line="464" pos:column="32"/></name></expr></incr>)<pos:position pos:line="464" pos:column="33"/></control>
        <block pos:line="465" pos:column="9">{
          <if pos:line="466" pos:column="11">if <condition pos:line="466" pos:column="14">(<expr><call><name pos:line="466" pos:column="15">ascii_strncasecmp<pos:position pos:line="466" pos:column="32"/></name> <argument_list pos:line="466" pos:column="33">(<argument><expr><literal type="string" pos:line="466" pos:column="34">"X-Mutt-Resume-Draft:"<pos:position pos:line="466" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="466" pos:column="58">uh<pos:position pos:line="466" pos:column="60"/></name><operator pos:line="466" pos:column="60">-&gt;<pos:position pos:line="466" pos:column="65"/></operator><name pos:line="466" pos:column="62">data<pos:position pos:line="466" pos:column="66"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="466" pos:column="68">20<pos:position pos:line="466" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="466" pos:column="71"/></argument_list></call> <operator pos:line="466" pos:column="72">==<pos:position pos:line="466" pos:column="74"/></operator> <literal type="number" pos:line="466" pos:column="75">0<pos:position pos:line="466" pos:column="76"/></literal></expr>)<pos:position pos:line="466" pos:column="77"/></condition><then pos:line="466" pos:column="77">
          <block pos:line="467" pos:column="11">{
            <if pos:line="468" pos:column="13">if <condition pos:line="468" pos:column="16">(<expr><call><name pos:line="468" pos:column="17">option<pos:position pos:line="468" pos:column="23"/></name> <argument_list pos:line="468" pos:column="24">(<argument><expr><name pos:line="468" pos:column="25">OPTRESUMEEDITEDDRAFTFILES<pos:position pos:line="468" pos:column="50"/></name></expr></argument>)<pos:position pos:line="468" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="468" pos:column="52"/></condition><then pos:line="468" pos:column="52">
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="469" pos:column="15">set_option<pos:position pos:line="469" pos:column="25"/></name> <argument_list pos:line="469" pos:column="26">(<argument><expr><name pos:line="469" pos:column="27">OPTRESUMEDRAFTFILES<pos:position pos:line="469" pos:column="46"/></name></expr></argument>)<pos:position pos:line="469" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="469" pos:column="48"/></expr_stmt></block></then></if>

            <expr_stmt><expr><operator pos:line="471" pos:column="13">*<pos:position pos:line="471" pos:column="14"/></operator><name pos:line="471" pos:column="14">last_uhp<pos:position pos:line="471" pos:column="22"/></name> <operator pos:line="471" pos:column="23">=<pos:position pos:line="471" pos:column="24"/></operator> <name><name pos:line="471" pos:column="25">uh<pos:position pos:line="471" pos:column="27"/></name><operator pos:line="471" pos:column="27">-&gt;<pos:position pos:line="471" pos:column="32"/></operator><name pos:line="471" pos:column="29">next<pos:position pos:line="471" pos:column="33"/></name></name></expr>;<pos:position pos:line="471" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="472" pos:column="13">uh<pos:position pos:line="472" pos:column="15"/></name><operator pos:line="472" pos:column="15">-&gt;<pos:position pos:line="472" pos:column="20"/></operator><name pos:line="472" pos:column="17">next<pos:position pos:line="472" pos:column="21"/></name></name> <operator pos:line="472" pos:column="22">=<pos:position pos:line="472" pos:column="23"/></operator> <name pos:line="472" pos:column="24">NULL<pos:position pos:line="472" pos:column="28"/></name></expr>;<pos:position pos:line="472" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="473" pos:column="13">mutt_free_list<pos:position pos:line="473" pos:column="27"/></name> <argument_list pos:line="473" pos:column="28">(<argument><expr><operator pos:line="473" pos:column="29">&amp;<pos:position pos:line="473" pos:column="34"/></operator><name pos:line="473" pos:column="30">uh<pos:position pos:line="473" pos:column="32"/></name></expr></argument>)<pos:position pos:line="473" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="473" pos:column="34"/></expr_stmt>
          }<pos:position pos:line="474" pos:column="12"/></block></then>
          <else pos:line="475" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="476" pos:column="13">last_uhp<pos:position pos:line="476" pos:column="21"/></name> <operator pos:line="476" pos:column="22">=<pos:position pos:line="476" pos:column="23"/></operator> <operator pos:line="476" pos:column="24">&amp;<pos:position pos:line="476" pos:column="29"/></operator><name><name pos:line="476" pos:column="25">uh<pos:position pos:line="476" pos:column="27"/></name><operator pos:line="476" pos:column="27">-&gt;<pos:position pos:line="476" pos:column="32"/></operator><name pos:line="476" pos:column="29">next<pos:position pos:line="476" pos:column="33"/></name></name></expr>;<pos:position pos:line="476" pos:column="34"/></expr_stmt></block></else></if>
        }<pos:position pos:line="477" pos:column="10"/></block></for>

        <expr_stmt><expr><call><name pos:line="479" pos:column="9">rfc822_append<pos:position pos:line="479" pos:column="22"/></name> <argument_list pos:line="479" pos:column="23">(<argument><expr><operator pos:line="479" pos:column="24">&amp;<pos:position pos:line="479" pos:column="29"/></operator><name><name pos:line="479" pos:column="25">msg<pos:position pos:line="479" pos:column="28"/></name><operator pos:line="479" pos:column="28">-&gt;<pos:position pos:line="479" pos:column="33"/></operator><name pos:line="479" pos:column="30">env<pos:position pos:line="479" pos:column="33"/></name><operator pos:line="479" pos:column="33">-&gt;<pos:position pos:line="479" pos:column="38"/></operator><name pos:line="479" pos:column="35">to<pos:position pos:line="479" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="479" pos:column="39">opts_env<pos:position pos:line="479" pos:column="47"/></name><operator pos:line="479" pos:column="47">-&gt;<pos:position pos:line="479" pos:column="52"/></operator><name pos:line="479" pos:column="49">to<pos:position pos:line="479" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="479" pos:column="53">0<pos:position pos:line="479" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="479" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="479" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="480" pos:column="9">rfc822_append<pos:position pos:line="480" pos:column="22"/></name> <argument_list pos:line="480" pos:column="23">(<argument><expr><operator pos:line="480" pos:column="24">&amp;<pos:position pos:line="480" pos:column="29"/></operator><name><name pos:line="480" pos:column="25">msg<pos:position pos:line="480" pos:column="28"/></name><operator pos:line="480" pos:column="28">-&gt;<pos:position pos:line="480" pos:column="33"/></operator><name pos:line="480" pos:column="30">env<pos:position pos:line="480" pos:column="33"/></name><operator pos:line="480" pos:column="33">-&gt;<pos:position pos:line="480" pos:column="38"/></operator><name pos:line="480" pos:column="35">cc<pos:position pos:line="480" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="480" pos:column="39">opts_env<pos:position pos:line="480" pos:column="47"/></name><operator pos:line="480" pos:column="47">-&gt;<pos:position pos:line="480" pos:column="52"/></operator><name pos:line="480" pos:column="49">cc<pos:position pos:line="480" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="480" pos:column="53">0<pos:position pos:line="480" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="480" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="480" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="481" pos:column="9">rfc822_append<pos:position pos:line="481" pos:column="22"/></name> <argument_list pos:line="481" pos:column="23">(<argument><expr><operator pos:line="481" pos:column="24">&amp;<pos:position pos:line="481" pos:column="29"/></operator><name><name pos:line="481" pos:column="25">msg<pos:position pos:line="481" pos:column="28"/></name><operator pos:line="481" pos:column="28">-&gt;<pos:position pos:line="481" pos:column="33"/></operator><name pos:line="481" pos:column="30">env<pos:position pos:line="481" pos:column="33"/></name><operator pos:line="481" pos:column="33">-&gt;<pos:position pos:line="481" pos:column="38"/></operator><name pos:line="481" pos:column="35">bcc<pos:position pos:line="481" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="481" pos:column="40">opts_env<pos:position pos:line="481" pos:column="48"/></name><operator pos:line="481" pos:column="48">-&gt;<pos:position pos:line="481" pos:column="53"/></operator><name pos:line="481" pos:column="50">bcc<pos:position pos:line="481" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="481" pos:column="55">0<pos:position pos:line="481" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="481" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="481" pos:column="58"/></expr_stmt>
        <if pos:line="482" pos:column="9">if <condition pos:line="482" pos:column="12">(<expr><name><name pos:line="482" pos:column="13">opts_env<pos:position pos:line="482" pos:column="21"/></name><operator pos:line="482" pos:column="21">-&gt;<pos:position pos:line="482" pos:column="26"/></operator><name pos:line="482" pos:column="23">subject<pos:position pos:line="482" pos:column="30"/></name></name></expr>)<pos:position pos:line="482" pos:column="31"/></condition><then pos:line="482" pos:column="31">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="483" pos:column="11">mutt_str_replace<pos:position pos:line="483" pos:column="27"/></name> <argument_list pos:line="483" pos:column="28">(<argument><expr><operator pos:line="483" pos:column="29">&amp;<pos:position pos:line="483" pos:column="34"/></operator><name><name pos:line="483" pos:column="30">msg<pos:position pos:line="483" pos:column="33"/></name><operator pos:line="483" pos:column="33">-&gt;<pos:position pos:line="483" pos:column="38"/></operator><name pos:line="483" pos:column="35">env<pos:position pos:line="483" pos:column="38"/></name><operator pos:line="483" pos:column="38">-&gt;<pos:position pos:line="483" pos:column="43"/></operator><name pos:line="483" pos:column="40">subject<pos:position pos:line="483" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="483" pos:column="49">opts_env<pos:position pos:line="483" pos:column="57"/></name><operator pos:line="483" pos:column="57">-&gt;<pos:position pos:line="483" pos:column="62"/></operator><name pos:line="483" pos:column="59">subject<pos:position pos:line="483" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="483" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="483" pos:column="68"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="485" pos:column="9">mutt_free_envelope<pos:position pos:line="485" pos:column="27"/></name> <argument_list pos:line="485" pos:column="28">(<argument><expr><operator pos:line="485" pos:column="29">&amp;<pos:position pos:line="485" pos:column="34"/></operator><name pos:line="485" pos:column="30">opts_env<pos:position pos:line="485" pos:column="38"/></name></expr></argument>)<pos:position pos:line="485" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="485" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="486" pos:column="9">mutt_free_header<pos:position pos:line="486" pos:column="25"/></name> <argument_list pos:line="486" pos:column="26">(<argument><expr><operator pos:line="486" pos:column="27">&amp;<pos:position pos:line="486" pos:column="32"/></operator><name pos:line="486" pos:column="28">context_hdr<pos:position pos:line="486" pos:column="39"/></name></expr></argument>)<pos:position pos:line="486" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="486" pos:column="41"/></expr_stmt>
      }<pos:position pos:line="487" pos:column="8"/></block></then>
      <comment type="block" pos:line="488" pos:column="7">/* Editing the includeFile: pass it directly in.
       * Note that SENDNOFREEHEADER is set above so it isn't unlinked.
       */</comment>
      <elseif pos:line="491" pos:column="7">else <if pos:line="491" pos:column="12">if <condition pos:line="491" pos:column="15">(<expr><name pos:line="491" pos:column="16">edit_infile<pos:position pos:line="491" pos:column="27"/></name></expr>)<pos:position pos:line="491" pos:column="28"/></condition><then pos:line="491" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><name pos:line="492" pos:column="9">bodyfile<pos:position pos:line="492" pos:column="17"/></name> <operator pos:line="492" pos:column="18">=<pos:position pos:line="492" pos:column="19"/></operator> <name pos:line="492" pos:column="20">expanded_infile<pos:position pos:line="492" pos:column="35"/></name></expr>;<pos:position pos:line="492" pos:column="36"/></expr_stmt></block></then></if></elseif>
      <comment type="block" pos:line="493" pos:column="7">/* For bodytext and unedited includeFile: use the tempfile.
       */</comment>
      <else pos:line="495" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="496" pos:column="9">bodyfile<pos:position pos:line="496" pos:column="17"/></name> <operator pos:line="496" pos:column="18">=<pos:position pos:line="496" pos:column="19"/></operator> <name pos:line="496" pos:column="20">tempfile<pos:position pos:line="496" pos:column="28"/></name></expr>;<pos:position pos:line="496" pos:column="29"/></expr_stmt></block></else></if>

      <if pos:line="498" pos:column="7">if <condition pos:line="498" pos:column="10">(<expr><name pos:line="498" pos:column="11">fin<pos:position pos:line="498" pos:column="14"/></name></expr>)<pos:position pos:line="498" pos:column="15"/></condition><then pos:line="498" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="499" pos:column="9">safe_fclose<pos:position pos:line="499" pos:column="20"/></name> <argument_list pos:line="499" pos:column="21">(<argument><expr><operator pos:line="499" pos:column="22">&amp;<pos:position pos:line="499" pos:column="27"/></operator><name pos:line="499" pos:column="23">fin<pos:position pos:line="499" pos:column="26"/></name></expr></argument>)<pos:position pos:line="499" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="499" pos:column="28"/></expr_stmt></block></then></if>
    }<pos:position pos:line="500" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="502" pos:column="5">FREE<pos:position pos:line="502" pos:column="9"/></name> <argument_list pos:line="502" pos:column="10">(<argument><expr><operator pos:line="502" pos:column="11">&amp;<pos:position pos:line="502" pos:column="16"/></operator><name pos:line="502" pos:column="12">bodytext<pos:position pos:line="502" pos:column="20"/></name></expr></argument>)<pos:position pos:line="502" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="502" pos:column="22"/></expr_stmt>

    <if pos:line="504" pos:column="5">if <condition pos:line="504" pos:column="8">(<expr><name pos:line="504" pos:column="9">attach<pos:position pos:line="504" pos:column="15"/></name></expr>)<pos:position pos:line="504" pos:column="16"/></condition><then pos:line="504" pos:column="16">
    <block pos:line="505" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="506" pos:column="7">LIST<pos:position pos:line="506" pos:column="11"/></name> <modifier pos:line="506" pos:column="12">*<pos:position pos:line="506" pos:column="13"/></modifier></type><name pos:line="506" pos:column="13">t<pos:position pos:line="506" pos:column="14"/></name> <init pos:line="506" pos:column="15">= <expr><name pos:line="506" pos:column="17">attach<pos:position pos:line="506" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="506" pos:column="24"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="507" pos:column="7">BODY<pos:position pos:line="507" pos:column="11"/></name> <modifier pos:line="507" pos:column="12">*<pos:position pos:line="507" pos:column="13"/></modifier></type><name pos:line="507" pos:column="13">a<pos:position pos:line="507" pos:column="14"/></name> <init pos:line="507" pos:column="15">= <expr><name><name pos:line="507" pos:column="17">msg<pos:position pos:line="507" pos:column="20"/></name><operator pos:line="507" pos:column="20">-&gt;<pos:position pos:line="507" pos:column="25"/></operator><name pos:line="507" pos:column="22">content<pos:position pos:line="507" pos:column="29"/></name></name></expr></init></decl>;<pos:position pos:line="507" pos:column="30"/></decl_stmt>

      <while pos:line="509" pos:column="7">while <condition pos:line="509" pos:column="13">(<expr><name pos:line="509" pos:column="14">a<pos:position pos:line="509" pos:column="15"/></name> <operator pos:line="509" pos:column="16">&amp;&amp;<pos:position pos:line="509" pos:column="26"/></operator> <name><name pos:line="509" pos:column="19">a<pos:position pos:line="509" pos:column="20"/></name><operator pos:line="509" pos:column="20">-&gt;<pos:position pos:line="509" pos:column="25"/></operator><name pos:line="509" pos:column="22">next<pos:position pos:line="509" pos:column="26"/></name></name></expr>)<pos:position pos:line="509" pos:column="27"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="510" pos:column="9">a<pos:position pos:line="510" pos:column="10"/></name> <operator pos:line="510" pos:column="11">=<pos:position pos:line="510" pos:column="12"/></operator> <name><name pos:line="510" pos:column="13">a<pos:position pos:line="510" pos:column="14"/></name><operator pos:line="510" pos:column="14">-&gt;<pos:position pos:line="510" pos:column="19"/></operator><name pos:line="510" pos:column="16">next<pos:position pos:line="510" pos:column="20"/></name></name></expr>;<pos:position pos:line="510" pos:column="21"/></expr_stmt></block></while>

      <while pos:line="512" pos:column="7">while <condition pos:line="512" pos:column="13">(<expr><name pos:line="512" pos:column="14">t<pos:position pos:line="512" pos:column="15"/></name></expr>)<pos:position pos:line="512" pos:column="16"/></condition>
      <block pos:line="513" pos:column="7">{
	<if pos:line="514" pos:column="9">if <condition pos:line="514" pos:column="12">(<expr><name pos:line="514" pos:column="13">a<pos:position pos:line="514" pos:column="14"/></name></expr>)<pos:position pos:line="514" pos:column="15"/></condition><then pos:line="514" pos:column="15">
	<block pos:line="515" pos:column="9">{
	  <expr_stmt><expr><name><name pos:line="516" pos:column="11">a<pos:position pos:line="516" pos:column="12"/></name><operator pos:line="516" pos:column="12">-&gt;<pos:position pos:line="516" pos:column="17"/></operator><name pos:line="516" pos:column="14">next<pos:position pos:line="516" pos:column="18"/></name></name> <operator pos:line="516" pos:column="19">=<pos:position pos:line="516" pos:column="20"/></operator> <call><name pos:line="516" pos:column="21">mutt_make_file_attach<pos:position pos:line="516" pos:column="42"/></name> <argument_list pos:line="516" pos:column="43">(<argument><expr><name><name pos:line="516" pos:column="44">t<pos:position pos:line="516" pos:column="45"/></name><operator pos:line="516" pos:column="45">-&gt;<pos:position pos:line="516" pos:column="50"/></operator><name pos:line="516" pos:column="47">data<pos:position pos:line="516" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="516" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="516" pos:column="53"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="517" pos:column="11">a<pos:position pos:line="517" pos:column="12"/></name> <operator pos:line="517" pos:column="13">=<pos:position pos:line="517" pos:column="14"/></operator> <name><name pos:line="517" pos:column="15">a<pos:position pos:line="517" pos:column="16"/></name><operator pos:line="517" pos:column="16">-&gt;<pos:position pos:line="517" pos:column="21"/></operator><name pos:line="517" pos:column="18">next<pos:position pos:line="517" pos:column="22"/></name></name></expr>;<pos:position pos:line="517" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="518" pos:column="10"/></block></then>
	<else pos:line="519" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="520" pos:column="11">msg<pos:position pos:line="520" pos:column="14"/></name><operator pos:line="520" pos:column="14">-&gt;<pos:position pos:line="520" pos:column="19"/></operator><name pos:line="520" pos:column="16">content<pos:position pos:line="520" pos:column="23"/></name></name> <operator pos:line="520" pos:column="24">=<pos:position pos:line="520" pos:column="25"/></operator> <name pos:line="520" pos:column="26">a<pos:position pos:line="520" pos:column="27"/></name> <operator pos:line="520" pos:column="28">=<pos:position pos:line="520" pos:column="29"/></operator> <call><name pos:line="520" pos:column="30">mutt_make_file_attach<pos:position pos:line="520" pos:column="51"/></name> <argument_list pos:line="520" pos:column="52">(<argument><expr><name><name pos:line="520" pos:column="53">t<pos:position pos:line="520" pos:column="54"/></name><operator pos:line="520" pos:column="54">-&gt;<pos:position pos:line="520" pos:column="59"/></operator><name pos:line="520" pos:column="56">data<pos:position pos:line="520" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="520" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="520" pos:column="62"/></expr_stmt></block></else></if>
	<if pos:line="521" pos:column="9">if <condition pos:line="521" pos:column="12">(<expr><operator pos:line="521" pos:column="13">!<pos:position pos:line="521" pos:column="14"/></operator><name pos:line="521" pos:column="14">a<pos:position pos:line="521" pos:column="15"/></name></expr>)<pos:position pos:line="521" pos:column="16"/></condition><then pos:line="521" pos:column="16">
	<block pos:line="522" pos:column="9">{
	  <if pos:line="523" pos:column="11">if <condition pos:line="523" pos:column="14">(<expr><operator pos:line="523" pos:column="15">!<pos:position pos:line="523" pos:column="16"/></operator><call><name pos:line="523" pos:column="16">option<pos:position pos:line="523" pos:column="22"/></name> <argument_list pos:line="523" pos:column="23">(<argument><expr><name pos:line="523" pos:column="24">OPTNOCURSES<pos:position pos:line="523" pos:column="35"/></name></expr></argument>)<pos:position pos:line="523" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="523" pos:column="37"/></condition><then pos:line="523" pos:column="37">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="524" pos:column="13">mutt_endwin<pos:position pos:line="524" pos:column="24"/></name> <argument_list pos:line="524" pos:column="25">(<argument><expr><name pos:line="524" pos:column="26">NULL<pos:position pos:line="524" pos:column="30"/></name></expr></argument>)<pos:position pos:line="524" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="524" pos:column="32"/></expr_stmt></block></then></if>
	  <expr_stmt><expr><call><name pos:line="525" pos:column="11">fprintf<pos:position pos:line="525" pos:column="18"/></name> <argument_list pos:line="525" pos:column="19">(<argument><expr><name pos:line="525" pos:column="20">stderr<pos:position pos:line="525" pos:column="26"/></name></expr></argument>, <argument><expr><call><name pos:line="525" pos:column="28">_<pos:position pos:line="525" pos:column="29"/></name><argument_list pos:line="525" pos:column="29">(<argument><expr><literal type="string" pos:line="525" pos:column="30">"%s: unable to attach file.\n"<pos:position pos:line="525" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="525" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="525" pos:column="63">t<pos:position pos:line="525" pos:column="64"/></name><operator pos:line="525" pos:column="64">-&gt;<pos:position pos:line="525" pos:column="69"/></operator><name pos:line="525" pos:column="66">data<pos:position pos:line="525" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="525" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="525" pos:column="72"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="526" pos:column="11">mutt_free_list<pos:position pos:line="526" pos:column="25"/></name> <argument_list pos:line="526" pos:column="26">(<argument><expr><operator pos:line="526" pos:column="27">&amp;<pos:position pos:line="526" pos:column="32"/></operator><name pos:line="526" pos:column="28">attach<pos:position pos:line="526" pos:column="34"/></name></expr></argument>)<pos:position pos:line="526" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="526" pos:column="36"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="527" pos:column="11">exit<pos:position pos:line="527" pos:column="15"/></name> <argument_list pos:line="527" pos:column="16">(<argument><expr><literal type="number" pos:line="527" pos:column="17">1<pos:position pos:line="527" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="527" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="527" pos:column="20"/></expr_stmt>
	}<pos:position pos:line="528" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="529" pos:column="9">t<pos:position pos:line="529" pos:column="10"/></name> <operator pos:line="529" pos:column="11">=<pos:position pos:line="529" pos:column="12"/></operator> <name><name pos:line="529" pos:column="13">t<pos:position pos:line="529" pos:column="14"/></name><operator pos:line="529" pos:column="14">-&gt;<pos:position pos:line="529" pos:column="19"/></operator><name pos:line="529" pos:column="16">next<pos:position pos:line="529" pos:column="20"/></name></name></expr>;<pos:position pos:line="529" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="530" pos:column="8"/></block></while>
      <expr_stmt><expr><call><name pos:line="531" pos:column="7">mutt_free_list<pos:position pos:line="531" pos:column="21"/></name> <argument_list pos:line="531" pos:column="22">(<argument><expr><operator pos:line="531" pos:column="23">&amp;<pos:position pos:line="531" pos:column="28"/></operator><name pos:line="531" pos:column="24">attach<pos:position pos:line="531" pos:column="30"/></name></expr></argument>)<pos:position pos:line="531" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="531" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="532" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="534" pos:column="5">rv<pos:position pos:line="534" pos:column="7"/></name> <operator pos:line="534" pos:column="8">=<pos:position pos:line="534" pos:column="9"/></operator> <call><name pos:line="534" pos:column="10">ci_send_message<pos:position pos:line="534" pos:column="25"/></name> <argument_list pos:line="534" pos:column="26">(<argument><expr><name pos:line="534" pos:column="27">sendflags<pos:position pos:line="534" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="534" pos:column="38">msg<pos:position pos:line="534" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="534" pos:column="43">bodyfile<pos:position pos:line="534" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="534" pos:column="53">NULL<pos:position pos:line="534" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="534" pos:column="59">NULL<pos:position pos:line="534" pos:column="63"/></name></expr></argument>)<pos:position pos:line="534" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="534" pos:column="65"/></expr_stmt>

    <if pos:line="536" pos:column="5">if <condition pos:line="536" pos:column="8">(<expr><name pos:line="536" pos:column="9">edit_infile<pos:position pos:line="536" pos:column="20"/></name></expr>)<pos:position pos:line="536" pos:column="21"/></condition><then pos:line="536" pos:column="21">
    <block pos:line="537" pos:column="5">{
      <if pos:line="538" pos:column="7">if <condition pos:line="538" pos:column="10">(<expr><name pos:line="538" pos:column="11">includeFile<pos:position pos:line="538" pos:column="22"/></name></expr>)<pos:position pos:line="538" pos:column="23"/></condition><then pos:line="538" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="539" pos:column="9">msg<pos:position pos:line="539" pos:column="12"/></name><operator pos:line="539" pos:column="12">-&gt;<pos:position pos:line="539" pos:column="17"/></operator><name pos:line="539" pos:column="14">content<pos:position pos:line="539" pos:column="21"/></name><operator pos:line="539" pos:column="21">-&gt;<pos:position pos:line="539" pos:column="26"/></operator><name pos:line="539" pos:column="23">unlink<pos:position pos:line="539" pos:column="29"/></name></name> <operator pos:line="539" pos:column="30">=<pos:position pos:line="539" pos:column="31"/></operator> <literal type="number" pos:line="539" pos:column="32">0<pos:position pos:line="539" pos:column="33"/></literal></expr>;<pos:position pos:line="539" pos:column="34"/></expr_stmt></block></then>
      <elseif pos:line="540" pos:column="7">else <if pos:line="540" pos:column="12">if <condition pos:line="540" pos:column="15">(<expr><name pos:line="540" pos:column="16">draftFile<pos:position pos:line="540" pos:column="25"/></name></expr>)<pos:position pos:line="540" pos:column="26"/></condition><then pos:line="540" pos:column="26">
      <block pos:line="541" pos:column="7">{
        <if pos:line="542" pos:column="9">if <condition pos:line="542" pos:column="12">(<expr><call><name pos:line="542" pos:column="13">truncate<pos:position pos:line="542" pos:column="21"/></name> <argument_list pos:line="542" pos:column="22">(<argument><expr><name pos:line="542" pos:column="23">expanded_infile<pos:position pos:line="542" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="542" pos:column="40">0<pos:position pos:line="542" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="542" pos:column="42"/></argument_list></call> <operator pos:line="542" pos:column="43">==<pos:position pos:line="542" pos:column="45"/></operator> <operator pos:line="542" pos:column="46">-<pos:position pos:line="542" pos:column="47"/></operator><literal type="number" pos:line="542" pos:column="47">1<pos:position pos:line="542" pos:column="48"/></literal></expr>)<pos:position pos:line="542" pos:column="49"/></condition><then pos:line="542" pos:column="49">
        <block pos:line="543" pos:column="9">{
          <if pos:line="544" pos:column="11">if <condition pos:line="544" pos:column="14">(<expr><operator pos:line="544" pos:column="15">!<pos:position pos:line="544" pos:column="16"/></operator><call><name pos:line="544" pos:column="16">option<pos:position pos:line="544" pos:column="22"/></name> <argument_list pos:line="544" pos:column="23">(<argument><expr><name pos:line="544" pos:column="24">OPTNOCURSES<pos:position pos:line="544" pos:column="35"/></name></expr></argument>)<pos:position pos:line="544" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="544" pos:column="37"/></condition><then pos:line="544" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="545" pos:column="13">mutt_endwin<pos:position pos:line="545" pos:column="24"/></name> <argument_list pos:line="545" pos:column="25">(<argument><expr><name pos:line="545" pos:column="26">NULL<pos:position pos:line="545" pos:column="30"/></name></expr></argument>)<pos:position pos:line="545" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="545" pos:column="32"/></expr_stmt></block></then></if>
          <expr_stmt><expr><call><name pos:line="546" pos:column="11">perror<pos:position pos:line="546" pos:column="17"/></name> <argument_list pos:line="546" pos:column="18">(<argument><expr><name pos:line="546" pos:column="19">expanded_infile<pos:position pos:line="546" pos:column="34"/></name></expr></argument>)<pos:position pos:line="546" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="546" pos:column="36"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="547" pos:column="11">exit<pos:position pos:line="547" pos:column="15"/></name> <argument_list pos:line="547" pos:column="16">(<argument><expr><literal type="number" pos:line="547" pos:column="17">1<pos:position pos:line="547" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="547" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="547" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="548" pos:column="10"/></block></then></if>
        <if pos:line="549" pos:column="9">if <condition pos:line="549" pos:column="12">(<expr><operator pos:line="549" pos:column="13">(<pos:position pos:line="549" pos:column="14"/></operator><name pos:line="549" pos:column="14">fout<pos:position pos:line="549" pos:column="18"/></name> <operator pos:line="549" pos:column="19">=<pos:position pos:line="549" pos:column="20"/></operator> <call><name pos:line="549" pos:column="21">safe_fopen<pos:position pos:line="549" pos:column="31"/></name> <argument_list pos:line="549" pos:column="32">(<argument><expr><name pos:line="549" pos:column="33">expanded_infile<pos:position pos:line="549" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="549" pos:column="50">"a"<pos:position pos:line="549" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="549" pos:column="54"/></argument_list></call><operator pos:line="549" pos:column="54">)<pos:position pos:line="549" pos:column="55"/></operator> <operator pos:line="549" pos:column="56">==<pos:position pos:line="549" pos:column="58"/></operator> <name pos:line="549" pos:column="59">NULL<pos:position pos:line="549" pos:column="63"/></name></expr>)<pos:position pos:line="549" pos:column="64"/></condition><then pos:line="549" pos:column="64">
        <block pos:line="550" pos:column="9">{
          <if pos:line="551" pos:column="11">if <condition pos:line="551" pos:column="14">(<expr><operator pos:line="551" pos:column="15">!<pos:position pos:line="551" pos:column="16"/></operator><call><name pos:line="551" pos:column="16">option<pos:position pos:line="551" pos:column="22"/></name> <argument_list pos:line="551" pos:column="23">(<argument><expr><name pos:line="551" pos:column="24">OPTNOCURSES<pos:position pos:line="551" pos:column="35"/></name></expr></argument>)<pos:position pos:line="551" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="551" pos:column="37"/></condition><then pos:line="551" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="552" pos:column="13">mutt_endwin<pos:position pos:line="552" pos:column="24"/></name> <argument_list pos:line="552" pos:column="25">(<argument><expr><name pos:line="552" pos:column="26">NULL<pos:position pos:line="552" pos:column="30"/></name></expr></argument>)<pos:position pos:line="552" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="552" pos:column="32"/></expr_stmt></block></then></if>
          <expr_stmt><expr><call><name pos:line="553" pos:column="11">perror<pos:position pos:line="553" pos:column="17"/></name> <argument_list pos:line="553" pos:column="18">(<argument><expr><name pos:line="553" pos:column="19">expanded_infile<pos:position pos:line="553" pos:column="34"/></name></expr></argument>)<pos:position pos:line="553" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="553" pos:column="36"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="554" pos:column="11">exit<pos:position pos:line="554" pos:column="15"/></name> <argument_list pos:line="554" pos:column="16">(<argument><expr><literal type="number" pos:line="554" pos:column="17">1<pos:position pos:line="554" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="554" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="554" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="555" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="557" pos:column="9">/* If the message was sent or postponed, these will already
         * have been done.
         */</comment>
        <if pos:line="560" pos:column="9">if <condition pos:line="560" pos:column="12">(<expr><name pos:line="560" pos:column="13">rv<pos:position pos:line="560" pos:column="15"/></name> <operator pos:line="560" pos:column="16">&lt;<pos:position pos:line="560" pos:column="20"/></operator> <literal type="number" pos:line="560" pos:column="18">0<pos:position pos:line="560" pos:column="19"/></literal></expr>)<pos:position pos:line="560" pos:column="20"/></condition><then pos:line="560" pos:column="20">
        <block pos:line="561" pos:column="9">{
          <if pos:line="562" pos:column="11">if <condition pos:line="562" pos:column="14">(<expr><name><name pos:line="562" pos:column="15">msg<pos:position pos:line="562" pos:column="18"/></name><operator pos:line="562" pos:column="18">-&gt;<pos:position pos:line="562" pos:column="23"/></operator><name pos:line="562" pos:column="20">content<pos:position pos:line="562" pos:column="27"/></name><operator pos:line="562" pos:column="27">-&gt;<pos:position pos:line="562" pos:column="32"/></operator><name pos:line="562" pos:column="29">next<pos:position pos:line="562" pos:column="33"/></name></name></expr>)<pos:position pos:line="562" pos:column="34"/></condition><then pos:line="562" pos:column="34">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="563" pos:column="13">msg<pos:position pos:line="563" pos:column="16"/></name><operator pos:line="563" pos:column="16">-&gt;<pos:position pos:line="563" pos:column="21"/></operator><name pos:line="563" pos:column="18">content<pos:position pos:line="563" pos:column="25"/></name></name> <operator pos:line="563" pos:column="26">=<pos:position pos:line="563" pos:column="27"/></operator> <call><name pos:line="563" pos:column="28">mutt_make_multipart<pos:position pos:line="563" pos:column="47"/></name> <argument_list pos:line="563" pos:column="48">(<argument><expr><name><name pos:line="563" pos:column="49">msg<pos:position pos:line="563" pos:column="52"/></name><operator pos:line="563" pos:column="52">-&gt;<pos:position pos:line="563" pos:column="57"/></operator><name pos:line="563" pos:column="54">content<pos:position pos:line="563" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="563" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="563" pos:column="63"/></expr_stmt></block></then></if>
          <expr_stmt><expr><call><name pos:line="564" pos:column="11">mutt_encode_descriptions<pos:position pos:line="564" pos:column="35"/></name> <argument_list pos:line="564" pos:column="36">(<argument><expr><name><name pos:line="564" pos:column="37">msg<pos:position pos:line="564" pos:column="40"/></name><operator pos:line="564" pos:column="40">-&gt;<pos:position pos:line="564" pos:column="45"/></operator><name pos:line="564" pos:column="42">content<pos:position pos:line="564" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="564" pos:column="51">1<pos:position pos:line="564" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="564" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="564" pos:column="54"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="565" pos:column="11">mutt_prepare_envelope<pos:position pos:line="565" pos:column="32"/></name> <argument_list pos:line="565" pos:column="33">(<argument><expr><name><name pos:line="565" pos:column="34">msg<pos:position pos:line="565" pos:column="37"/></name><operator pos:line="565" pos:column="37">-&gt;<pos:position pos:line="565" pos:column="42"/></operator><name pos:line="565" pos:column="39">env<pos:position pos:line="565" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="565" pos:column="44">0<pos:position pos:line="565" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="565" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="565" pos:column="47"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="566" pos:column="11">mutt_env_to_intl<pos:position pos:line="566" pos:column="27"/></name> <argument_list pos:line="566" pos:column="28">(<argument><expr><name><name pos:line="566" pos:column="29">msg<pos:position pos:line="566" pos:column="32"/></name><operator pos:line="566" pos:column="32">-&gt;<pos:position pos:line="566" pos:column="37"/></operator><name pos:line="566" pos:column="34">env<pos:position pos:line="566" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="566" pos:column="39">NULL<pos:position pos:line="566" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="566" pos:column="45">NULL<pos:position pos:line="566" pos:column="49"/></name></expr></argument>)<pos:position pos:line="566" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="566" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="567" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="569" pos:column="9">mutt_write_rfc822_header<pos:position pos:line="569" pos:column="33"/></name> <argument_list pos:line="569" pos:column="34">(<argument><expr><name pos:line="569" pos:column="35">fout<pos:position pos:line="569" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="569" pos:column="41">msg<pos:position pos:line="569" pos:column="44"/></name><operator pos:line="569" pos:column="44">-&gt;<pos:position pos:line="569" pos:column="49"/></operator><name pos:line="569" pos:column="46">env<pos:position pos:line="569" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="569" pos:column="51">msg<pos:position pos:line="569" pos:column="54"/></name><operator pos:line="569" pos:column="54">-&gt;<pos:position pos:line="569" pos:column="59"/></operator><name pos:line="569" pos:column="56">content<pos:position pos:line="569" pos:column="63"/></name></name></expr></argument>, <argument><expr><operator pos:line="569" pos:column="65">-<pos:position pos:line="569" pos:column="66"/></operator><literal type="number" pos:line="569" pos:column="66">1<pos:position pos:line="569" pos:column="67"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="569" pos:column="69">0<pos:position pos:line="569" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="569" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="569" pos:column="72"/></expr_stmt>
        <if pos:line="570" pos:column="9">if <condition pos:line="570" pos:column="12">(<expr><call><name pos:line="570" pos:column="13">option<pos:position pos:line="570" pos:column="19"/></name> <argument_list pos:line="570" pos:column="20">(<argument><expr><name pos:line="570" pos:column="21">OPTRESUMEEDITEDDRAFTFILES<pos:position pos:line="570" pos:column="46"/></name></expr></argument>)<pos:position pos:line="570" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="570" pos:column="48"/></condition><then pos:line="570" pos:column="48">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="571" pos:column="11">fprintf<pos:position pos:line="571" pos:column="18"/></name> <argument_list pos:line="571" pos:column="19">(<argument><expr><name pos:line="571" pos:column="20">fout<pos:position pos:line="571" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="571" pos:column="26">"X-Mutt-Resume-Draft: 1\n"<pos:position pos:line="571" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="571" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="571" pos:column="54"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="572" pos:column="9">fputc<pos:position pos:line="572" pos:column="14"/></name> <argument_list pos:line="572" pos:column="15">(<argument><expr><literal type="char" pos:line="572" pos:column="16">'\n'<pos:position pos:line="572" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="572" pos:column="22">fout<pos:position pos:line="572" pos:column="26"/></name></expr></argument>)<pos:position pos:line="572" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="572" pos:column="28"/></expr_stmt>
        <if pos:line="573" pos:column="9">if <condition pos:line="573" pos:column="12">(<expr><operator pos:line="573" pos:column="13">(<pos:position pos:line="573" pos:column="14"/></operator><call><name pos:line="573" pos:column="14">mutt_write_mime_body<pos:position pos:line="573" pos:column="34"/></name> <argument_list pos:line="573" pos:column="35">(<argument><expr><name><name pos:line="573" pos:column="36">msg<pos:position pos:line="573" pos:column="39"/></name><operator pos:line="573" pos:column="39">-&gt;<pos:position pos:line="573" pos:column="44"/></operator><name pos:line="573" pos:column="41">content<pos:position pos:line="573" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="573" pos:column="50">fout<pos:position pos:line="573" pos:column="54"/></name></expr></argument>)<pos:position pos:line="573" pos:column="55"/></argument_list></call> <operator pos:line="573" pos:column="56">==<pos:position pos:line="573" pos:column="58"/></operator> <operator pos:line="573" pos:column="59">-<pos:position pos:line="573" pos:column="60"/></operator><literal type="number" pos:line="573" pos:column="60">1<pos:position pos:line="573" pos:column="61"/></literal><operator pos:line="573" pos:column="61">)<pos:position pos:line="573" pos:column="62"/></operator></expr>)<pos:position pos:line="573" pos:column="63"/></condition><then pos:line="573" pos:column="63">
        <block pos:line="574" pos:column="9">{
          <if pos:line="575" pos:column="11">if <condition pos:line="575" pos:column="14">(<expr><operator pos:line="575" pos:column="15">!<pos:position pos:line="575" pos:column="16"/></operator><call><name pos:line="575" pos:column="16">option<pos:position pos:line="575" pos:column="22"/></name> <argument_list pos:line="575" pos:column="23">(<argument><expr><name pos:line="575" pos:column="24">OPTNOCURSES<pos:position pos:line="575" pos:column="35"/></name></expr></argument>)<pos:position pos:line="575" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="575" pos:column="37"/></condition><then pos:line="575" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="576" pos:column="13">mutt_endwin<pos:position pos:line="576" pos:column="24"/></name> <argument_list pos:line="576" pos:column="25">(<argument><expr><name pos:line="576" pos:column="26">NULL<pos:position pos:line="576" pos:column="30"/></name></expr></argument>)<pos:position pos:line="576" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="576" pos:column="32"/></expr_stmt></block></then></if>
          <expr_stmt><expr><call><name pos:line="577" pos:column="11">safe_fclose<pos:position pos:line="577" pos:column="22"/></name> <argument_list pos:line="577" pos:column="23">(<argument><expr><operator pos:line="577" pos:column="24">&amp;<pos:position pos:line="577" pos:column="29"/></operator><name pos:line="577" pos:column="25">fout<pos:position pos:line="577" pos:column="29"/></name></expr></argument>)<pos:position pos:line="577" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="577" pos:column="31"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="578" pos:column="11">exit<pos:position pos:line="578" pos:column="15"/></name> <argument_list pos:line="578" pos:column="16">(<argument><expr><literal type="number" pos:line="578" pos:column="17">1<pos:position pos:line="578" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="578" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="578" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="579" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="580" pos:column="9">safe_fclose<pos:position pos:line="580" pos:column="20"/></name> <argument_list pos:line="580" pos:column="21">(<argument><expr><operator pos:line="580" pos:column="22">&amp;<pos:position pos:line="580" pos:column="27"/></operator><name pos:line="580" pos:column="23">fout<pos:position pos:line="580" pos:column="27"/></name></expr></argument>)<pos:position pos:line="580" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="580" pos:column="29"/></expr_stmt>
      }<pos:position pos:line="581" pos:column="8"/></block></then></if></elseif></if>

      <expr_stmt><expr><call><name pos:line="583" pos:column="7">mutt_free_header<pos:position pos:line="583" pos:column="23"/></name> <argument_list pos:line="583" pos:column="24">(<argument><expr><operator pos:line="583" pos:column="25">&amp;<pos:position pos:line="583" pos:column="30"/></operator><name pos:line="583" pos:column="26">msg<pos:position pos:line="583" pos:column="29"/></name></expr></argument>)<pos:position pos:line="583" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="583" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="584" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="586" pos:column="5">/* !edit_infile &amp;&amp; draftFile will leave the tempfile around */</comment>
    <if pos:line="587" pos:column="5">if <condition pos:line="587" pos:column="8">(<expr><name pos:line="587" pos:column="9">tempfile<pos:position pos:line="587" pos:column="17"/></name></expr>)<pos:position pos:line="587" pos:column="18"/></condition><then pos:line="587" pos:column="18">
    <block pos:line="588" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="589" pos:column="7">unlink<pos:position pos:line="589" pos:column="13"/></name> <argument_list pos:line="589" pos:column="14">(<argument><expr><name pos:line="589" pos:column="15">tempfile<pos:position pos:line="589" pos:column="23"/></name></expr></argument>)<pos:position pos:line="589" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="589" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="590" pos:column="7">FREE<pos:position pos:line="590" pos:column="11"/></name> <argument_list pos:line="590" pos:column="12">(<argument><expr><operator pos:line="590" pos:column="13">&amp;<pos:position pos:line="590" pos:column="18"/></operator><name pos:line="590" pos:column="14">tempfile<pos:position pos:line="590" pos:column="22"/></name></expr></argument>)<pos:position pos:line="590" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="590" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="591" pos:column="6"/></block></then></if>

    <if pos:line="593" pos:column="5">if <condition pos:line="593" pos:column="8">(<expr><operator pos:line="593" pos:column="9">!<pos:position pos:line="593" pos:column="10"/></operator><call><name pos:line="593" pos:column="10">option<pos:position pos:line="593" pos:column="16"/></name> <argument_list pos:line="593" pos:column="17">(<argument><expr><name pos:line="593" pos:column="18">OPTNOCURSES<pos:position pos:line="593" pos:column="29"/></name></expr></argument>)<pos:position pos:line="593" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="593" pos:column="31"/></condition><then pos:line="593" pos:column="31">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="594" pos:column="7">mutt_endwin<pos:position pos:line="594" pos:column="18"/></name> <argument_list pos:line="594" pos:column="19">(<argument><expr><name pos:line="594" pos:column="20">NULL<pos:position pos:line="594" pos:column="24"/></name></expr></argument>)<pos:position pos:line="594" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="594" pos:column="26"/></expr_stmt></block></then></if>

    <if pos:line="596" pos:column="5">if <condition pos:line="596" pos:column="8">(<expr><name pos:line="596" pos:column="9">rv<pos:position pos:line="596" pos:column="11"/></name></expr>)<pos:position pos:line="596" pos:column="12"/></condition><then pos:line="596" pos:column="12">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="597" pos:column="7">exit<pos:position pos:line="597" pos:column="11"/></name><argument_list pos:line="597" pos:column="11">(<argument><expr><literal type="number" pos:line="597" pos:column="12">1<pos:position pos:line="597" pos:column="13"/></literal></expr></argument>)<pos:position pos:line="597" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="597" pos:column="15"/></expr_stmt></block></then></if>
  }<pos:position pos:line="598" pos:column="4"/></block></then></if></elseif>
  <else pos:line="599" pos:column="3">else
  <block pos:line="600" pos:column="3">{
    <if pos:line="601" pos:column="5">if <condition pos:line="601" pos:column="8">(<expr><name pos:line="601" pos:column="9">flags<pos:position pos:line="601" pos:column="14"/></name> <operator pos:line="601" pos:column="15">&amp;<pos:position pos:line="601" pos:column="20"/></operator> <name pos:line="601" pos:column="17">M_BUFFY<pos:position pos:line="601" pos:column="24"/></name></expr>)<pos:position pos:line="601" pos:column="25"/></condition><then pos:line="601" pos:column="25">
    <block pos:line="602" pos:column="5">{
      <if pos:line="603" pos:column="7">if <condition pos:line="603" pos:column="10">(<expr><operator pos:line="603" pos:column="11">!<pos:position pos:line="603" pos:column="12"/></operator><call><name pos:line="603" pos:column="12">mutt_buffy_check<pos:position pos:line="603" pos:column="28"/></name> <argument_list pos:line="603" pos:column="29">(<argument><expr><literal type="number" pos:line="603" pos:column="30">0<pos:position pos:line="603" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="603" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="603" pos:column="33"/></condition><then pos:line="603" pos:column="33">
      <block pos:line="604" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="605" pos:column="9">mutt_endwin<pos:position pos:line="605" pos:column="20"/></name></type> <name pos:line="605" pos:column="21">_<pos:position pos:line="605" pos:column="22"/></name><argument_list pos:line="605" pos:column="22">(<argument><expr><literal type="string" pos:line="605" pos:column="23">"No mailbox with new mail."<pos:position pos:line="605" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="605" pos:column="51"/></argument_list></decl>;<pos:position pos:line="605" pos:column="52"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="606" pos:column="9">exit<pos:position pos:line="606" pos:column="13"/></name> <argument_list pos:line="606" pos:column="14">(<argument><expr><literal type="number" pos:line="606" pos:column="15">1<pos:position pos:line="606" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="606" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="606" pos:column="18"/></expr_stmt>
      }<pos:position pos:line="607" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="608" pos:column="7">folder<pos:position pos:line="608" pos:column="13"/></name><index pos:line="608" pos:column="13">[<expr><literal type="number" pos:line="608" pos:column="14">0<pos:position pos:line="608" pos:column="15"/></literal></expr>]<pos:position pos:line="608" pos:column="16"/></index></name> <operator pos:line="608" pos:column="17">=<pos:position pos:line="608" pos:column="18"/></operator> <literal type="number" pos:line="608" pos:column="19">0<pos:position pos:line="608" pos:column="20"/></literal></expr>;<pos:position pos:line="608" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="609" pos:column="7">mutt_buffy<pos:position pos:line="609" pos:column="17"/></name> <argument_list pos:line="609" pos:column="18">(<argument><expr><name pos:line="609" pos:column="19">folder<pos:position pos:line="609" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="609" pos:column="27">sizeof <argument_list pos:line="609" pos:column="34">(<argument><expr><name pos:line="609" pos:column="35">folder<pos:position pos:line="609" pos:column="41"/></name></expr></argument>)<pos:position pos:line="609" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="609" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="609" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="610" pos:column="6"/></block></then>
    <elseif pos:line="611" pos:column="5">else <if pos:line="611" pos:column="10">if <condition pos:line="611" pos:column="13">(<expr><name pos:line="611" pos:column="14">flags<pos:position pos:line="611" pos:column="19"/></name> <operator pos:line="611" pos:column="20">&amp;<pos:position pos:line="611" pos:column="25"/></operator> <name pos:line="611" pos:column="22">M_SELECT<pos:position pos:line="611" pos:column="30"/></name></expr>)<pos:position pos:line="611" pos:column="31"/></condition><then pos:line="611" pos:column="31">
    <block pos:line="612" pos:column="5">{
      <if pos:line="613" pos:column="7">if <condition pos:line="613" pos:column="10">(<expr><operator pos:line="613" pos:column="11">!<pos:position pos:line="613" pos:column="12"/></operator><name pos:line="613" pos:column="12">Incoming<pos:position pos:line="613" pos:column="20"/></name></expr>)<pos:position pos:line="613" pos:column="21"/></condition><then pos:line="613" pos:column="21"> <block pos:line="613" pos:column="22">{
	<decl_stmt><decl><type><name pos:line="614" pos:column="9">mutt_endwin<pos:position pos:line="614" pos:column="20"/></name></type> <name pos:line="614" pos:column="21">_<pos:position pos:line="614" pos:column="22"/></name><argument_list pos:line="614" pos:column="22">(<argument><expr><literal type="string" pos:line="614" pos:column="23">"No incoming mailboxes defined."<pos:position pos:line="614" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="614" pos:column="56"/></argument_list></decl>;<pos:position pos:line="614" pos:column="57"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="615" pos:column="9">exit<pos:position pos:line="615" pos:column="13"/></name> <argument_list pos:line="615" pos:column="14">(<argument><expr><literal type="number" pos:line="615" pos:column="15">1<pos:position pos:line="615" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="615" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="615" pos:column="18"/></expr_stmt>
      }<pos:position pos:line="616" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="617" pos:column="7">folder<pos:position pos:line="617" pos:column="13"/></name><index pos:line="617" pos:column="13">[<expr><literal type="number" pos:line="617" pos:column="14">0<pos:position pos:line="617" pos:column="15"/></literal></expr>]<pos:position pos:line="617" pos:column="16"/></index></name> <operator pos:line="617" pos:column="17">=<pos:position pos:line="617" pos:column="18"/></operator> <literal type="number" pos:line="617" pos:column="19">0<pos:position pos:line="617" pos:column="20"/></literal></expr>;<pos:position pos:line="617" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="618" pos:column="7">mutt_select_file<pos:position pos:line="618" pos:column="23"/></name> <argument_list pos:line="618" pos:column="24">(<argument><expr><name pos:line="618" pos:column="25">folder<pos:position pos:line="618" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="618" pos:column="33">sizeof <argument_list pos:line="618" pos:column="40">(<argument><expr><name pos:line="618" pos:column="41">folder<pos:position pos:line="618" pos:column="47"/></name></expr></argument>)<pos:position pos:line="618" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="618" pos:column="50">M_SEL_FOLDER<pos:position pos:line="618" pos:column="62"/></name> <operator pos:line="618" pos:column="63">|<pos:position pos:line="618" pos:column="64"/></operator> <name pos:line="618" pos:column="65">M_SEL_BUFFY<pos:position pos:line="618" pos:column="76"/></name></expr></argument>)<pos:position pos:line="618" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="618" pos:column="78"/></expr_stmt>
      <if pos:line="619" pos:column="7">if <condition pos:line="619" pos:column="10">(<expr><operator pos:line="619" pos:column="11">!<pos:position pos:line="619" pos:column="12"/></operator><name><name pos:line="619" pos:column="12">folder<pos:position pos:line="619" pos:column="18"/></name><index pos:line="619" pos:column="18">[<expr><literal type="number" pos:line="619" pos:column="19">0<pos:position pos:line="619" pos:column="20"/></literal></expr>]<pos:position pos:line="619" pos:column="21"/></index></name></expr>)<pos:position pos:line="619" pos:column="22"/></condition><then pos:line="619" pos:column="22">
      <block pos:line="620" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="621" pos:column="9">mutt_endwin<pos:position pos:line="621" pos:column="20"/></name> <argument_list pos:line="621" pos:column="21">(<argument><expr><name pos:line="621" pos:column="22">NULL<pos:position pos:line="621" pos:column="26"/></name></expr></argument>)<pos:position pos:line="621" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="621" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="622" pos:column="9">exit<pos:position pos:line="622" pos:column="13"/></name> <argument_list pos:line="622" pos:column="14">(<argument><expr><literal type="number" pos:line="622" pos:column="15">0<pos:position pos:line="622" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="622" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="622" pos:column="18"/></expr_stmt>
      }<pos:position pos:line="623" pos:column="8"/></block></then></if>
    }<pos:position pos:line="624" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="626" pos:column="5">if <condition pos:line="626" pos:column="8">(<expr><operator pos:line="626" pos:column="9">!<pos:position pos:line="626" pos:column="10"/></operator><name><name pos:line="626" pos:column="10">folder<pos:position pos:line="626" pos:column="16"/></name><index pos:line="626" pos:column="16">[<expr><literal type="number" pos:line="626" pos:column="17">0<pos:position pos:line="626" pos:column="18"/></literal></expr>]<pos:position pos:line="626" pos:column="19"/></index></name></expr>)<pos:position pos:line="626" pos:column="20"/></condition><then pos:line="626" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="627" pos:column="7">strfcpy<pos:position pos:line="627" pos:column="14"/></name> <argument_list pos:line="627" pos:column="15">(<argument><expr><name pos:line="627" pos:column="16">folder<pos:position pos:line="627" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="627" pos:column="24">NONULL<pos:position pos:line="627" pos:column="30"/></name><argument_list pos:line="627" pos:column="30">(<argument><expr><name pos:line="627" pos:column="31">Spoolfile<pos:position pos:line="627" pos:column="40"/></name></expr></argument>)<pos:position pos:line="627" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="627" pos:column="43">sizeof <argument_list pos:line="627" pos:column="50">(<argument><expr><name pos:line="627" pos:column="51">folder<pos:position pos:line="627" pos:column="57"/></name></expr></argument>)<pos:position pos:line="627" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="627" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="627" pos:column="60"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="628" pos:column="5">mutt_expand_path<pos:position pos:line="628" pos:column="21"/></name> <argument_list pos:line="628" pos:column="22">(<argument><expr><name pos:line="628" pos:column="23">folder<pos:position pos:line="628" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="628" pos:column="31">sizeof <argument_list pos:line="628" pos:column="38">(<argument><expr><name pos:line="628" pos:column="39">folder<pos:position pos:line="628" pos:column="45"/></name></expr></argument>)<pos:position pos:line="628" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="628" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="628" pos:column="48"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="630" pos:column="5">mutt_str_replace<pos:position pos:line="630" pos:column="21"/></name> <argument_list pos:line="630" pos:column="22">(<argument><expr><operator pos:line="630" pos:column="23">&amp;<pos:position pos:line="630" pos:column="28"/></operator><name pos:line="630" pos:column="24">CurrentFolder<pos:position pos:line="630" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="630" pos:column="39">folder<pos:position pos:line="630" pos:column="45"/></name></expr></argument>)<pos:position pos:line="630" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="630" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="631" pos:column="5">mutt_str_replace<pos:position pos:line="631" pos:column="21"/></name> <argument_list pos:line="631" pos:column="22">(<argument><expr><operator pos:line="631" pos:column="23">&amp;<pos:position pos:line="631" pos:column="28"/></operator><name pos:line="631" pos:column="24">LastFolder<pos:position pos:line="631" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="631" pos:column="36">folder<pos:position pos:line="631" pos:column="42"/></name></expr></argument>)<pos:position pos:line="631" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="631" pos:column="44"/></expr_stmt>

    <if pos:line="633" pos:column="5">if <condition pos:line="633" pos:column="8">(<expr><name pos:line="633" pos:column="9">flags<pos:position pos:line="633" pos:column="14"/></name> <operator pos:line="633" pos:column="15">&amp;<pos:position pos:line="633" pos:column="20"/></operator> <name pos:line="633" pos:column="17">M_IGNORE<pos:position pos:line="633" pos:column="25"/></name></expr>)<pos:position pos:line="633" pos:column="26"/></condition><then pos:line="633" pos:column="26">
    <block pos:line="634" pos:column="5">{
      <comment type="block" pos:line="635" pos:column="7">/* check to see if there are any messages in the folder */</comment>
      <switch pos:line="636" pos:column="7">switch <condition pos:line="636" pos:column="14">(<expr><call><name pos:line="636" pos:column="15">mx_check_empty<pos:position pos:line="636" pos:column="29"/></name> <argument_list pos:line="636" pos:column="30">(<argument><expr><name pos:line="636" pos:column="31">folder<pos:position pos:line="636" pos:column="37"/></name></expr></argument>)<pos:position pos:line="636" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="636" pos:column="39"/></condition>
      <block pos:line="637" pos:column="7">{
	<case pos:line="638" pos:column="9">case <expr><operator pos:line="638" pos:column="14">-<pos:position pos:line="638" pos:column="15"/></operator><literal type="number" pos:line="638" pos:column="15">1<pos:position pos:line="638" pos:column="16"/></literal></expr>:<pos:position pos:line="638" pos:column="17"/></case>
	  <expr_stmt><expr><call><name pos:line="639" pos:column="11">mutt_endwin<pos:position pos:line="639" pos:column="22"/></name> <argument_list pos:line="639" pos:column="23">(<argument><expr><call><name pos:line="639" pos:column="24">strerror<pos:position pos:line="639" pos:column="32"/></name> <argument_list pos:line="639" pos:column="33">(<argument><expr><name pos:line="639" pos:column="34">errno<pos:position pos:line="639" pos:column="39"/></name></expr></argument>)<pos:position pos:line="639" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="639" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="639" pos:column="42"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="640" pos:column="11">exit<pos:position pos:line="640" pos:column="15"/></name> <argument_list pos:line="640" pos:column="16">(<argument><expr><literal type="number" pos:line="640" pos:column="17">1<pos:position pos:line="640" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="640" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="640" pos:column="20"/></expr_stmt>
	<case pos:line="641" pos:column="9">case <expr><literal type="number" pos:line="641" pos:column="14">1<pos:position pos:line="641" pos:column="15"/></literal></expr>:<pos:position pos:line="641" pos:column="16"/></case>
	  <decl_stmt><decl><type><name pos:line="642" pos:column="11">mutt_endwin<pos:position pos:line="642" pos:column="22"/></name></type> <name pos:line="642" pos:column="23">_<pos:position pos:line="642" pos:column="24"/></name><argument_list pos:line="642" pos:column="24">(<argument><expr><literal type="string" pos:line="642" pos:column="25">"Mailbox is empty."<pos:position pos:line="642" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="642" pos:column="45"/></argument_list></decl>;<pos:position pos:line="642" pos:column="46"/></decl_stmt>
	  <expr_stmt><expr><call><name pos:line="643" pos:column="11">exit<pos:position pos:line="643" pos:column="15"/></name> <argument_list pos:line="643" pos:column="16">(<argument><expr><literal type="number" pos:line="643" pos:column="17">1<pos:position pos:line="643" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="643" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="643" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="644" pos:column="8"/></block></switch>
    }<pos:position pos:line="645" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="647" pos:column="5">mutt_folder_hook<pos:position pos:line="647" pos:column="21"/></name> <argument_list pos:line="647" pos:column="22">(<argument><expr><name pos:line="647" pos:column="23">folder<pos:position pos:line="647" pos:column="29"/></name></expr></argument>)<pos:position pos:line="647" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="647" pos:column="31"/></expr_stmt>

    <if pos:line="649" pos:column="5">if<condition pos:line="649" pos:column="7">(<expr><operator pos:line="649" pos:column="8">(<pos:position pos:line="649" pos:column="9"/></operator><name pos:line="649" pos:column="9">Context<pos:position pos:line="649" pos:column="16"/></name> <operator pos:line="649" pos:column="17">=<pos:position pos:line="649" pos:column="18"/></operator> <call><name pos:line="649" pos:column="19">mx_open_mailbox<pos:position pos:line="649" pos:column="34"/></name> <argument_list pos:line="649" pos:column="35">(<argument><expr><name pos:line="649" pos:column="36">folder<pos:position pos:line="649" pos:column="42"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="649" pos:column="44">(<pos:position pos:line="649" pos:column="45"/></operator><operator pos:line="649" pos:column="45">(<pos:position pos:line="649" pos:column="46"/></operator><name pos:line="649" pos:column="46">flags<pos:position pos:line="649" pos:column="51"/></name> <operator pos:line="649" pos:column="52">&amp;<pos:position pos:line="649" pos:column="57"/></operator> <name pos:line="649" pos:column="54">M_RO<pos:position pos:line="649" pos:column="58"/></name><operator pos:line="649" pos:column="58">)<pos:position pos:line="649" pos:column="59"/></operator> <operator pos:line="649" pos:column="60">||<pos:position pos:line="649" pos:column="62"/></operator> <call><name pos:line="649" pos:column="63">option<pos:position pos:line="649" pos:column="69"/></name> <argument_list pos:line="649" pos:column="70">(<argument><expr><name pos:line="649" pos:column="71">OPTREADONLY<pos:position pos:line="649" pos:column="82"/></name></expr></argument>)<pos:position pos:line="649" pos:column="83"/></argument_list></call><operator pos:line="649" pos:column="83">)<pos:position pos:line="649" pos:column="84"/></operator></expr> ?<pos:position pos:line="649" pos:column="86"/></condition><then pos:line="649" pos:column="86"> <expr><name pos:line="649" pos:column="87">M_READONLY<pos:position pos:line="649" pos:column="97"/></name></expr> <pos:position pos:line="649" pos:column="98"/></then><else pos:line="649" pos:column="98">: <expr><literal type="number" pos:line="649" pos:column="100">0<pos:position pos:line="649" pos:column="101"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="649" pos:column="103">NULL<pos:position pos:line="649" pos:column="107"/></name></expr></argument>)<pos:position pos:line="649" pos:column="108"/></argument_list></call><operator pos:line="649" pos:column="108">)<pos:position pos:line="649" pos:column="109"/></operator>
       <operator pos:line="650" pos:column="8">||<pos:position pos:line="650" pos:column="10"/></operator> <operator pos:line="650" pos:column="11">!<pos:position pos:line="650" pos:column="12"/></operator><name pos:line="650" pos:column="12">explicit_folder<pos:position pos:line="650" pos:column="27"/></name></expr>)<pos:position pos:line="650" pos:column="28"/></condition><then pos:line="650" pos:column="28">
    <block pos:line="651" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="652" pos:column="7">mutt_index_menu<pos:position pos:line="652" pos:column="22"/></name> <argument_list pos:line="652" pos:column="23">()<pos:position pos:line="652" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="652" pos:column="26"/></expr_stmt>
      <if pos:line="653" pos:column="7">if <condition pos:line="653" pos:column="10">(<expr><name pos:line="653" pos:column="11">Context<pos:position pos:line="653" pos:column="18"/></name></expr>)<pos:position pos:line="653" pos:column="19"/></condition><then pos:line="653" pos:column="19">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="654" pos:column="9">FREE<pos:position pos:line="654" pos:column="13"/></name> <argument_list pos:line="654" pos:column="14">(<argument><expr><operator pos:line="654" pos:column="15">&amp;<pos:position pos:line="654" pos:column="20"/></operator><name pos:line="654" pos:column="16">Context<pos:position pos:line="654" pos:column="23"/></name></expr></argument>)<pos:position pos:line="654" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="654" pos:column="25"/></expr_stmt></block></then></if>
    }<pos:position pos:line="655" pos:column="6"/></block></then></if>
<cpp:ifdef pos:line="656" pos:column="1">#<cpp:directive pos:line="656" pos:column="2">ifdef<pos:position pos:line="656" pos:column="7"/></cpp:directive> <name pos:line="656" pos:column="8">USE_IMAP<pos:position pos:line="656" pos:column="16"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="657" pos:column="5">imap_logout_all<pos:position pos:line="657" pos:column="20"/></name> <argument_list pos:line="657" pos:column="21">()<pos:position pos:line="657" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="657" pos:column="24"/></expr_stmt>
<cpp:endif pos:line="658" pos:column="1">#<cpp:directive pos:line="658" pos:column="2">endif<pos:position pos:line="658" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="659" pos:column="1">#<cpp:directive pos:line="659" pos:column="2">ifdef<pos:position pos:line="659" pos:column="7"/></cpp:directive> <name pos:line="659" pos:column="8">USE_SASL<pos:position pos:line="659" pos:column="16"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="660" pos:column="5">mutt_sasl_done<pos:position pos:line="660" pos:column="19"/></name> <argument_list pos:line="660" pos:column="20">()<pos:position pos:line="660" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="660" pos:column="23"/></expr_stmt>
<cpp:endif pos:line="661" pos:column="1">#<cpp:directive pos:line="661" pos:column="2">endif<pos:position pos:line="661" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="662" pos:column="5">mutt_free_opts<pos:position pos:line="662" pos:column="19"/></name> <argument_list pos:line="662" pos:column="20">()<pos:position pos:line="662" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="662" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="663" pos:column="5">mutt_endwin<pos:position pos:line="663" pos:column="16"/></name> <argument_list pos:line="663" pos:column="17">(<argument><expr><name pos:line="663" pos:column="18">Errorbuf<pos:position pos:line="663" pos:column="26"/></name></expr></argument>)<pos:position pos:line="663" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="663" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="664" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="666" pos:column="3">exit<pos:position pos:line="666" pos:column="7"/></name> <argument_list pos:line="666" pos:column="8">(<argument><expr><literal type="number" pos:line="666" pos:column="9">0<pos:position pos:line="666" pos:column="10"/></literal></expr></argument>)<pos:position pos:line="666" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="666" pos:column="12"/></expr_stmt>
}<pos:position pos:line="667" pos:column="2"/></block></function></unit>

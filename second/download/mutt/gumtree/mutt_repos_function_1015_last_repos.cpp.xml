<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1015_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">attach_forward_bodies<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">FILE<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type> <name pos:line="1" pos:column="43">fp<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">HEADER<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type> <name pos:line="1" pos:column="56">hdr<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
				   <parameter><decl><type><name pos:line="2" pos:column="36">ATTACH_CONTEXT<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">actx<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
				   <parameter><decl><type><name pos:line="3" pos:column="36">BODY<pos:position pos:line="3" pos:column="40"/></name> <modifier pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></modifier></type> <name pos:line="3" pos:column="43">cur<pos:position pos:line="3" pos:column="46"/></name></decl></parameter>,
				   <parameter><decl><type><name pos:line="4" pos:column="36">short<pos:position pos:line="4" pos:column="41"/></name></type> <name pos:line="4" pos:column="42">nattach<pos:position pos:line="4" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="50"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">short<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">i<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">short<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">mime_fwd_all<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">short<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">mime_fwd_any<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><literal type="number" pos:line="8" pos:column="24">1<pos:position pos:line="8" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">ATTACHPTR<pos:position pos:line="9" pos:column="12"/></name> <modifier pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></modifier></type><name pos:line="9" pos:column="14">parent<pos:position pos:line="9" pos:column="20"/></name> <init pos:line="9" pos:column="21">= <expr><name pos:line="9" pos:column="23">NULL<pos:position pos:line="9" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">HEADER<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">parent_hdr<pos:position pos:line="10" pos:column="21"/></name></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">FILE<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">parent_fp<pos:position pos:line="11" pos:column="18"/></name></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">HEADER<pos:position pos:line="12" pos:column="9"/></name> <modifier pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></modifier></type><name pos:line="12" pos:column="11">tmphdr<pos:position pos:line="12" pos:column="17"/></name> <init pos:line="12" pos:column="18">= <expr><name pos:line="12" pos:column="20">NULL<pos:position pos:line="12" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">BODY<pos:position pos:line="13" pos:column="7"/></name> <modifier pos:line="13" pos:column="8">*<pos:position pos:line="13" pos:column="9"/></modifier><modifier pos:line="13" pos:column="9">*<pos:position pos:line="13" pos:column="10"/></modifier></type><name pos:line="13" pos:column="10">last<pos:position pos:line="13" pos:column="14"/></name></decl>;<pos:position pos:line="13" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name></type> <name><name pos:line="14" pos:column="8">tmpbody<pos:position pos:line="14" pos:column="15"/></name><index pos:line="14" pos:column="15">[<expr><name pos:line="14" pos:column="16">_POSIX_PATH_MAX<pos:position pos:line="14" pos:column="31"/></name></expr>]<pos:position pos:line="14" pos:column="32"/></index></name></decl>;<pos:position pos:line="14" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">FILE<pos:position pos:line="15" pos:column="7"/></name> <modifier pos:line="15" pos:column="8">*<pos:position pos:line="15" pos:column="9"/></modifier></type><name pos:line="15" pos:column="9">tmpfp<pos:position pos:line="15" pos:column="14"/></name> <init pos:line="15" pos:column="15">= <expr><name pos:line="15" pos:column="17">NULL<pos:position pos:line="15" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="22"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="17" pos:column="3">char<pos:position pos:line="17" pos:column="7"/></name></type> <name><name pos:line="17" pos:column="8">prefix<pos:position pos:line="17" pos:column="14"/></name><index pos:line="17" pos:column="14">[<expr><name pos:line="17" pos:column="15">STRING<pos:position pos:line="17" pos:column="21"/></name></expr>]<pos:position pos:line="17" pos:column="22"/></index></name></decl>;<pos:position pos:line="17" pos:column="23"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="19" pos:column="3">int<pos:position pos:line="19" pos:column="6"/></name></type> <name pos:line="19" pos:column="7">rc<pos:position pos:line="19" pos:column="9"/></name> <init pos:line="19" pos:column="10">= <expr><literal type="number" pos:line="19" pos:column="12">0<pos:position pos:line="19" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="21" pos:column="3">STATE<pos:position pos:line="21" pos:column="8"/></name></type> <name pos:line="21" pos:column="9">st<pos:position pos:line="21" pos:column="11"/></name></decl>;<pos:position pos:line="21" pos:column="12"/></decl_stmt>

  <comment type="block" pos:line="23" pos:column="3">/* 
   * First, find the parent message.
   * Note: This could be made an option by just
   * putting the following lines into an if block.
   */</comment>


  <expr_stmt><expr><name pos:line="30" pos:column="3">parent<pos:position pos:line="30" pos:column="9"/></name> <operator pos:line="30" pos:column="10">=<pos:position pos:line="30" pos:column="11"/></operator> <call><name pos:line="30" pos:column="12">find_parent<pos:position pos:line="30" pos:column="23"/></name> <argument_list pos:line="30" pos:column="24">(<argument><expr><name pos:line="30" pos:column="25">actx<pos:position pos:line="30" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="31">cur<pos:position pos:line="30" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="36">nattach<pos:position pos:line="30" pos:column="43"/></name></expr></argument>)<pos:position pos:line="30" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="45"/></expr_stmt>
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name pos:line="31" pos:column="7">parent<pos:position pos:line="31" pos:column="13"/></name></expr>)<pos:position pos:line="31" pos:column="14"/></condition><then pos:line="31" pos:column="14">
  <block pos:line="32" pos:column="3">{
    <expr_stmt><expr><name pos:line="33" pos:column="5">parent_hdr<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <name><name pos:line="33" pos:column="18">parent<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">-&gt;<pos:position pos:line="33" pos:column="29"/></operator><name pos:line="33" pos:column="26">content<pos:position pos:line="33" pos:column="33"/></name><operator pos:line="33" pos:column="33">-&gt;<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="35">hdr<pos:position pos:line="33" pos:column="38"/></name></name></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="34" pos:column="5">parent_fp<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <name><name pos:line="34" pos:column="17">parent<pos:position pos:line="34" pos:column="23"/></name><operator pos:line="34" pos:column="23">-&gt;<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="25">fp<pos:position pos:line="34" pos:column="27"/></name></name></expr>;<pos:position pos:line="34" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="35" pos:column="4"/></block></then>
  <else pos:line="36" pos:column="3">else
  <block pos:line="37" pos:column="3">{
    <expr_stmt><expr><name pos:line="38" pos:column="5">parent_hdr<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <name pos:line="38" pos:column="18">hdr<pos:position pos:line="38" pos:column="21"/></name></expr>;<pos:position pos:line="38" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="39" pos:column="5">parent_fp<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">=<pos:position pos:line="39" pos:column="16"/></operator> <name><name pos:line="39" pos:column="17">actx<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">-&gt;<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="23">root_fp<pos:position pos:line="39" pos:column="30"/></name></name></expr>;<pos:position pos:line="39" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="40" pos:column="4"/></block></else></if>


  <expr_stmt><expr><name pos:line="43" pos:column="3">tmphdr<pos:position pos:line="43" pos:column="9"/></name> <operator pos:line="43" pos:column="10">=<pos:position pos:line="43" pos:column="11"/></operator> <call><name pos:line="43" pos:column="12">mutt_new_header<pos:position pos:line="43" pos:column="27"/></name> <argument_list pos:line="43" pos:column="28">()<pos:position pos:line="43" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="44" pos:column="3">tmphdr<pos:position pos:line="44" pos:column="9"/></name><operator pos:line="44" pos:column="9">-&gt;<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="11">env<pos:position pos:line="44" pos:column="14"/></name></name> <operator pos:line="44" pos:column="15">=<pos:position pos:line="44" pos:column="16"/></operator> <call><name pos:line="44" pos:column="17">mutt_new_envelope<pos:position pos:line="44" pos:column="34"/></name> <argument_list pos:line="44" pos:column="35">()<pos:position pos:line="44" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">mutt_make_forward_subject<pos:position pos:line="45" pos:column="28"/></name> <argument_list pos:line="45" pos:column="29">(<argument><expr><name><name pos:line="45" pos:column="30">tmphdr<pos:position pos:line="45" pos:column="36"/></name><operator pos:line="45" pos:column="36">-&gt;<pos:position pos:line="45" pos:column="41"/></operator><name pos:line="45" pos:column="38">env<pos:position pos:line="45" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="43">Context<pos:position pos:line="45" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="52">parent_hdr<pos:position pos:line="45" pos:column="62"/></name></expr></argument>)<pos:position pos:line="45" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="64"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="47" pos:column="3">mutt_mktemp<pos:position pos:line="47" pos:column="14"/></name> <argument_list pos:line="47" pos:column="15">(<argument><expr><name pos:line="47" pos:column="16">tmpbody<pos:position pos:line="47" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="25">sizeof <argument_list pos:line="47" pos:column="32">(<argument><expr><name pos:line="47" pos:column="33">tmpbody<pos:position pos:line="47" pos:column="40"/></name></expr></argument>)<pos:position pos:line="47" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="47" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="43"/></expr_stmt>
  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><operator pos:line="48" pos:column="7">(<pos:position pos:line="48" pos:column="8"/></operator><name pos:line="48" pos:column="8">tmpfp<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">=<pos:position pos:line="48" pos:column="15"/></operator> <call><name pos:line="48" pos:column="16">safe_fopen<pos:position pos:line="48" pos:column="26"/></name> <argument_list pos:line="48" pos:column="27">(<argument><expr><name pos:line="48" pos:column="28">tmpbody<pos:position pos:line="48" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="37">"w"<pos:position pos:line="48" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="41"/></argument_list></call><operator pos:line="48" pos:column="41">)<pos:position pos:line="48" pos:column="42"/></operator> <operator pos:line="48" pos:column="43">==<pos:position pos:line="48" pos:column="45"/></operator> <name pos:line="48" pos:column="46">NULL<pos:position pos:line="48" pos:column="50"/></name></expr>)<pos:position pos:line="48" pos:column="51"/></condition><then pos:line="48" pos:column="51">
  <block pos:line="49" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">mutt_error<pos:position pos:line="50" pos:column="15"/></name> <argument_list pos:line="50" pos:column="16">(<argument><expr><call><name pos:line="50" pos:column="17">_<pos:position pos:line="50" pos:column="18"/></name><argument_list pos:line="50" pos:column="18">(<argument><expr><literal type="string" pos:line="50" pos:column="19">"Can't open temporary file %s."<pos:position pos:line="50" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="50" pos:column="53">tmpbody<pos:position pos:line="50" pos:column="60"/></name></expr></argument>)<pos:position pos:line="50" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="62"/></expr_stmt>
    <return pos:line="51" pos:column="5">return;<pos:position pos:line="51" pos:column="12"/></return>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="54" pos:column="3">mutt_forward_intro<pos:position pos:line="54" pos:column="21"/></name> <argument_list pos:line="54" pos:column="22">(<argument><expr><name pos:line="54" pos:column="23">Context<pos:position pos:line="54" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="32">parent_hdr<pos:position pos:line="54" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="44">tmpfp<pos:position pos:line="54" pos:column="49"/></name></expr></argument>)<pos:position pos:line="54" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="51"/></expr_stmt>

  <comment type="block" pos:line="56" pos:column="3">/* prepare the prefix here since we'll need it later. */</comment>

  <if pos:line="58" pos:column="3">if <condition pos:line="58" pos:column="6">(<expr><call><name pos:line="58" pos:column="7">option<pos:position pos:line="58" pos:column="13"/></name> <argument_list pos:line="58" pos:column="14">(<argument><expr><name pos:line="58" pos:column="15">OPTFORWQUOTE<pos:position pos:line="58" pos:column="27"/></name></expr></argument>)<pos:position pos:line="58" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="29"/></condition><then pos:line="58" pos:column="29">
  <block pos:line="59" pos:column="3">{
    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><operator pos:line="60" pos:column="9">!<pos:position pos:line="60" pos:column="10"/></operator><call><name pos:line="60" pos:column="10">option<pos:position pos:line="60" pos:column="16"/></name> <argument_list pos:line="60" pos:column="17">(<argument><expr><name pos:line="60" pos:column="18">OPTTEXTFLOWED<pos:position pos:line="60" pos:column="31"/></name></expr></argument>)<pos:position pos:line="60" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="33"/></condition><then pos:line="60" pos:column="33">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="7">_mutt_make_string<pos:position pos:line="61" pos:column="24"/></name> <argument_list pos:line="61" pos:column="25">(<argument><expr><name pos:line="61" pos:column="26">prefix<pos:position pos:line="61" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="34">sizeof <argument_list pos:line="61" pos:column="41">(<argument><expr><name pos:line="61" pos:column="42">prefix<pos:position pos:line="61" pos:column="48"/></name></expr></argument>)<pos:position pos:line="61" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="61" pos:column="51">NONULL<pos:position pos:line="61" pos:column="57"/></name> <argument_list pos:line="61" pos:column="58">(<argument><expr><name pos:line="61" pos:column="59">Prefix<pos:position pos:line="61" pos:column="65"/></name></expr></argument>)<pos:position pos:line="61" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="61" pos:column="68">Context<pos:position pos:line="61" pos:column="75"/></name></expr></argument>,
			 <argument><expr><name pos:line="62" pos:column="26">parent_hdr<pos:position pos:line="62" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="38">0<pos:position pos:line="62" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="41"/></expr_stmt></block></then>
    <else pos:line="63" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="7">strfcpy<pos:position pos:line="64" pos:column="14"/></name> <argument_list pos:line="64" pos:column="15">(<argument><expr><name pos:line="64" pos:column="16">prefix<pos:position pos:line="64" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="24">"&gt;"<pos:position pos:line="64" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="64" pos:column="29">sizeof <argument_list pos:line="64" pos:column="36">(<argument><expr><name pos:line="64" pos:column="37">prefix<pos:position pos:line="64" pos:column="43"/></name></expr></argument>)<pos:position pos:line="64" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="64" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="46"/></expr_stmt></block></else></if>
  }<pos:position pos:line="65" pos:column="4"/></block></then></if>
    
  <expr_stmt><expr><call><name pos:line="67" pos:column="3">include_header<pos:position pos:line="67" pos:column="17"/></name> <argument_list pos:line="67" pos:column="18">(<argument><expr><call><name pos:line="67" pos:column="19">option<pos:position pos:line="67" pos:column="25"/></name> <argument_list pos:line="67" pos:column="26">(<argument><expr><name pos:line="67" pos:column="27">OPTFORWQUOTE<pos:position pos:line="67" pos:column="39"/></name></expr></argument>)<pos:position pos:line="67" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="67" pos:column="42">parent_fp<pos:position pos:line="67" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="53">parent_hdr<pos:position pos:line="67" pos:column="63"/></name></expr></argument>,
		  <argument><expr><name pos:line="68" pos:column="19">tmpfp<pos:position pos:line="68" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="26">prefix<pos:position pos:line="68" pos:column="32"/></name></expr></argument>)<pos:position pos:line="68" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="34"/></expr_stmt>


  <comment type="block" pos:line="71" pos:column="3">/* 
   * Now, we have prepared the first part of the message body: The
   * original message's header. 
   *
   * The next part is more interesting: either include the message bodies,
   * or attach them.
   */</comment>

  <if pos:line="79" pos:column="3">if <condition pos:line="79" pos:column="6">(<expr><operator pos:line="79" pos:column="7">(<pos:position pos:line="79" pos:column="8"/></operator><operator pos:line="79" pos:column="8">!<pos:position pos:line="79" pos:column="9"/></operator><name pos:line="79" pos:column="9">cur<pos:position pos:line="79" pos:column="12"/></name> <operator pos:line="79" pos:column="13">||<pos:position pos:line="79" pos:column="15"/></operator> <call><name pos:line="79" pos:column="16">mutt_can_decode<pos:position pos:line="79" pos:column="31"/></name> <argument_list pos:line="79" pos:column="32">(<argument><expr><name pos:line="79" pos:column="33">cur<pos:position pos:line="79" pos:column="36"/></name></expr></argument>)<pos:position pos:line="79" pos:column="37"/></argument_list></call><operator pos:line="79" pos:column="37">)<pos:position pos:line="79" pos:column="38"/></operator> <operator pos:line="79" pos:column="39">&amp;&amp;<pos:position pos:line="79" pos:column="49"/></operator>
      <operator pos:line="80" pos:column="7">(<pos:position pos:line="80" pos:column="8"/></operator><name pos:line="80" pos:column="8">rc<pos:position pos:line="80" pos:column="10"/></name> <operator pos:line="80" pos:column="11">=<pos:position pos:line="80" pos:column="12"/></operator> <call><name pos:line="80" pos:column="13">query_quadoption<pos:position pos:line="80" pos:column="29"/></name> <argument_list pos:line="80" pos:column="30">(<argument><expr><name pos:line="80" pos:column="31">OPT_MIMEFWD<pos:position pos:line="80" pos:column="42"/></name></expr></argument>, 
			      <argument><expr><call><name pos:line="81" pos:column="31">_<pos:position pos:line="81" pos:column="32"/></name><argument_list pos:line="81" pos:column="32">(<argument><expr><literal type="string" pos:line="81" pos:column="33">"Forward as attachments?"<pos:position pos:line="81" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="81" pos:column="60"/></argument_list></call><operator pos:line="81" pos:column="60">)<pos:position pos:line="81" pos:column="61"/></operator> <operator pos:line="81" pos:column="62">==<pos:position pos:line="81" pos:column="64"/></operator> <name pos:line="81" pos:column="65">MUTT_YES<pos:position pos:line="81" pos:column="73"/></name></expr>)<pos:position pos:line="81" pos:column="74"/></condition><then pos:line="81" pos:column="74">
    <block type="pseudo"><expr_stmt><expr><name pos:line="82" pos:column="5">mime_fwd_all<pos:position pos:line="82" pos:column="17"/></name> <operator pos:line="82" pos:column="18">=<pos:position pos:line="82" pos:column="19"/></operator> <literal type="number" pos:line="82" pos:column="20">1<pos:position pos:line="82" pos:column="21"/></literal></expr>;<pos:position pos:line="82" pos:column="22"/></expr_stmt></block></then>
  <elseif pos:line="83" pos:column="3">else <if pos:line="83" pos:column="8">if <condition pos:line="83" pos:column="11">(<expr><name pos:line="83" pos:column="12">rc<pos:position pos:line="83" pos:column="14"/></name> <operator pos:line="83" pos:column="15">==<pos:position pos:line="83" pos:column="17"/></operator> <operator pos:line="83" pos:column="18">-<pos:position pos:line="83" pos:column="19"/></operator><literal type="number" pos:line="83" pos:column="19">1<pos:position pos:line="83" pos:column="20"/></literal></expr>)<pos:position pos:line="83" pos:column="21"/></condition><then pos:line="83" pos:column="21">
    <block type="pseudo"><goto pos:line="84" pos:column="5">goto <name pos:line="84" pos:column="10">bail<pos:position pos:line="84" pos:column="14"/></name>;<pos:position pos:line="84" pos:column="15"/></goto></block></then></if></elseif></if>

  <comment type="block" pos:line="86" pos:column="3">/* 
   * shortcut MIMEFWDREST when there is only one attachment.  Is 
   * this intuitive?
   */</comment>

  <if pos:line="91" pos:column="3">if <condition pos:line="91" pos:column="6">(<expr><operator pos:line="91" pos:column="7">!<pos:position pos:line="91" pos:column="8"/></operator><name pos:line="91" pos:column="8">mime_fwd_all<pos:position pos:line="91" pos:column="20"/></name> <operator pos:line="91" pos:column="21">&amp;&amp;<pos:position pos:line="91" pos:column="31"/></operator> <operator pos:line="91" pos:column="24">!<pos:position pos:line="91" pos:column="25"/></operator><name pos:line="91" pos:column="25">cur<pos:position pos:line="91" pos:column="28"/></name> <operator pos:line="91" pos:column="29">&amp;&amp;<pos:position pos:line="91" pos:column="39"/></operator> <operator pos:line="91" pos:column="32">(<pos:position pos:line="91" pos:column="33"/></operator><name pos:line="91" pos:column="33">nattach<pos:position pos:line="91" pos:column="40"/></name> <operator pos:line="91" pos:column="41">&gt;<pos:position pos:line="91" pos:column="45"/></operator> <literal type="number" pos:line="91" pos:column="43">1<pos:position pos:line="91" pos:column="44"/></literal><operator pos:line="91" pos:column="44">)<pos:position pos:line="91" pos:column="45"/></operator> 
      <operator pos:line="92" pos:column="7">&amp;&amp;<pos:position pos:line="92" pos:column="17"/></operator> <operator pos:line="92" pos:column="10">!<pos:position pos:line="92" pos:column="11"/></operator><call><name pos:line="92" pos:column="11">check_can_decode<pos:position pos:line="92" pos:column="27"/></name> <argument_list pos:line="92" pos:column="28">(<argument><expr><name pos:line="92" pos:column="29">actx<pos:position pos:line="92" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="35">cur<pos:position pos:line="92" pos:column="38"/></name></expr></argument>)<pos:position pos:line="92" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="92" pos:column="40"/></condition><then pos:line="92" pos:column="40">
  <block pos:line="93" pos:column="3">{
    <if pos:line="94" pos:column="5">if <condition pos:line="94" pos:column="8">(<expr><operator pos:line="94" pos:column="9">(<pos:position pos:line="94" pos:column="10"/></operator><name pos:line="94" pos:column="10">rc<pos:position pos:line="94" pos:column="12"/></name> <operator pos:line="94" pos:column="13">=<pos:position pos:line="94" pos:column="14"/></operator> <call><name pos:line="94" pos:column="15">query_quadoption<pos:position pos:line="94" pos:column="31"/></name> <argument_list pos:line="94" pos:column="32">(<argument><expr><name pos:line="94" pos:column="33">OPT_MIMEFWDREST<pos:position pos:line="94" pos:column="48"/></name></expr></argument>,
<argument><expr><call><name pos:line="95" pos:column="1">_<pos:position pos:line="95" pos:column="2"/></name><argument_list pos:line="95" pos:column="2">(<argument><expr><literal type="string" pos:line="95" pos:column="3">"Can't decode all tagged attachments.  MIME-forward the others?"<pos:position pos:line="95" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="95" pos:column="69"/></argument_list></call><operator pos:line="95" pos:column="69">)<pos:position pos:line="95" pos:column="70"/></operator> <operator pos:line="95" pos:column="71">==<pos:position pos:line="95" pos:column="73"/></operator> <operator pos:line="95" pos:column="74">-<pos:position pos:line="95" pos:column="75"/></operator><literal type="number" pos:line="95" pos:column="75">1<pos:position pos:line="95" pos:column="76"/></literal></expr>)<pos:position pos:line="95" pos:column="77"/></condition><then pos:line="95" pos:column="77">
      <block type="pseudo"><goto pos:line="96" pos:column="7">goto <name pos:line="96" pos:column="12">bail<pos:position pos:line="96" pos:column="16"/></name>;<pos:position pos:line="96" pos:column="17"/></goto></block></then>
    <elseif pos:line="97" pos:column="5">else <if pos:line="97" pos:column="10">if <condition pos:line="97" pos:column="13">(<expr><name pos:line="97" pos:column="14">rc<pos:position pos:line="97" pos:column="16"/></name> <operator pos:line="97" pos:column="17">==<pos:position pos:line="97" pos:column="19"/></operator> <name pos:line="97" pos:column="20">MUTT_NO<pos:position pos:line="97" pos:column="27"/></name></expr>)<pos:position pos:line="97" pos:column="28"/></condition><then pos:line="97" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><name pos:line="98" pos:column="7">mime_fwd_any<pos:position pos:line="98" pos:column="19"/></name> <operator pos:line="98" pos:column="20">=<pos:position pos:line="98" pos:column="21"/></operator> <literal type="number" pos:line="98" pos:column="22">0<pos:position pos:line="98" pos:column="23"/></literal></expr>;<pos:position pos:line="98" pos:column="24"/></expr_stmt></block></then></if></elseif></if>
  }<pos:position pos:line="99" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="101" pos:column="3">/* initialize a state structure */</comment>
  
  <expr_stmt><expr><call><name pos:line="103" pos:column="3">memset<pos:position pos:line="103" pos:column="9"/></name> <argument_list pos:line="103" pos:column="10">(<argument><expr><operator pos:line="103" pos:column="11">&amp;<pos:position pos:line="103" pos:column="16"/></operator><name pos:line="103" pos:column="12">st<pos:position pos:line="103" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="103" pos:column="16">0<pos:position pos:line="103" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="103" pos:column="19">sizeof <argument_list pos:line="103" pos:column="26">(<argument><expr><name pos:line="103" pos:column="27">st<pos:position pos:line="103" pos:column="29"/></name></expr></argument>)<pos:position pos:line="103" pos:column="30"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="103" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="32"/></expr_stmt>
  
  <if pos:line="105" pos:column="3">if <condition pos:line="105" pos:column="6">(<expr><call><name pos:line="105" pos:column="7">option<pos:position pos:line="105" pos:column="13"/></name> <argument_list pos:line="105" pos:column="14">(<argument><expr><name pos:line="105" pos:column="15">OPTFORWQUOTE<pos:position pos:line="105" pos:column="27"/></name></expr></argument>)<pos:position pos:line="105" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="105" pos:column="29"/></condition><then pos:line="105" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="106" pos:column="5">st<pos:position pos:line="106" pos:column="7"/></name><operator pos:line="106" pos:column="7">.<pos:position pos:line="106" pos:column="8"/></operator><name pos:line="106" pos:column="8">prefix<pos:position pos:line="106" pos:column="14"/></name></name> <operator pos:line="106" pos:column="15">=<pos:position pos:line="106" pos:column="16"/></operator> <name pos:line="106" pos:column="17">prefix<pos:position pos:line="106" pos:column="23"/></name></expr>;<pos:position pos:line="106" pos:column="24"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name><name pos:line="107" pos:column="3">st<pos:position pos:line="107" pos:column="5"/></name><operator pos:line="107" pos:column="5">.<pos:position pos:line="107" pos:column="6"/></operator><name pos:line="107" pos:column="6">flags<pos:position pos:line="107" pos:column="11"/></name></name> <operator pos:line="107" pos:column="12">=<pos:position pos:line="107" pos:column="13"/></operator> <name pos:line="107" pos:column="14">MUTT_CHARCONV<pos:position pos:line="107" pos:column="27"/></name></expr>;<pos:position pos:line="107" pos:column="28"/></expr_stmt>
  <if pos:line="108" pos:column="3">if <condition pos:line="108" pos:column="6">(<expr><call><name pos:line="108" pos:column="7">option<pos:position pos:line="108" pos:column="13"/></name> <argument_list pos:line="108" pos:column="14">(<argument><expr><name pos:line="108" pos:column="15">OPTWEED<pos:position pos:line="108" pos:column="22"/></name></expr></argument>)<pos:position pos:line="108" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="108" pos:column="24"/></condition><then pos:line="108" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="109" pos:column="5">st<pos:position pos:line="109" pos:column="7"/></name><operator pos:line="109" pos:column="7">.<pos:position pos:line="109" pos:column="8"/></operator><name pos:line="109" pos:column="8">flags<pos:position pos:line="109" pos:column="13"/></name></name> <operator pos:line="109" pos:column="14">|=<pos:position pos:line="109" pos:column="16"/></operator> <name pos:line="109" pos:column="17">MUTT_WEED<pos:position pos:line="109" pos:column="26"/></name></expr>;<pos:position pos:line="109" pos:column="27"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name><name pos:line="110" pos:column="3">st<pos:position pos:line="110" pos:column="5"/></name><operator pos:line="110" pos:column="5">.<pos:position pos:line="110" pos:column="6"/></operator><name pos:line="110" pos:column="6">fpout<pos:position pos:line="110" pos:column="11"/></name></name> <operator pos:line="110" pos:column="12">=<pos:position pos:line="110" pos:column="13"/></operator> <name pos:line="110" pos:column="14">tmpfp<pos:position pos:line="110" pos:column="19"/></name></expr>;<pos:position pos:line="110" pos:column="20"/></expr_stmt>

  <comment type="block" pos:line="112" pos:column="3">/* where do we append new MIME parts? */</comment>
  <expr_stmt><expr><name pos:line="113" pos:column="3">last<pos:position pos:line="113" pos:column="7"/></name> <operator pos:line="113" pos:column="8">=<pos:position pos:line="113" pos:column="9"/></operator> <operator pos:line="113" pos:column="10">&amp;<pos:position pos:line="113" pos:column="15"/></operator><name><name pos:line="113" pos:column="11">tmphdr<pos:position pos:line="113" pos:column="17"/></name><operator pos:line="113" pos:column="17">-&gt;<pos:position pos:line="113" pos:column="22"/></operator><name pos:line="113" pos:column="19">content<pos:position pos:line="113" pos:column="26"/></name></name></expr>;<pos:position pos:line="113" pos:column="27"/></expr_stmt>

  <if pos:line="115" pos:column="3">if <condition pos:line="115" pos:column="6">(<expr><name pos:line="115" pos:column="7">cur<pos:position pos:line="115" pos:column="10"/></name></expr>)<pos:position pos:line="115" pos:column="11"/></condition><then pos:line="115" pos:column="11">
  <block pos:line="116" pos:column="3">{
    <comment type="block" pos:line="117" pos:column="5">/* single body case */</comment>

    <if pos:line="119" pos:column="5">if <condition pos:line="119" pos:column="8">(<expr><operator pos:line="119" pos:column="9">!<pos:position pos:line="119" pos:column="10"/></operator><name pos:line="119" pos:column="10">mime_fwd_all<pos:position pos:line="119" pos:column="22"/></name> <operator pos:line="119" pos:column="23">&amp;&amp;<pos:position pos:line="119" pos:column="33"/></operator> <call><name pos:line="119" pos:column="26">mutt_can_decode<pos:position pos:line="119" pos:column="41"/></name> <argument_list pos:line="119" pos:column="42">(<argument><expr><name pos:line="119" pos:column="43">cur<pos:position pos:line="119" pos:column="46"/></name></expr></argument>)<pos:position pos:line="119" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="119" pos:column="48"/></condition><then pos:line="119" pos:column="48">
    <block pos:line="120" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="121" pos:column="7">st<pos:position pos:line="121" pos:column="9"/></name><operator pos:line="121" pos:column="9">.<pos:position pos:line="121" pos:column="10"/></operator><name pos:line="121" pos:column="10">fpin<pos:position pos:line="121" pos:column="14"/></name></name> <operator pos:line="121" pos:column="15">=<pos:position pos:line="121" pos:column="16"/></operator> <name pos:line="121" pos:column="17">fp<pos:position pos:line="121" pos:column="19"/></name></expr>;<pos:position pos:line="121" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="122" pos:column="7">mutt_body_handler<pos:position pos:line="122" pos:column="24"/></name> <argument_list pos:line="122" pos:column="25">(<argument><expr><name pos:line="122" pos:column="26">cur<pos:position pos:line="122" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="122" pos:column="31">&amp;<pos:position pos:line="122" pos:column="36"/></operator><name pos:line="122" pos:column="32">st<pos:position pos:line="122" pos:column="34"/></name></expr></argument>)<pos:position pos:line="122" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="123" pos:column="7">state_putc<pos:position pos:line="123" pos:column="17"/></name> <argument_list pos:line="123" pos:column="18">(<argument><expr><literal type="char" pos:line="123" pos:column="19">'\n'<pos:position pos:line="123" pos:column="23"/></literal></expr></argument>, <argument><expr><operator pos:line="123" pos:column="25">&amp;<pos:position pos:line="123" pos:column="30"/></operator><name pos:line="123" pos:column="26">st<pos:position pos:line="123" pos:column="28"/></name></expr></argument>)<pos:position pos:line="123" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="124" pos:column="6"/></block></then>
    <else pos:line="125" pos:column="5">else
    <block pos:line="126" pos:column="5">{
      <if pos:line="127" pos:column="7">if <condition pos:line="127" pos:column="10">(<expr><call><name pos:line="127" pos:column="11">mutt_copy_body<pos:position pos:line="127" pos:column="25"/></name> <argument_list pos:line="127" pos:column="26">(<argument><expr><name pos:line="127" pos:column="27">fp<pos:position pos:line="127" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="31">last<pos:position pos:line="127" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="37">cur<pos:position pos:line="127" pos:column="40"/></name></expr></argument>)<pos:position pos:line="127" pos:column="41"/></argument_list></call> <operator pos:line="127" pos:column="42">==<pos:position pos:line="127" pos:column="44"/></operator> <operator pos:line="127" pos:column="45">-<pos:position pos:line="127" pos:column="46"/></operator><literal type="number" pos:line="127" pos:column="46">1<pos:position pos:line="127" pos:column="47"/></literal></expr>)<pos:position pos:line="127" pos:column="48"/></condition><then pos:line="127" pos:column="48">
	<block type="pseudo"><goto pos:line="128" pos:column="9">goto <name pos:line="128" pos:column="14">bail<pos:position pos:line="128" pos:column="18"/></name>;<pos:position pos:line="128" pos:column="19"/></goto></block></then></if>
      <expr_stmt><expr><name pos:line="129" pos:column="7">last<pos:position pos:line="129" pos:column="11"/></name> <operator pos:line="129" pos:column="12">=<pos:position pos:line="129" pos:column="13"/></operator> <operator pos:line="129" pos:column="14">&amp;<pos:position pos:line="129" pos:column="19"/></operator><operator pos:line="129" pos:column="15">(<pos:position pos:line="129" pos:column="16"/></operator><name><operator pos:line="129" pos:column="16">(<pos:position pos:line="129" pos:column="17"/></operator><operator pos:line="129" pos:column="17">*<pos:position pos:line="129" pos:column="18"/></operator><name pos:line="129" pos:column="18">last<pos:position pos:line="129" pos:column="22"/></name><operator pos:line="129" pos:column="22">)<pos:position pos:line="129" pos:column="23"/></operator><operator pos:line="129" pos:column="23">-&gt;<pos:position pos:line="129" pos:column="28"/></operator><name pos:line="129" pos:column="25">next<pos:position pos:line="129" pos:column="29"/></name></name><operator pos:line="129" pos:column="29">)<pos:position pos:line="129" pos:column="30"/></operator></expr>;<pos:position pos:line="129" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="130" pos:column="6"/></block></else></if>
  }<pos:position pos:line="131" pos:column="4"/></block></then>
  <else pos:line="132" pos:column="3">else
  <block pos:line="133" pos:column="3">{
    <comment type="block" pos:line="134" pos:column="5">/* multiple body case */</comment>

    <if pos:line="136" pos:column="5">if <condition pos:line="136" pos:column="8">(<expr><operator pos:line="136" pos:column="9">!<pos:position pos:line="136" pos:column="10"/></operator><name pos:line="136" pos:column="10">mime_fwd_all<pos:position pos:line="136" pos:column="22"/></name></expr>)<pos:position pos:line="136" pos:column="23"/></condition><then pos:line="136" pos:column="23">
    <block pos:line="137" pos:column="5">{
      <for pos:line="138" pos:column="7">for <control pos:line="138" pos:column="11">(<init><expr><name pos:line="138" pos:column="12">i<pos:position pos:line="138" pos:column="13"/></name> <operator pos:line="138" pos:column="14">=<pos:position pos:line="138" pos:column="15"/></operator> <literal type="number" pos:line="138" pos:column="16">0<pos:position pos:line="138" pos:column="17"/></literal></expr>;<pos:position pos:line="138" pos:column="18"/></init> <condition><expr><name pos:line="138" pos:column="19">i<pos:position pos:line="138" pos:column="20"/></name> <operator pos:line="138" pos:column="21">&lt;<pos:position pos:line="138" pos:column="25"/></operator> <name><name pos:line="138" pos:column="23">actx<pos:position pos:line="138" pos:column="27"/></name><operator pos:line="138" pos:column="27">-&gt;<pos:position pos:line="138" pos:column="32"/></operator><name pos:line="138" pos:column="29">idxlen<pos:position pos:line="138" pos:column="35"/></name></name></expr>;<pos:position pos:line="138" pos:column="36"/></condition> <incr><expr><name pos:line="138" pos:column="37">i<pos:position pos:line="138" pos:column="38"/></name><operator pos:line="138" pos:column="38">++<pos:position pos:line="138" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="138" pos:column="41"/></control>
      <block pos:line="139" pos:column="7">{
	<if pos:line="140" pos:column="9">if <condition pos:line="140" pos:column="12">(<expr><name><name pos:line="140" pos:column="13">actx<pos:position pos:line="140" pos:column="17"/></name><operator pos:line="140" pos:column="17">-&gt;<pos:position pos:line="140" pos:column="22"/></operator><name pos:line="140" pos:column="19">idx<pos:position pos:line="140" pos:column="22"/></name><index pos:line="140" pos:column="22">[<expr><name pos:line="140" pos:column="23">i<pos:position pos:line="140" pos:column="24"/></name></expr>]<pos:position pos:line="140" pos:column="25"/></index></name><operator pos:line="140" pos:column="25">-&gt;<pos:position pos:line="140" pos:column="30"/></operator><name><name pos:line="140" pos:column="27">content<pos:position pos:line="140" pos:column="34"/></name><operator pos:line="140" pos:column="34">-&gt;<pos:position pos:line="140" pos:column="39"/></operator><name pos:line="140" pos:column="36">tagged<pos:position pos:line="140" pos:column="42"/></name></name> <operator pos:line="140" pos:column="43">&amp;&amp;<pos:position pos:line="140" pos:column="53"/></operator> <call><name pos:line="140" pos:column="46">mutt_can_decode<pos:position pos:line="140" pos:column="61"/></name> <argument_list pos:line="140" pos:column="62">(<argument><expr><name><name pos:line="140" pos:column="63">actx<pos:position pos:line="140" pos:column="67"/></name><operator pos:line="140" pos:column="67">-&gt;<pos:position pos:line="140" pos:column="72"/></operator><name pos:line="140" pos:column="69">idx<pos:position pos:line="140" pos:column="72"/></name><index pos:line="140" pos:column="72">[<expr><name pos:line="140" pos:column="73">i<pos:position pos:line="140" pos:column="74"/></name></expr>]<pos:position pos:line="140" pos:column="75"/></index></name><operator pos:line="140" pos:column="75">-&gt;<pos:position pos:line="140" pos:column="80"/></operator><name pos:line="140" pos:column="77">content<pos:position pos:line="140" pos:column="84"/></name></expr></argument>)<pos:position pos:line="140" pos:column="85"/></argument_list></call></expr>)<pos:position pos:line="140" pos:column="86"/></condition><then pos:line="140" pos:column="86">
	<block pos:line="141" pos:column="9">{
          <expr_stmt><expr><name><name pos:line="142" pos:column="11">st<pos:position pos:line="142" pos:column="13"/></name><operator pos:line="142" pos:column="13">.<pos:position pos:line="142" pos:column="14"/></operator><name pos:line="142" pos:column="14">fpin<pos:position pos:line="142" pos:column="18"/></name></name> <operator pos:line="142" pos:column="19">=<pos:position pos:line="142" pos:column="20"/></operator> <name><name pos:line="142" pos:column="21">actx<pos:position pos:line="142" pos:column="25"/></name><operator pos:line="142" pos:column="25">-&gt;<pos:position pos:line="142" pos:column="30"/></operator><name pos:line="142" pos:column="27">idx<pos:position pos:line="142" pos:column="30"/></name><index pos:line="142" pos:column="30">[<expr><name pos:line="142" pos:column="31">i<pos:position pos:line="142" pos:column="32"/></name></expr>]<pos:position pos:line="142" pos:column="33"/></index></name><operator pos:line="142" pos:column="33">-&gt;<pos:position pos:line="142" pos:column="38"/></operator><name pos:line="142" pos:column="35">fp<pos:position pos:line="142" pos:column="37"/></name></expr>;<pos:position pos:line="142" pos:column="38"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="143" pos:column="11">mutt_body_handler<pos:position pos:line="143" pos:column="28"/></name> <argument_list pos:line="143" pos:column="29">(<argument><expr><name><name pos:line="143" pos:column="30">actx<pos:position pos:line="143" pos:column="34"/></name><operator pos:line="143" pos:column="34">-&gt;<pos:position pos:line="143" pos:column="39"/></operator><name pos:line="143" pos:column="36">idx<pos:position pos:line="143" pos:column="39"/></name><index pos:line="143" pos:column="39">[<expr><name pos:line="143" pos:column="40">i<pos:position pos:line="143" pos:column="41"/></name></expr>]<pos:position pos:line="143" pos:column="42"/></index></name><operator pos:line="143" pos:column="42">-&gt;<pos:position pos:line="143" pos:column="47"/></operator><name pos:line="143" pos:column="44">content<pos:position pos:line="143" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="143" pos:column="53">&amp;<pos:position pos:line="143" pos:column="58"/></operator><name pos:line="143" pos:column="54">st<pos:position pos:line="143" pos:column="56"/></name></expr></argument>)<pos:position pos:line="143" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="58"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="144" pos:column="11">state_putc<pos:position pos:line="144" pos:column="21"/></name> <argument_list pos:line="144" pos:column="22">(<argument><expr><literal type="char" pos:line="144" pos:column="23">'\n'<pos:position pos:line="144" pos:column="27"/></literal></expr></argument>, <argument><expr><operator pos:line="144" pos:column="29">&amp;<pos:position pos:line="144" pos:column="34"/></operator><name pos:line="144" pos:column="30">st<pos:position pos:line="144" pos:column="32"/></name></expr></argument>)<pos:position pos:line="144" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="145" pos:column="10"/></block></then></if>
      }<pos:position pos:line="146" pos:column="8"/></block></for>
    }<pos:position pos:line="147" pos:column="6"/></block></then></if>

    <if pos:line="149" pos:column="5">if <condition pos:line="149" pos:column="8">(<expr><name pos:line="149" pos:column="9">mime_fwd_any<pos:position pos:line="149" pos:column="21"/></name> <operator pos:line="149" pos:column="22">&amp;&amp;<pos:position pos:line="149" pos:column="32"/></operator> 
	<call><name pos:line="150" pos:column="9">copy_problematic_attachments<pos:position pos:line="150" pos:column="37"/></name> <argument_list pos:line="150" pos:column="38">(<argument><expr><name pos:line="150" pos:column="39">last<pos:position pos:line="150" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="45">actx<pos:position pos:line="150" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="51">mime_fwd_all<pos:position pos:line="150" pos:column="63"/></name></expr></argument>)<pos:position pos:line="150" pos:column="64"/></argument_list></call> <operator pos:line="150" pos:column="65">==<pos:position pos:line="150" pos:column="67"/></operator> <name pos:line="150" pos:column="68">NULL<pos:position pos:line="150" pos:column="72"/></name></expr>)<pos:position pos:line="150" pos:column="73"/></condition><then pos:line="150" pos:column="73">
      <block type="pseudo"><goto pos:line="151" pos:column="7">goto <name pos:line="151" pos:column="12">bail<pos:position pos:line="151" pos:column="16"/></name>;<pos:position pos:line="151" pos:column="17"/></goto></block></then></if>
  }<pos:position pos:line="152" pos:column="4"/></block></else></if>
  
  <expr_stmt><expr><call><name pos:line="154" pos:column="3">mutt_forward_trailer<pos:position pos:line="154" pos:column="23"/></name> <argument_list pos:line="154" pos:column="24">(<argument><expr><name pos:line="154" pos:column="25">Context<pos:position pos:line="154" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="34">parent_hdr<pos:position pos:line="154" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="46">tmpfp<pos:position pos:line="154" pos:column="51"/></name></expr></argument>)<pos:position pos:line="154" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="53"/></expr_stmt>
  
  <expr_stmt><expr><call><name pos:line="156" pos:column="3">safe_fclose<pos:position pos:line="156" pos:column="14"/></name> <argument_list pos:line="156" pos:column="15">(<argument><expr><operator pos:line="156" pos:column="16">&amp;<pos:position pos:line="156" pos:column="21"/></operator><name pos:line="156" pos:column="17">tmpfp<pos:position pos:line="156" pos:column="22"/></name></expr></argument>)<pos:position pos:line="156" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="157" pos:column="3">tmpfp<pos:position pos:line="157" pos:column="8"/></name> <operator pos:line="157" pos:column="9">=<pos:position pos:line="157" pos:column="10"/></operator> <name pos:line="157" pos:column="11">NULL<pos:position pos:line="157" pos:column="15"/></name></expr>;<pos:position pos:line="157" pos:column="16"/></expr_stmt>

  <comment type="block" pos:line="159" pos:column="3">/* now that we have the template, send it. */</comment>
  <expr_stmt><expr><call><name pos:line="160" pos:column="3">ci_send_message<pos:position pos:line="160" pos:column="18"/></name> <argument_list pos:line="160" pos:column="19">(<argument><expr><literal type="number" pos:line="160" pos:column="20">0<pos:position pos:line="160" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="160" pos:column="23">tmphdr<pos:position pos:line="160" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="31">tmpbody<pos:position pos:line="160" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="40">NULL<pos:position pos:line="160" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="46">parent_hdr<pos:position pos:line="160" pos:column="56"/></name></expr></argument>)<pos:position pos:line="160" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="58"/></expr_stmt>
  <return pos:line="161" pos:column="3">return;<pos:position pos:line="161" pos:column="10"/></return>
  
  <label><name pos:line="163" pos:column="3">bail<pos:position pos:line="163" pos:column="7"/></name>:<pos:position pos:line="163" pos:column="8"/></label>
  
  <if pos:line="165" pos:column="3">if <condition pos:line="165" pos:column="6">(<expr><name pos:line="165" pos:column="7">tmpfp<pos:position pos:line="165" pos:column="12"/></name></expr>)<pos:position pos:line="165" pos:column="13"/></condition><then pos:line="165" pos:column="13">
  <block pos:line="166" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="167" pos:column="5">safe_fclose<pos:position pos:line="167" pos:column="16"/></name> <argument_list pos:line="167" pos:column="17">(<argument><expr><operator pos:line="167" pos:column="18">&amp;<pos:position pos:line="167" pos:column="23"/></operator><name pos:line="167" pos:column="19">tmpfp<pos:position pos:line="167" pos:column="24"/></name></expr></argument>)<pos:position pos:line="167" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="168" pos:column="5">mutt_unlink<pos:position pos:line="168" pos:column="16"/></name> <argument_list pos:line="168" pos:column="17">(<argument><expr><name pos:line="168" pos:column="18">tmpbody<pos:position pos:line="168" pos:column="25"/></name></expr></argument>)<pos:position pos:line="168" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="169" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="171" pos:column="3">mutt_free_header<pos:position pos:line="171" pos:column="19"/></name> <argument_list pos:line="171" pos:column="20">(<argument><expr><operator pos:line="171" pos:column="21">&amp;<pos:position pos:line="171" pos:column="26"/></operator><name pos:line="171" pos:column="22">tmphdr<pos:position pos:line="171" pos:column="28"/></name></expr></argument>)<pos:position pos:line="171" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="30"/></expr_stmt>
}<pos:position pos:line="172" pos:column="2"/></block></function></unit>

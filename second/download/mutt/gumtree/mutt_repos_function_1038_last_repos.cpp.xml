<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1038_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">alternative_handler<pos:position pos:line="1" pos:column="31"/></name> <parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">BODY<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">a<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">STATE<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">s<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">BODY<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">choice<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><name pos:line="3" pos:column="18">NULL<pos:position pos:line="3" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">BODY<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">b<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">LIST<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">t<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">type<pos:position pos:line="6" pos:column="11"/></name> <init pos:line="6" pos:column="12">= <expr><literal type="number" pos:line="6" pos:column="14">0<pos:position pos:line="6" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">mustfree<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">rc<pos:position pos:line="8" pos:column="9"/></name> <init pos:line="8" pos:column="10">= <expr><literal type="number" pos:line="8" pos:column="12">0<pos:position pos:line="8" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name><name pos:line="10" pos:column="7">a<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">-&gt;<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="10">encoding<pos:position pos:line="10" pos:column="18"/></name></name> <operator pos:line="10" pos:column="19">==<pos:position pos:line="10" pos:column="21"/></operator> <name pos:line="10" pos:column="22">ENCBASE64<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">||<pos:position pos:line="10" pos:column="34"/></operator> <name><name pos:line="10" pos:column="35">a<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">-&gt;<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="38">encoding<pos:position pos:line="10" pos:column="46"/></name></name> <operator pos:line="10" pos:column="47">==<pos:position pos:line="10" pos:column="49"/></operator> <name pos:line="10" pos:column="50">ENCQUOTEDPRINTABLE<pos:position pos:line="10" pos:column="68"/></name> <operator pos:line="10" pos:column="69">||<pos:position pos:line="10" pos:column="71"/></operator>
      <name><name pos:line="11" pos:column="7">a<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">-&gt;<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="10">encoding<pos:position pos:line="11" pos:column="18"/></name></name> <operator pos:line="11" pos:column="19">==<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="22">ENCUUENCODED<pos:position pos:line="11" pos:column="34"/></name></expr>)<pos:position pos:line="11" pos:column="35"/></condition><then pos:line="11" pos:column="35">
  <block pos:line="12" pos:column="3">{
    <decl_stmt><decl><type><name><name pos:line="13" pos:column="5">struct<pos:position pos:line="13" pos:column="11"/></name> <name pos:line="13" pos:column="12">stat<pos:position pos:line="13" pos:column="16"/></name></name></type> <name pos:line="13" pos:column="17">st<pos:position pos:line="13" pos:column="19"/></name></decl>;<pos:position pos:line="13" pos:column="20"/></decl_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">mustfree<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <literal type="number" pos:line="14" pos:column="16">1<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">fstat<pos:position pos:line="15" pos:column="10"/></name> <argument_list pos:line="15" pos:column="11">(<argument><expr><call><name pos:line="15" pos:column="12">fileno<pos:position pos:line="15" pos:column="18"/></name> <argument_list pos:line="15" pos:column="19">(<argument><expr><name><name pos:line="15" pos:column="20">s<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">-&gt;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="23">fpin<pos:position pos:line="15" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="15" pos:column="30">&amp;<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="31">st<pos:position pos:line="15" pos:column="33"/></name></expr></argument>)<pos:position pos:line="15" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">b<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <call><name pos:line="16" pos:column="9">mutt_new_body<pos:position pos:line="16" pos:column="22"/></name> <argument_list pos:line="16" pos:column="23">()<pos:position pos:line="16" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">b<pos:position pos:line="17" pos:column="6"/></name><operator pos:line="17" pos:column="6">-&gt;<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="8">length<pos:position pos:line="17" pos:column="14"/></name></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <operator pos:line="17" pos:column="17">(<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">long<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">)<pos:position pos:line="17" pos:column="23"/></operator> <name><name pos:line="17" pos:column="24">st<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">.<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="27">st_size<pos:position pos:line="17" pos:column="34"/></name></name></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">b<pos:position pos:line="18" pos:column="6"/></name><operator pos:line="18" pos:column="6">-&gt;<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="8">parts<pos:position pos:line="18" pos:column="13"/></name></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <call><name pos:line="18" pos:column="16">mutt_parse_multipart<pos:position pos:line="18" pos:column="36"/></name> <argument_list pos:line="18" pos:column="37">(<argument><expr><name><name pos:line="18" pos:column="38">s<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">-&gt;<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="41">fpin<pos:position pos:line="18" pos:column="45"/></name></name></expr></argument>,
		  <argument><expr><call><name pos:line="19" pos:column="19">mutt_get_parameter<pos:position pos:line="19" pos:column="37"/></name> <argument_list pos:line="19" pos:column="38">(<argument><expr><literal type="string" pos:line="19" pos:column="39">"boundary"<pos:position pos:line="19" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="51">a<pos:position pos:line="19" pos:column="52"/></name><operator pos:line="19" pos:column="52">-&gt;<pos:position pos:line="19" pos:column="57"/></operator><name pos:line="19" pos:column="54">parameter<pos:position pos:line="19" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></call></expr></argument>,
		  <argument><expr><operator pos:line="20" pos:column="19">(<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="20">long<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">)<pos:position pos:line="20" pos:column="25"/></operator> <name><name pos:line="20" pos:column="26">st<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">.<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="29">st_size<pos:position pos:line="20" pos:column="36"/></name></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="38">ascii_strcasecmp<pos:position pos:line="20" pos:column="54"/></name> <argument_list pos:line="20" pos:column="55">(<argument><expr><literal type="string" pos:line="20" pos:column="56">"digest"<pos:position pos:line="20" pos:column="64"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="66">a<pos:position pos:line="20" pos:column="67"/></name><operator pos:line="20" pos:column="67">-&gt;<pos:position pos:line="20" pos:column="72"/></operator><name pos:line="20" pos:column="69">subtype<pos:position pos:line="20" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="77"/></argument_list></call> <operator pos:line="20" pos:column="78">==<pos:position pos:line="20" pos:column="80"/></operator> <literal type="number" pos:line="20" pos:column="81">0<pos:position pos:line="20" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="84"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then>
  <else pos:line="22" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="5">b<pos:position pos:line="23" pos:column="6"/></name> <operator pos:line="23" pos:column="7">=<pos:position pos:line="23" pos:column="8"/></operator> <name pos:line="23" pos:column="9">a<pos:position pos:line="23" pos:column="10"/></name></expr>;<pos:position pos:line="23" pos:column="11"/></expr_stmt></block></else></if>

  <expr_stmt><expr><name pos:line="25" pos:column="3">a<pos:position pos:line="25" pos:column="4"/></name> <operator pos:line="25" pos:column="5">=<pos:position pos:line="25" pos:column="6"/></operator> <name pos:line="25" pos:column="7">b<pos:position pos:line="25" pos:column="8"/></name></expr>;<pos:position pos:line="25" pos:column="9"/></expr_stmt>

  <comment type="block" pos:line="27" pos:column="3">/* First, search list of preferred types */</comment>
  <expr_stmt><expr><name pos:line="28" pos:column="3">t<pos:position pos:line="28" pos:column="4"/></name> <operator pos:line="28" pos:column="5">=<pos:position pos:line="28" pos:column="6"/></operator> <name pos:line="28" pos:column="7">AlternativeOrderList<pos:position pos:line="28" pos:column="27"/></name></expr>;<pos:position pos:line="28" pos:column="28"/></expr_stmt>
  <while pos:line="29" pos:column="3">while <condition pos:line="29" pos:column="9">(<expr><name pos:line="29" pos:column="10">t<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">&amp;&amp;<pos:position pos:line="29" pos:column="22"/></operator> <operator pos:line="29" pos:column="15">!<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="16">choice<pos:position pos:line="29" pos:column="22"/></name></expr>)<pos:position pos:line="29" pos:column="23"/></condition>
  <block pos:line="30" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">char<pos:position pos:line="31" pos:column="9"/></name> <modifier pos:line="31" pos:column="10">*<pos:position pos:line="31" pos:column="11"/></modifier></type><name pos:line="31" pos:column="11">c<pos:position pos:line="31" pos:column="12"/></name></decl>;<pos:position pos:line="31" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="32" pos:column="5">int<pos:position pos:line="32" pos:column="8"/></name></type> <name pos:line="32" pos:column="9">btlen<pos:position pos:line="32" pos:column="14"/></name></decl>;<pos:position pos:line="32" pos:column="15"/></decl_stmt>  <comment type="block" pos:line="32" pos:column="17">/* length of basetype */</comment>
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">int<pos:position pos:line="33" pos:column="8"/></name></type> <name pos:line="33" pos:column="9">wild<pos:position pos:line="33" pos:column="13"/></name></decl>;<pos:position pos:line="33" pos:column="14"/></decl_stmt>	<comment type="block" pos:line="33" pos:column="17">/* do we have a wildcard to match all subtypes? */</comment>

    <expr_stmt><expr><name pos:line="35" pos:column="5">c<pos:position pos:line="35" pos:column="6"/></name> <operator pos:line="35" pos:column="7">=<pos:position pos:line="35" pos:column="8"/></operator> <call><name pos:line="35" pos:column="9">strchr<pos:position pos:line="35" pos:column="15"/></name> <argument_list pos:line="35" pos:column="16">(<argument><expr><name><name pos:line="35" pos:column="17">t<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">-&gt;<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="20">data<pos:position pos:line="35" pos:column="24"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="35" pos:column="26">'/'<pos:position pos:line="35" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="31"/></expr_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">c<pos:position pos:line="36" pos:column="10"/></name></expr>)<pos:position pos:line="36" pos:column="11"/></condition><then pos:line="36" pos:column="11">
    <block pos:line="37" pos:column="5">{
      <expr_stmt><expr><name pos:line="38" pos:column="7">wild<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">=<pos:position pos:line="38" pos:column="13"/></operator> <operator pos:line="38" pos:column="14">(<pos:position pos:line="38" pos:column="15"/></operator><name><name pos:line="38" pos:column="15">c<pos:position pos:line="38" pos:column="16"/></name><index pos:line="38" pos:column="16">[<expr><literal type="number" pos:line="38" pos:column="17">1<pos:position pos:line="38" pos:column="18"/></literal></expr>]<pos:position pos:line="38" pos:column="19"/></index></name> <operator pos:line="38" pos:column="20">==<pos:position pos:line="38" pos:column="22"/></operator> <literal type="char" pos:line="38" pos:column="23">'*'<pos:position pos:line="38" pos:column="26"/></literal> <operator pos:line="38" pos:column="27">&amp;&amp;<pos:position pos:line="38" pos:column="37"/></operator> <name><name pos:line="38" pos:column="30">c<pos:position pos:line="38" pos:column="31"/></name><index pos:line="38" pos:column="31">[<expr><literal type="number" pos:line="38" pos:column="32">2<pos:position pos:line="38" pos:column="33"/></literal></expr>]<pos:position pos:line="38" pos:column="34"/></index></name> <operator pos:line="38" pos:column="35">==<pos:position pos:line="38" pos:column="37"/></operator> <literal type="number" pos:line="38" pos:column="38">0<pos:position pos:line="38" pos:column="39"/></literal><operator pos:line="38" pos:column="39">)<pos:position pos:line="38" pos:column="40"/></operator></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name pos:line="39" pos:column="7">btlen<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator> <name pos:line="39" pos:column="15">c<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">-<pos:position pos:line="39" pos:column="18"/></operator> <name><name pos:line="39" pos:column="19">t<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">-&gt;<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="22">data<pos:position pos:line="39" pos:column="26"/></name></name></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then>
    <else pos:line="41" pos:column="5">else
    <block pos:line="42" pos:column="5">{
      <expr_stmt><expr><name pos:line="43" pos:column="7">wild<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">=<pos:position pos:line="43" pos:column="13"/></operator> <literal type="number" pos:line="43" pos:column="14">1<pos:position pos:line="43" pos:column="15"/></literal></expr>;<pos:position pos:line="43" pos:column="16"/></expr_stmt>
      <expr_stmt><expr><name pos:line="44" pos:column="7">btlen<pos:position pos:line="44" pos:column="12"/></name> <operator pos:line="44" pos:column="13">=<pos:position pos:line="44" pos:column="14"/></operator> <call><name pos:line="44" pos:column="15">mutt_strlen<pos:position pos:line="44" pos:column="26"/></name> <argument_list pos:line="44" pos:column="27">(<argument><expr><name><name pos:line="44" pos:column="28">t<pos:position pos:line="44" pos:column="29"/></name><operator pos:line="44" pos:column="29">-&gt;<pos:position pos:line="44" pos:column="34"/></operator><name pos:line="44" pos:column="31">data<pos:position pos:line="44" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></else></if>

    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name pos:line="47" pos:column="9">a<pos:position pos:line="47" pos:column="10"/></name> <operator pos:line="47" pos:column="11">&amp;&amp;<pos:position pos:line="47" pos:column="21"/></operator> <name><name pos:line="47" pos:column="14">a<pos:position pos:line="47" pos:column="15"/></name><operator pos:line="47" pos:column="15">-&gt;<pos:position pos:line="47" pos:column="20"/></operator><name pos:line="47" pos:column="17">parts<pos:position pos:line="47" pos:column="22"/></name></name></expr>)<pos:position pos:line="47" pos:column="23"/></condition><then pos:line="47" pos:column="23"> 
      <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="7">b<pos:position pos:line="48" pos:column="8"/></name> <operator pos:line="48" pos:column="9">=<pos:position pos:line="48" pos:column="10"/></operator> <name><name pos:line="48" pos:column="11">a<pos:position pos:line="48" pos:column="12"/></name><operator pos:line="48" pos:column="12">-&gt;<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="14">parts<pos:position pos:line="48" pos:column="19"/></name></name></expr>;<pos:position pos:line="48" pos:column="20"/></expr_stmt></block></then>
    <else pos:line="49" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="7">b<pos:position pos:line="50" pos:column="8"/></name> <operator pos:line="50" pos:column="9">=<pos:position pos:line="50" pos:column="10"/></operator> <name pos:line="50" pos:column="11">a<pos:position pos:line="50" pos:column="12"/></name></expr>;<pos:position pos:line="50" pos:column="13"/></expr_stmt></block></else></if>
    <while pos:line="51" pos:column="5">while <condition pos:line="51" pos:column="11">(<expr><name pos:line="51" pos:column="12">b<pos:position pos:line="51" pos:column="13"/></name></expr>)<pos:position pos:line="51" pos:column="14"/></condition>
    <block pos:line="52" pos:column="5">{
      <decl_stmt><decl><type><specifier pos:line="53" pos:column="7">const<pos:position pos:line="53" pos:column="12"/></specifier> <name pos:line="53" pos:column="13">char<pos:position pos:line="53" pos:column="17"/></name> <modifier pos:line="53" pos:column="18">*<pos:position pos:line="53" pos:column="19"/></modifier></type><name pos:line="53" pos:column="19">bt<pos:position pos:line="53" pos:column="21"/></name> <init pos:line="53" pos:column="22">= <expr><call><name pos:line="53" pos:column="24">TYPE<pos:position pos:line="53" pos:column="28"/></name><argument_list pos:line="53" pos:column="28">(<argument><expr><name pos:line="53" pos:column="29">b<pos:position pos:line="53" pos:column="30"/></name></expr></argument>)<pos:position pos:line="53" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="53" pos:column="32"/></decl_stmt>
      <if pos:line="54" pos:column="7">if <condition pos:line="54" pos:column="10">(<expr><operator pos:line="54" pos:column="11">!<pos:position pos:line="54" pos:column="12"/></operator><call><name pos:line="54" pos:column="12">ascii_strncasecmp<pos:position pos:line="54" pos:column="29"/></name> <argument_list pos:line="54" pos:column="30">(<argument><expr><name pos:line="54" pos:column="31">bt<pos:position pos:line="54" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="35">t<pos:position pos:line="54" pos:column="36"/></name><operator pos:line="54" pos:column="36">-&gt;<pos:position pos:line="54" pos:column="41"/></operator><name pos:line="54" pos:column="38">data<pos:position pos:line="54" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="44">btlen<pos:position pos:line="54" pos:column="49"/></name></expr></argument>)<pos:position pos:line="54" pos:column="50"/></argument_list></call> <operator pos:line="54" pos:column="51">&amp;&amp;<pos:position pos:line="54" pos:column="61"/></operator> <name><name pos:line="54" pos:column="54">bt<pos:position pos:line="54" pos:column="56"/></name><index pos:line="54" pos:column="56">[<expr><name pos:line="54" pos:column="57">btlen<pos:position pos:line="54" pos:column="62"/></name></expr>]<pos:position pos:line="54" pos:column="63"/></index></name> <operator pos:line="54" pos:column="64">==<pos:position pos:line="54" pos:column="66"/></operator> <literal type="number" pos:line="54" pos:column="67">0<pos:position pos:line="54" pos:column="68"/></literal></expr>)<pos:position pos:line="54" pos:column="69"/></condition><then pos:line="54" pos:column="69">
      <block pos:line="55" pos:column="7">{
	<comment type="block" pos:line="56" pos:column="9">/* the basetype matches */</comment>
	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">wild<pos:position pos:line="57" pos:column="17"/></name> <operator pos:line="57" pos:column="18">||<pos:position pos:line="57" pos:column="20"/></operator> <operator pos:line="57" pos:column="21">!<pos:position pos:line="57" pos:column="22"/></operator><call><name pos:line="57" pos:column="22">ascii_strcasecmp<pos:position pos:line="57" pos:column="38"/></name> <argument_list pos:line="57" pos:column="39">(<argument><expr><name><name pos:line="57" pos:column="40">t<pos:position pos:line="57" pos:column="41"/></name><operator pos:line="57" pos:column="41">-&gt;<pos:position pos:line="57" pos:column="46"/></operator><name pos:line="57" pos:column="43">data<pos:position pos:line="57" pos:column="47"/></name></name> <operator pos:line="57" pos:column="48">+<pos:position pos:line="57" pos:column="49"/></operator> <name pos:line="57" pos:column="50">btlen<pos:position pos:line="57" pos:column="55"/></name> <operator pos:line="57" pos:column="56">+<pos:position pos:line="57" pos:column="57"/></operator> <literal type="number" pos:line="57" pos:column="58">1<pos:position pos:line="57" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="61">b<pos:position pos:line="57" pos:column="62"/></name><operator pos:line="57" pos:column="62">-&gt;<pos:position pos:line="57" pos:column="67"/></operator><name pos:line="57" pos:column="64">subtype<pos:position pos:line="57" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="73"/></condition><then pos:line="57" pos:column="73">
	<block pos:line="58" pos:column="9">{
	  <expr_stmt><expr><name pos:line="59" pos:column="11">choice<pos:position pos:line="59" pos:column="17"/></name> <operator pos:line="59" pos:column="18">=<pos:position pos:line="59" pos:column="19"/></operator> <name pos:line="59" pos:column="20">b<pos:position pos:line="59" pos:column="21"/></name></expr>;<pos:position pos:line="59" pos:column="22"/></expr_stmt>
	}<pos:position pos:line="60" pos:column="10"/></block></then></if>
      }<pos:position pos:line="61" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="62" pos:column="7">b<pos:position pos:line="62" pos:column="8"/></name> <operator pos:line="62" pos:column="9">=<pos:position pos:line="62" pos:column="10"/></operator> <name><name pos:line="62" pos:column="11">b<pos:position pos:line="62" pos:column="12"/></name><operator pos:line="62" pos:column="12">-&gt;<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="14">next<pos:position pos:line="62" pos:column="18"/></name></name></expr>;<pos:position pos:line="62" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></while>
    <expr_stmt><expr><name pos:line="64" pos:column="5">t<pos:position pos:line="64" pos:column="6"/></name> <operator pos:line="64" pos:column="7">=<pos:position pos:line="64" pos:column="8"/></operator> <name><name pos:line="64" pos:column="9">t<pos:position pos:line="64" pos:column="10"/></name><operator pos:line="64" pos:column="10">-&gt;<pos:position pos:line="64" pos:column="15"/></operator><name pos:line="64" pos:column="12">next<pos:position pos:line="64" pos:column="16"/></name></name></expr>;<pos:position pos:line="64" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="65" pos:column="4"/></block></while>

  <comment type="block" pos:line="67" pos:column="3">/* Next, look for an autoviewable type */</comment>
  <if pos:line="68" pos:column="3">if <condition pos:line="68" pos:column="6">(<expr><operator pos:line="68" pos:column="7">!<pos:position pos:line="68" pos:column="8"/></operator><name pos:line="68" pos:column="8">choice<pos:position pos:line="68" pos:column="14"/></name></expr>)<pos:position pos:line="68" pos:column="15"/></condition><then pos:line="68" pos:column="15">
  <block pos:line="69" pos:column="3">{
    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><name pos:line="70" pos:column="9">a<pos:position pos:line="70" pos:column="10"/></name> <operator pos:line="70" pos:column="11">&amp;&amp;<pos:position pos:line="70" pos:column="21"/></operator> <name><name pos:line="70" pos:column="14">a<pos:position pos:line="70" pos:column="15"/></name><operator pos:line="70" pos:column="15">-&gt;<pos:position pos:line="70" pos:column="20"/></operator><name pos:line="70" pos:column="17">parts<pos:position pos:line="70" pos:column="22"/></name></name></expr>)<pos:position pos:line="70" pos:column="23"/></condition><then pos:line="70" pos:column="23"> 
      <block type="pseudo"><expr_stmt><expr><name pos:line="71" pos:column="7">b<pos:position pos:line="71" pos:column="8"/></name> <operator pos:line="71" pos:column="9">=<pos:position pos:line="71" pos:column="10"/></operator> <name><name pos:line="71" pos:column="11">a<pos:position pos:line="71" pos:column="12"/></name><operator pos:line="71" pos:column="12">-&gt;<pos:position pos:line="71" pos:column="17"/></operator><name pos:line="71" pos:column="14">parts<pos:position pos:line="71" pos:column="19"/></name></name></expr>;<pos:position pos:line="71" pos:column="20"/></expr_stmt></block></then>
    <else pos:line="72" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="73" pos:column="7">b<pos:position pos:line="73" pos:column="8"/></name> <operator pos:line="73" pos:column="9">=<pos:position pos:line="73" pos:column="10"/></operator> <name pos:line="73" pos:column="11">a<pos:position pos:line="73" pos:column="12"/></name></expr>;<pos:position pos:line="73" pos:column="13"/></expr_stmt></block></else></if>
    <while pos:line="74" pos:column="5">while <condition pos:line="74" pos:column="11">(<expr><name pos:line="74" pos:column="12">b<pos:position pos:line="74" pos:column="13"/></name></expr>)<pos:position pos:line="74" pos:column="14"/></condition>
    <block pos:line="75" pos:column="5">{
      <if pos:line="76" pos:column="7">if <condition pos:line="76" pos:column="10">(<expr><call><name pos:line="76" pos:column="11">mutt_is_autoview<pos:position pos:line="76" pos:column="27"/></name> <argument_list pos:line="76" pos:column="28">(<argument><expr><name pos:line="76" pos:column="29">b<pos:position pos:line="76" pos:column="30"/></name></expr></argument>)<pos:position pos:line="76" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="76" pos:column="32"/></condition><then pos:line="76" pos:column="32">
	<block type="pseudo"><expr_stmt><expr><name pos:line="77" pos:column="9">choice<pos:position pos:line="77" pos:column="15"/></name> <operator pos:line="77" pos:column="16">=<pos:position pos:line="77" pos:column="17"/></operator> <name pos:line="77" pos:column="18">b<pos:position pos:line="77" pos:column="19"/></name></expr>;<pos:position pos:line="77" pos:column="20"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="78" pos:column="7">b<pos:position pos:line="78" pos:column="8"/></name> <operator pos:line="78" pos:column="9">=<pos:position pos:line="78" pos:column="10"/></operator> <name><name pos:line="78" pos:column="11">b<pos:position pos:line="78" pos:column="12"/></name><operator pos:line="78" pos:column="12">-&gt;<pos:position pos:line="78" pos:column="17"/></operator><name pos:line="78" pos:column="14">next<pos:position pos:line="78" pos:column="18"/></name></name></expr>;<pos:position pos:line="78" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="79" pos:column="6"/></block></while>
  }<pos:position pos:line="80" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="82" pos:column="3">/* Then, look for a text entry */</comment>
  <if pos:line="83" pos:column="3">if <condition pos:line="83" pos:column="6">(<expr><operator pos:line="83" pos:column="7">!<pos:position pos:line="83" pos:column="8"/></operator><name pos:line="83" pos:column="8">choice<pos:position pos:line="83" pos:column="14"/></name></expr>)<pos:position pos:line="83" pos:column="15"/></condition><then pos:line="83" pos:column="15">
  <block pos:line="84" pos:column="3">{
    <if pos:line="85" pos:column="5">if <condition pos:line="85" pos:column="8">(<expr><name pos:line="85" pos:column="9">a<pos:position pos:line="85" pos:column="10"/></name> <operator pos:line="85" pos:column="11">&amp;&amp;<pos:position pos:line="85" pos:column="21"/></operator> <name><name pos:line="85" pos:column="14">a<pos:position pos:line="85" pos:column="15"/></name><operator pos:line="85" pos:column="15">-&gt;<pos:position pos:line="85" pos:column="20"/></operator><name pos:line="85" pos:column="17">parts<pos:position pos:line="85" pos:column="22"/></name></name></expr>)<pos:position pos:line="85" pos:column="23"/></condition><then pos:line="85" pos:column="23"> 
      <block type="pseudo"><expr_stmt><expr><name pos:line="86" pos:column="7">b<pos:position pos:line="86" pos:column="8"/></name> <operator pos:line="86" pos:column="9">=<pos:position pos:line="86" pos:column="10"/></operator> <name><name pos:line="86" pos:column="11">a<pos:position pos:line="86" pos:column="12"/></name><operator pos:line="86" pos:column="12">-&gt;<pos:position pos:line="86" pos:column="17"/></operator><name pos:line="86" pos:column="14">parts<pos:position pos:line="86" pos:column="19"/></name></name></expr>;<pos:position pos:line="86" pos:column="20"/></expr_stmt></block></then>
    <else pos:line="87" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="88" pos:column="7">b<pos:position pos:line="88" pos:column="8"/></name> <operator pos:line="88" pos:column="9">=<pos:position pos:line="88" pos:column="10"/></operator> <name pos:line="88" pos:column="11">a<pos:position pos:line="88" pos:column="12"/></name></expr>;<pos:position pos:line="88" pos:column="13"/></expr_stmt></block></else></if>
    <while pos:line="89" pos:column="5">while <condition pos:line="89" pos:column="11">(<expr><name pos:line="89" pos:column="12">b<pos:position pos:line="89" pos:column="13"/></name></expr>)<pos:position pos:line="89" pos:column="14"/></condition>
    <block pos:line="90" pos:column="5">{
      <if pos:line="91" pos:column="7">if <condition pos:line="91" pos:column="10">(<expr><name><name pos:line="91" pos:column="11">b<pos:position pos:line="91" pos:column="12"/></name><operator pos:line="91" pos:column="12">-&gt;<pos:position pos:line="91" pos:column="17"/></operator><name pos:line="91" pos:column="14">type<pos:position pos:line="91" pos:column="18"/></name></name> <operator pos:line="91" pos:column="19">==<pos:position pos:line="91" pos:column="21"/></operator> <name pos:line="91" pos:column="22">TYPETEXT<pos:position pos:line="91" pos:column="30"/></name></expr>)<pos:position pos:line="91" pos:column="31"/></condition><then pos:line="91" pos:column="31">
      <block pos:line="92" pos:column="7">{
	<if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><operator pos:line="93" pos:column="13">!<pos:position pos:line="93" pos:column="14"/></operator> <call><name pos:line="93" pos:column="15">ascii_strcasecmp<pos:position pos:line="93" pos:column="31"/></name> <argument_list pos:line="93" pos:column="32">(<argument><expr><literal type="string" pos:line="93" pos:column="33">"plain"<pos:position pos:line="93" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="42">b<pos:position pos:line="93" pos:column="43"/></name><operator pos:line="93" pos:column="43">-&gt;<pos:position pos:line="93" pos:column="48"/></operator><name pos:line="93" pos:column="45">subtype<pos:position pos:line="93" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="53"/></argument_list></call> <operator pos:line="93" pos:column="54">&amp;&amp;<pos:position pos:line="93" pos:column="64"/></operator> <name pos:line="93" pos:column="57">type<pos:position pos:line="93" pos:column="61"/></name> <operator pos:line="93" pos:column="62">&lt;=<pos:position pos:line="93" pos:column="67"/></operator> <name pos:line="93" pos:column="65">TXTPLAIN<pos:position pos:line="93" pos:column="73"/></name></expr>)<pos:position pos:line="93" pos:column="74"/></condition><then pos:line="93" pos:column="74">
	<block pos:line="94" pos:column="9">{
	  <expr_stmt><expr><name pos:line="95" pos:column="11">choice<pos:position pos:line="95" pos:column="17"/></name> <operator pos:line="95" pos:column="18">=<pos:position pos:line="95" pos:column="19"/></operator> <name pos:line="95" pos:column="20">b<pos:position pos:line="95" pos:column="21"/></name></expr>;<pos:position pos:line="95" pos:column="22"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="96" pos:column="11">type<pos:position pos:line="96" pos:column="15"/></name> <operator pos:line="96" pos:column="16">=<pos:position pos:line="96" pos:column="17"/></operator> <name pos:line="96" pos:column="18">TXTPLAIN<pos:position pos:line="96" pos:column="26"/></name></expr>;<pos:position pos:line="96" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="97" pos:column="10"/></block></then>
	<elseif pos:line="98" pos:column="9">else <if pos:line="98" pos:column="14">if <condition pos:line="98" pos:column="17">(<expr><operator pos:line="98" pos:column="18">!<pos:position pos:line="98" pos:column="19"/></operator> <call><name pos:line="98" pos:column="20">ascii_strcasecmp<pos:position pos:line="98" pos:column="36"/></name> <argument_list pos:line="98" pos:column="37">(<argument><expr><literal type="string" pos:line="98" pos:column="38">"enriched"<pos:position pos:line="98" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="50">b<pos:position pos:line="98" pos:column="51"/></name><operator pos:line="98" pos:column="51">-&gt;<pos:position pos:line="98" pos:column="56"/></operator><name pos:line="98" pos:column="53">subtype<pos:position pos:line="98" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="61"/></argument_list></call> <operator pos:line="98" pos:column="62">&amp;&amp;<pos:position pos:line="98" pos:column="72"/></operator> <name pos:line="98" pos:column="65">type<pos:position pos:line="98" pos:column="69"/></name> <operator pos:line="98" pos:column="70">&lt;=<pos:position pos:line="98" pos:column="75"/></operator> <name pos:line="98" pos:column="73">TXTENRICHED<pos:position pos:line="98" pos:column="84"/></name></expr>)<pos:position pos:line="98" pos:column="85"/></condition><then pos:line="98" pos:column="85">
	<block pos:line="99" pos:column="9">{
	  <expr_stmt><expr><name pos:line="100" pos:column="11">choice<pos:position pos:line="100" pos:column="17"/></name> <operator pos:line="100" pos:column="18">=<pos:position pos:line="100" pos:column="19"/></operator> <name pos:line="100" pos:column="20">b<pos:position pos:line="100" pos:column="21"/></name></expr>;<pos:position pos:line="100" pos:column="22"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="101" pos:column="11">type<pos:position pos:line="101" pos:column="15"/></name> <operator pos:line="101" pos:column="16">=<pos:position pos:line="101" pos:column="17"/></operator> <name pos:line="101" pos:column="18">TXTENRICHED<pos:position pos:line="101" pos:column="29"/></name></expr>;<pos:position pos:line="101" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="102" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="103" pos:column="9">else <if pos:line="103" pos:column="14">if <condition pos:line="103" pos:column="17">(<expr><operator pos:line="103" pos:column="18">!<pos:position pos:line="103" pos:column="19"/></operator> <call><name pos:line="103" pos:column="20">ascii_strcasecmp<pos:position pos:line="103" pos:column="36"/></name> <argument_list pos:line="103" pos:column="37">(<argument><expr><literal type="string" pos:line="103" pos:column="38">"html"<pos:position pos:line="103" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="46">b<pos:position pos:line="103" pos:column="47"/></name><operator pos:line="103" pos:column="47">-&gt;<pos:position pos:line="103" pos:column="52"/></operator><name pos:line="103" pos:column="49">subtype<pos:position pos:line="103" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="57"/></argument_list></call> <operator pos:line="103" pos:column="58">&amp;&amp;<pos:position pos:line="103" pos:column="68"/></operator> <name pos:line="103" pos:column="61">type<pos:position pos:line="103" pos:column="65"/></name> <operator pos:line="103" pos:column="66">&lt;=<pos:position pos:line="103" pos:column="71"/></operator> <name pos:line="103" pos:column="69">TXTHTML<pos:position pos:line="103" pos:column="76"/></name></expr>)<pos:position pos:line="103" pos:column="77"/></condition><then pos:line="103" pos:column="77">
	<block pos:line="104" pos:column="9">{
	  <expr_stmt><expr><name pos:line="105" pos:column="11">choice<pos:position pos:line="105" pos:column="17"/></name> <operator pos:line="105" pos:column="18">=<pos:position pos:line="105" pos:column="19"/></operator> <name pos:line="105" pos:column="20">b<pos:position pos:line="105" pos:column="21"/></name></expr>;<pos:position pos:line="105" pos:column="22"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="106" pos:column="11">type<pos:position pos:line="106" pos:column="15"/></name> <operator pos:line="106" pos:column="16">=<pos:position pos:line="106" pos:column="17"/></operator> <name pos:line="106" pos:column="18">TXTHTML<pos:position pos:line="106" pos:column="25"/></name></expr>;<pos:position pos:line="106" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="107" pos:column="10"/></block></then></if></elseif></if>
      }<pos:position pos:line="108" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="109" pos:column="7">b<pos:position pos:line="109" pos:column="8"/></name> <operator pos:line="109" pos:column="9">=<pos:position pos:line="109" pos:column="10"/></operator> <name><name pos:line="109" pos:column="11">b<pos:position pos:line="109" pos:column="12"/></name><operator pos:line="109" pos:column="12">-&gt;<pos:position pos:line="109" pos:column="17"/></operator><name pos:line="109" pos:column="14">next<pos:position pos:line="109" pos:column="18"/></name></name></expr>;<pos:position pos:line="109" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="110" pos:column="6"/></block></while>
  }<pos:position pos:line="111" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="113" pos:column="3">/* Finally, look for other possibilities */</comment>
  <if pos:line="114" pos:column="3">if <condition pos:line="114" pos:column="6">(<expr><operator pos:line="114" pos:column="7">!<pos:position pos:line="114" pos:column="8"/></operator><name pos:line="114" pos:column="8">choice<pos:position pos:line="114" pos:column="14"/></name></expr>)<pos:position pos:line="114" pos:column="15"/></condition><then pos:line="114" pos:column="15">
  <block pos:line="115" pos:column="3">{
    <if pos:line="116" pos:column="5">if <condition pos:line="116" pos:column="8">(<expr><name pos:line="116" pos:column="9">a<pos:position pos:line="116" pos:column="10"/></name> <operator pos:line="116" pos:column="11">&amp;&amp;<pos:position pos:line="116" pos:column="21"/></operator> <name><name pos:line="116" pos:column="14">a<pos:position pos:line="116" pos:column="15"/></name><operator pos:line="116" pos:column="15">-&gt;<pos:position pos:line="116" pos:column="20"/></operator><name pos:line="116" pos:column="17">parts<pos:position pos:line="116" pos:column="22"/></name></name></expr>)<pos:position pos:line="116" pos:column="23"/></condition><then pos:line="116" pos:column="23"> 
      <block type="pseudo"><expr_stmt><expr><name pos:line="117" pos:column="7">b<pos:position pos:line="117" pos:column="8"/></name> <operator pos:line="117" pos:column="9">=<pos:position pos:line="117" pos:column="10"/></operator> <name><name pos:line="117" pos:column="11">a<pos:position pos:line="117" pos:column="12"/></name><operator pos:line="117" pos:column="12">-&gt;<pos:position pos:line="117" pos:column="17"/></operator><name pos:line="117" pos:column="14">parts<pos:position pos:line="117" pos:column="19"/></name></name></expr>;<pos:position pos:line="117" pos:column="20"/></expr_stmt></block></then>
    <else pos:line="118" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="119" pos:column="7">b<pos:position pos:line="119" pos:column="8"/></name> <operator pos:line="119" pos:column="9">=<pos:position pos:line="119" pos:column="10"/></operator> <name pos:line="119" pos:column="11">a<pos:position pos:line="119" pos:column="12"/></name></expr>;<pos:position pos:line="119" pos:column="13"/></expr_stmt></block></else></if>
    <while pos:line="120" pos:column="5">while <condition pos:line="120" pos:column="11">(<expr><name pos:line="120" pos:column="12">b<pos:position pos:line="120" pos:column="13"/></name></expr>)<pos:position pos:line="120" pos:column="14"/></condition>
    <block pos:line="121" pos:column="5">{
      <if pos:line="122" pos:column="7">if <condition pos:line="122" pos:column="10">(<expr><call><name pos:line="122" pos:column="11">mutt_can_decode<pos:position pos:line="122" pos:column="26"/></name> <argument_list pos:line="122" pos:column="27">(<argument><expr><name pos:line="122" pos:column="28">b<pos:position pos:line="122" pos:column="29"/></name></expr></argument>)<pos:position pos:line="122" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="122" pos:column="31"/></condition><then pos:line="122" pos:column="31">
	<block type="pseudo"><expr_stmt><expr><name pos:line="123" pos:column="9">choice<pos:position pos:line="123" pos:column="15"/></name> <operator pos:line="123" pos:column="16">=<pos:position pos:line="123" pos:column="17"/></operator> <name pos:line="123" pos:column="18">b<pos:position pos:line="123" pos:column="19"/></name></expr>;<pos:position pos:line="123" pos:column="20"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="124" pos:column="7">b<pos:position pos:line="124" pos:column="8"/></name> <operator pos:line="124" pos:column="9">=<pos:position pos:line="124" pos:column="10"/></operator> <name><name pos:line="124" pos:column="11">b<pos:position pos:line="124" pos:column="12"/></name><operator pos:line="124" pos:column="12">-&gt;<pos:position pos:line="124" pos:column="17"/></operator><name pos:line="124" pos:column="14">next<pos:position pos:line="124" pos:column="18"/></name></name></expr>;<pos:position pos:line="124" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="125" pos:column="6"/></block></while>
  }<pos:position pos:line="126" pos:column="4"/></block></then></if>

  <if pos:line="128" pos:column="3">if <condition pos:line="128" pos:column="6">(<expr><name pos:line="128" pos:column="7">choice<pos:position pos:line="128" pos:column="13"/></name></expr>)<pos:position pos:line="128" pos:column="14"/></condition><then pos:line="128" pos:column="14">
  <block pos:line="129" pos:column="3">{
    <if pos:line="130" pos:column="5">if <condition pos:line="130" pos:column="8">(<expr><name><name pos:line="130" pos:column="9">s<pos:position pos:line="130" pos:column="10"/></name><operator pos:line="130" pos:column="10">-&gt;<pos:position pos:line="130" pos:column="15"/></operator><name pos:line="130" pos:column="12">flags<pos:position pos:line="130" pos:column="17"/></name></name> <operator pos:line="130" pos:column="18">&amp;<pos:position pos:line="130" pos:column="23"/></operator> <name pos:line="130" pos:column="20">MUTT_DISPLAY<pos:position pos:line="130" pos:column="32"/></name> <operator pos:line="130" pos:column="33">&amp;&amp;<pos:position pos:line="130" pos:column="43"/></operator> <operator pos:line="130" pos:column="36">!<pos:position pos:line="130" pos:column="37"/></operator><call><name pos:line="130" pos:column="37">option<pos:position pos:line="130" pos:column="43"/></name> <argument_list pos:line="130" pos:column="44">(<argument><expr><name pos:line="130" pos:column="45">OPTWEED<pos:position pos:line="130" pos:column="52"/></name></expr></argument>)<pos:position pos:line="130" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="130" pos:column="54"/></condition><then pos:line="130" pos:column="54">
    <block pos:line="131" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="132" pos:column="7">fseeko<pos:position pos:line="132" pos:column="13"/></name> <argument_list pos:line="132" pos:column="14">(<argument><expr><name><name pos:line="132" pos:column="15">s<pos:position pos:line="132" pos:column="16"/></name><operator pos:line="132" pos:column="16">-&gt;<pos:position pos:line="132" pos:column="21"/></operator><name pos:line="132" pos:column="18">fpin<pos:position pos:line="132" pos:column="22"/></name></name></expr></argument>, <argument><expr><name><name pos:line="132" pos:column="24">choice<pos:position pos:line="132" pos:column="30"/></name><operator pos:line="132" pos:column="30">-&gt;<pos:position pos:line="132" pos:column="35"/></operator><name pos:line="132" pos:column="32">hdr_offset<pos:position pos:line="132" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="132" pos:column="44">0<pos:position pos:line="132" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="133" pos:column="7">mutt_copy_bytes<pos:position pos:line="133" pos:column="22"/></name><argument_list pos:line="133" pos:column="22">(<argument><expr><name><name pos:line="133" pos:column="23">s<pos:position pos:line="133" pos:column="24"/></name><operator pos:line="133" pos:column="24">-&gt;<pos:position pos:line="133" pos:column="29"/></operator><name pos:line="133" pos:column="26">fpin<pos:position pos:line="133" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="133" pos:column="32">s<pos:position pos:line="133" pos:column="33"/></name><operator pos:line="133" pos:column="33">-&gt;<pos:position pos:line="133" pos:column="38"/></operator><name pos:line="133" pos:column="35">fpout<pos:position pos:line="133" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="133" pos:column="42">choice<pos:position pos:line="133" pos:column="48"/></name><operator pos:line="133" pos:column="48">-&gt;<pos:position pos:line="133" pos:column="53"/></operator><name pos:line="133" pos:column="50">offset<pos:position pos:line="133" pos:column="56"/></name></name><operator pos:line="133" pos:column="56">-<pos:position pos:line="133" pos:column="57"/></operator><name><name pos:line="133" pos:column="57">choice<pos:position pos:line="133" pos:column="63"/></name><operator pos:line="133" pos:column="63">-&gt;<pos:position pos:line="133" pos:column="68"/></operator><name pos:line="133" pos:column="65">hdr_offset<pos:position pos:line="133" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="133" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="77"/></expr_stmt>
    }<pos:position pos:line="134" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="135" pos:column="5">mutt_body_handler<pos:position pos:line="135" pos:column="22"/></name> <argument_list pos:line="135" pos:column="23">(<argument><expr><name pos:line="135" pos:column="24">choice<pos:position pos:line="135" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="32">s<pos:position pos:line="135" pos:column="33"/></name></expr></argument>)<pos:position pos:line="135" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="136" pos:column="4"/></block></then>
  <elseif pos:line="137" pos:column="3">else <if pos:line="137" pos:column="8">if <condition pos:line="137" pos:column="11">(<expr><name><name pos:line="137" pos:column="12">s<pos:position pos:line="137" pos:column="13"/></name><operator pos:line="137" pos:column="13">-&gt;<pos:position pos:line="137" pos:column="18"/></operator><name pos:line="137" pos:column="15">flags<pos:position pos:line="137" pos:column="20"/></name></name> <operator pos:line="137" pos:column="21">&amp;<pos:position pos:line="137" pos:column="26"/></operator> <name pos:line="137" pos:column="23">MUTT_DISPLAY<pos:position pos:line="137" pos:column="35"/></name></expr>)<pos:position pos:line="137" pos:column="36"/></condition><then pos:line="137" pos:column="36">
  <block pos:line="138" pos:column="3">{
    <comment type="block" pos:line="139" pos:column="5">/* didn't find anything that we could display! */</comment>
    <expr_stmt><expr><call><name pos:line="140" pos:column="5">state_mark_attach<pos:position pos:line="140" pos:column="22"/></name> <argument_list pos:line="140" pos:column="23">(<argument><expr><name pos:line="140" pos:column="24">s<pos:position pos:line="140" pos:column="25"/></name></expr></argument>)<pos:position pos:line="140" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="141" pos:column="5">state_puts<pos:position pos:line="141" pos:column="15"/></name><argument_list pos:line="141" pos:column="15">(<argument><expr><call><name pos:line="141" pos:column="16">_<pos:position pos:line="141" pos:column="17"/></name><argument_list pos:line="141" pos:column="17">(<argument><expr><literal type="string" pos:line="141" pos:column="18">"[-- Error:  Could not display any parts of Multipart/Alternative! --]\n"<pos:position pos:line="141" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="92"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="141" pos:column="94">s<pos:position pos:line="141" pos:column="95"/></name></expr></argument>)<pos:position pos:line="141" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="97"/></expr_stmt>
    <expr_stmt><expr><name pos:line="142" pos:column="5">rc<pos:position pos:line="142" pos:column="7"/></name> <operator pos:line="142" pos:column="8">=<pos:position pos:line="142" pos:column="9"/></operator> <operator pos:line="142" pos:column="10">-<pos:position pos:line="142" pos:column="11"/></operator><literal type="number" pos:line="142" pos:column="11">1<pos:position pos:line="142" pos:column="12"/></literal></expr>;<pos:position pos:line="142" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="143" pos:column="4"/></block></then></if></elseif></if>

  <if pos:line="145" pos:column="3">if <condition pos:line="145" pos:column="6">(<expr><name pos:line="145" pos:column="7">mustfree<pos:position pos:line="145" pos:column="15"/></name></expr>)<pos:position pos:line="145" pos:column="16"/></condition><then pos:line="145" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="146" pos:column="5">mutt_free_body<pos:position pos:line="146" pos:column="19"/></name><argument_list pos:line="146" pos:column="19">(<argument><expr><operator pos:line="146" pos:column="20">&amp;<pos:position pos:line="146" pos:column="25"/></operator><name pos:line="146" pos:column="21">a<pos:position pos:line="146" pos:column="22"/></name></expr></argument>)<pos:position pos:line="146" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="24"/></expr_stmt></block></then></if>

  <return pos:line="148" pos:column="3">return <expr><name pos:line="148" pos:column="10">rc<pos:position pos:line="148" pos:column="12"/></name></expr>;<pos:position pos:line="148" pos:column="13"/></return>
}<pos:position pos:line="149" pos:column="2"/></block></function></unit>

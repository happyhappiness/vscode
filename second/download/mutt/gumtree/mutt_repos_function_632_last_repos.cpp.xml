<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_632_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ADDRESS<pos:position pos:line="1" pos:column="15"/></name> <modifier pos:line="1" pos:column="16">*<pos:position pos:line="1" pos:column="17"/></modifier></type><name pos:line="1" pos:column="17">mutt_expand_aliases_r<pos:position pos:line="1" pos:column="38"/></name> <parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">ADDRESS<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">a<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">LIST<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier><modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">expn<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">ADDRESS<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">head<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><name pos:line="3" pos:column="19">NULL<pos:position pos:line="3" pos:column="23"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="26">last<pos:position pos:line="3" pos:column="30"/></name> <init pos:line="3" pos:column="31">= <expr><name pos:line="3" pos:column="33">NULL<pos:position pos:line="3" pos:column="37"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="40">t<pos:position pos:line="3" pos:column="41"/></name></decl>, <modifier pos:line="3" pos:column="43">*<pos:position pos:line="3" pos:column="44"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="44">w<pos:position pos:line="3" pos:column="45"/></name></decl>;<pos:position pos:line="3" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">LIST<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">u<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">i<pos:position pos:line="5" pos:column="9"/></name></decl>;<pos:position pos:line="5" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">fqdn<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
  
  <while pos:line="8" pos:column="3">while <condition pos:line="8" pos:column="9">(<expr><name pos:line="8" pos:column="10">a<pos:position pos:line="8" pos:column="11"/></name></expr>)<pos:position pos:line="8" pos:column="12"/></condition>
  <block pos:line="9" pos:column="3">{
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name><name pos:line="10" pos:column="10">a<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">group<pos:position pos:line="10" pos:column="18"/></name></name> <operator pos:line="10" pos:column="19">&amp;&amp;<pos:position pos:line="10" pos:column="29"/></operator> <operator pos:line="10" pos:column="22">!<pos:position pos:line="10" pos:column="23"/></operator><name><name pos:line="10" pos:column="23">a<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">-&gt;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="26">personal<pos:position pos:line="10" pos:column="34"/></name></name> <operator pos:line="10" pos:column="35">&amp;&amp;<pos:position pos:line="10" pos:column="45"/></operator> <name><name pos:line="10" pos:column="38">a<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">-&gt;<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="41">mailbox<pos:position pos:line="10" pos:column="48"/></name></name> <operator pos:line="10" pos:column="49">&amp;&amp;<pos:position pos:line="10" pos:column="59"/></operator> <call><name pos:line="10" pos:column="52">strchr<pos:position pos:line="10" pos:column="58"/></name> <argument_list pos:line="10" pos:column="59">(<argument><expr><name><name pos:line="10" pos:column="60">a<pos:position pos:line="10" pos:column="61"/></name><operator pos:line="10" pos:column="61">-&gt;<pos:position pos:line="10" pos:column="66"/></operator><name pos:line="10" pos:column="63">mailbox<pos:position pos:line="10" pos:column="70"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="10" pos:column="72">'@'<pos:position pos:line="10" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="76"/></argument_list></call> <operator pos:line="10" pos:column="77">==<pos:position pos:line="10" pos:column="79"/></operator> <name pos:line="10" pos:column="80">NULL<pos:position pos:line="10" pos:column="84"/></name></expr>)<pos:position pos:line="10" pos:column="85"/></condition><then pos:line="10" pos:column="85">
    <block pos:line="11" pos:column="5">{
      <expr_stmt><expr><name pos:line="12" pos:column="7">t<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <call><name pos:line="12" pos:column="11">mutt_lookup_alias<pos:position pos:line="12" pos:column="28"/></name> <argument_list pos:line="12" pos:column="29">(<argument><expr><name><name pos:line="12" pos:column="30">a<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">-&gt;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="33">mailbox<pos:position pos:line="12" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>

      <if pos:line="14" pos:column="7">if <condition pos:line="14" pos:column="10">(<expr><name pos:line="14" pos:column="11">t<pos:position pos:line="14" pos:column="12"/></name></expr>)<pos:position pos:line="14" pos:column="13"/></condition><then pos:line="14" pos:column="13">
      <block pos:line="15" pos:column="7">{	
        <expr_stmt><expr><name pos:line="16" pos:column="9">i<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <literal type="number" pos:line="16" pos:column="13">0<pos:position pos:line="16" pos:column="14"/></literal></expr>;<pos:position pos:line="16" pos:column="15"/></expr_stmt>
        <for pos:line="17" pos:column="9">for <control pos:line="17" pos:column="13">(<init><expr><name pos:line="17" pos:column="14">u<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <operator pos:line="17" pos:column="18">*<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="19">expn<pos:position pos:line="17" pos:column="23"/></name></expr>;<pos:position pos:line="17" pos:column="24"/></init> <condition><expr><name pos:line="17" pos:column="25">u<pos:position pos:line="17" pos:column="26"/></name></expr>;<pos:position pos:line="17" pos:column="27"/></condition> <incr><expr><name pos:line="17" pos:column="28">u<pos:position pos:line="17" pos:column="29"/></name> <operator pos:line="17" pos:column="30">=<pos:position pos:line="17" pos:column="31"/></operator> <name><name pos:line="17" pos:column="32">u<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">-&gt;<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="35">next<pos:position pos:line="17" pos:column="39"/></name></name></expr></incr>)<pos:position pos:line="17" pos:column="40"/></control>
	<block pos:line="18" pos:column="9">{
	  <if pos:line="19" pos:column="11">if <condition pos:line="19" pos:column="14">(<expr><call><name pos:line="19" pos:column="15">mutt_strcmp<pos:position pos:line="19" pos:column="26"/></name> <argument_list pos:line="19" pos:column="27">(<argument><expr><name><name pos:line="19" pos:column="28">a<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">-&gt;<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="31">mailbox<pos:position pos:line="19" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="40">u<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">-&gt;<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="43">data<pos:position pos:line="19" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call> <operator pos:line="19" pos:column="49">==<pos:position pos:line="19" pos:column="51"/></operator> <literal type="number" pos:line="19" pos:column="52">0<pos:position pos:line="19" pos:column="53"/></literal></expr>)<pos:position pos:line="19" pos:column="54"/></condition><then pos:line="19" pos:column="54"> <comment type="block" pos:line="19" pos:column="55">/* alias already found */</comment>
	  <block pos:line="20" pos:column="11">{
	    <expr_stmt><expr><call><name pos:line="21" pos:column="13">dprint<pos:position pos:line="21" pos:column="19"/></name> <argument_list pos:line="21" pos:column="20">(<argument><expr><literal type="number" pos:line="21" pos:column="21">1<pos:position pos:line="21" pos:column="22"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="24">(<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="25">debugfile<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">,<pos:position pos:line="21" pos:column="35"/></operator> <literal type="string" pos:line="21" pos:column="36">"mutt_expand_aliases_r(): loop in alias found for '%s'\n"<pos:position pos:line="21" pos:column="93"/></literal><operator pos:line="21" pos:column="93">,<pos:position pos:line="21" pos:column="94"/></operator> <name><name pos:line="21" pos:column="95">a<pos:position pos:line="21" pos:column="96"/></name><operator pos:line="21" pos:column="96">-&gt;<pos:position pos:line="21" pos:column="101"/></operator><name pos:line="21" pos:column="98">mailbox<pos:position pos:line="21" pos:column="105"/></name></name><operator pos:line="21" pos:column="105">)<pos:position pos:line="21" pos:column="106"/></operator></expr></argument>)<pos:position pos:line="21" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="108"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="22" pos:column="13">i<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <literal type="number" pos:line="22" pos:column="17">1<pos:position pos:line="22" pos:column="18"/></literal></expr>;<pos:position pos:line="22" pos:column="19"/></expr_stmt>
	    <break pos:line="23" pos:column="13">break;<pos:position pos:line="23" pos:column="19"/></break>
	  }<pos:position pos:line="24" pos:column="12"/></block></then></if>
	}<pos:position pos:line="25" pos:column="10"/></block></for>

        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">i<pos:position pos:line="27" pos:column="15"/></name></expr>)<pos:position pos:line="27" pos:column="16"/></condition><then pos:line="27" pos:column="16">
	<block pos:line="28" pos:column="9">{
          <expr_stmt><expr><name pos:line="29" pos:column="11">u<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <call><name pos:line="29" pos:column="15">safe_malloc<pos:position pos:line="29" pos:column="26"/></name> <argument_list pos:line="29" pos:column="27">(<argument><expr><sizeof pos:line="29" pos:column="28">sizeof <argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">LIST<pos:position pos:line="29" pos:column="40"/></name></expr></argument>)<pos:position pos:line="29" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="43"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="30" pos:column="11">u<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">-&gt;<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="14">data<pos:position pos:line="30" pos:column="18"/></name></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <call><name pos:line="30" pos:column="21">safe_strdup<pos:position pos:line="30" pos:column="32"/></name> <argument_list pos:line="30" pos:column="33">(<argument><expr><name><name pos:line="30" pos:column="34">a<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">-&gt;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="37">mailbox<pos:position pos:line="30" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="31" pos:column="11">u<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">-&gt;<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="14">next<pos:position pos:line="31" pos:column="18"/></name></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <operator pos:line="31" pos:column="21">*<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">expn<pos:position pos:line="31" pos:column="26"/></name></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt>
          <expr_stmt><expr><operator pos:line="32" pos:column="11">*<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="12">expn<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <name pos:line="32" pos:column="19">u<pos:position pos:line="32" pos:column="20"/></name></expr>;<pos:position pos:line="32" pos:column="21"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="33" pos:column="11">w<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">=<pos:position pos:line="33" pos:column="14"/></operator> <call><name pos:line="33" pos:column="15">rfc822_cpy_adr<pos:position pos:line="33" pos:column="29"/></name> <argument_list pos:line="33" pos:column="30">(<argument><expr><name pos:line="33" pos:column="31">t<pos:position pos:line="33" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="34">0<pos:position pos:line="33" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="34" pos:column="11">w<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">=<pos:position pos:line="34" pos:column="14"/></operator> <call><name pos:line="34" pos:column="15">mutt_expand_aliases_r<pos:position pos:line="34" pos:column="36"/></name> <argument_list pos:line="34" pos:column="37">(<argument><expr><name pos:line="34" pos:column="38">w<pos:position pos:line="34" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="41">expn<pos:position pos:line="34" pos:column="45"/></name></expr></argument>)<pos:position pos:line="34" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="47"/></expr_stmt>
	  <if pos:line="35" pos:column="11">if <condition pos:line="35" pos:column="14">(<expr><name pos:line="35" pos:column="15">head<pos:position pos:line="35" pos:column="19"/></name></expr>)<pos:position pos:line="35" pos:column="20"/></condition><then pos:line="35" pos:column="20">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="36" pos:column="13">last<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">-&gt;<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="19">next<pos:position pos:line="36" pos:column="23"/></name></name> <operator pos:line="36" pos:column="24">=<pos:position pos:line="36" pos:column="25"/></operator> <name pos:line="36" pos:column="26">w<pos:position pos:line="36" pos:column="27"/></name></expr>;<pos:position pos:line="36" pos:column="28"/></expr_stmt></block></then>
	  <else pos:line="37" pos:column="11">else
	    <block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="13">head<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <name pos:line="38" pos:column="20">last<pos:position pos:line="38" pos:column="24"/></name> <operator pos:line="38" pos:column="25">=<pos:position pos:line="38" pos:column="26"/></operator> <name pos:line="38" pos:column="27">w<pos:position pos:line="38" pos:column="28"/></name></expr>;<pos:position pos:line="38" pos:column="29"/></expr_stmt></block></else></if>
	  <while pos:line="39" pos:column="11">while <condition pos:line="39" pos:column="17">(<expr><name pos:line="39" pos:column="18">last<pos:position pos:line="39" pos:column="22"/></name> <operator pos:line="39" pos:column="23">&amp;&amp;<pos:position pos:line="39" pos:column="33"/></operator> <name><name pos:line="39" pos:column="26">last<pos:position pos:line="39" pos:column="30"/></name><operator pos:line="39" pos:column="30">-&gt;<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="32">next<pos:position pos:line="39" pos:column="36"/></name></name></expr>)<pos:position pos:line="39" pos:column="37"/></condition>
	    <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="13">last<pos:position pos:line="40" pos:column="17"/></name> <operator pos:line="40" pos:column="18">=<pos:position pos:line="40" pos:column="19"/></operator> <name><name pos:line="40" pos:column="20">last<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">-&gt;<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="26">next<pos:position pos:line="40" pos:column="30"/></name></name></expr>;<pos:position pos:line="40" pos:column="31"/></expr_stmt></block></while>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="42" pos:column="9">t<pos:position pos:line="42" pos:column="10"/></name> <operator pos:line="42" pos:column="11">=<pos:position pos:line="42" pos:column="12"/></operator> <name pos:line="42" pos:column="13">a<pos:position pos:line="42" pos:column="14"/></name></expr>;<pos:position pos:line="42" pos:column="15"/></expr_stmt>
	<expr_stmt><expr><name pos:line="43" pos:column="9">a<pos:position pos:line="43" pos:column="10"/></name> <operator pos:line="43" pos:column="11">=<pos:position pos:line="43" pos:column="12"/></operator> <name><name pos:line="43" pos:column="13">a<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">-&gt;<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="16">next<pos:position pos:line="43" pos:column="20"/></name></name></expr>;<pos:position pos:line="43" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="44" pos:column="9">t<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">-&gt;<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="12">next<pos:position pos:line="44" pos:column="16"/></name></name> <operator pos:line="44" pos:column="17">=<pos:position pos:line="44" pos:column="18"/></operator> <name pos:line="44" pos:column="19">NULL<pos:position pos:line="44" pos:column="23"/></name></expr>;<pos:position pos:line="44" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="45" pos:column="9">rfc822_free_address<pos:position pos:line="45" pos:column="28"/></name> <argument_list pos:line="45" pos:column="29">(<argument><expr><operator pos:line="45" pos:column="30">&amp;<pos:position pos:line="45" pos:column="35"/></operator><name pos:line="45" pos:column="31">t<pos:position pos:line="45" pos:column="32"/></name></expr></argument>)<pos:position pos:line="45" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="34"/></expr_stmt>
	<continue pos:line="46" pos:column="9">continue;<pos:position pos:line="46" pos:column="18"/></continue>
      }<pos:position pos:line="47" pos:column="8"/></block></then>
      <else pos:line="48" pos:column="7">else
      <block pos:line="49" pos:column="7">{
	<decl_stmt><decl><type><name><name pos:line="50" pos:column="9">struct<pos:position pos:line="50" pos:column="15"/></name> <name pos:line="50" pos:column="16">passwd<pos:position pos:line="50" pos:column="22"/></name></name> <modifier pos:line="50" pos:column="23">*<pos:position pos:line="50" pos:column="24"/></modifier></type><name pos:line="50" pos:column="24">pw<pos:position pos:line="50" pos:column="26"/></name> <init pos:line="50" pos:column="27">= <expr><call><name pos:line="50" pos:column="29">getpwnam<pos:position pos:line="50" pos:column="37"/></name> <argument_list pos:line="50" pos:column="38">(<argument><expr><name><name pos:line="50" pos:column="39">a<pos:position pos:line="50" pos:column="40"/></name><operator pos:line="50" pos:column="40">-&gt;<pos:position pos:line="50" pos:column="45"/></operator><name pos:line="50" pos:column="42">mailbox<pos:position pos:line="50" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="50" pos:column="51"/></decl_stmt>

	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">pw<pos:position pos:line="52" pos:column="15"/></name></expr>)<pos:position pos:line="52" pos:column="16"/></condition><then pos:line="52" pos:column="16">
	<block pos:line="53" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="54" pos:column="11">char<pos:position pos:line="54" pos:column="15"/></name></type> <name><name pos:line="54" pos:column="16">namebuf<pos:position pos:line="54" pos:column="23"/></name><index pos:line="54" pos:column="23">[<expr><name pos:line="54" pos:column="24">STRING<pos:position pos:line="54" pos:column="30"/></name></expr>]<pos:position pos:line="54" pos:column="31"/></index></name></decl>;<pos:position pos:line="54" pos:column="32"/></decl_stmt>
	  
	  <expr_stmt><expr><call><name pos:line="56" pos:column="11">mutt_gecos_name<pos:position pos:line="56" pos:column="26"/></name> <argument_list pos:line="56" pos:column="27">(<argument><expr><name pos:line="56" pos:column="28">namebuf<pos:position pos:line="56" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="56" pos:column="37">sizeof <argument_list pos:line="56" pos:column="44">(<argument><expr><name pos:line="56" pos:column="45">namebuf<pos:position pos:line="56" pos:column="52"/></name></expr></argument>)<pos:position pos:line="56" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="56" pos:column="55">pw<pos:position pos:line="56" pos:column="57"/></name></expr></argument>)<pos:position pos:line="56" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="59"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="57" pos:column="11">mutt_str_replace<pos:position pos:line="57" pos:column="27"/></name> <argument_list pos:line="57" pos:column="28">(<argument><expr><operator pos:line="57" pos:column="29">&amp;<pos:position pos:line="57" pos:column="34"/></operator><name><name pos:line="57" pos:column="30">a<pos:position pos:line="57" pos:column="31"/></name><operator pos:line="57" pos:column="31">-&gt;<pos:position pos:line="57" pos:column="36"/></operator><name pos:line="57" pos:column="33">personal<pos:position pos:line="57" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="43">namebuf<pos:position pos:line="57" pos:column="50"/></name></expr></argument>)<pos:position pos:line="57" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="52"/></expr_stmt>
	  
<cpp:ifdef pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">ifdef<pos:position pos:line="59" pos:column="7"/></cpp:directive> <name pos:line="59" pos:column="8">EXACT_ADDRESS<pos:position pos:line="59" pos:column="21"/></name></cpp:ifdef>
	  <expr_stmt><expr><call><name pos:line="60" pos:column="11">FREE<pos:position pos:line="60" pos:column="15"/></name> <argument_list pos:line="60" pos:column="16">(<argument><expr><operator pos:line="60" pos:column="17">&amp;<pos:position pos:line="60" pos:column="22"/></operator><name><name pos:line="60" pos:column="18">a<pos:position pos:line="60" pos:column="19"/></name><operator pos:line="60" pos:column="19">-&gt;<pos:position pos:line="60" pos:column="24"/></operator><name pos:line="60" pos:column="21">val<pos:position pos:line="60" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="26"/></expr_stmt>
<cpp:endif pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">endif<pos:position pos:line="61" pos:column="7"/></cpp:directive></cpp:endif>
	}<pos:position pos:line="62" pos:column="10"/></block></then></if>
      }<pos:position pos:line="63" pos:column="8"/></block></else></if>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>

    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name pos:line="66" pos:column="9">head<pos:position pos:line="66" pos:column="13"/></name></expr>)<pos:position pos:line="66" pos:column="14"/></condition><then pos:line="66" pos:column="14">
    <block pos:line="67" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="68" pos:column="7">last<pos:position pos:line="68" pos:column="11"/></name><operator pos:line="68" pos:column="11">-&gt;<pos:position pos:line="68" pos:column="16"/></operator><name pos:line="68" pos:column="13">next<pos:position pos:line="68" pos:column="17"/></name></name> <operator pos:line="68" pos:column="18">=<pos:position pos:line="68" pos:column="19"/></operator> <name pos:line="68" pos:column="20">a<pos:position pos:line="68" pos:column="21"/></name></expr>;<pos:position pos:line="68" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name pos:line="69" pos:column="7">last<pos:position pos:line="69" pos:column="11"/></name> <operator pos:line="69" pos:column="12">=<pos:position pos:line="69" pos:column="13"/></operator> <name><name pos:line="69" pos:column="14">last<pos:position pos:line="69" pos:column="18"/></name><operator pos:line="69" pos:column="18">-&gt;<pos:position pos:line="69" pos:column="23"/></operator><name pos:line="69" pos:column="20">next<pos:position pos:line="69" pos:column="24"/></name></name></expr>;<pos:position pos:line="69" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></then>
    <else pos:line="71" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="7">head<pos:position pos:line="72" pos:column="11"/></name> <operator pos:line="72" pos:column="12">=<pos:position pos:line="72" pos:column="13"/></operator> <name pos:line="72" pos:column="14">last<pos:position pos:line="72" pos:column="18"/></name> <operator pos:line="72" pos:column="19">=<pos:position pos:line="72" pos:column="20"/></operator> <name pos:line="72" pos:column="21">a<pos:position pos:line="72" pos:column="22"/></name></expr>;<pos:position pos:line="72" pos:column="23"/></expr_stmt></block></else></if>
    <expr_stmt><expr><name pos:line="73" pos:column="5">a<pos:position pos:line="73" pos:column="6"/></name> <operator pos:line="73" pos:column="7">=<pos:position pos:line="73" pos:column="8"/></operator> <name><name pos:line="73" pos:column="9">a<pos:position pos:line="73" pos:column="10"/></name><operator pos:line="73" pos:column="10">-&gt;<pos:position pos:line="73" pos:column="15"/></operator><name pos:line="73" pos:column="12">next<pos:position pos:line="73" pos:column="16"/></name></name></expr>;<pos:position pos:line="73" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="74" pos:column="5">last<pos:position pos:line="74" pos:column="9"/></name><operator pos:line="74" pos:column="9">-&gt;<pos:position pos:line="74" pos:column="14"/></operator><name pos:line="74" pos:column="11">next<pos:position pos:line="74" pos:column="15"/></name></name> <operator pos:line="74" pos:column="16">=<pos:position pos:line="74" pos:column="17"/></operator> <name pos:line="74" pos:column="18">NULL<pos:position pos:line="74" pos:column="22"/></name></expr>;<pos:position pos:line="74" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="75" pos:column="4"/></block></while>

  <if pos:line="77" pos:column="3">if <condition pos:line="77" pos:column="6">(<expr><call><name pos:line="77" pos:column="7">option<pos:position pos:line="77" pos:column="13"/></name> <argument_list pos:line="77" pos:column="14">(<argument><expr><name pos:line="77" pos:column="15">OPTUSEDOMAIN<pos:position pos:line="77" pos:column="27"/></name></expr></argument>)<pos:position pos:line="77" pos:column="28"/></argument_list></call> <operator pos:line="77" pos:column="29">&amp;&amp;<pos:position pos:line="77" pos:column="39"/></operator> <operator pos:line="77" pos:column="32">(<pos:position pos:line="77" pos:column="33"/></operator><name pos:line="77" pos:column="33">fqdn<pos:position pos:line="77" pos:column="37"/></name> <operator pos:line="77" pos:column="38">=<pos:position pos:line="77" pos:column="39"/></operator> <call><name pos:line="77" pos:column="40">mutt_fqdn<pos:position pos:line="77" pos:column="49"/></name><argument_list pos:line="77" pos:column="49">(<argument><expr><literal type="number" pos:line="77" pos:column="50">1<pos:position pos:line="77" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="52"/></argument_list></call><operator pos:line="77" pos:column="52">)<pos:position pos:line="77" pos:column="53"/></operator></expr>)<pos:position pos:line="77" pos:column="54"/></condition><then pos:line="77" pos:column="54">
  <block pos:line="78" pos:column="3">{
    <comment type="block" pos:line="79" pos:column="5">/* now qualify all local addresses */</comment>
    <expr_stmt><expr><call><name pos:line="80" pos:column="5">rfc822_qualify<pos:position pos:line="80" pos:column="19"/></name> <argument_list pos:line="80" pos:column="20">(<argument><expr><name pos:line="80" pos:column="21">head<pos:position pos:line="80" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="27">fqdn<pos:position pos:line="80" pos:column="31"/></name></expr></argument>)<pos:position pos:line="80" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="81" pos:column="4"/></block></then></if>

  <return pos:line="83" pos:column="3">return <expr><operator pos:line="83" pos:column="10">(<pos:position pos:line="83" pos:column="11"/></operator><name pos:line="83" pos:column="11">head<pos:position pos:line="83" pos:column="15"/></name><operator pos:line="83" pos:column="15">)<pos:position pos:line="83" pos:column="16"/></operator></expr>;<pos:position pos:line="83" pos:column="17"/></return>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

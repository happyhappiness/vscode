<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_739_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">pgp_gpgme_decrypt_mime<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">FILE<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">fpin<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">FILE<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier><modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">fpout<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">BODY<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">b<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">BODY<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier><modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">cur<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">tempfile<pos:position pos:line="3" pos:column="16"/></name><index pos:line="3" pos:column="16">[<expr><name pos:line="3" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="3" pos:column="32"/></name></expr>]<pos:position pos:line="3" pos:column="33"/></index></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">STATE<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">s<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">BODY<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">first_part<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name pos:line="5" pos:column="22">b<pos:position pos:line="5" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">is_signed<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><literal type="number" pos:line="6" pos:column="19">0<pos:position pos:line="6" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">need_decode<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><literal type="number" pos:line="7" pos:column="21">0<pos:position pos:line="7" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">saved_type<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">LOFF_T<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">saved_offset<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">size_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">saved_length<pos:position pos:line="10" pos:column="22"/></name></decl>;<pos:position pos:line="10" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">FILE<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">decoded_fp<pos:position pos:line="11" pos:column="19"/></name> <init pos:line="11" pos:column="20">= <expr><name pos:line="11" pos:column="22">NULL<pos:position pos:line="11" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">rv<pos:position pos:line="12" pos:column="9"/></name> <init pos:line="12" pos:column="10">= <expr><literal type="number" pos:line="12" pos:column="12">0<pos:position pos:line="12" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="14"/></decl_stmt>
  
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">first_part<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">goodsig<pos:position pos:line="14" pos:column="22"/></name></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <literal type="number" pos:line="14" pos:column="25">0<pos:position pos:line="14" pos:column="26"/></literal></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">first_part<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">-&gt;<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="15">warnsig<pos:position pos:line="15" pos:column="22"/></name></name> <operator pos:line="15" pos:column="23">=<pos:position pos:line="15" pos:column="24"/></operator> <literal type="number" pos:line="15" pos:column="25">0<pos:position pos:line="15" pos:column="26"/></literal></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><call><name pos:line="17" pos:column="7">mutt_is_valid_multipart_pgp_encrypted<pos:position pos:line="17" pos:column="44"/></name> <argument_list pos:line="17" pos:column="45">(<argument><expr><name pos:line="17" pos:column="46">b<pos:position pos:line="17" pos:column="47"/></name></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="49"/></condition><then pos:line="17" pos:column="49">
    <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="5">b<pos:position pos:line="18" pos:column="6"/></name> <operator pos:line="18" pos:column="7">=<pos:position pos:line="18" pos:column="8"/></operator> <name><name pos:line="18" pos:column="9">b<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">parts<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">-&gt;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="19">next<pos:position pos:line="18" pos:column="23"/></name></name></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt></block></then>
  <elseif pos:line="19" pos:column="3">else <if pos:line="19" pos:column="8">if <condition pos:line="19" pos:column="11">(<expr><call><name pos:line="19" pos:column="12">mutt_is_malformed_multipart_pgp_encrypted<pos:position pos:line="19" pos:column="53"/></name> <argument_list pos:line="19" pos:column="54">(<argument><expr><name pos:line="19" pos:column="55">b<pos:position pos:line="19" pos:column="56"/></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="58"/></condition><then pos:line="19" pos:column="58">
  <block pos:line="20" pos:column="3">{
    <expr_stmt><expr><name pos:line="21" pos:column="5">b<pos:position pos:line="21" pos:column="6"/></name> <operator pos:line="21" pos:column="7">=<pos:position pos:line="21" pos:column="8"/></operator> <name><name pos:line="21" pos:column="9">b<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">parts<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">-&gt;<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="19">next<pos:position pos:line="21" pos:column="23"/></name><operator pos:line="21" pos:column="23">-&gt;<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="25">next<pos:position pos:line="21" pos:column="29"/></name></name></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">need_decode<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <literal type="number" pos:line="22" pos:column="19">1<pos:position pos:line="22" pos:column="20"/></literal></expr>;<pos:position pos:line="22" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if></elseif>
  <else pos:line="24" pos:column="3">else
    <block type="pseudo"><return pos:line="25" pos:column="5">return <expr><operator pos:line="25" pos:column="12">-<pos:position pos:line="25" pos:column="13"/></operator><literal type="number" pos:line="25" pos:column="13">1<pos:position pos:line="25" pos:column="14"/></literal></expr>;<pos:position pos:line="25" pos:column="15"/></return></block></else></if>
  
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">memset<pos:position pos:line="27" pos:column="9"/></name> <argument_list pos:line="27" pos:column="10">(<argument><expr><operator pos:line="27" pos:column="11">&amp;<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="12">s<pos:position pos:line="27" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="15">0<pos:position pos:line="27" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="18">sizeof <argument_list pos:line="27" pos:column="25">(<argument><expr><name pos:line="27" pos:column="26">s<pos:position pos:line="27" pos:column="27"/></name></expr></argument>)<pos:position pos:line="27" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="28" pos:column="3">s<pos:position pos:line="28" pos:column="4"/></name><operator pos:line="28" pos:column="4">.<pos:position pos:line="28" pos:column="5"/></operator><name pos:line="28" pos:column="5">fpin<pos:position pos:line="28" pos:column="9"/></name></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <name pos:line="28" pos:column="12">fpin<pos:position pos:line="28" pos:column="16"/></name></expr>;<pos:position pos:line="28" pos:column="17"/></expr_stmt>

  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name pos:line="30" pos:column="7">need_decode<pos:position pos:line="30" pos:column="18"/></name></expr>)<pos:position pos:line="30" pos:column="19"/></condition><then pos:line="30" pos:column="19">
  <block pos:line="31" pos:column="3">{
    <expr_stmt><expr><name pos:line="32" pos:column="5">saved_type<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <name><name pos:line="32" pos:column="18">b<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">-&gt;<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="21">type<pos:position pos:line="32" pos:column="25"/></name></name></expr>;<pos:position pos:line="32" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">saved_offset<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">=<pos:position pos:line="33" pos:column="19"/></operator> <name><name pos:line="33" pos:column="20">b<pos:position pos:line="33" pos:column="21"/></name><operator pos:line="33" pos:column="21">-&gt;<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="23">offset<pos:position pos:line="33" pos:column="29"/></name></name></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="34" pos:column="5">saved_length<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">=<pos:position pos:line="34" pos:column="19"/></operator> <name><name pos:line="34" pos:column="20">b<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">-&gt;<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="23">length<pos:position pos:line="34" pos:column="29"/></name></name></expr>;<pos:position pos:line="34" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="36" pos:column="5">mutt_mktemp<pos:position pos:line="36" pos:column="16"/></name> <argument_list pos:line="36" pos:column="17">(<argument><expr><name pos:line="36" pos:column="18">tempfile<pos:position pos:line="36" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="28">sizeof <argument_list pos:line="36" pos:column="35">(<argument><expr><name pos:line="36" pos:column="36">tempfile<pos:position pos:line="36" pos:column="44"/></name></expr></argument>)<pos:position pos:line="36" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="47"/></expr_stmt>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><operator pos:line="37" pos:column="9">(<pos:position pos:line="37" pos:column="10"/></operator><name pos:line="37" pos:column="10">decoded_fp<pos:position pos:line="37" pos:column="20"/></name> <operator pos:line="37" pos:column="21">=<pos:position pos:line="37" pos:column="22"/></operator> <call><name pos:line="37" pos:column="23">safe_fopen<pos:position pos:line="37" pos:column="33"/></name> <argument_list pos:line="37" pos:column="34">(<argument><expr><name pos:line="37" pos:column="35">tempfile<pos:position pos:line="37" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="45">"w+"<pos:position pos:line="37" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call><operator pos:line="37" pos:column="50">)<pos:position pos:line="37" pos:column="51"/></operator> <operator pos:line="37" pos:column="52">==<pos:position pos:line="37" pos:column="54"/></operator> <name pos:line="37" pos:column="55">NULL<pos:position pos:line="37" pos:column="59"/></name></expr>)<pos:position pos:line="37" pos:column="60"/></condition><then pos:line="37" pos:column="60">
    <block pos:line="38" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="39" pos:column="7">mutt_perror<pos:position pos:line="39" pos:column="18"/></name> <argument_list pos:line="39" pos:column="19">(<argument><expr><name pos:line="39" pos:column="20">tempfile<pos:position pos:line="39" pos:column="28"/></name></expr></argument>)<pos:position pos:line="39" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="30"/></expr_stmt>
      <return pos:line="40" pos:column="7">return <expr><operator pos:line="40" pos:column="14">(<pos:position pos:line="40" pos:column="15"/></operator><operator pos:line="40" pos:column="15">-<pos:position pos:line="40" pos:column="16"/></operator><literal type="number" pos:line="40" pos:column="16">1<pos:position pos:line="40" pos:column="17"/></literal><operator pos:line="40" pos:column="17">)<pos:position pos:line="40" pos:column="18"/></operator></expr>;<pos:position pos:line="40" pos:column="19"/></return>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">unlink<pos:position pos:line="42" pos:column="11"/></name> <argument_list pos:line="42" pos:column="12">(<argument><expr><name pos:line="42" pos:column="13">tempfile<pos:position pos:line="42" pos:column="21"/></name></expr></argument>)<pos:position pos:line="42" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="44" pos:column="5">fseeko<pos:position pos:line="44" pos:column="11"/></name> <argument_list pos:line="44" pos:column="12">(<argument><expr><name><name pos:line="44" pos:column="13">s<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">.<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="15">fpin<pos:position pos:line="44" pos:column="19"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="21">b<pos:position pos:line="44" pos:column="22"/></name><operator pos:line="44" pos:column="22">-&gt;<pos:position pos:line="44" pos:column="27"/></operator><name pos:line="44" pos:column="24">offset<pos:position pos:line="44" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="32">0<pos:position pos:line="44" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">s<pos:position pos:line="45" pos:column="6"/></name><operator pos:line="45" pos:column="6">.<pos:position pos:line="45" pos:column="7"/></operator><name pos:line="45" pos:column="7">fpout<pos:position pos:line="45" pos:column="12"/></name></name> <operator pos:line="45" pos:column="13">=<pos:position pos:line="45" pos:column="14"/></operator> <name pos:line="45" pos:column="15">decoded_fp<pos:position pos:line="45" pos:column="25"/></name></expr>;<pos:position pos:line="45" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="47" pos:column="5">mutt_decode_attachment<pos:position pos:line="47" pos:column="27"/></name> <argument_list pos:line="47" pos:column="28">(<argument><expr><name pos:line="47" pos:column="29">b<pos:position pos:line="47" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="32">&amp;<pos:position pos:line="47" pos:column="37"/></operator><name pos:line="47" pos:column="33">s<pos:position pos:line="47" pos:column="34"/></name></expr></argument>)<pos:position pos:line="47" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="49" pos:column="5">fflush<pos:position pos:line="49" pos:column="11"/></name> <argument_list pos:line="49" pos:column="12">(<argument><expr><name pos:line="49" pos:column="13">decoded_fp<pos:position pos:line="49" pos:column="23"/></name></expr></argument>)<pos:position pos:line="49" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">b<pos:position pos:line="50" pos:column="6"/></name><operator pos:line="50" pos:column="6">-&gt;<pos:position pos:line="50" pos:column="11"/></operator><name pos:line="50" pos:column="8">length<pos:position pos:line="50" pos:column="14"/></name></name> <operator pos:line="50" pos:column="15">=<pos:position pos:line="50" pos:column="16"/></operator> <call><name pos:line="50" pos:column="17">ftello<pos:position pos:line="50" pos:column="23"/></name> <argument_list pos:line="50" pos:column="24">(<argument><expr><name pos:line="50" pos:column="25">decoded_fp<pos:position pos:line="50" pos:column="35"/></name></expr></argument>)<pos:position pos:line="50" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">b<pos:position pos:line="51" pos:column="6"/></name><operator pos:line="51" pos:column="6">-&gt;<pos:position pos:line="51" pos:column="11"/></operator><name pos:line="51" pos:column="8">offset<pos:position pos:line="51" pos:column="14"/></name></name> <operator pos:line="51" pos:column="15">=<pos:position pos:line="51" pos:column="16"/></operator> <literal type="number" pos:line="51" pos:column="17">0<pos:position pos:line="51" pos:column="18"/></literal></expr>;<pos:position pos:line="51" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">rewind<pos:position pos:line="52" pos:column="11"/></name> <argument_list pos:line="52" pos:column="12">(<argument><expr><name pos:line="52" pos:column="13">decoded_fp<pos:position pos:line="52" pos:column="23"/></name></expr></argument>)<pos:position pos:line="52" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="53" pos:column="5">s<pos:position pos:line="53" pos:column="6"/></name><operator pos:line="53" pos:column="6">.<pos:position pos:line="53" pos:column="7"/></operator><name pos:line="53" pos:column="7">fpin<pos:position pos:line="53" pos:column="11"/></name></name> <operator pos:line="53" pos:column="12">=<pos:position pos:line="53" pos:column="13"/></operator> <name pos:line="53" pos:column="14">decoded_fp<pos:position pos:line="53" pos:column="24"/></name></expr>;<pos:position pos:line="53" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="54" pos:column="5">s<pos:position pos:line="54" pos:column="6"/></name><operator pos:line="54" pos:column="6">.<pos:position pos:line="54" pos:column="7"/></operator><name pos:line="54" pos:column="7">fpout<pos:position pos:line="54" pos:column="12"/></name></name> <operator pos:line="54" pos:column="13">=<pos:position pos:line="54" pos:column="14"/></operator> <literal type="number" pos:line="54" pos:column="15">0<pos:position pos:line="54" pos:column="16"/></literal></expr>;<pos:position pos:line="54" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="55" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="57" pos:column="3">mutt_mktemp<pos:position pos:line="57" pos:column="14"/></name> <argument_list pos:line="57" pos:column="15">(<argument><expr><name pos:line="57" pos:column="16">tempfile<pos:position pos:line="57" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="57" pos:column="26">sizeof <argument_list pos:line="57" pos:column="33">(<argument><expr><name pos:line="57" pos:column="34">tempfile<pos:position pos:line="57" pos:column="42"/></name></expr></argument>)<pos:position pos:line="57" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="57" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="45"/></expr_stmt>
  <if pos:line="58" pos:column="3">if <condition pos:line="58" pos:column="6">(<expr><operator pos:line="58" pos:column="7">!<pos:position pos:line="58" pos:column="8"/></operator><operator pos:line="58" pos:column="8">(<pos:position pos:line="58" pos:column="9"/></operator><operator pos:line="58" pos:column="9">*<pos:position pos:line="58" pos:column="10"/></operator><name pos:line="58" pos:column="10">fpout<pos:position pos:line="58" pos:column="15"/></name> <operator pos:line="58" pos:column="16">=<pos:position pos:line="58" pos:column="17"/></operator> <call><name pos:line="58" pos:column="18">safe_fopen<pos:position pos:line="58" pos:column="28"/></name> <argument_list pos:line="58" pos:column="29">(<argument><expr><name pos:line="58" pos:column="30">tempfile<pos:position pos:line="58" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="40">"w+"<pos:position pos:line="58" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="45"/></argument_list></call><operator pos:line="58" pos:column="45">)<pos:position pos:line="58" pos:column="46"/></operator></expr>)<pos:position pos:line="58" pos:column="47"/></condition><then pos:line="58" pos:column="47">
  <block pos:line="59" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">mutt_perror<pos:position pos:line="60" pos:column="16"/></name> <argument_list pos:line="60" pos:column="17">(<argument><expr><name pos:line="60" pos:column="18">tempfile<pos:position pos:line="60" pos:column="26"/></name></expr></argument>)<pos:position pos:line="60" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="61" pos:column="5">rv<pos:position pos:line="61" pos:column="7"/></name> <operator pos:line="61" pos:column="8">=<pos:position pos:line="61" pos:column="9"/></operator> <operator pos:line="61" pos:column="10">-<pos:position pos:line="61" pos:column="11"/></operator><literal type="number" pos:line="61" pos:column="11">1<pos:position pos:line="61" pos:column="12"/></literal></expr>;<pos:position pos:line="61" pos:column="13"/></expr_stmt>
    <goto pos:line="62" pos:column="5">goto <name pos:line="62" pos:column="10">bail<pos:position pos:line="62" pos:column="14"/></name>;<pos:position pos:line="62" pos:column="15"/></goto>
  }<pos:position pos:line="63" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="64" pos:column="3">unlink<pos:position pos:line="64" pos:column="9"/></name> <argument_list pos:line="64" pos:column="10">(<argument><expr><name pos:line="64" pos:column="11">tempfile<pos:position pos:line="64" pos:column="19"/></name></expr></argument>)<pos:position pos:line="64" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="21"/></expr_stmt>

  <if pos:line="66" pos:column="3">if <condition pos:line="66" pos:column="6">(<expr><operator pos:line="66" pos:column="7">(<pos:position pos:line="66" pos:column="8"/></operator><operator pos:line="66" pos:column="8">*<pos:position pos:line="66" pos:column="9"/></operator><name pos:line="66" pos:column="9">cur<pos:position pos:line="66" pos:column="12"/></name> <operator pos:line="66" pos:column="13">=<pos:position pos:line="66" pos:column="14"/></operator> <call><name pos:line="66" pos:column="15">decrypt_part<pos:position pos:line="66" pos:column="27"/></name> <argument_list pos:line="66" pos:column="28">(<argument><expr><name pos:line="66" pos:column="29">b<pos:position pos:line="66" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="32">&amp;<pos:position pos:line="66" pos:column="37"/></operator><name pos:line="66" pos:column="33">s<pos:position pos:line="66" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="36">*<pos:position pos:line="66" pos:column="37"/></operator><name pos:line="66" pos:column="37">fpout<pos:position pos:line="66" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="44">0<pos:position pos:line="66" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="66" pos:column="47">&amp;<pos:position pos:line="66" pos:column="52"/></operator><name pos:line="66" pos:column="48">is_signed<pos:position pos:line="66" pos:column="57"/></name></expr></argument>)<pos:position pos:line="66" pos:column="58"/></argument_list></call><operator pos:line="66" pos:column="58">)<pos:position pos:line="66" pos:column="59"/></operator> <operator pos:line="66" pos:column="60">==<pos:position pos:line="66" pos:column="62"/></operator> <name pos:line="66" pos:column="63">NULL<pos:position pos:line="66" pos:column="67"/></name></expr>)<pos:position pos:line="66" pos:column="68"/></condition><then pos:line="66" pos:column="68">
    <block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="5">rv<pos:position pos:line="67" pos:column="7"/></name> <operator pos:line="67" pos:column="8">=<pos:position pos:line="67" pos:column="9"/></operator> <operator pos:line="67" pos:column="10">-<pos:position pos:line="67" pos:column="11"/></operator><literal type="number" pos:line="67" pos:column="11">1<pos:position pos:line="67" pos:column="12"/></literal></expr>;<pos:position pos:line="67" pos:column="13"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="68" pos:column="3">rewind<pos:position pos:line="68" pos:column="9"/></name> <argument_list pos:line="68" pos:column="10">(<argument><expr><operator pos:line="68" pos:column="11">*<pos:position pos:line="68" pos:column="12"/></operator><name pos:line="68" pos:column="12">fpout<pos:position pos:line="68" pos:column="17"/></name></expr></argument>)<pos:position pos:line="68" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="19"/></expr_stmt>
  <if pos:line="69" pos:column="3">if <condition pos:line="69" pos:column="6">(<expr><name pos:line="69" pos:column="7">is_signed<pos:position pos:line="69" pos:column="16"/></name> <operator pos:line="69" pos:column="17">&gt;<pos:position pos:line="69" pos:column="21"/></operator> <literal type="number" pos:line="69" pos:column="19">0<pos:position pos:line="69" pos:column="20"/></literal></expr>)<pos:position pos:line="69" pos:column="21"/></condition><then pos:line="69" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="70" pos:column="5">first_part<pos:position pos:line="70" pos:column="15"/></name><operator pos:line="70" pos:column="15">-&gt;<pos:position pos:line="70" pos:column="20"/></operator><name pos:line="70" pos:column="17">goodsig<pos:position pos:line="70" pos:column="24"/></name></name> <operator pos:line="70" pos:column="25">=<pos:position pos:line="70" pos:column="26"/></operator> <literal type="number" pos:line="70" pos:column="27">1<pos:position pos:line="70" pos:column="28"/></literal></expr>;<pos:position pos:line="70" pos:column="29"/></expr_stmt></block></then></if>

<label><name pos:line="72" pos:column="1">bail<pos:position pos:line="72" pos:column="5"/></name>:<pos:position pos:line="72" pos:column="6"/></label>
  <if pos:line="73" pos:column="3">if <condition pos:line="73" pos:column="6">(<expr><name pos:line="73" pos:column="7">need_decode<pos:position pos:line="73" pos:column="18"/></name></expr>)<pos:position pos:line="73" pos:column="19"/></condition><then pos:line="73" pos:column="19">
  <block pos:line="74" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="75" pos:column="5">b<pos:position pos:line="75" pos:column="6"/></name><operator pos:line="75" pos:column="6">-&gt;<pos:position pos:line="75" pos:column="11"/></operator><name pos:line="75" pos:column="8">type<pos:position pos:line="75" pos:column="12"/></name></name> <operator pos:line="75" pos:column="13">=<pos:position pos:line="75" pos:column="14"/></operator> <name pos:line="75" pos:column="15">saved_type<pos:position pos:line="75" pos:column="25"/></name></expr>;<pos:position pos:line="75" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="76" pos:column="5">b<pos:position pos:line="76" pos:column="6"/></name><operator pos:line="76" pos:column="6">-&gt;<pos:position pos:line="76" pos:column="11"/></operator><name pos:line="76" pos:column="8">length<pos:position pos:line="76" pos:column="14"/></name></name> <operator pos:line="76" pos:column="15">=<pos:position pos:line="76" pos:column="16"/></operator> <name pos:line="76" pos:column="17">saved_length<pos:position pos:line="76" pos:column="29"/></name></expr>;<pos:position pos:line="76" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="77" pos:column="5">b<pos:position pos:line="77" pos:column="6"/></name><operator pos:line="77" pos:column="6">-&gt;<pos:position pos:line="77" pos:column="11"/></operator><name pos:line="77" pos:column="8">offset<pos:position pos:line="77" pos:column="14"/></name></name> <operator pos:line="77" pos:column="15">=<pos:position pos:line="77" pos:column="16"/></operator> <name pos:line="77" pos:column="17">saved_offset<pos:position pos:line="77" pos:column="29"/></name></expr>;<pos:position pos:line="77" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="78" pos:column="5">safe_fclose<pos:position pos:line="78" pos:column="16"/></name> <argument_list pos:line="78" pos:column="17">(<argument><expr><operator pos:line="78" pos:column="18">&amp;<pos:position pos:line="78" pos:column="23"/></operator><name pos:line="78" pos:column="19">decoded_fp<pos:position pos:line="78" pos:column="29"/></name></expr></argument>)<pos:position pos:line="78" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="79" pos:column="4"/></block></then></if>

  <return pos:line="81" pos:column="3">return <expr><name pos:line="81" pos:column="10">rv<pos:position pos:line="81" pos:column="12"/></name></expr>;<pos:position pos:line="81" pos:column="13"/></return>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

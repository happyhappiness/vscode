<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1223_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">convert_string<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">ICONV_CONST<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">f<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">size_t<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">flen<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">from<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="49">const<pos:position pos:line="2" pos:column="54"/></specifier> <name pos:line="2" pos:column="55">char<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">to<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="3" pos:column="31">char<pos:position pos:line="3" pos:column="35"/></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier><modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier></type><name pos:line="3" pos:column="38">t<pos:position pos:line="3" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="41">size_t<pos:position pos:line="3" pos:column="47"/></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">tlen<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="54"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">iconv_t<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">cd<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">buf<pos:position pos:line="6" pos:column="12"/></name></decl>, <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="15">ob<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">obl<pos:position pos:line="7" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="15">n<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">e<pos:position pos:line="8" pos:column="8"/></name></decl>;<pos:position pos:line="8" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">cd<pos:position pos:line="10" pos:column="5"/></name> <operator pos:line="10" pos:column="6">=<pos:position pos:line="10" pos:column="7"/></operator> <call><name pos:line="10" pos:column="8">mutt_iconv_open<pos:position pos:line="10" pos:column="23"/></name> <argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">to<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="29">from<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="35">0<pos:position pos:line="10" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">cd<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">==<pos:position pos:line="11" pos:column="12"/></operator> <call pos:line="11" pos:column="13">(<name pos:line="11" pos:column="14">iconv_t<pos:position pos:line="11" pos:column="21"/></name>)<argument_list pos:line="11" pos:column="22">(<argument><expr><operator pos:line="11" pos:column="23">-<pos:position pos:line="11" pos:column="24"/></operator><literal type="number" pos:line="11" pos:column="24">1<pos:position pos:line="11" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="27"/></condition><then pos:line="11" pos:column="27">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><call pos:line="12" pos:column="12">(<name pos:line="12" pos:column="13">size_t<pos:position pos:line="12" pos:column="19"/></name>)<argument_list pos:line="12" pos:column="20">(<argument><expr><operator pos:line="12" pos:column="21">-<pos:position pos:line="12" pos:column="22"/></operator><literal type="number" pos:line="12" pos:column="22">1<pos:position pos:line="12" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="25"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="13" pos:column="3">obl<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <literal type="number" pos:line="13" pos:column="9">4<pos:position pos:line="13" pos:column="10"/></literal> <operator pos:line="13" pos:column="11">*<pos:position pos:line="13" pos:column="12"/></operator> <name pos:line="13" pos:column="13">flen<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">+<pos:position pos:line="13" pos:column="19"/></operator> <literal type="number" pos:line="13" pos:column="20">1<pos:position pos:line="13" pos:column="21"/></literal></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name pos:line="14" pos:column="3">ob<pos:position pos:line="14" pos:column="5"/></name> <operator pos:line="14" pos:column="6">=<pos:position pos:line="14" pos:column="7"/></operator> <name pos:line="14" pos:column="8">buf<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">safe_malloc<pos:position pos:line="14" pos:column="25"/></name> <argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">obl<pos:position pos:line="14" pos:column="30"/></name></expr></argument>)<pos:position pos:line="14" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name pos:line="15" pos:column="3">n<pos:position pos:line="15" pos:column="4"/></name> <operator pos:line="15" pos:column="5">=<pos:position pos:line="15" pos:column="6"/></operator> <call><name pos:line="15" pos:column="7">iconv<pos:position pos:line="15" pos:column="12"/></name> <argument_list pos:line="15" pos:column="13">(<argument><expr><name pos:line="15" pos:column="14">cd<pos:position pos:line="15" pos:column="16"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="18">&amp;<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="19">f<pos:position pos:line="15" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="22">&amp;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="23">flen<pos:position pos:line="15" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="29">&amp;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="30">ob<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="34">&amp;<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="35">obl<pos:position pos:line="15" pos:column="38"/></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="40"/></expr_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">n<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">==<pos:position pos:line="16" pos:column="11"/></operator> <call pos:line="16" pos:column="12">(<name pos:line="16" pos:column="13">size_t<pos:position pos:line="16" pos:column="19"/></name>)<argument_list pos:line="16" pos:column="20">(<argument><expr><operator pos:line="16" pos:column="21">-<pos:position pos:line="16" pos:column="22"/></operator><literal type="number" pos:line="16" pos:column="22">1<pos:position pos:line="16" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="24"/></argument_list></call> <operator pos:line="16" pos:column="25">||<pos:position pos:line="16" pos:column="27"/></operator> <call><name pos:line="16" pos:column="28">iconv<pos:position pos:line="16" pos:column="33"/></name> <argument_list pos:line="16" pos:column="34">(<argument><expr><name pos:line="16" pos:column="35">cd<pos:position pos:line="16" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="39">0<pos:position pos:line="16" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="42">0<pos:position pos:line="16" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="45">&amp;<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="46">ob<pos:position pos:line="16" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="50">&amp;<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="51">obl<pos:position pos:line="16" pos:column="54"/></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call> <operator pos:line="16" pos:column="56">==<pos:position pos:line="16" pos:column="58"/></operator> <call pos:line="16" pos:column="59">(<name pos:line="16" pos:column="60">size_t<pos:position pos:line="16" pos:column="66"/></name>)<argument_list pos:line="16" pos:column="67">(<argument><expr><operator pos:line="16" pos:column="68">-<pos:position pos:line="16" pos:column="69"/></operator><literal type="number" pos:line="16" pos:column="69">1<pos:position pos:line="16" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="72"/></condition><then pos:line="16" pos:column="72">
  <block pos:line="17" pos:column="3">{
    <expr_stmt><expr><name pos:line="18" pos:column="5">e<pos:position pos:line="18" pos:column="6"/></name> <operator pos:line="18" pos:column="7">=<pos:position pos:line="18" pos:column="8"/></operator> <name pos:line="18" pos:column="9">errno<pos:position pos:line="18" pos:column="14"/></name></expr>;<pos:position pos:line="18" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">FREE<pos:position pos:line="19" pos:column="9"/></name> <argument_list pos:line="19" pos:column="10">(<argument><expr><operator pos:line="19" pos:column="11">&amp;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="12">buf<pos:position pos:line="19" pos:column="15"/></name></expr></argument>)<pos:position pos:line="19" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">iconv_close<pos:position pos:line="20" pos:column="16"/></name> <argument_list pos:line="20" pos:column="17">(<argument><expr><name pos:line="20" pos:column="18">cd<pos:position pos:line="20" pos:column="20"/></name></expr></argument>)<pos:position pos:line="20" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">errno<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <name pos:line="21" pos:column="13">e<pos:position pos:line="21" pos:column="14"/></name></expr>;<pos:position pos:line="21" pos:column="15"/></expr_stmt>
    <return pos:line="22" pos:column="5">return <expr><call pos:line="22" pos:column="12">(<name pos:line="22" pos:column="13">size_t<pos:position pos:line="22" pos:column="19"/></name>)<argument_list pos:line="22" pos:column="20">(<argument><expr><operator pos:line="22" pos:column="21">-<pos:position pos:line="22" pos:column="22"/></operator><literal type="number" pos:line="22" pos:column="22">1<pos:position pos:line="22" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="25"/></return>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>
  <expr_stmt><expr><operator pos:line="24" pos:column="3">*<pos:position pos:line="24" pos:column="4"/></operator><name pos:line="24" pos:column="4">ob<pos:position pos:line="24" pos:column="6"/></name> <operator pos:line="24" pos:column="7">=<pos:position pos:line="24" pos:column="8"/></operator> <literal type="char" pos:line="24" pos:column="9">'\0'<pos:position pos:line="24" pos:column="13"/></literal></expr>;<pos:position pos:line="24" pos:column="14"/></expr_stmt>
  
  <expr_stmt><expr><operator pos:line="26" pos:column="3">*<pos:position pos:line="26" pos:column="4"/></operator><name pos:line="26" pos:column="4">tlen<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator> <name pos:line="26" pos:column="11">ob<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">-<pos:position pos:line="26" pos:column="15"/></operator> <name pos:line="26" pos:column="16">buf<pos:position pos:line="26" pos:column="19"/></name></expr>;<pos:position pos:line="26" pos:column="20"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="28" pos:column="3">safe_realloc<pos:position pos:line="28" pos:column="15"/></name> <argument_list pos:line="28" pos:column="16">(<argument><expr><operator pos:line="28" pos:column="17">&amp;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="18">buf<pos:position pos:line="28" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="23">ob<pos:position pos:line="28" pos:column="25"/></name> <operator pos:line="28" pos:column="26">-<pos:position pos:line="28" pos:column="27"/></operator> <name pos:line="28" pos:column="28">buf<pos:position pos:line="28" pos:column="31"/></name> <operator pos:line="28" pos:column="32">+<pos:position pos:line="28" pos:column="33"/></operator> <literal type="number" pos:line="28" pos:column="34">1<pos:position pos:line="28" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="29" pos:column="3">*<pos:position pos:line="29" pos:column="4"/></operator><name pos:line="29" pos:column="4">t<pos:position pos:line="29" pos:column="5"/></name> <operator pos:line="29" pos:column="6">=<pos:position pos:line="29" pos:column="7"/></operator> <name pos:line="29" pos:column="8">buf<pos:position pos:line="29" pos:column="11"/></name></expr>;<pos:position pos:line="29" pos:column="12"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">iconv_close<pos:position pos:line="30" pos:column="14"/></name> <argument_list pos:line="30" pos:column="15">(<argument><expr><name pos:line="30" pos:column="16">cd<pos:position pos:line="30" pos:column="18"/></name></expr></argument>)<pos:position pos:line="30" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="20"/></expr_stmt>

  <return pos:line="32" pos:column="3">return <expr><name pos:line="32" pos:column="10">n<pos:position pos:line="32" pos:column="11"/></name></expr>;<pos:position pos:line="32" pos:column="12"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

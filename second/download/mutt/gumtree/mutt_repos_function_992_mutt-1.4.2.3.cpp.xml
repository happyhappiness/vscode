<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_992_mutt-1.4.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">SECStatus<pos:position pos:line="1" pos:column="17"/></name></type>
<name pos:line="2" pos:column="1">mutt_nss_bad_cert<pos:position pos:line="2" pos:column="18"/></name> <parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">void<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">arg<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="31">PRFileDesc<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type> <name pos:line="2" pos:column="44">fd<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">PRErrorCode<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">err<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CERTCertificate<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">cert<pos:position pos:line="5" pos:column="24"/></name></decl>, <modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="27">issuer<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">char<pos:position pos:line="6" pos:column="16"/></name></type> <name><name pos:line="6" pos:column="17">hash<pos:position pos:line="6" pos:column="21"/></name><index pos:line="6" pos:column="21">[<expr><literal type="number" pos:line="6" pos:column="22">16<pos:position pos:line="6" pos:column="24"/></literal></expr>]<pos:position pos:line="6" pos:column="25"/></index></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">i<pos:position pos:line="7" pos:column="8"/></name></decl>;<pos:position pos:line="7" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">CERTCertTrust<pos:position pos:line="8" pos:column="16"/></name></type> <name pos:line="8" pos:column="17">trust<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int64<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">not_before<pos:position pos:line="9" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="21">not_after<pos:position pos:line="9" pos:column="30"/></name></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">event_t<pos:position pos:line="10" pos:column="10"/></name></type> <name pos:line="10" pos:column="11">ch<pos:position pos:line="10" pos:column="13"/></name></decl>;<pos:position pos:line="10" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name></type> <name><name pos:line="11" pos:column="8">status<pos:position pos:line="11" pos:column="14"/></name><index pos:line="11" pos:column="14">[<expr><literal type="number" pos:line="11" pos:column="15">256<pos:position pos:line="11" pos:column="18"/></literal></expr>]<pos:position pos:line="11" pos:column="19"/></index></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>

  <comment type="block" pos:line="13" pos:column="3">/* first lets see why this certificate failed.  we only want to override
   * in the case where the cert was not found.
   */</comment>
  <expr_stmt><expr><name pos:line="16" pos:column="3">err<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <call><name pos:line="16" pos:column="9">PR_GetError<pos:position pos:line="16" pos:column="20"/></name> <argument_list pos:line="16" pos:column="21">()<pos:position pos:line="16" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">mutt_error<pos:position pos:line="17" pos:column="13"/></name> <argument_list pos:line="17" pos:column="14">(<argument><expr><call><name pos:line="17" pos:column="15">_<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><literal type="string" pos:line="17" pos:column="17">"SSL_AuthCertificate failed (error %d)"<pos:position pos:line="17" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="59">err<pos:position pos:line="17" pos:column="62"/></name></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="64"/></expr_stmt>

  <comment type="block" pos:line="19" pos:column="3">/* fetch the cert in question */</comment>
  <expr_stmt><expr><name pos:line="20" pos:column="3">cert<pos:position pos:line="20" pos:column="7"/></name> <operator pos:line="20" pos:column="8">=<pos:position pos:line="20" pos:column="9"/></operator> <call><name pos:line="20" pos:column="10">SSL_PeerCertificate<pos:position pos:line="20" pos:column="29"/></name> <argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">fd<pos:position pos:line="20" pos:column="33"/></name></expr></argument>)<pos:position pos:line="20" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="35"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">move<pos:position pos:line="22" pos:column="7"/></name> <argument_list pos:line="22" pos:column="8">(<argument><expr><name pos:line="22" pos:column="9">LINES<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">-<pos:position pos:line="22" pos:column="16"/></operator> <literal type="number" pos:line="22" pos:column="17">8<pos:position pos:line="22" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="20">0<pos:position pos:line="22" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">clrtoeol<pos:position pos:line="23" pos:column="11"/></name> <argument_list pos:line="23" pos:column="12">()<pos:position pos:line="23" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">move<pos:position pos:line="24" pos:column="7"/></name> <argument_list pos:line="24" pos:column="8">(<argument><expr><name pos:line="24" pos:column="9">LINES<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">-<pos:position pos:line="24" pos:column="16"/></operator> <literal type="number" pos:line="24" pos:column="17">7<pos:position pos:line="24" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="20">0<pos:position pos:line="24" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">clrtoeol<pos:position pos:line="25" pos:column="11"/></name> <argument_list pos:line="25" pos:column="12">()<pos:position pos:line="25" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">addstr<pos:position pos:line="26" pos:column="9"/></name> <argument_list pos:line="26" pos:column="10">(<argument><expr><literal type="string" pos:line="26" pos:column="11">"Issuer:      "<pos:position pos:line="26" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">addstr<pos:position pos:line="27" pos:column="9"/></name> <argument_list pos:line="27" pos:column="10">(<argument><expr><call><name pos:line="27" pos:column="11">CERT_NameToAscii<pos:position pos:line="27" pos:column="27"/></name> <argument_list pos:line="27" pos:column="28">(<argument><expr><operator pos:line="27" pos:column="29">&amp;<pos:position pos:line="27" pos:column="34"/></operator><name><name pos:line="27" pos:column="30">cert<pos:position pos:line="27" pos:column="34"/></name><operator pos:line="27" pos:column="34">-&gt;<pos:position pos:line="27" pos:column="39"/></operator><name pos:line="27" pos:column="36">issuer<pos:position pos:line="27" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">move<pos:position pos:line="28" pos:column="7"/></name> <argument_list pos:line="28" pos:column="8">(<argument><expr><name pos:line="28" pos:column="9">LINES<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">-<pos:position pos:line="28" pos:column="16"/></operator> <literal type="number" pos:line="28" pos:column="17">6<pos:position pos:line="28" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="20">0<pos:position pos:line="28" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">clrtoeol<pos:position pos:line="29" pos:column="11"/></name> <argument_list pos:line="29" pos:column="12">()<pos:position pos:line="29" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">addstr<pos:position pos:line="30" pos:column="9"/></name> <argument_list pos:line="30" pos:column="10">(<argument><expr><literal type="string" pos:line="30" pos:column="11">"Subject:     "<pos:position pos:line="30" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">addstr<pos:position pos:line="31" pos:column="9"/></name> <argument_list pos:line="31" pos:column="10">(<argument><expr><call><name pos:line="31" pos:column="11">CERT_NameToAscii<pos:position pos:line="31" pos:column="27"/></name> <argument_list pos:line="31" pos:column="28">(<argument><expr><operator pos:line="31" pos:column="29">&amp;<pos:position pos:line="31" pos:column="34"/></operator><name><name pos:line="31" pos:column="30">cert<pos:position pos:line="31" pos:column="34"/></name><operator pos:line="31" pos:column="34">-&gt;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="36">subject<pos:position pos:line="31" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="46"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="33" pos:column="3">move<pos:position pos:line="33" pos:column="7"/></name> <argument_list pos:line="33" pos:column="8">(<argument><expr><name pos:line="33" pos:column="9">LINES<pos:position pos:line="33" pos:column="14"/></name> <operator pos:line="33" pos:column="15">-<pos:position pos:line="33" pos:column="16"/></operator> <literal type="number" pos:line="33" pos:column="17">5<pos:position pos:line="33" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="20">0<pos:position pos:line="33" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">clrtoeol<pos:position pos:line="34" pos:column="11"/></name> <argument_list pos:line="34" pos:column="12">()<pos:position pos:line="34" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">addstr<pos:position pos:line="35" pos:column="9"/></name> <argument_list pos:line="35" pos:column="10">(<argument><expr><literal type="string" pos:line="35" pos:column="11">"Valid:       "<pos:position pos:line="35" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">CERT_GetCertTimes<pos:position pos:line="36" pos:column="20"/></name> <argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">cert<pos:position pos:line="36" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="28">&amp;<pos:position pos:line="36" pos:column="33"/></operator><name pos:line="36" pos:column="29">not_before<pos:position pos:line="36" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="41">&amp;<pos:position pos:line="36" pos:column="46"/></operator><name pos:line="36" pos:column="42">not_after<pos:position pos:line="36" pos:column="51"/></name></expr></argument>)<pos:position pos:line="36" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">mutt_nss_pretty_time<pos:position pos:line="37" pos:column="23"/></name> <argument_list pos:line="37" pos:column="24">(<argument><expr><name pos:line="37" pos:column="25">not_before<pos:position pos:line="37" pos:column="35"/></name></expr></argument>)<pos:position pos:line="37" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="38" pos:column="3">addstr<pos:position pos:line="38" pos:column="9"/></name> <argument_list pos:line="38" pos:column="10">(<argument><expr><literal type="string" pos:line="38" pos:column="11">" to "<pos:position pos:line="38" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">mutt_nss_pretty_time<pos:position pos:line="39" pos:column="23"/></name> <argument_list pos:line="39" pos:column="24">(<argument><expr><name pos:line="39" pos:column="25">not_after<pos:position pos:line="39" pos:column="34"/></name></expr></argument>)<pos:position pos:line="39" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="41" pos:column="3">move<pos:position pos:line="41" pos:column="7"/></name> <argument_list pos:line="41" pos:column="8">(<argument><expr><name pos:line="41" pos:column="9">LINES<pos:position pos:line="41" pos:column="14"/></name> <operator pos:line="41" pos:column="15">-<pos:position pos:line="41" pos:column="16"/></operator> <literal type="number" pos:line="41" pos:column="17">4<pos:position pos:line="41" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="20">0<pos:position pos:line="41" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">clrtoeol<pos:position pos:line="42" pos:column="11"/></name> <argument_list pos:line="42" pos:column="12">()<pos:position pos:line="42" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="43" pos:column="3">addstr<pos:position pos:line="43" pos:column="9"/></name> <argument_list pos:line="43" pos:column="10">(<argument><expr><literal type="string" pos:line="43" pos:column="11">"Fingerprint: "<pos:position pos:line="43" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="28"/></expr_stmt>

  <comment type="block" pos:line="45" pos:column="3">/* calculate the MD5 hash of the raw certificate */</comment>
  <expr_stmt><expr><call><name pos:line="46" pos:column="3">HASH_HashBuf<pos:position pos:line="46" pos:column="15"/></name> <argument_list pos:line="46" pos:column="16">(<argument><expr><name pos:line="46" pos:column="17">HASH_AlgMD5<pos:position pos:line="46" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="30">hash<pos:position pos:line="46" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="36">cert<pos:position pos:line="46" pos:column="40"/></name><operator pos:line="46" pos:column="40">-&gt;<pos:position pos:line="46" pos:column="45"/></operator><name pos:line="46" pos:column="42">derCert<pos:position pos:line="46" pos:column="49"/></name><operator pos:line="46" pos:column="49">.<pos:position pos:line="46" pos:column="50"/></operator><name pos:line="46" pos:column="50">data<pos:position pos:line="46" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="56">cert<pos:position pos:line="46" pos:column="60"/></name><operator pos:line="46" pos:column="60">-&gt;<pos:position pos:line="46" pos:column="65"/></operator><name pos:line="46" pos:column="62">derCert<pos:position pos:line="46" pos:column="69"/></name><operator pos:line="46" pos:column="69">.<pos:position pos:line="46" pos:column="70"/></operator><name pos:line="46" pos:column="70">len<pos:position pos:line="46" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="75"/></expr_stmt>
  <for pos:line="47" pos:column="3">for <control pos:line="47" pos:column="7">(<init><expr><name pos:line="47" pos:column="8">i<pos:position pos:line="47" pos:column="9"/></name> <operator pos:line="47" pos:column="10">=<pos:position pos:line="47" pos:column="11"/></operator> <literal type="number" pos:line="47" pos:column="12">0<pos:position pos:line="47" pos:column="13"/></literal></expr>;<pos:position pos:line="47" pos:column="14"/></init> <condition><expr><name pos:line="47" pos:column="15">i<pos:position pos:line="47" pos:column="16"/></name> <operator pos:line="47" pos:column="17">&lt;<pos:position pos:line="47" pos:column="21"/></operator> <literal type="number" pos:line="47" pos:column="19">16<pos:position pos:line="47" pos:column="21"/></literal></expr>;<pos:position pos:line="47" pos:column="22"/></condition> <incr><expr><name pos:line="47" pos:column="23">i<pos:position pos:line="47" pos:column="24"/></name><operator pos:line="47" pos:column="24">++<pos:position pos:line="47" pos:column="26"/></operator></expr></incr>)<pos:position pos:line="47" pos:column="27"/></control>
  <block pos:line="48" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">printw<pos:position pos:line="49" pos:column="11"/></name> <argument_list pos:line="49" pos:column="12">(<argument><expr><literal type="string" pos:line="49" pos:column="13">"%0x"<pos:position pos:line="49" pos:column="18"/></literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="20">hash<pos:position pos:line="49" pos:column="24"/></name><index pos:line="49" pos:column="24">[<expr><name pos:line="49" pos:column="25">i<pos:position pos:line="49" pos:column="26"/></name></expr>]<pos:position pos:line="49" pos:column="27"/></index></name></expr></argument>)<pos:position pos:line="49" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="29"/></expr_stmt>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name pos:line="50" pos:column="9">i<pos:position pos:line="50" pos:column="10"/></name> <operator pos:line="50" pos:column="11">!=<pos:position pos:line="50" pos:column="13"/></operator> <literal type="number" pos:line="50" pos:column="14">15<pos:position pos:line="50" pos:column="16"/></literal></expr>)<pos:position pos:line="50" pos:column="17"/></condition><then pos:line="50" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="7">addch<pos:position pos:line="51" pos:column="12"/></name> <argument_list pos:line="51" pos:column="13">(<argument><expr><literal type="char" pos:line="51" pos:column="14">':'<pos:position pos:line="51" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="19"/></expr_stmt></block></then></if>
  }<pos:position pos:line="52" pos:column="4"/></block></for>
  
  <expr_stmt><expr><call><name pos:line="54" pos:column="3">mvaddstr<pos:position pos:line="54" pos:column="11"/></name> <argument_list pos:line="54" pos:column="12">(<argument><expr><name pos:line="54" pos:column="13">LINES<pos:position pos:line="54" pos:column="18"/></name> <operator pos:line="54" pos:column="19">-<pos:position pos:line="54" pos:column="20"/></operator> <literal type="number" pos:line="54" pos:column="21">3<pos:position pos:line="54" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="24">0<pos:position pos:line="54" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="27">"Signature:   "<pos:position pos:line="54" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="55" pos:column="3">clrtoeol<pos:position pos:line="55" pos:column="11"/></name> <argument_list pos:line="55" pos:column="12">()<pos:position pos:line="55" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="15"/></expr_stmt>

  <comment type="block" pos:line="57" pos:column="3">/* find the cert which signed this cert */</comment>
  <expr_stmt><expr><name pos:line="58" pos:column="3">issuer<pos:position pos:line="58" pos:column="9"/></name> <operator pos:line="58" pos:column="10">=<pos:position pos:line="58" pos:column="11"/></operator> <call><name pos:line="58" pos:column="12">CERT_FindCertByName<pos:position pos:line="58" pos:column="31"/></name> <argument_list pos:line="58" pos:column="32">(<argument><expr><operator pos:line="58" pos:column="33">(<pos:position pos:line="58" pos:column="34"/></operator><name pos:line="58" pos:column="34">CERTCertDBHandle<pos:position pos:line="58" pos:column="50"/></name> <operator pos:line="58" pos:column="51">*<pos:position pos:line="58" pos:column="52"/></operator><operator pos:line="58" pos:column="52">)<pos:position pos:line="58" pos:column="53"/></operator> <name pos:line="58" pos:column="54">arg<pos:position pos:line="58" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="59">&amp;<pos:position pos:line="58" pos:column="64"/></operator><name><name pos:line="58" pos:column="60">cert<pos:position pos:line="58" pos:column="64"/></name><operator pos:line="58" pos:column="64">-&gt;<pos:position pos:line="58" pos:column="69"/></operator><name pos:line="58" pos:column="66">derIssuer<pos:position pos:line="58" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="77"/></expr_stmt>

  <comment type="block" pos:line="60" pos:column="3">/* verify the sig (only) if we have the issuer cert handy */</comment>
  <if pos:line="61" pos:column="3">if <condition pos:line="61" pos:column="6">(<expr><name pos:line="61" pos:column="7">issuer<pos:position pos:line="61" pos:column="13"/></name> <operator pos:line="61" pos:column="14">&amp;&amp;<pos:position pos:line="61" pos:column="24"/></operator>
      <call><name pos:line="62" pos:column="7">CERT_VerifySignedData<pos:position pos:line="62" pos:column="28"/></name> <argument_list pos:line="62" pos:column="29">(<argument><expr><operator pos:line="62" pos:column="30">&amp;<pos:position pos:line="62" pos:column="35"/></operator><name><name pos:line="62" pos:column="31">cert<pos:position pos:line="62" pos:column="35"/></name><operator pos:line="62" pos:column="35">-&gt;<pos:position pos:line="62" pos:column="40"/></operator><name pos:line="62" pos:column="37">signatureWrap<pos:position pos:line="62" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="52">issuer<pos:position pos:line="62" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="62" pos:column="60">PR_Now<pos:position pos:line="62" pos:column="66"/></name> <argument_list pos:line="62" pos:column="67">()<pos:position pos:line="62" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="62" pos:column="71">NULL<pos:position pos:line="62" pos:column="75"/></name></expr></argument>)<pos:position pos:line="62" pos:column="76"/></argument_list></call>
      <operator pos:line="63" pos:column="7">==<pos:position pos:line="63" pos:column="9"/></operator> <name pos:line="63" pos:column="10">SECSuccess<pos:position pos:line="63" pos:column="20"/></name></expr>)<pos:position pos:line="63" pos:column="21"/></condition><then pos:line="63" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="5">addstr<pos:position pos:line="64" pos:column="11"/></name> <argument_list pos:line="64" pos:column="12">(<argument><expr><literal type="string" pos:line="64" pos:column="13">"GOOD"<pos:position pos:line="64" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="21"/></expr_stmt></block></then>
  <else pos:line="65" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="5">addstr<pos:position pos:line="66" pos:column="11"/></name> <argument_list pos:line="66" pos:column="12">(<argument><expr><literal type="string" pos:line="66" pos:column="13">"BAD"<pos:position pos:line="66" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="20"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="68" pos:column="3">move<pos:position pos:line="68" pos:column="7"/></name> <argument_list pos:line="68" pos:column="8">(<argument><expr><name pos:line="68" pos:column="9">LINES<pos:position pos:line="68" pos:column="14"/></name> <operator pos:line="68" pos:column="15">-<pos:position pos:line="68" pos:column="16"/></operator> <literal type="number" pos:line="68" pos:column="17">2<pos:position pos:line="68" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="20">0<pos:position pos:line="68" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="69" pos:column="3">SETCOLOR<pos:position pos:line="69" pos:column="11"/></name> <argument_list pos:line="69" pos:column="12">(<argument><expr><name pos:line="69" pos:column="13">MT_COLOR_STATUS<pos:position pos:line="69" pos:column="28"/></name></expr></argument>)<pos:position pos:line="69" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="70" pos:column="3">memset<pos:position pos:line="70" pos:column="9"/></name> <argument_list pos:line="70" pos:column="10">(<argument><expr><name pos:line="70" pos:column="11">status<pos:position pos:line="70" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="70" pos:column="19">' '<pos:position pos:line="70" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="70" pos:column="24">sizeof <argument_list pos:line="70" pos:column="31">(<argument><expr><name pos:line="70" pos:column="32">status<pos:position pos:line="70" pos:column="38"/></name></expr></argument>)<pos:position pos:line="70" pos:column="39"/></argument_list></sizeof> <operator pos:line="70" pos:column="40">-<pos:position pos:line="70" pos:column="41"/></operator> <literal type="number" pos:line="70" pos:column="42">1<pos:position pos:line="70" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="45"/></expr_stmt>
  <if pos:line="71" pos:column="3">if <condition pos:line="71" pos:column="6">(<expr><name pos:line="71" pos:column="7">COLS<pos:position pos:line="71" pos:column="11"/></name> <operator pos:line="71" pos:column="12">&lt;<pos:position pos:line="71" pos:column="16"/></operator> <sizeof pos:line="71" pos:column="14">sizeof <argument_list pos:line="71" pos:column="21">(<argument><expr><name pos:line="71" pos:column="22">status<pos:position pos:line="71" pos:column="28"/></name></expr></argument>)<pos:position pos:line="71" pos:column="29"/></argument_list></sizeof></expr>)<pos:position pos:line="71" pos:column="30"/></condition><then pos:line="71" pos:column="30">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="72" pos:column="5">status<pos:position pos:line="72" pos:column="11"/></name><index pos:line="72" pos:column="11">[<expr><name pos:line="72" pos:column="12">COLS<pos:position pos:line="72" pos:column="16"/></name> <operator pos:line="72" pos:column="17">-<pos:position pos:line="72" pos:column="18"/></operator> <literal type="number" pos:line="72" pos:column="19">1<pos:position pos:line="72" pos:column="20"/></literal></expr>]<pos:position pos:line="72" pos:column="21"/></index></name> <operator pos:line="72" pos:column="22">=<pos:position pos:line="72" pos:column="23"/></operator> <literal type="number" pos:line="72" pos:column="24">0<pos:position pos:line="72" pos:column="25"/></literal></expr>;<pos:position pos:line="72" pos:column="26"/></expr_stmt></block></then>
  <else pos:line="73" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="74" pos:column="5">status<pos:position pos:line="74" pos:column="11"/></name><index pos:line="74" pos:column="11">[<expr><sizeof pos:line="74" pos:column="12">sizeof <argument_list pos:line="74" pos:column="19">(<argument><expr><name pos:line="74" pos:column="20">status<pos:position pos:line="74" pos:column="26"/></name></expr></argument>)<pos:position pos:line="74" pos:column="27"/></argument_list></sizeof> <operator pos:line="74" pos:column="28">-<pos:position pos:line="74" pos:column="29"/></operator> <literal type="number" pos:line="74" pos:column="30">1<pos:position pos:line="74" pos:column="31"/></literal></expr>]<pos:position pos:line="74" pos:column="32"/></index></name> <operator pos:line="74" pos:column="33">=<pos:position pos:line="74" pos:column="34"/></operator> <literal type="number" pos:line="74" pos:column="35">0<pos:position pos:line="74" pos:column="36"/></literal></expr>;<pos:position pos:line="74" pos:column="37"/></expr_stmt></block></else></if>
  <expr_stmt><expr><call><name pos:line="75" pos:column="3">memcpy<pos:position pos:line="75" pos:column="9"/></name> <argument_list pos:line="75" pos:column="10">(<argument><expr><name pos:line="75" pos:column="11">status<pos:position pos:line="75" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="19">"--- SSL Certificate Check"<pos:position pos:line="75" pos:column="46"/></literal></expr></argument>,
	  <argument><expr><sizeof pos:line="76" pos:column="11">sizeof <argument_list pos:line="76" pos:column="18">(<argument><expr><literal type="string" pos:line="76" pos:column="19">"--- SSL Certificate Check"<pos:position pos:line="76" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="47"/></argument_list></sizeof> <operator pos:line="76" pos:column="48">-<pos:position pos:line="76" pos:column="49"/></operator> <literal type="number" pos:line="76" pos:column="50">1<pos:position pos:line="76" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="77" pos:column="3">addstr<pos:position pos:line="77" pos:column="9"/></name> <argument_list pos:line="77" pos:column="10">(<argument><expr><name pos:line="77" pos:column="11">status<pos:position pos:line="77" pos:column="17"/></name></expr></argument>)<pos:position pos:line="77" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="78" pos:column="3">clrtoeol<pos:position pos:line="78" pos:column="11"/></name> <argument_list pos:line="78" pos:column="12">()<pos:position pos:line="78" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="79" pos:column="3">SETCOLOR<pos:position pos:line="79" pos:column="11"/></name> <argument_list pos:line="79" pos:column="12">(<argument><expr><name pos:line="79" pos:column="13">MT_COLOR_NORMAL<pos:position pos:line="79" pos:column="28"/></name></expr></argument>)<pos:position pos:line="79" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="30"/></expr_stmt>

  <for pos:line="81" pos:column="3">for <control pos:line="81" pos:column="7">(<init pos:line="81" pos:column="8">;<pos:position pos:line="81" pos:column="9"/></init><condition pos:line="81" pos:column="9">;<pos:position pos:line="81" pos:column="10"/></condition><incr/>)<pos:position pos:line="81" pos:column="11"/></control>
  <block pos:line="82" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">mvaddstr<pos:position pos:line="83" pos:column="13"/></name> <argument_list pos:line="83" pos:column="14">(<argument><expr><name pos:line="83" pos:column="15">LINES<pos:position pos:line="83" pos:column="20"/></name> <operator pos:line="83" pos:column="21">-<pos:position pos:line="83" pos:column="22"/></operator> <literal type="number" pos:line="83" pos:column="23">1<pos:position pos:line="83" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="26">0<pos:position pos:line="83" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="29">"(r)eject, accept (o)nce, (a)lways accept?"<pos:position pos:line="83" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">clrtoeol<pos:position pos:line="84" pos:column="13"/></name> <argument_list pos:line="84" pos:column="14">()<pos:position pos:line="84" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name pos:line="85" pos:column="5">ch<pos:position pos:line="85" pos:column="7"/></name> <operator pos:line="85" pos:column="8">=<pos:position pos:line="85" pos:column="9"/></operator> <call><name pos:line="85" pos:column="10">mutt_getch<pos:position pos:line="85" pos:column="20"/></name> <argument_list pos:line="85" pos:column="21">()<pos:position pos:line="85" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="24"/></expr_stmt>
    <if pos:line="86" pos:column="5">if <condition pos:line="86" pos:column="8">(<expr><name><name pos:line="86" pos:column="9">ch<pos:position pos:line="86" pos:column="11"/></name><operator pos:line="86" pos:column="11">.<pos:position pos:line="86" pos:column="12"/></operator><name pos:line="86" pos:column="12">ch<pos:position pos:line="86" pos:column="14"/></name></name> <operator pos:line="86" pos:column="15">==<pos:position pos:line="86" pos:column="17"/></operator> <operator pos:line="86" pos:column="18">-<pos:position pos:line="86" pos:column="19"/></operator><literal type="number" pos:line="86" pos:column="19">1<pos:position pos:line="86" pos:column="20"/></literal></expr>)<pos:position pos:line="86" pos:column="21"/></condition><then pos:line="86" pos:column="21">
    <block pos:line="87" pos:column="5">{
      <expr_stmt><expr><name pos:line="88" pos:column="7">i<pos:position pos:line="88" pos:column="8"/></name> <operator pos:line="88" pos:column="9">=<pos:position pos:line="88" pos:column="10"/></operator> <name pos:line="88" pos:column="11">SECFailure<pos:position pos:line="88" pos:column="21"/></name></expr>;<pos:position pos:line="88" pos:column="22"/></expr_stmt>
      <break pos:line="89" pos:column="7">break;<pos:position pos:line="89" pos:column="13"/></break>
    }<pos:position pos:line="90" pos:column="6"/></block></then>
    <elseif pos:line="91" pos:column="5">else <if pos:line="91" pos:column="10">if <condition pos:line="91" pos:column="13">(<expr><call><name pos:line="91" pos:column="14">ascii_tolower<pos:position pos:line="91" pos:column="27"/></name> <argument_list pos:line="91" pos:column="28">(<argument><expr><name><name pos:line="91" pos:column="29">ch<pos:position pos:line="91" pos:column="31"/></name><operator pos:line="91" pos:column="31">.<pos:position pos:line="91" pos:column="32"/></operator><name pos:line="91" pos:column="32">ch<pos:position pos:line="91" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="35"/></argument_list></call> <operator pos:line="91" pos:column="36">==<pos:position pos:line="91" pos:column="38"/></operator> <literal type="char" pos:line="91" pos:column="39">'r'<pos:position pos:line="91" pos:column="42"/></literal></expr>)<pos:position pos:line="91" pos:column="43"/></condition><then pos:line="91" pos:column="43">
    <block pos:line="92" pos:column="5">{
      <expr_stmt><expr><name pos:line="93" pos:column="7">i<pos:position pos:line="93" pos:column="8"/></name> <operator pos:line="93" pos:column="9">=<pos:position pos:line="93" pos:column="10"/></operator> <name pos:line="93" pos:column="11">SECFailure<pos:position pos:line="93" pos:column="21"/></name></expr>;<pos:position pos:line="93" pos:column="22"/></expr_stmt>
      <break pos:line="94" pos:column="7">break;<pos:position pos:line="94" pos:column="13"/></break>
    }<pos:position pos:line="95" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="96" pos:column="5">else <if pos:line="96" pos:column="10">if <condition pos:line="96" pos:column="13">(<expr><call><name pos:line="96" pos:column="14">ascii_tolower<pos:position pos:line="96" pos:column="27"/></name> <argument_list pos:line="96" pos:column="28">(<argument><expr><name><name pos:line="96" pos:column="29">ch<pos:position pos:line="96" pos:column="31"/></name><operator pos:line="96" pos:column="31">.<pos:position pos:line="96" pos:column="32"/></operator><name pos:line="96" pos:column="32">ch<pos:position pos:line="96" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="35"/></argument_list></call> <operator pos:line="96" pos:column="36">==<pos:position pos:line="96" pos:column="38"/></operator> <literal type="char" pos:line="96" pos:column="39">'o'<pos:position pos:line="96" pos:column="42"/></literal></expr>)<pos:position pos:line="96" pos:column="43"/></condition><then pos:line="96" pos:column="43">
    <block pos:line="97" pos:column="5">{
      <expr_stmt><expr><name pos:line="98" pos:column="7">i<pos:position pos:line="98" pos:column="8"/></name> <operator pos:line="98" pos:column="9">=<pos:position pos:line="98" pos:column="10"/></operator> <name pos:line="98" pos:column="11">SECSuccess<pos:position pos:line="98" pos:column="21"/></name></expr>;<pos:position pos:line="98" pos:column="22"/></expr_stmt>
      <break pos:line="99" pos:column="7">break;<pos:position pos:line="99" pos:column="13"/></break>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="101" pos:column="5">else <if pos:line="101" pos:column="10">if <condition pos:line="101" pos:column="13">(<expr><call><name pos:line="101" pos:column="14">ascii_tolower<pos:position pos:line="101" pos:column="27"/></name> <argument_list pos:line="101" pos:column="28">(<argument><expr><name><name pos:line="101" pos:column="29">ch<pos:position pos:line="101" pos:column="31"/></name><operator pos:line="101" pos:column="31">.<pos:position pos:line="101" pos:column="32"/></operator><name pos:line="101" pos:column="32">ch<pos:position pos:line="101" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="35"/></argument_list></call> <operator pos:line="101" pos:column="36">==<pos:position pos:line="101" pos:column="38"/></operator> <literal type="char" pos:line="101" pos:column="39">'a'<pos:position pos:line="101" pos:column="42"/></literal></expr>)<pos:position pos:line="101" pos:column="43"/></condition><then pos:line="101" pos:column="43">
    <block pos:line="102" pos:column="5">{
      <comment type="block" pos:line="103" pos:column="7">/* push this certificate onto the user's certificate store so it
       * automatically becomes valid next time we see it
       */</comment>
      
      <comment type="block" pos:line="107" pos:column="7">/* set this certificate as a valid peer for SSL-auth ONLY. */</comment>
      <expr_stmt><expr><call><name pos:line="108" pos:column="7">CERT_DecodeTrustString<pos:position pos:line="108" pos:column="29"/></name> <argument_list pos:line="108" pos:column="30">(<argument><expr><operator pos:line="108" pos:column="31">&amp;<pos:position pos:line="108" pos:column="36"/></operator><name pos:line="108" pos:column="32">trust<pos:position pos:line="108" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="39">"P,,"<pos:position pos:line="108" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="46"/></expr_stmt>
      
      <expr_stmt><expr><call><name pos:line="110" pos:column="7">CERT_AddTempCertToPerm<pos:position pos:line="110" pos:column="29"/></name> <argument_list pos:line="110" pos:column="30">(<argument><expr><name pos:line="110" pos:column="31">cert<pos:position pos:line="110" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="37">NULL<pos:position pos:line="110" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="110" pos:column="43">&amp;<pos:position pos:line="110" pos:column="48"/></operator><name pos:line="110" pos:column="44">trust<pos:position pos:line="110" pos:column="49"/></name></expr></argument>)<pos:position pos:line="110" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name pos:line="111" pos:column="7">i<pos:position pos:line="111" pos:column="8"/></name> <operator pos:line="111" pos:column="9">=<pos:position pos:line="111" pos:column="10"/></operator> <name pos:line="111" pos:column="11">SECSuccess<pos:position pos:line="111" pos:column="21"/></name></expr>;<pos:position pos:line="111" pos:column="22"/></expr_stmt>
      <break pos:line="112" pos:column="7">break;<pos:position pos:line="112" pos:column="13"/></break>
    }<pos:position pos:line="113" pos:column="6"/></block></then></if></elseif></if>
    <expr_stmt><expr><call><name pos:line="114" pos:column="5">BEEP<pos:position pos:line="114" pos:column="9"/></name> <argument_list pos:line="114" pos:column="10">()<pos:position pos:line="114" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="115" pos:column="4"/></block></for>
  
  <comment type="block" pos:line="117" pos:column="3">/* SSL_PeerCertificate() returns a copy with an updated ref count, so
   * we have to destroy our copy here.
   */</comment>
  <expr_stmt><expr><call><name pos:line="120" pos:column="3">CERT_DestroyCertificate<pos:position pos:line="120" pos:column="26"/></name> <argument_list pos:line="120" pos:column="27">(<argument><expr><name pos:line="120" pos:column="28">cert<pos:position pos:line="120" pos:column="32"/></name></expr></argument>)<pos:position pos:line="120" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="34"/></expr_stmt>
  
  <return pos:line="122" pos:column="3">return <expr><name pos:line="122" pos:column="10">i<pos:position pos:line="122" pos:column="11"/></name></expr>;<pos:position pos:line="122" pos:column="12"/></return>
}<pos:position pos:line="123" pos:column="2"/></block></function></unit>

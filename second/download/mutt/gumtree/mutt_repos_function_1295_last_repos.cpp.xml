<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1295_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_write_references<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">LIST<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">r<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">FILE<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">f<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">trim<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">LIST<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier><modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">ref<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><name pos:line="3" pos:column="16">NULL<pos:position pos:line="3" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">refcnt<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="19">refmax<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><literal type="number" pos:line="4" pos:column="28">0<pos:position pos:line="4" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>

  <for pos:line="6" pos:column="3">for <control pos:line="6" pos:column="7">( <init pos:line="6" pos:column="9">;<pos:position pos:line="6" pos:column="10"/></init> <condition><expr><operator pos:line="6" pos:column="11">(<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="12">trim<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">==<pos:position pos:line="6" pos:column="19"/></operator> <literal type="number" pos:line="6" pos:column="20">0<pos:position pos:line="6" pos:column="21"/></literal> <operator pos:line="6" pos:column="22">||<pos:position pos:line="6" pos:column="24"/></operator> <name pos:line="6" pos:column="25">refcnt<pos:position pos:line="6" pos:column="31"/></name> <operator pos:line="6" pos:column="32">&lt;<pos:position pos:line="6" pos:column="36"/></operator> <name pos:line="6" pos:column="34">trim<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">)<pos:position pos:line="6" pos:column="39"/></operator> <operator pos:line="6" pos:column="40">&amp;&amp;<pos:position pos:line="6" pos:column="50"/></operator> <name pos:line="6" pos:column="43">r<pos:position pos:line="6" pos:column="44"/></name></expr> ;<pos:position pos:line="6" pos:column="46"/></condition> <incr><expr><name pos:line="6" pos:column="47">r<pos:position pos:line="6" pos:column="48"/></name> <operator pos:line="6" pos:column="49">=<pos:position pos:line="6" pos:column="50"/></operator> <name><name pos:line="6" pos:column="51">r<pos:position pos:line="6" pos:column="52"/></name><operator pos:line="6" pos:column="52">-&gt;<pos:position pos:line="6" pos:column="57"/></operator><name pos:line="6" pos:column="54">next<pos:position pos:line="6" pos:column="58"/></name></name></expr></incr>)<pos:position pos:line="6" pos:column="59"/></control>
  <block pos:line="7" pos:column="3">{
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">refcnt<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">==<pos:position pos:line="8" pos:column="18"/></operator> <name pos:line="8" pos:column="19">refmax<pos:position pos:line="8" pos:column="25"/></name></expr>)<pos:position pos:line="8" pos:column="26"/></condition><then pos:line="8" pos:column="26">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="7">safe_realloc<pos:position pos:line="9" pos:column="19"/></name> <argument_list pos:line="9" pos:column="20">(<argument><expr><operator pos:line="9" pos:column="21">&amp;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="22">ref<pos:position pos:line="9" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="27">(<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="28">refmax<pos:position pos:line="9" pos:column="34"/></name> <operator pos:line="9" pos:column="35">+=<pos:position pos:line="9" pos:column="37"/></operator> <name pos:line="9" pos:column="38">REF_INC<pos:position pos:line="9" pos:column="45"/></name><operator pos:line="9" pos:column="45">)<pos:position pos:line="9" pos:column="46"/></operator> <operator pos:line="9" pos:column="47">*<pos:position pos:line="9" pos:column="48"/></operator> <sizeof pos:line="9" pos:column="49">sizeof <argument_list pos:line="9" pos:column="56">(<argument><expr><name pos:line="9" pos:column="57">LIST<pos:position pos:line="9" pos:column="61"/></name> <operator pos:line="9" pos:column="62">*<pos:position pos:line="9" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="9" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="66"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">ref<pos:position pos:line="10" pos:column="8"/></name><index pos:line="10" pos:column="8">[<expr><name pos:line="10" pos:column="9">refcnt<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">++<pos:position pos:line="10" pos:column="17"/></operator></expr>]<pos:position pos:line="10" pos:column="18"/></index></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="21">r<pos:position pos:line="10" pos:column="22"/></name></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="11" pos:column="4"/></block></for>

  <while pos:line="13" pos:column="3">while <condition pos:line="13" pos:column="9">(<expr><name pos:line="13" pos:column="10">refcnt<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">--<pos:position pos:line="13" pos:column="18"/></operator> <operator pos:line="13" pos:column="19">&gt;<pos:position pos:line="13" pos:column="23"/></operator> <literal type="number" pos:line="13" pos:column="21">0<pos:position pos:line="13" pos:column="22"/></literal></expr>)<pos:position pos:line="13" pos:column="23"/></condition>
  <block pos:line="14" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">fputc<pos:position pos:line="15" pos:column="10"/></name> <argument_list pos:line="15" pos:column="11">(<argument><expr><literal type="char" pos:line="15" pos:column="12">' '<pos:position pos:line="15" pos:column="15"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="17">f<pos:position pos:line="15" pos:column="18"/></name></expr></argument>)<pos:position pos:line="15" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">fputs<pos:position pos:line="16" pos:column="10"/></name> <argument_list pos:line="16" pos:column="11">(<argument><expr><name><name pos:line="16" pos:column="12">ref<pos:position pos:line="16" pos:column="15"/></name><index pos:line="16" pos:column="15">[<expr><name pos:line="16" pos:column="16">refcnt<pos:position pos:line="16" pos:column="22"/></name></expr>]<pos:position pos:line="16" pos:column="23"/></index></name><operator pos:line="16" pos:column="23">-&gt;<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="25">data<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="31">f<pos:position pos:line="16" pos:column="32"/></name></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">refcnt<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">&gt;=<pos:position pos:line="17" pos:column="21"/></operator> <literal type="number" pos:line="17" pos:column="19">1<pos:position pos:line="17" pos:column="20"/></literal></expr>)<pos:position pos:line="17" pos:column="21"/></condition><then pos:line="17" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="7">fputc<pos:position pos:line="18" pos:column="12"/></name> <argument_list pos:line="18" pos:column="13">(<argument><expr><literal type="char" pos:line="18" pos:column="14">'\n'<pos:position pos:line="18" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="20">f<pos:position pos:line="18" pos:column="21"/></name></expr></argument>)<pos:position pos:line="18" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt></block></then></if>
  }<pos:position pos:line="19" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="21" pos:column="3">FREE<pos:position pos:line="21" pos:column="7"/></name> <argument_list pos:line="21" pos:column="8">(<argument><expr><operator pos:line="21" pos:column="9">&amp;<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="10">ref<pos:position pos:line="21" pos:column="13"/></name></expr></argument>)<pos:position pos:line="21" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="15"/></expr_stmt>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

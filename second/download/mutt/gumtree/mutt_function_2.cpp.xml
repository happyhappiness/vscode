<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_function_2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_create_alias<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">ENVELOPE<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">cur<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">ADDRESS<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">iadr<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><name pos:line="3" pos:column="3">ALIAS<pos:position pos:line="3" pos:column="8"/></name> <operator pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></operator><operator pos:line="3" pos:column="10">new<pos:position pos:line="3" pos:column="13"/></operator></expr><operator pos:line="3" pos:column="13">,<pos:position pos:line="3" pos:column="14"/></operator> <expr><operator pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></operator><name pos:line="3" pos:column="16">t<pos:position pos:line="3" pos:column="17"/></name></expr>;<pos:position pos:line="3" pos:column="18"/></expr_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buf<pos:position pos:line="4" pos:column="11"/></name><index pos:line="4" pos:column="11">[<expr><name pos:line="4" pos:column="12">LONG_STRING<pos:position pos:line="4" pos:column="23"/></name></expr>]<pos:position pos:line="4" pos:column="24"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="4" pos:column="26">prompt<pos:position pos:line="4" pos:column="32"/></name><index pos:line="4" pos:column="32">[<expr><name pos:line="4" pos:column="33">SHORT_STRING<pos:position pos:line="4" pos:column="45"/></name></expr>]<pos:position pos:line="4" pos:column="46"/></index></name></decl>, <modifier pos:line="4" pos:column="48">*<pos:position pos:line="4" pos:column="49"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="49">pc<pos:position pos:line="4" pos:column="51"/></name></decl>;<pos:position pos:line="4" pos:column="52"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">rc<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">ADDRESS<pos:position pos:line="6" pos:column="10"/></name> <modifier pos:line="6" pos:column="11">*<pos:position pos:line="6" pos:column="12"/></modifier></type><name pos:line="6" pos:column="12">adr<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><name pos:line="6" pos:column="18">NULL<pos:position pos:line="6" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">cur<pos:position pos:line="8" pos:column="10"/></name></expr>)<pos:position pos:line="8" pos:column="11"/></condition><then pos:line="8" pos:column="11">
  <block pos:line="9" pos:column="3">{
    <expr_stmt><expr><name pos:line="10" pos:column="5">adr<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <call><name pos:line="10" pos:column="11">mutt_get_address<pos:position pos:line="10" pos:column="27"/></name> <argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">cur<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="34">NULL<pos:position pos:line="10" pos:column="38"/></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="11" pos:column="4"/></block></then>
  <elseif pos:line="12" pos:column="3">else <if pos:line="12" pos:column="8">if <condition pos:line="12" pos:column="11">(<expr><name pos:line="12" pos:column="12">iadr<pos:position pos:line="12" pos:column="16"/></name></expr>)<pos:position pos:line="12" pos:column="17"/></condition><then pos:line="12" pos:column="17">
  <block pos:line="13" pos:column="3">{
    <expr_stmt><expr><name pos:line="14" pos:column="5">adr<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">=<pos:position pos:line="14" pos:column="10"/></operator> <name pos:line="14" pos:column="11">iadr<pos:position pos:line="14" pos:column="15"/></name></expr>;<pos:position pos:line="14" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if></elseif></if>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">adr<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">&amp;&amp;<pos:position pos:line="17" pos:column="21"/></operator> <name><name pos:line="17" pos:column="14">adr<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">mailbox<pos:position pos:line="17" pos:column="26"/></name></name></expr>)<pos:position pos:line="17" pos:column="27"/></condition><then pos:line="17" pos:column="27">
  <block pos:line="18" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">strfcpy<pos:position pos:line="19" pos:column="12"/></name> <argument_list pos:line="19" pos:column="13">(<argument><expr><name pos:line="19" pos:column="14">buf<pos:position pos:line="19" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="19">adr<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">-&gt;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="24">mailbox<pos:position pos:line="19" pos:column="31"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="33">sizeof <argument_list pos:line="19" pos:column="40">(<argument><expr><name pos:line="19" pos:column="41">buf<pos:position pos:line="19" pos:column="44"/></name></expr></argument>)<pos:position pos:line="19" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">(<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">pc<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <call><name pos:line="20" pos:column="15">strchr<pos:position pos:line="20" pos:column="21"/></name> <argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">buf<pos:position pos:line="20" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="28">'@'<pos:position pos:line="20" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="32"/></argument_list></call><operator pos:line="20" pos:column="32">)<pos:position pos:line="20" pos:column="33"/></operator></expr>)<pos:position pos:line="20" pos:column="34"/></condition><then pos:line="20" pos:column="34">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="21" pos:column="7">*<pos:position pos:line="21" pos:column="8"/></operator><name pos:line="21" pos:column="8">pc<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <literal type="number" pos:line="21" pos:column="13">0<pos:position pos:line="21" pos:column="14"/></literal></expr>;<pos:position pos:line="21" pos:column="15"/></expr_stmt></block></then></if>
  }<pos:position pos:line="22" pos:column="4"/></block></then>
  <else pos:line="23" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="24" pos:column="5">buf<pos:position pos:line="24" pos:column="8"/></name><index pos:line="24" pos:column="8">[<expr><literal type="number" pos:line="24" pos:column="9">0<pos:position pos:line="24" pos:column="10"/></literal></expr>]<pos:position pos:line="24" pos:column="11"/></index></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <literal type="char" pos:line="24" pos:column="14">'\0'<pos:position pos:line="24" pos:column="18"/></literal></expr>;<pos:position pos:line="24" pos:column="19"/></expr_stmt></block></else></if>
  
  <comment type="block" pos:line="26" pos:column="3">/* add a new alias */</comment>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><call><name pos:line="27" pos:column="7">mutt_get_field<pos:position pos:line="27" pos:column="21"/></name> <argument_list pos:line="27" pos:column="22">(<argument><expr><call><name pos:line="27" pos:column="23">_<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><literal type="string" pos:line="27" pos:column="25">"Alias as: "<pos:position pos:line="27" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="27" pos:column="40">buf<pos:position pos:line="27" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="45">sizeof <argument_list pos:line="27" pos:column="52">(<argument><expr><name pos:line="27" pos:column="53">buf<pos:position pos:line="27" pos:column="56"/></name></expr></argument>)<pos:position pos:line="27" pos:column="57"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="59">0<pos:position pos:line="27" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call> <operator pos:line="27" pos:column="62">!=<pos:position pos:line="27" pos:column="64"/></operator> <literal type="number" pos:line="27" pos:column="65">0<pos:position pos:line="27" pos:column="66"/></literal> <operator pos:line="27" pos:column="67">||<pos:position pos:line="27" pos:column="69"/></operator> <operator pos:line="27" pos:column="70">!<pos:position pos:line="27" pos:column="71"/></operator><name><name pos:line="27" pos:column="71">buf<pos:position pos:line="27" pos:column="74"/></name><index pos:line="27" pos:column="74">[<expr><literal type="number" pos:line="27" pos:column="75">0<pos:position pos:line="27" pos:column="76"/></literal></expr>]<pos:position pos:line="27" pos:column="77"/></index></name></expr>)<pos:position pos:line="27" pos:column="78"/></condition><then pos:line="27" pos:column="78">
    <block type="pseudo"><return pos:line="28" pos:column="5">return;<pos:position pos:line="28" pos:column="12"/></return></block></then></if>

  <comment type="block" pos:line="30" pos:column="3">/* check to see if the user already has an alias defined */</comment>
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><call><name pos:line="31" pos:column="7">mutt_lookup_alias<pos:position pos:line="31" pos:column="24"/></name> <argument_list pos:line="31" pos:column="25">(<argument><expr><name pos:line="31" pos:column="26">buf<pos:position pos:line="31" pos:column="29"/></name></expr></argument>)<pos:position pos:line="31" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="31"/></condition><then pos:line="31" pos:column="31">
  <block pos:line="32" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">mutt_error<pos:position pos:line="33" pos:column="15"/></name></type> <name pos:line="33" pos:column="16">_<pos:position pos:line="33" pos:column="17"/></name><argument_list pos:line="33" pos:column="17">(<argument><expr><literal type="string" pos:line="33" pos:column="18">"You already have an alias defined with that name!"<pos:position pos:line="33" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="70"/></argument_list></decl>;<pos:position pos:line="33" pos:column="71"/></decl_stmt>
    <return pos:line="34" pos:column="5">return;<pos:position pos:line="34" pos:column="12"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="37" pos:column="3">new<pos:position pos:line="37" pos:column="6"/></operator>       <operator pos:line="37" pos:column="13">=<pos:position pos:line="37" pos:column="14"/></operator> <call><name pos:line="37" pos:column="15">safe_calloc<pos:position pos:line="37" pos:column="26"/></name> <argument_list pos:line="37" pos:column="27">(<argument><expr><literal type="number" pos:line="37" pos:column="28">1<pos:position pos:line="37" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="31">sizeof <argument_list pos:line="37" pos:column="38">(<argument><expr><name pos:line="37" pos:column="39">ALIAS<pos:position pos:line="37" pos:column="44"/></name></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="38" pos:column="3">new<pos:position pos:line="38" pos:column="6"/></operator><operator pos:line="38" pos:column="6">-&gt;<pos:position pos:line="38" pos:column="11"/></operator><name pos:line="38" pos:column="8">self<pos:position pos:line="38" pos:column="12"/></name> <operator pos:line="38" pos:column="13">=<pos:position pos:line="38" pos:column="14"/></operator> <operator pos:line="38" pos:column="15">new<pos:position pos:line="38" pos:column="18"/></operator></expr>;<pos:position pos:line="38" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="39" pos:column="3">new<pos:position pos:line="39" pos:column="6"/></operator><operator pos:line="39" pos:column="6">-&gt;<pos:position pos:line="39" pos:column="11"/></operator><name pos:line="39" pos:column="8">name<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator> <call><name pos:line="39" pos:column="15">safe_strdup<pos:position pos:line="39" pos:column="26"/></name> <argument_list pos:line="39" pos:column="27">(<argument><expr><name pos:line="39" pos:column="28">buf<pos:position pos:line="39" pos:column="31"/></name></expr></argument>)<pos:position pos:line="39" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="33"/></expr_stmt>

  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><name pos:line="41" pos:column="7">adr<pos:position pos:line="41" pos:column="10"/></name></expr>)<pos:position pos:line="41" pos:column="11"/></condition><then pos:line="41" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="5">strfcpy<pos:position pos:line="42" pos:column="12"/></name> <argument_list pos:line="42" pos:column="13">(<argument><expr><name pos:line="42" pos:column="14">buf<pos:position pos:line="42" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="19">adr<pos:position pos:line="42" pos:column="22"/></name><operator pos:line="42" pos:column="22">-&gt;<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="24">mailbox<pos:position pos:line="42" pos:column="31"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="33">sizeof <argument_list pos:line="42" pos:column="40">(<argument><expr><name pos:line="42" pos:column="41">buf<pos:position pos:line="42" pos:column="44"/></name></expr></argument>)<pos:position pos:line="42" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="47"/></expr_stmt></block></then>
  <else pos:line="43" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="44" pos:column="5">buf<pos:position pos:line="44" pos:column="8"/></name><index pos:line="44" pos:column="8">[<expr><literal type="number" pos:line="44" pos:column="9">0<pos:position pos:line="44" pos:column="10"/></literal></expr>]<pos:position pos:line="44" pos:column="11"/></index></name> <operator pos:line="44" pos:column="12">=<pos:position pos:line="44" pos:column="13"/></operator> <literal type="number" pos:line="44" pos:column="14">0<pos:position pos:line="44" pos:column="15"/></literal></expr>;<pos:position pos:line="44" pos:column="16"/></expr_stmt></block></else></if>

  <do pos:line="46" pos:column="3">do
  <block pos:line="47" pos:column="3">{
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><call><name pos:line="48" pos:column="9">mutt_get_field<pos:position pos:line="48" pos:column="23"/></name> <argument_list pos:line="48" pos:column="24">(<argument><expr><call><name pos:line="48" pos:column="25">_<pos:position pos:line="48" pos:column="26"/></name><argument_list pos:line="48" pos:column="26">(<argument><expr><literal type="string" pos:line="48" pos:column="27">"Address: "<pos:position pos:line="48" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="48" pos:column="41">buf<pos:position pos:line="48" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="46">sizeof <argument_list pos:line="48" pos:column="53">(<argument><expr><name pos:line="48" pos:column="54">buf<pos:position pos:line="48" pos:column="57"/></name></expr></argument>)<pos:position pos:line="48" pos:column="58"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="60">0<pos:position pos:line="48" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="62"/></argument_list></call> <operator pos:line="48" pos:column="63">!=<pos:position pos:line="48" pos:column="65"/></operator> <literal type="number" pos:line="48" pos:column="66">0<pos:position pos:line="48" pos:column="67"/></literal> <operator pos:line="48" pos:column="68">||<pos:position pos:line="48" pos:column="70"/></operator> <operator pos:line="48" pos:column="71">!<pos:position pos:line="48" pos:column="72"/></operator><name><name pos:line="48" pos:column="72">buf<pos:position pos:line="48" pos:column="75"/></name><index pos:line="48" pos:column="75">[<expr><literal type="number" pos:line="48" pos:column="76">0<pos:position pos:line="48" pos:column="77"/></literal></expr>]<pos:position pos:line="48" pos:column="78"/></index></name></expr>)<pos:position pos:line="48" pos:column="79"/></condition><then pos:line="48" pos:column="79">
    <block pos:line="49" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="50" pos:column="7">mutt_free_alias<pos:position pos:line="50" pos:column="22"/></name> <argument_list pos:line="50" pos:column="23">(<argument><expr><operator pos:line="50" pos:column="24">&amp;<pos:position pos:line="50" pos:column="29"/></operator><operator pos:line="50" pos:column="25">new<pos:position pos:line="50" pos:column="28"/></operator></expr></argument>)<pos:position pos:line="50" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="30"/></expr_stmt>
      <return pos:line="51" pos:column="7">return;<pos:position pos:line="51" pos:column="14"/></return>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>
    
    <if pos:line="54" pos:column="5">if<condition pos:line="54" pos:column="7">(<expr><operator pos:line="54" pos:column="8">(<pos:position pos:line="54" pos:column="9"/></operator><operator pos:line="54" pos:column="9">new<pos:position pos:line="54" pos:column="12"/></operator><operator pos:line="54" pos:column="12">-&gt;<pos:position pos:line="54" pos:column="17"/></operator><name pos:line="54" pos:column="14">addr<pos:position pos:line="54" pos:column="18"/></name> <operator pos:line="54" pos:column="19">=<pos:position pos:line="54" pos:column="20"/></operator> <call><name pos:line="54" pos:column="21">rfc822_parse_adrlist<pos:position pos:line="54" pos:column="41"/></name> <argument_list pos:line="54" pos:column="42">(<argument><expr><operator pos:line="54" pos:column="43">new<pos:position pos:line="54" pos:column="46"/></operator><operator pos:line="54" pos:column="46">-&gt;<pos:position pos:line="54" pos:column="51"/></operator><name pos:line="54" pos:column="48">addr<pos:position pos:line="54" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="54">buf<pos:position pos:line="54" pos:column="57"/></name></expr></argument>)<pos:position pos:line="54" pos:column="58"/></argument_list></call><operator pos:line="54" pos:column="58">)<pos:position pos:line="54" pos:column="59"/></operator> <operator pos:line="54" pos:column="60">==<pos:position pos:line="54" pos:column="62"/></operator> <name pos:line="54" pos:column="63">NULL<pos:position pos:line="54" pos:column="67"/></name></expr>)<pos:position pos:line="54" pos:column="68"/></condition><then pos:line="54" pos:column="68">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="7">BEEP<pos:position pos:line="55" pos:column="11"/></name> <argument_list pos:line="55" pos:column="12">()<pos:position pos:line="55" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="15"/></expr_stmt></block></then></if>
  }<pos:position pos:line="56" pos:column="4"/></block>
  while<condition pos:line="57" pos:column="8">(<expr><operator pos:line="57" pos:column="9">new<pos:position pos:line="57" pos:column="12"/></operator><operator pos:line="57" pos:column="12">-&gt;<pos:position pos:line="57" pos:column="17"/></operator><name pos:line="57" pos:column="14">addr<pos:position pos:line="57" pos:column="18"/></name> <operator pos:line="57" pos:column="19">==<pos:position pos:line="57" pos:column="21"/></operator> <name pos:line="57" pos:column="22">NULL<pos:position pos:line="57" pos:column="26"/></name></expr>)<pos:position pos:line="57" pos:column="27"/></condition>;<pos:position pos:line="57" pos:column="28"/></do>
  
  <if pos:line="59" pos:column="3">if <condition pos:line="59" pos:column="6">(<expr><name pos:line="59" pos:column="7">adr<pos:position pos:line="59" pos:column="10"/></name> <operator pos:line="59" pos:column="11">&amp;&amp;<pos:position pos:line="59" pos:column="21"/></operator> <name><name pos:line="59" pos:column="14">adr<pos:position pos:line="59" pos:column="17"/></name><operator pos:line="59" pos:column="17">-&gt;<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="19">personal<pos:position pos:line="59" pos:column="27"/></name></name> <operator pos:line="59" pos:column="28">&amp;&amp;<pos:position pos:line="59" pos:column="38"/></operator> <operator pos:line="59" pos:column="31">!<pos:position pos:line="59" pos:column="32"/></operator><call><name pos:line="59" pos:column="32">mutt_is_mail_list<pos:position pos:line="59" pos:column="49"/></name> <argument_list pos:line="59" pos:column="50">(<argument><expr><name pos:line="59" pos:column="51">adr<pos:position pos:line="59" pos:column="54"/></name></expr></argument>)<pos:position pos:line="59" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="56"/></condition><then pos:line="59" pos:column="56">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="5">strfcpy<pos:position pos:line="60" pos:column="12"/></name> <argument_list pos:line="60" pos:column="13">(<argument><expr><name pos:line="60" pos:column="14">buf<pos:position pos:line="60" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="19">adr<pos:position pos:line="60" pos:column="22"/></name><operator pos:line="60" pos:column="22">-&gt;<pos:position pos:line="60" pos:column="27"/></operator><name pos:line="60" pos:column="24">personal<pos:position pos:line="60" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="60" pos:column="34">sizeof <argument_list pos:line="60" pos:column="41">(<argument><expr><name pos:line="60" pos:column="42">buf<pos:position pos:line="60" pos:column="45"/></name></expr></argument>)<pos:position pos:line="60" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="60" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="48"/></expr_stmt></block></then>
  <else pos:line="61" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="62" pos:column="5">buf<pos:position pos:line="62" pos:column="8"/></name><index pos:line="62" pos:column="8">[<expr><literal type="number" pos:line="62" pos:column="9">0<pos:position pos:line="62" pos:column="10"/></literal></expr>]<pos:position pos:line="62" pos:column="11"/></index></name> <operator pos:line="62" pos:column="12">=<pos:position pos:line="62" pos:column="13"/></operator> <literal type="number" pos:line="62" pos:column="14">0<pos:position pos:line="62" pos:column="15"/></literal></expr>;<pos:position pos:line="62" pos:column="16"/></expr_stmt></block></else></if>

  <if pos:line="64" pos:column="3">if <condition pos:line="64" pos:column="6">(<expr><call><name pos:line="64" pos:column="7">mutt_get_field<pos:position pos:line="64" pos:column="21"/></name> <argument_list pos:line="64" pos:column="22">(<argument><expr><call><name pos:line="64" pos:column="23">_<pos:position pos:line="64" pos:column="24"/></name><argument_list pos:line="64" pos:column="24">(<argument><expr><literal type="string" pos:line="64" pos:column="25">"Personal name: "<pos:position pos:line="64" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="64" pos:column="45">buf<pos:position pos:line="64" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="64" pos:column="50">sizeof <argument_list pos:line="64" pos:column="57">(<argument><expr><name pos:line="64" pos:column="58">buf<pos:position pos:line="64" pos:column="61"/></name></expr></argument>)<pos:position pos:line="64" pos:column="62"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="64">0<pos:position pos:line="64" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="66"/></argument_list></call> <operator pos:line="64" pos:column="67">!=<pos:position pos:line="64" pos:column="69"/></operator> <literal type="number" pos:line="64" pos:column="70">0<pos:position pos:line="64" pos:column="71"/></literal></expr>)<pos:position pos:line="64" pos:column="72"/></condition><then pos:line="64" pos:column="72">
  <block pos:line="65" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">mutt_free_alias<pos:position pos:line="66" pos:column="20"/></name> <argument_list pos:line="66" pos:column="21">(<argument><expr><operator pos:line="66" pos:column="22">&amp;<pos:position pos:line="66" pos:column="27"/></operator><operator pos:line="66" pos:column="23">new<pos:position pos:line="66" pos:column="26"/></operator></expr></argument>)<pos:position pos:line="66" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="28"/></expr_stmt>
    <return pos:line="67" pos:column="5">return;<pos:position pos:line="67" pos:column="12"/></return>
  }<pos:position pos:line="68" pos:column="4"/></block></then></if>
  <expr_stmt><expr><operator pos:line="69" pos:column="3">new<pos:position pos:line="69" pos:column="6"/></operator><operator pos:line="69" pos:column="6">-&gt;<pos:position pos:line="69" pos:column="11"/></operator><name><name pos:line="69" pos:column="8">addr<pos:position pos:line="69" pos:column="12"/></name><operator pos:line="69" pos:column="12">-&gt;<pos:position pos:line="69" pos:column="17"/></operator><name pos:line="69" pos:column="14">personal<pos:position pos:line="69" pos:column="22"/></name></name> <operator pos:line="69" pos:column="23">=<pos:position pos:line="69" pos:column="24"/></operator> <call><name pos:line="69" pos:column="25">safe_strdup<pos:position pos:line="69" pos:column="36"/></name> <argument_list pos:line="69" pos:column="37">(<argument><expr><name pos:line="69" pos:column="38">buf<pos:position pos:line="69" pos:column="41"/></name></expr></argument>)<pos:position pos:line="69" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="43"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="71" pos:column="3">buf<pos:position pos:line="71" pos:column="6"/></name><index pos:line="71" pos:column="6">[<expr><literal type="number" pos:line="71" pos:column="7">0<pos:position pos:line="71" pos:column="8"/></literal></expr>]<pos:position pos:line="71" pos:column="9"/></index></name> <operator pos:line="71" pos:column="10">=<pos:position pos:line="71" pos:column="11"/></operator> <literal type="number" pos:line="71" pos:column="12">0<pos:position pos:line="71" pos:column="13"/></literal></expr>;<pos:position pos:line="71" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="72" pos:column="3">rfc822_write_address<pos:position pos:line="72" pos:column="23"/></name> <argument_list pos:line="72" pos:column="24">(<argument><expr><name pos:line="72" pos:column="25">buf<pos:position pos:line="72" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="72" pos:column="30">sizeof <argument_list pos:line="72" pos:column="37">(<argument><expr><name pos:line="72" pos:column="38">buf<pos:position pos:line="72" pos:column="41"/></name></expr></argument>)<pos:position pos:line="72" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="72" pos:column="44">new<pos:position pos:line="72" pos:column="47"/></operator><operator pos:line="72" pos:column="47">-&gt;<pos:position pos:line="72" pos:column="52"/></operator><name pos:line="72" pos:column="49">addr<pos:position pos:line="72" pos:column="53"/></name></expr></argument>)<pos:position pos:line="72" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="55"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="73" pos:column="3">snprintf<pos:position pos:line="73" pos:column="11"/></name> <argument_list pos:line="73" pos:column="12">(<argument><expr><name pos:line="73" pos:column="13">prompt<pos:position pos:line="73" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="73" pos:column="21">sizeof <argument_list pos:line="73" pos:column="28">(<argument><expr><name pos:line="73" pos:column="29">prompt<pos:position pos:line="73" pos:column="35"/></name></expr></argument>)<pos:position pos:line="73" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="73" pos:column="38">_<pos:position pos:line="73" pos:column="39"/></name><argument_list pos:line="73" pos:column="39">(<argument><expr><literal type="string" pos:line="73" pos:column="40">"[%s = %s] Accept?"<pos:position pos:line="73" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="73" pos:column="62">new<pos:position pos:line="73" pos:column="65"/></operator><operator pos:line="73" pos:column="65">-&gt;<pos:position pos:line="73" pos:column="70"/></operator><name pos:line="73" pos:column="67">name<pos:position pos:line="73" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="73">buf<pos:position pos:line="73" pos:column="76"/></name></expr></argument>)<pos:position pos:line="73" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="78"/></expr_stmt>
  <if pos:line="74" pos:column="3">if <condition pos:line="74" pos:column="6">(<expr><call><name pos:line="74" pos:column="7">mutt_yesorno<pos:position pos:line="74" pos:column="19"/></name> <argument_list pos:line="74" pos:column="20">(<argument><expr><name pos:line="74" pos:column="21">prompt<pos:position pos:line="74" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="29">1<pos:position pos:line="74" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="31"/></argument_list></call> <operator pos:line="74" pos:column="32">!=<pos:position pos:line="74" pos:column="34"/></operator> <literal type="number" pos:line="74" pos:column="35">1<pos:position pos:line="74" pos:column="36"/></literal></expr>)<pos:position pos:line="74" pos:column="37"/></condition><then pos:line="74" pos:column="37">
  <block pos:line="75" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="76" pos:column="5">mutt_free_alias<pos:position pos:line="76" pos:column="20"/></name> <argument_list pos:line="76" pos:column="21">(<argument><expr><operator pos:line="76" pos:column="22">&amp;<pos:position pos:line="76" pos:column="27"/></operator><operator pos:line="76" pos:column="23">new<pos:position pos:line="76" pos:column="26"/></operator></expr></argument>)<pos:position pos:line="76" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="28"/></expr_stmt>
    <return pos:line="77" pos:column="5">return;<pos:position pos:line="77" pos:column="12"/></return>
  }<pos:position pos:line="78" pos:column="4"/></block></then></if>

  <if pos:line="80" pos:column="3">if <condition pos:line="80" pos:column="6">(<expr><operator pos:line="80" pos:column="7">(<pos:position pos:line="80" pos:column="8"/></operator><name pos:line="80" pos:column="8">t<pos:position pos:line="80" pos:column="9"/></name> <operator pos:line="80" pos:column="10">=<pos:position pos:line="80" pos:column="11"/></operator> <name pos:line="80" pos:column="12">Aliases<pos:position pos:line="80" pos:column="19"/></name><operator pos:line="80" pos:column="19">)<pos:position pos:line="80" pos:column="20"/></operator></expr>)<pos:position pos:line="80" pos:column="21"/></condition><then pos:line="80" pos:column="21">
  <block pos:line="81" pos:column="3">{
    <while pos:line="82" pos:column="5">while <condition pos:line="82" pos:column="11">(<expr><name><name pos:line="82" pos:column="12">t<pos:position pos:line="82" pos:column="13"/></name><operator pos:line="82" pos:column="13">-&gt;<pos:position pos:line="82" pos:column="18"/></operator><name pos:line="82" pos:column="15">next<pos:position pos:line="82" pos:column="19"/></name></name></expr>)<pos:position pos:line="82" pos:column="20"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="83" pos:column="7">t<pos:position pos:line="83" pos:column="8"/></name> <operator pos:line="83" pos:column="9">=<pos:position pos:line="83" pos:column="10"/></operator> <name><name pos:line="83" pos:column="11">t<pos:position pos:line="83" pos:column="12"/></name><operator pos:line="83" pos:column="12">-&gt;<pos:position pos:line="83" pos:column="17"/></operator><name pos:line="83" pos:column="14">next<pos:position pos:line="83" pos:column="18"/></name></name></expr>;<pos:position pos:line="83" pos:column="19"/></expr_stmt></block></while>
    <expr_stmt><expr><name><name pos:line="84" pos:column="5">t<pos:position pos:line="84" pos:column="6"/></name><operator pos:line="84" pos:column="6">-&gt;<pos:position pos:line="84" pos:column="11"/></operator><name pos:line="84" pos:column="8">next<pos:position pos:line="84" pos:column="12"/></name></name> <operator pos:line="84" pos:column="13">=<pos:position pos:line="84" pos:column="14"/></operator> <operator pos:line="84" pos:column="15">new<pos:position pos:line="84" pos:column="18"/></operator></expr>;<pos:position pos:line="84" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="85" pos:column="4"/></block></then>
  <else pos:line="86" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="87" pos:column="5">Aliases<pos:position pos:line="87" pos:column="12"/></name> <operator pos:line="87" pos:column="13">=<pos:position pos:line="87" pos:column="14"/></operator> <operator pos:line="87" pos:column="15">new<pos:position pos:line="87" pos:column="18"/></operator></expr>;<pos:position pos:line="87" pos:column="19"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="89" pos:column="3">strfcpy<pos:position pos:line="89" pos:column="10"/></name> <argument_list pos:line="89" pos:column="11">(<argument><expr><name pos:line="89" pos:column="12">buf<pos:position pos:line="89" pos:column="15"/></name></expr></argument>, <argument><expr><call><name pos:line="89" pos:column="17">NONULL<pos:position pos:line="89" pos:column="23"/></name> <argument_list pos:line="89" pos:column="24">(<argument><expr><name pos:line="89" pos:column="25">AliasFile<pos:position pos:line="89" pos:column="34"/></name></expr></argument>)<pos:position pos:line="89" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="89" pos:column="37">sizeof <argument_list pos:line="89" pos:column="44">(<argument><expr><name pos:line="89" pos:column="45">buf<pos:position pos:line="89" pos:column="48"/></name></expr></argument>)<pos:position pos:line="89" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="89" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="51"/></expr_stmt>
  <if pos:line="90" pos:column="3">if <condition pos:line="90" pos:column="6">(<expr><call><name pos:line="90" pos:column="7">mutt_get_field<pos:position pos:line="90" pos:column="21"/></name> <argument_list pos:line="90" pos:column="22">(<argument><expr><call><name pos:line="90" pos:column="23">_<pos:position pos:line="90" pos:column="24"/></name><argument_list pos:line="90" pos:column="24">(<argument><expr><literal type="string" pos:line="90" pos:column="25">"Save to file: "<pos:position pos:line="90" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="90" pos:column="44">buf<pos:position pos:line="90" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="90" pos:column="49">sizeof <argument_list pos:line="90" pos:column="56">(<argument><expr><name pos:line="90" pos:column="57">buf<pos:position pos:line="90" pos:column="60"/></name></expr></argument>)<pos:position pos:line="90" pos:column="61"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="90" pos:column="63">M_FILE<pos:position pos:line="90" pos:column="69"/></name></expr></argument>)<pos:position pos:line="90" pos:column="70"/></argument_list></call> <operator pos:line="90" pos:column="71">!=<pos:position pos:line="90" pos:column="73"/></operator> <literal type="number" pos:line="90" pos:column="74">0<pos:position pos:line="90" pos:column="75"/></literal></expr>)<pos:position pos:line="90" pos:column="76"/></condition><then pos:line="90" pos:column="76">
    <block type="pseudo"><return pos:line="91" pos:column="5">return;<pos:position pos:line="91" pos:column="12"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="92" pos:column="3">mutt_expand_path<pos:position pos:line="92" pos:column="19"/></name> <argument_list pos:line="92" pos:column="20">(<argument><expr><name pos:line="92" pos:column="21">buf<pos:position pos:line="92" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="92" pos:column="26">sizeof <argument_list pos:line="92" pos:column="33">(<argument><expr><name pos:line="92" pos:column="34">buf<pos:position pos:line="92" pos:column="37"/></name></expr></argument>)<pos:position pos:line="92" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="92" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="40"/></expr_stmt>
  <if pos:line="93" pos:column="3">if <condition pos:line="93" pos:column="6">(<expr><operator pos:line="93" pos:column="7">(<pos:position pos:line="93" pos:column="8"/></operator><name pos:line="93" pos:column="8">rc<pos:position pos:line="93" pos:column="10"/></name> <operator pos:line="93" pos:column="11">=<pos:position pos:line="93" pos:column="12"/></operator> <call><name pos:line="93" pos:column="13">fopen<pos:position pos:line="93" pos:column="18"/></name> <argument_list pos:line="93" pos:column="19">(<argument><expr><name pos:line="93" pos:column="20">buf<pos:position pos:line="93" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="25">"a"<pos:position pos:line="93" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="29"/></argument_list></call><operator pos:line="93" pos:column="29">)<pos:position pos:line="93" pos:column="30"/></operator></expr>)<pos:position pos:line="93" pos:column="31"/></condition><then pos:line="93" pos:column="31">
  <block pos:line="94" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="95" pos:column="5">buf<pos:position pos:line="95" pos:column="8"/></name><index pos:line="95" pos:column="8">[<expr><literal type="number" pos:line="95" pos:column="9">0<pos:position pos:line="95" pos:column="10"/></literal></expr>]<pos:position pos:line="95" pos:column="11"/></index></name> <operator pos:line="95" pos:column="12">=<pos:position pos:line="95" pos:column="13"/></operator> <literal type="number" pos:line="95" pos:column="14">0<pos:position pos:line="95" pos:column="15"/></literal></expr>;<pos:position pos:line="95" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="96" pos:column="5">rfc822_write_address<pos:position pos:line="96" pos:column="25"/></name> <argument_list pos:line="96" pos:column="26">(<argument><expr><name pos:line="96" pos:column="27">buf<pos:position pos:line="96" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="96" pos:column="32">sizeof <argument_list pos:line="96" pos:column="39">(<argument><expr><name pos:line="96" pos:column="40">buf<pos:position pos:line="96" pos:column="43"/></name></expr></argument>)<pos:position pos:line="96" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="96" pos:column="46">new<pos:position pos:line="96" pos:column="49"/></operator><operator pos:line="96" pos:column="49">-&gt;<pos:position pos:line="96" pos:column="54"/></operator><name pos:line="96" pos:column="51">addr<pos:position pos:line="96" pos:column="55"/></name></expr></argument>)<pos:position pos:line="96" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="97" pos:column="5">fprintf<pos:position pos:line="97" pos:column="12"/></name> <argument_list pos:line="97" pos:column="13">(<argument><expr><name pos:line="97" pos:column="14">rc<pos:position pos:line="97" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="18">"alias %s "<pos:position pos:line="97" pos:column="29"/></literal></expr></argument>, <argument><expr><operator pos:line="97" pos:column="31">new<pos:position pos:line="97" pos:column="34"/></operator><operator pos:line="97" pos:column="34">-&gt;<pos:position pos:line="97" pos:column="39"/></operator><name pos:line="97" pos:column="36">name<pos:position pos:line="97" pos:column="40"/></name></expr></argument>)<pos:position pos:line="97" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="98" pos:column="5">write_safe_address<pos:position pos:line="98" pos:column="23"/></name> <argument_list pos:line="98" pos:column="24">(<argument><expr><name pos:line="98" pos:column="25">rc<pos:position pos:line="98" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="29">buf<pos:position pos:line="98" pos:column="32"/></name></expr></argument>)<pos:position pos:line="98" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="99" pos:column="5">fputc<pos:position pos:line="99" pos:column="10"/></name> <argument_list pos:line="99" pos:column="11">(<argument><expr><literal type="char" pos:line="99" pos:column="12">'\n'<pos:position pos:line="99" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="99" pos:column="18">rc<pos:position pos:line="99" pos:column="20"/></name></expr></argument>)<pos:position pos:line="99" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="100" pos:column="5">fclose<pos:position pos:line="100" pos:column="11"/></name> <argument_list pos:line="100" pos:column="12">(<argument><expr><name pos:line="100" pos:column="13">rc<pos:position pos:line="100" pos:column="15"/></name></expr></argument>)<pos:position pos:line="100" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="17"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="101" pos:column="5">mutt_message<pos:position pos:line="101" pos:column="17"/></name></type> <name pos:line="101" pos:column="18">_<pos:position pos:line="101" pos:column="19"/></name><argument_list pos:line="101" pos:column="19">(<argument><expr><literal type="string" pos:line="101" pos:column="20">"Alias added."<pos:position pos:line="101" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="35"/></argument_list></decl>;<pos:position pos:line="101" pos:column="36"/></decl_stmt>
  }<pos:position pos:line="102" pos:column="4"/></block></then>
  <else pos:line="103" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="104" pos:column="5">mutt_perror<pos:position pos:line="104" pos:column="16"/></name> <argument_list pos:line="104" pos:column="17">(<argument><expr><name pos:line="104" pos:column="18">buf<pos:position pos:line="104" pos:column="21"/></name></expr></argument>)<pos:position pos:line="104" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="23"/></expr_stmt></block></else></if>
}<pos:position pos:line="105" pos:column="2"/></block></function></unit>

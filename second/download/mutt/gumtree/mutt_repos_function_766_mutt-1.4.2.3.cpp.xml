<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_766_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">rfc2047_decode<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">char<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier><modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">pd<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">p<pos:position pos:line="3" pos:column="16"/></name></decl>, <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="19">q<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">n<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">found_encoded<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">d0<pos:position pos:line="6" pos:column="11"/></name></decl>, <modifier pos:line="6" pos:column="13">*<pos:position pos:line="6" pos:column="14"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="14">d<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">s<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><operator pos:line="7" pos:column="19">*<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="20">pd<pos:position pos:line="7" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">dlen<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">!<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">s<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">||<pos:position pos:line="10" pos:column="12"/></operator> <operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><operator pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">s<pos:position pos:line="10" pos:column="16"/></name></expr>)<pos:position pos:line="10" pos:column="17"/></condition><then pos:line="10" pos:column="17">
    <block type="pseudo"><return pos:line="11" pos:column="5">return;<pos:position pos:line="11" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="13" pos:column="3">dlen<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <literal type="number" pos:line="13" pos:column="10">4<pos:position pos:line="13" pos:column="11"/></literal> <operator pos:line="13" pos:column="12">*<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">strlen<pos:position pos:line="13" pos:column="20"/></name> <argument_list pos:line="13" pos:column="21">(<argument><expr><name pos:line="13" pos:column="22">s<pos:position pos:line="13" pos:column="23"/></name></expr></argument>)<pos:position pos:line="13" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt> <comment type="block" pos:line="13" pos:column="26">/* should be enough */</comment>
  <expr_stmt><expr><name pos:line="14" pos:column="3">d<pos:position pos:line="14" pos:column="4"/></name> <operator pos:line="14" pos:column="5">=<pos:position pos:line="14" pos:column="6"/></operator> <name pos:line="14" pos:column="7">d0<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <call><name pos:line="14" pos:column="12">safe_malloc<pos:position pos:line="14" pos:column="23"/></name> <argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">dlen<pos:position pos:line="14" pos:column="29"/></name> <operator pos:line="14" pos:column="30">+<pos:position pos:line="14" pos:column="31"/></operator> <literal type="number" pos:line="14" pos:column="32">1<pos:position pos:line="14" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>

  <while pos:line="16" pos:column="3">while <condition pos:line="16" pos:column="9">(<expr><operator pos:line="16" pos:column="10">*<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="11">s<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">&amp;&amp;<pos:position pos:line="16" pos:column="23"/></operator> <name pos:line="16" pos:column="16">dlen<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">&gt;<pos:position pos:line="16" pos:column="25"/></operator> <literal type="number" pos:line="16" pos:column="23">0<pos:position pos:line="16" pos:column="24"/></literal></expr>)<pos:position pos:line="16" pos:column="25"/></condition>
  <block pos:line="17" pos:column="3">{
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><operator pos:line="18" pos:column="10">(<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">p<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <call><name pos:line="18" pos:column="15">find_encoded_word<pos:position pos:line="18" pos:column="32"/></name> <argument_list pos:line="18" pos:column="33">(<argument><expr><name pos:line="18" pos:column="34">s<pos:position pos:line="18" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="37">&amp;<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="38">q<pos:position pos:line="18" pos:column="39"/></name></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call><operator pos:line="18" pos:column="40">)<pos:position pos:line="18" pos:column="41"/></operator></expr>)<pos:position pos:line="18" pos:column="42"/></condition><then pos:line="18" pos:column="42">
    <block pos:line="19" pos:column="5">{
      <comment type="block" pos:line="20" pos:column="7">/* no encoded words */</comment>
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">strncpy<pos:position pos:line="21" pos:column="14"/></name> <argument_list pos:line="21" pos:column="15">(<argument><expr><name pos:line="21" pos:column="16">d<pos:position pos:line="21" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="19">s<pos:position pos:line="21" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="22">dlen<pos:position pos:line="21" pos:column="26"/></name></expr></argument>)<pos:position pos:line="21" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name pos:line="22" pos:column="7">d<pos:position pos:line="22" pos:column="8"/></name> <operator pos:line="22" pos:column="9">+=<pos:position pos:line="22" pos:column="11"/></operator> <name pos:line="22" pos:column="12">dlen<pos:position pos:line="22" pos:column="16"/></name></expr>;<pos:position pos:line="22" pos:column="17"/></expr_stmt>
      <break pos:line="23" pos:column="7">break;<pos:position pos:line="23" pos:column="13"/></break>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">p<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">!=<pos:position pos:line="26" pos:column="13"/></operator> <name pos:line="26" pos:column="14">s<pos:position pos:line="26" pos:column="15"/></name></expr>)<pos:position pos:line="26" pos:column="16"/></condition><then pos:line="26" pos:column="16">
    <block pos:line="27" pos:column="5">{
      <expr_stmt><expr><name pos:line="28" pos:column="7">n<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">=<pos:position pos:line="28" pos:column="10"/></operator> <call pos:line="28" pos:column="11">(<name pos:line="28" pos:column="12">size_t<pos:position pos:line="28" pos:column="18"/></name>) <argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">p<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">-<pos:position pos:line="28" pos:column="24"/></operator> <name pos:line="28" pos:column="25">s<pos:position pos:line="28" pos:column="26"/></name></expr></argument>)<pos:position pos:line="28" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="28"/></expr_stmt>
      <comment type="block" pos:line="29" pos:column="7">/* ignore spaces between encoded words */</comment>
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><operator pos:line="30" pos:column="11">!<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="12">found_encoded<pos:position pos:line="30" pos:column="25"/></name> <operator pos:line="30" pos:column="26">||<pos:position pos:line="30" pos:column="28"/></operator> <call><name pos:line="30" pos:column="29">strspn<pos:position pos:line="30" pos:column="35"/></name> <argument_list pos:line="30" pos:column="36">(<argument><expr><name pos:line="30" pos:column="37">s<pos:position pos:line="30" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="40">" \t\r\n"<pos:position pos:line="30" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="50"/></argument_list></call> <operator pos:line="30" pos:column="51">!=<pos:position pos:line="30" pos:column="53"/></operator> <name pos:line="30" pos:column="54">n<pos:position pos:line="30" pos:column="55"/></name></expr>)<pos:position pos:line="30" pos:column="56"/></condition><then pos:line="30" pos:column="56">
      <block pos:line="31" pos:column="7">{
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">n<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">&gt;<pos:position pos:line="32" pos:column="19"/></operator> <name pos:line="32" pos:column="17">dlen<pos:position pos:line="32" pos:column="21"/></name></expr>)<pos:position pos:line="32" pos:column="22"/></condition><then pos:line="32" pos:column="22">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="11">n<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">=<pos:position pos:line="33" pos:column="14"/></operator> <name pos:line="33" pos:column="15">dlen<pos:position pos:line="33" pos:column="19"/></name></expr>;<pos:position pos:line="33" pos:column="20"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">memcpy<pos:position pos:line="34" pos:column="15"/></name> <argument_list pos:line="34" pos:column="16">(<argument><expr><name pos:line="34" pos:column="17">d<pos:position pos:line="34" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="20">s<pos:position pos:line="34" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="23">n<pos:position pos:line="34" pos:column="24"/></name></expr></argument>)<pos:position pos:line="34" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="35" pos:column="9">d<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">+=<pos:position pos:line="35" pos:column="13"/></operator> <name pos:line="35" pos:column="14">n<pos:position pos:line="35" pos:column="15"/></name></expr>;<pos:position pos:line="35" pos:column="16"/></expr_stmt>
	<expr_stmt><expr><name pos:line="36" pos:column="9">dlen<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">-=<pos:position pos:line="36" pos:column="16"/></operator> <name pos:line="36" pos:column="17">n<pos:position pos:line="36" pos:column="18"/></name></expr>;<pos:position pos:line="36" pos:column="19"/></expr_stmt>
      }<pos:position pos:line="37" pos:column="8"/></block></then></if>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">rfc2047_decode_word<pos:position pos:line="40" pos:column="24"/></name> <argument_list pos:line="40" pos:column="25">(<argument><expr><name pos:line="40" pos:column="26">d<pos:position pos:line="40" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="29">p<pos:position pos:line="40" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="32">dlen<pos:position pos:line="40" pos:column="36"/></name></expr></argument>)<pos:position pos:line="40" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="41" pos:column="5">found_encoded<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">=<pos:position pos:line="41" pos:column="20"/></operator> <literal type="number" pos:line="41" pos:column="21">1<pos:position pos:line="41" pos:column="22"/></literal></expr>;<pos:position pos:line="41" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="42" pos:column="5">s<pos:position pos:line="42" pos:column="6"/></name> <operator pos:line="42" pos:column="7">=<pos:position pos:line="42" pos:column="8"/></operator> <name pos:line="42" pos:column="9">q<pos:position pos:line="42" pos:column="10"/></name></expr>;<pos:position pos:line="42" pos:column="11"/></expr_stmt>
    <expr_stmt><expr><name pos:line="43" pos:column="5">n<pos:position pos:line="43" pos:column="6"/></name> <operator pos:line="43" pos:column="7">=<pos:position pos:line="43" pos:column="8"/></operator> <call><name pos:line="43" pos:column="9">mutt_strlen<pos:position pos:line="43" pos:column="20"/></name> <argument_list pos:line="43" pos:column="21">(<argument><expr><name pos:line="43" pos:column="22">d<pos:position pos:line="43" pos:column="23"/></name></expr></argument>)<pos:position pos:line="43" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="44" pos:column="5">dlen<pos:position pos:line="44" pos:column="9"/></name> <operator pos:line="44" pos:column="10">-=<pos:position pos:line="44" pos:column="12"/></operator> <name pos:line="44" pos:column="13">n<pos:position pos:line="44" pos:column="14"/></name></expr>;<pos:position pos:line="44" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="45" pos:column="5">d<pos:position pos:line="45" pos:column="6"/></name> <operator pos:line="45" pos:column="7">+=<pos:position pos:line="45" pos:column="9"/></operator> <name pos:line="45" pos:column="10">n<pos:position pos:line="45" pos:column="11"/></name></expr>;<pos:position pos:line="45" pos:column="12"/></expr_stmt>
  }<pos:position pos:line="46" pos:column="4"/></block></while>
  <expr_stmt><expr><operator pos:line="47" pos:column="3">*<pos:position pos:line="47" pos:column="4"/></operator><name pos:line="47" pos:column="4">d<pos:position pos:line="47" pos:column="5"/></name> <operator pos:line="47" pos:column="6">=<pos:position pos:line="47" pos:column="7"/></operator> <literal type="number" pos:line="47" pos:column="8">0<pos:position pos:line="47" pos:column="9"/></literal></expr>;<pos:position pos:line="47" pos:column="10"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="49" pos:column="3">safe_free<pos:position pos:line="49" pos:column="12"/></name> <argument_list pos:line="49" pos:column="13">(<argument><expr><operator pos:line="49" pos:column="14">(<pos:position pos:line="49" pos:column="15"/></operator><name pos:line="49" pos:column="15">void<pos:position pos:line="49" pos:column="19"/></name> <operator pos:line="49" pos:column="20">*<pos:position pos:line="49" pos:column="21"/></operator><operator pos:line="49" pos:column="21">*<pos:position pos:line="49" pos:column="22"/></operator><operator pos:line="49" pos:column="22">)<pos:position pos:line="49" pos:column="23"/></operator> <name pos:line="49" pos:column="24">pd<pos:position pos:line="49" pos:column="26"/></name></expr></argument>)<pos:position pos:line="49" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="50" pos:column="3">*<pos:position pos:line="50" pos:column="4"/></operator><name pos:line="50" pos:column="4">pd<pos:position pos:line="50" pos:column="6"/></name> <operator pos:line="50" pos:column="7">=<pos:position pos:line="50" pos:column="8"/></operator> <name pos:line="50" pos:column="9">d0<pos:position pos:line="50" pos:column="11"/></name></expr>;<pos:position pos:line="50" pos:column="12"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">mutt_str_adjust<pos:position pos:line="51" pos:column="18"/></name> <argument_list pos:line="51" pos:column="19">(<argument><expr><name pos:line="51" pos:column="20">pd<pos:position pos:line="51" pos:column="22"/></name></expr></argument>)<pos:position pos:line="51" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="24"/></expr_stmt>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

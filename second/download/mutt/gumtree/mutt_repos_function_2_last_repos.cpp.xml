<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">fmtint<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">buffer<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">size_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">currlen<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">size_t<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">maxlen<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="2" pos:column="21">long<pos:position pos:line="2" pos:column="25"/></name></type> <name pos:line="2" pos:column="26">value<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="33">int<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">base<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">int<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">min<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">int<pos:position pos:line="2" pos:column="55"/></name></type> <name pos:line="2" pos:column="56">max<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="61">int<pos:position pos:line="2" pos:column="64"/></name></type> <name pos:line="2" pos:column="65">flags<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">signvalue<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">unsigned<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">long<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">uvalue<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">convert<pos:position pos:line="6" pos:column="15"/></name><index pos:line="6" pos:column="15">[<expr><literal type="number" pos:line="6" pos:column="16">20<pos:position pos:line="6" pos:column="18"/></literal></expr>]<pos:position pos:line="6" pos:column="19"/></index></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">place<pos:position pos:line="7" pos:column="12"/></name> <init pos:line="7" pos:column="13">= <expr><literal type="number" pos:line="7" pos:column="15">0<pos:position pos:line="7" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">spadlen<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><literal type="number" pos:line="8" pos:column="17">0<pos:position pos:line="8" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt> <comment type="block" pos:line="8" pos:column="20">/* amount to space pad */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">zpadlen<pos:position pos:line="9" pos:column="14"/></name> <init pos:line="9" pos:column="15">= <expr><literal type="number" pos:line="9" pos:column="17">0<pos:position pos:line="9" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt> <comment type="block" pos:line="9" pos:column="20">/* amount to zero pad */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">caps<pos:position pos:line="10" pos:column="11"/></name> <init pos:line="10" pos:column="12">= <expr><literal type="number" pos:line="10" pos:column="14">0<pos:position pos:line="10" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>
  
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">max<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">&lt;<pos:position pos:line="12" pos:column="15"/></operator> <literal type="number" pos:line="12" pos:column="13">0<pos:position pos:line="12" pos:column="14"/></literal></expr>)<pos:position pos:line="12" pos:column="15"/></condition><then pos:line="12" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="5">max<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <literal type="number" pos:line="13" pos:column="11">0<pos:position pos:line="13" pos:column="12"/></literal></expr>;<pos:position pos:line="13" pos:column="13"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="15" pos:column="3">uvalue<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <name pos:line="15" pos:column="12">value<pos:position pos:line="15" pos:column="17"/></name></expr>;<pos:position pos:line="15" pos:column="18"/></expr_stmt>

  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><operator pos:line="17" pos:column="6">!<pos:position pos:line="17" pos:column="7"/></operator><operator pos:line="17" pos:column="7">(<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">flags<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">&amp;<pos:position pos:line="17" pos:column="19"/></operator> <name pos:line="17" pos:column="16">DP_F_UNSIGNED<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">)<pos:position pos:line="17" pos:column="30"/></operator></expr>)<pos:position pos:line="17" pos:column="31"/></condition><then pos:line="17" pos:column="31">
  <block pos:line="18" pos:column="3">{
    <if pos:line="19" pos:column="5">if<condition pos:line="19" pos:column="7">( <expr><name pos:line="19" pos:column="9">value<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">&lt;<pos:position pos:line="19" pos:column="19"/></operator> <literal type="number" pos:line="19" pos:column="17">0<pos:position pos:line="19" pos:column="18"/></literal></expr> )<pos:position pos:line="19" pos:column="20"/></condition><then pos:line="19" pos:column="20"> <block pos:line="19" pos:column="21">{
      <expr_stmt><expr><name pos:line="20" pos:column="7">signvalue<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <literal type="char" pos:line="20" pos:column="19">'-'<pos:position pos:line="20" pos:column="22"/></literal></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name pos:line="21" pos:column="7">uvalue<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <operator pos:line="21" pos:column="16">-<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="17">value<pos:position pos:line="21" pos:column="22"/></name></expr>;<pos:position pos:line="21" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then>
    <elseif pos:line="23" pos:column="5">else
      <if pos:line="24" pos:column="7">if <condition pos:line="24" pos:column="10">(<expr><name pos:line="24" pos:column="11">flags<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">&amp;<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="19">DP_F_PLUS<pos:position pos:line="24" pos:column="28"/></name></expr>)<pos:position pos:line="24" pos:column="29"/></condition><then pos:line="24" pos:column="29">  <comment type="block" pos:line="24" pos:column="31">/* Do a sign (+/i) */</comment>
	<block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="9">signvalue<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <literal type="char" pos:line="25" pos:column="21">'+'<pos:position pos:line="25" pos:column="24"/></literal></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="26" pos:column="5">else
      <if pos:line="27" pos:column="7">if <condition pos:line="27" pos:column="10">(<expr><name pos:line="27" pos:column="11">flags<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">&amp;<pos:position pos:line="27" pos:column="22"/></operator> <name pos:line="27" pos:column="19">DP_F_SPACE<pos:position pos:line="27" pos:column="29"/></name></expr>)<pos:position pos:line="27" pos:column="30"/></condition><then pos:line="27" pos:column="30">
	<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="9">signvalue<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">=<pos:position pos:line="28" pos:column="20"/></operator> <literal type="char" pos:line="28" pos:column="21">' '<pos:position pos:line="28" pos:column="24"/></literal></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt></block></then></if></elseif></if>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>
  
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name pos:line="31" pos:column="7">flags<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">&amp;<pos:position pos:line="31" pos:column="18"/></operator> <name pos:line="31" pos:column="15">DP_F_UP<pos:position pos:line="31" pos:column="22"/></name></expr>)<pos:position pos:line="31" pos:column="23"/></condition><then pos:line="31" pos:column="23"> <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="24">caps<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">=<pos:position pos:line="31" pos:column="30"/></operator> <literal type="number" pos:line="31" pos:column="31">1<pos:position pos:line="31" pos:column="32"/></literal></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt></block></then></if> <comment type="block" pos:line="31" pos:column="34">/* Should characters be upper case? */</comment>

  <do pos:line="33" pos:column="3">do <block pos:line="33" pos:column="6">{
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">convert<pos:position pos:line="34" pos:column="12"/></name><index pos:line="34" pos:column="12">[<expr><name pos:line="34" pos:column="13">place<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">++<pos:position pos:line="34" pos:column="20"/></operator></expr>]<pos:position pos:line="34" pos:column="21"/></index></name> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator>
      <operator pos:line="35" pos:column="7">(<pos:position pos:line="35" pos:column="8"/></operator><ternary><condition><expr><name pos:line="35" pos:column="8">caps<pos:position pos:line="35" pos:column="12"/></name></expr>?<pos:position pos:line="35" pos:column="13"/></condition><then pos:line="35" pos:column="13"> <expr><literal type="string" pos:line="35" pos:column="14">"0123456789ABCDEF"<pos:position pos:line="35" pos:column="32"/></literal></expr></then><else pos:line="35" pos:column="32">:<expr><literal type="string" pos:line="35" pos:column="33">"0123456789abcdef"<pos:position pos:line="35" pos:column="51"/></literal></expr></else></ternary><operator pos:line="35" pos:column="51">)<pos:position pos:line="35" pos:column="52"/></operator>
      <index pos:line="36" pos:column="7">[<expr><name pos:line="36" pos:column="8">uvalue<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">%<pos:position pos:line="36" pos:column="16"/></operator> <operator pos:line="36" pos:column="17">(<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="18">unsigned<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">)<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="27">base<pos:position pos:line="36" pos:column="31"/></name></expr>  ]<pos:position pos:line="36" pos:column="34"/></index></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="37" pos:column="5">uvalue<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <operator pos:line="37" pos:column="14">(<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="15">uvalue<pos:position pos:line="37" pos:column="21"/></name> <operator pos:line="37" pos:column="22">/<pos:position pos:line="37" pos:column="23"/></operator> <operator pos:line="37" pos:column="24">(<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="25">unsigned<pos:position pos:line="37" pos:column="33"/></name><operator pos:line="37" pos:column="33">)<pos:position pos:line="37" pos:column="34"/></operator><name pos:line="37" pos:column="34">base<pos:position pos:line="37" pos:column="38"/></name> <operator pos:line="37" pos:column="39">)<pos:position pos:line="37" pos:column="40"/></operator></expr>;<pos:position pos:line="37" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block> while<condition pos:line="38" pos:column="10">(<expr><name pos:line="38" pos:column="11">uvalue<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">&amp;&amp;<pos:position pos:line="38" pos:column="28"/></operator> <operator pos:line="38" pos:column="21">(<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="22">place<pos:position pos:line="38" pos:column="27"/></name> <operator pos:line="38" pos:column="28">&lt;<pos:position pos:line="38" pos:column="32"/></operator> <literal type="number" pos:line="38" pos:column="30">20<pos:position pos:line="38" pos:column="32"/></literal><operator pos:line="38" pos:column="32">)<pos:position pos:line="38" pos:column="33"/></operator></expr>)<pos:position pos:line="38" pos:column="34"/></condition>;<pos:position pos:line="38" pos:column="35"/></do>
  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><name pos:line="39" pos:column="7">place<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">==<pos:position pos:line="39" pos:column="15"/></operator> <literal type="number" pos:line="39" pos:column="16">20<pos:position pos:line="39" pos:column="18"/></literal></expr>)<pos:position pos:line="39" pos:column="19"/></condition><then pos:line="39" pos:column="19"> <block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="20">place<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">--<pos:position pos:line="39" pos:column="27"/></operator></expr>;<pos:position pos:line="39" pos:column="28"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name><name pos:line="40" pos:column="3">convert<pos:position pos:line="40" pos:column="10"/></name><index pos:line="40" pos:column="10">[<expr><name pos:line="40" pos:column="11">place<pos:position pos:line="40" pos:column="16"/></name></expr>]<pos:position pos:line="40" pos:column="17"/></index></name> <operator pos:line="40" pos:column="18">=<pos:position pos:line="40" pos:column="19"/></operator> <literal type="number" pos:line="40" pos:column="20">0<pos:position pos:line="40" pos:column="21"/></literal></expr>;<pos:position pos:line="40" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><name pos:line="42" pos:column="3">zpadlen<pos:position pos:line="42" pos:column="10"/></name> <operator pos:line="42" pos:column="11">=<pos:position pos:line="42" pos:column="12"/></operator> <name pos:line="42" pos:column="13">max<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">-<pos:position pos:line="42" pos:column="18"/></operator> <name pos:line="42" pos:column="19">place<pos:position pos:line="42" pos:column="24"/></name></expr>;<pos:position pos:line="42" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name pos:line="43" pos:column="3">spadlen<pos:position pos:line="43" pos:column="10"/></name> <operator pos:line="43" pos:column="11">=<pos:position pos:line="43" pos:column="12"/></operator> <name pos:line="43" pos:column="13">min<pos:position pos:line="43" pos:column="16"/></name> <operator pos:line="43" pos:column="17">-<pos:position pos:line="43" pos:column="18"/></operator> <call><name pos:line="43" pos:column="19">MAX<pos:position pos:line="43" pos:column="22"/></name> <argument_list pos:line="43" pos:column="23">(<argument><expr><name pos:line="43" pos:column="24">max<pos:position pos:line="43" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="29">place<pos:position pos:line="43" pos:column="34"/></name></expr></argument>)<pos:position pos:line="43" pos:column="35"/></argument_list></call> <operator pos:line="43" pos:column="36">-<pos:position pos:line="43" pos:column="37"/></operator> <operator pos:line="43" pos:column="38">(<pos:position pos:line="43" pos:column="39"/></operator><ternary><condition><expr><name pos:line="43" pos:column="39">signvalue<pos:position pos:line="43" pos:column="48"/></name></expr> ?<pos:position pos:line="43" pos:column="50"/></condition><then pos:line="43" pos:column="50"> <expr><literal type="number" pos:line="43" pos:column="51">1<pos:position pos:line="43" pos:column="52"/></literal></expr> <pos:position pos:line="43" pos:column="53"/></then><else pos:line="43" pos:column="53">: <expr><literal type="number" pos:line="43" pos:column="55">0<pos:position pos:line="43" pos:column="56"/></literal></expr></else></ternary><operator pos:line="43" pos:column="56">)<pos:position pos:line="43" pos:column="57"/></operator></expr>;<pos:position pos:line="43" pos:column="58"/></expr_stmt>
  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><name pos:line="44" pos:column="7">zpadlen<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">&lt;<pos:position pos:line="44" pos:column="19"/></operator> <literal type="number" pos:line="44" pos:column="17">0<pos:position pos:line="44" pos:column="18"/></literal></expr>)<pos:position pos:line="44" pos:column="19"/></condition><then pos:line="44" pos:column="19"> <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="20">zpadlen<pos:position pos:line="44" pos:column="27"/></name> <operator pos:line="44" pos:column="28">=<pos:position pos:line="44" pos:column="29"/></operator> <literal type="number" pos:line="44" pos:column="30">0<pos:position pos:line="44" pos:column="31"/></literal></expr>;<pos:position pos:line="44" pos:column="32"/></expr_stmt></block></then></if>
  <if pos:line="45" pos:column="3">if <condition pos:line="45" pos:column="6">(<expr><name pos:line="45" pos:column="7">spadlen<pos:position pos:line="45" pos:column="14"/></name> <operator pos:line="45" pos:column="15">&lt;<pos:position pos:line="45" pos:column="19"/></operator> <literal type="number" pos:line="45" pos:column="17">0<pos:position pos:line="45" pos:column="18"/></literal></expr>)<pos:position pos:line="45" pos:column="19"/></condition><then pos:line="45" pos:column="19"> <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="20">spadlen<pos:position pos:line="45" pos:column="27"/></name> <operator pos:line="45" pos:column="28">=<pos:position pos:line="45" pos:column="29"/></operator> <literal type="number" pos:line="45" pos:column="30">0<pos:position pos:line="45" pos:column="31"/></literal></expr>;<pos:position pos:line="45" pos:column="32"/></expr_stmt></block></then></if>
  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><name pos:line="46" pos:column="7">flags<pos:position pos:line="46" pos:column="12"/></name> <operator pos:line="46" pos:column="13">&amp;<pos:position pos:line="46" pos:column="18"/></operator> <name pos:line="46" pos:column="15">DP_F_ZERO<pos:position pos:line="46" pos:column="24"/></name></expr>)<pos:position pos:line="46" pos:column="25"/></condition><then pos:line="46" pos:column="25">
  <block pos:line="47" pos:column="3">{
    <expr_stmt><expr><name pos:line="48" pos:column="5">zpadlen<pos:position pos:line="48" pos:column="12"/></name> <operator pos:line="48" pos:column="13">=<pos:position pos:line="48" pos:column="14"/></operator> <call><name pos:line="48" pos:column="15">MAX<pos:position pos:line="48" pos:column="18"/></name><argument_list pos:line="48" pos:column="18">(<argument><expr><name pos:line="48" pos:column="19">zpadlen<pos:position pos:line="48" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="28">spadlen<pos:position pos:line="48" pos:column="35"/></name></expr></argument>)<pos:position pos:line="48" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="49" pos:column="5">spadlen<pos:position pos:line="49" pos:column="12"/></name> <operator pos:line="49" pos:column="13">=<pos:position pos:line="49" pos:column="14"/></operator> <literal type="number" pos:line="49" pos:column="15">0<pos:position pos:line="49" pos:column="16"/></literal></expr>;<pos:position pos:line="49" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="50" pos:column="4"/></block></then></if>
  <if pos:line="51" pos:column="3">if <condition pos:line="51" pos:column="6">(<expr><name pos:line="51" pos:column="7">flags<pos:position pos:line="51" pos:column="12"/></name> <operator pos:line="51" pos:column="13">&amp;<pos:position pos:line="51" pos:column="18"/></operator> <name pos:line="51" pos:column="15">DP_F_MINUS<pos:position pos:line="51" pos:column="25"/></name></expr>)<pos:position pos:line="51" pos:column="26"/></condition><then pos:line="51" pos:column="26"> 
    <block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="5">spadlen<pos:position pos:line="52" pos:column="12"/></name> <operator pos:line="52" pos:column="13">=<pos:position pos:line="52" pos:column="14"/></operator> <operator pos:line="52" pos:column="15">-<pos:position pos:line="52" pos:column="16"/></operator><name pos:line="52" pos:column="16">spadlen<pos:position pos:line="52" pos:column="23"/></name></expr>;<pos:position pos:line="52" pos:column="24"/></expr_stmt></block></then></if> <comment type="block" pos:line="52" pos:column="25">/* Left Justifty */</comment>

<cpp:ifdef pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">ifdef<pos:position pos:line="54" pos:column="7"/></cpp:directive> <name pos:line="54" pos:column="8">DEBUG_SNPRINTF<pos:position pos:line="54" pos:column="22"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="55" pos:column="3">dprint<pos:position pos:line="55" pos:column="9"/></name> <argument_list pos:line="55" pos:column="10">(<argument><expr><literal type="number" pos:line="55" pos:column="11">1<pos:position pos:line="55" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="55" pos:column="14">(<pos:position pos:line="55" pos:column="15"/></operator><name pos:line="55" pos:column="15">debugfile<pos:position pos:line="55" pos:column="24"/></name><operator pos:line="55" pos:column="24">,<pos:position pos:line="55" pos:column="25"/></operator> <literal type="string" pos:line="55" pos:column="26">"zpad: %d, spad: %d, min: %d, max: %d, place: %d\n"<pos:position pos:line="55" pos:column="77"/></literal><operator pos:line="55" pos:column="77">,<pos:position pos:line="55" pos:column="78"/></operator>
      <name pos:line="56" pos:column="7">zpadlen<pos:position pos:line="56" pos:column="14"/></name><operator pos:line="56" pos:column="14">,<pos:position pos:line="56" pos:column="15"/></operator> <name pos:line="56" pos:column="16">spadlen<pos:position pos:line="56" pos:column="23"/></name><operator pos:line="56" pos:column="23">,<pos:position pos:line="56" pos:column="24"/></operator> <name pos:line="56" pos:column="25">min<pos:position pos:line="56" pos:column="28"/></name><operator pos:line="56" pos:column="28">,<pos:position pos:line="56" pos:column="29"/></operator> <name pos:line="56" pos:column="30">max<pos:position pos:line="56" pos:column="33"/></name><operator pos:line="56" pos:column="33">,<pos:position pos:line="56" pos:column="34"/></operator> <name pos:line="56" pos:column="35">place<pos:position pos:line="56" pos:column="40"/></name><operator pos:line="56" pos:column="40">)<pos:position pos:line="56" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="56" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="43"/></expr_stmt>
<cpp:endif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">endif<pos:position pos:line="57" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="59" pos:column="3">/* Spaces */</comment>
  <while pos:line="60" pos:column="3">while <condition pos:line="60" pos:column="9">(<expr><name pos:line="60" pos:column="10">spadlen<pos:position pos:line="60" pos:column="17"/></name> <operator pos:line="60" pos:column="18">&gt;<pos:position pos:line="60" pos:column="22"/></operator> <literal type="number" pos:line="60" pos:column="20">0<pos:position pos:line="60" pos:column="21"/></literal></expr>)<pos:position pos:line="60" pos:column="22"/></condition> 
  <block pos:line="61" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="62" pos:column="5">dopr_outch<pos:position pos:line="62" pos:column="15"/></name> <argument_list pos:line="62" pos:column="16">(<argument><expr><name pos:line="62" pos:column="17">buffer<pos:position pos:line="62" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="25">currlen<pos:position pos:line="62" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="34">maxlen<pos:position pos:line="62" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="62" pos:column="42">' '<pos:position pos:line="62" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="63" pos:column="5">--<pos:position pos:line="63" pos:column="7"/></operator><name pos:line="63" pos:column="7">spadlen<pos:position pos:line="63" pos:column="14"/></name></expr>;<pos:position pos:line="63" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="64" pos:column="4"/></block></while>

  <comment type="block" pos:line="66" pos:column="3">/* Sign */</comment>
  <if pos:line="67" pos:column="3">if <condition pos:line="67" pos:column="6">(<expr><name pos:line="67" pos:column="7">signvalue<pos:position pos:line="67" pos:column="16"/></name></expr>)<pos:position pos:line="67" pos:column="17"/></condition><then pos:line="67" pos:column="17"> 
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="5">dopr_outch<pos:position pos:line="68" pos:column="15"/></name> <argument_list pos:line="68" pos:column="16">(<argument><expr><name pos:line="68" pos:column="17">buffer<pos:position pos:line="68" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="25">currlen<pos:position pos:line="68" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="34">maxlen<pos:position pos:line="68" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="42">signvalue<pos:position pos:line="68" pos:column="51"/></name></expr></argument>)<pos:position pos:line="68" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="53"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="70" pos:column="3">/* Zeros */</comment>
  <if pos:line="71" pos:column="3">if <condition pos:line="71" pos:column="6">(<expr><name pos:line="71" pos:column="7">zpadlen<pos:position pos:line="71" pos:column="14"/></name> <operator pos:line="71" pos:column="15">&gt;<pos:position pos:line="71" pos:column="19"/></operator> <literal type="number" pos:line="71" pos:column="17">0<pos:position pos:line="71" pos:column="18"/></literal></expr>)<pos:position pos:line="71" pos:column="19"/></condition><then pos:line="71" pos:column="19"> 
  <block pos:line="72" pos:column="3">{
    <while pos:line="73" pos:column="5">while <condition pos:line="73" pos:column="11">(<expr><name pos:line="73" pos:column="12">zpadlen<pos:position pos:line="73" pos:column="19"/></name> <operator pos:line="73" pos:column="20">&gt;<pos:position pos:line="73" pos:column="24"/></operator> <literal type="number" pos:line="73" pos:column="22">0<pos:position pos:line="73" pos:column="23"/></literal></expr>)<pos:position pos:line="73" pos:column="24"/></condition>
    <block pos:line="74" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="75" pos:column="7">dopr_outch<pos:position pos:line="75" pos:column="17"/></name> <argument_list pos:line="75" pos:column="18">(<argument><expr><name pos:line="75" pos:column="19">buffer<pos:position pos:line="75" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="27">currlen<pos:position pos:line="75" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="36">maxlen<pos:position pos:line="75" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="75" pos:column="44">'0'<pos:position pos:line="75" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="76" pos:column="7">--<pos:position pos:line="76" pos:column="9"/></operator><name pos:line="76" pos:column="9">zpadlen<pos:position pos:line="76" pos:column="16"/></name></expr>;<pos:position pos:line="76" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="77" pos:column="6"/></block></while>
  }<pos:position pos:line="78" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="80" pos:column="3">/* Digits */</comment>
  <while pos:line="81" pos:column="3">while <condition pos:line="81" pos:column="9">(<expr><name pos:line="81" pos:column="10">place<pos:position pos:line="81" pos:column="15"/></name> <operator pos:line="81" pos:column="16">&gt;<pos:position pos:line="81" pos:column="20"/></operator> <literal type="number" pos:line="81" pos:column="18">0<pos:position pos:line="81" pos:column="19"/></literal></expr>)<pos:position pos:line="81" pos:column="20"/></condition> 
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="82" pos:column="5">dopr_outch<pos:position pos:line="82" pos:column="15"/></name> <argument_list pos:line="82" pos:column="16">(<argument><expr><name pos:line="82" pos:column="17">buffer<pos:position pos:line="82" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="25">currlen<pos:position pos:line="82" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="34">maxlen<pos:position pos:line="82" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="42">convert<pos:position pos:line="82" pos:column="49"/></name><index pos:line="82" pos:column="49">[<expr><operator pos:line="82" pos:column="50">--<pos:position pos:line="82" pos:column="52"/></operator><name pos:line="82" pos:column="52">place<pos:position pos:line="82" pos:column="57"/></name></expr>]<pos:position pos:line="82" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="82" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="60"/></expr_stmt></block></while>
  
  <comment type="block" pos:line="84" pos:column="3">/* Left Justified spaces */</comment>
  <while pos:line="85" pos:column="3">while <condition pos:line="85" pos:column="9">(<expr><name pos:line="85" pos:column="10">spadlen<pos:position pos:line="85" pos:column="17"/></name> <operator pos:line="85" pos:column="18">&lt;<pos:position pos:line="85" pos:column="22"/></operator> <literal type="number" pos:line="85" pos:column="20">0<pos:position pos:line="85" pos:column="21"/></literal></expr>)<pos:position pos:line="85" pos:column="22"/></condition> <block pos:line="85" pos:column="23">{
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">dopr_outch<pos:position pos:line="86" pos:column="15"/></name> <argument_list pos:line="86" pos:column="16">(<argument><expr><name pos:line="86" pos:column="17">buffer<pos:position pos:line="86" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="25">currlen<pos:position pos:line="86" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="34">maxlen<pos:position pos:line="86" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="86" pos:column="42">' '<pos:position pos:line="86" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="87" pos:column="5">++<pos:position pos:line="87" pos:column="7"/></operator><name pos:line="87" pos:column="7">spadlen<pos:position pos:line="87" pos:column="14"/></name></expr>;<pos:position pos:line="87" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="88" pos:column="4"/></block></while>
}<pos:position pos:line="89" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1305_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">imap_make_msg_set<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">IMAP_DATA<pos:position pos:line="1" pos:column="33"/></name><modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type> <name pos:line="1" pos:column="35">idata<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">BUFFER<pos:position pos:line="1" pos:column="48"/></name><modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type> <name pos:line="1" pos:column="50">buf<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">int<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">flag<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">int<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">changed<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">HEADER<pos:position pos:line="3" pos:column="9"/></name><modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier><modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type> <name pos:line="3" pos:column="12">hdrs<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>	<comment type="block" pos:line="3" pos:column="25">/* sorted local copy */</comment>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">count<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><literal type="number" pos:line="4" pos:column="15">0<pos:position pos:line="4" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>	<comment type="block" pos:line="4" pos:column="25">/* number of messages in message set */</comment>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">match<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><literal type="number" pos:line="5" pos:column="15">0<pos:position pos:line="5" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>	<comment type="block" pos:line="5" pos:column="25">/* whether current message matches flag condition */</comment>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">int<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">setstart<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><literal type="number" pos:line="6" pos:column="27">0<pos:position pos:line="6" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>	<comment type="block" pos:line="6" pos:column="33">/* start of current message range */</comment>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">n<pos:position pos:line="7" pos:column="8"/></name></decl>;<pos:position pos:line="7" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">short<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">oldsort<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>	<comment type="block" pos:line="8" pos:column="25">/* we clobber reverse, must restore it */</comment>
  <comment type="block" pos:line="9" pos:column="3">/* assuming 32-bit UIDs */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name></type> <name><name pos:line="10" pos:column="8">uid<pos:position pos:line="10" pos:column="11"/></name><index pos:line="10" pos:column="11">[<expr><literal type="number" pos:line="10" pos:column="12">12<pos:position pos:line="10" pos:column="14"/></literal></expr>]<pos:position pos:line="10" pos:column="15"/></index></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">started<pos:position pos:line="11" pos:column="14"/></name> <init pos:line="11" pos:column="15">= <expr><literal type="number" pos:line="11" pos:column="17">0<pos:position pos:line="11" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>

  <comment type="block" pos:line="13" pos:column="3">/* make copy of header pointers to sort in natural order */</comment>
  <expr_stmt><expr><name pos:line="14" pos:column="3">hdrs<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">=<pos:position pos:line="14" pos:column="9"/></operator> <call><name pos:line="14" pos:column="10">safe_calloc<pos:position pos:line="14" pos:column="21"/></name> <argument_list pos:line="14" pos:column="22">(<argument><expr><name><name pos:line="14" pos:column="23">idata<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">ctx<pos:position pos:line="14" pos:column="33"/></name><operator pos:line="14" pos:column="33">-&gt;<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="35">msgcount<pos:position pos:line="14" pos:column="43"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="45">sizeof <argument_list pos:line="14" pos:column="52">(<argument><expr><name pos:line="14" pos:column="53">HEADER<pos:position pos:line="14" pos:column="59"/></name><operator pos:line="14" pos:column="59">*<pos:position pos:line="14" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="63"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">memcpy<pos:position pos:line="15" pos:column="9"/></name> <argument_list pos:line="15" pos:column="10">(<argument><expr><name pos:line="15" pos:column="11">hdrs<pos:position pos:line="15" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="17">idata<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">ctx<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">-&gt;<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="29">hdrs<pos:position pos:line="15" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="35">idata<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">-&gt;<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="42">ctx<pos:position pos:line="15" pos:column="45"/></name><operator pos:line="15" pos:column="45">-&gt;<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="47">msgcount<pos:position pos:line="15" pos:column="55"/></name></name> <operator pos:line="15" pos:column="56">*<pos:position pos:line="15" pos:column="57"/></operator> <sizeof pos:line="15" pos:column="58">sizeof <argument_list pos:line="15" pos:column="65">(<argument><expr><name pos:line="15" pos:column="66">HEADER<pos:position pos:line="15" pos:column="72"/></name><operator pos:line="15" pos:column="72">*<pos:position pos:line="15" pos:column="73"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="76"/></expr_stmt>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">Sort<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">!=<pos:position pos:line="17" pos:column="14"/></operator> <name pos:line="17" pos:column="15">SORT_ORDER<pos:position pos:line="17" pos:column="25"/></name></expr>)<pos:position pos:line="17" pos:column="26"/></condition><then pos:line="17" pos:column="26">
  <block pos:line="18" pos:column="3">{
    <expr_stmt><expr><name pos:line="19" pos:column="5">oldsort<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <name pos:line="19" pos:column="15">Sort<pos:position pos:line="19" pos:column="19"/></name></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">Sort<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator> <name pos:line="20" pos:column="12">SORT_ORDER<pos:position pos:line="20" pos:column="22"/></name></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">qsort<pos:position pos:line="21" pos:column="10"/></name> <argument_list pos:line="21" pos:column="11">(<argument><expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">void<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">*<pos:position pos:line="21" pos:column="18"/></operator><operator pos:line="21" pos:column="18">)<pos:position pos:line="21" pos:column="19"/></operator> <name pos:line="21" pos:column="20">hdrs<pos:position pos:line="21" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="26">idata<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">-&gt;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="33">ctx<pos:position pos:line="21" pos:column="36"/></name><operator pos:line="21" pos:column="36">-&gt;<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="38">msgcount<pos:position pos:line="21" pos:column="46"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="48">sizeof <argument_list pos:line="21" pos:column="55">(<argument><expr><name pos:line="21" pos:column="56">HEADER<pos:position pos:line="21" pos:column="62"/></name><operator pos:line="21" pos:column="62">*<pos:position pos:line="21" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></sizeof></expr></argument>,
      <argument><expr><call><name pos:line="22" pos:column="7">mutt_get_sort_func<pos:position pos:line="22" pos:column="25"/></name> <argument_list pos:line="22" pos:column="26">(<argument><expr><name pos:line="22" pos:column="27">SORT_ORDER<pos:position pos:line="22" pos:column="37"/></name></expr></argument>)<pos:position pos:line="22" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">Sort<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">=<pos:position pos:line="23" pos:column="11"/></operator> <name pos:line="23" pos:column="12">oldsort<pos:position pos:line="23" pos:column="19"/></name></expr>;<pos:position pos:line="23" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>
  
  <for pos:line="26" pos:column="3">for <control pos:line="26" pos:column="7">(<init><expr><name pos:line="26" pos:column="8">n<pos:position pos:line="26" pos:column="9"/></name> <operator pos:line="26" pos:column="10">=<pos:position pos:line="26" pos:column="11"/></operator> <literal type="number" pos:line="26" pos:column="12">0<pos:position pos:line="26" pos:column="13"/></literal></expr>;<pos:position pos:line="26" pos:column="14"/></init> <condition><expr><name pos:line="26" pos:column="15">n<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">&lt;<pos:position pos:line="26" pos:column="21"/></operator> <name><name pos:line="26" pos:column="19">idata<pos:position pos:line="26" pos:column="24"/></name><operator pos:line="26" pos:column="24">-&gt;<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="26">ctx<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">-&gt;<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="31">msgcount<pos:position pos:line="26" pos:column="39"/></name></name></expr>;<pos:position pos:line="26" pos:column="40"/></condition> <incr><expr><name pos:line="26" pos:column="41">n<pos:position pos:line="26" pos:column="42"/></name><operator pos:line="26" pos:column="42">++<pos:position pos:line="26" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="45"/></control>
  <block pos:line="27" pos:column="3">{
    <expr_stmt><expr><name pos:line="28" pos:column="5">match<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <literal type="number" pos:line="28" pos:column="13">0<pos:position pos:line="28" pos:column="14"/></literal></expr>;<pos:position pos:line="28" pos:column="15"/></expr_stmt>
    <comment type="block" pos:line="29" pos:column="5">/* don't include pending expunged messages */</comment>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name><name pos:line="30" pos:column="9">hdrs<pos:position pos:line="30" pos:column="13"/></name><index pos:line="30" pos:column="13">[<expr><name pos:line="30" pos:column="14">n<pos:position pos:line="30" pos:column="15"/></name></expr>]<pos:position pos:line="30" pos:column="16"/></index></name><operator pos:line="30" pos:column="16">-&gt;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="18">active<pos:position pos:line="30" pos:column="24"/></name></expr>)<pos:position pos:line="30" pos:column="25"/></condition><then pos:line="30" pos:column="25">
      <block type="pseudo"><switch pos:line="31" pos:column="7">switch <condition pos:line="31" pos:column="14">(<expr><name pos:line="31" pos:column="15">flag<pos:position pos:line="31" pos:column="19"/></name></expr>)<pos:position pos:line="31" pos:column="20"/></condition>
      <block pos:line="32" pos:column="7">{
        <case pos:line="33" pos:column="9">case <expr><name pos:line="33" pos:column="14">M_DELETE<pos:position pos:line="33" pos:column="22"/></name></expr>:<pos:position pos:line="33" pos:column="23"/></case>
	  <if pos:line="34" pos:column="11">if <condition pos:line="34" pos:column="14">(<expr><name><name pos:line="34" pos:column="15">hdrs<pos:position pos:line="34" pos:column="19"/></name><index pos:line="34" pos:column="19">[<expr><name pos:line="34" pos:column="20">n<pos:position pos:line="34" pos:column="21"/></name></expr>]<pos:position pos:line="34" pos:column="22"/></index></name><operator pos:line="34" pos:column="22">-&gt;<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="24">deleted<pos:position pos:line="34" pos:column="31"/></name></expr>)<pos:position pos:line="34" pos:column="32"/></condition><then pos:line="34" pos:column="32">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="13">match<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <literal type="number" pos:line="35" pos:column="21">1<pos:position pos:line="35" pos:column="22"/></literal></expr>;<pos:position pos:line="35" pos:column="23"/></expr_stmt></block></then></if>
	  <break pos:line="36" pos:column="11">break;<pos:position pos:line="36" pos:column="17"/></break>
        <case pos:line="37" pos:column="9">case <expr><name pos:line="37" pos:column="14">M_TAG<pos:position pos:line="37" pos:column="19"/></name></expr>:<pos:position pos:line="37" pos:column="20"/></case>
	  <if pos:line="38" pos:column="11">if <condition pos:line="38" pos:column="14">(<expr><name><name pos:line="38" pos:column="15">hdrs<pos:position pos:line="38" pos:column="19"/></name><index pos:line="38" pos:column="19">[<expr><name pos:line="38" pos:column="20">n<pos:position pos:line="38" pos:column="21"/></name></expr>]<pos:position pos:line="38" pos:column="22"/></index></name><operator pos:line="38" pos:column="22">-&gt;<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="24">tagged<pos:position pos:line="38" pos:column="30"/></name></expr>)<pos:position pos:line="38" pos:column="31"/></condition><then pos:line="38" pos:column="31">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="13">match<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">=<pos:position pos:line="39" pos:column="20"/></operator> <literal type="number" pos:line="39" pos:column="21">1<pos:position pos:line="39" pos:column="22"/></literal></expr>;<pos:position pos:line="39" pos:column="23"/></expr_stmt></block></then></if>
	  <break pos:line="40" pos:column="11">break;<pos:position pos:line="40" pos:column="17"/></break>
      }<pos:position pos:line="41" pos:column="8"/></block></switch></block></then></if>

    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">match<pos:position pos:line="43" pos:column="14"/></name> <operator pos:line="43" pos:column="15">&amp;&amp;<pos:position pos:line="43" pos:column="25"/></operator> <operator pos:line="43" pos:column="18">(<pos:position pos:line="43" pos:column="19"/></operator><operator pos:line="43" pos:column="19">!<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="20">changed<pos:position pos:line="43" pos:column="27"/></name> <operator pos:line="43" pos:column="28">||<pos:position pos:line="43" pos:column="30"/></operator> <name><name pos:line="43" pos:column="31">hdrs<pos:position pos:line="43" pos:column="35"/></name><index pos:line="43" pos:column="35">[<expr><name pos:line="43" pos:column="36">n<pos:position pos:line="43" pos:column="37"/></name></expr>]<pos:position pos:line="43" pos:column="38"/></index></name><operator pos:line="43" pos:column="38">-&gt;<pos:position pos:line="43" pos:column="43"/></operator><name pos:line="43" pos:column="40">changed<pos:position pos:line="43" pos:column="47"/></name><operator pos:line="43" pos:column="47">)<pos:position pos:line="43" pos:column="48"/></operator></expr>)<pos:position pos:line="43" pos:column="49"/></condition><then pos:line="43" pos:column="49">
    <block pos:line="44" pos:column="5">{
      <expr_stmt><expr><name pos:line="45" pos:column="7">count<pos:position pos:line="45" pos:column="12"/></name><operator pos:line="45" pos:column="12">++<pos:position pos:line="45" pos:column="14"/></operator></expr>;<pos:position pos:line="45" pos:column="15"/></expr_stmt>
      <if pos:line="46" pos:column="7">if <condition pos:line="46" pos:column="10">(<expr><name pos:line="46" pos:column="11">setstart<pos:position pos:line="46" pos:column="19"/></name> <operator pos:line="46" pos:column="20">==<pos:position pos:line="46" pos:column="22"/></operator> <literal type="number" pos:line="46" pos:column="23">0<pos:position pos:line="46" pos:column="24"/></literal></expr>)<pos:position pos:line="46" pos:column="25"/></condition><then pos:line="46" pos:column="25">
      <block pos:line="47" pos:column="7">{
        <expr_stmt><expr><name pos:line="48" pos:column="9">setstart<pos:position pos:line="48" pos:column="17"/></name> <operator pos:line="48" pos:column="18">=<pos:position pos:line="48" pos:column="19"/></operator> <call><name pos:line="48" pos:column="20">HEADER_DATA<pos:position pos:line="48" pos:column="31"/></name> <argument_list pos:line="48" pos:column="32">(<argument><expr><name><name pos:line="48" pos:column="33">hdrs<pos:position pos:line="48" pos:column="37"/></name><index pos:line="48" pos:column="37">[<expr><name pos:line="48" pos:column="38">n<pos:position pos:line="48" pos:column="39"/></name></expr>]<pos:position pos:line="48" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="48" pos:column="41"/></argument_list></call><operator pos:line="48" pos:column="41">-&gt;<pos:position pos:line="48" pos:column="46"/></operator><name pos:line="48" pos:column="43">uid<pos:position pos:line="48" pos:column="46"/></name></expr>;<pos:position pos:line="48" pos:column="47"/></expr_stmt>
        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">started<pos:position pos:line="49" pos:column="20"/></name> <operator pos:line="49" pos:column="21">==<pos:position pos:line="49" pos:column="23"/></operator> <literal type="number" pos:line="49" pos:column="24">0<pos:position pos:line="49" pos:column="25"/></literal></expr>)<pos:position pos:line="49" pos:column="26"/></condition><then pos:line="49" pos:column="26">
	<block pos:line="50" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="51" pos:column="11">snprintf<pos:position pos:line="51" pos:column="19"/></name> <argument_list pos:line="51" pos:column="20">(<argument><expr><name pos:line="51" pos:column="21">uid<pos:position pos:line="51" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="26">sizeof <argument_list pos:line="51" pos:column="33">(<argument><expr><name pos:line="51" pos:column="34">uid<pos:position pos:line="51" pos:column="37"/></name></expr></argument>)<pos:position pos:line="51" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="40">"%u"<pos:position pos:line="51" pos:column="44"/></literal></expr></argument>, <argument><expr><call><name pos:line="51" pos:column="46">HEADER_DATA<pos:position pos:line="51" pos:column="57"/></name> <argument_list pos:line="51" pos:column="58">(<argument><expr><name><name pos:line="51" pos:column="59">hdrs<pos:position pos:line="51" pos:column="63"/></name><index pos:line="51" pos:column="63">[<expr><name pos:line="51" pos:column="64">n<pos:position pos:line="51" pos:column="65"/></name></expr>]<pos:position pos:line="51" pos:column="66"/></index></name></expr></argument>)<pos:position pos:line="51" pos:column="67"/></argument_list></call><operator pos:line="51" pos:column="67">-&gt;<pos:position pos:line="51" pos:column="72"/></operator><name pos:line="51" pos:column="69">uid<pos:position pos:line="51" pos:column="72"/></name></expr></argument>)<pos:position pos:line="51" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="74"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="52" pos:column="11">mutt_buffer_addstr<pos:position pos:line="52" pos:column="29"/></name> <argument_list pos:line="52" pos:column="30">(<argument><expr><name pos:line="52" pos:column="31">buf<pos:position pos:line="52" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="36">uid<pos:position pos:line="52" pos:column="39"/></name></expr></argument>)<pos:position pos:line="52" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="41"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="53" pos:column="11">started<pos:position pos:line="53" pos:column="18"/></name> <operator pos:line="53" pos:column="19">=<pos:position pos:line="53" pos:column="20"/></operator> <literal type="number" pos:line="53" pos:column="21">1<pos:position pos:line="53" pos:column="22"/></literal></expr>;<pos:position pos:line="53" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="54" pos:column="10"/></block></then>
        <else pos:line="55" pos:column="9">else
        <block pos:line="56" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="57" pos:column="11">snprintf<pos:position pos:line="57" pos:column="19"/></name> <argument_list pos:line="57" pos:column="20">(<argument><expr><name pos:line="57" pos:column="21">uid<pos:position pos:line="57" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="57" pos:column="26">sizeof <argument_list pos:line="57" pos:column="33">(<argument><expr><name pos:line="57" pos:column="34">uid<pos:position pos:line="57" pos:column="37"/></name></expr></argument>)<pos:position pos:line="57" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="40">",%u"<pos:position pos:line="57" pos:column="45"/></literal></expr></argument>, <argument><expr><call><name pos:line="57" pos:column="47">HEADER_DATA<pos:position pos:line="57" pos:column="58"/></name> <argument_list pos:line="57" pos:column="59">(<argument><expr><name><name pos:line="57" pos:column="60">hdrs<pos:position pos:line="57" pos:column="64"/></name><index pos:line="57" pos:column="64">[<expr><name pos:line="57" pos:column="65">n<pos:position pos:line="57" pos:column="66"/></name></expr>]<pos:position pos:line="57" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="57" pos:column="68"/></argument_list></call><operator pos:line="57" pos:column="68">-&gt;<pos:position pos:line="57" pos:column="73"/></operator><name pos:line="57" pos:column="70">uid<pos:position pos:line="57" pos:column="73"/></name></expr></argument>)<pos:position pos:line="57" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="75"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="58" pos:column="11">mutt_buffer_addstr<pos:position pos:line="58" pos:column="29"/></name> <argument_list pos:line="58" pos:column="30">(<argument><expr><name pos:line="58" pos:column="31">buf<pos:position pos:line="58" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="36">uid<pos:position pos:line="58" pos:column="39"/></name></expr></argument>)<pos:position pos:line="58" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="59" pos:column="10"/></block></else></if>
      }<pos:position pos:line="60" pos:column="8"/></block></then>
      <comment type="block" pos:line="61" pos:column="7">/* tie up if the last message also matches */</comment>
      <elseif pos:line="62" pos:column="7">else <if pos:line="62" pos:column="12">if <condition pos:line="62" pos:column="15">(<expr><name pos:line="62" pos:column="16">n<pos:position pos:line="62" pos:column="17"/></name> <operator pos:line="62" pos:column="18">==<pos:position pos:line="62" pos:column="20"/></operator> <name><name pos:line="62" pos:column="21">idata<pos:position pos:line="62" pos:column="26"/></name><operator pos:line="62" pos:column="26">-&gt;<pos:position pos:line="62" pos:column="31"/></operator><name pos:line="62" pos:column="28">ctx<pos:position pos:line="62" pos:column="31"/></name><operator pos:line="62" pos:column="31">-&gt;<pos:position pos:line="62" pos:column="36"/></operator><name pos:line="62" pos:column="33">msgcount<pos:position pos:line="62" pos:column="41"/></name></name><operator pos:line="62" pos:column="41">-<pos:position pos:line="62" pos:column="42"/></operator><literal type="number" pos:line="62" pos:column="42">1<pos:position pos:line="62" pos:column="43"/></literal></expr>)<pos:position pos:line="62" pos:column="44"/></condition><then pos:line="62" pos:column="44">
      <block pos:line="63" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="64" pos:column="9">snprintf<pos:position pos:line="64" pos:column="17"/></name> <argument_list pos:line="64" pos:column="18">(<argument><expr><name pos:line="64" pos:column="19">uid<pos:position pos:line="64" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="64" pos:column="24">sizeof <argument_list pos:line="64" pos:column="31">(<argument><expr><name pos:line="64" pos:column="32">uid<pos:position pos:line="64" pos:column="35"/></name></expr></argument>)<pos:position pos:line="64" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="38">":%u"<pos:position pos:line="64" pos:column="43"/></literal></expr></argument>, <argument><expr><call><name pos:line="64" pos:column="45">HEADER_DATA<pos:position pos:line="64" pos:column="56"/></name> <argument_list pos:line="64" pos:column="57">(<argument><expr><name><name pos:line="64" pos:column="58">hdrs<pos:position pos:line="64" pos:column="62"/></name><index pos:line="64" pos:column="62">[<expr><name pos:line="64" pos:column="63">n<pos:position pos:line="64" pos:column="64"/></name></expr>]<pos:position pos:line="64" pos:column="65"/></index></name></expr></argument>)<pos:position pos:line="64" pos:column="66"/></argument_list></call><operator pos:line="64" pos:column="66">-&gt;<pos:position pos:line="64" pos:column="71"/></operator><name pos:line="64" pos:column="68">uid<pos:position pos:line="64" pos:column="71"/></name></expr></argument>)<pos:position pos:line="64" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="73"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="65" pos:column="9">mutt_buffer_addstr<pos:position pos:line="65" pos:column="27"/></name> <argument_list pos:line="65" pos:column="28">(<argument><expr><name pos:line="65" pos:column="29">buf<pos:position pos:line="65" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="34">uid<pos:position pos:line="65" pos:column="37"/></name></expr></argument>)<pos:position pos:line="65" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="39"/></expr_stmt>
      }<pos:position pos:line="66" pos:column="8"/></block></then></if></elseif></if>
    }<pos:position pos:line="67" pos:column="6"/></block></then>
    <comment type="block" pos:line="68" pos:column="5">/* this message is not expunged and doesn't match. End current set. */</comment>
    <elseif pos:line="69" pos:column="5">else <if pos:line="69" pos:column="10">if <condition pos:line="69" pos:column="13">(<expr><name pos:line="69" pos:column="14">setstart<pos:position pos:line="69" pos:column="22"/></name> <operator pos:line="69" pos:column="23">&amp;&amp;<pos:position pos:line="69" pos:column="33"/></operator> <name><name pos:line="69" pos:column="26">hdrs<pos:position pos:line="69" pos:column="30"/></name><index pos:line="69" pos:column="30">[<expr><name pos:line="69" pos:column="31">n<pos:position pos:line="69" pos:column="32"/></name></expr>]<pos:position pos:line="69" pos:column="33"/></index></name><operator pos:line="69" pos:column="33">-&gt;<pos:position pos:line="69" pos:column="38"/></operator><name pos:line="69" pos:column="35">active<pos:position pos:line="69" pos:column="41"/></name></expr>)<pos:position pos:line="69" pos:column="42"/></condition><then pos:line="69" pos:column="42">
    <block pos:line="70" pos:column="5">{
      <if pos:line="71" pos:column="7">if <condition pos:line="71" pos:column="10">(<expr><call><name pos:line="71" pos:column="11">HEADER_DATA<pos:position pos:line="71" pos:column="22"/></name> <argument_list pos:line="71" pos:column="23">(<argument><expr><name><name pos:line="71" pos:column="24">hdrs<pos:position pos:line="71" pos:column="28"/></name><index pos:line="71" pos:column="28">[<expr><name pos:line="71" pos:column="29">n<pos:position pos:line="71" pos:column="30"/></name><operator pos:line="71" pos:column="30">-<pos:position pos:line="71" pos:column="31"/></operator><literal type="number" pos:line="71" pos:column="31">1<pos:position pos:line="71" pos:column="32"/></literal></expr>]<pos:position pos:line="71" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="71" pos:column="34"/></argument_list></call><operator pos:line="71" pos:column="34">-&gt;<pos:position pos:line="71" pos:column="39"/></operator><name pos:line="71" pos:column="36">uid<pos:position pos:line="71" pos:column="39"/></name> <operator pos:line="71" pos:column="40">&gt;<pos:position pos:line="71" pos:column="44"/></operator> <name pos:line="71" pos:column="42">setstart<pos:position pos:line="71" pos:column="50"/></name></expr>)<pos:position pos:line="71" pos:column="51"/></condition><then pos:line="71" pos:column="51">
      <block pos:line="72" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="73" pos:column="9">snprintf<pos:position pos:line="73" pos:column="17"/></name> <argument_list pos:line="73" pos:column="18">(<argument><expr><name pos:line="73" pos:column="19">uid<pos:position pos:line="73" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="73" pos:column="24">sizeof <argument_list pos:line="73" pos:column="31">(<argument><expr><name pos:line="73" pos:column="32">uid<pos:position pos:line="73" pos:column="35"/></name></expr></argument>)<pos:position pos:line="73" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="38">":%u"<pos:position pos:line="73" pos:column="43"/></literal></expr></argument>, <argument><expr><call><name pos:line="73" pos:column="45">HEADER_DATA<pos:position pos:line="73" pos:column="56"/></name> <argument_list pos:line="73" pos:column="57">(<argument><expr><name><name pos:line="73" pos:column="58">hdrs<pos:position pos:line="73" pos:column="62"/></name><index pos:line="73" pos:column="62">[<expr><name pos:line="73" pos:column="63">n<pos:position pos:line="73" pos:column="64"/></name><operator pos:line="73" pos:column="64">-<pos:position pos:line="73" pos:column="65"/></operator><literal type="number" pos:line="73" pos:column="65">1<pos:position pos:line="73" pos:column="66"/></literal></expr>]<pos:position pos:line="73" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="73" pos:column="68"/></argument_list></call><operator pos:line="73" pos:column="68">-&gt;<pos:position pos:line="73" pos:column="73"/></operator><name pos:line="73" pos:column="70">uid<pos:position pos:line="73" pos:column="73"/></name></expr></argument>)<pos:position pos:line="73" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="75"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="74" pos:column="9">mutt_buffer_addstr<pos:position pos:line="74" pos:column="27"/></name> <argument_list pos:line="74" pos:column="28">(<argument><expr><name pos:line="74" pos:column="29">buf<pos:position pos:line="74" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="34">uid<pos:position pos:line="74" pos:column="37"/></name></expr></argument>)<pos:position pos:line="74" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="39"/></expr_stmt>
      }<pos:position pos:line="75" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="76" pos:column="7">setstart<pos:position pos:line="76" pos:column="15"/></name> <operator pos:line="76" pos:column="16">=<pos:position pos:line="76" pos:column="17"/></operator> <literal type="number" pos:line="76" pos:column="18">0<pos:position pos:line="76" pos:column="19"/></literal></expr>;<pos:position pos:line="76" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="78" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="80" pos:column="3">safe_free<pos:position pos:line="80" pos:column="12"/></name> <argument_list pos:line="80" pos:column="13">(<argument><expr><operator pos:line="80" pos:column="14">(<pos:position pos:line="80" pos:column="15"/></operator><name pos:line="80" pos:column="15">void<pos:position pos:line="80" pos:column="19"/></name><operator pos:line="80" pos:column="19">*<pos:position pos:line="80" pos:column="20"/></operator><operator pos:line="80" pos:column="20">*<pos:position pos:line="80" pos:column="21"/></operator><operator pos:line="80" pos:column="21">)<pos:position pos:line="80" pos:column="22"/></operator> <operator pos:line="80" pos:column="23">&amp;<pos:position pos:line="80" pos:column="28"/></operator><name pos:line="80" pos:column="24">hdrs<pos:position pos:line="80" pos:column="28"/></name></expr></argument>)<pos:position pos:line="80" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="30"/></expr_stmt>

  <return pos:line="82" pos:column="3">return <expr><name pos:line="82" pos:column="10">count<pos:position pos:line="82" pos:column="15"/></name></expr>;<pos:position pos:line="82" pos:column="16"/></return>
}<pos:position pos:line="83" pos:column="2"/></block></function></unit>

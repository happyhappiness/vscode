<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_774_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">crypt_key_t<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type><name pos:line="1" pos:column="21">crypt_ask_for_key<pos:position pos:line="1" pos:column="38"/></name> <parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">tag<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, 
                                       <parameter><decl><type><name pos:line="2" pos:column="40">char<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">whatfor<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, 
                                       <parameter><decl><type><name pos:line="3" pos:column="40">short<pos:position pos:line="3" pos:column="45"/></name></type> <name pos:line="3" pos:column="46">abilities<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>,
				       <parameter><decl><type><name pos:line="4" pos:column="40">unsigned<pos:position pos:line="4" pos:column="48"/></name> <name pos:line="4" pos:column="49">int<pos:position pos:line="4" pos:column="52"/></name></type> <name pos:line="4" pos:column="53">app<pos:position pos:line="4" pos:column="56"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="5" pos:column="40">int<pos:position pos:line="5" pos:column="43"/></name> <modifier pos:line="5" pos:column="44">*<pos:position pos:line="5" pos:column="45"/></modifier></type><name pos:line="5" pos:column="45">forced_valid<pos:position pos:line="5" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="58"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">crypt_key_t<pos:position pos:line="7" pos:column="14"/></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">key<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">resp<pos:position pos:line="8" pos:column="12"/></name><index pos:line="8" pos:column="12">[<expr><name pos:line="8" pos:column="13">SHORT_STRING<pos:position pos:line="8" pos:column="25"/></name></expr>]<pos:position pos:line="8" pos:column="26"/></index></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">crypt_cache<pos:position pos:line="9" pos:column="21"/></name></name> <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier></type><name pos:line="9" pos:column="23">l<pos:position pos:line="9" pos:column="24"/></name> <init pos:line="9" pos:column="25">= <expr><name pos:line="9" pos:column="27">NULL<pos:position pos:line="9" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">dummy<pos:position pos:line="10" pos:column="12"/></name></decl>;<pos:position pos:line="10" pos:column="13"/></decl_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">forced_valid<pos:position pos:line="12" pos:column="20"/></name></expr>)<pos:position pos:line="12" pos:column="21"/></condition><then pos:line="12" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="5">forced_valid<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">=<pos:position pos:line="13" pos:column="19"/></operator> <operator pos:line="13" pos:column="20">&amp;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="21">dummy<pos:position pos:line="13" pos:column="26"/></name></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">mutt_clear_error<pos:position pos:line="15" pos:column="19"/></name> <argument_list pos:line="15" pos:column="20">()<pos:position pos:line="15" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="17" pos:column="3">*<pos:position pos:line="17" pos:column="4"/></operator><name pos:line="17" pos:column="4">forced_valid<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <literal type="number" pos:line="17" pos:column="19">0<pos:position pos:line="17" pos:column="20"/></literal></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">resp<pos:position pos:line="18" pos:column="7"/></name><index pos:line="18" pos:column="7">[<expr><literal type="number" pos:line="18" pos:column="8">0<pos:position pos:line="18" pos:column="9"/></literal></expr>]<pos:position pos:line="18" pos:column="10"/></index></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <literal type="number" pos:line="18" pos:column="13">0<pos:position pos:line="18" pos:column="14"/></literal></expr>;<pos:position pos:line="18" pos:column="15"/></expr_stmt>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">whatfor<pos:position pos:line="19" pos:column="14"/></name></expr>)<pos:position pos:line="19" pos:column="15"/></condition><then pos:line="19" pos:column="15">
    <block pos:line="20" pos:column="5">{
      
      <for pos:line="22" pos:column="7">for <control pos:line="22" pos:column="11">(<init><expr><name pos:line="22" pos:column="12">l<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <name pos:line="22" pos:column="16">id_defaults<pos:position pos:line="22" pos:column="27"/></name></expr>;<pos:position pos:line="22" pos:column="28"/></init> <condition><expr><name pos:line="22" pos:column="29">l<pos:position pos:line="22" pos:column="30"/></name></expr>;<pos:position pos:line="22" pos:column="31"/></condition> <incr><expr><name pos:line="22" pos:column="32">l<pos:position pos:line="22" pos:column="33"/></name> <operator pos:line="22" pos:column="34">=<pos:position pos:line="22" pos:column="35"/></operator> <name><name pos:line="22" pos:column="36">l<pos:position pos:line="22" pos:column="37"/></name><operator pos:line="22" pos:column="37">-&gt;<pos:position pos:line="22" pos:column="42"/></operator><name pos:line="22" pos:column="39">next<pos:position pos:line="22" pos:column="43"/></name></name></expr></incr>)<pos:position pos:line="22" pos:column="44"/></control>
        <block type="pseudo"><if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><call><name pos:line="23" pos:column="14">mutt_strcasecmp<pos:position pos:line="23" pos:column="29"/></name> <argument_list pos:line="23" pos:column="30">(<argument><expr><name pos:line="23" pos:column="31">whatfor<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="40">l<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">-&gt;<pos:position pos:line="23" pos:column="46"/></operator><name pos:line="23" pos:column="43">what<pos:position pos:line="23" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="49"/></condition><then pos:line="23" pos:column="49">
          <block pos:line="24" pos:column="11">{
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">strfcpy<pos:position pos:line="25" pos:column="20"/></name> <argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">resp<pos:position pos:line="25" pos:column="26"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="28">NONULL<pos:position pos:line="25" pos:column="34"/></name> <argument_list pos:line="25" pos:column="35">(<argument><expr><name><name pos:line="25" pos:column="36">l<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">-&gt;<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="39">dflt<pos:position pos:line="25" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="46">sizeof <argument_list pos:line="25" pos:column="53">(<argument><expr><name pos:line="25" pos:column="54">resp<pos:position pos:line="25" pos:column="58"/></name></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="61"/></expr_stmt>
            <break pos:line="26" pos:column="13">break;<pos:position pos:line="26" pos:column="19"/></break>
          }<pos:position pos:line="27" pos:column="12"/></block></then></if></block></for>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>


  <for pos:line="31" pos:column="3">for <control pos:line="31" pos:column="7">(<init pos:line="31" pos:column="8">;<pos:position pos:line="31" pos:column="9"/></init><condition pos:line="31" pos:column="9">;<pos:position pos:line="31" pos:column="10"/></condition><incr/>)<pos:position pos:line="31" pos:column="11"/></control>
    <block pos:line="32" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="33" pos:column="7">resp<pos:position pos:line="33" pos:column="11"/></name><index pos:line="33" pos:column="11">[<expr><literal type="number" pos:line="33" pos:column="12">0<pos:position pos:line="33" pos:column="13"/></literal></expr>]<pos:position pos:line="33" pos:column="14"/></index></name> <operator pos:line="33" pos:column="15">=<pos:position pos:line="33" pos:column="16"/></operator> <literal type="number" pos:line="33" pos:column="17">0<pos:position pos:line="33" pos:column="18"/></literal></expr>;<pos:position pos:line="33" pos:column="19"/></expr_stmt>
      <if pos:line="34" pos:column="7">if <condition pos:line="34" pos:column="10">(<expr><call><name pos:line="34" pos:column="11">mutt_get_field<pos:position pos:line="34" pos:column="25"/></name> <argument_list pos:line="34" pos:column="26">(<argument><expr><name pos:line="34" pos:column="27">tag<pos:position pos:line="34" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="32">resp<pos:position pos:line="34" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="38">sizeof <argument_list pos:line="34" pos:column="45">(<argument><expr><name pos:line="34" pos:column="46">resp<pos:position pos:line="34" pos:column="50"/></name></expr></argument>)<pos:position pos:line="34" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="34" pos:column="53">MUTT_CLEAR<pos:position pos:line="34" pos:column="63"/></name></expr></argument>)<pos:position pos:line="34" pos:column="64"/></argument_list></call> <operator pos:line="34" pos:column="65">!=<pos:position pos:line="34" pos:column="67"/></operator> <literal type="number" pos:line="34" pos:column="68">0<pos:position pos:line="34" pos:column="69"/></literal></expr>)<pos:position pos:line="34" pos:column="70"/></condition><then pos:line="34" pos:column="70">
        <block type="pseudo"><return pos:line="35" pos:column="9">return <expr><name pos:line="35" pos:column="16">NULL<pos:position pos:line="35" pos:column="20"/></name></expr>;<pos:position pos:line="35" pos:column="21"/></return></block></then></if>
      
      <if pos:line="37" pos:column="7">if <condition pos:line="37" pos:column="10">(<expr><name pos:line="37" pos:column="11">whatfor<pos:position pos:line="37" pos:column="18"/></name></expr>)<pos:position pos:line="37" pos:column="19"/></condition><then pos:line="37" pos:column="19">
        <block pos:line="38" pos:column="9">{
          <if pos:line="39" pos:column="11">if <condition pos:line="39" pos:column="14">(<expr><name pos:line="39" pos:column="15">l<pos:position pos:line="39" pos:column="16"/></name></expr>)<pos:position pos:line="39" pos:column="17"/></condition><then pos:line="39" pos:column="17">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="13">mutt_str_replace<pos:position pos:line="40" pos:column="29"/></name> <argument_list pos:line="40" pos:column="30">(<argument><expr><operator pos:line="40" pos:column="31">&amp;<pos:position pos:line="40" pos:column="36"/></operator><name><name pos:line="40" pos:column="32">l<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">-&gt;<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="35">dflt<pos:position pos:line="40" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="41">resp<pos:position pos:line="40" pos:column="45"/></name></expr></argument>)<pos:position pos:line="40" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="47"/></expr_stmt></block></then>
          <else pos:line="41" pos:column="11">else
            <block pos:line="42" pos:column="13">{
              <expr_stmt><expr><name pos:line="43" pos:column="15">l<pos:position pos:line="43" pos:column="16"/></name> <operator pos:line="43" pos:column="17">=<pos:position pos:line="43" pos:column="18"/></operator> <call><name pos:line="43" pos:column="19">safe_malloc<pos:position pos:line="43" pos:column="30"/></name> <argument_list pos:line="43" pos:column="31">(<argument><expr><sizeof pos:line="43" pos:column="32">sizeof <argument_list pos:line="43" pos:column="39">(<argument><expr pos:line="43" pos:column="40">struct <name pos:line="43" pos:column="47">crypt_cache<pos:position pos:line="43" pos:column="58"/></name></expr></argument>)<pos:position pos:line="43" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="43" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="61"/></expr_stmt>
              <expr_stmt><expr><name><name pos:line="44" pos:column="15">l<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">-&gt;<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="18">next<pos:position pos:line="44" pos:column="22"/></name></name> <operator pos:line="44" pos:column="23">=<pos:position pos:line="44" pos:column="24"/></operator> <name pos:line="44" pos:column="25">id_defaults<pos:position pos:line="44" pos:column="36"/></name></expr>;<pos:position pos:line="44" pos:column="37"/></expr_stmt>
              <expr_stmt><expr><name pos:line="45" pos:column="15">id_defaults<pos:position pos:line="45" pos:column="26"/></name> <operator pos:line="45" pos:column="27">=<pos:position pos:line="45" pos:column="28"/></operator> <name pos:line="45" pos:column="29">l<pos:position pos:line="45" pos:column="30"/></name></expr>;<pos:position pos:line="45" pos:column="31"/></expr_stmt>
              <expr_stmt><expr><name><name pos:line="46" pos:column="15">l<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">-&gt;<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="18">what<pos:position pos:line="46" pos:column="22"/></name></name> <operator pos:line="46" pos:column="23">=<pos:position pos:line="46" pos:column="24"/></operator> <call><name pos:line="46" pos:column="25">safe_strdup<pos:position pos:line="46" pos:column="36"/></name> <argument_list pos:line="46" pos:column="37">(<argument><expr><name pos:line="46" pos:column="38">whatfor<pos:position pos:line="46" pos:column="45"/></name></expr></argument>)<pos:position pos:line="46" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="47"/></expr_stmt>
              <expr_stmt><expr><name><name pos:line="47" pos:column="15">l<pos:position pos:line="47" pos:column="16"/></name><operator pos:line="47" pos:column="16">-&gt;<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="18">dflt<pos:position pos:line="47" pos:column="22"/></name></name> <operator pos:line="47" pos:column="23">=<pos:position pos:line="47" pos:column="24"/></operator> <call><name pos:line="47" pos:column="25">safe_strdup<pos:position pos:line="47" pos:column="36"/></name> <argument_list pos:line="47" pos:column="37">(<argument><expr><name pos:line="47" pos:column="38">resp<pos:position pos:line="47" pos:column="42"/></name></expr></argument>)<pos:position pos:line="47" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="44"/></expr_stmt>
            }<pos:position pos:line="48" pos:column="14"/></block></else></if>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if>
      
      <if pos:line="51" pos:column="7">if <condition pos:line="51" pos:column="10">(<expr><operator pos:line="51" pos:column="11">(<pos:position pos:line="51" pos:column="12"/></operator><name pos:line="51" pos:column="12">key<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">=<pos:position pos:line="51" pos:column="17"/></operator> <call><name pos:line="51" pos:column="18">crypt_getkeybystr<pos:position pos:line="51" pos:column="35"/></name> <argument_list pos:line="51" pos:column="36">(<argument><expr><name pos:line="51" pos:column="37">resp<pos:position pos:line="51" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="43">abilities<pos:position pos:line="51" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="54">app<pos:position pos:line="51" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="59">forced_valid<pos:position pos:line="51" pos:column="71"/></name></expr></argument>)<pos:position pos:line="51" pos:column="72"/></argument_list></call><operator pos:line="51" pos:column="72">)<pos:position pos:line="51" pos:column="73"/></operator></expr>)<pos:position pos:line="51" pos:column="74"/></condition><then pos:line="51" pos:column="74">
        <block type="pseudo"><return pos:line="52" pos:column="9">return <expr><name pos:line="52" pos:column="16">key<pos:position pos:line="52" pos:column="19"/></name></expr>;<pos:position pos:line="52" pos:column="20"/></return></block></then></if>
      
      <expr_stmt><expr><call><name pos:line="54" pos:column="7">BEEP<pos:position pos:line="54" pos:column="11"/></name> <argument_list pos:line="54" pos:column="12">()<pos:position pos:line="54" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></for>
  <comment type="block" pos:line="56" pos:column="3">/* not reached */</comment>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

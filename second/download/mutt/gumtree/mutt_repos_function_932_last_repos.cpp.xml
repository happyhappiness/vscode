<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_932_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_canonical_charset<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">dest<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">size_t<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">dlen<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">name<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">i<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">p<pos:position pos:line="4" pos:column="10"/></name></decl>, <modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="13">ext<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">in<pos:position pos:line="5" pos:column="10"/></name><index pos:line="5" pos:column="10">[<expr><name pos:line="5" pos:column="11">LONG_STRING<pos:position pos:line="5" pos:column="22"/></name></expr>]<pos:position pos:line="5" pos:column="23"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="5" pos:column="25">scratch<pos:position pos:line="5" pos:column="32"/></name><index pos:line="5" pos:column="32">[<expr><name pos:line="5" pos:column="33">LONG_STRING<pos:position pos:line="5" pos:column="44"/></name></expr>]<pos:position pos:line="5" pos:column="45"/></index></name></decl>;<pos:position pos:line="5" pos:column="46"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">strfcpy<pos:position pos:line="7" pos:column="10"/></name> <argument_list pos:line="7" pos:column="11">(<argument><expr><name pos:line="7" pos:column="12">in<pos:position pos:line="7" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="16">name<pos:position pos:line="7" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="22">sizeof <argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">in<pos:position pos:line="7" pos:column="32"/></name></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">(<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">ext<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">strchr<pos:position pos:line="8" pos:column="20"/></name> <argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">in<pos:position pos:line="8" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="26">'/'<pos:position pos:line="8" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call><operator pos:line="8" pos:column="30">)<pos:position pos:line="8" pos:column="31"/></operator></expr>)<pos:position pos:line="8" pos:column="32"/></condition><then pos:line="8" pos:column="32">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="9" pos:column="5">*<pos:position pos:line="9" pos:column="6"/></operator><name pos:line="9" pos:column="6">ext<pos:position pos:line="9" pos:column="9"/></name><operator pos:line="9" pos:column="9">++<pos:position pos:line="9" pos:column="11"/></operator> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <literal type="number" pos:line="9" pos:column="14">0<pos:position pos:line="9" pos:column="15"/></literal></expr>;<pos:position pos:line="9" pos:column="16"/></expr_stmt></block></then></if>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">!<pos:position pos:line="11" pos:column="8"/></operator><call><name pos:line="11" pos:column="8">ascii_strcasecmp<pos:position pos:line="11" pos:column="24"/></name> <argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">in<pos:position pos:line="11" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="30">"utf-8"<pos:position pos:line="11" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call> <operator pos:line="11" pos:column="39">||<pos:position pos:line="11" pos:column="41"/></operator> <operator pos:line="11" pos:column="42">!<pos:position pos:line="11" pos:column="43"/></operator><call><name pos:line="11" pos:column="43">ascii_strcasecmp<pos:position pos:line="11" pos:column="59"/></name> <argument_list pos:line="11" pos:column="60">(<argument><expr><name pos:line="11" pos:column="61">in<pos:position pos:line="11" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="65">"utf8"<pos:position pos:line="11" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="73"/></condition><then pos:line="11" pos:column="73">
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">strfcpy<pos:position pos:line="13" pos:column="12"/></name> <argument_list pos:line="13" pos:column="13">(<argument><expr><name pos:line="13" pos:column="14">dest<pos:position pos:line="13" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="20">"utf-8"<pos:position pos:line="13" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="29">dlen<pos:position pos:line="13" pos:column="33"/></name></expr></argument>)<pos:position pos:line="13" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>
    <goto pos:line="14" pos:column="5">goto <name pos:line="14" pos:column="10">out<pos:position pos:line="14" pos:column="13"/></name>;<pos:position pos:line="14" pos:column="14"/></goto>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="17" pos:column="3">/* catch some common iso-8859-something misspellings */</comment>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">!<pos:position pos:line="18" pos:column="8"/></operator><call><name pos:line="18" pos:column="8">ascii_strncasecmp<pos:position pos:line="18" pos:column="25"/></name> <argument_list pos:line="18" pos:column="26">(<argument><expr><name pos:line="18" pos:column="27">in<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="31">"8859"<pos:position pos:line="18" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="39">4<pos:position pos:line="18" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="41"/></argument_list></call> <operator pos:line="18" pos:column="42">&amp;&amp;<pos:position pos:line="18" pos:column="52"/></operator> <name><name pos:line="18" pos:column="45">in<pos:position pos:line="18" pos:column="47"/></name><index pos:line="18" pos:column="47">[<expr><literal type="number" pos:line="18" pos:column="48">4<pos:position pos:line="18" pos:column="49"/></literal></expr>]<pos:position pos:line="18" pos:column="50"/></index></name> <operator pos:line="18" pos:column="51">!=<pos:position pos:line="18" pos:column="53"/></operator> <literal type="char" pos:line="18" pos:column="54">'-'<pos:position pos:line="18" pos:column="57"/></literal></expr>)<pos:position pos:line="18" pos:column="58"/></condition><then pos:line="18" pos:column="58">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="5">snprintf<pos:position pos:line="19" pos:column="13"/></name> <argument_list pos:line="19" pos:column="14">(<argument><expr><name pos:line="19" pos:column="15">scratch<pos:position pos:line="19" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="24">sizeof <argument_list pos:line="19" pos:column="31">(<argument><expr><name pos:line="19" pos:column="32">scratch<pos:position pos:line="19" pos:column="39"/></name></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="42">"iso-8859-%s"<pos:position pos:line="19" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="57">in<pos:position pos:line="19" pos:column="59"/></name> <operator pos:line="19" pos:column="60">+<pos:position pos:line="19" pos:column="61"/></operator><literal type="number" pos:line="19" pos:column="61">4<pos:position pos:line="19" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="64"/></expr_stmt></block></then>
  <elseif pos:line="20" pos:column="3">else <if pos:line="20" pos:column="8">if <condition pos:line="20" pos:column="11">(<expr><operator pos:line="20" pos:column="12">!<pos:position pos:line="20" pos:column="13"/></operator><call><name pos:line="20" pos:column="13">ascii_strncasecmp<pos:position pos:line="20" pos:column="30"/></name> <argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">in<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="36">"8859-"<pos:position pos:line="20" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="45">5<pos:position pos:line="20" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="48"/></condition><then pos:line="20" pos:column="48">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="5">snprintf<pos:position pos:line="21" pos:column="13"/></name> <argument_list pos:line="21" pos:column="14">(<argument><expr><name pos:line="21" pos:column="15">scratch<pos:position pos:line="21" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="24">sizeof <argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">scratch<pos:position pos:line="21" pos:column="39"/></name></expr></argument>)<pos:position pos:line="21" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="42">"iso-8859-%s"<pos:position pos:line="21" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="57">in<pos:position pos:line="21" pos:column="59"/></name> <operator pos:line="21" pos:column="60">+<pos:position pos:line="21" pos:column="61"/></operator> <literal type="number" pos:line="21" pos:column="62">5<pos:position pos:line="21" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="65"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="22" pos:column="3">else <if pos:line="22" pos:column="8">if <condition pos:line="22" pos:column="11">(<expr><operator pos:line="22" pos:column="12">!<pos:position pos:line="22" pos:column="13"/></operator><call><name pos:line="22" pos:column="13">ascii_strncasecmp<pos:position pos:line="22" pos:column="30"/></name> <argument_list pos:line="22" pos:column="31">(<argument><expr><name pos:line="22" pos:column="32">in<pos:position pos:line="22" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="36">"iso8859"<pos:position pos:line="22" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="47">7<pos:position pos:line="22" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="49"/></argument_list></call> <operator pos:line="22" pos:column="50">&amp;&amp;<pos:position pos:line="22" pos:column="60"/></operator> <name><name pos:line="22" pos:column="53">in<pos:position pos:line="22" pos:column="55"/></name><index pos:line="22" pos:column="55">[<expr><literal type="number" pos:line="22" pos:column="56">7<pos:position pos:line="22" pos:column="57"/></literal></expr>]<pos:position pos:line="22" pos:column="58"/></index></name> <operator pos:line="22" pos:column="59">!=<pos:position pos:line="22" pos:column="61"/></operator> <literal type="char" pos:line="22" pos:column="62">'-'<pos:position pos:line="22" pos:column="65"/></literal></expr>)<pos:position pos:line="22" pos:column="66"/></condition><then pos:line="22" pos:column="66">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="5">snprintf<pos:position pos:line="23" pos:column="13"/></name> <argument_list pos:line="23" pos:column="14">(<argument><expr><name pos:line="23" pos:column="15">scratch<pos:position pos:line="23" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="24">sizeof <argument_list pos:line="23" pos:column="31">(<argument><expr><name pos:line="23" pos:column="32">scratch<pos:position pos:line="23" pos:column="39"/></name></expr></argument>)<pos:position pos:line="23" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="42">"iso_8859-%s"<pos:position pos:line="23" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="57">in<pos:position pos:line="23" pos:column="59"/></name> <operator pos:line="23" pos:column="60">+<pos:position pos:line="23" pos:column="61"/></operator> <literal type="number" pos:line="23" pos:column="62">7<pos:position pos:line="23" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="65"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="24" pos:column="3">else <if pos:line="24" pos:column="8">if <condition pos:line="24" pos:column="11">(<expr><operator pos:line="24" pos:column="12">!<pos:position pos:line="24" pos:column="13"/></operator><call><name pos:line="24" pos:column="13">ascii_strncasecmp<pos:position pos:line="24" pos:column="30"/></name> <argument_list pos:line="24" pos:column="31">(<argument><expr><name pos:line="24" pos:column="32">in<pos:position pos:line="24" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="36">"iso8859-"<pos:position pos:line="24" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="48">8<pos:position pos:line="24" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="51"/></condition><then pos:line="24" pos:column="51">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="5">snprintf<pos:position pos:line="25" pos:column="13"/></name> <argument_list pos:line="25" pos:column="14">(<argument><expr><name pos:line="25" pos:column="15">scratch<pos:position pos:line="25" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="24">sizeof <argument_list pos:line="25" pos:column="31">(<argument><expr><name pos:line="25" pos:column="32">scratch<pos:position pos:line="25" pos:column="39"/></name></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="42">"iso_8859-%s"<pos:position pos:line="25" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="57">in<pos:position pos:line="25" pos:column="59"/></name> <operator pos:line="25" pos:column="60">+<pos:position pos:line="25" pos:column="61"/></operator> <literal type="number" pos:line="25" pos:column="62">8<pos:position pos:line="25" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="65"/></expr_stmt></block></then></if></elseif>
  <else pos:line="26" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="5">strfcpy<pos:position pos:line="27" pos:column="12"/></name> <argument_list pos:line="27" pos:column="13">(<argument><expr><name pos:line="27" pos:column="14">scratch<pos:position pos:line="27" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="23">in<pos:position pos:line="27" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="27">sizeof <argument_list pos:line="27" pos:column="34">(<argument><expr><name pos:line="27" pos:column="35">scratch<pos:position pos:line="27" pos:column="42"/></name></expr></argument>)<pos:position pos:line="27" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="45"/></expr_stmt></block></else></if>

  <for pos:line="29" pos:column="3">for <control pos:line="29" pos:column="7">(<init><expr><name pos:line="29" pos:column="8">i<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">=<pos:position pos:line="29" pos:column="11"/></operator> <literal type="number" pos:line="29" pos:column="12">0<pos:position pos:line="29" pos:column="13"/></literal></expr>;<pos:position pos:line="29" pos:column="14"/></init> <condition><expr><name><name pos:line="29" pos:column="15">PreferredMIMENames<pos:position pos:line="29" pos:column="33"/></name><index pos:line="29" pos:column="33">[<expr><name pos:line="29" pos:column="34">i<pos:position pos:line="29" pos:column="35"/></name></expr>]<pos:position pos:line="29" pos:column="36"/></index></name><operator pos:line="29" pos:column="36">.<pos:position pos:line="29" pos:column="37"/></operator><name pos:line="29" pos:column="37">key<pos:position pos:line="29" pos:column="40"/></name></expr>;<pos:position pos:line="29" pos:column="41"/></condition> <incr><expr><name pos:line="29" pos:column="42">i<pos:position pos:line="29" pos:column="43"/></name><operator pos:line="29" pos:column="43">++<pos:position pos:line="29" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="29" pos:column="46"/></control>
    <block type="pseudo"><if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">!<pos:position pos:line="30" pos:column="10"/></operator><call><name pos:line="30" pos:column="10">ascii_strcasecmp<pos:position pos:line="30" pos:column="26"/></name> <argument_list pos:line="30" pos:column="27">(<argument><expr><name pos:line="30" pos:column="28">scratch<pos:position pos:line="30" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="37">PreferredMIMENames<pos:position pos:line="30" pos:column="55"/></name><index pos:line="30" pos:column="55">[<expr><name pos:line="30" pos:column="56">i<pos:position pos:line="30" pos:column="57"/></name></expr>]<pos:position pos:line="30" pos:column="58"/></index></name><operator pos:line="30" pos:column="58">.<pos:position pos:line="30" pos:column="59"/></operator><name pos:line="30" pos:column="59">key<pos:position pos:line="30" pos:column="62"/></name></expr></argument>)<pos:position pos:line="30" pos:column="63"/></argument_list></call> <operator pos:line="30" pos:column="64">||<pos:position pos:line="30" pos:column="66"/></operator>
	<operator pos:line="31" pos:column="9">!<pos:position pos:line="31" pos:column="10"/></operator><call><name pos:line="31" pos:column="10">mutt_strcasecmp<pos:position pos:line="31" pos:column="25"/></name> <argument_list pos:line="31" pos:column="26">(<argument><expr><name pos:line="31" pos:column="27">scratch<pos:position pos:line="31" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="36">PreferredMIMENames<pos:position pos:line="31" pos:column="54"/></name><index pos:line="31" pos:column="54">[<expr><name pos:line="31" pos:column="55">i<pos:position pos:line="31" pos:column="56"/></name></expr>]<pos:position pos:line="31" pos:column="57"/></index></name><operator pos:line="31" pos:column="57">.<pos:position pos:line="31" pos:column="58"/></operator><name pos:line="31" pos:column="58">key<pos:position pos:line="31" pos:column="61"/></name></expr></argument>)<pos:position pos:line="31" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="63"/></condition><then pos:line="31" pos:column="63">
    <block pos:line="32" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">strfcpy<pos:position pos:line="33" pos:column="14"/></name> <argument_list pos:line="33" pos:column="15">(<argument><expr><name pos:line="33" pos:column="16">dest<pos:position pos:line="33" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="22">PreferredMIMENames<pos:position pos:line="33" pos:column="40"/></name><index pos:line="33" pos:column="40">[<expr><name pos:line="33" pos:column="41">i<pos:position pos:line="33" pos:column="42"/></name></expr>]<pos:position pos:line="33" pos:column="43"/></index></name><operator pos:line="33" pos:column="43">.<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="44">pref<pos:position pos:line="33" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="50">dlen<pos:position pos:line="33" pos:column="54"/></name></expr></argument>)<pos:position pos:line="33" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="56"/></expr_stmt>
      <goto pos:line="34" pos:column="7">goto <name pos:line="34" pos:column="12">out<pos:position pos:line="34" pos:column="15"/></name>;<pos:position pos:line="34" pos:column="16"/></goto>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if></block></for>

  <expr_stmt><expr><call><name pos:line="37" pos:column="3">strfcpy<pos:position pos:line="37" pos:column="10"/></name> <argument_list pos:line="37" pos:column="11">(<argument><expr><name pos:line="37" pos:column="12">dest<pos:position pos:line="37" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="18">scratch<pos:position pos:line="37" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="27">dlen<pos:position pos:line="37" pos:column="31"/></name></expr></argument>)<pos:position pos:line="37" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="33"/></expr_stmt>

  <comment type="block" pos:line="39" pos:column="3">/* for cosmetics' sake, transform to lowercase. */</comment>
  <for pos:line="40" pos:column="3">for <control pos:line="40" pos:column="7">(<init><expr><name pos:line="40" pos:column="8">p<pos:position pos:line="40" pos:column="9"/></name> <operator pos:line="40" pos:column="10">=<pos:position pos:line="40" pos:column="11"/></operator> <name pos:line="40" pos:column="12">dest<pos:position pos:line="40" pos:column="16"/></name></expr>;<pos:position pos:line="40" pos:column="17"/></init> <condition><expr><operator pos:line="40" pos:column="18">*<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="19">p<pos:position pos:line="40" pos:column="20"/></name></expr>;<pos:position pos:line="40" pos:column="21"/></condition> <incr><expr><name pos:line="40" pos:column="22">p<pos:position pos:line="40" pos:column="23"/></name><operator pos:line="40" pos:column="23">++<pos:position pos:line="40" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="40" pos:column="26"/></control>
    <block type="pseudo"><expr_stmt><expr><operator pos:line="41" pos:column="5">*<pos:position pos:line="41" pos:column="6"/></operator><name pos:line="41" pos:column="6">p<pos:position pos:line="41" pos:column="7"/></name> <operator pos:line="41" pos:column="8">=<pos:position pos:line="41" pos:column="9"/></operator> <call><name pos:line="41" pos:column="10">ascii_tolower<pos:position pos:line="41" pos:column="23"/></name> <argument_list pos:line="41" pos:column="24">(<argument><expr><operator pos:line="41" pos:column="25">*<pos:position pos:line="41" pos:column="26"/></operator><name pos:line="41" pos:column="26">p<pos:position pos:line="41" pos:column="27"/></name></expr></argument>)<pos:position pos:line="41" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="29"/></expr_stmt></block></for>

<label><name pos:line="43" pos:column="1">out<pos:position pos:line="43" pos:column="4"/></name>:<pos:position pos:line="43" pos:column="5"/></label>
  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><name pos:line="44" pos:column="7">ext<pos:position pos:line="44" pos:column="10"/></name> <operator pos:line="44" pos:column="11">&amp;&amp;<pos:position pos:line="44" pos:column="21"/></operator> <operator pos:line="44" pos:column="14">*<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="15">ext<pos:position pos:line="44" pos:column="18"/></name></expr>)<pos:position pos:line="44" pos:column="19"/></condition><then pos:line="44" pos:column="19">
  <block pos:line="45" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">safe_strcat<pos:position pos:line="46" pos:column="16"/></name> <argument_list pos:line="46" pos:column="17">(<argument><expr><name pos:line="46" pos:column="18">dest<pos:position pos:line="46" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="24">dlen<pos:position pos:line="46" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="30">"/"<pos:position pos:line="46" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">safe_strcat<pos:position pos:line="47" pos:column="16"/></name> <argument_list pos:line="47" pos:column="17">(<argument><expr><name pos:line="47" pos:column="18">dest<pos:position pos:line="47" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="24">dlen<pos:position pos:line="47" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="30">ext<pos:position pos:line="47" pos:column="33"/></name></expr></argument>)<pos:position pos:line="47" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="48" pos:column="4"/></block></then></if>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

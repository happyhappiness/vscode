<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1651_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_is_multipart_encrypted<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">BODY<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">b<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><operator pos:line="3" pos:column="7">(<pos:position pos:line="3" pos:column="8"/></operator><name pos:line="3" pos:column="8">WithCrypto<pos:position pos:line="3" pos:column="18"/></name> <operator pos:line="3" pos:column="19">&amp;<pos:position pos:line="3" pos:column="24"/></operator> <name pos:line="3" pos:column="21">APPLICATION_PGP<pos:position pos:line="3" pos:column="36"/></name><operator pos:line="3" pos:column="36">)<pos:position pos:line="3" pos:column="37"/></operator></expr>)<pos:position pos:line="3" pos:column="38"/></condition><then pos:line="3" pos:column="38">
  <block pos:line="4" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">p<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
  
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">b<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">||<pos:position pos:line="7" pos:column="14"/></operator> <name><name pos:line="7" pos:column="15">b<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">type<pos:position pos:line="7" pos:column="22"/></name></name> <operator pos:line="7" pos:column="23">!=<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="26">TYPEMULTIPART<pos:position pos:line="7" pos:column="39"/></name> <operator pos:line="7" pos:column="40">||<pos:position pos:line="7" pos:column="42"/></operator>
        <operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name><name pos:line="8" pos:column="10">b<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">subtype<pos:position pos:line="8" pos:column="20"/></name></name> <operator pos:line="8" pos:column="21">||<pos:position pos:line="8" pos:column="23"/></operator> <call><name pos:line="8" pos:column="24">ascii_strcasecmp<pos:position pos:line="8" pos:column="40"/></name> <argument_list pos:line="8" pos:column="41">(<argument><expr><name><name pos:line="8" pos:column="42">b<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">-&gt;<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="45">subtype<pos:position pos:line="8" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="54">"encrypted"<pos:position pos:line="8" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></call> <operator pos:line="8" pos:column="67">||<pos:position pos:line="8" pos:column="69"/></operator>
        <operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><operator pos:line="9" pos:column="10">(<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="11">p<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <call><name pos:line="9" pos:column="15">mutt_get_parameter<pos:position pos:line="9" pos:column="33"/></name> <argument_list pos:line="9" pos:column="34">(<argument><expr><literal type="string" pos:line="9" pos:column="35">"protocol"<pos:position pos:line="9" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="47">b<pos:position pos:line="9" pos:column="48"/></name><operator pos:line="9" pos:column="48">-&gt;<pos:position pos:line="9" pos:column="53"/></operator><name pos:line="9" pos:column="50">parameter<pos:position pos:line="9" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></call><operator pos:line="9" pos:column="60">)<pos:position pos:line="9" pos:column="61"/></operator> <operator pos:line="9" pos:column="62">||<pos:position pos:line="9" pos:column="64"/></operator>
        <call><name pos:line="10" pos:column="9">ascii_strcasecmp<pos:position pos:line="10" pos:column="25"/></name> <argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">p<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="30">"application/pgp-encrypted"<pos:position pos:line="10" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="59"/></condition><then pos:line="10" pos:column="59">
      <block type="pseudo"><return pos:line="11" pos:column="7">return <expr><literal type="number" pos:line="11" pos:column="14">0<pos:position pos:line="11" pos:column="15"/></literal></expr>;<pos:position pos:line="11" pos:column="16"/></return></block></then></if>
  
    <return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">PGPENCRYPT<pos:position pos:line="13" pos:column="22"/></name></expr>;<pos:position pos:line="13" pos:column="23"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <return pos:line="16" pos:column="3">return <expr><literal type="number" pos:line="16" pos:column="10">0<pos:position pos:line="16" pos:column="11"/></literal></expr>;<pos:position pos:line="16" pos:column="12"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

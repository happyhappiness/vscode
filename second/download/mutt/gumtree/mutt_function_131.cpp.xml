<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_function_131.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_compose_attachment<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">BODY<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">a<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">type<pos:position pos:line="3" pos:column="12"/></name><index pos:line="3" pos:column="12">[<expr><name pos:line="3" pos:column="13">STRING<pos:position pos:line="3" pos:column="19"/></name></expr>]<pos:position pos:line="3" pos:column="20"/></index></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">command<pos:position pos:line="4" pos:column="15"/></name><index pos:line="4" pos:column="15">[<expr><name pos:line="4" pos:column="16">STRING<pos:position pos:line="4" pos:column="22"/></name></expr>]<pos:position pos:line="4" pos:column="23"/></index></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">newfile<pos:position pos:line="5" pos:column="15"/></name><index pos:line="5" pos:column="15">[<expr><name pos:line="5" pos:column="16">_POSIX_PATH_MAX<pos:position pos:line="5" pos:column="31"/></name></expr>]<pos:position pos:line="5" pos:column="32"/></index></name> <init pos:line="5" pos:column="33">= <expr><literal type="string" pos:line="5" pos:column="35">""<pos:position pos:line="5" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">rfc1524_entry<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">entry<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><call><name pos:line="6" pos:column="26">rfc1524_new_entry<pos:position pos:line="6" pos:column="43"/></name> <argument_list pos:line="6" pos:column="44">()<pos:position pos:line="6" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="47"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">short<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">unlink_newfile<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">rc<pos:position pos:line="8" pos:column="9"/></name> <init pos:line="8" pos:column="10">= <expr><literal type="number" pos:line="8" pos:column="12">0<pos:position pos:line="8" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>
  
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">snprintf<pos:position pos:line="10" pos:column="11"/></name> <argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">type<pos:position pos:line="10" pos:column="17"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="19">sizeof <argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">type<pos:position pos:line="10" pos:column="31"/></name></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="34">"%s/%s"<pos:position pos:line="10" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="43">TYPE<pos:position pos:line="10" pos:column="47"/></name> <argument_list pos:line="10" pos:column="48">(<argument><expr><name pos:line="10" pos:column="49">a<pos:position pos:line="10" pos:column="50"/></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="53">a<pos:position pos:line="10" pos:column="54"/></name><operator pos:line="10" pos:column="54">-&gt;<pos:position pos:line="10" pos:column="59"/></operator><name pos:line="10" pos:column="56">subtype<pos:position pos:line="10" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="65"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><call><name pos:line="11" pos:column="7">rfc1524_mailcap_lookup<pos:position pos:line="11" pos:column="29"/></name> <argument_list pos:line="11" pos:column="30">(<argument><expr><name pos:line="11" pos:column="31">a<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="34">type<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="40">entry<pos:position pos:line="11" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="47">M_COMPOSE<pos:position pos:line="11" pos:column="56"/></name></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="58"/></condition><then pos:line="11" pos:column="58">
  <block pos:line="12" pos:column="3">{
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">entry<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">composecommand<pos:position pos:line="13" pos:column="30"/></name></name> <operator pos:line="13" pos:column="31">||<pos:position pos:line="13" pos:column="33"/></operator> <name><name pos:line="13" pos:column="34">entry<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">-&gt;<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="41">composetypecommand<pos:position pos:line="13" pos:column="59"/></name></name></expr>)<pos:position pos:line="13" pos:column="60"/></condition><then pos:line="13" pos:column="60">
    <block pos:line="14" pos:column="5">{

      <if pos:line="16" pos:column="7">if <condition pos:line="16" pos:column="10">(<expr><name><name pos:line="16" pos:column="11">entry<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">composetypecommand<pos:position pos:line="16" pos:column="36"/></name></name></expr>)<pos:position pos:line="16" pos:column="37"/></condition><then pos:line="16" pos:column="37">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="9">strfcpy<pos:position pos:line="17" pos:column="16"/></name> <argument_list pos:line="17" pos:column="17">(<argument><expr><name pos:line="17" pos:column="18">command<pos:position pos:line="17" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="27">entry<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">-&gt;<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="34">composetypecommand<pos:position pos:line="17" pos:column="52"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="54">sizeof <argument_list pos:line="17" pos:column="61">(<argument><expr><name pos:line="17" pos:column="62">command<pos:position pos:line="17" pos:column="69"/></name></expr></argument>)<pos:position pos:line="17" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="72"/></expr_stmt></block></then>
      <else pos:line="18" pos:column="7">else 
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="9">strfcpy<pos:position pos:line="19" pos:column="16"/></name> <argument_list pos:line="19" pos:column="17">(<argument><expr><name pos:line="19" pos:column="18">command<pos:position pos:line="19" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="27">entry<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">-&gt;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="34">composecommand<pos:position pos:line="19" pos:column="48"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="50">sizeof <argument_list pos:line="19" pos:column="57">(<argument><expr><name pos:line="19" pos:column="58">command<pos:position pos:line="19" pos:column="65"/></name></expr></argument>)<pos:position pos:line="19" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="68"/></expr_stmt></block></else></if>
      <if pos:line="20" pos:column="7">if <condition pos:line="20" pos:column="10">(<expr><call><name pos:line="20" pos:column="11">rfc1524_expand_filename<pos:position pos:line="20" pos:column="34"/></name> <argument_list pos:line="20" pos:column="35">(<argument><expr><name><name pos:line="20" pos:column="36">entry<pos:position pos:line="20" pos:column="41"/></name><operator pos:line="20" pos:column="41">-&gt;<pos:position pos:line="20" pos:column="46"/></operator><name pos:line="20" pos:column="43">nametemplate<pos:position pos:line="20" pos:column="55"/></name></name></expr></argument>,
				      <argument><expr><name><name pos:line="21" pos:column="39">a<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">-&gt;<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="42">filename<pos:position pos:line="21" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="52">newfile<pos:position pos:line="21" pos:column="59"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="61">sizeof <argument_list pos:line="21" pos:column="68">(<argument><expr><name pos:line="21" pos:column="69">newfile<pos:position pos:line="21" pos:column="76"/></name></expr></argument>)<pos:position pos:line="21" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="79"/></condition><then pos:line="21" pos:column="79">
      <block pos:line="22" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">dprint<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><literal type="number" pos:line="23" pos:column="16">1<pos:position pos:line="23" pos:column="17"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="19">(<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="20">debugfile<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">,<pos:position pos:line="23" pos:column="30"/></operator> <literal type="string" pos:line="23" pos:column="31">"oldfile: %s\t newfile: %s\n"<pos:position pos:line="23" pos:column="60"/></literal><operator pos:line="23" pos:column="60">,<pos:position pos:line="23" pos:column="61"/></operator>
				  <name><name pos:line="24" pos:column="35">a<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">-&gt;<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="38">filename<pos:position pos:line="24" pos:column="46"/></name></name><operator pos:line="24" pos:column="46">,<pos:position pos:line="24" pos:column="47"/></operator> <name pos:line="24" pos:column="48">newfile<pos:position pos:line="24" pos:column="55"/></name><operator pos:line="24" pos:column="55">)<pos:position pos:line="24" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="58"/></expr_stmt>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">safe_symlink<pos:position pos:line="25" pos:column="25"/></name> <argument_list pos:line="25" pos:column="26">(<argument><expr><name><name pos:line="25" pos:column="27">a<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">-&gt;<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="30">filename<pos:position pos:line="25" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="40">newfile<pos:position pos:line="25" pos:column="47"/></name></expr></argument>)<pos:position pos:line="25" pos:column="48"/></argument_list></call> <operator pos:line="25" pos:column="49">==<pos:position pos:line="25" pos:column="51"/></operator> <operator pos:line="25" pos:column="52">-<pos:position pos:line="25" pos:column="53"/></operator><literal type="number" pos:line="25" pos:column="53">1<pos:position pos:line="25" pos:column="54"/></literal></expr>)<pos:position pos:line="25" pos:column="55"/></condition><then pos:line="25" pos:column="55">
	<block pos:line="26" pos:column="9">{
	  <if pos:line="27" pos:column="11">if <condition pos:line="27" pos:column="14">(<expr><call><name pos:line="27" pos:column="15">mutt_yesorno<pos:position pos:line="27" pos:column="27"/></name> <argument_list pos:line="27" pos:column="28">(<argument><expr><call><name pos:line="27" pos:column="29">_<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><literal type="string" pos:line="27" pos:column="31">"Can't match nametemplate, continue?"<pos:position pos:line="27" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="27" pos:column="71">M_YES<pos:position pos:line="27" pos:column="76"/></name></expr></argument>)<pos:position pos:line="27" pos:column="77"/></argument_list></call> <operator pos:line="27" pos:column="78">!=<pos:position pos:line="27" pos:column="80"/></operator> <name pos:line="27" pos:column="81">M_YES<pos:position pos:line="27" pos:column="86"/></name></expr>)<pos:position pos:line="27" pos:column="87"/></condition><then pos:line="27" pos:column="87">
	    <block type="pseudo"><goto pos:line="28" pos:column="13">goto <name pos:line="28" pos:column="18">bailout<pos:position pos:line="28" pos:column="25"/></name>;<pos:position pos:line="28" pos:column="26"/></goto></block></then></if>
	}<pos:position pos:line="29" pos:column="10"/></block></then>
	<else pos:line="30" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="11">unlink_newfile<pos:position pos:line="31" pos:column="25"/></name> <operator pos:line="31" pos:column="26">=<pos:position pos:line="31" pos:column="27"/></operator> <literal type="number" pos:line="31" pos:column="28">1<pos:position pos:line="31" pos:column="29"/></literal></expr>;<pos:position pos:line="31" pos:column="30"/></expr_stmt></block></else></if>
      }<pos:position pos:line="32" pos:column="8"/></block></then>
      <else pos:line="33" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="9">strfcpy<pos:position pos:line="34" pos:column="16"/></name><argument_list pos:line="34" pos:column="16">(<argument><expr><name pos:line="34" pos:column="17">newfile<pos:position pos:line="34" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="26">a<pos:position pos:line="34" pos:column="27"/></name><operator pos:line="34" pos:column="27">-&gt;<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="29">filename<pos:position pos:line="34" pos:column="37"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="39">sizeof<argument_list pos:line="34" pos:column="45">(<argument><expr><name pos:line="34" pos:column="46">newfile<pos:position pos:line="34" pos:column="53"/></name></expr></argument>)<pos:position pos:line="34" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="56"/></expr_stmt></block></else></if>
      
      <if pos:line="36" pos:column="7">if <condition pos:line="36" pos:column="10">(<expr><call><name pos:line="36" pos:column="11">rfc1524_expand_command<pos:position pos:line="36" pos:column="33"/></name> <argument_list pos:line="36" pos:column="34">(<argument><expr><name pos:line="36" pos:column="35">a<pos:position pos:line="36" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="38">newfile<pos:position pos:line="36" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="47">type<pos:position pos:line="36" pos:column="51"/></name></expr></argument>,
				      <argument><expr><name pos:line="37" pos:column="39">command<pos:position pos:line="37" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="48">sizeof <argument_list pos:line="37" pos:column="55">(<argument><expr><name pos:line="37" pos:column="56">command<pos:position pos:line="37" pos:column="63"/></name></expr></argument>)<pos:position pos:line="37" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="66"/></condition><then pos:line="37" pos:column="66">
      <block pos:line="38" pos:column="7">{
	<comment type="block" pos:line="39" pos:column="9">/* For now, editing requires a file, no piping */</comment>
	<decl_stmt><decl><type><name pos:line="40" pos:column="9">mutt_error<pos:position pos:line="40" pos:column="19"/></name></type> <name pos:line="40" pos:column="20">_<pos:position pos:line="40" pos:column="21"/></name><argument_list pos:line="40" pos:column="21">(<argument><expr><literal type="string" pos:line="40" pos:column="22">"Mailcap compose entry requires %%s"<pos:position pos:line="40" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="59"/></argument_list></decl>;<pos:position pos:line="40" pos:column="60"/></decl_stmt>
      }<pos:position pos:line="41" pos:column="8"/></block></then>
      <else pos:line="42" pos:column="7">else
      <block pos:line="43" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="44" pos:column="9">int<pos:position pos:line="44" pos:column="12"/></name></type> <name pos:line="44" pos:column="13">r<pos:position pos:line="44" pos:column="14"/></name></decl>;<pos:position pos:line="44" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="46" pos:column="9">mutt_endwin<pos:position pos:line="46" pos:column="20"/></name> <argument_list pos:line="46" pos:column="21">(<argument><expr><name pos:line="46" pos:column="22">NULL<pos:position pos:line="46" pos:column="26"/></name></expr></argument>)<pos:position pos:line="46" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="28"/></expr_stmt>
	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><operator pos:line="47" pos:column="13">(<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="14">r<pos:position pos:line="47" pos:column="15"/></name> <operator pos:line="47" pos:column="16">=<pos:position pos:line="47" pos:column="17"/></operator> <call><name pos:line="47" pos:column="18">mutt_system<pos:position pos:line="47" pos:column="29"/></name> <argument_list pos:line="47" pos:column="30">(<argument><expr><name pos:line="47" pos:column="31">command<pos:position pos:line="47" pos:column="38"/></name></expr></argument>)<pos:position pos:line="47" pos:column="39"/></argument_list></call><operator pos:line="47" pos:column="39">)<pos:position pos:line="47" pos:column="40"/></operator> <operator pos:line="47" pos:column="41">==<pos:position pos:line="47" pos:column="43"/></operator> <operator pos:line="47" pos:column="44">-<pos:position pos:line="47" pos:column="45"/></operator><literal type="number" pos:line="47" pos:column="45">1<pos:position pos:line="47" pos:column="46"/></literal></expr>)<pos:position pos:line="47" pos:column="47"/></condition><then pos:line="47" pos:column="47">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="11">mutt_error<pos:position pos:line="48" pos:column="21"/></name> <argument_list pos:line="48" pos:column="22">(<argument><expr><call><name pos:line="48" pos:column="23">_<pos:position pos:line="48" pos:column="24"/></name><argument_list pos:line="48" pos:column="24">(<argument><expr><literal type="string" pos:line="48" pos:column="25">"Error running \"%s\"!"<pos:position pos:line="48" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="48" pos:column="51">command<pos:position pos:line="48" pos:column="58"/></name></expr></argument>)<pos:position pos:line="48" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="60"/></expr_stmt></block></then></if>
	
	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name pos:line="50" pos:column="13">r<pos:position pos:line="50" pos:column="14"/></name> <operator pos:line="50" pos:column="15">!=<pos:position pos:line="50" pos:column="17"/></operator> <operator pos:line="50" pos:column="18">-<pos:position pos:line="50" pos:column="19"/></operator><literal type="number" pos:line="50" pos:column="19">1<pos:position pos:line="50" pos:column="20"/></literal> <operator pos:line="50" pos:column="21">&amp;&amp;<pos:position pos:line="50" pos:column="31"/></operator> <name><name pos:line="50" pos:column="24">entry<pos:position pos:line="50" pos:column="29"/></name><operator pos:line="50" pos:column="29">-&gt;<pos:position pos:line="50" pos:column="34"/></operator><name pos:line="50" pos:column="31">composetypecommand<pos:position pos:line="50" pos:column="49"/></name></name></expr>)<pos:position pos:line="50" pos:column="50"/></condition><then pos:line="50" pos:column="50">
	<block pos:line="51" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="52" pos:column="11">BODY<pos:position pos:line="52" pos:column="15"/></name> <modifier pos:line="52" pos:column="16">*<pos:position pos:line="52" pos:column="17"/></modifier></type><name pos:line="52" pos:column="17">b<pos:position pos:line="52" pos:column="18"/></name></decl>;<pos:position pos:line="52" pos:column="19"/></decl_stmt>
	  <decl_stmt><decl><type><name pos:line="53" pos:column="11">FILE<pos:position pos:line="53" pos:column="15"/></name> <modifier pos:line="53" pos:column="16">*<pos:position pos:line="53" pos:column="17"/></modifier></type><name pos:line="53" pos:column="17">fp<pos:position pos:line="53" pos:column="19"/></name></decl>, <modifier pos:line="53" pos:column="21">*<pos:position pos:line="53" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="53" pos:column="22">tfp<pos:position pos:line="53" pos:column="25"/></name></decl>;<pos:position pos:line="53" pos:column="26"/></decl_stmt>
	  <decl_stmt><decl><type><name pos:line="54" pos:column="11">char<pos:position pos:line="54" pos:column="15"/></name></type> <name><name pos:line="54" pos:column="16">tempfile<pos:position pos:line="54" pos:column="24"/></name><index pos:line="54" pos:column="24">[<expr><name pos:line="54" pos:column="25">_POSIX_PATH_MAX<pos:position pos:line="54" pos:column="40"/></name></expr>]<pos:position pos:line="54" pos:column="41"/></index></name></decl>;<pos:position pos:line="54" pos:column="42"/></decl_stmt>

	  <if pos:line="56" pos:column="11">if <condition pos:line="56" pos:column="14">(<expr><operator pos:line="56" pos:column="15">(<pos:position pos:line="56" pos:column="16"/></operator><name pos:line="56" pos:column="16">fp<pos:position pos:line="56" pos:column="18"/></name> <operator pos:line="56" pos:column="19">=<pos:position pos:line="56" pos:column="20"/></operator> <call><name pos:line="56" pos:column="21">safe_fopen<pos:position pos:line="56" pos:column="31"/></name> <argument_list pos:line="56" pos:column="32">(<argument><expr><name><name pos:line="56" pos:column="33">a<pos:position pos:line="56" pos:column="34"/></name><operator pos:line="56" pos:column="34">-&gt;<pos:position pos:line="56" pos:column="39"/></operator><name pos:line="56" pos:column="36">filename<pos:position pos:line="56" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="46">"r"<pos:position pos:line="56" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="50"/></argument_list></call><operator pos:line="56" pos:column="50">)<pos:position pos:line="56" pos:column="51"/></operator> <operator pos:line="56" pos:column="52">==<pos:position pos:line="56" pos:column="54"/></operator> <name pos:line="56" pos:column="55">NULL<pos:position pos:line="56" pos:column="59"/></name></expr>)<pos:position pos:line="56" pos:column="60"/></condition><then pos:line="56" pos:column="60">
	  <block pos:line="57" pos:column="11">{
	    <decl_stmt><decl><type><name pos:line="58" pos:column="13">mutt_perror<pos:position pos:line="58" pos:column="24"/></name></type> <name pos:line="58" pos:column="25">_<pos:position pos:line="58" pos:column="26"/></name><argument_list pos:line="58" pos:column="26">(<argument><expr><literal type="string" pos:line="58" pos:column="27">"Failure to open file to parse headers."<pos:position pos:line="58" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="68"/></argument_list></decl>;<pos:position pos:line="58" pos:column="69"/></decl_stmt>
	    <goto pos:line="59" pos:column="13">goto <name pos:line="59" pos:column="18">bailout<pos:position pos:line="59" pos:column="25"/></name>;<pos:position pos:line="59" pos:column="26"/></goto>
	  }<pos:position pos:line="60" pos:column="12"/></block></then></if>

	  <expr_stmt><expr><name pos:line="62" pos:column="11">b<pos:position pos:line="62" pos:column="12"/></name> <operator pos:line="62" pos:column="13">=<pos:position pos:line="62" pos:column="14"/></operator> <call><name pos:line="62" pos:column="15">mutt_read_mime_header<pos:position pos:line="62" pos:column="36"/></name> <argument_list pos:line="62" pos:column="37">(<argument><expr><name pos:line="62" pos:column="38">fp<pos:position pos:line="62" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="42">0<pos:position pos:line="62" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="45"/></expr_stmt>
	  <if pos:line="63" pos:column="11">if <condition pos:line="63" pos:column="14">(<expr><name pos:line="63" pos:column="15">b<pos:position pos:line="63" pos:column="16"/></name></expr>)<pos:position pos:line="63" pos:column="17"/></condition><then pos:line="63" pos:column="17">
	  <block pos:line="64" pos:column="11">{
	    <if pos:line="65" pos:column="13">if <condition pos:line="65" pos:column="16">(<expr><name><name pos:line="65" pos:column="17">b<pos:position pos:line="65" pos:column="18"/></name><operator pos:line="65" pos:column="18">-&gt;<pos:position pos:line="65" pos:column="23"/></operator><name pos:line="65" pos:column="20">parameter<pos:position pos:line="65" pos:column="29"/></name></name></expr>)<pos:position pos:line="65" pos:column="30"/></condition><then pos:line="65" pos:column="30">
	    <block pos:line="66" pos:column="13">{
	      <expr_stmt><expr><call><name pos:line="67" pos:column="15">mutt_free_parameter<pos:position pos:line="67" pos:column="34"/></name> <argument_list pos:line="67" pos:column="35">(<argument><expr><operator pos:line="67" pos:column="36">&amp;<pos:position pos:line="67" pos:column="41"/></operator><name><name pos:line="67" pos:column="37">a<pos:position pos:line="67" pos:column="38"/></name><operator pos:line="67" pos:column="38">-&gt;<pos:position pos:line="67" pos:column="43"/></operator><name pos:line="67" pos:column="40">parameter<pos:position pos:line="67" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="51"/></expr_stmt>
	      <expr_stmt><expr><name><name pos:line="68" pos:column="15">a<pos:position pos:line="68" pos:column="16"/></name><operator pos:line="68" pos:column="16">-&gt;<pos:position pos:line="68" pos:column="21"/></operator><name pos:line="68" pos:column="18">parameter<pos:position pos:line="68" pos:column="27"/></name></name> <operator pos:line="68" pos:column="28">=<pos:position pos:line="68" pos:column="29"/></operator> <name><name pos:line="68" pos:column="30">b<pos:position pos:line="68" pos:column="31"/></name><operator pos:line="68" pos:column="31">-&gt;<pos:position pos:line="68" pos:column="36"/></operator><name pos:line="68" pos:column="33">parameter<pos:position pos:line="68" pos:column="42"/></name></name></expr>;<pos:position pos:line="68" pos:column="43"/></expr_stmt>
	      <expr_stmt><expr><name><name pos:line="69" pos:column="15">b<pos:position pos:line="69" pos:column="16"/></name><operator pos:line="69" pos:column="16">-&gt;<pos:position pos:line="69" pos:column="21"/></operator><name pos:line="69" pos:column="18">parameter<pos:position pos:line="69" pos:column="27"/></name></name> <operator pos:line="69" pos:column="28">=<pos:position pos:line="69" pos:column="29"/></operator> <name pos:line="69" pos:column="30">NULL<pos:position pos:line="69" pos:column="34"/></name></expr>;<pos:position pos:line="69" pos:column="35"/></expr_stmt>
	    }<pos:position pos:line="70" pos:column="14"/></block></then></if>
	    <if pos:line="71" pos:column="13">if <condition pos:line="71" pos:column="16">(<expr><name><name pos:line="71" pos:column="17">b<pos:position pos:line="71" pos:column="18"/></name><operator pos:line="71" pos:column="18">-&gt;<pos:position pos:line="71" pos:column="23"/></operator><name pos:line="71" pos:column="20">description<pos:position pos:line="71" pos:column="31"/></name></name></expr>)<pos:position pos:line="71" pos:column="32"/></condition><then pos:line="71" pos:column="32"> <block pos:line="71" pos:column="33">{
	      <expr_stmt><expr><call><name pos:line="72" pos:column="15">FREE<pos:position pos:line="72" pos:column="19"/></name> <argument_list pos:line="72" pos:column="20">(<argument><expr><operator pos:line="72" pos:column="21">&amp;<pos:position pos:line="72" pos:column="26"/></operator><name><name pos:line="72" pos:column="22">a<pos:position pos:line="72" pos:column="23"/></name><operator pos:line="72" pos:column="23">-&gt;<pos:position pos:line="72" pos:column="28"/></operator><name pos:line="72" pos:column="25">description<pos:position pos:line="72" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="38"/></expr_stmt>
	      <expr_stmt><expr><name><name pos:line="73" pos:column="15">a<pos:position pos:line="73" pos:column="16"/></name><operator pos:line="73" pos:column="16">-&gt;<pos:position pos:line="73" pos:column="21"/></operator><name pos:line="73" pos:column="18">description<pos:position pos:line="73" pos:column="29"/></name></name> <operator pos:line="73" pos:column="30">=<pos:position pos:line="73" pos:column="31"/></operator> <name><name pos:line="73" pos:column="32">b<pos:position pos:line="73" pos:column="33"/></name><operator pos:line="73" pos:column="33">-&gt;<pos:position pos:line="73" pos:column="38"/></operator><name pos:line="73" pos:column="35">description<pos:position pos:line="73" pos:column="46"/></name></name></expr>;<pos:position pos:line="73" pos:column="47"/></expr_stmt>
	      <expr_stmt><expr><name><name pos:line="74" pos:column="15">b<pos:position pos:line="74" pos:column="16"/></name><operator pos:line="74" pos:column="16">-&gt;<pos:position pos:line="74" pos:column="21"/></operator><name pos:line="74" pos:column="18">description<pos:position pos:line="74" pos:column="29"/></name></name> <operator pos:line="74" pos:column="30">=<pos:position pos:line="74" pos:column="31"/></operator> <name pos:line="74" pos:column="32">NULL<pos:position pos:line="74" pos:column="36"/></name></expr>;<pos:position pos:line="74" pos:column="37"/></expr_stmt>
	    }<pos:position pos:line="75" pos:column="14"/></block></then></if>
	    <if pos:line="76" pos:column="13">if <condition pos:line="76" pos:column="16">(<expr><name><name pos:line="76" pos:column="17">b<pos:position pos:line="76" pos:column="18"/></name><operator pos:line="76" pos:column="18">-&gt;<pos:position pos:line="76" pos:column="23"/></operator><name pos:line="76" pos:column="20">form_name<pos:position pos:line="76" pos:column="29"/></name></name></expr>)<pos:position pos:line="76" pos:column="30"/></condition><then pos:line="76" pos:column="30">
	    <block pos:line="77" pos:column="13">{
	      <expr_stmt><expr><call><name pos:line="78" pos:column="15">FREE<pos:position pos:line="78" pos:column="19"/></name> <argument_list pos:line="78" pos:column="20">(<argument><expr><operator pos:line="78" pos:column="21">&amp;<pos:position pos:line="78" pos:column="26"/></operator><name><name pos:line="78" pos:column="22">a<pos:position pos:line="78" pos:column="23"/></name><operator pos:line="78" pos:column="23">-&gt;<pos:position pos:line="78" pos:column="28"/></operator><name pos:line="78" pos:column="25">form_name<pos:position pos:line="78" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="36"/></expr_stmt>
	      <expr_stmt><expr><name><name pos:line="79" pos:column="15">a<pos:position pos:line="79" pos:column="16"/></name><operator pos:line="79" pos:column="16">-&gt;<pos:position pos:line="79" pos:column="21"/></operator><name pos:line="79" pos:column="18">form_name<pos:position pos:line="79" pos:column="27"/></name></name> <operator pos:line="79" pos:column="28">=<pos:position pos:line="79" pos:column="29"/></operator> <name><name pos:line="79" pos:column="30">b<pos:position pos:line="79" pos:column="31"/></name><operator pos:line="79" pos:column="31">-&gt;<pos:position pos:line="79" pos:column="36"/></operator><name pos:line="79" pos:column="33">form_name<pos:position pos:line="79" pos:column="42"/></name></name></expr>;<pos:position pos:line="79" pos:column="43"/></expr_stmt>
	      <expr_stmt><expr><name><name pos:line="80" pos:column="15">b<pos:position pos:line="80" pos:column="16"/></name><operator pos:line="80" pos:column="16">-&gt;<pos:position pos:line="80" pos:column="21"/></operator><name pos:line="80" pos:column="18">form_name<pos:position pos:line="80" pos:column="27"/></name></name> <operator pos:line="80" pos:column="28">=<pos:position pos:line="80" pos:column="29"/></operator> <name pos:line="80" pos:column="30">NULL<pos:position pos:line="80" pos:column="34"/></name></expr>;<pos:position pos:line="80" pos:column="35"/></expr_stmt>
	    }<pos:position pos:line="81" pos:column="14"/></block></then></if>

	    <comment type="block" pos:line="83" pos:column="13">/* Remove headers by copying out data to another file, then 
	     * copying the file back */</comment>
	    <expr_stmt><expr><call><name pos:line="85" pos:column="13">fseeko<pos:position pos:line="85" pos:column="19"/></name> <argument_list pos:line="85" pos:column="20">(<argument><expr><name pos:line="85" pos:column="21">fp<pos:position pos:line="85" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="25">b<pos:position pos:line="85" pos:column="26"/></name><operator pos:line="85" pos:column="26">-&gt;<pos:position pos:line="85" pos:column="31"/></operator><name pos:line="85" pos:column="28">offset<pos:position pos:line="85" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="36">0<pos:position pos:line="85" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="39"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="86" pos:column="13">mutt_mktemp<pos:position pos:line="86" pos:column="24"/></name> <argument_list pos:line="86" pos:column="25">(<argument><expr><name pos:line="86" pos:column="26">tempfile<pos:position pos:line="86" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="86" pos:column="36">sizeof <argument_list pos:line="86" pos:column="43">(<argument><expr><name pos:line="86" pos:column="44">tempfile<pos:position pos:line="86" pos:column="52"/></name></expr></argument>)<pos:position pos:line="86" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="86" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="55"/></expr_stmt>
	    <if pos:line="87" pos:column="13">if <condition pos:line="87" pos:column="16">(<expr><operator pos:line="87" pos:column="17">(<pos:position pos:line="87" pos:column="18"/></operator><name pos:line="87" pos:column="18">tfp<pos:position pos:line="87" pos:column="21"/></name> <operator pos:line="87" pos:column="22">=<pos:position pos:line="87" pos:column="23"/></operator> <call><name pos:line="87" pos:column="24">safe_fopen<pos:position pos:line="87" pos:column="34"/></name> <argument_list pos:line="87" pos:column="35">(<argument><expr><name pos:line="87" pos:column="36">tempfile<pos:position pos:line="87" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="46">"w"<pos:position pos:line="87" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="50"/></argument_list></call><operator pos:line="87" pos:column="50">)<pos:position pos:line="87" pos:column="51"/></operator> <operator pos:line="87" pos:column="52">==<pos:position pos:line="87" pos:column="54"/></operator> <name pos:line="87" pos:column="55">NULL<pos:position pos:line="87" pos:column="59"/></name></expr>)<pos:position pos:line="87" pos:column="60"/></condition><then pos:line="87" pos:column="60">
	    <block pos:line="88" pos:column="13">{
	      <decl_stmt><decl><type><name pos:line="89" pos:column="15">mutt_perror<pos:position pos:line="89" pos:column="26"/></name></type> <name pos:line="89" pos:column="27">_<pos:position pos:line="89" pos:column="28"/></name><argument_list pos:line="89" pos:column="28">(<argument><expr><literal type="string" pos:line="89" pos:column="29">"Failure to open file to strip headers."<pos:position pos:line="89" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="70"/></argument_list></decl>;<pos:position pos:line="89" pos:column="71"/></decl_stmt>
	      <goto pos:line="90" pos:column="15">goto <name pos:line="90" pos:column="20">bailout<pos:position pos:line="90" pos:column="27"/></name>;<pos:position pos:line="90" pos:column="28"/></goto>
	    }<pos:position pos:line="91" pos:column="14"/></block></then></if>
	    <expr_stmt><expr><call><name pos:line="92" pos:column="13">mutt_copy_stream<pos:position pos:line="92" pos:column="29"/></name> <argument_list pos:line="92" pos:column="30">(<argument><expr><name pos:line="92" pos:column="31">fp<pos:position pos:line="92" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="35">tfp<pos:position pos:line="92" pos:column="38"/></name></expr></argument>)<pos:position pos:line="92" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="40"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="93" pos:column="13">safe_fclose<pos:position pos:line="93" pos:column="24"/></name> <argument_list pos:line="93" pos:column="25">(<argument><expr><operator pos:line="93" pos:column="26">&amp;<pos:position pos:line="93" pos:column="31"/></operator><name pos:line="93" pos:column="27">fp<pos:position pos:line="93" pos:column="29"/></name></expr></argument>)<pos:position pos:line="93" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="31"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="94" pos:column="13">safe_fclose<pos:position pos:line="94" pos:column="24"/></name> <argument_list pos:line="94" pos:column="25">(<argument><expr><operator pos:line="94" pos:column="26">&amp;<pos:position pos:line="94" pos:column="31"/></operator><name pos:line="94" pos:column="27">tfp<pos:position pos:line="94" pos:column="30"/></name></expr></argument>)<pos:position pos:line="94" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="32"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="95" pos:column="13">mutt_unlink<pos:position pos:line="95" pos:column="24"/></name> <argument_list pos:line="95" pos:column="25">(<argument><expr><name><name pos:line="95" pos:column="26">a<pos:position pos:line="95" pos:column="27"/></name><operator pos:line="95" pos:column="27">-&gt;<pos:position pos:line="95" pos:column="32"/></operator><name pos:line="95" pos:column="29">filename<pos:position pos:line="95" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="39"/></expr_stmt>  
	    <if pos:line="96" pos:column="13">if <condition pos:line="96" pos:column="16">(<expr><call><name pos:line="96" pos:column="17">mutt_rename_file<pos:position pos:line="96" pos:column="33"/></name> <argument_list pos:line="96" pos:column="34">(<argument><expr><name pos:line="96" pos:column="35">tempfile<pos:position pos:line="96" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="45">a<pos:position pos:line="96" pos:column="46"/></name><operator pos:line="96" pos:column="46">-&gt;<pos:position pos:line="96" pos:column="51"/></operator><name pos:line="96" pos:column="48">filename<pos:position pos:line="96" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="57"/></argument_list></call> <operator pos:line="96" pos:column="58">!=<pos:position pos:line="96" pos:column="60"/></operator> <literal type="number" pos:line="96" pos:column="61">0<pos:position pos:line="96" pos:column="62"/></literal></expr>)<pos:position pos:line="96" pos:column="63"/></condition><then pos:line="96" pos:column="63"> 
	    <block pos:line="97" pos:column="13">{
	      <decl_stmt><decl><type><name pos:line="98" pos:column="15">mutt_perror<pos:position pos:line="98" pos:column="26"/></name></type> <name pos:line="98" pos:column="27">_<pos:position pos:line="98" pos:column="28"/></name><argument_list pos:line="98" pos:column="28">(<argument><expr><literal type="string" pos:line="98" pos:column="29">"Failure to rename file."<pos:position pos:line="98" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="55"/></argument_list></decl>;<pos:position pos:line="98" pos:column="56"/></decl_stmt>
	      <goto pos:line="99" pos:column="15">goto <name pos:line="99" pos:column="20">bailout<pos:position pos:line="99" pos:column="27"/></name>;<pos:position pos:line="99" pos:column="28"/></goto>
	    }<pos:position pos:line="100" pos:column="14"/></block></then></if>

	    <expr_stmt><expr><call><name pos:line="102" pos:column="13">mutt_free_body<pos:position pos:line="102" pos:column="27"/></name> <argument_list pos:line="102" pos:column="28">(<argument><expr><operator pos:line="102" pos:column="29">&amp;<pos:position pos:line="102" pos:column="34"/></operator><name pos:line="102" pos:column="30">b<pos:position pos:line="102" pos:column="31"/></name></expr></argument>)<pos:position pos:line="102" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="33"/></expr_stmt>
	  }<pos:position pos:line="103" pos:column="12"/></block></then></if>
	}<pos:position pos:line="104" pos:column="10"/></block></then></if>
      }<pos:position pos:line="105" pos:column="8"/></block></else></if>
    }<pos:position pos:line="106" pos:column="6"/></block></then></if>
  }<pos:position pos:line="107" pos:column="4"/></block></then>
  <else pos:line="108" pos:column="3">else
  <block pos:line="109" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="110" pos:column="5">rfc1524_free_entry<pos:position pos:line="110" pos:column="23"/></name> <argument_list pos:line="110" pos:column="24">(<argument><expr><operator pos:line="110" pos:column="25">&amp;<pos:position pos:line="110" pos:column="30"/></operator><name pos:line="110" pos:column="26">entry<pos:position pos:line="110" pos:column="31"/></name></expr></argument>)<pos:position pos:line="110" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="111" pos:column="5">mutt_message<pos:position pos:line="111" pos:column="17"/></name> <argument_list pos:line="111" pos:column="18">(<argument><expr><call><name pos:line="111" pos:column="19">_<pos:position pos:line="111" pos:column="20"/></name><argument_list pos:line="111" pos:column="20">(<argument><expr><literal type="string" pos:line="111" pos:column="21">"No mailcap compose entry for %s, creating empty file."<pos:position pos:line="111" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="77"/></argument_list></call></expr></argument>,
		   <argument><expr><name pos:line="112" pos:column="20">type<pos:position pos:line="112" pos:column="24"/></name></expr></argument>)<pos:position pos:line="112" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="26"/></expr_stmt>
    <return pos:line="113" pos:column="5">return <expr><literal type="number" pos:line="113" pos:column="12">1<pos:position pos:line="113" pos:column="13"/></literal></expr>;<pos:position pos:line="113" pos:column="14"/></return>
  }<pos:position pos:line="114" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name pos:line="116" pos:column="3">rc<pos:position pos:line="116" pos:column="5"/></name> <operator pos:line="116" pos:column="6">=<pos:position pos:line="116" pos:column="7"/></operator> <literal type="number" pos:line="116" pos:column="8">1<pos:position pos:line="116" pos:column="9"/></literal></expr>;<pos:position pos:line="116" pos:column="10"/></expr_stmt>
  
  <label><name pos:line="118" pos:column="3">bailout<pos:position pos:line="118" pos:column="10"/></name>:<pos:position pos:line="118" pos:column="11"/></label>
  
  <if pos:line="120" pos:column="3">if<condition pos:line="120" pos:column="5">(<expr><name pos:line="120" pos:column="6">unlink_newfile<pos:position pos:line="120" pos:column="20"/></name></expr>)<pos:position pos:line="120" pos:column="21"/></condition><then pos:line="120" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="121" pos:column="5">unlink<pos:position pos:line="121" pos:column="11"/></name><argument_list pos:line="121" pos:column="11">(<argument><expr><name pos:line="121" pos:column="12">newfile<pos:position pos:line="121" pos:column="19"/></name></expr></argument>)<pos:position pos:line="121" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="21"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="123" pos:column="3">rfc1524_free_entry<pos:position pos:line="123" pos:column="21"/></name> <argument_list pos:line="123" pos:column="22">(<argument><expr><operator pos:line="123" pos:column="23">&amp;<pos:position pos:line="123" pos:column="28"/></operator><name pos:line="123" pos:column="24">entry<pos:position pos:line="123" pos:column="29"/></name></expr></argument>)<pos:position pos:line="123" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="31"/></expr_stmt>
  <return pos:line="124" pos:column="3">return <expr><name pos:line="124" pos:column="10">rc<pos:position pos:line="124" pos:column="12"/></name></expr>;<pos:position pos:line="124" pos:column="13"/></return>
}<pos:position pos:line="125" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2090_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">HEADER<pos:position pos:line="1" pos:column="7"/></name><modifier pos:line="1" pos:column="7">*<pos:position pos:line="1" pos:column="8"/></modifier></type> <name pos:line="1" pos:column="9">imap_hcache_get<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">IMAP_DATA<pos:position pos:line="1" pos:column="35"/></name><modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type> <name pos:line="1" pos:column="37">idata<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">unsigned<pos:position pos:line="1" pos:column="52"/></name> <name pos:line="1" pos:column="53">int<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">uid<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">key<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><literal type="number" pos:line="3" pos:column="12">16<pos:position pos:line="3" pos:column="14"/></literal></expr>]<pos:position pos:line="3" pos:column="15"/></index></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">unsigned<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">int<pos:position pos:line="4" pos:column="15"/></name><modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type> <name pos:line="4" pos:column="17">uv<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">HEADER<pos:position pos:line="5" pos:column="9"/></name><modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type> <name pos:line="5" pos:column="11">h<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><name pos:line="5" pos:column="15">NULL<pos:position pos:line="5" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">!<pos:position pos:line="7" pos:column="8"/></operator><name><name pos:line="7" pos:column="8">idata<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">hcache<pos:position pos:line="7" pos:column="21"/></name></name></expr>)<pos:position pos:line="7" pos:column="22"/></condition><then pos:line="7" pos:column="22">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">NULL<pos:position pos:line="8" pos:column="16"/></name></expr>;<pos:position pos:line="8" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">sprintf<pos:position pos:line="10" pos:column="10"/></name> <argument_list pos:line="10" pos:column="11">(<argument><expr><name pos:line="10" pos:column="12">key<pos:position pos:line="10" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="17">"/%u"<pos:position pos:line="10" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="24">uid<pos:position pos:line="10" pos:column="27"/></name></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name pos:line="11" pos:column="3">uv<pos:position pos:line="11" pos:column="5"/></name> <operator pos:line="11" pos:column="6">=<pos:position pos:line="11" pos:column="7"/></operator> <operator pos:line="11" pos:column="8">(<pos:position pos:line="11" pos:column="9"/></operator><name pos:line="11" pos:column="9">unsigned<pos:position pos:line="11" pos:column="17"/></name> <name pos:line="11" pos:column="18">int<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></operator><operator pos:line="11" pos:column="22">)<pos:position pos:line="11" pos:column="23"/></operator><call><name pos:line="11" pos:column="23">mutt_hcache_fetch<pos:position pos:line="11" pos:column="40"/></name> <argument_list pos:line="11" pos:column="41">(<argument><expr><name><name pos:line="11" pos:column="42">idata<pos:position pos:line="11" pos:column="47"/></name><operator pos:line="11" pos:column="47">-&gt;<pos:position pos:line="11" pos:column="52"/></operator><name pos:line="11" pos:column="49">hcache<pos:position pos:line="11" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="57">key<pos:position pos:line="11" pos:column="60"/></name></expr></argument>,
                                         <argument><expr><name pos:line="12" pos:column="42">imap_hcache_keylen<pos:position pos:line="12" pos:column="60"/></name></expr></argument>)<pos:position pos:line="12" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="62"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">uv<pos:position pos:line="13" pos:column="9"/></name></expr>)<pos:position pos:line="13" pos:column="10"/></condition><then pos:line="13" pos:column="10">
  <block pos:line="14" pos:column="3">{
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">*<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">uv<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">==<pos:position pos:line="15" pos:column="15"/></operator> <name><name pos:line="15" pos:column="16">idata<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">-&gt;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="23">uid_validity<pos:position pos:line="15" pos:column="35"/></name></name></expr>)<pos:position pos:line="15" pos:column="36"/></condition><then pos:line="15" pos:column="36">
      <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="7">h<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">=<pos:position pos:line="16" pos:column="10"/></operator> <call><name pos:line="16" pos:column="11">mutt_hcache_restore<pos:position pos:line="16" pos:column="30"/></name> <argument_list pos:line="16" pos:column="31">(<argument><expr><operator pos:line="16" pos:column="32">(<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="33">unsigned<pos:position pos:line="16" pos:column="41"/></name> <name pos:line="16" pos:column="42">char<pos:position pos:line="16" pos:column="46"/></name><operator pos:line="16" pos:column="46">*<pos:position pos:line="16" pos:column="47"/></operator><operator pos:line="16" pos:column="47">)<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="48">uv<pos:position pos:line="16" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="52">NULL<pos:position pos:line="16" pos:column="56"/></name></expr></argument>)<pos:position pos:line="16" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="58"/></expr_stmt></block></then>
    <else pos:line="17" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="7">dprint<pos:position pos:line="18" pos:column="13"/></name> <argument_list pos:line="18" pos:column="14">(<argument><expr><literal type="number" pos:line="18" pos:column="15">3<pos:position pos:line="18" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="18">(<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="19">debugfile<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">,<pos:position pos:line="18" pos:column="29"/></operator> <literal type="string" pos:line="18" pos:column="30">"hcache uidvalidity mismatch: %u"<pos:position pos:line="18" pos:column="63"/></literal><operator pos:line="18" pos:column="63">,<pos:position pos:line="18" pos:column="64"/></operator> <operator pos:line="18" pos:column="65">*<pos:position pos:line="18" pos:column="66"/></operator><name pos:line="18" pos:column="66">uv<pos:position pos:line="18" pos:column="68"/></name><operator pos:line="18" pos:column="68">)<pos:position pos:line="18" pos:column="69"/></operator></expr></argument>)<pos:position pos:line="18" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="71"/></expr_stmt></block></else></if>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">mutt_hcache_free<pos:position pos:line="19" pos:column="21"/></name> <argument_list pos:line="19" pos:column="22">(<argument><expr><operator pos:line="19" pos:column="23">(<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="24">void<pos:position pos:line="19" pos:column="28"/></name> <operator pos:line="19" pos:column="29">*<pos:position pos:line="19" pos:column="30"/></operator><operator pos:line="19" pos:column="30">*<pos:position pos:line="19" pos:column="31"/></operator><operator pos:line="19" pos:column="31">)<pos:position pos:line="19" pos:column="32"/></operator><operator pos:line="19" pos:column="32">&amp;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="33">uv<pos:position pos:line="19" pos:column="35"/></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <return pos:line="22" pos:column="3">return <expr><name pos:line="22" pos:column="10">h<pos:position pos:line="22" pos:column="11"/></name></expr>;<pos:position pos:line="22" pos:column="12"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

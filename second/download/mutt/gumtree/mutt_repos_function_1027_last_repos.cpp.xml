<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1027_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_decode_base64<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">STATE<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">s<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">long<pos:position pos:line="1" pos:column="40"/></name></type> <name pos:line="1" pos:column="41">len<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">int<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">istext<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">iconv_t<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">cd<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buf<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><literal type="number" pos:line="3" pos:column="12">5<pos:position pos:line="3" pos:column="13"/></literal></expr>]<pos:position pos:line="3" pos:column="14"/></index></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">c1<pos:position pos:line="4" pos:column="9"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="11">c2<pos:position pos:line="4" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="15">c3<pos:position pos:line="4" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="19">c4<pos:position pos:line="4" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="23">ch<pos:position pos:line="4" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="27">cr<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><literal type="number" pos:line="4" pos:column="32">0<pos:position pos:line="4" pos:column="33"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="35">i<pos:position pos:line="4" pos:column="36"/></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">bufi<pos:position pos:line="5" pos:column="12"/></name><index pos:line="5" pos:column="12">[<expr><name pos:line="5" pos:column="13">BUFI_SIZE<pos:position pos:line="5" pos:column="22"/></name></expr>]<pos:position pos:line="5" pos:column="23"/></index></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">l<pos:position pos:line="6" pos:column="11"/></name> <init pos:line="6" pos:column="12">= <expr><literal type="number" pos:line="6" pos:column="14">0<pos:position pos:line="6" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="8" pos:column="3">buf<pos:position pos:line="8" pos:column="6"/></name><index pos:line="8" pos:column="6">[<expr><literal type="number" pos:line="8" pos:column="7">4<pos:position pos:line="8" pos:column="8"/></literal></expr>]<pos:position pos:line="8" pos:column="9"/></index></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <literal type="number" pos:line="8" pos:column="12">0<pos:position pos:line="8" pos:column="13"/></literal></expr>;<pos:position pos:line="8" pos:column="14"/></expr_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">istext<pos:position pos:line="10" pos:column="13"/></name></expr>)<pos:position pos:line="10" pos:column="14"/></condition><then pos:line="10" pos:column="14"> 
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="5">state_set_prefix<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">s<pos:position pos:line="11" pos:column="23"/></name></expr></argument>)<pos:position pos:line="11" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt></block></then></if>

  <while pos:line="13" pos:column="3">while <condition pos:line="13" pos:column="9">(<expr><name pos:line="13" pos:column="10">len<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">&gt;<pos:position pos:line="13" pos:column="18"/></operator> <literal type="number" pos:line="13" pos:column="16">0<pos:position pos:line="13" pos:column="17"/></literal></expr>)<pos:position pos:line="13" pos:column="18"/></condition>
  <block pos:line="14" pos:column="3">{
    <for pos:line="15" pos:column="5">for <control pos:line="15" pos:column="9">(<init><expr><name pos:line="15" pos:column="10">i<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <literal type="number" pos:line="15" pos:column="14">0<pos:position pos:line="15" pos:column="15"/></literal></expr> ;<pos:position pos:line="15" pos:column="17"/></init> <condition><expr><name><name pos:line="15" pos:column="18">i<pos:position pos:line="15" pos:column="19"/></name> <argument_list type="generic" pos:line="15" pos:column="20">&lt; <argument><expr><literal type="number" pos:line="15" pos:column="22">4<pos:position pos:line="15" pos:column="23"/></literal> <operator pos:line="15" pos:column="24">&amp;&amp;<pos:position pos:line="15" pos:column="34"/></operator> <name pos:line="15" pos:column="27">len<pos:position pos:line="15" pos:column="30"/></name></expr></argument> &gt;<pos:position pos:line="15" pos:column="35"/></argument_list></name> <literal type="number" pos:line="15" pos:column="33">0<pos:position pos:line="15" pos:column="34"/></literal></expr> ;<pos:position pos:line="15" pos:column="36"/></condition> <incr><expr><name pos:line="15" pos:column="37">len<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">--<pos:position pos:line="15" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="43"/></control>
    <block pos:line="16" pos:column="5">{
      <if pos:line="17" pos:column="7">if <condition pos:line="17" pos:column="10">(<expr><operator pos:line="17" pos:column="11">(<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="12">ch<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <call><name pos:line="17" pos:column="17">fgetc<pos:position pos:line="17" pos:column="22"/></name> <argument_list pos:line="17" pos:column="23">(<argument><expr><name><name pos:line="17" pos:column="24">s<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">fpin<pos:position pos:line="17" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="32"/></argument_list></call><operator pos:line="17" pos:column="32">)<pos:position pos:line="17" pos:column="33"/></operator> <operator pos:line="17" pos:column="34">==<pos:position pos:line="17" pos:column="36"/></operator> <name pos:line="17" pos:column="37">EOF<pos:position pos:line="17" pos:column="40"/></name></expr>)<pos:position pos:line="17" pos:column="41"/></condition><then pos:line="17" pos:column="41">
	<block type="pseudo"><break pos:line="18" pos:column="9">break;<pos:position pos:line="18" pos:column="15"/></break></block></then></if>
      <if pos:line="19" pos:column="7">if <condition pos:line="19" pos:column="10">(<expr><name pos:line="19" pos:column="11">ch<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">&gt;=<pos:position pos:line="19" pos:column="19"/></operator> <literal type="number" pos:line="19" pos:column="17">0<pos:position pos:line="19" pos:column="18"/></literal> <operator pos:line="19" pos:column="19">&amp;&amp;<pos:position pos:line="19" pos:column="29"/></operator> <name pos:line="19" pos:column="22">ch<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">&lt;<pos:position pos:line="19" pos:column="29"/></operator> <literal type="number" pos:line="19" pos:column="27">128<pos:position pos:line="19" pos:column="30"/></literal> <operator pos:line="19" pos:column="31">&amp;&amp;<pos:position pos:line="19" pos:column="41"/></operator> <operator pos:line="19" pos:column="34">(<pos:position pos:line="19" pos:column="35"/></operator><call><name pos:line="19" pos:column="35">base64val<pos:position pos:line="19" pos:column="44"/></name><argument_list pos:line="19" pos:column="44">(<argument><expr><name pos:line="19" pos:column="45">ch<pos:position pos:line="19" pos:column="47"/></name></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call> <operator pos:line="19" pos:column="49">!=<pos:position pos:line="19" pos:column="51"/></operator> <operator pos:line="19" pos:column="52">-<pos:position pos:line="19" pos:column="53"/></operator><literal type="number" pos:line="19" pos:column="53">1<pos:position pos:line="19" pos:column="54"/></literal> <operator pos:line="19" pos:column="55">||<pos:position pos:line="19" pos:column="57"/></operator> <name pos:line="19" pos:column="58">ch<pos:position pos:line="19" pos:column="60"/></name> <operator pos:line="19" pos:column="61">==<pos:position pos:line="19" pos:column="63"/></operator> <literal type="char" pos:line="19" pos:column="64">'='<pos:position pos:line="19" pos:column="67"/></literal><operator pos:line="19" pos:column="67">)<pos:position pos:line="19" pos:column="68"/></operator></expr>)<pos:position pos:line="19" pos:column="69"/></condition><then pos:line="19" pos:column="69">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="20" pos:column="9">buf<pos:position pos:line="20" pos:column="12"/></name><index pos:line="20" pos:column="12">[<expr><name pos:line="20" pos:column="13">i<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">++<pos:position pos:line="20" pos:column="16"/></operator></expr>]<pos:position pos:line="20" pos:column="17"/></index></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <name pos:line="20" pos:column="20">ch<pos:position pos:line="20" pos:column="22"/></name></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt></block></then></if>
    }<pos:position pos:line="21" pos:column="6"/></block></for>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">i<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">!=<pos:position pos:line="22" pos:column="13"/></operator> <literal type="number" pos:line="22" pos:column="14">4<pos:position pos:line="22" pos:column="15"/></literal></expr>)<pos:position pos:line="22" pos:column="16"/></condition><then pos:line="22" pos:column="16">
    <block pos:line="23" pos:column="5">{
      <comment type="block" pos:line="24" pos:column="7">/* "i" may be zero if there is trailing whitespace, which is not an error */</comment>
      <if pos:line="25" pos:column="7">if <condition pos:line="25" pos:column="10">(<expr><name pos:line="25" pos:column="11">i<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">!=<pos:position pos:line="25" pos:column="15"/></operator> <literal type="number" pos:line="25" pos:column="16">0<pos:position pos:line="25" pos:column="17"/></literal></expr>)<pos:position pos:line="25" pos:column="18"/></condition><then pos:line="25" pos:column="18">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="9">dprint<pos:position pos:line="26" pos:column="15"/></name> <argument_list pos:line="26" pos:column="16">(<argument><expr><literal type="number" pos:line="26" pos:column="17">2<pos:position pos:line="26" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="26" pos:column="20">(<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="21">debugfile<pos:position pos:line="26" pos:column="30"/></name><operator pos:line="26" pos:column="30">,<pos:position pos:line="26" pos:column="31"/></operator> <literal type="string" pos:line="26" pos:column="32">"%s:%d [mutt_decode_base64()]: "<pos:position pos:line="26" pos:column="64"/></literal>
	      <literal type="string" pos:line="27" pos:column="15">"didn't get a multiple of 4 chars.\n"<pos:position pos:line="27" pos:column="52"/></literal><operator pos:line="27" pos:column="52">,<pos:position pos:line="27" pos:column="53"/></operator> <name pos:line="27" pos:column="54">__FILE__<pos:position pos:line="27" pos:column="62"/></name><operator pos:line="27" pos:column="62">,<pos:position pos:line="27" pos:column="63"/></operator> <name pos:line="27" pos:column="64">__LINE__<pos:position pos:line="27" pos:column="72"/></name><operator pos:line="27" pos:column="72">)<pos:position pos:line="27" pos:column="73"/></operator></expr></argument>)<pos:position pos:line="27" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="75"/></expr_stmt></block></then></if>
      <break pos:line="28" pos:column="7">break;<pos:position pos:line="28" pos:column="13"/></break>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="31" pos:column="5">c1<pos:position pos:line="31" pos:column="7"/></name> <operator pos:line="31" pos:column="8">=<pos:position pos:line="31" pos:column="9"/></operator> <call><name pos:line="31" pos:column="10">base64val<pos:position pos:line="31" pos:column="19"/></name> <argument_list pos:line="31" pos:column="20">(<argument><expr><name><name pos:line="31" pos:column="21">buf<pos:position pos:line="31" pos:column="24"/></name><index pos:line="31" pos:column="24">[<expr><literal type="number" pos:line="31" pos:column="25">0<pos:position pos:line="31" pos:column="26"/></literal></expr>]<pos:position pos:line="31" pos:column="27"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="32" pos:column="5">c2<pos:position pos:line="32" pos:column="7"/></name> <operator pos:line="32" pos:column="8">=<pos:position pos:line="32" pos:column="9"/></operator> <call><name pos:line="32" pos:column="10">base64val<pos:position pos:line="32" pos:column="19"/></name> <argument_list pos:line="32" pos:column="20">(<argument><expr><name><name pos:line="32" pos:column="21">buf<pos:position pos:line="32" pos:column="24"/></name><index pos:line="32" pos:column="24">[<expr><literal type="number" pos:line="32" pos:column="25">1<pos:position pos:line="32" pos:column="26"/></literal></expr>]<pos:position pos:line="32" pos:column="27"/></index></name></expr></argument>)<pos:position pos:line="32" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">ch<pos:position pos:line="33" pos:column="7"/></name> <operator pos:line="33" pos:column="8">=<pos:position pos:line="33" pos:column="9"/></operator> <operator pos:line="33" pos:column="10">(<pos:position pos:line="33" pos:column="11"/></operator><name pos:line="33" pos:column="11">c1<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">&lt;&lt;<pos:position pos:line="33" pos:column="22"/></operator> <literal type="number" pos:line="33" pos:column="17">2<pos:position pos:line="33" pos:column="18"/></literal><operator pos:line="33" pos:column="18">)<pos:position pos:line="33" pos:column="19"/></operator> <operator pos:line="33" pos:column="20">|<pos:position pos:line="33" pos:column="21"/></operator> <operator pos:line="33" pos:column="22">(<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="23">c2<pos:position pos:line="33" pos:column="25"/></name> <operator pos:line="33" pos:column="26">&gt;&gt;<pos:position pos:line="33" pos:column="31"/></operator> <literal type="number" pos:line="33" pos:column="29">4<pos:position pos:line="33" pos:column="30"/></literal><operator pos:line="33" pos:column="30">)<pos:position pos:line="33" pos:column="31"/></operator></expr>;<pos:position pos:line="33" pos:column="32"/></expr_stmt>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">cr<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">&amp;&amp;<pos:position pos:line="35" pos:column="22"/></operator> <name pos:line="35" pos:column="15">ch<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">!=<pos:position pos:line="35" pos:column="20"/></operator> <literal type="char" pos:line="35" pos:column="21">'\n'<pos:position pos:line="35" pos:column="25"/></literal></expr>)<pos:position pos:line="35" pos:column="26"/></condition><then pos:line="35" pos:column="26"> 
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="36" pos:column="7">bufi<pos:position pos:line="36" pos:column="11"/></name><index pos:line="36" pos:column="11">[<expr><name pos:line="36" pos:column="12">l<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">++<pos:position pos:line="36" pos:column="15"/></operator></expr>]<pos:position pos:line="36" pos:column="16"/></index></name> <operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator> <literal type="char" pos:line="36" pos:column="19">'\r'<pos:position pos:line="36" pos:column="23"/></literal></expr>;<pos:position pos:line="36" pos:column="24"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="38" pos:column="5">cr<pos:position pos:line="38" pos:column="7"/></name> <operator pos:line="38" pos:column="8">=<pos:position pos:line="38" pos:column="9"/></operator> <literal type="number" pos:line="38" pos:column="10">0<pos:position pos:line="38" pos:column="11"/></literal></expr>;<pos:position pos:line="38" pos:column="12"/></expr_stmt>
      
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">istext<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">&amp;&amp;<pos:position pos:line="40" pos:column="26"/></operator> <name pos:line="40" pos:column="19">ch<pos:position pos:line="40" pos:column="21"/></name> <operator pos:line="40" pos:column="22">==<pos:position pos:line="40" pos:column="24"/></operator> <literal type="char" pos:line="40" pos:column="25">'\r'<pos:position pos:line="40" pos:column="29"/></literal></expr>)<pos:position pos:line="40" pos:column="30"/></condition><then pos:line="40" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="7">cr<pos:position pos:line="41" pos:column="9"/></name> <operator pos:line="41" pos:column="10">=<pos:position pos:line="41" pos:column="11"/></operator> <literal type="number" pos:line="41" pos:column="12">1<pos:position pos:line="41" pos:column="13"/></literal></expr>;<pos:position pos:line="41" pos:column="14"/></expr_stmt></block></then>
    <else pos:line="42" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="43" pos:column="7">bufi<pos:position pos:line="43" pos:column="11"/></name><index pos:line="43" pos:column="11">[<expr><name pos:line="43" pos:column="12">l<pos:position pos:line="43" pos:column="13"/></name><operator pos:line="43" pos:column="13">++<pos:position pos:line="43" pos:column="15"/></operator></expr>]<pos:position pos:line="43" pos:column="16"/></index></name> <operator pos:line="43" pos:column="17">=<pos:position pos:line="43" pos:column="18"/></operator> <name pos:line="43" pos:column="19">ch<pos:position pos:line="43" pos:column="21"/></name></expr>;<pos:position pos:line="43" pos:column="22"/></expr_stmt></block></else></if>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name><name pos:line="45" pos:column="9">buf<pos:position pos:line="45" pos:column="12"/></name><index pos:line="45" pos:column="12">[<expr><literal type="number" pos:line="45" pos:column="13">2<pos:position pos:line="45" pos:column="14"/></literal></expr>]<pos:position pos:line="45" pos:column="15"/></index></name> <operator pos:line="45" pos:column="16">==<pos:position pos:line="45" pos:column="18"/></operator> <literal type="char" pos:line="45" pos:column="19">'='<pos:position pos:line="45" pos:column="22"/></literal></expr>)<pos:position pos:line="45" pos:column="23"/></condition><then pos:line="45" pos:column="23">
      <block type="pseudo"><break pos:line="46" pos:column="7">break;<pos:position pos:line="46" pos:column="13"/></break></block></then></if>
    <expr_stmt><expr><name pos:line="47" pos:column="5">c3<pos:position pos:line="47" pos:column="7"/></name> <operator pos:line="47" pos:column="8">=<pos:position pos:line="47" pos:column="9"/></operator> <call><name pos:line="47" pos:column="10">base64val<pos:position pos:line="47" pos:column="19"/></name> <argument_list pos:line="47" pos:column="20">(<argument><expr><name><name pos:line="47" pos:column="21">buf<pos:position pos:line="47" pos:column="24"/></name><index pos:line="47" pos:column="24">[<expr><literal type="number" pos:line="47" pos:column="25">2<pos:position pos:line="47" pos:column="26"/></literal></expr>]<pos:position pos:line="47" pos:column="27"/></index></name></expr></argument>)<pos:position pos:line="47" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="48" pos:column="5">ch<pos:position pos:line="48" pos:column="7"/></name> <operator pos:line="48" pos:column="8">=<pos:position pos:line="48" pos:column="9"/></operator> <operator pos:line="48" pos:column="10">(<pos:position pos:line="48" pos:column="11"/></operator><operator pos:line="48" pos:column="11">(<pos:position pos:line="48" pos:column="12"/></operator><name pos:line="48" pos:column="12">c2<pos:position pos:line="48" pos:column="14"/></name> <operator pos:line="48" pos:column="15">&amp;<pos:position pos:line="48" pos:column="20"/></operator> <literal type="number" pos:line="48" pos:column="17">0xf<pos:position pos:line="48" pos:column="20"/></literal><operator pos:line="48" pos:column="20">)<pos:position pos:line="48" pos:column="21"/></operator> <operator pos:line="48" pos:column="22">&lt;&lt;<pos:position pos:line="48" pos:column="30"/></operator> <literal type="number" pos:line="48" pos:column="25">4<pos:position pos:line="48" pos:column="26"/></literal><operator pos:line="48" pos:column="26">)<pos:position pos:line="48" pos:column="27"/></operator> <operator pos:line="48" pos:column="28">|<pos:position pos:line="48" pos:column="29"/></operator> <operator pos:line="48" pos:column="30">(<pos:position pos:line="48" pos:column="31"/></operator><name pos:line="48" pos:column="31">c3<pos:position pos:line="48" pos:column="33"/></name> <operator pos:line="48" pos:column="34">&gt;&gt;<pos:position pos:line="48" pos:column="39"/></operator> <literal type="number" pos:line="48" pos:column="37">2<pos:position pos:line="48" pos:column="38"/></literal><operator pos:line="48" pos:column="38">)<pos:position pos:line="48" pos:column="39"/></operator></expr>;<pos:position pos:line="48" pos:column="40"/></expr_stmt>

    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name pos:line="50" pos:column="9">cr<pos:position pos:line="50" pos:column="11"/></name> <operator pos:line="50" pos:column="12">&amp;&amp;<pos:position pos:line="50" pos:column="22"/></operator> <name pos:line="50" pos:column="15">ch<pos:position pos:line="50" pos:column="17"/></name> <operator pos:line="50" pos:column="18">!=<pos:position pos:line="50" pos:column="20"/></operator> <literal type="char" pos:line="50" pos:column="21">'\n'<pos:position pos:line="50" pos:column="25"/></literal></expr>)<pos:position pos:line="50" pos:column="26"/></condition><then pos:line="50" pos:column="26">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="51" pos:column="7">bufi<pos:position pos:line="51" pos:column="11"/></name><index pos:line="51" pos:column="11">[<expr><name pos:line="51" pos:column="12">l<pos:position pos:line="51" pos:column="13"/></name><operator pos:line="51" pos:column="13">++<pos:position pos:line="51" pos:column="15"/></operator></expr>]<pos:position pos:line="51" pos:column="16"/></index></name> <operator pos:line="51" pos:column="17">=<pos:position pos:line="51" pos:column="18"/></operator> <literal type="char" pos:line="51" pos:column="19">'\r'<pos:position pos:line="51" pos:column="23"/></literal></expr>;<pos:position pos:line="51" pos:column="24"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="53" pos:column="5">cr<pos:position pos:line="53" pos:column="7"/></name> <operator pos:line="53" pos:column="8">=<pos:position pos:line="53" pos:column="9"/></operator> <literal type="number" pos:line="53" pos:column="10">0<pos:position pos:line="53" pos:column="11"/></literal></expr>;<pos:position pos:line="53" pos:column="12"/></expr_stmt>

    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name pos:line="55" pos:column="9">istext<pos:position pos:line="55" pos:column="15"/></name> <operator pos:line="55" pos:column="16">&amp;&amp;<pos:position pos:line="55" pos:column="26"/></operator> <name pos:line="55" pos:column="19">ch<pos:position pos:line="55" pos:column="21"/></name> <operator pos:line="55" pos:column="22">==<pos:position pos:line="55" pos:column="24"/></operator> <literal type="char" pos:line="55" pos:column="25">'\r'<pos:position pos:line="55" pos:column="29"/></literal></expr>)<pos:position pos:line="55" pos:column="30"/></condition><then pos:line="55" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="7">cr<pos:position pos:line="56" pos:column="9"/></name> <operator pos:line="56" pos:column="10">=<pos:position pos:line="56" pos:column="11"/></operator> <literal type="number" pos:line="56" pos:column="12">1<pos:position pos:line="56" pos:column="13"/></literal></expr>;<pos:position pos:line="56" pos:column="14"/></expr_stmt></block></then>
    <else pos:line="57" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="58" pos:column="7">bufi<pos:position pos:line="58" pos:column="11"/></name><index pos:line="58" pos:column="11">[<expr><name pos:line="58" pos:column="12">l<pos:position pos:line="58" pos:column="13"/></name><operator pos:line="58" pos:column="13">++<pos:position pos:line="58" pos:column="15"/></operator></expr>]<pos:position pos:line="58" pos:column="16"/></index></name> <operator pos:line="58" pos:column="17">=<pos:position pos:line="58" pos:column="18"/></operator> <name pos:line="58" pos:column="19">ch<pos:position pos:line="58" pos:column="21"/></name></expr>;<pos:position pos:line="58" pos:column="22"/></expr_stmt></block></else></if>

    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><name><name pos:line="60" pos:column="9">buf<pos:position pos:line="60" pos:column="12"/></name><index pos:line="60" pos:column="12">[<expr><literal type="number" pos:line="60" pos:column="13">3<pos:position pos:line="60" pos:column="14"/></literal></expr>]<pos:position pos:line="60" pos:column="15"/></index></name> <operator pos:line="60" pos:column="16">==<pos:position pos:line="60" pos:column="18"/></operator> <literal type="char" pos:line="60" pos:column="19">'='<pos:position pos:line="60" pos:column="22"/></literal></expr>)<pos:position pos:line="60" pos:column="23"/></condition><then pos:line="60" pos:column="23"> <block type="pseudo"><break pos:line="60" pos:column="24">break;<pos:position pos:line="60" pos:column="30"/></break></block></then></if>
    <expr_stmt><expr><name pos:line="61" pos:column="5">c4<pos:position pos:line="61" pos:column="7"/></name> <operator pos:line="61" pos:column="8">=<pos:position pos:line="61" pos:column="9"/></operator> <call><name pos:line="61" pos:column="10">base64val<pos:position pos:line="61" pos:column="19"/></name> <argument_list pos:line="61" pos:column="20">(<argument><expr><name><name pos:line="61" pos:column="21">buf<pos:position pos:line="61" pos:column="24"/></name><index pos:line="61" pos:column="24">[<expr><literal type="number" pos:line="61" pos:column="25">3<pos:position pos:line="61" pos:column="26"/></literal></expr>]<pos:position pos:line="61" pos:column="27"/></index></name></expr></argument>)<pos:position pos:line="61" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="62" pos:column="5">ch<pos:position pos:line="62" pos:column="7"/></name> <operator pos:line="62" pos:column="8">=<pos:position pos:line="62" pos:column="9"/></operator> <operator pos:line="62" pos:column="10">(<pos:position pos:line="62" pos:column="11"/></operator><operator pos:line="62" pos:column="11">(<pos:position pos:line="62" pos:column="12"/></operator><name pos:line="62" pos:column="12">c3<pos:position pos:line="62" pos:column="14"/></name> <operator pos:line="62" pos:column="15">&amp;<pos:position pos:line="62" pos:column="20"/></operator> <literal type="number" pos:line="62" pos:column="17">0x3<pos:position pos:line="62" pos:column="20"/></literal><operator pos:line="62" pos:column="20">)<pos:position pos:line="62" pos:column="21"/></operator> <operator pos:line="62" pos:column="22">&lt;&lt;<pos:position pos:line="62" pos:column="30"/></operator> <literal type="number" pos:line="62" pos:column="25">6<pos:position pos:line="62" pos:column="26"/></literal><operator pos:line="62" pos:column="26">)<pos:position pos:line="62" pos:column="27"/></operator> <operator pos:line="62" pos:column="28">|<pos:position pos:line="62" pos:column="29"/></operator> <name pos:line="62" pos:column="30">c4<pos:position pos:line="62" pos:column="32"/></name></expr>;<pos:position pos:line="62" pos:column="33"/></expr_stmt>

    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><name pos:line="64" pos:column="9">cr<pos:position pos:line="64" pos:column="11"/></name> <operator pos:line="64" pos:column="12">&amp;&amp;<pos:position pos:line="64" pos:column="22"/></operator> <name pos:line="64" pos:column="15">ch<pos:position pos:line="64" pos:column="17"/></name> <operator pos:line="64" pos:column="18">!=<pos:position pos:line="64" pos:column="20"/></operator> <literal type="char" pos:line="64" pos:column="21">'\n'<pos:position pos:line="64" pos:column="25"/></literal></expr>)<pos:position pos:line="64" pos:column="26"/></condition><then pos:line="64" pos:column="26">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="65" pos:column="7">bufi<pos:position pos:line="65" pos:column="11"/></name><index pos:line="65" pos:column="11">[<expr><name pos:line="65" pos:column="12">l<pos:position pos:line="65" pos:column="13"/></name><operator pos:line="65" pos:column="13">++<pos:position pos:line="65" pos:column="15"/></operator></expr>]<pos:position pos:line="65" pos:column="16"/></index></name> <operator pos:line="65" pos:column="17">=<pos:position pos:line="65" pos:column="18"/></operator> <literal type="char" pos:line="65" pos:column="19">'\r'<pos:position pos:line="65" pos:column="23"/></literal></expr>;<pos:position pos:line="65" pos:column="24"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="66" pos:column="5">cr<pos:position pos:line="66" pos:column="7"/></name> <operator pos:line="66" pos:column="8">=<pos:position pos:line="66" pos:column="9"/></operator> <literal type="number" pos:line="66" pos:column="10">0<pos:position pos:line="66" pos:column="11"/></literal></expr>;<pos:position pos:line="66" pos:column="12"/></expr_stmt>

    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><name pos:line="68" pos:column="9">istext<pos:position pos:line="68" pos:column="15"/></name> <operator pos:line="68" pos:column="16">&amp;&amp;<pos:position pos:line="68" pos:column="26"/></operator> <name pos:line="68" pos:column="19">ch<pos:position pos:line="68" pos:column="21"/></name> <operator pos:line="68" pos:column="22">==<pos:position pos:line="68" pos:column="24"/></operator> <literal type="char" pos:line="68" pos:column="25">'\r'<pos:position pos:line="68" pos:column="29"/></literal></expr>)<pos:position pos:line="68" pos:column="30"/></condition><then pos:line="68" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="7">cr<pos:position pos:line="69" pos:column="9"/></name> <operator pos:line="69" pos:column="10">=<pos:position pos:line="69" pos:column="11"/></operator> <literal type="number" pos:line="69" pos:column="12">1<pos:position pos:line="69" pos:column="13"/></literal></expr>;<pos:position pos:line="69" pos:column="14"/></expr_stmt></block></then>
    <else pos:line="70" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="71" pos:column="7">bufi<pos:position pos:line="71" pos:column="11"/></name><index pos:line="71" pos:column="11">[<expr><name pos:line="71" pos:column="12">l<pos:position pos:line="71" pos:column="13"/></name><operator pos:line="71" pos:column="13">++<pos:position pos:line="71" pos:column="15"/></operator></expr>]<pos:position pos:line="71" pos:column="16"/></index></name> <operator pos:line="71" pos:column="17">=<pos:position pos:line="71" pos:column="18"/></operator> <name pos:line="71" pos:column="19">ch<pos:position pos:line="71" pos:column="21"/></name></expr>;<pos:position pos:line="71" pos:column="22"/></expr_stmt></block></else></if>
    
    <if pos:line="73" pos:column="5">if <condition pos:line="73" pos:column="8">(<expr><name pos:line="73" pos:column="9">l<pos:position pos:line="73" pos:column="10"/></name> <operator pos:line="73" pos:column="11">+<pos:position pos:line="73" pos:column="12"/></operator> <literal type="number" pos:line="73" pos:column="13">8<pos:position pos:line="73" pos:column="14"/></literal> <operator pos:line="73" pos:column="15">&gt;=<pos:position pos:line="73" pos:column="20"/></operator> <sizeof pos:line="73" pos:column="18">sizeof <argument_list pos:line="73" pos:column="25">(<argument><expr><name pos:line="73" pos:column="26">bufi<pos:position pos:line="73" pos:column="30"/></name></expr></argument>)<pos:position pos:line="73" pos:column="31"/></argument_list></sizeof></expr>)<pos:position pos:line="73" pos:column="32"/></condition><then pos:line="73" pos:column="32">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="7">mutt_convert_to_state<pos:position pos:line="74" pos:column="28"/></name> <argument_list pos:line="74" pos:column="29">(<argument><expr><name pos:line="74" pos:column="30">cd<pos:position pos:line="74" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="34">bufi<pos:position pos:line="74" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="40">&amp;<pos:position pos:line="74" pos:column="45"/></operator><name pos:line="74" pos:column="41">l<pos:position pos:line="74" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="44">s<pos:position pos:line="74" pos:column="45"/></name></expr></argument>)<pos:position pos:line="74" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="47"/></expr_stmt></block></then></if>
  }<pos:position pos:line="75" pos:column="4"/></block></while>

  <if pos:line="77" pos:column="3">if <condition pos:line="77" pos:column="6">(<expr><name pos:line="77" pos:column="7">cr<pos:position pos:line="77" pos:column="9"/></name></expr>)<pos:position pos:line="77" pos:column="10"/></condition><then pos:line="77" pos:column="10"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="77" pos:column="11">bufi<pos:position pos:line="77" pos:column="15"/></name><index pos:line="77" pos:column="15">[<expr><name pos:line="77" pos:column="16">l<pos:position pos:line="77" pos:column="17"/></name><operator pos:line="77" pos:column="17">++<pos:position pos:line="77" pos:column="19"/></operator></expr>]<pos:position pos:line="77" pos:column="20"/></index></name> <operator pos:line="77" pos:column="21">=<pos:position pos:line="77" pos:column="22"/></operator> <literal type="char" pos:line="77" pos:column="23">'\r'<pos:position pos:line="77" pos:column="27"/></literal></expr>;<pos:position pos:line="77" pos:column="28"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="79" pos:column="3">mutt_convert_to_state<pos:position pos:line="79" pos:column="24"/></name> <argument_list pos:line="79" pos:column="25">(<argument><expr><name pos:line="79" pos:column="26">cd<pos:position pos:line="79" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="30">bufi<pos:position pos:line="79" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="36">&amp;<pos:position pos:line="79" pos:column="41"/></operator><name pos:line="79" pos:column="37">l<pos:position pos:line="79" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="40">s<pos:position pos:line="79" pos:column="41"/></name></expr></argument>)<pos:position pos:line="79" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="80" pos:column="3">mutt_convert_to_state<pos:position pos:line="80" pos:column="24"/></name> <argument_list pos:line="80" pos:column="25">(<argument><expr><name pos:line="80" pos:column="26">cd<pos:position pos:line="80" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="30">0<pos:position pos:line="80" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="33">0<pos:position pos:line="80" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="80" pos:column="36">s<pos:position pos:line="80" pos:column="37"/></name></expr></argument>)<pos:position pos:line="80" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="39"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="82" pos:column="3">state_reset_prefix<pos:position pos:line="82" pos:column="21"/></name><argument_list pos:line="82" pos:column="21">(<argument><expr><name pos:line="82" pos:column="22">s<pos:position pos:line="82" pos:column="23"/></name></expr></argument>)<pos:position pos:line="82" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="25"/></expr_stmt>
}<pos:position pos:line="83" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1279_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_lookup_mime_type<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">BODY<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">att<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">path<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">FILE<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">f<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">p<pos:position pos:line="4" pos:column="10"/></name></decl>, <modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="13">q<pos:position pos:line="4" pos:column="14"/></name></decl>, <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="17">ct<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">buf<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><name pos:line="5" pos:column="12">LONG_STRING<pos:position pos:line="5" pos:column="23"/></name></expr>]<pos:position pos:line="5" pos:column="24"/></index></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">subtype<pos:position pos:line="6" pos:column="15"/></name><index pos:line="6" pos:column="15">[<expr><name pos:line="6" pos:column="16">STRING<pos:position pos:line="6" pos:column="22"/></name></expr>]<pos:position pos:line="6" pos:column="23"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="6" pos:column="25">xtype<pos:position pos:line="6" pos:column="30"/></name><index pos:line="6" pos:column="30">[<expr><name pos:line="6" pos:column="31">STRING<pos:position pos:line="6" pos:column="37"/></name></expr>]<pos:position pos:line="6" pos:column="38"/></index></name></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">count<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">szf<pos:position pos:line="8" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="12">sze<pos:position pos:line="8" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="17">cur_sze<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">type<pos:position pos:line="9" pos:column="11"/></name></decl>;<pos:position pos:line="9" pos:column="12"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="11" pos:column="3">*<pos:position pos:line="11" pos:column="4"/></operator><name pos:line="11" pos:column="4">subtype<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <literal type="char" pos:line="11" pos:column="14">'\0'<pos:position pos:line="11" pos:column="18"/></literal></expr>;<pos:position pos:line="11" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="12" pos:column="3">*<pos:position pos:line="12" pos:column="4"/></operator><name pos:line="12" pos:column="4">xtype<pos:position pos:line="12" pos:column="9"/></name>   <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <literal type="char" pos:line="12" pos:column="14">'\0'<pos:position pos:line="12" pos:column="18"/></literal></expr>;<pos:position pos:line="12" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name pos:line="13" pos:column="3">type<pos:position pos:line="13" pos:column="7"/></name>     <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <name pos:line="13" pos:column="14">TYPEOTHER<pos:position pos:line="13" pos:column="23"/></name></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="14" pos:column="3">cur_sze<pos:position pos:line="14" pos:column="10"/></name>  <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <literal type="number" pos:line="14" pos:column="14">0<pos:position pos:line="14" pos:column="15"/></literal></expr>;<pos:position pos:line="14" pos:column="16"/></expr_stmt>

  <expr_stmt><expr><name pos:line="16" pos:column="3">szf<pos:position pos:line="16" pos:column="6"/></name>      <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <call><name pos:line="16" pos:column="14">mutt_strlen<pos:position pos:line="16" pos:column="25"/></name> <argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">path<pos:position pos:line="16" pos:column="31"/></name></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>

  <for pos:line="18" pos:column="3">for <control pos:line="18" pos:column="7">(<init><expr><name pos:line="18" pos:column="8">count<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <literal type="number" pos:line="18" pos:column="16">0<pos:position pos:line="18" pos:column="17"/></literal></expr> ;<pos:position pos:line="18" pos:column="19"/></init> <condition><expr><name pos:line="18" pos:column="20">count<pos:position pos:line="18" pos:column="25"/></name> <operator pos:line="18" pos:column="26">&lt;<pos:position pos:line="18" pos:column="30"/></operator> <literal type="number" pos:line="18" pos:column="28">3<pos:position pos:line="18" pos:column="29"/></literal></expr> ;<pos:position pos:line="18" pos:column="31"/></condition> <incr><expr><name pos:line="18" pos:column="32">count<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">++<pos:position pos:line="18" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="40"/></control>
  <block pos:line="19" pos:column="3">{
    <comment type="block" pos:line="20" pos:column="5">/*
     * can't use strtok() because we use it in an inner loop below, so use
     * a switch statement here instead.
     */</comment>
    <switch pos:line="24" pos:column="5">switch <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">count<pos:position pos:line="24" pos:column="18"/></name></expr>)<pos:position pos:line="24" pos:column="19"/></condition>
    <block pos:line="25" pos:column="5">{
      <case pos:line="26" pos:column="7">case <expr><literal type="number" pos:line="26" pos:column="12">0<pos:position pos:line="26" pos:column="13"/></literal></expr>:<pos:position pos:line="26" pos:column="14"/></case>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">snprintf<pos:position pos:line="27" pos:column="17"/></name> <argument_list pos:line="27" pos:column="18">(<argument><expr><name pos:line="27" pos:column="19">buf<pos:position pos:line="27" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="24">sizeof <argument_list pos:line="27" pos:column="31">(<argument><expr><name pos:line="27" pos:column="32">buf<pos:position pos:line="27" pos:column="35"/></name></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="38">"%s/.mime.types"<pos:position pos:line="27" pos:column="54"/></literal></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="56">NONULL<pos:position pos:line="27" pos:column="62"/></name><argument_list pos:line="27" pos:column="62">(<argument><expr><name pos:line="27" pos:column="63">Homedir<pos:position pos:line="27" pos:column="70"/></name></expr></argument>)<pos:position pos:line="27" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="73"/></expr_stmt>
	<break pos:line="28" pos:column="9">break;<pos:position pos:line="28" pos:column="15"/></break>
      <case pos:line="29" pos:column="7">case <expr><literal type="number" pos:line="29" pos:column="12">1<pos:position pos:line="29" pos:column="13"/></literal></expr>:<pos:position pos:line="29" pos:column="14"/></case>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">strfcpy<pos:position pos:line="30" pos:column="16"/></name> <argument_list pos:line="30" pos:column="17">(<argument><expr><name pos:line="30" pos:column="18">buf<pos:position pos:line="30" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="23">SYSCONFDIR<pos:position pos:line="30" pos:column="33"/></name><literal type="string" pos:line="30" pos:column="33">"/mime.types"<pos:position pos:line="30" pos:column="46"/></literal></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="48">sizeof<argument_list pos:line="30" pos:column="54">(<argument><expr><name pos:line="30" pos:column="55">buf<pos:position pos:line="30" pos:column="58"/></name></expr></argument>)<pos:position pos:line="30" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="61"/></expr_stmt>
	<break pos:line="31" pos:column="9">break;<pos:position pos:line="31" pos:column="15"/></break>
      <case pos:line="32" pos:column="7">case <expr><literal type="number" pos:line="32" pos:column="12">2<pos:position pos:line="32" pos:column="13"/></literal></expr>:<pos:position pos:line="32" pos:column="14"/></case>
	<expr_stmt><expr><call><name pos:line="33" pos:column="9">strfcpy<pos:position pos:line="33" pos:column="16"/></name> <argument_list pos:line="33" pos:column="17">(<argument><expr><name pos:line="33" pos:column="18">buf<pos:position pos:line="33" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="23">PKGDATADIR<pos:position pos:line="33" pos:column="33"/></name><literal type="string" pos:line="33" pos:column="33">"/mime.types"<pos:position pos:line="33" pos:column="46"/></literal></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="48">sizeof <argument_list pos:line="33" pos:column="55">(<argument><expr><name pos:line="33" pos:column="56">buf<pos:position pos:line="33" pos:column="59"/></name></expr></argument>)<pos:position pos:line="33" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="62"/></expr_stmt>
	<break pos:line="34" pos:column="9">break;<pos:position pos:line="34" pos:column="15"/></break>
      <default pos:line="35" pos:column="7">default:<pos:position pos:line="35" pos:column="15"/></default>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">dprint<pos:position pos:line="36" pos:column="15"/></name> <argument_list pos:line="36" pos:column="16">(<argument><expr><literal type="number" pos:line="36" pos:column="17">1<pos:position pos:line="36" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="36" pos:column="20">(<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="21">debugfile<pos:position pos:line="36" pos:column="30"/></name><operator pos:line="36" pos:column="30">,<pos:position pos:line="36" pos:column="31"/></operator> <literal type="string" pos:line="36" pos:column="32">"mutt_lookup_mime_type: Internal error, count = %d.\n"<pos:position pos:line="36" pos:column="86"/></literal><operator pos:line="36" pos:column="86">,<pos:position pos:line="36" pos:column="87"/></operator> <name pos:line="36" pos:column="88">count<pos:position pos:line="36" pos:column="93"/></name><operator pos:line="36" pos:column="93">)<pos:position pos:line="36" pos:column="94"/></operator></expr></argument>)<pos:position pos:line="36" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="96"/></expr_stmt>
	<goto pos:line="37" pos:column="9">goto <name pos:line="37" pos:column="14">bye<pos:position pos:line="37" pos:column="17"/></name>;<pos:position pos:line="37" pos:column="18"/></goto>	<comment type="block" pos:line="37" pos:column="25">/* shouldn't happen */</comment>
    }<pos:position pos:line="38" pos:column="6"/></block></switch>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><operator pos:line="40" pos:column="9">(<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="10">f<pos:position pos:line="40" pos:column="11"/></name> <operator pos:line="40" pos:column="12">=<pos:position pos:line="40" pos:column="13"/></operator> <call><name pos:line="40" pos:column="14">fopen<pos:position pos:line="40" pos:column="19"/></name> <argument_list pos:line="40" pos:column="20">(<argument><expr><name pos:line="40" pos:column="21">buf<pos:position pos:line="40" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="26">"r"<pos:position pos:line="40" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="30"/></argument_list></call><operator pos:line="40" pos:column="30">)<pos:position pos:line="40" pos:column="31"/></operator> <operator pos:line="40" pos:column="32">!=<pos:position pos:line="40" pos:column="34"/></operator> <name pos:line="40" pos:column="35">NULL<pos:position pos:line="40" pos:column="39"/></name></expr>)<pos:position pos:line="40" pos:column="40"/></condition><then pos:line="40" pos:column="40">
    <block pos:line="41" pos:column="5">{
      <while pos:line="42" pos:column="7">while <condition pos:line="42" pos:column="13">(<expr><call><name pos:line="42" pos:column="14">fgets<pos:position pos:line="42" pos:column="19"/></name> <argument_list pos:line="42" pos:column="20">(<argument><expr><name pos:line="42" pos:column="21">buf<pos:position pos:line="42" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="26">sizeof <argument_list pos:line="42" pos:column="33">(<argument><expr><name pos:line="42" pos:column="34">buf<pos:position pos:line="42" pos:column="37"/></name></expr></argument>)<pos:position pos:line="42" pos:column="38"/></argument_list></sizeof> <operator pos:line="42" pos:column="39">-<pos:position pos:line="42" pos:column="40"/></operator> <literal type="number" pos:line="42" pos:column="41">1<pos:position pos:line="42" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="44">f<pos:position pos:line="42" pos:column="45"/></name></expr></argument>)<pos:position pos:line="42" pos:column="46"/></argument_list></call> <operator pos:line="42" pos:column="47">!=<pos:position pos:line="42" pos:column="49"/></operator> <name pos:line="42" pos:column="50">NULL<pos:position pos:line="42" pos:column="54"/></name></expr>)<pos:position pos:line="42" pos:column="55"/></condition>
      <block pos:line="43" pos:column="7">{
	<comment type="block" pos:line="44" pos:column="9">/* weed out any comments */</comment>
	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><operator pos:line="45" pos:column="13">(<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="14">p<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">=<pos:position pos:line="45" pos:column="17"/></operator> <call><name pos:line="45" pos:column="18">strchr<pos:position pos:line="45" pos:column="24"/></name> <argument_list pos:line="45" pos:column="25">(<argument><expr><name pos:line="45" pos:column="26">buf<pos:position pos:line="45" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="45" pos:column="31">'#'<pos:position pos:line="45" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="35"/></argument_list></call><operator pos:line="45" pos:column="35">)<pos:position pos:line="45" pos:column="36"/></operator></expr>)<pos:position pos:line="45" pos:column="37"/></condition><then pos:line="45" pos:column="37">
	  <block type="pseudo"><expr_stmt><expr><operator pos:line="46" pos:column="11">*<pos:position pos:line="46" pos:column="12"/></operator><name pos:line="46" pos:column="12">p<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">=<pos:position pos:line="46" pos:column="15"/></operator> <literal type="number" pos:line="46" pos:column="16">0<pos:position pos:line="46" pos:column="17"/></literal></expr>;<pos:position pos:line="46" pos:column="18"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="48" pos:column="9">/* remove any leading space. */</comment>
	<expr_stmt><expr><name pos:line="49" pos:column="9">ct<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">=<pos:position pos:line="49" pos:column="13"/></operator> <name pos:line="49" pos:column="14">buf<pos:position pos:line="49" pos:column="17"/></name></expr>;<pos:position pos:line="49" pos:column="18"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="50" pos:column="9">SKIPWS<pos:position pos:line="50" pos:column="15"/></name> <argument_list pos:line="50" pos:column="16">(<argument><expr><name pos:line="50" pos:column="17">ct<pos:position pos:line="50" pos:column="19"/></name></expr></argument>)<pos:position pos:line="50" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="21"/></expr_stmt>

	<comment type="block" pos:line="52" pos:column="9">/* position on the next field in this line */</comment>
	<if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><operator pos:line="53" pos:column="13">(<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="14">p<pos:position pos:line="53" pos:column="15"/></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <call><name pos:line="53" pos:column="18">strpbrk<pos:position pos:line="53" pos:column="25"/></name> <argument_list pos:line="53" pos:column="26">(<argument><expr><name pos:line="53" pos:column="27">ct<pos:position pos:line="53" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="31">" \t"<pos:position pos:line="53" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="37"/></argument_list></call><operator pos:line="53" pos:column="37">)<pos:position pos:line="53" pos:column="38"/></operator> <operator pos:line="53" pos:column="39">==<pos:position pos:line="53" pos:column="41"/></operator> <name pos:line="53" pos:column="42">NULL<pos:position pos:line="53" pos:column="46"/></name></expr>)<pos:position pos:line="53" pos:column="47"/></condition><then pos:line="53" pos:column="47">
	  <block type="pseudo"><continue pos:line="54" pos:column="11">continue;<pos:position pos:line="54" pos:column="20"/></continue></block></then></if>
	<expr_stmt><expr><operator pos:line="55" pos:column="9">*<pos:position pos:line="55" pos:column="10"/></operator><name pos:line="55" pos:column="10">p<pos:position pos:line="55" pos:column="11"/></name><operator pos:line="55" pos:column="11">++<pos:position pos:line="55" pos:column="13"/></operator> <operator pos:line="55" pos:column="14">=<pos:position pos:line="55" pos:column="15"/></operator> <literal type="number" pos:line="55" pos:column="16">0<pos:position pos:line="55" pos:column="17"/></literal></expr>;<pos:position pos:line="55" pos:column="18"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="56" pos:column="9">SKIPWS<pos:position pos:line="56" pos:column="15"/></name> <argument_list pos:line="56" pos:column="16">(<argument><expr><name pos:line="56" pos:column="17">p<pos:position pos:line="56" pos:column="18"/></name></expr></argument>)<pos:position pos:line="56" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="20"/></expr_stmt>

	<comment type="block" pos:line="58" pos:column="9">/* cycle through the file extensions */</comment>
	<while pos:line="59" pos:column="9">while <condition pos:line="59" pos:column="15">(<expr><operator pos:line="59" pos:column="16">(<pos:position pos:line="59" pos:column="17"/></operator><name pos:line="59" pos:column="17">p<pos:position pos:line="59" pos:column="18"/></name> <operator pos:line="59" pos:column="19">=<pos:position pos:line="59" pos:column="20"/></operator> <call><name pos:line="59" pos:column="21">strtok<pos:position pos:line="59" pos:column="27"/></name> <argument_list pos:line="59" pos:column="28">(<argument><expr><name pos:line="59" pos:column="29">p<pos:position pos:line="59" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="32">" \t\n"<pos:position pos:line="59" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="40"/></argument_list></call><operator pos:line="59" pos:column="40">)<pos:position pos:line="59" pos:column="41"/></operator></expr>)<pos:position pos:line="59" pos:column="42"/></condition>
	<block pos:line="60" pos:column="9">{
	  <expr_stmt><expr><name pos:line="61" pos:column="11">sze<pos:position pos:line="61" pos:column="14"/></name> <operator pos:line="61" pos:column="15">=<pos:position pos:line="61" pos:column="16"/></operator> <call><name pos:line="61" pos:column="17">mutt_strlen<pos:position pos:line="61" pos:column="28"/></name> <argument_list pos:line="61" pos:column="29">(<argument><expr><name pos:line="61" pos:column="30">p<pos:position pos:line="61" pos:column="31"/></name></expr></argument>)<pos:position pos:line="61" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="33"/></expr_stmt>
	  <if pos:line="62" pos:column="11">if <condition pos:line="62" pos:column="14">(<expr><operator pos:line="62" pos:column="15">(<pos:position pos:line="62" pos:column="16"/></operator><name pos:line="62" pos:column="16">sze<pos:position pos:line="62" pos:column="19"/></name> <operator pos:line="62" pos:column="20">&gt;<pos:position pos:line="62" pos:column="24"/></operator> <name pos:line="62" pos:column="22">cur_sze<pos:position pos:line="62" pos:column="29"/></name><operator pos:line="62" pos:column="29">)<pos:position pos:line="62" pos:column="30"/></operator> <operator pos:line="62" pos:column="31">&amp;&amp;<pos:position pos:line="62" pos:column="41"/></operator> <operator pos:line="62" pos:column="34">(<pos:position pos:line="62" pos:column="35"/></operator><name pos:line="62" pos:column="35">szf<pos:position pos:line="62" pos:column="38"/></name> <operator pos:line="62" pos:column="39">&gt;=<pos:position pos:line="62" pos:column="44"/></operator> <name pos:line="62" pos:column="42">sze<pos:position pos:line="62" pos:column="45"/></name><operator pos:line="62" pos:column="45">)<pos:position pos:line="62" pos:column="46"/></operator> <operator pos:line="62" pos:column="47">&amp;&amp;<pos:position pos:line="62" pos:column="57"/></operator>
	      <operator pos:line="63" pos:column="15">(<pos:position pos:line="63" pos:column="16"/></operator><call><name pos:line="63" pos:column="16">mutt_strcasecmp<pos:position pos:line="63" pos:column="31"/></name> <argument_list pos:line="63" pos:column="32">(<argument><expr><name pos:line="63" pos:column="33">path<pos:position pos:line="63" pos:column="37"/></name> <operator pos:line="63" pos:column="38">+<pos:position pos:line="63" pos:column="39"/></operator> <name pos:line="63" pos:column="40">szf<pos:position pos:line="63" pos:column="43"/></name> <operator pos:line="63" pos:column="44">-<pos:position pos:line="63" pos:column="45"/></operator> <name pos:line="63" pos:column="46">sze<pos:position pos:line="63" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="51">p<pos:position pos:line="63" pos:column="52"/></name></expr></argument>)<pos:position pos:line="63" pos:column="53"/></argument_list></call> <operator pos:line="63" pos:column="54">==<pos:position pos:line="63" pos:column="56"/></operator> <literal type="number" pos:line="63" pos:column="57">0<pos:position pos:line="63" pos:column="58"/></literal> <operator pos:line="63" pos:column="59">||<pos:position pos:line="63" pos:column="61"/></operator> <call><name pos:line="63" pos:column="62">ascii_strcasecmp<pos:position pos:line="63" pos:column="78"/></name> <argument_list pos:line="63" pos:column="79">(<argument><expr><name pos:line="63" pos:column="80">path<pos:position pos:line="63" pos:column="84"/></name> <operator pos:line="63" pos:column="85">+<pos:position pos:line="63" pos:column="86"/></operator> <name pos:line="63" pos:column="87">szf<pos:position pos:line="63" pos:column="90"/></name> <operator pos:line="63" pos:column="91">-<pos:position pos:line="63" pos:column="92"/></operator> <name pos:line="63" pos:column="93">sze<pos:position pos:line="63" pos:column="96"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="98">p<pos:position pos:line="63" pos:column="99"/></name></expr></argument>)<pos:position pos:line="63" pos:column="100"/></argument_list></call> <operator pos:line="63" pos:column="101">==<pos:position pos:line="63" pos:column="103"/></operator> <literal type="number" pos:line="63" pos:column="104">0<pos:position pos:line="63" pos:column="105"/></literal><operator pos:line="63" pos:column="105">)<pos:position pos:line="63" pos:column="106"/></operator> <operator pos:line="63" pos:column="107">&amp;&amp;<pos:position pos:line="63" pos:column="117"/></operator>
	      <operator pos:line="64" pos:column="15">(<pos:position pos:line="64" pos:column="16"/></operator><name pos:line="64" pos:column="16">szf<pos:position pos:line="64" pos:column="19"/></name> <operator pos:line="64" pos:column="20">==<pos:position pos:line="64" pos:column="22"/></operator> <name pos:line="64" pos:column="23">sze<pos:position pos:line="64" pos:column="26"/></name> <operator pos:line="64" pos:column="27">||<pos:position pos:line="64" pos:column="29"/></operator> <name><name pos:line="64" pos:column="30">path<pos:position pos:line="64" pos:column="34"/></name><index pos:line="64" pos:column="34">[<expr><name pos:line="64" pos:column="35">szf<pos:position pos:line="64" pos:column="38"/></name> <operator pos:line="64" pos:column="39">-<pos:position pos:line="64" pos:column="40"/></operator> <name pos:line="64" pos:column="41">sze<pos:position pos:line="64" pos:column="44"/></name> <operator pos:line="64" pos:column="45">-<pos:position pos:line="64" pos:column="46"/></operator> <literal type="number" pos:line="64" pos:column="47">1<pos:position pos:line="64" pos:column="48"/></literal></expr>]<pos:position pos:line="64" pos:column="49"/></index></name> <operator pos:line="64" pos:column="50">==<pos:position pos:line="64" pos:column="52"/></operator> <literal type="char" pos:line="64" pos:column="53">'.'<pos:position pos:line="64" pos:column="56"/></literal><operator pos:line="64" pos:column="56">)<pos:position pos:line="64" pos:column="57"/></operator></expr>)<pos:position pos:line="64" pos:column="58"/></condition><then pos:line="64" pos:column="58">
	  <block pos:line="65" pos:column="11">{
	    <comment type="block" pos:line="66" pos:column="13">/* get the content-type */</comment>

	    <if pos:line="68" pos:column="13">if <condition pos:line="68" pos:column="16">(<expr><operator pos:line="68" pos:column="17">(<pos:position pos:line="68" pos:column="18"/></operator><name pos:line="68" pos:column="18">p<pos:position pos:line="68" pos:column="19"/></name> <operator pos:line="68" pos:column="20">=<pos:position pos:line="68" pos:column="21"/></operator> <call><name pos:line="68" pos:column="22">strchr<pos:position pos:line="68" pos:column="28"/></name> <argument_list pos:line="68" pos:column="29">(<argument><expr><name pos:line="68" pos:column="30">ct<pos:position pos:line="68" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="68" pos:column="34">'/'<pos:position pos:line="68" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="38"/></argument_list></call><operator pos:line="68" pos:column="38">)<pos:position pos:line="68" pos:column="39"/></operator> <operator pos:line="68" pos:column="40">==<pos:position pos:line="68" pos:column="42"/></operator> <name pos:line="68" pos:column="43">NULL<pos:position pos:line="68" pos:column="47"/></name></expr>)<pos:position pos:line="68" pos:column="48"/></condition><then pos:line="68" pos:column="48">
	    <block pos:line="69" pos:column="13">{
	      <comment type="block" pos:line="70" pos:column="15">/* malformed line, just skip it. */</comment>
	      <break pos:line="71" pos:column="15">break;<pos:position pos:line="71" pos:column="21"/></break>
	    }<pos:position pos:line="72" pos:column="14"/></block></then></if>
	    <expr_stmt><expr><operator pos:line="73" pos:column="13">*<pos:position pos:line="73" pos:column="14"/></operator><name pos:line="73" pos:column="14">p<pos:position pos:line="73" pos:column="15"/></name><operator pos:line="73" pos:column="15">++<pos:position pos:line="73" pos:column="17"/></operator> <operator pos:line="73" pos:column="18">=<pos:position pos:line="73" pos:column="19"/></operator> <literal type="number" pos:line="73" pos:column="20">0<pos:position pos:line="73" pos:column="21"/></literal></expr>;<pos:position pos:line="73" pos:column="22"/></expr_stmt>

	    <for pos:line="75" pos:column="13">for <control pos:line="75" pos:column="17">(<init><expr><name pos:line="75" pos:column="18">q<pos:position pos:line="75" pos:column="19"/></name> <operator pos:line="75" pos:column="20">=<pos:position pos:line="75" pos:column="21"/></operator> <name pos:line="75" pos:column="22">p<pos:position pos:line="75" pos:column="23"/></name></expr>;<pos:position pos:line="75" pos:column="24"/></init> <condition><expr><operator pos:line="75" pos:column="25">*<pos:position pos:line="75" pos:column="26"/></operator><name pos:line="75" pos:column="26">q<pos:position pos:line="75" pos:column="27"/></name> <operator pos:line="75" pos:column="28">&amp;&amp;<pos:position pos:line="75" pos:column="38"/></operator> <operator pos:line="75" pos:column="31">!<pos:position pos:line="75" pos:column="32"/></operator><call><name pos:line="75" pos:column="32">ISSPACE<pos:position pos:line="75" pos:column="39"/></name> <argument_list pos:line="75" pos:column="40">(<argument><expr><operator pos:line="75" pos:column="41">*<pos:position pos:line="75" pos:column="42"/></operator><name pos:line="75" pos:column="42">q<pos:position pos:line="75" pos:column="43"/></name></expr></argument>)<pos:position pos:line="75" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="45"/></condition> <incr><expr><name pos:line="75" pos:column="46">q<pos:position pos:line="75" pos:column="47"/></name><operator pos:line="75" pos:column="47">++<pos:position pos:line="75" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="75" pos:column="50"/></control>
	      <block type="pseudo"><empty_stmt pos:line="76" pos:column="15">;<pos:position pos:line="76" pos:column="16"/></empty_stmt></block></for>

	    <expr_stmt><expr><call><name pos:line="78" pos:column="13">mutt_substrcpy<pos:position pos:line="78" pos:column="27"/></name> <argument_list pos:line="78" pos:column="28">(<argument><expr><name pos:line="78" pos:column="29">subtype<pos:position pos:line="78" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="38">p<pos:position pos:line="78" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="41">q<pos:position pos:line="78" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="78" pos:column="44">sizeof <argument_list pos:line="78" pos:column="51">(<argument><expr><name pos:line="78" pos:column="52">subtype<pos:position pos:line="78" pos:column="59"/></name></expr></argument>)<pos:position pos:line="78" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="78" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="62"/></expr_stmt>

	    <if pos:line="80" pos:column="13">if <condition pos:line="80" pos:column="16">(<expr><operator pos:line="80" pos:column="17">(<pos:position pos:line="80" pos:column="18"/></operator><name pos:line="80" pos:column="18">type<pos:position pos:line="80" pos:column="22"/></name> <operator pos:line="80" pos:column="23">=<pos:position pos:line="80" pos:column="24"/></operator> <call><name pos:line="80" pos:column="25">mutt_check_mime_type<pos:position pos:line="80" pos:column="45"/></name> <argument_list pos:line="80" pos:column="46">(<argument><expr><name pos:line="80" pos:column="47">ct<pos:position pos:line="80" pos:column="49"/></name></expr></argument>)<pos:position pos:line="80" pos:column="50"/></argument_list></call><operator pos:line="80" pos:column="50">)<pos:position pos:line="80" pos:column="51"/></operator> <operator pos:line="80" pos:column="52">==<pos:position pos:line="80" pos:column="54"/></operator> <name pos:line="80" pos:column="55">TYPEOTHER<pos:position pos:line="80" pos:column="64"/></name></expr>)<pos:position pos:line="80" pos:column="65"/></condition><then pos:line="80" pos:column="65">
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="81" pos:column="15">strfcpy<pos:position pos:line="81" pos:column="22"/></name> <argument_list pos:line="81" pos:column="23">(<argument><expr><name pos:line="81" pos:column="24">xtype<pos:position pos:line="81" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="31">ct<pos:position pos:line="81" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="81" pos:column="35">sizeof <argument_list pos:line="81" pos:column="42">(<argument><expr><name pos:line="81" pos:column="43">xtype<pos:position pos:line="81" pos:column="48"/></name></expr></argument>)<pos:position pos:line="81" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="81" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="51"/></expr_stmt></block></then></if>

	    <expr_stmt><expr><name pos:line="83" pos:column="13">cur_sze<pos:position pos:line="83" pos:column="20"/></name> <operator pos:line="83" pos:column="21">=<pos:position pos:line="83" pos:column="22"/></operator> <name pos:line="83" pos:column="23">sze<pos:position pos:line="83" pos:column="26"/></name></expr>;<pos:position pos:line="83" pos:column="27"/></expr_stmt>
	  }<pos:position pos:line="84" pos:column="12"/></block></then></if>
	  <expr_stmt><expr><name pos:line="85" pos:column="11">p<pos:position pos:line="85" pos:column="12"/></name> <operator pos:line="85" pos:column="13">=<pos:position pos:line="85" pos:column="14"/></operator> <name pos:line="85" pos:column="15">NULL<pos:position pos:line="85" pos:column="19"/></name></expr>;<pos:position pos:line="85" pos:column="20"/></expr_stmt>
	}<pos:position pos:line="86" pos:column="10"/></block></while>
      }<pos:position pos:line="87" pos:column="8"/></block></while>
      <expr_stmt><expr><call><name pos:line="88" pos:column="7">safe_fclose<pos:position pos:line="88" pos:column="18"/></name> <argument_list pos:line="88" pos:column="19">(<argument><expr><operator pos:line="88" pos:column="20">&amp;<pos:position pos:line="88" pos:column="25"/></operator><name pos:line="88" pos:column="21">f<pos:position pos:line="88" pos:column="22"/></name></expr></argument>)<pos:position pos:line="88" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="89" pos:column="6"/></block></then></if>
  }<pos:position pos:line="90" pos:column="4"/></block></for>

 <label><name pos:line="92" pos:column="2">bye<pos:position pos:line="92" pos:column="5"/></name>:<pos:position pos:line="92" pos:column="6"/></label>

  <if pos:line="94" pos:column="3">if <condition pos:line="94" pos:column="6">(<expr><name pos:line="94" pos:column="7">type<pos:position pos:line="94" pos:column="11"/></name> <operator pos:line="94" pos:column="12">!=<pos:position pos:line="94" pos:column="14"/></operator> <name pos:line="94" pos:column="15">TYPEOTHER<pos:position pos:line="94" pos:column="24"/></name> <operator pos:line="94" pos:column="25">||<pos:position pos:line="94" pos:column="27"/></operator> <operator pos:line="94" pos:column="28">*<pos:position pos:line="94" pos:column="29"/></operator><name pos:line="94" pos:column="29">xtype<pos:position pos:line="94" pos:column="34"/></name> <operator pos:line="94" pos:column="35">!=<pos:position pos:line="94" pos:column="37"/></operator> <literal type="char" pos:line="94" pos:column="38">'\0'<pos:position pos:line="94" pos:column="42"/></literal></expr>)<pos:position pos:line="94" pos:column="43"/></condition><then pos:line="94" pos:column="43">
  <block pos:line="95" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="96" pos:column="5">att<pos:position pos:line="96" pos:column="8"/></name><operator pos:line="96" pos:column="8">-&gt;<pos:position pos:line="96" pos:column="13"/></operator><name pos:line="96" pos:column="10">type<pos:position pos:line="96" pos:column="14"/></name></name> <operator pos:line="96" pos:column="15">=<pos:position pos:line="96" pos:column="16"/></operator> <name pos:line="96" pos:column="17">type<pos:position pos:line="96" pos:column="21"/></name></expr>;<pos:position pos:line="96" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="97" pos:column="5">mutt_str_replace<pos:position pos:line="97" pos:column="21"/></name> <argument_list pos:line="97" pos:column="22">(<argument><expr><operator pos:line="97" pos:column="23">&amp;<pos:position pos:line="97" pos:column="28"/></operator><name><name pos:line="97" pos:column="24">att<pos:position pos:line="97" pos:column="27"/></name><operator pos:line="97" pos:column="27">-&gt;<pos:position pos:line="97" pos:column="32"/></operator><name pos:line="97" pos:column="29">subtype<pos:position pos:line="97" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="38">subtype<pos:position pos:line="97" pos:column="45"/></name></expr></argument>)<pos:position pos:line="97" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="98" pos:column="5">mutt_str_replace<pos:position pos:line="98" pos:column="21"/></name> <argument_list pos:line="98" pos:column="22">(<argument><expr><operator pos:line="98" pos:column="23">&amp;<pos:position pos:line="98" pos:column="28"/></operator><name><name pos:line="98" pos:column="24">att<pos:position pos:line="98" pos:column="27"/></name><operator pos:line="98" pos:column="27">-&gt;<pos:position pos:line="98" pos:column="32"/></operator><name pos:line="98" pos:column="29">xtype<pos:position pos:line="98" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="36">xtype<pos:position pos:line="98" pos:column="41"/></name></expr></argument>)<pos:position pos:line="98" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="99" pos:column="4"/></block></then></if>

  <return pos:line="101" pos:column="3">return <expr><operator pos:line="101" pos:column="10">(<pos:position pos:line="101" pos:column="11"/></operator><name pos:line="101" pos:column="11">type<pos:position pos:line="101" pos:column="15"/></name><operator pos:line="101" pos:column="15">)<pos:position pos:line="101" pos:column="16"/></operator></expr>;<pos:position pos:line="101" pos:column="17"/></return>
}<pos:position pos:line="102" pos:column="2"/></block></function></unit>

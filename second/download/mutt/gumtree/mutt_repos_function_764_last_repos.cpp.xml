<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_764_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">parse_and_print_user_id<pos:position pos:line="2" pos:column="24"/></name> <parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">FILE<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">fp<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">userid<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">s<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name></decl>;<pos:position pos:line="5" pos:column="9"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">*<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">userid<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">==<pos:position pos:line="7" pos:column="17"/></operator> <literal type="char" pos:line="7" pos:column="18">'&lt;'<pos:position pos:line="7" pos:column="24"/></literal></expr>)<pos:position pos:line="7" pos:column="22"/></condition><then pos:line="7" pos:column="22">
    <block pos:line="8" pos:column="5">{
      <expr_stmt><expr><name pos:line="9" pos:column="7">s<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator> <call><name pos:line="9" pos:column="11">strchr<pos:position pos:line="9" pos:column="17"/></name> <argument_list pos:line="9" pos:column="18">(<argument><expr><name pos:line="9" pos:column="19">userid<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">+<pos:position pos:line="9" pos:column="26"/></operator><literal type="number" pos:line="9" pos:column="26">1<pos:position pos:line="9" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="9" pos:column="29">'&gt;'<pos:position pos:line="9" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>
      <if pos:line="10" pos:column="7">if <condition pos:line="10" pos:column="10">(<expr><name pos:line="10" pos:column="11">s<pos:position pos:line="10" pos:column="12"/></name></expr>)<pos:position pos:line="10" pos:column="13"/></condition><then pos:line="10" pos:column="13">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="9">print_utf8<pos:position pos:line="11" pos:column="19"/></name> <argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">fp<pos:position pos:line="11" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="25">userid<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">+<pos:position pos:line="11" pos:column="32"/></operator><literal type="number" pos:line="11" pos:column="32">1<pos:position pos:line="11" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="35">s<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">-<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="37">userid<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">-<pos:position pos:line="11" pos:column="44"/></operator><literal type="number" pos:line="11" pos:column="44">1<pos:position pos:line="11" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="47"/></expr_stmt></block></then></if>
    }<pos:position pos:line="12" pos:column="6"/></block></then>
  <elseif pos:line="13" pos:column="3">else <if pos:line="13" pos:column="8">if <condition pos:line="13" pos:column="11">(<expr><operator pos:line="13" pos:column="12">*<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">userid<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">==<pos:position pos:line="13" pos:column="22"/></operator> <literal type="char" pos:line="13" pos:column="23">'('<pos:position pos:line="13" pos:column="26"/></literal></expr>)<pos:position pos:line="13" pos:column="27"/></condition><then pos:line="13" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="5">fputs<pos:position pos:line="14" pos:column="10"/></name> <argument_list pos:line="14" pos:column="11">(<argument><expr><call><name pos:line="14" pos:column="12">_<pos:position pos:line="14" pos:column="13"/></name><argument_list pos:line="14" pos:column="13">(<argument><expr><literal type="string" pos:line="14" pos:column="14">"[Can't display this user ID (unknown encoding)]"<pos:position pos:line="14" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="14" pos:column="66">fp<pos:position pos:line="14" pos:column="68"/></name></expr></argument>)<pos:position pos:line="14" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="70"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="15" pos:column="3">else <if pos:line="15" pos:column="8">if <condition pos:line="15" pos:column="11">(<expr><operator pos:line="15" pos:column="12">!<pos:position pos:line="15" pos:column="13"/></operator><call><name pos:line="15" pos:column="13">digit_or_letter<pos:position pos:line="15" pos:column="28"/></name> <argument_list pos:line="15" pos:column="29">(<argument><expr><operator pos:line="15" pos:column="30">(<pos:position pos:line="15" pos:column="31"/></operator><specifier pos:line="15" pos:column="31">const<pos:position pos:line="15" pos:column="36"/></specifier> <name pos:line="15" pos:column="37">unsigned<pos:position pos:line="15" pos:column="45"/></name> <name pos:line="15" pos:column="46">char<pos:position pos:line="15" pos:column="50"/></name> <operator pos:line="15" pos:column="51">*<pos:position pos:line="15" pos:column="52"/></operator><operator pos:line="15" pos:column="52">)<pos:position pos:line="15" pos:column="53"/></operator><name pos:line="15" pos:column="53">userid<pos:position pos:line="15" pos:column="59"/></name></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="61"/></condition><then pos:line="15" pos:column="61">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="5">fputs<pos:position pos:line="16" pos:column="10"/></name> <argument_list pos:line="16" pos:column="11">(<argument><expr><call><name pos:line="16" pos:column="12">_<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">(<argument><expr><literal type="string" pos:line="16" pos:column="14">"[Can't display this user ID (invalid encoding)]"<pos:position pos:line="16" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="16" pos:column="66">fp<pos:position pos:line="16" pos:column="68"/></name></expr></argument>)<pos:position pos:line="16" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="70"/></expr_stmt></block></then></if></elseif>
  <else pos:line="17" pos:column="3">else
    <block pos:line="18" pos:column="5">{
      <decl_stmt><decl><type><name><name pos:line="19" pos:column="7">struct<pos:position pos:line="19" pos:column="13"/></name> <name pos:line="19" pos:column="14">dn_array_s<pos:position pos:line="19" pos:column="24"/></name></name> <modifier pos:line="19" pos:column="25">*<pos:position pos:line="19" pos:column="26"/></modifier></type><name pos:line="19" pos:column="26">dn<pos:position pos:line="19" pos:column="28"/></name> <init pos:line="19" pos:column="29">= <expr><call><name pos:line="19" pos:column="31">parse_dn<pos:position pos:line="19" pos:column="39"/></name> <argument_list pos:line="19" pos:column="40">(<argument><expr><operator pos:line="19" pos:column="41">(<pos:position pos:line="19" pos:column="42"/></operator><specifier pos:line="19" pos:column="42">const<pos:position pos:line="19" pos:column="47"/></specifier> <name pos:line="19" pos:column="48">unsigned<pos:position pos:line="19" pos:column="56"/></name> <name pos:line="19" pos:column="57">char<pos:position pos:line="19" pos:column="61"/></name> <operator pos:line="19" pos:column="62">*<pos:position pos:line="19" pos:column="63"/></operator><operator pos:line="19" pos:column="63">)<pos:position pos:line="19" pos:column="64"/></operator><name pos:line="19" pos:column="64">userid<pos:position pos:line="19" pos:column="70"/></name></expr></argument>)<pos:position pos:line="19" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="72"/></decl_stmt>
      <if pos:line="20" pos:column="7">if <condition pos:line="20" pos:column="10">(<expr><operator pos:line="20" pos:column="11">!<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="12">dn<pos:position pos:line="20" pos:column="14"/></name></expr>)<pos:position pos:line="20" pos:column="15"/></condition><then pos:line="20" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="9">fputs<pos:position pos:line="21" pos:column="14"/></name> <argument_list pos:line="21" pos:column="15">(<argument><expr><call><name pos:line="21" pos:column="16">_<pos:position pos:line="21" pos:column="17"/></name><argument_list pos:line="21" pos:column="17">(<argument><expr><literal type="string" pos:line="21" pos:column="18">"[Can't display this user ID (invalid DN)]"<pos:position pos:line="21" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="21" pos:column="64">fp<pos:position pos:line="21" pos:column="66"/></name></expr></argument>)<pos:position pos:line="21" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="68"/></expr_stmt></block></then>
      <else pos:line="22" pos:column="7">else 
        <block pos:line="23" pos:column="9">{
          <expr_stmt><expr><call><name pos:line="24" pos:column="11">print_dn_parts<pos:position pos:line="24" pos:column="25"/></name> <argument_list pos:line="24" pos:column="26">(<argument><expr><name pos:line="24" pos:column="27">fp<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="31">dn<pos:position pos:line="24" pos:column="33"/></name></expr></argument>)<pos:position pos:line="24" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="35"/></expr_stmt>          
          <for pos:line="25" pos:column="11">for <control pos:line="25" pos:column="15">(<init><expr><name pos:line="25" pos:column="16">i<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator><literal type="number" pos:line="25" pos:column="18">0<pos:position pos:line="25" pos:column="19"/></literal></expr>;<pos:position pos:line="25" pos:column="20"/></init> <condition><expr><name><name pos:line="25" pos:column="21">dn<pos:position pos:line="25" pos:column="23"/></name><index pos:line="25" pos:column="23">[<expr><name pos:line="25" pos:column="24">i<pos:position pos:line="25" pos:column="25"/></name></expr>]<pos:position pos:line="25" pos:column="26"/></index></name><operator pos:line="25" pos:column="26">.<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="27">key<pos:position pos:line="25" pos:column="30"/></name></expr>;<pos:position pos:line="25" pos:column="31"/></condition> <incr><expr><name pos:line="25" pos:column="32">i<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">++<pos:position pos:line="25" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="36"/></control>
            <block pos:line="26" pos:column="13">{
              <expr_stmt><expr><call><name pos:line="27" pos:column="15">FREE<pos:position pos:line="27" pos:column="19"/></name> <argument_list pos:line="27" pos:column="20">(<argument><expr><operator pos:line="27" pos:column="21">&amp;<pos:position pos:line="27" pos:column="26"/></operator><name><name pos:line="27" pos:column="22">dn<pos:position pos:line="27" pos:column="24"/></name><index pos:line="27" pos:column="24">[<expr><name pos:line="27" pos:column="25">i<pos:position pos:line="27" pos:column="26"/></name></expr>]<pos:position pos:line="27" pos:column="27"/></index></name><operator pos:line="27" pos:column="27">.<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="28">key<pos:position pos:line="27" pos:column="31"/></name></expr></argument>)<pos:position pos:line="27" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="28" pos:column="15">FREE<pos:position pos:line="28" pos:column="19"/></name> <argument_list pos:line="28" pos:column="20">(<argument><expr><operator pos:line="28" pos:column="21">&amp;<pos:position pos:line="28" pos:column="26"/></operator><name><name pos:line="28" pos:column="22">dn<pos:position pos:line="28" pos:column="24"/></name><index pos:line="28" pos:column="24">[<expr><name pos:line="28" pos:column="25">i<pos:position pos:line="28" pos:column="26"/></name></expr>]<pos:position pos:line="28" pos:column="27"/></index></name><operator pos:line="28" pos:column="27">.<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="28">value<pos:position pos:line="28" pos:column="33"/></name></expr></argument>)<pos:position pos:line="28" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="29" pos:column="14"/></block></for>
          <expr_stmt><expr><call><name pos:line="30" pos:column="11">FREE<pos:position pos:line="30" pos:column="15"/></name> <argument_list pos:line="30" pos:column="16">(<argument><expr><operator pos:line="30" pos:column="17">&amp;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="18">dn<pos:position pos:line="30" pos:column="20"/></name></expr></argument>)<pos:position pos:line="30" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></else></if>
    }<pos:position pos:line="32" pos:column="6"/></block></else></if>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_393_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_bcache_exists<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">body_cache_t<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">bcache<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">id<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">path<pos:position pos:line="3" pos:column="12"/></name><index pos:line="3" pos:column="12">[<expr><name pos:line="3" pos:column="13">_POSIX_PATH_MAX<pos:position pos:line="3" pos:column="28"/></name></expr>]<pos:position pos:line="3" pos:column="29"/></index></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">stat<pos:position pos:line="4" pos:column="14"/></name></name></type> <name pos:line="4" pos:column="15">st<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">rc<pos:position pos:line="5" pos:column="9"/></name> <init pos:line="5" pos:column="10">= <expr><literal type="number" pos:line="5" pos:column="12">0<pos:position pos:line="5" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">!<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">id<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">||<pos:position pos:line="7" pos:column="13"/></operator> <operator pos:line="7" pos:column="14">!<pos:position pos:line="7" pos:column="15"/></operator><operator pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">id<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">||<pos:position pos:line="7" pos:column="21"/></operator> <operator pos:line="7" pos:column="22">!<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="23">bcache<pos:position pos:line="7" pos:column="29"/></name></expr>)<pos:position pos:line="7" pos:column="30"/></condition><then pos:line="7" pos:column="30">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">-<pos:position pos:line="8" pos:column="13"/></operator><literal type="number" pos:line="8" pos:column="13">1<pos:position pos:line="8" pos:column="14"/></literal></expr>;<pos:position pos:line="8" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="10" pos:column="3">path<pos:position pos:line="10" pos:column="7"/></name><index pos:line="10" pos:column="7">[<expr><literal type="number" pos:line="10" pos:column="8">0<pos:position pos:line="10" pos:column="9"/></literal></expr>]<pos:position pos:line="10" pos:column="10"/></index></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <literal type="char" pos:line="10" pos:column="13">'\0'<pos:position pos:line="10" pos:column="17"/></literal></expr>;<pos:position pos:line="10" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">safe_strncat<pos:position pos:line="11" pos:column="15"/></name> <argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">path<pos:position pos:line="11" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="23">sizeof <argument_list pos:line="11" pos:column="30">(<argument><expr><name pos:line="11" pos:column="31">path<pos:position pos:line="11" pos:column="35"/></name></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="38">bcache<pos:position pos:line="11" pos:column="44"/></name><operator pos:line="11" pos:column="44">-&gt;<pos:position pos:line="11" pos:column="49"/></operator><name pos:line="11" pos:column="46">path<pos:position pos:line="11" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="52">bcache<pos:position pos:line="11" pos:column="58"/></name><operator pos:line="11" pos:column="58">-&gt;<pos:position pos:line="11" pos:column="63"/></operator><name pos:line="11" pos:column="60">pathlen<pos:position pos:line="11" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="69"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">safe_strncat<pos:position pos:line="12" pos:column="15"/></name> <argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">path<pos:position pos:line="12" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="23">sizeof <argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">path<pos:position pos:line="12" pos:column="35"/></name></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="12" pos:column="38">id<pos:position pos:line="12" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="42">mutt_strlen<pos:position pos:line="12" pos:column="53"/></name> <argument_list pos:line="12" pos:column="54">(<argument><expr><name pos:line="12" pos:column="55">id<pos:position pos:line="12" pos:column="57"/></name></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="60"/></expr_stmt>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><call><name pos:line="14" pos:column="7">stat<pos:position pos:line="14" pos:column="11"/></name> <argument_list pos:line="14" pos:column="12">(<argument><expr><name pos:line="14" pos:column="13">path<pos:position pos:line="14" pos:column="17"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="19">&amp;<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="20">st<pos:position pos:line="14" pos:column="22"/></name></expr></argument>)<pos:position pos:line="14" pos:column="23"/></argument_list></call> <operator pos:line="14" pos:column="24">&lt;<pos:position pos:line="14" pos:column="28"/></operator> <literal type="number" pos:line="14" pos:column="26">0<pos:position pos:line="14" pos:column="27"/></literal></expr>)<pos:position pos:line="14" pos:column="28"/></condition><then pos:line="14" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="5">rc<pos:position pos:line="15" pos:column="7"/></name> <operator pos:line="15" pos:column="8">=<pos:position pos:line="15" pos:column="9"/></operator> <operator pos:line="15" pos:column="10">-<pos:position pos:line="15" pos:column="11"/></operator><literal type="number" pos:line="15" pos:column="11">1<pos:position pos:line="15" pos:column="12"/></literal></expr>;<pos:position pos:line="15" pos:column="13"/></expr_stmt></block></then>
  <else pos:line="16" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="5">rc<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <ternary><condition><expr><call><name pos:line="17" pos:column="10">S_ISREG<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">(<argument><expr><name><name pos:line="17" pos:column="18">st<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">.<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="21">st_mode<pos:position pos:line="17" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="29"/></argument_list></call> <operator pos:line="17" pos:column="30">&amp;&amp;<pos:position pos:line="17" pos:column="40"/></operator> <name><name pos:line="17" pos:column="33">st<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">.<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="36">st_size<pos:position pos:line="17" pos:column="43"/></name></name> <operator pos:line="17" pos:column="44">!=<pos:position pos:line="17" pos:column="46"/></operator> <literal type="number" pos:line="17" pos:column="47">0<pos:position pos:line="17" pos:column="48"/></literal></expr> ?<pos:position pos:line="17" pos:column="50"/></condition><then pos:line="17" pos:column="50"> <expr><literal type="number" pos:line="17" pos:column="51">0<pos:position pos:line="17" pos:column="52"/></literal></expr> <pos:position pos:line="17" pos:column="53"/></then><else pos:line="17" pos:column="53">: <expr><operator pos:line="17" pos:column="55">-<pos:position pos:line="17" pos:column="56"/></operator><literal type="number" pos:line="17" pos:column="56">1<pos:position pos:line="17" pos:column="57"/></literal></expr></else></ternary></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="19" pos:column="3">dprint<pos:position pos:line="19" pos:column="9"/></name> <argument_list pos:line="19" pos:column="10">(<argument><expr><literal type="number" pos:line="19" pos:column="11">3<pos:position pos:line="19" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="14">(<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">debugfile<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">,<pos:position pos:line="19" pos:column="25"/></operator> <literal type="string" pos:line="19" pos:column="26">"bcache: exists: '%s': %s\n"<pos:position pos:line="19" pos:column="54"/></literal><operator pos:line="19" pos:column="54">,<pos:position pos:line="19" pos:column="55"/></operator> <name pos:line="19" pos:column="56">path<pos:position pos:line="19" pos:column="60"/></name><operator pos:line="19" pos:column="60">,<pos:position pos:line="19" pos:column="61"/></operator> <ternary><condition><expr><name pos:line="19" pos:column="62">rc<pos:position pos:line="19" pos:column="64"/></name> <operator pos:line="19" pos:column="65">==<pos:position pos:line="19" pos:column="67"/></operator> <literal type="number" pos:line="19" pos:column="68">0<pos:position pos:line="19" pos:column="69"/></literal></expr> ?<pos:position pos:line="19" pos:column="71"/></condition><then pos:line="19" pos:column="71"> <expr><literal type="string" pos:line="19" pos:column="72">"yes"<pos:position pos:line="19" pos:column="77"/></literal></expr> <pos:position pos:line="19" pos:column="78"/></then><else pos:line="19" pos:column="78">: <expr><literal type="string" pos:line="19" pos:column="80">"no"<pos:position pos:line="19" pos:column="84"/></literal></expr></else></ternary><operator pos:line="19" pos:column="84">)<pos:position pos:line="19" pos:column="85"/></operator></expr></argument>)<pos:position pos:line="19" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="87"/></expr_stmt>

  <return pos:line="21" pos:column="3">return <expr><name pos:line="21" pos:column="10">rc<pos:position pos:line="21" pos:column="12"/></name></expr>;<pos:position pos:line="21" pos:column="13"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

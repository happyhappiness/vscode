<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_595_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">short<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">pgp_find_hash<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">fname<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">FILE<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">in<pos:position pos:line="3" pos:column="11"/></name> <init pos:line="3" pos:column="12">= <expr><name pos:line="3" pos:column="14">NULL<pos:position pos:line="3" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">FILE<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">out<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name pos:line="4" pos:column="15">NULL<pos:position pos:line="4" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">tempfile<pos:position pos:line="6" pos:column="16"/></name><index pos:line="6" pos:column="16">[<expr><name pos:line="6" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="6" pos:column="32"/></name></expr>]<pos:position pos:line="6" pos:column="33"/></index></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
  
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">unsigned<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">char<pos:position pos:line="8" pos:column="16"/></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">p<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">l<pos:position pos:line="9" pos:column="11"/></name></decl>;<pos:position pos:line="9" pos:column="12"/></decl_stmt>
  
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">short<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">rv<pos:position pos:line="11" pos:column="11"/></name> <init pos:line="11" pos:column="12">= <expr><operator pos:line="11" pos:column="14">-<pos:position pos:line="11" pos:column="15"/></operator><literal type="number" pos:line="11" pos:column="15">1<pos:position pos:line="11" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="17"/></decl_stmt>
  
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">mutt_mktemp<pos:position pos:line="13" pos:column="14"/></name> <argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">tempfile<pos:position pos:line="13" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="26">sizeof <argument_list pos:line="13" pos:column="33">(<argument><expr><name pos:line="13" pos:column="34">tempfile<pos:position pos:line="13" pos:column="42"/></name></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="45"/></expr_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><operator pos:line="14" pos:column="7">(<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">out<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">safe_fopen<pos:position pos:line="14" pos:column="24"/></name> <argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">tempfile<pos:position pos:line="14" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="36">"w+"<pos:position pos:line="14" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call><operator pos:line="14" pos:column="41">)<pos:position pos:line="14" pos:column="42"/></operator> <operator pos:line="14" pos:column="43">==<pos:position pos:line="14" pos:column="45"/></operator> <name pos:line="14" pos:column="46">NULL<pos:position pos:line="14" pos:column="50"/></name></expr>)<pos:position pos:line="14" pos:column="51"/></condition><then pos:line="14" pos:column="51">
  <block pos:line="15" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">mutt_perror<pos:position pos:line="16" pos:column="16"/></name> <argument_list pos:line="16" pos:column="17">(<argument><expr><name pos:line="16" pos:column="18">tempfile<pos:position pos:line="16" pos:column="26"/></name></expr></argument>)<pos:position pos:line="16" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
    <goto pos:line="17" pos:column="5">goto <name pos:line="17" pos:column="10">bye<pos:position pos:line="17" pos:column="13"/></name>;<pos:position pos:line="17" pos:column="14"/></goto>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">unlink<pos:position pos:line="19" pos:column="9"/></name> <argument_list pos:line="19" pos:column="10">(<argument><expr><name pos:line="19" pos:column="11">tempfile<pos:position pos:line="19" pos:column="19"/></name></expr></argument>)<pos:position pos:line="19" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt>
  
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><operator pos:line="21" pos:column="7">(<pos:position pos:line="21" pos:column="8"/></operator><name pos:line="21" pos:column="8">in<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <call><name pos:line="21" pos:column="13">fopen<pos:position pos:line="21" pos:column="18"/></name> <argument_list pos:line="21" pos:column="19">(<argument><expr><name pos:line="21" pos:column="20">fname<pos:position pos:line="21" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="27">"r"<pos:position pos:line="21" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="31"/></argument_list></call><operator pos:line="21" pos:column="31">)<pos:position pos:line="21" pos:column="32"/></operator> <operator pos:line="21" pos:column="33">==<pos:position pos:line="21" pos:column="35"/></operator> <name pos:line="21" pos:column="36">NULL<pos:position pos:line="21" pos:column="40"/></name></expr>)<pos:position pos:line="21" pos:column="41"/></condition><then pos:line="21" pos:column="41">
  <block pos:line="22" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">mutt_perror<pos:position pos:line="23" pos:column="16"/></name> <argument_list pos:line="23" pos:column="17">(<argument><expr><name pos:line="23" pos:column="18">fname<pos:position pos:line="23" pos:column="23"/></name></expr></argument>)<pos:position pos:line="23" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="25"/></expr_stmt>
    <goto pos:line="24" pos:column="5">goto <name pos:line="24" pos:column="10">bye<pos:position pos:line="24" pos:column="13"/></name>;<pos:position pos:line="24" pos:column="14"/></goto>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>
  
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">pgp_dearmor<pos:position pos:line="27" pos:column="14"/></name> <argument_list pos:line="27" pos:column="15">(<argument><expr><name pos:line="27" pos:column="16">in<pos:position pos:line="27" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="20">out<pos:position pos:line="27" pos:column="23"/></name></expr></argument>)<pos:position pos:line="27" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">rewind<pos:position pos:line="28" pos:column="9"/></name> <argument_list pos:line="28" pos:column="10">(<argument><expr><name pos:line="28" pos:column="11">out<pos:position pos:line="28" pos:column="14"/></name></expr></argument>)<pos:position pos:line="28" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="16"/></expr_stmt>

  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><operator pos:line="30" pos:column="7">(<pos:position pos:line="30" pos:column="8"/></operator><name pos:line="30" pos:column="8">p<pos:position pos:line="30" pos:column="9"/></name> <operator pos:line="30" pos:column="10">=<pos:position pos:line="30" pos:column="11"/></operator> <call><name pos:line="30" pos:column="12">pgp_read_packet<pos:position pos:line="30" pos:column="27"/></name> <argument_list pos:line="30" pos:column="28">(<argument><expr><name pos:line="30" pos:column="29">out<pos:position pos:line="30" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="34">&amp;<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="35">l<pos:position pos:line="30" pos:column="36"/></name></expr></argument>)<pos:position pos:line="30" pos:column="37"/></argument_list></call><operator pos:line="30" pos:column="37">)<pos:position pos:line="30" pos:column="38"/></operator> <operator pos:line="30" pos:column="39">!=<pos:position pos:line="30" pos:column="41"/></operator> <name pos:line="30" pos:column="42">NULL<pos:position pos:line="30" pos:column="46"/></name></expr>)<pos:position pos:line="30" pos:column="47"/></condition><then pos:line="30" pos:column="47">
  <block pos:line="31" pos:column="3">{
    <expr_stmt><expr><name pos:line="32" pos:column="5">rv<pos:position pos:line="32" pos:column="7"/></name> <operator pos:line="32" pos:column="8">=<pos:position pos:line="32" pos:column="9"/></operator> <call><name pos:line="32" pos:column="10">pgp_mic_from_packet<pos:position pos:line="32" pos:column="29"/></name> <argument_list pos:line="32" pos:column="30">(<argument><expr><name pos:line="32" pos:column="31">p<pos:position pos:line="32" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="34">l<pos:position pos:line="32" pos:column="35"/></name></expr></argument>)<pos:position pos:line="32" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="33" pos:column="4"/></block></then>
  <else pos:line="34" pos:column="3">else
  <block pos:line="35" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">dprint<pos:position pos:line="36" pos:column="11"/></name> <argument_list pos:line="36" pos:column="12">(<argument><expr><literal type="number" pos:line="36" pos:column="13">1<pos:position pos:line="36" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="36" pos:column="16">(<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="17">debugfile<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">,<pos:position pos:line="36" pos:column="27"/></operator> <literal type="string" pos:line="36" pos:column="28">"pgp_find_hash: No packet.\n"<pos:position pos:line="36" pos:column="57"/></literal><operator pos:line="36" pos:column="57">)<pos:position pos:line="36" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="60"/></expr_stmt>
  }<pos:position pos:line="37" pos:column="4"/></block></else></if>
  
  <label><name pos:line="39" pos:column="3">bye<pos:position pos:line="39" pos:column="6"/></name>:<pos:position pos:line="39" pos:column="7"/></label>
  
  <expr_stmt><expr><call><name pos:line="41" pos:column="3">safe_fclose<pos:position pos:line="41" pos:column="14"/></name> <argument_list pos:line="41" pos:column="15">(<argument><expr><operator pos:line="41" pos:column="16">&amp;<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="17">in<pos:position pos:line="41" pos:column="19"/></name></expr></argument>)<pos:position pos:line="41" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">safe_fclose<pos:position pos:line="42" pos:column="14"/></name> <argument_list pos:line="42" pos:column="15">(<argument><expr><operator pos:line="42" pos:column="16">&amp;<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="17">out<pos:position pos:line="42" pos:column="20"/></name></expr></argument>)<pos:position pos:line="42" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="43" pos:column="3">pgp_release_packet<pos:position pos:line="43" pos:column="21"/></name> <argument_list pos:line="43" pos:column="22">()<pos:position pos:line="43" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="25"/></expr_stmt>
  <return pos:line="44" pos:column="3">return <expr><name pos:line="44" pos:column="10">rv<pos:position pos:line="44" pos:column="12"/></name></expr>;<pos:position pos:line="44" pos:column="13"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

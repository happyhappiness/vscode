<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_223_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">pipe_msg<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">HEADER<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">h<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">FILE<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">fp<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">int<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">decode<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">int<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">print<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">cmflags<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><literal type="number" pos:line="3" pos:column="17">0<pos:position pos:line="3" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">chflags<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><name pos:line="4" pos:column="17">CH_FROM<pos:position pos:line="4" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
  
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">pipe_set_flags<pos:position pos:line="6" pos:column="17"/></name> <argument_list pos:line="6" pos:column="18">(<argument><expr><name pos:line="6" pos:column="19">decode<pos:position pos:line="6" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="27">print<pos:position pos:line="6" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="34">&amp;<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="35">cmflags<pos:position pos:line="6" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="44">&amp;<pos:position pos:line="6" pos:column="49"/></operator><name pos:line="6" pos:column="45">chflags<pos:position pos:line="6" pos:column="52"/></name></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="54"/></expr_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">WithCrypto<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">&amp;&amp;<pos:position pos:line="8" pos:column="28"/></operator> <name pos:line="8" pos:column="21">decode<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">&amp;&amp;<pos:position pos:line="8" pos:column="38"/></operator> <name><name pos:line="8" pos:column="31">h<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">security<pos:position pos:line="8" pos:column="42"/></name></name> <operator pos:line="8" pos:column="43">&amp;<pos:position pos:line="8" pos:column="48"/></operator> <name pos:line="8" pos:column="45">ENCRYPT<pos:position pos:line="8" pos:column="52"/></name></expr>)<pos:position pos:line="8" pos:column="53"/></condition><then pos:line="8" pos:column="53">
  <block pos:line="9" pos:column="3">{
    <if pos:line="10" pos:column="5">if<condition pos:line="10" pos:column="7">(<expr><operator pos:line="10" pos:column="8">!<pos:position pos:line="10" pos:column="9"/></operator><call><name pos:line="10" pos:column="9">crypt_valid_passphrase<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><name><name pos:line="10" pos:column="32">h<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">-&gt;<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="35">security<pos:position pos:line="10" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="45"/></condition><then pos:line="10" pos:column="45">
      <block type="pseudo"><return pos:line="11" pos:column="7">return;<pos:position pos:line="11" pos:column="14"/></return></block></then></if>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">endwin<pos:position pos:line="12" pos:column="11"/></name> <argument_list pos:line="12" pos:column="12">()<pos:position pos:line="12" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">decode<pos:position pos:line="15" pos:column="13"/></name></expr>)<pos:position pos:line="15" pos:column="14"/></condition><then pos:line="15" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="5">mutt_parse_mime_message<pos:position pos:line="16" pos:column="28"/></name> <argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">Context<pos:position pos:line="16" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="39">h<pos:position pos:line="16" pos:column="40"/></name></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">mutt_copy_message<pos:position pos:line="18" pos:column="20"/></name> <argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">fp<pos:position pos:line="18" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="26">Context<pos:position pos:line="18" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="35">h<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="38">cmflags<pos:position pos:line="18" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="47">chflags<pos:position pos:line="18" pos:column="54"/></name></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="56"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

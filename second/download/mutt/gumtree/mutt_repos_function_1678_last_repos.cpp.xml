<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1678_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name> <parameter_list pos:line="1" pos:column="10">(<parameter><decl><type><name pos:line="1" pos:column="11">int<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">argc<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier> <specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier></type> <name><name pos:line="1" pos:column="34">argv<pos:position pos:line="1" pos:column="38"/></name><index pos:line="1" pos:column="38">[]<pos:position pos:line="1" pos:column="40"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">c<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>
  
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">short<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">version<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">2<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">short<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">secring<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><literal type="number" pos:line="6" pos:column="19">0<pos:position pos:line="6" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">_kring<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><name pos:line="8" pos:column="24">NULL<pos:position pos:line="8" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">env_pgppath<pos:position pos:line="9" pos:column="20"/></name></decl>, <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="23">env_home<pos:position pos:line="9" pos:column="31"/></name></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name></type> <name><name pos:line="11" pos:column="8">pgppath<pos:position pos:line="11" pos:column="15"/></name><index pos:line="11" pos:column="15">[<expr><name pos:line="11" pos:column="16">_POSIX_PATH_MAX<pos:position pos:line="11" pos:column="31"/></name></expr>]<pos:position pos:line="11" pos:column="32"/></index></name></decl>;<pos:position pos:line="11" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">char<pos:position pos:line="12" pos:column="7"/></name></type> <name><name pos:line="12" pos:column="8">kring<pos:position pos:line="12" pos:column="13"/></name><index pos:line="12" pos:column="13">[<expr><name pos:line="12" pos:column="14">_POSIX_PATH_MAX<pos:position pos:line="12" pos:column="29"/></name></expr>]<pos:position pos:line="12" pos:column="30"/></index></name></decl>;<pos:position pos:line="12" pos:column="31"/></decl_stmt>

  <while pos:line="14" pos:column="3">while <condition pos:line="14" pos:column="9">(<expr><operator pos:line="14" pos:column="10">(<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="11">c<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">getopt<pos:position pos:line="14" pos:column="21"/></name> <argument_list pos:line="14" pos:column="22">(<argument><expr><name pos:line="14" pos:column="23">argc<pos:position pos:line="14" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="29">argv<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="35">"f25sk:S"<pos:position pos:line="14" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call><operator pos:line="14" pos:column="45">)<pos:position pos:line="14" pos:column="46"/></operator> <operator pos:line="14" pos:column="47">!=<pos:position pos:line="14" pos:column="49"/></operator> <name pos:line="14" pos:column="50">EOF<pos:position pos:line="14" pos:column="53"/></name></expr>)<pos:position pos:line="14" pos:column="54"/></condition>
  <block pos:line="15" pos:column="3">{
    <switch pos:line="16" pos:column="5">switch <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">c<pos:position pos:line="16" pos:column="14"/></name></expr>)<pos:position pos:line="16" pos:column="15"/></condition>
    <block pos:line="17" pos:column="5">{
      <case pos:line="18" pos:column="7">case <expr><literal type="char" pos:line="18" pos:column="12">'S'<pos:position pos:line="18" pos:column="15"/></literal></expr>:<pos:position pos:line="18" pos:column="16"/></case>
      <block pos:line="19" pos:column="7">{
	<expr_stmt><expr><name pos:line="20" pos:column="9">dump_signatures<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">=<pos:position pos:line="20" pos:column="26"/></operator> <literal type="number" pos:line="20" pos:column="27">1<pos:position pos:line="20" pos:column="28"/></literal></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
	<break pos:line="21" pos:column="9">break;<pos:position pos:line="21" pos:column="15"/></break>
      }<pos:position pos:line="22" pos:column="8"/></block>

      <case pos:line="24" pos:column="7">case <expr><literal type="char" pos:line="24" pos:column="12">'f'<pos:position pos:line="24" pos:column="15"/></literal></expr>:<pos:position pos:line="24" pos:column="16"/></case>
      <block pos:line="25" pos:column="7">{
	<expr_stmt><expr><name pos:line="26" pos:column="9">dump_fingerprints<pos:position pos:line="26" pos:column="26"/></name> <operator pos:line="26" pos:column="27">=<pos:position pos:line="26" pos:column="28"/></operator> <literal type="number" pos:line="26" pos:column="29">1<pos:position pos:line="26" pos:column="30"/></literal></expr>;<pos:position pos:line="26" pos:column="31"/></expr_stmt>
	<break pos:line="27" pos:column="9">break;<pos:position pos:line="27" pos:column="15"/></break>
      }<pos:position pos:line="28" pos:column="8"/></block>

      <case pos:line="30" pos:column="7">case <expr><literal type="char" pos:line="30" pos:column="12">'k'<pos:position pos:line="30" pos:column="15"/></literal></expr>:<pos:position pos:line="30" pos:column="16"/></case>
      <block pos:line="31" pos:column="7">{
	<expr_stmt><expr><name pos:line="32" pos:column="9">_kring<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <name pos:line="32" pos:column="18">optarg<pos:position pos:line="32" pos:column="24"/></name></expr>;<pos:position pos:line="32" pos:column="25"/></expr_stmt>
	<break pos:line="33" pos:column="9">break;<pos:position pos:line="33" pos:column="15"/></break>
      }<pos:position pos:line="34" pos:column="8"/></block>
      
      <case pos:line="36" pos:column="7">case <expr><literal type="char" pos:line="36" pos:column="12">'2'<pos:position pos:line="36" pos:column="15"/></literal></expr>:<pos:position pos:line="36" pos:column="16"/></case> <case pos:line="36" pos:column="17">case <expr><literal type="char" pos:line="36" pos:column="22">'5'<pos:position pos:line="36" pos:column="25"/></literal></expr>:<pos:position pos:line="36" pos:column="26"/></case>
      <block pos:line="37" pos:column="7">{
	<expr_stmt><expr><name pos:line="38" pos:column="9">version<pos:position pos:line="38" pos:column="16"/></name> <operator pos:line="38" pos:column="17">=<pos:position pos:line="38" pos:column="18"/></operator> <name pos:line="38" pos:column="19">c<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">-<pos:position pos:line="38" pos:column="22"/></operator> <literal type="char" pos:line="38" pos:column="23">'0'<pos:position pos:line="38" pos:column="26"/></literal></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt>
	<break pos:line="39" pos:column="9">break;<pos:position pos:line="39" pos:column="15"/></break>
      }<pos:position pos:line="40" pos:column="8"/></block>
      
      <case pos:line="42" pos:column="7">case <expr><literal type="char" pos:line="42" pos:column="12">'s'<pos:position pos:line="42" pos:column="15"/></literal></expr>:<pos:position pos:line="42" pos:column="16"/></case>
      <block pos:line="43" pos:column="7">{
	<expr_stmt><expr><name pos:line="44" pos:column="9">secring<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">=<pos:position pos:line="44" pos:column="18"/></operator> <literal type="number" pos:line="44" pos:column="19">1<pos:position pos:line="44" pos:column="20"/></literal></expr>;<pos:position pos:line="44" pos:column="21"/></expr_stmt>
	<break pos:line="45" pos:column="9">break;<pos:position pos:line="45" pos:column="15"/></break>
      }<pos:position pos:line="46" pos:column="8"/></block>
    
      <default pos:line="48" pos:column="7">default:<pos:position pos:line="48" pos:column="15"/></default>
      <block pos:line="49" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="50" pos:column="9">fprintf<pos:position pos:line="50" pos:column="16"/></name> <argument_list pos:line="50" pos:column="17">(<argument><expr><name pos:line="50" pos:column="18">stderr<pos:position pos:line="50" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="26">"usage: %s [-k &lt;key ring&gt; | [-2 | -5] [ -s] [-S] [-f]] [hints]\n"<pos:position pos:line="50" pos:column="97"/></literal></expr></argument>,
		 <argument><expr><name><name pos:line="51" pos:column="18">argv<pos:position pos:line="51" pos:column="22"/></name><index pos:line="51" pos:column="22">[<expr><literal type="number" pos:line="51" pos:column="23">0<pos:position pos:line="51" pos:column="24"/></literal></expr>]<pos:position pos:line="51" pos:column="25"/></index></name></expr></argument>)<pos:position pos:line="51" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="52" pos:column="9">exit<pos:position pos:line="52" pos:column="13"/></name> <argument_list pos:line="52" pos:column="14">(<argument><expr><literal type="number" pos:line="52" pos:column="15">1<pos:position pos:line="52" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="18"/></expr_stmt>
      }<pos:position pos:line="53" pos:column="8"/></block>
    }<pos:position pos:line="54" pos:column="6"/></block></switch>
  }<pos:position pos:line="55" pos:column="4"/></block></while>

  <if pos:line="57" pos:column="3">if <condition pos:line="57" pos:column="6">(<expr><name pos:line="57" pos:column="7">_kring<pos:position pos:line="57" pos:column="13"/></name></expr>)<pos:position pos:line="57" pos:column="14"/></condition><then pos:line="57" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="5">strfcpy<pos:position pos:line="58" pos:column="12"/></name> <argument_list pos:line="58" pos:column="13">(<argument><expr><name pos:line="58" pos:column="14">kring<pos:position pos:line="58" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="21">_kring<pos:position pos:line="58" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="58" pos:column="29">sizeof <argument_list pos:line="58" pos:column="36">(<argument><expr><name pos:line="58" pos:column="37">kring<pos:position pos:line="58" pos:column="42"/></name></expr></argument>)<pos:position pos:line="58" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="58" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="45"/></expr_stmt></block></then>
  <else pos:line="59" pos:column="3">else
  <block pos:line="60" pos:column="3">{
    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><operator pos:line="61" pos:column="9">(<pos:position pos:line="61" pos:column="10"/></operator><name pos:line="61" pos:column="10">env_pgppath<pos:position pos:line="61" pos:column="21"/></name> <operator pos:line="61" pos:column="22">=<pos:position pos:line="61" pos:column="23"/></operator> <call><name pos:line="61" pos:column="24">getenv<pos:position pos:line="61" pos:column="30"/></name> <argument_list pos:line="61" pos:column="31">(<argument><expr><literal type="string" pos:line="61" pos:column="32">"PGPPATH"<pos:position pos:line="61" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="42"/></argument_list></call><operator pos:line="61" pos:column="42">)<pos:position pos:line="61" pos:column="43"/></operator></expr>)<pos:position pos:line="61" pos:column="44"/></condition><then pos:line="61" pos:column="44">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="7">strfcpy<pos:position pos:line="62" pos:column="14"/></name> <argument_list pos:line="62" pos:column="15">(<argument><expr><name pos:line="62" pos:column="16">pgppath<pos:position pos:line="62" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="25">env_pgppath<pos:position pos:line="62" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="62" pos:column="38">sizeof <argument_list pos:line="62" pos:column="45">(<argument><expr><name pos:line="62" pos:column="46">pgppath<pos:position pos:line="62" pos:column="53"/></name></expr></argument>)<pos:position pos:line="62" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="62" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="56"/></expr_stmt></block></then>
    <elseif pos:line="63" pos:column="5">else <if pos:line="63" pos:column="10">if <condition pos:line="63" pos:column="13">(<expr><operator pos:line="63" pos:column="14">(<pos:position pos:line="63" pos:column="15"/></operator><name pos:line="63" pos:column="15">env_home<pos:position pos:line="63" pos:column="23"/></name> <operator pos:line="63" pos:column="24">=<pos:position pos:line="63" pos:column="25"/></operator> <call><name pos:line="63" pos:column="26">getenv<pos:position pos:line="63" pos:column="32"/></name> <argument_list pos:line="63" pos:column="33">(<argument><expr><literal type="string" pos:line="63" pos:column="34">"HOME"<pos:position pos:line="63" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="41"/></argument_list></call><operator pos:line="63" pos:column="41">)<pos:position pos:line="63" pos:column="42"/></operator></expr>)<pos:position pos:line="63" pos:column="43"/></condition><then pos:line="63" pos:column="43">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="7">snprintf<pos:position pos:line="64" pos:column="15"/></name> <argument_list pos:line="64" pos:column="16">(<argument><expr><name pos:line="64" pos:column="17">pgppath<pos:position pos:line="64" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="64" pos:column="26">sizeof <argument_list pos:line="64" pos:column="33">(<argument><expr><name pos:line="64" pos:column="34">pgppath<pos:position pos:line="64" pos:column="41"/></name></expr></argument>)<pos:position pos:line="64" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="44">"%s/.pgp"<pos:position pos:line="64" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="55">env_home<pos:position pos:line="64" pos:column="63"/></name></expr></argument>)<pos:position pos:line="64" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="65"/></expr_stmt></block></then></if></elseif>
    <else pos:line="65" pos:column="5">else
    <block pos:line="66" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="67" pos:column="7">fprintf<pos:position pos:line="67" pos:column="14"/></name> <argument_list pos:line="67" pos:column="15">(<argument><expr><name pos:line="67" pos:column="16">stderr<pos:position pos:line="67" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="24">"%s: Can't determine your PGPPATH.\n"<pos:position pos:line="67" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="63">argv<pos:position pos:line="67" pos:column="67"/></name><index pos:line="67" pos:column="67">[<expr><literal type="number" pos:line="67" pos:column="68">0<pos:position pos:line="67" pos:column="69"/></literal></expr>]<pos:position pos:line="67" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="67" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="72"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="68" pos:column="7">exit<pos:position pos:line="68" pos:column="11"/></name> <argument_list pos:line="68" pos:column="12">(<argument><expr><literal type="number" pos:line="68" pos:column="13">1<pos:position pos:line="68" pos:column="14"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="69" pos:column="6"/></block></else></if>
    
    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><name pos:line="71" pos:column="9">secring<pos:position pos:line="71" pos:column="16"/></name></expr>)<pos:position pos:line="71" pos:column="17"/></condition><then pos:line="71" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="72" pos:column="7">snprintf<pos:position pos:line="72" pos:column="15"/></name> <argument_list pos:line="72" pos:column="16">(<argument><expr><name pos:line="72" pos:column="17">kring<pos:position pos:line="72" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="72" pos:column="24">sizeof <argument_list pos:line="72" pos:column="31">(<argument><expr><name pos:line="72" pos:column="32">kring<pos:position pos:line="72" pos:column="37"/></name></expr></argument>)<pos:position pos:line="72" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="40">"%s/secring.%s"<pos:position pos:line="72" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="57">pgppath<pos:position pos:line="72" pos:column="64"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="72" pos:column="66">version<pos:position pos:line="72" pos:column="73"/></name> <operator pos:line="72" pos:column="74">==<pos:position pos:line="72" pos:column="76"/></operator> <literal type="number" pos:line="72" pos:column="77">2<pos:position pos:line="72" pos:column="78"/></literal></expr> ?<pos:position pos:line="72" pos:column="80"/></condition><then pos:line="72" pos:column="80"> <expr><literal type="string" pos:line="72" pos:column="81">"pgp"<pos:position pos:line="72" pos:column="86"/></literal></expr> <pos:position pos:line="72" pos:column="87"/></then><else pos:line="72" pos:column="87">: <expr><literal type="string" pos:line="72" pos:column="89">"skr"<pos:position pos:line="72" pos:column="94"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="72" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="96"/></expr_stmt></block></then>
    <else pos:line="73" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="7">snprintf<pos:position pos:line="74" pos:column="15"/></name> <argument_list pos:line="74" pos:column="16">(<argument><expr><name pos:line="74" pos:column="17">kring<pos:position pos:line="74" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="74" pos:column="24">sizeof <argument_list pos:line="74" pos:column="31">(<argument><expr><name pos:line="74" pos:column="32">kring<pos:position pos:line="74" pos:column="37"/></name></expr></argument>)<pos:position pos:line="74" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="40">"%s/pubring.%s"<pos:position pos:line="74" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="57">pgppath<pos:position pos:line="74" pos:column="64"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="74" pos:column="66">version<pos:position pos:line="74" pos:column="73"/></name> <operator pos:line="74" pos:column="74">==<pos:position pos:line="74" pos:column="76"/></operator> <literal type="number" pos:line="74" pos:column="77">2<pos:position pos:line="74" pos:column="78"/></literal></expr> ?<pos:position pos:line="74" pos:column="80"/></condition><then pos:line="74" pos:column="80"> <expr><literal type="string" pos:line="74" pos:column="81">"pgp"<pos:position pos:line="74" pos:column="86"/></literal></expr> <pos:position pos:line="74" pos:column="87"/></then><else pos:line="74" pos:column="87">: <expr><literal type="string" pos:line="74" pos:column="89">"pkr"<pos:position pos:line="74" pos:column="94"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="74" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="96"/></expr_stmt></block></else></if>
  }<pos:position pos:line="75" pos:column="4"/></block></else></if>
  
  <expr_stmt><expr><call><name pos:line="77" pos:column="3">pgpring_find_candidates<pos:position pos:line="77" pos:column="26"/></name> <argument_list pos:line="77" pos:column="27">(<argument><expr><name pos:line="77" pos:column="28">kring<pos:position pos:line="77" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="35">(<pos:position pos:line="77" pos:column="36"/></operator><specifier pos:line="77" pos:column="36">const<pos:position pos:line="77" pos:column="41"/></specifier> <name pos:line="77" pos:column="42">char<pos:position pos:line="77" pos:column="46"/></name><operator pos:line="77" pos:column="46">*<pos:position pos:line="77" pos:column="47"/></operator><operator pos:line="77" pos:column="47">*<pos:position pos:line="77" pos:column="48"/></operator><operator pos:line="77" pos:column="48">)<pos:position pos:line="77" pos:column="49"/></operator> <name pos:line="77" pos:column="50">argv<pos:position pos:line="77" pos:column="54"/></name> <operator pos:line="77" pos:column="55">+<pos:position pos:line="77" pos:column="56"/></operator> <name pos:line="77" pos:column="57">optind<pos:position pos:line="77" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="65">argc<pos:position pos:line="77" pos:column="69"/></name> <operator pos:line="77" pos:column="70">-<pos:position pos:line="77" pos:column="71"/></operator> <name pos:line="77" pos:column="72">optind<pos:position pos:line="77" pos:column="78"/></name></expr></argument>)<pos:position pos:line="77" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="80"/></expr_stmt>
    
  <return pos:line="79" pos:column="3">return <expr><literal type="number" pos:line="79" pos:column="10">0<pos:position pos:line="79" pos:column="11"/></literal></expr>;<pos:position pos:line="79" pos:column="12"/></return>
}<pos:position pos:line="80" pos:column="2"/></block></function></unit>

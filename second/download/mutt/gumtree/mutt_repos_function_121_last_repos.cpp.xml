<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_121_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">compare_spam<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">void<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">a<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">void<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">b<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">HEADER<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier><modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">ppa<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><operator pos:line="3" pos:column="18">(<pos:position pos:line="3" pos:column="19"/></operator><name pos:line="3" pos:column="19">HEADER<pos:position pos:line="3" pos:column="25"/></name> <operator pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></operator><operator pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></operator><operator pos:line="3" pos:column="28">)<pos:position pos:line="3" pos:column="29"/></operator> <name pos:line="3" pos:column="30">a<pos:position pos:line="3" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">HEADER<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier><modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">ppb<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><operator pos:line="4" pos:column="18">(<pos:position pos:line="4" pos:column="19"/></operator><name pos:line="4" pos:column="19">HEADER<pos:position pos:line="4" pos:column="25"/></name> <operator pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></operator><operator pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></operator><operator pos:line="4" pos:column="28">)<pos:position pos:line="4" pos:column="29"/></operator> <name pos:line="4" pos:column="30">b<pos:position pos:line="4" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name>   <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">aptr<pos:position pos:line="5" pos:column="15"/></name></decl>, <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="18">bptr<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type>     <name pos:line="6" pos:column="11">ahas<pos:position pos:line="6" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="17">bhas<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type>     <name pos:line="7" pos:column="11">result<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><literal type="number" pos:line="7" pos:column="20">0<pos:position pos:line="7" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">double<pos:position pos:line="8" pos:column="9"/></name></type>  <name pos:line="8" pos:column="11">difference<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* Firstly, require spam attributes for both msgs */</comment>
  <comment type="block" pos:line="11" pos:column="3">/* to compare. Determine which msgs have one.     */</comment>
  <expr_stmt><expr><name pos:line="12" pos:column="3">ahas<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <name><operator pos:line="12" pos:column="10">(<pos:position pos:line="12" pos:column="11"/></operator><operator pos:line="12" pos:column="11">*<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="12">ppa<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">)<pos:position pos:line="12" pos:column="16"/></operator><operator pos:line="12" pos:column="16">-&gt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">env<pos:position pos:line="12" pos:column="21"/></name></name> <operator pos:line="12" pos:column="22">&amp;&amp;<pos:position pos:line="12" pos:column="32"/></operator> <name><operator pos:line="12" pos:column="25">(<pos:position pos:line="12" pos:column="26"/></operator><operator pos:line="12" pos:column="26">*<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="27">ppa<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">)<pos:position pos:line="12" pos:column="31"/></operator><operator pos:line="12" pos:column="31">-&gt;<pos:position pos:line="12" pos:column="36"/></operator><name><name pos:line="12" pos:column="33">env<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">-&gt;<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="38">spam<pos:position pos:line="12" pos:column="42"/></name></name></name></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name pos:line="13" pos:column="3">bhas<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <name><operator pos:line="13" pos:column="10">(<pos:position pos:line="13" pos:column="11"/></operator><operator pos:line="13" pos:column="11">*<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="12">ppb<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">)<pos:position pos:line="13" pos:column="16"/></operator><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">env<pos:position pos:line="13" pos:column="21"/></name></name> <operator pos:line="13" pos:column="22">&amp;&amp;<pos:position pos:line="13" pos:column="32"/></operator> <name><operator pos:line="13" pos:column="25">(<pos:position pos:line="13" pos:column="26"/></operator><operator pos:line="13" pos:column="26">*<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="27">ppb<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">)<pos:position pos:line="13" pos:column="31"/></operator><operator pos:line="13" pos:column="31">-&gt;<pos:position pos:line="13" pos:column="36"/></operator><name><name pos:line="13" pos:column="33">env<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">-&gt;<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="38">spam<pos:position pos:line="13" pos:column="42"/></name></name></name></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt>

  <comment type="block" pos:line="15" pos:column="3">/* If one msg has spam attr but other does not, sort the one with first. */</comment>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">ahas<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">&amp;&amp;<pos:position pos:line="16" pos:column="22"/></operator> <operator pos:line="16" pos:column="15">!<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="16">bhas<pos:position pos:line="16" pos:column="20"/></name></expr>)<pos:position pos:line="16" pos:column="21"/></condition><then pos:line="16" pos:column="21">
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><call><name pos:line="17" pos:column="13">SORTCODE<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><literal type="number" pos:line="17" pos:column="22">1<pos:position pos:line="17" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="24"/></argument_list></call><operator pos:line="17" pos:column="24">)<pos:position pos:line="17" pos:column="25"/></operator></expr>;<pos:position pos:line="17" pos:column="26"/></return></block></then></if>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">!<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">ahas<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">&amp;&amp;<pos:position pos:line="18" pos:column="23"/></operator> <name pos:line="18" pos:column="16">bhas<pos:position pos:line="18" pos:column="20"/></name></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21">
    <block type="pseudo"><return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><call><name pos:line="19" pos:column="13">SORTCODE<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><operator pos:line="19" pos:column="22">-<pos:position pos:line="19" pos:column="23"/></operator><literal type="number" pos:line="19" pos:column="23">1<pos:position pos:line="19" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="25"/></argument_list></call><operator pos:line="19" pos:column="25">)<pos:position pos:line="19" pos:column="26"/></operator></expr>;<pos:position pos:line="19" pos:column="27"/></return></block></then></if>

  <comment type="block" pos:line="21" pos:column="3">/* Else, if neither has a spam attr, presume equality. Fall back on aux. */</comment>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><operator pos:line="22" pos:column="7">!<pos:position pos:line="22" pos:column="8"/></operator><name pos:line="22" pos:column="8">ahas<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">&amp;&amp;<pos:position pos:line="22" pos:column="23"/></operator> <operator pos:line="22" pos:column="16">!<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">bhas<pos:position pos:line="22" pos:column="21"/></name></expr>)<pos:position pos:line="22" pos:column="22"/></condition><then pos:line="22" pos:column="22">
  <block pos:line="23" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">AUXSORT<pos:position pos:line="24" pos:column="12"/></name><argument_list pos:line="24" pos:column="12">(<argument><expr><name pos:line="24" pos:column="13">result<pos:position pos:line="24" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="21">a<pos:position pos:line="24" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="24">b<pos:position pos:line="24" pos:column="25"/></name></expr></argument>)<pos:position pos:line="24" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><operator pos:line="25" pos:column="12">(<pos:position pos:line="25" pos:column="13"/></operator><call><name pos:line="25" pos:column="13">SORTCODE<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">result<pos:position pos:line="25" pos:column="28"/></name></expr></argument>)<pos:position pos:line="25" pos:column="29"/></argument_list></call><operator pos:line="25" pos:column="29">)<pos:position pos:line="25" pos:column="30"/></operator></expr>;<pos:position pos:line="25" pos:column="31"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>


  <comment type="block" pos:line="29" pos:column="3">/* Both have spam attrs. */</comment>

  <comment type="block" pos:line="31" pos:column="3">/* preliminary numeric examination */</comment>
  <expr_stmt><expr><name pos:line="32" pos:column="3">difference<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <operator pos:line="32" pos:column="16">(<pos:position pos:line="32" pos:column="17"/></operator><call><name pos:line="32" pos:column="17">strtod<pos:position pos:line="32" pos:column="23"/></name><argument_list pos:line="32" pos:column="23">(<argument><expr><name><operator pos:line="32" pos:column="24">(<pos:position pos:line="32" pos:column="25"/></operator><operator pos:line="32" pos:column="25">*<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="26">ppa<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">)<pos:position pos:line="32" pos:column="30"/></operator><operator pos:line="32" pos:column="30">-&gt;<pos:position pos:line="32" pos:column="35"/></operator><name><name pos:line="32" pos:column="32">env<pos:position pos:line="32" pos:column="35"/></name><operator pos:line="32" pos:column="35">-&gt;<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="37">spam<pos:position pos:line="32" pos:column="41"/></name><operator pos:line="32" pos:column="41">-&gt;<pos:position pos:line="32" pos:column="46"/></operator><name pos:line="32" pos:column="43">data<pos:position pos:line="32" pos:column="47"/></name></name></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="49">&amp;<pos:position pos:line="32" pos:column="54"/></operator><name pos:line="32" pos:column="50">aptr<pos:position pos:line="32" pos:column="54"/></name></expr></argument>)<pos:position pos:line="32" pos:column="55"/></argument_list></call> <operator pos:line="32" pos:column="56">-<pos:position pos:line="32" pos:column="57"/></operator>
                <call><name pos:line="33" pos:column="17">strtod<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><name><operator pos:line="33" pos:column="24">(<pos:position pos:line="33" pos:column="25"/></operator><operator pos:line="33" pos:column="25">*<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="26">ppb<pos:position pos:line="33" pos:column="29"/></name><operator pos:line="33" pos:column="29">)<pos:position pos:line="33" pos:column="30"/></operator><operator pos:line="33" pos:column="30">-&gt;<pos:position pos:line="33" pos:column="35"/></operator><name><name pos:line="33" pos:column="32">env<pos:position pos:line="33" pos:column="35"/></name><operator pos:line="33" pos:column="35">-&gt;<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="37">spam<pos:position pos:line="33" pos:column="41"/></name><operator pos:line="33" pos:column="41">-&gt;<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="43">data<pos:position pos:line="33" pos:column="47"/></name></name></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="49">&amp;<pos:position pos:line="33" pos:column="54"/></operator><name pos:line="33" pos:column="50">bptr<pos:position pos:line="33" pos:column="54"/></name></expr></argument>)<pos:position pos:line="33" pos:column="55"/></argument_list></call><operator pos:line="33" pos:column="55">)<pos:position pos:line="33" pos:column="56"/></operator></expr>;<pos:position pos:line="33" pos:column="57"/></expr_stmt>

  <comment type="block" pos:line="35" pos:column="3">/* map double into comparison (-1, 0, or 1) */</comment>
  <expr_stmt><expr><name pos:line="36" pos:column="3">result<pos:position pos:line="36" pos:column="9"/></name> <operator pos:line="36" pos:column="10">=<pos:position pos:line="36" pos:column="11"/></operator> <operator pos:line="36" pos:column="12">(<pos:position pos:line="36" pos:column="13"/></operator><ternary><condition><expr><name pos:line="36" pos:column="13">difference<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">&lt;<pos:position pos:line="36" pos:column="28"/></operator> <literal type="number" pos:line="36" pos:column="26">0.0<pos:position pos:line="36" pos:column="29"/></literal></expr> ?<pos:position pos:line="36" pos:column="31"/></condition><then pos:line="36" pos:column="31"> <expr><operator pos:line="36" pos:column="32">-<pos:position pos:line="36" pos:column="33"/></operator><literal type="number" pos:line="36" pos:column="33">1<pos:position pos:line="36" pos:column="34"/></literal></expr> <pos:position pos:line="36" pos:column="35"/></then><else pos:line="36" pos:column="35">: <expr><ternary><condition><expr><name pos:line="36" pos:column="37">difference<pos:position pos:line="36" pos:column="47"/></name> <operator pos:line="36" pos:column="48">&gt;<pos:position pos:line="36" pos:column="52"/></operator> <literal type="number" pos:line="36" pos:column="50">0.0<pos:position pos:line="36" pos:column="53"/></literal></expr> ?<pos:position pos:line="36" pos:column="55"/></condition><then pos:line="36" pos:column="55"> <expr><literal type="number" pos:line="36" pos:column="56">1<pos:position pos:line="36" pos:column="57"/></literal></expr> <pos:position pos:line="36" pos:column="58"/></then><else pos:line="36" pos:column="58">: <expr><literal type="number" pos:line="36" pos:column="60">0<pos:position pos:line="36" pos:column="61"/></literal></expr></else></ternary></expr></else></ternary><operator pos:line="36" pos:column="61">)<pos:position pos:line="36" pos:column="62"/></operator></expr>;<pos:position pos:line="36" pos:column="63"/></expr_stmt>

  <comment type="block" pos:line="38" pos:column="3">/* If either aptr or bptr is equal to data, there is no numeric    */</comment>
  <comment type="block" pos:line="39" pos:column="3">/* value for that spam attribute. In this case, compare lexically. */</comment>
  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><operator pos:line="40" pos:column="7">(<pos:position pos:line="40" pos:column="8"/></operator><name pos:line="40" pos:column="8">aptr<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">==<pos:position pos:line="40" pos:column="15"/></operator> <name><operator pos:line="40" pos:column="16">(<pos:position pos:line="40" pos:column="17"/></operator><operator pos:line="40" pos:column="17">*<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="18">ppa<pos:position pos:line="40" pos:column="21"/></name><operator pos:line="40" pos:column="21">)<pos:position pos:line="40" pos:column="22"/></operator><operator pos:line="40" pos:column="22">-&gt;<pos:position pos:line="40" pos:column="27"/></operator><name><name pos:line="40" pos:column="24">env<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">-&gt;<pos:position pos:line="40" pos:column="32"/></operator><name pos:line="40" pos:column="29">spam<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">-&gt;<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="35">data<pos:position pos:line="40" pos:column="39"/></name></name></name><operator pos:line="40" pos:column="39">)<pos:position pos:line="40" pos:column="40"/></operator> <operator pos:line="40" pos:column="41">||<pos:position pos:line="40" pos:column="43"/></operator> <operator pos:line="40" pos:column="44">(<pos:position pos:line="40" pos:column="45"/></operator><name pos:line="40" pos:column="45">bptr<pos:position pos:line="40" pos:column="49"/></name> <operator pos:line="40" pos:column="50">==<pos:position pos:line="40" pos:column="52"/></operator> <name><operator pos:line="40" pos:column="53">(<pos:position pos:line="40" pos:column="54"/></operator><operator pos:line="40" pos:column="54">*<pos:position pos:line="40" pos:column="55"/></operator><name pos:line="40" pos:column="55">ppb<pos:position pos:line="40" pos:column="58"/></name><operator pos:line="40" pos:column="58">)<pos:position pos:line="40" pos:column="59"/></operator><operator pos:line="40" pos:column="59">-&gt;<pos:position pos:line="40" pos:column="64"/></operator><name><name pos:line="40" pos:column="61">env<pos:position pos:line="40" pos:column="64"/></name><operator pos:line="40" pos:column="64">-&gt;<pos:position pos:line="40" pos:column="69"/></operator><name pos:line="40" pos:column="66">spam<pos:position pos:line="40" pos:column="70"/></name><operator pos:line="40" pos:column="70">-&gt;<pos:position pos:line="40" pos:column="75"/></operator><name pos:line="40" pos:column="72">data<pos:position pos:line="40" pos:column="76"/></name></name></name><operator pos:line="40" pos:column="76">)<pos:position pos:line="40" pos:column="77"/></operator></expr>)<pos:position pos:line="40" pos:column="78"/></condition><then pos:line="40" pos:column="78">
    <block type="pseudo"><return pos:line="41" pos:column="5">return <expr><operator pos:line="41" pos:column="12">(<pos:position pos:line="41" pos:column="13"/></operator><call><name pos:line="41" pos:column="13">SORTCODE<pos:position pos:line="41" pos:column="21"/></name><argument_list pos:line="41" pos:column="21">(<argument><expr><call><name pos:line="41" pos:column="22">strcmp<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><name pos:line="41" pos:column="29">aptr<pos:position pos:line="41" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="35">bptr<pos:position pos:line="41" pos:column="39"/></name></expr></argument>)<pos:position pos:line="41" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="41"/></argument_list></call><operator pos:line="41" pos:column="41">)<pos:position pos:line="41" pos:column="42"/></operator></expr>;<pos:position pos:line="41" pos:column="43"/></return></block></then></if>

  <comment type="block" pos:line="43" pos:column="3">/* Otherwise, we have numeric value for both attrs. If these values */</comment>
  <comment type="block" pos:line="44" pos:column="3">/* are equal, then we first fall back upon string comparison, then  */</comment>
  <comment type="block" pos:line="45" pos:column="3">/* upon auxiliary sort.                                             */</comment>
  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><name pos:line="46" pos:column="7">result<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">==<pos:position pos:line="46" pos:column="16"/></operator> <literal type="number" pos:line="46" pos:column="17">0<pos:position pos:line="46" pos:column="18"/></literal></expr>)<pos:position pos:line="46" pos:column="19"/></condition><then pos:line="46" pos:column="19">
  <block pos:line="47" pos:column="3">{
    <expr_stmt><expr><name pos:line="48" pos:column="5">result<pos:position pos:line="48" pos:column="11"/></name> <operator pos:line="48" pos:column="12">=<pos:position pos:line="48" pos:column="13"/></operator> <call><name pos:line="48" pos:column="14">strcmp<pos:position pos:line="48" pos:column="20"/></name><argument_list pos:line="48" pos:column="20">(<argument><expr><name pos:line="48" pos:column="21">aptr<pos:position pos:line="48" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="27">bptr<pos:position pos:line="48" pos:column="31"/></name></expr></argument>)<pos:position pos:line="48" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="33"/></expr_stmt>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">result<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">==<pos:position pos:line="49" pos:column="18"/></operator> <literal type="number" pos:line="49" pos:column="19">0<pos:position pos:line="49" pos:column="20"/></literal></expr>)<pos:position pos:line="49" pos:column="21"/></condition><then pos:line="49" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="7">AUXSORT<pos:position pos:line="50" pos:column="14"/></name><argument_list pos:line="50" pos:column="14">(<argument><expr><name pos:line="50" pos:column="15">result<pos:position pos:line="50" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="23">a<pos:position pos:line="50" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="26">b<pos:position pos:line="50" pos:column="27"/></name></expr></argument>)<pos:position pos:line="50" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="29"/></expr_stmt></block></then></if>
  }<pos:position pos:line="51" pos:column="4"/></block></then></if>

  <return pos:line="53" pos:column="3">return <expr><operator pos:line="53" pos:column="10">(<pos:position pos:line="53" pos:column="11"/></operator><call><name pos:line="53" pos:column="11">SORTCODE<pos:position pos:line="53" pos:column="19"/></name><argument_list pos:line="53" pos:column="19">(<argument><expr><name pos:line="53" pos:column="20">result<pos:position pos:line="53" pos:column="26"/></name></expr></argument>)<pos:position pos:line="53" pos:column="27"/></argument_list></call><operator pos:line="53" pos:column="27">)<pos:position pos:line="53" pos:column="28"/></operator></expr>;<pos:position pos:line="53" pos:column="29"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

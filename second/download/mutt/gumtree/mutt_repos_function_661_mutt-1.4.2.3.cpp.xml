<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_661_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">pop_open_mailbox<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">CONTEXT<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">ctx<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">ret<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buf<pos:position pos:line="4" pos:column="11"/></name><index pos:line="4" pos:column="11">[<expr><name pos:line="4" pos:column="12">LONG_STRING<pos:position pos:line="4" pos:column="23"/></name></expr>]<pos:position pos:line="4" pos:column="24"/></index></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CONNECTION<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">conn<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">ACCOUNT<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">acct<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">POP_DATA<pos:position pos:line="7" pos:column="11"/></name> <modifier pos:line="7" pos:column="12">*<pos:position pos:line="7" pos:column="13"/></modifier></type><name pos:line="7" pos:column="13">pop_data<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">ciss_url_t<pos:position pos:line="8" pos:column="13"/></name></type> <name pos:line="8" pos:column="14">url<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><call><name pos:line="10" pos:column="7">pop_parse_path<pos:position pos:line="10" pos:column="21"/></name> <argument_list pos:line="10" pos:column="22">(<argument><expr><name><name pos:line="10" pos:column="23">ctx<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">path<pos:position pos:line="10" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="34">&amp;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="35">acct<pos:position pos:line="10" pos:column="39"/></name></expr></argument>)<pos:position pos:line="10" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="41"/></condition><then pos:line="10" pos:column="41">
  <block pos:line="11" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">mutt_error<pos:position pos:line="12" pos:column="15"/></name> <argument_list pos:line="12" pos:column="16">(<argument><expr><call><name pos:line="12" pos:column="17">_<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><literal type="string" pos:line="12" pos:column="19">"%s is an invalid POP path"<pos:position pos:line="12" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="49">ctx<pos:position pos:line="12" pos:column="52"/></name><operator pos:line="12" pos:column="52">-&gt;<pos:position pos:line="12" pos:column="57"/></operator><name pos:line="12" pos:column="54">path<pos:position pos:line="12" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">mutt_sleep<pos:position pos:line="13" pos:column="15"/></name> <argument_list pos:line="13" pos:column="16">(<argument><expr><literal type="number" pos:line="13" pos:column="17">2<pos:position pos:line="13" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="20"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">-<pos:position pos:line="14" pos:column="13"/></operator><literal type="number" pos:line="14" pos:column="13">1<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">mutt_account_tourl<pos:position pos:line="17" pos:column="21"/></name> <argument_list pos:line="17" pos:column="22">(<argument><expr><operator pos:line="17" pos:column="23">&amp;<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="24">acct<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="30">&amp;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="31">url<pos:position pos:line="17" pos:column="34"/></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">url<pos:position pos:line="18" pos:column="6"/></name><operator pos:line="18" pos:column="6">.<pos:position pos:line="18" pos:column="7"/></operator><name pos:line="18" pos:column="7">path<pos:position pos:line="18" pos:column="11"/></name></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <name pos:line="18" pos:column="14">NULL<pos:position pos:line="18" pos:column="18"/></name></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">url_ciss_tostring<pos:position pos:line="19" pos:column="20"/></name> <argument_list pos:line="19" pos:column="21">(<argument><expr><operator pos:line="19" pos:column="22">&amp;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="23">url<pos:position pos:line="19" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="28">buf<pos:position pos:line="19" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="33">sizeof <argument_list pos:line="19" pos:column="40">(<argument><expr><name pos:line="19" pos:column="41">buf<pos:position pos:line="19" pos:column="44"/></name></expr></argument>)<pos:position pos:line="19" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="47">0<pos:position pos:line="19" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><name pos:line="20" pos:column="3">conn<pos:position pos:line="20" pos:column="7"/></name> <operator pos:line="20" pos:column="8">=<pos:position pos:line="20" pos:column="9"/></operator> <call><name pos:line="20" pos:column="10">mutt_conn_find<pos:position pos:line="20" pos:column="24"/></name> <argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">NULL<pos:position pos:line="20" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="32">&amp;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="33">acct<pos:position pos:line="20" pos:column="37"/></name></expr></argument>)<pos:position pos:line="20" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><operator pos:line="21" pos:column="7">!<pos:position pos:line="21" pos:column="8"/></operator><name pos:line="21" pos:column="8">conn<pos:position pos:line="21" pos:column="12"/></name></expr>)<pos:position pos:line="21" pos:column="13"/></condition><then pos:line="21" pos:column="13">
    <block type="pseudo"><return pos:line="22" pos:column="5">return <expr><operator pos:line="22" pos:column="12">-<pos:position pos:line="22" pos:column="13"/></operator><literal type="number" pos:line="22" pos:column="13">1<pos:position pos:line="22" pos:column="14"/></literal></expr>;<pos:position pos:line="22" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="24" pos:column="3">FREE<pos:position pos:line="24" pos:column="7"/></name> <argument_list pos:line="24" pos:column="8">(<argument><expr><operator pos:line="24" pos:column="9">&amp;<pos:position pos:line="24" pos:column="14"/></operator><name><name pos:line="24" pos:column="10">ctx<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">-&gt;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="15">path<pos:position pos:line="24" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">ctx<pos:position pos:line="25" pos:column="6"/></name><operator pos:line="25" pos:column="6">-&gt;<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="8">path<pos:position pos:line="25" pos:column="12"/></name></name> <operator pos:line="25" pos:column="13">=<pos:position pos:line="25" pos:column="14"/></operator> <call><name pos:line="25" pos:column="15">safe_strdup<pos:position pos:line="25" pos:column="26"/></name> <argument_list pos:line="25" pos:column="27">(<argument><expr><name pos:line="25" pos:column="28">buf<pos:position pos:line="25" pos:column="31"/></name></expr></argument>)<pos:position pos:line="25" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><name pos:line="27" pos:column="3">pop_data<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <call><name pos:line="27" pos:column="14">safe_calloc<pos:position pos:line="27" pos:column="25"/></name> <argument_list pos:line="27" pos:column="26">(<argument><expr><literal type="number" pos:line="27" pos:column="27">1<pos:position pos:line="27" pos:column="28"/></literal></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="30">sizeof <argument_list pos:line="27" pos:column="37">(<argument><expr><name pos:line="27" pos:column="38">POP_DATA<pos:position pos:line="27" pos:column="46"/></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="28" pos:column="3">pop_data<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">-&gt;<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="13">conn<pos:position pos:line="28" pos:column="17"/></name></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <name pos:line="28" pos:column="20">conn<pos:position pos:line="28" pos:column="24"/></name></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="29" pos:column="3">ctx<pos:position pos:line="29" pos:column="6"/></name><operator pos:line="29" pos:column="6">-&gt;<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="8">data<pos:position pos:line="29" pos:column="12"/></name></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <name pos:line="29" pos:column="15">pop_data<pos:position pos:line="29" pos:column="23"/></name></expr>;<pos:position pos:line="29" pos:column="24"/></expr_stmt>

  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><call><name pos:line="31" pos:column="7">pop_open_connection<pos:position pos:line="31" pos:column="26"/></name> <argument_list pos:line="31" pos:column="27">(<argument><expr><name pos:line="31" pos:column="28">pop_data<pos:position pos:line="31" pos:column="36"/></name></expr></argument>)<pos:position pos:line="31" pos:column="37"/></argument_list></call> <operator pos:line="31" pos:column="38">&lt;<pos:position pos:line="31" pos:column="42"/></operator> <literal type="number" pos:line="31" pos:column="40">0<pos:position pos:line="31" pos:column="41"/></literal></expr>)<pos:position pos:line="31" pos:column="42"/></condition><then pos:line="31" pos:column="42">
    <block type="pseudo"><return pos:line="32" pos:column="5">return <expr><operator pos:line="32" pos:column="12">-<pos:position pos:line="32" pos:column="13"/></operator><literal type="number" pos:line="32" pos:column="13">1<pos:position pos:line="32" pos:column="14"/></literal></expr>;<pos:position pos:line="32" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="34" pos:column="3">conn<pos:position pos:line="34" pos:column="7"/></name><operator pos:line="34" pos:column="7">-&gt;<pos:position pos:line="34" pos:column="12"/></operator><name pos:line="34" pos:column="9">data<pos:position pos:line="34" pos:column="13"/></name></name> <operator pos:line="34" pos:column="14">=<pos:position pos:line="34" pos:column="15"/></operator> <name pos:line="34" pos:column="16">pop_data<pos:position pos:line="34" pos:column="24"/></name></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt>

  <macro><name pos:line="36" pos:column="3">FOREVER<pos:position pos:line="36" pos:column="10"/></name></macro>
  <block pos:line="37" pos:column="3">{
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><call><name pos:line="38" pos:column="9">pop_reconnect<pos:position pos:line="38" pos:column="22"/></name> <argument_list pos:line="38" pos:column="23">(<argument><expr><name pos:line="38" pos:column="24">ctx<pos:position pos:line="38" pos:column="27"/></name></expr></argument>)<pos:position pos:line="38" pos:column="28"/></argument_list></call> <operator pos:line="38" pos:column="29">&lt;<pos:position pos:line="38" pos:column="33"/></operator> <literal type="number" pos:line="38" pos:column="31">0<pos:position pos:line="38" pos:column="32"/></literal></expr>)<pos:position pos:line="38" pos:column="33"/></condition><then pos:line="38" pos:column="33">
      <block type="pseudo"><return pos:line="39" pos:column="7">return <expr><operator pos:line="39" pos:column="14">-<pos:position pos:line="39" pos:column="15"/></operator><literal type="number" pos:line="39" pos:column="15">1<pos:position pos:line="39" pos:column="16"/></literal></expr>;<pos:position pos:line="39" pos:column="17"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="41" pos:column="5">ctx<pos:position pos:line="41" pos:column="8"/></name><operator pos:line="41" pos:column="8">-&gt;<pos:position pos:line="41" pos:column="13"/></operator><name pos:line="41" pos:column="10">size<pos:position pos:line="41" pos:column="14"/></name></name> <operator pos:line="41" pos:column="15">=<pos:position pos:line="41" pos:column="16"/></operator> <name><name pos:line="41" pos:column="17">pop_data<pos:position pos:line="41" pos:column="25"/></name><operator pos:line="41" pos:column="25">-&gt;<pos:position pos:line="41" pos:column="30"/></operator><name pos:line="41" pos:column="27">size<pos:position pos:line="41" pos:column="31"/></name></name></expr>;<pos:position pos:line="41" pos:column="32"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="43" pos:column="5">mutt_message<pos:position pos:line="43" pos:column="17"/></name></type> <name pos:line="43" pos:column="18">_<pos:position pos:line="43" pos:column="19"/></name><argument_list pos:line="43" pos:column="19">(<argument><expr><literal type="string" pos:line="43" pos:column="20">"Fetching list of messages..."<pos:position pos:line="43" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="51"/></argument_list></decl>;<pos:position pos:line="43" pos:column="52"/></decl_stmt>

    <expr_stmt><expr><name pos:line="45" pos:column="5">ret<pos:position pos:line="45" pos:column="8"/></name> <operator pos:line="45" pos:column="9">=<pos:position pos:line="45" pos:column="10"/></operator> <call><name pos:line="45" pos:column="11">pop_fetch_headers<pos:position pos:line="45" pos:column="28"/></name> <argument_list pos:line="45" pos:column="29">(<argument><expr><name pos:line="45" pos:column="30">ctx<pos:position pos:line="45" pos:column="33"/></name></expr></argument>)<pos:position pos:line="45" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="35"/></expr_stmt>

    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name pos:line="47" pos:column="9">ret<pos:position pos:line="47" pos:column="12"/></name> <operator pos:line="47" pos:column="13">&gt;=<pos:position pos:line="47" pos:column="18"/></operator> <literal type="number" pos:line="47" pos:column="16">0<pos:position pos:line="47" pos:column="17"/></literal></expr>)<pos:position pos:line="47" pos:column="18"/></condition><then pos:line="47" pos:column="18">
      <block type="pseudo"><return pos:line="48" pos:column="7">return <expr><literal type="number" pos:line="48" pos:column="14">0<pos:position pos:line="48" pos:column="15"/></literal></expr>;<pos:position pos:line="48" pos:column="16"/></return></block></then></if>

    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name pos:line="50" pos:column="9">ret<pos:position pos:line="50" pos:column="12"/></name> <operator pos:line="50" pos:column="13">&lt;<pos:position pos:line="50" pos:column="17"/></operator> <operator pos:line="50" pos:column="15">-<pos:position pos:line="50" pos:column="16"/></operator><literal type="number" pos:line="50" pos:column="16">1<pos:position pos:line="50" pos:column="17"/></literal></expr>)<pos:position pos:line="50" pos:column="18"/></condition><then pos:line="50" pos:column="18">
    <block pos:line="51" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="52" pos:column="7">mutt_sleep<pos:position pos:line="52" pos:column="17"/></name> <argument_list pos:line="52" pos:column="18">(<argument><expr><literal type="number" pos:line="52" pos:column="19">2<pos:position pos:line="52" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="22"/></expr_stmt>
      <return pos:line="53" pos:column="7">return <expr><operator pos:line="53" pos:column="14">-<pos:position pos:line="53" pos:column="15"/></operator><literal type="number" pos:line="53" pos:column="15">1<pos:position pos:line="53" pos:column="16"/></literal></expr>;<pos:position pos:line="53" pos:column="17"/></return>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>
  }<pos:position pos:line="55" pos:column="4"/></block>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

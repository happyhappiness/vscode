<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1139_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">print_compiled_pattern<pos:position pos:line="2" pos:column="23"/></name> <argument_list pos:line="2" pos:column="24">(<argument><expr><name pos:line="2" pos:column="25">bufp<pos:position pos:line="2" pos:column="29"/></name></expr></argument>)<pos:position pos:line="2" pos:column="30"/></argument_list>
    struct <name pos:line="3" pos:column="12">re_pattern_buffer<pos:position pos:line="3" pos:column="29"/></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier><name pos:line="3" pos:column="31">bufp<pos:position pos:line="3" pos:column="35"/></name></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">unsigned<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">char<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">buffer<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><name><name pos:line="5" pos:column="27">bufp<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">-&gt;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="33">buffer<pos:position pos:line="5" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">print_partial_compiled_pattern<pos:position pos:line="7" pos:column="33"/></name> <argument_list pos:line="7" pos:column="34">(<argument><expr><name pos:line="7" pos:column="35">buffer<pos:position pos:line="7" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="43">buffer<pos:position pos:line="7" pos:column="49"/></name> <operator pos:line="7" pos:column="50">+<pos:position pos:line="7" pos:column="51"/></operator> <name><name pos:line="7" pos:column="52">bufp<pos:position pos:line="7" pos:column="56"/></name><operator pos:line="7" pos:column="56">-&gt;<pos:position pos:line="7" pos:column="61"/></operator><name pos:line="7" pos:column="58">used<pos:position pos:line="7" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">printf<pos:position pos:line="8" pos:column="9"/></name> <argument_list pos:line="8" pos:column="10">(<argument><expr><literal type="string" pos:line="8" pos:column="11">"%ld bytes used/%ld bytes allocated.\n"<pos:position pos:line="8" pos:column="50"/></literal></expr></argument>,
	  <argument><expr><name><name pos:line="9" pos:column="11">bufp<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">used<pos:position pos:line="9" pos:column="21"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="23">bufp<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">-&gt;<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="29">allocated<pos:position pos:line="9" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name><name pos:line="11" pos:column="7">bufp<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">fastmap_accurate<pos:position pos:line="11" pos:column="29"/></name></name> <operator pos:line="11" pos:column="30">&amp;&amp;<pos:position pos:line="11" pos:column="40"/></operator> <name><name pos:line="11" pos:column="33">bufp<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">-&gt;<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="39">fastmap<pos:position pos:line="11" pos:column="46"/></name></name></expr>)<pos:position pos:line="11" pos:column="47"/></condition><then pos:line="11" pos:column="47">
    <block pos:line="12" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="13" pos:column="7">printf<pos:position pos:line="13" pos:column="13"/></name> <argument_list pos:line="13" pos:column="14">(<argument><expr><literal type="string" pos:line="13" pos:column="15">"fastmap: "<pos:position pos:line="13" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">print_fastmap<pos:position pos:line="14" pos:column="20"/></name> <argument_list pos:line="14" pos:column="21">(<argument><expr><name><name pos:line="14" pos:column="22">bufp<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">-&gt;<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="28">fastmap<pos:position pos:line="14" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">printf<pos:position pos:line="17" pos:column="9"/></name> <argument_list pos:line="17" pos:column="10">(<argument><expr><literal type="string" pos:line="17" pos:column="11">"re_nsub: %d\t"<pos:position pos:line="17" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="28">bufp<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">-&gt;<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="34">re_nsub<pos:position pos:line="17" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">printf<pos:position pos:line="18" pos:column="9"/></name> <argument_list pos:line="18" pos:column="10">(<argument><expr><literal type="string" pos:line="18" pos:column="11">"regs_alloc: %d\t"<pos:position pos:line="18" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="31">bufp<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">-&gt;<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="37">regs_allocated<pos:position pos:line="18" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">printf<pos:position pos:line="19" pos:column="9"/></name> <argument_list pos:line="19" pos:column="10">(<argument><expr><literal type="string" pos:line="19" pos:column="11">"can_be_null: %d\t"<pos:position pos:line="19" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="32">bufp<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">-&gt;<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="38">can_be_null<pos:position pos:line="19" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">printf<pos:position pos:line="20" pos:column="9"/></name> <argument_list pos:line="20" pos:column="10">(<argument><expr><literal type="string" pos:line="20" pos:column="11">"newline_anchor: %d\n"<pos:position pos:line="20" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="35">bufp<pos:position pos:line="20" pos:column="39"/></name><operator pos:line="20" pos:column="39">-&gt;<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="41">newline_anchor<pos:position pos:line="20" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="57"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">printf<pos:position pos:line="21" pos:column="9"/></name> <argument_list pos:line="21" pos:column="10">(<argument><expr><literal type="string" pos:line="21" pos:column="11">"no_sub: %d\t"<pos:position pos:line="21" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="27">bufp<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">-&gt;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="33">no_sub<pos:position pos:line="21" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">printf<pos:position pos:line="22" pos:column="9"/></name> <argument_list pos:line="22" pos:column="10">(<argument><expr><literal type="string" pos:line="22" pos:column="11">"not_bol: %d\t"<pos:position pos:line="22" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="28">bufp<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">-&gt;<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="34">not_bol<pos:position pos:line="22" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">printf<pos:position pos:line="23" pos:column="9"/></name> <argument_list pos:line="23" pos:column="10">(<argument><expr><literal type="string" pos:line="23" pos:column="11">"not_eol: %d\t"<pos:position pos:line="23" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="28">bufp<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">-&gt;<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="34">not_eol<pos:position pos:line="23" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">printf<pos:position pos:line="24" pos:column="9"/></name> <argument_list pos:line="24" pos:column="10">(<argument><expr><literal type="string" pos:line="24" pos:column="11">"syntax: %lx\n"<pos:position pos:line="24" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="28">bufp<pos:position pos:line="24" pos:column="32"/></name><operator pos:line="24" pos:column="32">-&gt;<pos:position pos:line="24" pos:column="37"/></operator><name pos:line="24" pos:column="34">syntax<pos:position pos:line="24" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt>
  <comment type="block" pos:line="25" pos:column="3">/* Perhaps we should print the translate table?  */</comment>
}<pos:position pos:line="26" pos:column="2"/></block></unit>

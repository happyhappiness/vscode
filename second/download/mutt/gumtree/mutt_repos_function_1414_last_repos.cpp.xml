<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1414_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BODY<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">mutt_new_body<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">BODY<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">p<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><operator pos:line="3" pos:column="13">(<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">BODY<pos:position pos:line="3" pos:column="18"/></name> <operator pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></operator><operator pos:line="3" pos:column="20">)<pos:position pos:line="3" pos:column="21"/></operator> <call><name pos:line="3" pos:column="22">safe_calloc<pos:position pos:line="3" pos:column="33"/></name> <argument_list pos:line="3" pos:column="34">(<argument><expr><literal type="number" pos:line="3" pos:column="35">1<pos:position pos:line="3" pos:column="36"/></literal></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="38">sizeof <argument_list pos:line="3" pos:column="45">(<argument><expr><name pos:line="3" pos:column="46">BODY<pos:position pos:line="3" pos:column="50"/></name></expr></argument>)<pos:position pos:line="3" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="53"/></decl_stmt>
    
  <expr_stmt><expr><name><name pos:line="5" pos:column="3">p<pos:position pos:line="5" pos:column="4"/></name><operator pos:line="5" pos:column="4">-&gt;<pos:position pos:line="5" pos:column="9"/></operator><name pos:line="5" pos:column="6">disposition<pos:position pos:line="5" pos:column="17"/></name></name> <operator pos:line="5" pos:column="18">=<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="20">DISPATTACH<pos:position pos:line="5" pos:column="30"/></name></expr>;<pos:position pos:line="5" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="6" pos:column="3">p<pos:position pos:line="6" pos:column="4"/></name><operator pos:line="6" pos:column="4">-&gt;<pos:position pos:line="6" pos:column="9"/></operator><name pos:line="6" pos:column="6">use_disp<pos:position pos:line="6" pos:column="14"/></name></name> <operator pos:line="6" pos:column="15">=<pos:position pos:line="6" pos:column="16"/></operator> <literal type="number" pos:line="6" pos:column="17">1<pos:position pos:line="6" pos:column="18"/></literal></expr>;<pos:position pos:line="6" pos:column="19"/></expr_stmt>
  <return pos:line="7" pos:column="3">return <expr><operator pos:line="7" pos:column="10">(<pos:position pos:line="7" pos:column="11"/></operator><name pos:line="7" pos:column="11">p<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">)<pos:position pos:line="7" pos:column="13"/></operator></expr>;<pos:position pos:line="7" pos:column="14"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1679_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">binary_fingerprint_to_string<pos:position pos:line="1" pos:column="42"/></name> <parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">unsigned<pos:position pos:line="1" pos:column="52"/></name> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">buff<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">size_t<pos:position pos:line="1" pos:column="71"/></name></type> <name pos:line="1" pos:column="72">length<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">fingerprint<pos:position pos:line="4" pos:column="20"/></name></decl>, <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="23">pf<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">pf<pos:position pos:line="6" pos:column="5"/></name> <operator pos:line="6" pos:column="6">=<pos:position pos:line="6" pos:column="7"/></operator> <name pos:line="6" pos:column="8">fingerprint<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">=<pos:position pos:line="6" pos:column="21"/></operator> <operator pos:line="6" pos:column="22">(<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="23">char<pos:position pos:line="6" pos:column="27"/></name> <operator pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></operator><operator pos:line="6" pos:column="29">)<pos:position pos:line="6" pos:column="30"/></operator><call><name pos:line="6" pos:column="30">safe_malloc<pos:position pos:line="6" pos:column="41"/></name> <argument_list pos:line="6" pos:column="42">(<argument><expr><operator pos:line="6" pos:column="43">(<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="44">length<pos:position pos:line="6" pos:column="50"/></name> <operator pos:line="6" pos:column="51">*<pos:position pos:line="6" pos:column="52"/></operator> <literal type="number" pos:line="6" pos:column="53">2<pos:position pos:line="6" pos:column="54"/></literal><operator pos:line="6" pos:column="54">)<pos:position pos:line="6" pos:column="55"/></operator> <operator pos:line="6" pos:column="56">+<pos:position pos:line="6" pos:column="57"/></operator> <literal type="number" pos:line="6" pos:column="58">1<pos:position pos:line="6" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="61"/></expr_stmt>

  <for pos:line="8" pos:column="3">for <control pos:line="8" pos:column="7">(<init><expr><name pos:line="8" pos:column="8">i<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <literal type="number" pos:line="8" pos:column="12">0<pos:position pos:line="8" pos:column="13"/></literal></expr>;<pos:position pos:line="8" pos:column="14"/></init> <condition><expr><name pos:line="8" pos:column="15">i<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">&lt;<pos:position pos:line="8" pos:column="21"/></operator> <name pos:line="8" pos:column="19">length<pos:position pos:line="8" pos:column="25"/></name></expr>;<pos:position pos:line="8" pos:column="26"/></condition> <incr><expr><name pos:line="8" pos:column="27">i<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">++<pos:position pos:line="8" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="31"/></control>
  <block pos:line="9" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">sprintf<pos:position pos:line="10" pos:column="12"/></name> <argument_list pos:line="10" pos:column="13">(<argument><expr><name pos:line="10" pos:column="14">pf<pos:position pos:line="10" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="18">"%02X"<pos:position pos:line="10" pos:column="24"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="26">buff<pos:position pos:line="10" pos:column="30"/></name><index pos:line="10" pos:column="30">[<expr><name pos:line="10" pos:column="31">i<pos:position pos:line="10" pos:column="32"/></name></expr>]<pos:position pos:line="10" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">pf<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">+=<pos:position pos:line="11" pos:column="10"/></operator> <literal type="number" pos:line="11" pos:column="11">2<pos:position pos:line="11" pos:column="12"/></literal></expr>;<pos:position pos:line="11" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="12" pos:column="4"/></block></for>
  <expr_stmt><expr><operator pos:line="13" pos:column="3">*<pos:position pos:line="13" pos:column="4"/></operator><name pos:line="13" pos:column="4">pf<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <literal type="number" pos:line="13" pos:column="9">0<pos:position pos:line="13" pos:column="10"/></literal></expr>;<pos:position pos:line="13" pos:column="11"/></expr_stmt>

  <return pos:line="15" pos:column="3">return <expr><name pos:line="15" pos:column="10">fingerprint<pos:position pos:line="15" pos:column="21"/></name></expr>;<pos:position pos:line="15" pos:column="22"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

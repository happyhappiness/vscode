<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_211_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_group_add_adrlist<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">group_t<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">g<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">ADDRESS<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">a<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">ADDRESS<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier><modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type><name pos:line="3" pos:column="13">p<pos:position pos:line="3" pos:column="14"/></name></decl>, <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="17">q<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">!<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">g<pos:position pos:line="5" pos:column="9"/></name></expr>)<pos:position pos:line="5" pos:column="10"/></condition><then pos:line="5" pos:column="10">
    <block type="pseudo"><return pos:line="6" pos:column="5">return;<pos:position pos:line="6" pos:column="12"/></return></block></then></if>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">!<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">a<pos:position pos:line="7" pos:column="9"/></name></expr>)<pos:position pos:line="7" pos:column="10"/></condition><then pos:line="7" pos:column="10">
    <block type="pseudo"><return pos:line="8" pos:column="5">return;<pos:position pos:line="8" pos:column="12"/></return></block></then></if>

  <for pos:line="10" pos:column="3">for <control pos:line="10" pos:column="7">(<init><expr><name pos:line="10" pos:column="8">p<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <operator pos:line="10" pos:column="12">&amp;<pos:position pos:line="10" pos:column="17"/></operator><name><name pos:line="10" pos:column="13">g<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">-&gt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">as<pos:position pos:line="10" pos:column="18"/></name></name></expr>;<pos:position pos:line="10" pos:column="19"/></init> <condition><expr><operator pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="21">p<pos:position pos:line="10" pos:column="22"/></name></expr>;<pos:position pos:line="10" pos:column="23"/></condition> <incr><expr><name pos:line="10" pos:column="24">p<pos:position pos:line="10" pos:column="25"/></name> <operator pos:line="10" pos:column="26">=<pos:position pos:line="10" pos:column="27"/></operator> <operator pos:line="10" pos:column="28">&amp;<pos:position pos:line="10" pos:column="33"/></operator><operator pos:line="10" pos:column="29">(<pos:position pos:line="10" pos:column="30"/></operator><name><operator pos:line="10" pos:column="30">(<pos:position pos:line="10" pos:column="31"/></operator><operator pos:line="10" pos:column="31">*<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="32">p<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">)<pos:position pos:line="10" pos:column="34"/></operator><operator pos:line="10" pos:column="34">-&gt;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="36">next<pos:position pos:line="10" pos:column="40"/></name></name><operator pos:line="10" pos:column="40">)<pos:position pos:line="10" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="42"/></control>
    <block type="pseudo"><empty_stmt pos:line="11" pos:column="5">;<pos:position pos:line="11" pos:column="6"/></empty_stmt></block></for>

  <expr_stmt><expr><name pos:line="13" pos:column="3">q<pos:position pos:line="13" pos:column="4"/></name> <operator pos:line="13" pos:column="5">=<pos:position pos:line="13" pos:column="6"/></operator> <call><name pos:line="13" pos:column="7">rfc822_cpy_adr<pos:position pos:line="13" pos:column="21"/></name> <argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">a<pos:position pos:line="13" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="26">0<pos:position pos:line="13" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name pos:line="14" pos:column="3">q<pos:position pos:line="14" pos:column="4"/></name> <operator pos:line="14" pos:column="5">=<pos:position pos:line="14" pos:column="6"/></operator> <call><name pos:line="14" pos:column="7">mutt_remove_xrefs<pos:position pos:line="14" pos:column="24"/></name> <argument_list pos:line="14" pos:column="25">(<argument><expr><name><name pos:line="14" pos:column="26">g<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">-&gt;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="29">as<pos:position pos:line="14" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="33">q<pos:position pos:line="14" pos:column="34"/></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="15" pos:column="3">*<pos:position pos:line="15" pos:column="4"/></operator><name pos:line="15" pos:column="4">p<pos:position pos:line="15" pos:column="5"/></name> <operator pos:line="15" pos:column="6">=<pos:position pos:line="15" pos:column="7"/></operator> <name pos:line="15" pos:column="8">q<pos:position pos:line="15" pos:column="9"/></name></expr>;<pos:position pos:line="15" pos:column="10"/></expr_stmt>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

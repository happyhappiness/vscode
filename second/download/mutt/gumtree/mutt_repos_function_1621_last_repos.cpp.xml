<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1621_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">lock_realpath<pos:position pos:line="2" pos:column="14"/></name> <parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">CONTEXT<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">ctx<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="30">int<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">excl<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="39"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><operator pos:line="4" pos:column="7">!<pos:position pos:line="4" pos:column="8"/></operator><name pos:line="4" pos:column="8">ctx<pos:position pos:line="4" pos:column="11"/></name></expr>)<pos:position pos:line="4" pos:column="12"/></condition><then pos:line="4" pos:column="12">
    <block type="pseudo"><return pos:line="5" pos:column="5">return <expr><literal type="number" pos:line="5" pos:column="12">0<pos:position pos:line="5" pos:column="13"/></literal></expr>;<pos:position pos:line="5" pos:column="14"/></return></block></then></if>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">COMPRESS_INFO<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">ci<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name><name pos:line="7" pos:column="23">ctx<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">compress_info<pos:position pos:line="7" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="42"/></decl_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">ci<pos:position pos:line="8" pos:column="10"/></name></expr>)<pos:position pos:line="8" pos:column="11"/></condition><then pos:line="8" pos:column="11">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></return></block></then></if>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name><name pos:line="11" pos:column="7">ci<pos:position pos:line="11" pos:column="9"/></name><operator pos:line="11" pos:column="9">-&gt;<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="11">locked<pos:position pos:line="11" pos:column="17"/></name></name></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><literal type="number" pos:line="12" pos:column="12">1<pos:position pos:line="12" pos:column="13"/></literal></expr>;<pos:position pos:line="12" pos:column="14"/></return></block></then></if>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">excl<pos:position pos:line="14" pos:column="11"/></name></expr>)<pos:position pos:line="14" pos:column="12"/></condition><then pos:line="14" pos:column="12">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="15" pos:column="5">ci<pos:position pos:line="15" pos:column="7"/></name><operator pos:line="15" pos:column="7">-&gt;<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="9">lockfp<pos:position pos:line="15" pos:column="15"/></name></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <call><name pos:line="15" pos:column="18">fopen<pos:position pos:line="15" pos:column="23"/></name> <argument_list pos:line="15" pos:column="24">(<argument><expr><name><name pos:line="15" pos:column="25">ctx<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">-&gt;<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="30">realpath<pos:position pos:line="15" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="40">"a"<pos:position pos:line="15" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt></block></then>
  <else pos:line="16" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="5">ci<pos:position pos:line="17" pos:column="7"/></name><operator pos:line="17" pos:column="7">-&gt;<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="9">lockfp<pos:position pos:line="17" pos:column="15"/></name></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <call><name pos:line="17" pos:column="18">fopen<pos:position pos:line="17" pos:column="23"/></name> <argument_list pos:line="17" pos:column="24">(<argument><expr><name><name pos:line="17" pos:column="25">ctx<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">-&gt;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="30">realpath<pos:position pos:line="17" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="40">"r"<pos:position pos:line="17" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt></block></else></if>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">!<pos:position pos:line="18" pos:column="8"/></operator><name><name pos:line="18" pos:column="8">ci<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">lockfp<pos:position pos:line="18" pos:column="18"/></name></name></expr>)<pos:position pos:line="18" pos:column="19"/></condition><then pos:line="18" pos:column="19">
  <block pos:line="19" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">mutt_perror<pos:position pos:line="20" pos:column="16"/></name> <argument_list pos:line="20" pos:column="17">(<argument><expr><name><name pos:line="20" pos:column="18">ctx<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">realpath<pos:position pos:line="20" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><literal type="number" pos:line="21" pos:column="12">0<pos:position pos:line="21" pos:column="13"/></literal></expr>;<pos:position pos:line="21" pos:column="14"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="24" pos:column="3">int<pos:position pos:line="24" pos:column="6"/></name></type> <name pos:line="24" pos:column="7">r<pos:position pos:line="24" pos:column="8"/></name> <init pos:line="24" pos:column="9">= <expr><call><name pos:line="24" pos:column="11">mx_lock_file<pos:position pos:line="24" pos:column="23"/></name> <argument_list pos:line="24" pos:column="24">(<argument><expr><name><name pos:line="24" pos:column="25">ctx<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">-&gt;<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="30">realpath<pos:position pos:line="24" pos:column="38"/></name></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="40">fileno<pos:position pos:line="24" pos:column="46"/></name> <argument_list pos:line="24" pos:column="47">(<argument><expr><name><name pos:line="24" pos:column="48">ci<pos:position pos:line="24" pos:column="50"/></name><operator pos:line="24" pos:column="50">-&gt;<pos:position pos:line="24" pos:column="55"/></operator><name pos:line="24" pos:column="52">lockfp<pos:position pos:line="24" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="24" pos:column="61">excl<pos:position pos:line="24" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="67">1<pos:position pos:line="24" pos:column="68"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="70">1<pos:position pos:line="24" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="73"/></decl_stmt>

  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name pos:line="26" pos:column="7">r<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">==<pos:position pos:line="26" pos:column="11"/></operator> <literal type="number" pos:line="26" pos:column="12">0<pos:position pos:line="26" pos:column="13"/></literal></expr>)<pos:position pos:line="26" pos:column="14"/></condition><then pos:line="26" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="5">ci<pos:position pos:line="27" pos:column="7"/></name><operator pos:line="27" pos:column="7">-&gt;<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="9">locked<pos:position pos:line="27" pos:column="15"/></name></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <literal type="number" pos:line="27" pos:column="18">1<pos:position pos:line="27" pos:column="19"/></literal></expr>;<pos:position pos:line="27" pos:column="20"/></expr_stmt></block></then>
  <elseif pos:line="28" pos:column="3">else <if pos:line="28" pos:column="8">if <condition pos:line="28" pos:column="11">(<expr><name pos:line="28" pos:column="12">excl<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">==<pos:position pos:line="28" pos:column="19"/></operator> <literal type="number" pos:line="28" pos:column="20">0<pos:position pos:line="28" pos:column="21"/></literal></expr>)<pos:position pos:line="28" pos:column="22"/></condition><then pos:line="28" pos:column="22">
  <block pos:line="29" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">safe_fclose<pos:position pos:line="30" pos:column="16"/></name> <argument_list pos:line="30" pos:column="17">(<argument><expr><operator pos:line="30" pos:column="18">&amp;<pos:position pos:line="30" pos:column="23"/></operator><name><name pos:line="30" pos:column="19">ci<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">-&gt;<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="23">lockfp<pos:position pos:line="30" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">ctx<pos:position pos:line="31" pos:column="8"/></name><operator pos:line="31" pos:column="8">-&gt;<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="10">readonly<pos:position pos:line="31" pos:column="18"/></name></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <literal type="number" pos:line="31" pos:column="21">1<pos:position pos:line="31" pos:column="22"/></literal></expr>;<pos:position pos:line="31" pos:column="23"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><literal type="number" pos:line="32" pos:column="12">1<pos:position pos:line="32" pos:column="13"/></literal></expr>;<pos:position pos:line="32" pos:column="14"/></return>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if></elseif></if>

  <return pos:line="35" pos:column="3">return <expr><operator pos:line="35" pos:column="10">(<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">r<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">==<pos:position pos:line="35" pos:column="15"/></operator> <literal type="number" pos:line="35" pos:column="16">0<pos:position pos:line="35" pos:column="17"/></literal><operator pos:line="35" pos:column="17">)<pos:position pos:line="35" pos:column="18"/></operator></expr>;<pos:position pos:line="35" pos:column="19"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_643_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_alias_complete<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">s<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">size_t<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">buflen<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">ALIAS<pos:position pos:line="3" pos:column="8"/></name> <modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">a<pos:position pos:line="3" pos:column="11"/></name> <init pos:line="3" pos:column="12">= <expr><name pos:line="3" pos:column="14">Aliases<pos:position pos:line="3" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">ALIAS<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">a_list<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name pos:line="4" pos:column="19">NULL<pos:position pos:line="4" pos:column="23"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="26">a_cur<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><name pos:line="4" pos:column="34">NULL<pos:position pos:line="4" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">bestname<pos:position pos:line="5" pos:column="16"/></name><index pos:line="5" pos:column="16">[<expr><name pos:line="5" pos:column="17">HUGE_STRING<pos:position pos:line="5" pos:column="28"/></name></expr>]<pos:position pos:line="5" pos:column="29"/></index></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">i<pos:position pos:line="6" pos:column="8"/></name></decl>;<pos:position pos:line="6" pos:column="9"/></decl_stmt>

<cpp:ifndef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifndef<pos:position pos:line="8" pos:column="8"/></cpp:directive> <name pos:line="8" pos:column="9">min<pos:position pos:line="8" pos:column="12"/></name></cpp:ifndef>
<cpp:define pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">define<pos:position pos:line="9" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="9" pos:column="9">min<pos:position pos:line="9" pos:column="12"/></name><parameter_list pos:line="9" pos:column="12">(<parameter><type><name pos:line="9" pos:column="13">a<pos:position pos:line="9" pos:column="14"/></name></type></parameter>,<parameter><type><name pos:line="9" pos:column="15">b<pos:position pos:line="9" pos:column="16"/></name></type></parameter>)<pos:position pos:line="9" pos:column="17"/></parameter_list></cpp:macro>        <cpp:value pos:line="9" pos:column="25">((a&lt;b)?a:b)<pos:position pos:line="9" pos:column="36"/></cpp:value></cpp:define>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name><name pos:line="12" pos:column="7">s<pos:position pos:line="12" pos:column="8"/></name><index pos:line="12" pos:column="8">[<expr><literal type="number" pos:line="12" pos:column="9">0<pos:position pos:line="12" pos:column="10"/></literal></expr>]<pos:position pos:line="12" pos:column="11"/></index></name> <operator pos:line="12" pos:column="12">!=<pos:position pos:line="12" pos:column="14"/></operator> <literal type="number" pos:line="12" pos:column="15">0<pos:position pos:line="12" pos:column="16"/></literal></expr>)<pos:position pos:line="12" pos:column="17"/></condition><then pos:line="12" pos:column="17"> <comment type="block" pos:line="12" pos:column="18">/* avoid empty string as strstr argument */</comment>
  <block pos:line="13" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">memset<pos:position pos:line="14" pos:column="11"/></name> <argument_list pos:line="14" pos:column="12">(<argument><expr><name pos:line="14" pos:column="13">bestname<pos:position pos:line="14" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="23">0<pos:position pos:line="14" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="26">sizeof <argument_list pos:line="14" pos:column="33">(<argument><expr><name pos:line="14" pos:column="34">bestname<pos:position pos:line="14" pos:column="42"/></name></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></expr_stmt>

    <while pos:line="16" pos:column="5">while <condition pos:line="16" pos:column="11">(<expr><name pos:line="16" pos:column="12">a<pos:position pos:line="16" pos:column="13"/></name></expr>)<pos:position pos:line="16" pos:column="14"/></condition>
    <block pos:line="17" pos:column="5">{
      <if pos:line="18" pos:column="7">if <condition pos:line="18" pos:column="10">(<expr><name><name pos:line="18" pos:column="11">a<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">name<pos:position pos:line="18" pos:column="18"/></name></name> <operator pos:line="18" pos:column="19">&amp;&amp;<pos:position pos:line="18" pos:column="29"/></operator> <call><name pos:line="18" pos:column="22">strstr<pos:position pos:line="18" pos:column="28"/></name> <argument_list pos:line="18" pos:column="29">(<argument><expr><name><name pos:line="18" pos:column="30">a<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">-&gt;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="33">name<pos:position pos:line="18" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="39">s<pos:position pos:line="18" pos:column="40"/></name></expr></argument>)<pos:position pos:line="18" pos:column="41"/></argument_list></call> <operator pos:line="18" pos:column="42">==<pos:position pos:line="18" pos:column="44"/></operator> <name><name pos:line="18" pos:column="45">a<pos:position pos:line="18" pos:column="46"/></name><operator pos:line="18" pos:column="46">-&gt;<pos:position pos:line="18" pos:column="51"/></operator><name pos:line="18" pos:column="48">name<pos:position pos:line="18" pos:column="52"/></name></name></expr>)<pos:position pos:line="18" pos:column="53"/></condition><then pos:line="18" pos:column="53">
      <block pos:line="19" pos:column="7">{
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><name><name pos:line="20" pos:column="14">bestname<pos:position pos:line="20" pos:column="22"/></name><index pos:line="20" pos:column="22">[<expr><literal type="number" pos:line="20" pos:column="23">0<pos:position pos:line="20" pos:column="24"/></literal></expr>]<pos:position pos:line="20" pos:column="25"/></index></name></expr>)<pos:position pos:line="20" pos:column="26"/></condition><then pos:line="20" pos:column="26"> <comment type="block" pos:line="20" pos:column="27">/* init */</comment>
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="11">strfcpy<pos:position pos:line="21" pos:column="18"/></name> <argument_list pos:line="21" pos:column="19">(<argument><expr><name pos:line="21" pos:column="20">bestname<pos:position pos:line="21" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="30">a<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">-&gt;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="33">name<pos:position pos:line="21" pos:column="37"/></name></name></expr></argument>,
		   <argument><expr><call><name pos:line="22" pos:column="20">min<pos:position pos:line="22" pos:column="23"/></name> <argument_list pos:line="22" pos:column="24">(<argument><expr><call><name pos:line="22" pos:column="25">mutt_strlen<pos:position pos:line="22" pos:column="36"/></name> <argument_list pos:line="22" pos:column="37">(<argument><expr><name><name pos:line="22" pos:column="38">a<pos:position pos:line="22" pos:column="39"/></name><operator pos:line="22" pos:column="39">-&gt;<pos:position pos:line="22" pos:column="44"/></operator><name pos:line="22" pos:column="41">name<pos:position pos:line="22" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call> <operator pos:line="22" pos:column="47">+<pos:position pos:line="22" pos:column="48"/></operator> <literal type="number" pos:line="22" pos:column="49">1<pos:position pos:line="22" pos:column="50"/></literal></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="52">sizeof <argument_list pos:line="22" pos:column="59">(<argument><expr><name pos:line="22" pos:column="60">bestname<pos:position pos:line="22" pos:column="68"/></name></expr></argument>)<pos:position pos:line="22" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="72"/></expr_stmt></block></then>
	<else pos:line="23" pos:column="9">else
	<block pos:line="24" pos:column="9">{
	  <for pos:line="25" pos:column="11">for <control pos:line="25" pos:column="15">(<init><expr><name pos:line="25" pos:column="16">i<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">=<pos:position pos:line="25" pos:column="19"/></operator> <literal type="number" pos:line="25" pos:column="20">0<pos:position pos:line="25" pos:column="21"/></literal></expr> ;<pos:position pos:line="25" pos:column="23"/></init> <condition><expr><name><name pos:line="25" pos:column="24">a<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">-&gt;<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="27">name<pos:position pos:line="25" pos:column="31"/></name><index pos:line="25" pos:column="31">[<expr><name pos:line="25" pos:column="32">i<pos:position pos:line="25" pos:column="33"/></name></expr>]<pos:position pos:line="25" pos:column="34"/></index></name> <operator pos:line="25" pos:column="35">&amp;&amp;<pos:position pos:line="25" pos:column="45"/></operator> <name><name pos:line="25" pos:column="38">a<pos:position pos:line="25" pos:column="39"/></name><operator pos:line="25" pos:column="39">-&gt;<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="41">name<pos:position pos:line="25" pos:column="45"/></name><index pos:line="25" pos:column="45">[<expr><name pos:line="25" pos:column="46">i<pos:position pos:line="25" pos:column="47"/></name></expr>]<pos:position pos:line="25" pos:column="48"/></index></name> <operator pos:line="25" pos:column="49">==<pos:position pos:line="25" pos:column="51"/></operator> <name><name pos:line="25" pos:column="52">bestname<pos:position pos:line="25" pos:column="60"/></name><index pos:line="25" pos:column="60">[<expr><name pos:line="25" pos:column="61">i<pos:position pos:line="25" pos:column="62"/></name></expr>]<pos:position pos:line="25" pos:column="63"/></index></name></expr> ;<pos:position pos:line="25" pos:column="65"/></condition> <incr><expr><name pos:line="25" pos:column="66">i<pos:position pos:line="25" pos:column="67"/></name><operator pos:line="25" pos:column="67">++<pos:position pos:line="25" pos:column="69"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="70"/></control>
	    <block type="pseudo"><empty_stmt pos:line="26" pos:column="13">;<pos:position pos:line="26" pos:column="14"/></empty_stmt></block></for>
	  <expr_stmt><expr><name><name pos:line="27" pos:column="11">bestname<pos:position pos:line="27" pos:column="19"/></name><index pos:line="27" pos:column="19">[<expr><name pos:line="27" pos:column="20">i<pos:position pos:line="27" pos:column="21"/></name></expr>]<pos:position pos:line="27" pos:column="22"/></index></name> <operator pos:line="27" pos:column="23">=<pos:position pos:line="27" pos:column="24"/></operator> <literal type="number" pos:line="27" pos:column="25">0<pos:position pos:line="27" pos:column="26"/></literal></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></else></if>
      }<pos:position pos:line="29" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="30" pos:column="7">a<pos:position pos:line="30" pos:column="8"/></name> <operator pos:line="30" pos:column="9">=<pos:position pos:line="30" pos:column="10"/></operator> <name><name pos:line="30" pos:column="11">a<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">-&gt;<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="14">next<pos:position pos:line="30" pos:column="18"/></name></name></expr>;<pos:position pos:line="30" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></while>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name><name pos:line="33" pos:column="9">bestname<pos:position pos:line="33" pos:column="17"/></name><index pos:line="33" pos:column="17">[<expr><literal type="number" pos:line="33" pos:column="18">0<pos:position pos:line="33" pos:column="19"/></literal></expr>]<pos:position pos:line="33" pos:column="20"/></index></name> <operator pos:line="33" pos:column="21">!=<pos:position pos:line="33" pos:column="23"/></operator> <literal type="number" pos:line="33" pos:column="24">0<pos:position pos:line="33" pos:column="25"/></literal></expr>)<pos:position pos:line="33" pos:column="26"/></condition><then pos:line="33" pos:column="26">
    <block pos:line="34" pos:column="5">{
      <if pos:line="35" pos:column="7">if <condition pos:line="35" pos:column="10">(<expr><call><name pos:line="35" pos:column="11">mutt_strcmp<pos:position pos:line="35" pos:column="22"/></name> <argument_list pos:line="35" pos:column="23">(<argument><expr><name pos:line="35" pos:column="24">bestname<pos:position pos:line="35" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="34">s<pos:position pos:line="35" pos:column="35"/></name></expr></argument>)<pos:position pos:line="35" pos:column="36"/></argument_list></call> <operator pos:line="35" pos:column="37">!=<pos:position pos:line="35" pos:column="39"/></operator> <literal type="number" pos:line="35" pos:column="40">0<pos:position pos:line="35" pos:column="41"/></literal></expr>)<pos:position pos:line="35" pos:column="42"/></condition><then pos:line="35" pos:column="42">
      <block pos:line="36" pos:column="7">{
	<comment type="block" pos:line="37" pos:column="9">/* we are adding something to the completion */</comment>
	<expr_stmt><expr><call><name pos:line="38" pos:column="9">strfcpy<pos:position pos:line="38" pos:column="16"/></name> <argument_list pos:line="38" pos:column="17">(<argument><expr><name pos:line="38" pos:column="18">s<pos:position pos:line="38" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="21">bestname<pos:position pos:line="38" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="31">mutt_strlen<pos:position pos:line="38" pos:column="42"/></name> <argument_list pos:line="38" pos:column="43">(<argument><expr><name pos:line="38" pos:column="44">bestname<pos:position pos:line="38" pos:column="52"/></name></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call> <operator pos:line="38" pos:column="54">+<pos:position pos:line="38" pos:column="55"/></operator> <literal type="number" pos:line="38" pos:column="56">1<pos:position pos:line="38" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="59"/></expr_stmt>
	<return pos:line="39" pos:column="9">return <expr><literal type="number" pos:line="39" pos:column="16">1<pos:position pos:line="39" pos:column="17"/></literal></expr>;<pos:position pos:line="39" pos:column="18"/></return>
      }<pos:position pos:line="40" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="42" pos:column="7">/* build alias list and show it */</comment>

      <expr_stmt><expr><name pos:line="44" pos:column="7">a<pos:position pos:line="44" pos:column="8"/></name> <operator pos:line="44" pos:column="9">=<pos:position pos:line="44" pos:column="10"/></operator> <name pos:line="44" pos:column="11">Aliases<pos:position pos:line="44" pos:column="18"/></name></expr>;<pos:position pos:line="44" pos:column="19"/></expr_stmt>
      <while pos:line="45" pos:column="7">while <condition pos:line="45" pos:column="13">(<expr><name pos:line="45" pos:column="14">a<pos:position pos:line="45" pos:column="15"/></name></expr>)<pos:position pos:line="45" pos:column="16"/></condition>
      <block pos:line="46" pos:column="7">{
	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name><name pos:line="47" pos:column="13">a<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">-&gt;<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="16">name<pos:position pos:line="47" pos:column="20"/></name></name> <operator pos:line="47" pos:column="21">&amp;&amp;<pos:position pos:line="47" pos:column="31"/></operator> <operator pos:line="47" pos:column="24">(<pos:position pos:line="47" pos:column="25"/></operator><call><name pos:line="47" pos:column="25">strstr<pos:position pos:line="47" pos:column="31"/></name> <argument_list pos:line="47" pos:column="32">(<argument><expr><name><name pos:line="47" pos:column="33">a<pos:position pos:line="47" pos:column="34"/></name><operator pos:line="47" pos:column="34">-&gt;<pos:position pos:line="47" pos:column="39"/></operator><name pos:line="47" pos:column="36">name<pos:position pos:line="47" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="42">s<pos:position pos:line="47" pos:column="43"/></name></expr></argument>)<pos:position pos:line="47" pos:column="44"/></argument_list></call> <operator pos:line="47" pos:column="45">==<pos:position pos:line="47" pos:column="47"/></operator> <name><name pos:line="47" pos:column="48">a<pos:position pos:line="47" pos:column="49"/></name><operator pos:line="47" pos:column="49">-&gt;<pos:position pos:line="47" pos:column="54"/></operator><name pos:line="47" pos:column="51">name<pos:position pos:line="47" pos:column="55"/></name></name><operator pos:line="47" pos:column="55">)<pos:position pos:line="47" pos:column="56"/></operator></expr>)<pos:position pos:line="47" pos:column="57"/></condition><then pos:line="47" pos:column="57">
	<block pos:line="48" pos:column="9">{
	  <if pos:line="49" pos:column="11">if <condition pos:line="49" pos:column="14">(<expr><operator pos:line="49" pos:column="15">!<pos:position pos:line="49" pos:column="16"/></operator><name pos:line="49" pos:column="16">a_list<pos:position pos:line="49" pos:column="22"/></name></expr>)<pos:position pos:line="49" pos:column="23"/></condition><then pos:line="49" pos:column="23">  <comment type="block" pos:line="49" pos:column="25">/* init */</comment>
	    <block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="13">a_cur<pos:position pos:line="50" pos:column="18"/></name> <operator pos:line="50" pos:column="19">=<pos:position pos:line="50" pos:column="20"/></operator> <name pos:line="50" pos:column="21">a_list<pos:position pos:line="50" pos:column="27"/></name> <operator pos:line="50" pos:column="28">=<pos:position pos:line="50" pos:column="29"/></operator> <operator pos:line="50" pos:column="30">(<pos:position pos:line="50" pos:column="31"/></operator><name pos:line="50" pos:column="31">ALIAS<pos:position pos:line="50" pos:column="36"/></name> <operator pos:line="50" pos:column="37">*<pos:position pos:line="50" pos:column="38"/></operator><operator pos:line="50" pos:column="38">)<pos:position pos:line="50" pos:column="39"/></operator> <call><name pos:line="50" pos:column="40">safe_malloc<pos:position pos:line="50" pos:column="51"/></name> <argument_list pos:line="50" pos:column="52">(<argument><expr><sizeof pos:line="50" pos:column="53">sizeof <argument_list pos:line="50" pos:column="60">(<argument><expr><name pos:line="50" pos:column="61">ALIAS<pos:position pos:line="50" pos:column="66"/></name></expr></argument>)<pos:position pos:line="50" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="69"/></expr_stmt></block></then>
	  <else pos:line="51" pos:column="11">else
	  <block pos:line="52" pos:column="11">{
	    <expr_stmt><expr><name><name pos:line="53" pos:column="13">a_cur<pos:position pos:line="53" pos:column="18"/></name><operator pos:line="53" pos:column="18">-&gt;<pos:position pos:line="53" pos:column="23"/></operator><name pos:line="53" pos:column="20">next<pos:position pos:line="53" pos:column="24"/></name></name> <operator pos:line="53" pos:column="25">=<pos:position pos:line="53" pos:column="26"/></operator> <operator pos:line="53" pos:column="27">(<pos:position pos:line="53" pos:column="28"/></operator><name pos:line="53" pos:column="28">ALIAS<pos:position pos:line="53" pos:column="33"/></name> <operator pos:line="53" pos:column="34">*<pos:position pos:line="53" pos:column="35"/></operator><operator pos:line="53" pos:column="35">)<pos:position pos:line="53" pos:column="36"/></operator> <call><name pos:line="53" pos:column="37">safe_malloc<pos:position pos:line="53" pos:column="48"/></name> <argument_list pos:line="53" pos:column="49">(<argument><expr><sizeof pos:line="53" pos:column="50">sizeof <argument_list pos:line="53" pos:column="57">(<argument><expr><name pos:line="53" pos:column="58">ALIAS<pos:position pos:line="53" pos:column="63"/></name></expr></argument>)<pos:position pos:line="53" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="53" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="66"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="54" pos:column="13">a_cur<pos:position pos:line="54" pos:column="18"/></name> <operator pos:line="54" pos:column="19">=<pos:position pos:line="54" pos:column="20"/></operator> <name><name pos:line="54" pos:column="21">a_cur<pos:position pos:line="54" pos:column="26"/></name><operator pos:line="54" pos:column="26">-&gt;<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="28">next<pos:position pos:line="54" pos:column="32"/></name></name></expr>;<pos:position pos:line="54" pos:column="33"/></expr_stmt>
	  }<pos:position pos:line="55" pos:column="12"/></block></else></if>
	  <expr_stmt><expr><call><name pos:line="56" pos:column="11">memcpy<pos:position pos:line="56" pos:column="17"/></name> <argument_list pos:line="56" pos:column="18">(<argument><expr><name pos:line="56" pos:column="19">a_cur<pos:position pos:line="56" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="26">a<pos:position pos:line="56" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="56" pos:column="29">sizeof <argument_list pos:line="56" pos:column="36">(<argument><expr><name pos:line="56" pos:column="37">ALIAS<pos:position pos:line="56" pos:column="42"/></name></expr></argument>)<pos:position pos:line="56" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="56" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="45"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="57" pos:column="11">a_cur<pos:position pos:line="57" pos:column="16"/></name><operator pos:line="57" pos:column="16">-&gt;<pos:position pos:line="57" pos:column="21"/></operator><name pos:line="57" pos:column="18">next<pos:position pos:line="57" pos:column="22"/></name></name> <operator pos:line="57" pos:column="23">=<pos:position pos:line="57" pos:column="24"/></operator> <name pos:line="57" pos:column="25">NULL<pos:position pos:line="57" pos:column="29"/></name></expr>;<pos:position pos:line="57" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="58" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="59" pos:column="9">a<pos:position pos:line="59" pos:column="10"/></name> <operator pos:line="59" pos:column="11">=<pos:position pos:line="59" pos:column="12"/></operator> <name><name pos:line="59" pos:column="13">a<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">-&gt;<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="16">next<pos:position pos:line="59" pos:column="20"/></name></name></expr>;<pos:position pos:line="59" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="60" pos:column="8"/></block></while>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="64" pos:column="3">bestname<pos:position pos:line="64" pos:column="11"/></name><index pos:line="64" pos:column="11">[<expr><literal type="number" pos:line="64" pos:column="12">0<pos:position pos:line="64" pos:column="13"/></literal></expr>]<pos:position pos:line="64" pos:column="14"/></index></name> <operator pos:line="64" pos:column="15">=<pos:position pos:line="64" pos:column="16"/></operator> <literal type="number" pos:line="64" pos:column="17">0<pos:position pos:line="64" pos:column="18"/></literal></expr>;<pos:position pos:line="64" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="65" pos:column="3">mutt_alias_menu<pos:position pos:line="65" pos:column="18"/></name> <argument_list pos:line="65" pos:column="19">(<argument><expr><name pos:line="65" pos:column="20">bestname<pos:position pos:line="65" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="65" pos:column="30">sizeof<argument_list pos:line="65" pos:column="36">(<argument><expr><name pos:line="65" pos:column="37">bestname<pos:position pos:line="65" pos:column="45"/></name></expr></argument>)<pos:position pos:line="65" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="65" pos:column="48">a_list<pos:position pos:line="65" pos:column="54"/></name></expr> ?<pos:position pos:line="65" pos:column="56"/></condition><then pos:line="65" pos:column="56"> <expr><name pos:line="65" pos:column="57">a_list<pos:position pos:line="65" pos:column="63"/></name></expr> <pos:position pos:line="65" pos:column="64"/></then><else pos:line="65" pos:column="64">: <expr><name pos:line="65" pos:column="66">Aliases<pos:position pos:line="65" pos:column="73"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="65" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="75"/></expr_stmt>
  <if pos:line="66" pos:column="3">if <condition pos:line="66" pos:column="6">(<expr><name><name pos:line="66" pos:column="7">bestname<pos:position pos:line="66" pos:column="15"/></name><index pos:line="66" pos:column="15">[<expr><literal type="number" pos:line="66" pos:column="16">0<pos:position pos:line="66" pos:column="17"/></literal></expr>]<pos:position pos:line="66" pos:column="18"/></index></name> <operator pos:line="66" pos:column="19">!=<pos:position pos:line="66" pos:column="21"/></operator> <literal type="number" pos:line="66" pos:column="22">0<pos:position pos:line="66" pos:column="23"/></literal></expr>)<pos:position pos:line="66" pos:column="24"/></condition><then pos:line="66" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="5">strfcpy<pos:position pos:line="67" pos:column="12"/></name> <argument_list pos:line="67" pos:column="13">(<argument><expr><name pos:line="67" pos:column="14">s<pos:position pos:line="67" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="17">bestname<pos:position pos:line="67" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="27">buflen<pos:position pos:line="67" pos:column="33"/></name></expr></argument>)<pos:position pos:line="67" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="35"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="69" pos:column="3">/* free the alias list */</comment>
  <while pos:line="70" pos:column="3">while <condition pos:line="70" pos:column="9">(<expr><name pos:line="70" pos:column="10">a_list<pos:position pos:line="70" pos:column="16"/></name></expr>)<pos:position pos:line="70" pos:column="17"/></condition>
  <block pos:line="71" pos:column="3">{
    <expr_stmt><expr><name pos:line="72" pos:column="5">a_cur<pos:position pos:line="72" pos:column="10"/></name> <operator pos:line="72" pos:column="11">=<pos:position pos:line="72" pos:column="12"/></operator> <name pos:line="72" pos:column="13">a_list<pos:position pos:line="72" pos:column="19"/></name></expr>;<pos:position pos:line="72" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="73" pos:column="5">a_list<pos:position pos:line="73" pos:column="11"/></name> <operator pos:line="73" pos:column="12">=<pos:position pos:line="73" pos:column="13"/></operator> <name><name pos:line="73" pos:column="14">a_list<pos:position pos:line="73" pos:column="20"/></name><operator pos:line="73" pos:column="20">-&gt;<pos:position pos:line="73" pos:column="25"/></operator><name pos:line="73" pos:column="22">next<pos:position pos:line="73" pos:column="26"/></name></name></expr>;<pos:position pos:line="73" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">FREE<pos:position pos:line="74" pos:column="9"/></name> <argument_list pos:line="74" pos:column="10">(<argument><expr><operator pos:line="74" pos:column="11">&amp;<pos:position pos:line="74" pos:column="16"/></operator><name pos:line="74" pos:column="12">a_cur<pos:position pos:line="74" pos:column="17"/></name></expr></argument>)<pos:position pos:line="74" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="75" pos:column="4"/></block></while>

  <comment type="block" pos:line="77" pos:column="3">/* remove any aliases marked for deletion */</comment>
  <expr_stmt><expr><name pos:line="78" pos:column="3">a_list<pos:position pos:line="78" pos:column="9"/></name> <operator pos:line="78" pos:column="10">=<pos:position pos:line="78" pos:column="11"/></operator> <name pos:line="78" pos:column="12">NULL<pos:position pos:line="78" pos:column="16"/></name></expr>;<pos:position pos:line="78" pos:column="17"/></expr_stmt>
  <for pos:line="79" pos:column="3">for <control pos:line="79" pos:column="7">(<init><expr><name pos:line="79" pos:column="8">a_cur<pos:position pos:line="79" pos:column="13"/></name> <operator pos:line="79" pos:column="14">=<pos:position pos:line="79" pos:column="15"/></operator> <name pos:line="79" pos:column="16">Aliases<pos:position pos:line="79" pos:column="23"/></name></expr>;<pos:position pos:line="79" pos:column="24"/></init> <condition><expr><name pos:line="79" pos:column="25">a_cur<pos:position pos:line="79" pos:column="30"/></name></expr>;<pos:position pos:line="79" pos:column="31"/></condition><incr/>)<pos:position pos:line="79" pos:column="32"/></control>
  <block pos:line="80" pos:column="3">{
    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><name><name pos:line="81" pos:column="9">a_cur<pos:position pos:line="81" pos:column="14"/></name><operator pos:line="81" pos:column="14">-&gt;<pos:position pos:line="81" pos:column="19"/></operator><name pos:line="81" pos:column="16">del<pos:position pos:line="81" pos:column="19"/></name></name></expr>)<pos:position pos:line="81" pos:column="20"/></condition><then pos:line="81" pos:column="20">
    <block pos:line="82" pos:column="5">{
      <if pos:line="83" pos:column="7">if <condition pos:line="83" pos:column="10">(<expr><name pos:line="83" pos:column="11">a_list<pos:position pos:line="83" pos:column="17"/></name></expr>)<pos:position pos:line="83" pos:column="18"/></condition><then pos:line="83" pos:column="18">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="84" pos:column="9">a_list<pos:position pos:line="84" pos:column="15"/></name><operator pos:line="84" pos:column="15">-&gt;<pos:position pos:line="84" pos:column="20"/></operator><name pos:line="84" pos:column="17">next<pos:position pos:line="84" pos:column="21"/></name></name> <operator pos:line="84" pos:column="22">=<pos:position pos:line="84" pos:column="23"/></operator> <name><name pos:line="84" pos:column="24">a_cur<pos:position pos:line="84" pos:column="29"/></name><operator pos:line="84" pos:column="29">-&gt;<pos:position pos:line="84" pos:column="34"/></operator><name pos:line="84" pos:column="31">next<pos:position pos:line="84" pos:column="35"/></name></name></expr>;<pos:position pos:line="84" pos:column="36"/></expr_stmt></block></then>
      <else pos:line="85" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><name pos:line="86" pos:column="9">Aliases<pos:position pos:line="86" pos:column="16"/></name> <operator pos:line="86" pos:column="17">=<pos:position pos:line="86" pos:column="18"/></operator> <name><name pos:line="86" pos:column="19">a_cur<pos:position pos:line="86" pos:column="24"/></name><operator pos:line="86" pos:column="24">-&gt;<pos:position pos:line="86" pos:column="29"/></operator><name pos:line="86" pos:column="26">next<pos:position pos:line="86" pos:column="30"/></name></name></expr>;<pos:position pos:line="86" pos:column="31"/></expr_stmt></block></else></if>
      
      <expr_stmt><expr><name><name pos:line="88" pos:column="7">a_cur<pos:position pos:line="88" pos:column="12"/></name><operator pos:line="88" pos:column="12">-&gt;<pos:position pos:line="88" pos:column="17"/></operator><name pos:line="88" pos:column="14">next<pos:position pos:line="88" pos:column="18"/></name></name> <operator pos:line="88" pos:column="19">=<pos:position pos:line="88" pos:column="20"/></operator> <name pos:line="88" pos:column="21">NULL<pos:position pos:line="88" pos:column="25"/></name></expr>;<pos:position pos:line="88" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="89" pos:column="7">mutt_free_alias<pos:position pos:line="89" pos:column="22"/></name> <argument_list pos:line="89" pos:column="23">(<argument><expr><operator pos:line="89" pos:column="24">&amp;<pos:position pos:line="89" pos:column="29"/></operator><name pos:line="89" pos:column="25">a_cur<pos:position pos:line="89" pos:column="30"/></name></expr></argument>)<pos:position pos:line="89" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="32"/></expr_stmt>
      
      <if pos:line="91" pos:column="7">if <condition pos:line="91" pos:column="10">(<expr><name pos:line="91" pos:column="11">a_list<pos:position pos:line="91" pos:column="17"/></name></expr>)<pos:position pos:line="91" pos:column="18"/></condition><then pos:line="91" pos:column="18">
	<block type="pseudo"><expr_stmt><expr><name pos:line="92" pos:column="9">a_cur<pos:position pos:line="92" pos:column="14"/></name> <operator pos:line="92" pos:column="15">=<pos:position pos:line="92" pos:column="16"/></operator> <name pos:line="92" pos:column="17">a_list<pos:position pos:line="92" pos:column="23"/></name></expr>;<pos:position pos:line="92" pos:column="24"/></expr_stmt></block></then>
      <else pos:line="93" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><name pos:line="94" pos:column="9">a_cur<pos:position pos:line="94" pos:column="14"/></name> <operator pos:line="94" pos:column="15">=<pos:position pos:line="94" pos:column="16"/></operator> <name pos:line="94" pos:column="17">Aliases<pos:position pos:line="94" pos:column="24"/></name></expr>;<pos:position pos:line="94" pos:column="25"/></expr_stmt></block></else></if>
    }<pos:position pos:line="95" pos:column="6"/></block></then>
    <else pos:line="96" pos:column="5">else
    <block pos:line="97" pos:column="5">{
      <expr_stmt><expr><name pos:line="98" pos:column="7">a_list<pos:position pos:line="98" pos:column="13"/></name> <operator pos:line="98" pos:column="14">=<pos:position pos:line="98" pos:column="15"/></operator> <name pos:line="98" pos:column="16">a_cur<pos:position pos:line="98" pos:column="21"/></name></expr>;<pos:position pos:line="98" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name pos:line="99" pos:column="7">a_cur<pos:position pos:line="99" pos:column="12"/></name>  <operator pos:line="99" pos:column="14">=<pos:position pos:line="99" pos:column="15"/></operator> <name><name pos:line="99" pos:column="16">a_cur<pos:position pos:line="99" pos:column="21"/></name><operator pos:line="99" pos:column="21">-&gt;<pos:position pos:line="99" pos:column="26"/></operator><name pos:line="99" pos:column="23">next<pos:position pos:line="99" pos:column="27"/></name></name></expr>;<pos:position pos:line="99" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="100" pos:column="6"/></block></else></if>
  }<pos:position pos:line="101" pos:column="4"/></block></for>
  
  <return pos:line="103" pos:column="3">return <expr><literal type="number" pos:line="103" pos:column="10">0<pos:position pos:line="103" pos:column="11"/></literal></expr>;<pos:position pos:line="103" pos:column="12"/></return>
}<pos:position pos:line="104" pos:column="2"/></block></function></unit>

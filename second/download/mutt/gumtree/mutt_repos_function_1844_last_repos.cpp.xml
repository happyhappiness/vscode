<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1844_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">rfc2231_decode_parameters<pos:position pos:line="1" pos:column="31"/></name> <parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">PARAMETER<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier><modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">headp<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">PARAMETER<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">head<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">NULL<pos:position pos:line="3" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">PARAMETER<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier><modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">last<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">PARAMETER<pos:position pos:line="5" pos:column="12"/></name> <modifier pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></modifier></type><name pos:line="5" pos:column="14">p<pos:position pos:line="5" pos:column="15"/></name></decl>, <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="18">q<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">rfc2231_parameter<pos:position pos:line="7" pos:column="27"/></name></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">conthead<pos:position pos:line="7" pos:column="37"/></name> <init pos:line="7" pos:column="38">= <expr><name pos:line="7" pos:column="40">NULL<pos:position pos:line="7" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">rfc2231_parameter<pos:position pos:line="8" pos:column="27"/></name></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">conttmp<pos:position pos:line="8" pos:column="36"/></name></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">s<pos:position pos:line="10" pos:column="10"/></name></decl>, <modifier pos:line="10" pos:column="12">*<pos:position pos:line="10" pos:column="13"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="13">t<pos:position pos:line="10" pos:column="14"/></name></decl>;<pos:position pos:line="10" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name></type> <name><name pos:line="11" pos:column="8">charset<pos:position pos:line="11" pos:column="15"/></name><index pos:line="11" pos:column="15">[<expr><name pos:line="11" pos:column="16">STRING<pos:position pos:line="11" pos:column="22"/></name></expr>]<pos:position pos:line="11" pos:column="23"/></index></name></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type> <name pos:line="13" pos:column="7">encoded<pos:position pos:line="13" pos:column="14"/></name></decl>;<pos:position pos:line="13" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">index<pos:position pos:line="14" pos:column="12"/></name></decl>;<pos:position pos:line="14" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">short<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">dirty<pos:position pos:line="15" pos:column="14"/></name> <init pos:line="15" pos:column="15">= <expr><literal type="number" pos:line="15" pos:column="17">0<pos:position pos:line="15" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="19"/></decl_stmt>	<comment type="block" pos:line="15" pos:column="25">/* set to 1 when we may have created
			 * empty parameters.
			 */</comment>
  
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><operator pos:line="19" pos:column="7">!<pos:position pos:line="19" pos:column="8"/></operator><name pos:line="19" pos:column="8">headp<pos:position pos:line="19" pos:column="13"/></name></expr>)<pos:position pos:line="19" pos:column="14"/></condition><then pos:line="19" pos:column="14"> <block type="pseudo"><return pos:line="19" pos:column="15">return;<pos:position pos:line="19" pos:column="22"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="21" pos:column="3">purge_empty_parameters<pos:position pos:line="21" pos:column="25"/></name> <argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">headp<pos:position pos:line="21" pos:column="32"/></name></expr></argument>)<pos:position pos:line="21" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>
  
  <for pos:line="23" pos:column="3">for <control pos:line="23" pos:column="7">(<init><expr><name pos:line="23" pos:column="8">last<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <operator pos:line="23" pos:column="15">&amp;<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="16">head<pos:position pos:line="23" pos:column="20"/></name></expr><operator pos:line="23" pos:column="20">,<pos:position pos:line="23" pos:column="21"/></operator> <expr><name pos:line="23" pos:column="22">p<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">=<pos:position pos:line="23" pos:column="25"/></operator> <operator pos:line="23" pos:column="26">*<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="27">headp<pos:position pos:line="23" pos:column="32"/></name></expr>;<pos:position pos:line="23" pos:column="33"/></init> <condition><expr><name pos:line="23" pos:column="34">p<pos:position pos:line="23" pos:column="35"/></name></expr>;<pos:position pos:line="23" pos:column="36"/></condition> <incr><expr><name pos:line="23" pos:column="37">p<pos:position pos:line="23" pos:column="38"/></name> <operator pos:line="23" pos:column="39">=<pos:position pos:line="23" pos:column="40"/></operator> <name pos:line="23" pos:column="41">q<pos:position pos:line="23" pos:column="42"/></name></expr></incr>)<pos:position pos:line="23" pos:column="43"/></control>
  <block pos:line="24" pos:column="3">{
    <expr_stmt><expr><name pos:line="25" pos:column="5">q<pos:position pos:line="25" pos:column="6"/></name> <operator pos:line="25" pos:column="7">=<pos:position pos:line="25" pos:column="8"/></operator> <name><name pos:line="25" pos:column="9">p<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">-&gt;<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="12">next<pos:position pos:line="25" pos:column="16"/></name></name></expr>;<pos:position pos:line="25" pos:column="17"/></expr_stmt>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><operator pos:line="27" pos:column="9">!<pos:position pos:line="27" pos:column="10"/></operator><operator pos:line="27" pos:column="10">(<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="11">s<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <call><name pos:line="27" pos:column="15">strchr<pos:position pos:line="27" pos:column="21"/></name> <argument_list pos:line="27" pos:column="22">(<argument><expr><name><name pos:line="27" pos:column="23">p<pos:position pos:line="27" pos:column="24"/></name><operator pos:line="27" pos:column="24">-&gt;<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="26">attribute<pos:position pos:line="27" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="27" pos:column="37">'*'<pos:position pos:line="27" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="41"/></argument_list></call><operator pos:line="27" pos:column="41">)<pos:position pos:line="27" pos:column="42"/></operator></expr>)<pos:position pos:line="27" pos:column="43"/></condition><then pos:line="27" pos:column="43">
    <block pos:line="28" pos:column="5">{

      <comment type="block" pos:line="30" pos:column="7">/* 
       * Using RFC 2047 encoding in MIME parameters is explicitly
       * forbidden by that document.  Nevertheless, it's being
       * generated by some software, including certain Lotus Notes to 
       * Internet Gateways.  So we actually decode it.
       */</comment>

      <if pos:line="37" pos:column="7">if <condition pos:line="37" pos:column="10">(<expr><call><name pos:line="37" pos:column="11">option<pos:position pos:line="37" pos:column="17"/></name> <argument_list pos:line="37" pos:column="18">(<argument><expr><name pos:line="37" pos:column="19">OPTRFC2047PARAMS<pos:position pos:line="37" pos:column="35"/></name></expr></argument>)<pos:position pos:line="37" pos:column="36"/></argument_list></call> <operator pos:line="37" pos:column="37">&amp;&amp;<pos:position pos:line="37" pos:column="47"/></operator> <name><name pos:line="37" pos:column="40">p<pos:position pos:line="37" pos:column="41"/></name><operator pos:line="37" pos:column="41">-&gt;<pos:position pos:line="37" pos:column="46"/></operator><name pos:line="37" pos:column="43">value<pos:position pos:line="37" pos:column="48"/></name></name> <operator pos:line="37" pos:column="49">&amp;&amp;<pos:position pos:line="37" pos:column="59"/></operator> <call><name pos:line="37" pos:column="52">strstr<pos:position pos:line="37" pos:column="58"/></name> <argument_list pos:line="37" pos:column="59">(<argument><expr><name><name pos:line="37" pos:column="60">p<pos:position pos:line="37" pos:column="61"/></name><operator pos:line="37" pos:column="61">-&gt;<pos:position pos:line="37" pos:column="66"/></operator><name pos:line="37" pos:column="63">value<pos:position pos:line="37" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="70">"=?"<pos:position pos:line="37" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="76"/></condition><then pos:line="37" pos:column="76">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="9">rfc2047_decode<pos:position pos:line="38" pos:column="23"/></name> <argument_list pos:line="38" pos:column="24">(<argument><expr><operator pos:line="38" pos:column="25">&amp;<pos:position pos:line="38" pos:column="30"/></operator><name><name pos:line="38" pos:column="26">p<pos:position pos:line="38" pos:column="27"/></name><operator pos:line="38" pos:column="27">-&gt;<pos:position pos:line="38" pos:column="32"/></operator><name pos:line="38" pos:column="29">value<pos:position pos:line="38" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="36"/></expr_stmt></block></then>
      <elseif pos:line="39" pos:column="7">else <if pos:line="39" pos:column="12">if <condition pos:line="39" pos:column="15">(<expr><name pos:line="39" pos:column="16">AssumedCharset<pos:position pos:line="39" pos:column="30"/></name> <operator pos:line="39" pos:column="31">&amp;&amp;<pos:position pos:line="39" pos:column="41"/></operator> <operator pos:line="39" pos:column="34">*<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="35">AssumedCharset<pos:position pos:line="39" pos:column="49"/></name></expr>)<pos:position pos:line="39" pos:column="50"/></condition><then pos:line="39" pos:column="50">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="9">convert_nonmime_string<pos:position pos:line="40" pos:column="31"/></name> <argument_list pos:line="40" pos:column="32">(<argument><expr><operator pos:line="40" pos:column="33">&amp;<pos:position pos:line="40" pos:column="38"/></operator><name><name pos:line="40" pos:column="34">p<pos:position pos:line="40" pos:column="35"/></name><operator pos:line="40" pos:column="35">-&gt;<pos:position pos:line="40" pos:column="40"/></operator><name pos:line="40" pos:column="37">value<pos:position pos:line="40" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="44"/></expr_stmt></block></then></if></elseif></if>

      <expr_stmt><expr><operator pos:line="42" pos:column="7">*<pos:position pos:line="42" pos:column="8"/></operator><name pos:line="42" pos:column="8">last<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">=<pos:position pos:line="42" pos:column="14"/></operator> <name pos:line="42" pos:column="15">p<pos:position pos:line="42" pos:column="16"/></name></expr>;<pos:position pos:line="42" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name pos:line="43" pos:column="7">last<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">=<pos:position pos:line="43" pos:column="13"/></operator> <operator pos:line="43" pos:column="14">&amp;<pos:position pos:line="43" pos:column="19"/></operator><name><name pos:line="43" pos:column="15">p<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">-&gt;<pos:position pos:line="43" pos:column="21"/></operator><name pos:line="43" pos:column="18">next<pos:position pos:line="43" pos:column="22"/></name></name></expr>;<pos:position pos:line="43" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="44" pos:column="7">p<pos:position pos:line="44" pos:column="8"/></name><operator pos:line="44" pos:column="8">-&gt;<pos:position pos:line="44" pos:column="13"/></operator><name pos:line="44" pos:column="10">next<pos:position pos:line="44" pos:column="14"/></name></name> <operator pos:line="44" pos:column="15">=<pos:position pos:line="44" pos:column="16"/></operator> <name pos:line="44" pos:column="17">NULL<pos:position pos:line="44" pos:column="21"/></name></expr>;<pos:position pos:line="44" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then>
    <elseif pos:line="46" pos:column="5">else <if pos:line="46" pos:column="10">if <condition pos:line="46" pos:column="13">(<expr><operator pos:line="46" pos:column="14">*<pos:position pos:line="46" pos:column="15"/></operator><operator pos:line="46" pos:column="15">(<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="16">s<pos:position pos:line="46" pos:column="17"/></name> <operator pos:line="46" pos:column="18">+<pos:position pos:line="46" pos:column="19"/></operator> <literal type="number" pos:line="46" pos:column="20">1<pos:position pos:line="46" pos:column="21"/></literal><operator pos:line="46" pos:column="21">)<pos:position pos:line="46" pos:column="22"/></operator> <operator pos:line="46" pos:column="23">==<pos:position pos:line="46" pos:column="25"/></operator> <literal type="char" pos:line="46" pos:column="26">'\0'<pos:position pos:line="46" pos:column="30"/></literal></expr>)<pos:position pos:line="46" pos:column="31"/></condition><then pos:line="46" pos:column="31">
    <block pos:line="47" pos:column="5">{
      <expr_stmt><expr><operator pos:line="48" pos:column="7">*<pos:position pos:line="48" pos:column="8"/></operator><name pos:line="48" pos:column="8">s<pos:position pos:line="48" pos:column="9"/></name> <operator pos:line="48" pos:column="10">=<pos:position pos:line="48" pos:column="11"/></operator> <literal type="char" pos:line="48" pos:column="12">'\0'<pos:position pos:line="48" pos:column="16"/></literal></expr>;<pos:position pos:line="48" pos:column="17"/></expr_stmt>
      
      <expr_stmt><expr><name pos:line="50" pos:column="7">s<pos:position pos:line="50" pos:column="8"/></name> <operator pos:line="50" pos:column="9">=<pos:position pos:line="50" pos:column="10"/></operator> <call><name pos:line="50" pos:column="11">rfc2231_get_charset<pos:position pos:line="50" pos:column="30"/></name> <argument_list pos:line="50" pos:column="31">(<argument><expr><name><name pos:line="50" pos:column="32">p<pos:position pos:line="50" pos:column="33"/></name><operator pos:line="50" pos:column="33">-&gt;<pos:position pos:line="50" pos:column="38"/></operator><name pos:line="50" pos:column="35">value<pos:position pos:line="50" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="42">charset<pos:position pos:line="50" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="51">sizeof <argument_list pos:line="50" pos:column="58">(<argument><expr><name pos:line="50" pos:column="59">charset<pos:position pos:line="50" pos:column="66"/></name></expr></argument>)<pos:position pos:line="50" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="69"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="51" pos:column="7">rfc2231_decode_one<pos:position pos:line="51" pos:column="25"/></name> <argument_list pos:line="51" pos:column="26">(<argument><expr><name><name pos:line="51" pos:column="27">p<pos:position pos:line="51" pos:column="28"/></name><operator pos:line="51" pos:column="28">-&gt;<pos:position pos:line="51" pos:column="33"/></operator><name pos:line="51" pos:column="30">value<pos:position pos:line="51" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="37">s<pos:position pos:line="51" pos:column="38"/></name></expr></argument>)<pos:position pos:line="51" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="52" pos:column="7">mutt_convert_string<pos:position pos:line="52" pos:column="26"/></name> <argument_list pos:line="52" pos:column="27">(<argument><expr><operator pos:line="52" pos:column="28">&amp;<pos:position pos:line="52" pos:column="33"/></operator><name><name pos:line="52" pos:column="29">p<pos:position pos:line="52" pos:column="30"/></name><operator pos:line="52" pos:column="30">-&gt;<pos:position pos:line="52" pos:column="35"/></operator><name pos:line="52" pos:column="32">value<pos:position pos:line="52" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="39">charset<pos:position pos:line="52" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="48">Charset<pos:position pos:line="52" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="57">MUTT_ICONV_HOOK_FROM<pos:position pos:line="52" pos:column="77"/></name></expr></argument>)<pos:position pos:line="52" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="79"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">mutt_filter_unprintable<pos:position pos:line="53" pos:column="30"/></name> <argument_list pos:line="53" pos:column="31">(<argument><expr><operator pos:line="53" pos:column="32">&amp;<pos:position pos:line="53" pos:column="37"/></operator><name><name pos:line="53" pos:column="33">p<pos:position pos:line="53" pos:column="34"/></name><operator pos:line="53" pos:column="34">-&gt;<pos:position pos:line="53" pos:column="39"/></operator><name pos:line="53" pos:column="36">value<pos:position pos:line="53" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="43"/></expr_stmt>

      <expr_stmt><expr><operator pos:line="55" pos:column="7">*<pos:position pos:line="55" pos:column="8"/></operator><name pos:line="55" pos:column="8">last<pos:position pos:line="55" pos:column="12"/></name> <operator pos:line="55" pos:column="13">=<pos:position pos:line="55" pos:column="14"/></operator> <name pos:line="55" pos:column="15">p<pos:position pos:line="55" pos:column="16"/></name></expr>;<pos:position pos:line="55" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name pos:line="56" pos:column="7">last<pos:position pos:line="56" pos:column="11"/></name> <operator pos:line="56" pos:column="12">=<pos:position pos:line="56" pos:column="13"/></operator> <operator pos:line="56" pos:column="14">&amp;<pos:position pos:line="56" pos:column="19"/></operator><name><name pos:line="56" pos:column="15">p<pos:position pos:line="56" pos:column="16"/></name><operator pos:line="56" pos:column="16">-&gt;<pos:position pos:line="56" pos:column="21"/></operator><name pos:line="56" pos:column="18">next<pos:position pos:line="56" pos:column="22"/></name></name></expr>;<pos:position pos:line="56" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="57" pos:column="7">p<pos:position pos:line="57" pos:column="8"/></name><operator pos:line="57" pos:column="8">-&gt;<pos:position pos:line="57" pos:column="13"/></operator><name pos:line="57" pos:column="10">next<pos:position pos:line="57" pos:column="14"/></name></name> <operator pos:line="57" pos:column="15">=<pos:position pos:line="57" pos:column="16"/></operator> <name pos:line="57" pos:column="17">NULL<pos:position pos:line="57" pos:column="21"/></name></expr>;<pos:position pos:line="57" pos:column="22"/></expr_stmt>
      
      <expr_stmt><expr><name pos:line="59" pos:column="7">dirty<pos:position pos:line="59" pos:column="12"/></name> <operator pos:line="59" pos:column="13">=<pos:position pos:line="59" pos:column="14"/></operator> <literal type="number" pos:line="59" pos:column="15">1<pos:position pos:line="59" pos:column="16"/></literal></expr>;<pos:position pos:line="59" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if></elseif>
    <else pos:line="61" pos:column="5">else
    <block pos:line="62" pos:column="5">{
      <expr_stmt><expr><operator pos:line="63" pos:column="7">*<pos:position pos:line="63" pos:column="8"/></operator><name pos:line="63" pos:column="8">s<pos:position pos:line="63" pos:column="9"/></name> <operator pos:line="63" pos:column="10">=<pos:position pos:line="63" pos:column="11"/></operator> <literal type="char" pos:line="63" pos:column="12">'\0'<pos:position pos:line="63" pos:column="16"/></literal></expr>;<pos:position pos:line="63" pos:column="17"/></expr_stmt> <expr_stmt><expr><name pos:line="63" pos:column="18">s<pos:position pos:line="63" pos:column="19"/></name><operator pos:line="63" pos:column="19">++<pos:position pos:line="63" pos:column="21"/></operator></expr>;<pos:position pos:line="63" pos:column="22"/></expr_stmt> <comment type="block" pos:line="63" pos:column="23">/* let s point to the first character of index. */</comment>
      <for pos:line="64" pos:column="7">for <control pos:line="64" pos:column="11">(<init><expr><name pos:line="64" pos:column="12">t<pos:position pos:line="64" pos:column="13"/></name> <operator pos:line="64" pos:column="14">=<pos:position pos:line="64" pos:column="15"/></operator> <name pos:line="64" pos:column="16">s<pos:position pos:line="64" pos:column="17"/></name></expr>;<pos:position pos:line="64" pos:column="18"/></init> <condition><expr><operator pos:line="64" pos:column="19">*<pos:position pos:line="64" pos:column="20"/></operator><name pos:line="64" pos:column="20">t<pos:position pos:line="64" pos:column="21"/></name> <operator pos:line="64" pos:column="22">&amp;&amp;<pos:position pos:line="64" pos:column="32"/></operator> <call><name pos:line="64" pos:column="25">isdigit<pos:position pos:line="64" pos:column="32"/></name> <argument_list pos:line="64" pos:column="33">(<argument><expr><operator pos:line="64" pos:column="34">(<pos:position pos:line="64" pos:column="35"/></operator><name pos:line="64" pos:column="35">unsigned<pos:position pos:line="64" pos:column="43"/></name> <name pos:line="64" pos:column="44">char<pos:position pos:line="64" pos:column="48"/></name><operator pos:line="64" pos:column="48">)<pos:position pos:line="64" pos:column="49"/></operator> <operator pos:line="64" pos:column="50">*<pos:position pos:line="64" pos:column="51"/></operator><name pos:line="64" pos:column="51">t<pos:position pos:line="64" pos:column="52"/></name></expr></argument>)<pos:position pos:line="64" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="54"/></condition> <incr><expr><name pos:line="64" pos:column="55">t<pos:position pos:line="64" pos:column="56"/></name><operator pos:line="64" pos:column="56">++<pos:position pos:line="64" pos:column="58"/></operator></expr></incr>)<pos:position pos:line="64" pos:column="59"/></control>
	<block type="pseudo"><empty_stmt pos:line="65" pos:column="9">;<pos:position pos:line="65" pos:column="10"/></empty_stmt></block></for>
      <expr_stmt><expr><name pos:line="66" pos:column="7">encoded<pos:position pos:line="66" pos:column="14"/></name> <operator pos:line="66" pos:column="15">=<pos:position pos:line="66" pos:column="16"/></operator> <operator pos:line="66" pos:column="17">(<pos:position pos:line="66" pos:column="18"/></operator><operator pos:line="66" pos:column="18">*<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="19">t<pos:position pos:line="66" pos:column="20"/></name> <operator pos:line="66" pos:column="21">==<pos:position pos:line="66" pos:column="23"/></operator> <literal type="char" pos:line="66" pos:column="24">'*'<pos:position pos:line="66" pos:column="27"/></literal><operator pos:line="66" pos:column="27">)<pos:position pos:line="66" pos:column="28"/></operator></expr>;<pos:position pos:line="66" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="67" pos:column="7">*<pos:position pos:line="67" pos:column="8"/></operator><name pos:line="67" pos:column="8">t<pos:position pos:line="67" pos:column="9"/></name> <operator pos:line="67" pos:column="10">=<pos:position pos:line="67" pos:column="11"/></operator> <literal type="char" pos:line="67" pos:column="12">'\0'<pos:position pos:line="67" pos:column="16"/></literal></expr>;<pos:position pos:line="67" pos:column="17"/></expr_stmt>

      <expr_stmt><expr><name pos:line="69" pos:column="7">index<pos:position pos:line="69" pos:column="12"/></name> <operator pos:line="69" pos:column="13">=<pos:position pos:line="69" pos:column="14"/></operator> <call><name pos:line="69" pos:column="15">atoi<pos:position pos:line="69" pos:column="19"/></name> <argument_list pos:line="69" pos:column="20">(<argument><expr><name pos:line="69" pos:column="21">s<pos:position pos:line="69" pos:column="22"/></name></expr></argument>)<pos:position pos:line="69" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="24"/></expr_stmt>

      <expr_stmt><expr><name pos:line="71" pos:column="7">conttmp<pos:position pos:line="71" pos:column="14"/></name> <operator pos:line="71" pos:column="15">=<pos:position pos:line="71" pos:column="16"/></operator> <call><name pos:line="71" pos:column="17">rfc2231_new_parameter<pos:position pos:line="71" pos:column="38"/></name> <argument_list pos:line="71" pos:column="39">()<pos:position pos:line="71" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="72" pos:column="7">conttmp<pos:position pos:line="72" pos:column="14"/></name><operator pos:line="72" pos:column="14">-&gt;<pos:position pos:line="72" pos:column="19"/></operator><name pos:line="72" pos:column="16">attribute<pos:position pos:line="72" pos:column="25"/></name></name> <operator pos:line="72" pos:column="26">=<pos:position pos:line="72" pos:column="27"/></operator> <name><name pos:line="72" pos:column="28">p<pos:position pos:line="72" pos:column="29"/></name><operator pos:line="72" pos:column="29">-&gt;<pos:position pos:line="72" pos:column="34"/></operator><name pos:line="72" pos:column="31">attribute<pos:position pos:line="72" pos:column="40"/></name></name></expr>;<pos:position pos:line="72" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="73" pos:column="7">conttmp<pos:position pos:line="73" pos:column="14"/></name><operator pos:line="73" pos:column="14">-&gt;<pos:position pos:line="73" pos:column="19"/></operator><name pos:line="73" pos:column="16">value<pos:position pos:line="73" pos:column="21"/></name></name> <operator pos:line="73" pos:column="22">=<pos:position pos:line="73" pos:column="23"/></operator> <name><name pos:line="73" pos:column="24">p<pos:position pos:line="73" pos:column="25"/></name><operator pos:line="73" pos:column="25">-&gt;<pos:position pos:line="73" pos:column="30"/></operator><name pos:line="73" pos:column="27">value<pos:position pos:line="73" pos:column="32"/></name></name></expr>;<pos:position pos:line="73" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="74" pos:column="7">conttmp<pos:position pos:line="74" pos:column="14"/></name><operator pos:line="74" pos:column="14">-&gt;<pos:position pos:line="74" pos:column="19"/></operator><name pos:line="74" pos:column="16">encoded<pos:position pos:line="74" pos:column="23"/></name></name> <operator pos:line="74" pos:column="24">=<pos:position pos:line="74" pos:column="25"/></operator> <name pos:line="74" pos:column="26">encoded<pos:position pos:line="74" pos:column="33"/></name></expr>;<pos:position pos:line="74" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="75" pos:column="7">conttmp<pos:position pos:line="75" pos:column="14"/></name><operator pos:line="75" pos:column="14">-&gt;<pos:position pos:line="75" pos:column="19"/></operator><name pos:line="75" pos:column="16">index<pos:position pos:line="75" pos:column="21"/></name></name> <operator pos:line="75" pos:column="22">=<pos:position pos:line="75" pos:column="23"/></operator> <name pos:line="75" pos:column="24">index<pos:position pos:line="75" pos:column="29"/></name></expr>;<pos:position pos:line="75" pos:column="30"/></expr_stmt>
      
      <expr_stmt><expr><name><name pos:line="77" pos:column="7">p<pos:position pos:line="77" pos:column="8"/></name><operator pos:line="77" pos:column="8">-&gt;<pos:position pos:line="77" pos:column="13"/></operator><name pos:line="77" pos:column="10">attribute<pos:position pos:line="77" pos:column="19"/></name></name> <operator pos:line="77" pos:column="20">=<pos:position pos:line="77" pos:column="21"/></operator> <name pos:line="77" pos:column="22">NULL<pos:position pos:line="77" pos:column="26"/></name></expr>;<pos:position pos:line="77" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="78" pos:column="7">p<pos:position pos:line="78" pos:column="8"/></name><operator pos:line="78" pos:column="8">-&gt;<pos:position pos:line="78" pos:column="13"/></operator><name pos:line="78" pos:column="10">value<pos:position pos:line="78" pos:column="15"/></name></name> <operator pos:line="78" pos:column="16">=<pos:position pos:line="78" pos:column="17"/></operator> <name pos:line="78" pos:column="18">NULL<pos:position pos:line="78" pos:column="22"/></name></expr>;<pos:position pos:line="78" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="79" pos:column="7">FREE<pos:position pos:line="79" pos:column="11"/></name> <argument_list pos:line="79" pos:column="12">(<argument><expr><operator pos:line="79" pos:column="13">&amp;<pos:position pos:line="79" pos:column="18"/></operator><name pos:line="79" pos:column="14">p<pos:position pos:line="79" pos:column="15"/></name></expr></argument>)<pos:position pos:line="79" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="17"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="81" pos:column="7">rfc2231_list_insert<pos:position pos:line="81" pos:column="26"/></name> <argument_list pos:line="81" pos:column="27">(<argument><expr><operator pos:line="81" pos:column="28">&amp;<pos:position pos:line="81" pos:column="33"/></operator><name pos:line="81" pos:column="29">conthead<pos:position pos:line="81" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="39">conttmp<pos:position pos:line="81" pos:column="46"/></name></expr></argument>)<pos:position pos:line="81" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="82" pos:column="6"/></block></else></if>
  }<pos:position pos:line="83" pos:column="4"/></block></for>

  <if pos:line="85" pos:column="3">if <condition pos:line="85" pos:column="6">(<expr><name pos:line="85" pos:column="7">conthead<pos:position pos:line="85" pos:column="15"/></name></expr>)<pos:position pos:line="85" pos:column="16"/></condition><then pos:line="85" pos:column="16">
  <block pos:line="86" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">rfc2231_join_continuations<pos:position pos:line="87" pos:column="31"/></name> <argument_list pos:line="87" pos:column="32">(<argument><expr><name pos:line="87" pos:column="33">last<pos:position pos:line="87" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="39">conthead<pos:position pos:line="87" pos:column="47"/></name></expr></argument>)<pos:position pos:line="87" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name pos:line="88" pos:column="5">dirty<pos:position pos:line="88" pos:column="10"/></name> <operator pos:line="88" pos:column="11">=<pos:position pos:line="88" pos:column="12"/></operator> <literal type="number" pos:line="88" pos:column="13">1<pos:position pos:line="88" pos:column="14"/></literal></expr>;<pos:position pos:line="88" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="89" pos:column="4"/></block></then></if>
  
  <expr_stmt><expr><operator pos:line="91" pos:column="3">*<pos:position pos:line="91" pos:column="4"/></operator><name pos:line="91" pos:column="4">headp<pos:position pos:line="91" pos:column="9"/></name> <operator pos:line="91" pos:column="10">=<pos:position pos:line="91" pos:column="11"/></operator> <name pos:line="91" pos:column="12">head<pos:position pos:line="91" pos:column="16"/></name></expr>;<pos:position pos:line="91" pos:column="17"/></expr_stmt>
  
  <if pos:line="93" pos:column="3">if <condition pos:line="93" pos:column="6">(<expr><name pos:line="93" pos:column="7">dirty<pos:position pos:line="93" pos:column="12"/></name></expr>)<pos:position pos:line="93" pos:column="13"/></condition><then pos:line="93" pos:column="13">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="94" pos:column="5">purge_empty_parameters<pos:position pos:line="94" pos:column="27"/></name> <argument_list pos:line="94" pos:column="28">(<argument><expr><name pos:line="94" pos:column="29">headp<pos:position pos:line="94" pos:column="34"/></name></expr></argument>)<pos:position pos:line="94" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="36"/></expr_stmt></block></then></if>
}<pos:position pos:line="95" pos:column="2"/></block></function></unit>

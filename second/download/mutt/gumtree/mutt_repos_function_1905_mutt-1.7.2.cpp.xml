<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1905_mutt-1.7.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">imap_exec<pos:position pos:line="1" pos:column="14"/></name> <parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">IMAP_DATA<pos:position pos:line="1" pos:column="25"/></name><modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type> <name pos:line="1" pos:column="27">idata<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name><modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type> <name pos:line="1" pos:column="46">cmdstr<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">int<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">flags<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">rc<pos:position pos:line="3" pos:column="9"/></name></decl>;<pos:position pos:line="3" pos:column="10"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">(<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">rc<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">=<pos:position pos:line="5" pos:column="12"/></operator> <call><name pos:line="5" pos:column="13">cmd_start<pos:position pos:line="5" pos:column="22"/></name> <argument_list pos:line="5" pos:column="23">(<argument><expr><name pos:line="5" pos:column="24">idata<pos:position pos:line="5" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="31">cmdstr<pos:position pos:line="5" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="39">flags<pos:position pos:line="5" pos:column="44"/></name></expr></argument>)<pos:position pos:line="5" pos:column="45"/></argument_list></call><operator pos:line="5" pos:column="45">)<pos:position pos:line="5" pos:column="46"/></operator> <operator pos:line="5" pos:column="47">&lt;<pos:position pos:line="5" pos:column="51"/></operator> <literal type="number" pos:line="5" pos:column="49">0<pos:position pos:line="5" pos:column="50"/></literal></expr>)<pos:position pos:line="5" pos:column="51"/></condition><then pos:line="5" pos:column="51">
  <block pos:line="6" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">cmd_handle_fatal<pos:position pos:line="7" pos:column="21"/></name> <argument_list pos:line="7" pos:column="22">(<argument><expr><name pos:line="7" pos:column="23">idata<pos:position pos:line="7" pos:column="28"/></name></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>
    <return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">-<pos:position pos:line="8" pos:column="13"/></operator><literal type="number" pos:line="8" pos:column="13">1<pos:position pos:line="8" pos:column="14"/></literal></expr>;<pos:position pos:line="8" pos:column="15"/></return>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">flags<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">&amp;<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="15">IMAP_CMD_QUEUE<pos:position pos:line="11" pos:column="29"/></name></expr>)<pos:position pos:line="11" pos:column="30"/></condition><then pos:line="11" pos:column="30">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><literal type="number" pos:line="12" pos:column="12">0<pos:position pos:line="12" pos:column="13"/></literal></expr>;<pos:position pos:line="12" pos:column="14"/></return></block></then></if>

  <do pos:line="14" pos:column="3">do
    <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="5">rc<pos:position pos:line="15" pos:column="7"/></name> <operator pos:line="15" pos:column="8">=<pos:position pos:line="15" pos:column="9"/></operator> <call><name pos:line="15" pos:column="10">imap_cmd_step<pos:position pos:line="15" pos:column="23"/></name> <argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">idata<pos:position pos:line="15" pos:column="30"/></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt></block>
  while <condition pos:line="16" pos:column="9">(<expr><name pos:line="16" pos:column="10">rc<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">==<pos:position pos:line="16" pos:column="15"/></operator> <name pos:line="16" pos:column="16">IMAP_CMD_CONTINUE<pos:position pos:line="16" pos:column="33"/></name></expr>)<pos:position pos:line="16" pos:column="34"/></condition>;<pos:position pos:line="16" pos:column="35"/></do>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">rc<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">==<pos:position pos:line="18" pos:column="12"/></operator> <name pos:line="18" pos:column="13">IMAP_CMD_NO<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">&amp;&amp;<pos:position pos:line="18" pos:column="35"/></operator> <operator pos:line="18" pos:column="28">(<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="29">flags<pos:position pos:line="18" pos:column="34"/></name> <operator pos:line="18" pos:column="35">&amp;<pos:position pos:line="18" pos:column="40"/></operator> <name pos:line="18" pos:column="37">IMAP_CMD_FAIL_OK<pos:position pos:line="18" pos:column="53"/></name><operator pos:line="18" pos:column="53">)<pos:position pos:line="18" pos:column="54"/></operator></expr>)<pos:position pos:line="18" pos:column="55"/></condition><then pos:line="18" pos:column="55">
    <block type="pseudo"><return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">-<pos:position pos:line="19" pos:column="13"/></operator><literal type="number" pos:line="19" pos:column="13">2<pos:position pos:line="19" pos:column="14"/></literal></expr>;<pos:position pos:line="19" pos:column="15"/></return></block></then></if>

  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">rc<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">!=<pos:position pos:line="21" pos:column="12"/></operator> <name pos:line="21" pos:column="13">IMAP_CMD_OK<pos:position pos:line="21" pos:column="24"/></name></expr>)<pos:position pos:line="21" pos:column="25"/></condition><then pos:line="21" pos:column="25">
  <block pos:line="22" pos:column="3">{
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">(<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">flags<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">&amp;<pos:position pos:line="23" pos:column="21"/></operator> <name pos:line="23" pos:column="18">IMAP_CMD_FAIL_OK<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">)<pos:position pos:line="23" pos:column="35"/></operator> <operator pos:line="23" pos:column="36">&amp;&amp;<pos:position pos:line="23" pos:column="46"/></operator> <name><name pos:line="23" pos:column="39">idata<pos:position pos:line="23" pos:column="44"/></name><operator pos:line="23" pos:column="44">-&gt;<pos:position pos:line="23" pos:column="49"/></operator><name pos:line="23" pos:column="46">status<pos:position pos:line="23" pos:column="52"/></name></name> <operator pos:line="23" pos:column="53">!=<pos:position pos:line="23" pos:column="55"/></operator> <name pos:line="23" pos:column="56">IMAP_FATAL<pos:position pos:line="23" pos:column="66"/></name></expr>)<pos:position pos:line="23" pos:column="67"/></condition><then pos:line="23" pos:column="67">
      <block type="pseudo"><return pos:line="24" pos:column="7">return <expr><operator pos:line="24" pos:column="14">-<pos:position pos:line="24" pos:column="15"/></operator><literal type="number" pos:line="24" pos:column="15">2<pos:position pos:line="24" pos:column="16"/></literal></expr>;<pos:position pos:line="24" pos:column="17"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="26" pos:column="5">dprint<pos:position pos:line="26" pos:column="11"/></name> <argument_list pos:line="26" pos:column="12">(<argument><expr><literal type="number" pos:line="26" pos:column="13">1<pos:position pos:line="26" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="26" pos:column="16">(<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">debugfile<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">,<pos:position pos:line="26" pos:column="27"/></operator> <literal type="string" pos:line="26" pos:column="28">"imap_exec: command failed: %s\n"<pos:position pos:line="26" pos:column="61"/></literal><operator pos:line="26" pos:column="61">,<pos:position pos:line="26" pos:column="62"/></operator> <name><name pos:line="26" pos:column="63">idata<pos:position pos:line="26" pos:column="68"/></name><operator pos:line="26" pos:column="68">-&gt;<pos:position pos:line="26" pos:column="73"/></operator><name pos:line="26" pos:column="70">buf<pos:position pos:line="26" pos:column="73"/></name></name><operator pos:line="26" pos:column="73">)<pos:position pos:line="26" pos:column="74"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="76"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><operator pos:line="27" pos:column="12">-<pos:position pos:line="27" pos:column="13"/></operator><literal type="number" pos:line="27" pos:column="13">1<pos:position pos:line="27" pos:column="14"/></literal></expr>;<pos:position pos:line="27" pos:column="15"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <return pos:line="30" pos:column="3">return <expr><literal type="number" pos:line="30" pos:column="10">0<pos:position pos:line="30" pos:column="11"/></literal></expr>;<pos:position pos:line="30" pos:column="12"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1197_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_idn<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">domain<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><operator pos:line="3" pos:column="7">!<pos:position pos:line="3" pos:column="8"/></operator> <name pos:line="3" pos:column="9">domain<pos:position pos:line="3" pos:column="15"/></name></expr>)<pos:position pos:line="3" pos:column="16"/></condition><then pos:line="3" pos:column="16">
    <block type="pseudo"><return pos:line="4" pos:column="5">return <expr><literal type="number" pos:line="4" pos:column="12">0<pos:position pos:line="4" pos:column="13"/></literal></expr>;<pos:position pos:line="4" pos:column="14"/></return></block></then></if>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><call><name pos:line="6" pos:column="7">ascii_strncasecmp<pos:position pos:line="6" pos:column="24"/></name> <argument_list pos:line="6" pos:column="25">(<argument><expr><name pos:line="6" pos:column="26">domain<pos:position pos:line="6" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="34">"xn--"<pos:position pos:line="6" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="42">4<pos:position pos:line="6" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="44"/></argument_list></call> <operator pos:line="6" pos:column="45">==<pos:position pos:line="6" pos:column="47"/></operator> <literal type="number" pos:line="6" pos:column="48">0<pos:position pos:line="6" pos:column="49"/></literal></expr>)<pos:position pos:line="6" pos:column="50"/></condition><then pos:line="6" pos:column="50">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><literal type="number" pos:line="7" pos:column="12">1<pos:position pos:line="7" pos:column="13"/></literal></expr>;<pos:position pos:line="7" pos:column="14"/></return></block></then></if>

  <while pos:line="9" pos:column="3">while <condition pos:line="9" pos:column="9">(<expr><operator pos:line="9" pos:column="10">(<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="11">domain<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <call><name pos:line="9" pos:column="20">strchr<pos:position pos:line="9" pos:column="26"/></name> <argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">domain<pos:position pos:line="9" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="9" pos:column="36">'.'<pos:position pos:line="9" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call><operator pos:line="9" pos:column="40">)<pos:position pos:line="9" pos:column="41"/></operator> <operator pos:line="9" pos:column="42">!=<pos:position pos:line="9" pos:column="44"/></operator> <name pos:line="9" pos:column="45">NULL<pos:position pos:line="9" pos:column="49"/></name></expr>)<pos:position pos:line="9" pos:column="50"/></condition>
  <block pos:line="10" pos:column="3">{
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">ascii_strncasecmp<pos:position pos:line="11" pos:column="26"/></name> <argument_list pos:line="11" pos:column="27">(<argument><expr><operator pos:line="11" pos:column="28">++<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="30">domain<pos:position pos:line="11" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="38">"xn--"<pos:position pos:line="11" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="46">4<pos:position pos:line="11" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call> <operator pos:line="11" pos:column="49">==<pos:position pos:line="11" pos:column="51"/></operator> <literal type="number" pos:line="11" pos:column="52">0<pos:position pos:line="11" pos:column="53"/></literal></expr>)<pos:position pos:line="11" pos:column="54"/></condition><then pos:line="11" pos:column="54">
      <block type="pseudo"><return pos:line="12" pos:column="7">return <expr><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal></expr>;<pos:position pos:line="12" pos:column="16"/></return></block></then></if>
  }<pos:position pos:line="13" pos:column="4"/></block></while>

  <return pos:line="15" pos:column="3">return <expr><literal type="number" pos:line="15" pos:column="10">0<pos:position pos:line="15" pos:column="11"/></literal></expr>;<pos:position pos:line="15" pos:column="12"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

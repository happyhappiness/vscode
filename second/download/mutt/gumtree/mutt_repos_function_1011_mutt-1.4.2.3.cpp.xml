<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1011_mutt-1.4.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">mh_read_sequences<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">mh_sequences<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">mhs<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="58">const<pos:position pos:line="1" pos:column="63"/></specifier> <name pos:line="1" pos:column="64">char<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">path<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">FILE<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">fp<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">line<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><literal type="number" pos:line="4" pos:column="14">1<pos:position pos:line="4" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">buff<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><name pos:line="5" pos:column="16">NULL<pos:position pos:line="5" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">t<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">sz<pos:position pos:line="7" pos:column="12"/></name> <init pos:line="7" pos:column="13">= <expr><literal type="number" pos:line="7" pos:column="15">0<pos:position pos:line="7" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
  
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">short<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">f<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">first<pos:position pos:line="10" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="14">last<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="12" pos:column="3">char<pos:position pos:line="12" pos:column="7"/></name></type> <name><name pos:line="12" pos:column="8">pathname<pos:position pos:line="12" pos:column="16"/></name><index pos:line="12" pos:column="16">[<expr><name pos:line="12" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="12" pos:column="32"/></name></expr>]<pos:position pos:line="12" pos:column="33"/></index></name></decl>;<pos:position pos:line="12" pos:column="34"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">snprintf<pos:position pos:line="13" pos:column="11"/></name> <argument_list pos:line="13" pos:column="12">(<argument><expr><name pos:line="13" pos:column="13">pathname<pos:position pos:line="13" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="23">sizeof <argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">pathname<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></sizeof></expr></argument>,  <argument><expr><literal type="string" pos:line="13" pos:column="43">"%s/.mh_sequences"<pos:position pos:line="13" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="63">path<pos:position pos:line="13" pos:column="67"/></name></expr></argument>)<pos:position pos:line="13" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="69"/></expr_stmt>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><operator pos:line="15" pos:column="7">!<pos:position pos:line="15" pos:column="8"/></operator><operator pos:line="15" pos:column="8">(<pos:position pos:line="15" pos:column="9"/></operator><name pos:line="15" pos:column="9">fp<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <call><name pos:line="15" pos:column="14">fopen<pos:position pos:line="15" pos:column="19"/></name> <argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">pathname<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="31">"r"<pos:position pos:line="15" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call><operator pos:line="15" pos:column="35">)<pos:position pos:line="15" pos:column="36"/></operator></expr>)<pos:position pos:line="15" pos:column="37"/></condition><then pos:line="15" pos:column="37">
    <block type="pseudo"><return pos:line="16" pos:column="5">return;<pos:position pos:line="16" pos:column="12"/></return></block></then></if>

  <while pos:line="18" pos:column="3">while <condition pos:line="18" pos:column="9">(<expr><operator pos:line="18" pos:column="10">(<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">buff<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <call><name pos:line="18" pos:column="18">mutt_read_line<pos:position pos:line="18" pos:column="32"/></name> <argument_list pos:line="18" pos:column="33">(<argument><expr><name pos:line="18" pos:column="34">buff<pos:position pos:line="18" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="40">&amp;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="41">sz<pos:position pos:line="18" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="45">fp<pos:position pos:line="18" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="49">&amp;<pos:position pos:line="18" pos:column="54"/></operator><name pos:line="18" pos:column="50">line<pos:position pos:line="18" pos:column="54"/></name></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call><operator pos:line="18" pos:column="55">)<pos:position pos:line="18" pos:column="56"/></operator></expr>)<pos:position pos:line="18" pos:column="57"/></condition>
  <block pos:line="19" pos:column="3">{
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">!<pos:position pos:line="20" pos:column="10"/></operator><operator pos:line="20" pos:column="10">(<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="11">t<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <call><name pos:line="20" pos:column="15">strtok<pos:position pos:line="20" pos:column="21"/></name> <argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">buff<pos:position pos:line="20" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="29">" \t:"<pos:position pos:line="20" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="36"/></argument_list></call><operator pos:line="20" pos:column="36">)<pos:position pos:line="20" pos:column="37"/></operator></expr>)<pos:position pos:line="20" pos:column="38"/></condition><then pos:line="20" pos:column="38">
      <block type="pseudo"><continue pos:line="21" pos:column="7">continue;<pos:position pos:line="21" pos:column="16"/></continue></block></then></if>
    
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">!<pos:position pos:line="23" pos:column="10"/></operator><call><name pos:line="23" pos:column="10">mutt_strcmp<pos:position pos:line="23" pos:column="21"/></name> <argument_list pos:line="23" pos:column="22">(<argument><expr><name pos:line="23" pos:column="23">t<pos:position pos:line="23" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="26">MhUnseen<pos:position pos:line="23" pos:column="34"/></name></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="36"/></condition><then pos:line="23" pos:column="36">
      <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="7">f<pos:position pos:line="24" pos:column="8"/></name> <operator pos:line="24" pos:column="9">=<pos:position pos:line="24" pos:column="10"/></operator> <name pos:line="24" pos:column="11">MH_SEQ_UNSEEN<pos:position pos:line="24" pos:column="24"/></name></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt></block></then>
    <elseif pos:line="25" pos:column="5">else <if pos:line="25" pos:column="10">if <condition pos:line="25" pos:column="13">(<expr><operator pos:line="25" pos:column="14">!<pos:position pos:line="25" pos:column="15"/></operator><call><name pos:line="25" pos:column="15">mutt_strcmp<pos:position pos:line="25" pos:column="26"/></name> <argument_list pos:line="25" pos:column="27">(<argument><expr><name pos:line="25" pos:column="28">t<pos:position pos:line="25" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="31">MhFlagged<pos:position pos:line="25" pos:column="40"/></name></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="42"/></condition><then pos:line="25" pos:column="42">
      <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="7">f<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator> <name pos:line="26" pos:column="11">MH_SEQ_FLAGGED<pos:position pos:line="26" pos:column="25"/></name></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="27" pos:column="5">else <if pos:line="27" pos:column="10">if <condition pos:line="27" pos:column="13">(<expr><operator pos:line="27" pos:column="14">!<pos:position pos:line="27" pos:column="15"/></operator><call><name pos:line="27" pos:column="15">mutt_strcmp<pos:position pos:line="27" pos:column="26"/></name> <argument_list pos:line="27" pos:column="27">(<argument><expr><name pos:line="27" pos:column="28">t<pos:position pos:line="27" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="31">MhReplied<pos:position pos:line="27" pos:column="40"/></name></expr></argument>)<pos:position pos:line="27" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="42"/></condition><then pos:line="27" pos:column="42">
      <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="7">f<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">=<pos:position pos:line="28" pos:column="10"/></operator> <name pos:line="28" pos:column="11">MH_SEQ_REPLIED<pos:position pos:line="28" pos:column="25"/></name></expr>;<pos:position pos:line="28" pos:column="26"/></expr_stmt></block></then></if></elseif>
    <else pos:line="29" pos:column="5">else	<comment type="block" pos:line="29" pos:column="17">/* unknown sequence */</comment>
      <block type="pseudo"><continue pos:line="30" pos:column="7">continue;<pos:position pos:line="30" pos:column="16"/></continue></block></else></if>
    
    <while pos:line="32" pos:column="5">while <condition pos:line="32" pos:column="11">(<expr><operator pos:line="32" pos:column="12">(<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="13">t<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">=<pos:position pos:line="32" pos:column="16"/></operator> <call><name pos:line="32" pos:column="17">strtok<pos:position pos:line="32" pos:column="23"/></name> <argument_list pos:line="32" pos:column="24">(<argument><expr><name pos:line="32" pos:column="25">NULL<pos:position pos:line="32" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="31">" \t:"<pos:position pos:line="32" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="38"/></argument_list></call><operator pos:line="32" pos:column="38">)<pos:position pos:line="32" pos:column="39"/></operator></expr>)<pos:position pos:line="32" pos:column="40"/></condition>
    <block pos:line="33" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">mh_read_token<pos:position pos:line="34" pos:column="20"/></name> <argument_list pos:line="34" pos:column="21">(<argument><expr><name pos:line="34" pos:column="22">t<pos:position pos:line="34" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="25">&amp;<pos:position pos:line="34" pos:column="30"/></operator><name pos:line="34" pos:column="26">first<pos:position pos:line="34" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="33">&amp;<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="34">last<pos:position pos:line="34" pos:column="38"/></name></expr></argument>)<pos:position pos:line="34" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="40"/></expr_stmt>
      <for pos:line="35" pos:column="7">for <control pos:line="35" pos:column="11">(<init pos:line="35" pos:column="12">;<pos:position pos:line="35" pos:column="13"/></init> <condition><expr><name pos:line="35" pos:column="14">first<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">&lt;=<pos:position pos:line="35" pos:column="25"/></operator> <name pos:line="35" pos:column="23">last<pos:position pos:line="35" pos:column="27"/></name></expr>;<pos:position pos:line="35" pos:column="28"/></condition> <incr><expr><name pos:line="35" pos:column="29">first<pos:position pos:line="35" pos:column="34"/></name><operator pos:line="35" pos:column="34">++<pos:position pos:line="35" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="35" pos:column="37"/></control>
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="9">mhs_set<pos:position pos:line="36" pos:column="16"/></name> <argument_list pos:line="36" pos:column="17">(<argument><expr><name pos:line="36" pos:column="18">mhs<pos:position pos:line="36" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="23">first<pos:position pos:line="36" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="30">f<pos:position pos:line="36" pos:column="31"/></name></expr></argument>)<pos:position pos:line="36" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="33"/></expr_stmt></block></for>
    }<pos:position pos:line="37" pos:column="6"/></block></while>
  }<pos:position pos:line="38" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="40" pos:column="3">safe_free<pos:position pos:line="40" pos:column="12"/></name> <argument_list pos:line="40" pos:column="13">(<argument><expr><operator pos:line="40" pos:column="14">(<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="15">void<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">*<pos:position pos:line="40" pos:column="21"/></operator><operator pos:line="40" pos:column="21">*<pos:position pos:line="40" pos:column="22"/></operator><operator pos:line="40" pos:column="22">)<pos:position pos:line="40" pos:column="23"/></operator> <operator pos:line="40" pos:column="24">&amp;<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="25">buff<pos:position pos:line="40" pos:column="29"/></name></expr></argument>)<pos:position pos:line="40" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="41" pos:column="3">safe_fclose<pos:position pos:line="41" pos:column="14"/></name> <argument_list pos:line="41" pos:column="15">(<argument><expr><operator pos:line="41" pos:column="16">&amp;<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="17">fp<pos:position pos:line="41" pos:column="19"/></name></expr></argument>)<pos:position pos:line="41" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="21"/></expr_stmt>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1783_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_my_hdr<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">BUFFER<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">buf<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">BUFFER<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">s<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">unsigned<pos:position pos:line="1" pos:column="58"/></name> <name pos:line="1" pos:column="59">long<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">data<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="70">BUFFER<pos:position pos:line="1" pos:column="76"/></name> <modifier pos:line="1" pos:column="77">*<pos:position pos:line="1" pos:column="78"/></modifier></type><name pos:line="1" pos:column="78">err<pos:position pos:line="1" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="82"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">LIST<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">tmp<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">keylen<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">p<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">mutt_extract_token<pos:position pos:line="7" pos:column="21"/></name> <argument_list pos:line="7" pos:column="22">(<argument><expr><name pos:line="7" pos:column="23">buf<pos:position pos:line="7" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="28">s<pos:position pos:line="7" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="31">MUTT_TOKEN_SPACE<pos:position pos:line="7" pos:column="47"/></name> <operator pos:line="7" pos:column="48">|<pos:position pos:line="7" pos:column="49"/></operator> <name pos:line="7" pos:column="50">MUTT_TOKEN_QUOTE<pos:position pos:line="7" pos:column="66"/></name></expr></argument>)<pos:position pos:line="7" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="68"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">(<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">p<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <call><name pos:line="8" pos:column="12">strpbrk<pos:position pos:line="8" pos:column="19"/></name> <argument_list pos:line="8" pos:column="20">(<argument><expr><name><name pos:line="8" pos:column="21">buf<pos:position pos:line="8" pos:column="24"/></name><operator pos:line="8" pos:column="24">-&gt;<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="26">data<pos:position pos:line="8" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="32">": \t"<pos:position pos:line="8" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call><operator pos:line="8" pos:column="39">)<pos:position pos:line="8" pos:column="40"/></operator> <operator pos:line="8" pos:column="41">==<pos:position pos:line="8" pos:column="43"/></operator> <name pos:line="8" pos:column="44">NULL<pos:position pos:line="8" pos:column="48"/></name> <operator pos:line="8" pos:column="49">||<pos:position pos:line="8" pos:column="51"/></operator> <operator pos:line="8" pos:column="52">*<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="53">p<pos:position pos:line="8" pos:column="54"/></name> <operator pos:line="8" pos:column="55">!=<pos:position pos:line="8" pos:column="57"/></operator> <literal type="char" pos:line="8" pos:column="58">':'<pos:position pos:line="8" pos:column="61"/></literal></expr>)<pos:position pos:line="8" pos:column="62"/></condition><then pos:line="8" pos:column="62">
  <block pos:line="9" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">strfcpy<pos:position pos:line="10" pos:column="12"/></name> <argument_list pos:line="10" pos:column="13">(<argument><expr><name><name pos:line="10" pos:column="14">err<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-&gt;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="19">data<pos:position pos:line="10" pos:column="23"/></name></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="25">_<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><literal type="string" pos:line="10" pos:column="27">"invalid header field"<pos:position pos:line="10" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="52">err<pos:position pos:line="10" pos:column="55"/></name><operator pos:line="10" pos:column="55">-&gt;<pos:position pos:line="10" pos:column="60"/></operator><name pos:line="10" pos:column="57">dsize<pos:position pos:line="10" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="64"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><operator pos:line="11" pos:column="13">-<pos:position pos:line="11" pos:column="14"/></operator><literal type="number" pos:line="11" pos:column="14">1<pos:position pos:line="11" pos:column="15"/></literal><operator pos:line="11" pos:column="15">)<pos:position pos:line="11" pos:column="16"/></operator></expr>;<pos:position pos:line="11" pos:column="17"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="13" pos:column="3">keylen<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <name pos:line="13" pos:column="12">p<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">-<pos:position pos:line="13" pos:column="15"/></operator> <name><name pos:line="13" pos:column="16">buf<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">data<pos:position pos:line="13" pos:column="25"/></name></name> <operator pos:line="13" pos:column="26">+<pos:position pos:line="13" pos:column="27"/></operator> <literal type="number" pos:line="13" pos:column="28">1<pos:position pos:line="13" pos:column="29"/></literal></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">UserHeader<pos:position pos:line="15" pos:column="17"/></name></expr>)<pos:position pos:line="15" pos:column="18"/></condition><then pos:line="15" pos:column="18">
  <block pos:line="16" pos:column="3">{
    <for pos:line="17" pos:column="5">for <control pos:line="17" pos:column="9">(<init><expr><name pos:line="17" pos:column="10">tmp<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <name pos:line="17" pos:column="16">UserHeader<pos:position pos:line="17" pos:column="26"/></name></expr>;<pos:position pos:line="17" pos:column="27"/></init> <condition pos:line="17" pos:column="28">;<pos:position pos:line="17" pos:column="29"/></condition> <incr><expr><name pos:line="17" pos:column="30">tmp<pos:position pos:line="17" pos:column="33"/></name> <operator pos:line="17" pos:column="34">=<pos:position pos:line="17" pos:column="35"/></operator> <name><name pos:line="17" pos:column="36">tmp<pos:position pos:line="17" pos:column="39"/></name><operator pos:line="17" pos:column="39">-&gt;<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="41">next<pos:position pos:line="17" pos:column="45"/></name></name></expr></incr>)<pos:position pos:line="17" pos:column="46"/></control>
    <block pos:line="18" pos:column="5">{
      <comment type="block" pos:line="19" pos:column="7">/* see if there is already a field by this name */</comment>
      <if pos:line="20" pos:column="7">if <condition pos:line="20" pos:column="10">(<expr><call><name pos:line="20" pos:column="11">ascii_strncasecmp<pos:position pos:line="20" pos:column="28"/></name> <argument_list pos:line="20" pos:column="29">(<argument><expr><name><name pos:line="20" pos:column="30">buf<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">-&gt;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="35">data<pos:position pos:line="20" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="41">tmp<pos:position pos:line="20" pos:column="44"/></name><operator pos:line="20" pos:column="44">-&gt;<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="46">data<pos:position pos:line="20" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="52">keylen<pos:position pos:line="20" pos:column="58"/></name></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></call> <operator pos:line="20" pos:column="60">==<pos:position pos:line="20" pos:column="62"/></operator> <literal type="number" pos:line="20" pos:column="63">0<pos:position pos:line="20" pos:column="64"/></literal></expr>)<pos:position pos:line="20" pos:column="65"/></condition><then pos:line="20" pos:column="65">
      <block pos:line="21" pos:column="7">{
	<comment type="block" pos:line="22" pos:column="9">/* replace the old value */</comment>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">FREE<pos:position pos:line="23" pos:column="13"/></name> <argument_list pos:line="23" pos:column="14">(<argument><expr><operator pos:line="23" pos:column="15">&amp;<pos:position pos:line="23" pos:column="20"/></operator><name><name pos:line="23" pos:column="16">tmp<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">-&gt;<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="21">data<pos:position pos:line="23" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="24" pos:column="9">tmp<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">-&gt;<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="14">data<pos:position pos:line="24" pos:column="18"/></name></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <name><name pos:line="24" pos:column="21">buf<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">-&gt;<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="26">data<pos:position pos:line="24" pos:column="30"/></name></name></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">mutt_buffer_init<pos:position pos:line="25" pos:column="25"/></name> <argument_list pos:line="25" pos:column="26">(<argument><expr><name pos:line="25" pos:column="27">buf<pos:position pos:line="25" pos:column="30"/></name></expr></argument>)<pos:position pos:line="25" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>
	<return pos:line="26" pos:column="9">return <expr><literal type="number" pos:line="26" pos:column="16">0<pos:position pos:line="26" pos:column="17"/></literal></expr>;<pos:position pos:line="26" pos:column="18"/></return>
      }<pos:position pos:line="27" pos:column="8"/></block></then></if>
      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><operator pos:line="28" pos:column="11">!<pos:position pos:line="28" pos:column="12"/></operator><name><name pos:line="28" pos:column="12">tmp<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">-&gt;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="17">next<pos:position pos:line="28" pos:column="21"/></name></name></expr>)<pos:position pos:line="28" pos:column="22"/></condition><then pos:line="28" pos:column="22">
	<block type="pseudo"><break pos:line="29" pos:column="9">break;<pos:position pos:line="29" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></for>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">tmp<pos:position pos:line="31" pos:column="8"/></name><operator pos:line="31" pos:column="8">-&gt;<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="10">next<pos:position pos:line="31" pos:column="14"/></name></name> <operator pos:line="31" pos:column="15">=<pos:position pos:line="31" pos:column="16"/></operator> <call><name pos:line="31" pos:column="17">mutt_new_list<pos:position pos:line="31" pos:column="30"/></name> <argument_list pos:line="31" pos:column="31">()<pos:position pos:line="31" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="32" pos:column="5">tmp<pos:position pos:line="32" pos:column="8"/></name> <operator pos:line="32" pos:column="9">=<pos:position pos:line="32" pos:column="10"/></operator> <name><name pos:line="32" pos:column="11">tmp<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">-&gt;<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="16">next<pos:position pos:line="32" pos:column="20"/></name></name></expr>;<pos:position pos:line="32" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="33" pos:column="4"/></block></then>
  <else pos:line="34" pos:column="3">else
  <block pos:line="35" pos:column="3">{
    <expr_stmt><expr><name pos:line="36" pos:column="5">tmp<pos:position pos:line="36" pos:column="8"/></name> <operator pos:line="36" pos:column="9">=<pos:position pos:line="36" pos:column="10"/></operator> <call><name pos:line="36" pos:column="11">mutt_new_list<pos:position pos:line="36" pos:column="24"/></name> <argument_list pos:line="36" pos:column="25">()<pos:position pos:line="36" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="37" pos:column="5">UserHeader<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <name pos:line="37" pos:column="18">tmp<pos:position pos:line="37" pos:column="21"/></name></expr>;<pos:position pos:line="37" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></else></if>
  <expr_stmt><expr><name><name pos:line="39" pos:column="3">tmp<pos:position pos:line="39" pos:column="6"/></name><operator pos:line="39" pos:column="6">-&gt;<pos:position pos:line="39" pos:column="11"/></operator><name pos:line="39" pos:column="8">data<pos:position pos:line="39" pos:column="12"/></name></name> <operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator> <name><name pos:line="39" pos:column="15">buf<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">-&gt;<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="20">data<pos:position pos:line="39" pos:column="24"/></name></name></expr>;<pos:position pos:line="39" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">mutt_buffer_init<pos:position pos:line="40" pos:column="19"/></name> <argument_list pos:line="40" pos:column="20">(<argument><expr><name pos:line="40" pos:column="21">buf<pos:position pos:line="40" pos:column="24"/></name></expr></argument>)<pos:position pos:line="40" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="26"/></expr_stmt>
  <return pos:line="41" pos:column="3">return <expr><literal type="number" pos:line="41" pos:column="10">0<pos:position pos:line="41" pos:column="11"/></literal></expr>;<pos:position pos:line="41" pos:column="12"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

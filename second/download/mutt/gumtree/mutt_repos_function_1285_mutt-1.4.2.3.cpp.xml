<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1285_mutt-1.4.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cmd_parse_fetch<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">IMAP_DATA<pos:position pos:line="1" pos:column="39"/></name><modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type> <name pos:line="1" pos:column="41">idata<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name><modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type> <name pos:line="1" pos:column="54">s<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">msgno<pos:position pos:line="3" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="14">cur<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">HEADER<pos:position pos:line="4" pos:column="9"/></name><modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type> <name pos:line="4" pos:column="11">h<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name pos:line="4" pos:column="15">NULL<pos:position pos:line="4" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">dprint<pos:position pos:line="6" pos:column="9"/></name> <argument_list pos:line="6" pos:column="10">(<argument><expr><literal type="number" pos:line="6" pos:column="11">2<pos:position pos:line="6" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="6" pos:column="14">(<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">debugfile<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">,<pos:position pos:line="6" pos:column="25"/></operator> <literal type="string" pos:line="6" pos:column="26">"Handling FETCH\n"<pos:position pos:line="6" pos:column="44"/></literal><operator pos:line="6" pos:column="44">)<pos:position pos:line="6" pos:column="45"/></operator></expr></argument>)<pos:position pos:line="6" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="47"/></expr_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">msgno<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <call><name pos:line="8" pos:column="11">atoi<pos:position pos:line="8" pos:column="15"/></name> <argument_list pos:line="8" pos:column="16">(<argument><expr><name pos:line="8" pos:column="17">s<pos:position pos:line="8" pos:column="18"/></name></expr></argument>)<pos:position pos:line="8" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="20"/></expr_stmt>
  
  <comment type="block" pos:line="10" pos:column="3">/* see cmd_parse_expunge */</comment>
  <for pos:line="11" pos:column="3">for <control pos:line="11" pos:column="7">(<init><expr><name pos:line="11" pos:column="8">cur<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <literal type="number" pos:line="11" pos:column="14">0<pos:position pos:line="11" pos:column="15"/></literal></expr>;<pos:position pos:line="11" pos:column="16"/></init> <condition><expr><name pos:line="11" pos:column="17">cur<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">&lt;<pos:position pos:line="11" pos:column="25"/></operator> <name><name pos:line="11" pos:column="23">idata<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">-&gt;<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="30">ctx<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">-&gt;<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="35">msgcount<pos:position pos:line="11" pos:column="43"/></name></name></expr>;<pos:position pos:line="11" pos:column="44"/></condition> <incr><expr><name pos:line="11" pos:column="45">cur<pos:position pos:line="11" pos:column="48"/></name><operator pos:line="11" pos:column="48">++<pos:position pos:line="11" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="51"/></control>
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><name pos:line="13" pos:column="5">h<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <name><name pos:line="13" pos:column="9">idata<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">ctx<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">hdrs<pos:position pos:line="13" pos:column="25"/></name><index pos:line="13" pos:column="25">[<expr><name pos:line="13" pos:column="26">cur<pos:position pos:line="13" pos:column="29"/></name></expr>]<pos:position pos:line="13" pos:column="30"/></index></name></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>
    
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">h<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">active<pos:position pos:line="15" pos:column="18"/></name></name> <operator pos:line="15" pos:column="19">&amp;&amp;<pos:position pos:line="15" pos:column="29"/></operator> <name><name pos:line="15" pos:column="22">h<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">-&gt;<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="25">index<pos:position pos:line="15" pos:column="30"/></name></name><operator pos:line="15" pos:column="30">+<pos:position pos:line="15" pos:column="31"/></operator><literal type="number" pos:line="15" pos:column="31">1<pos:position pos:line="15" pos:column="32"/></literal> <operator pos:line="15" pos:column="33">==<pos:position pos:line="15" pos:column="35"/></operator> <name pos:line="15" pos:column="36">msgno<pos:position pos:line="15" pos:column="41"/></name></expr>)<pos:position pos:line="15" pos:column="42"/></condition><then pos:line="15" pos:column="42">
    <block pos:line="16" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">dprint<pos:position pos:line="17" pos:column="13"/></name> <argument_list pos:line="17" pos:column="14">(<argument><expr><literal type="number" pos:line="17" pos:column="15">2<pos:position pos:line="17" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="18">(<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="19">debugfile<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">,<pos:position pos:line="17" pos:column="29"/></operator> <literal type="string" pos:line="17" pos:column="30">"Message UID %d updated\n"<pos:position pos:line="17" pos:column="56"/></literal><operator pos:line="17" pos:column="56">,<pos:position pos:line="17" pos:column="57"/></operator> <call><name pos:line="17" pos:column="58">HEADER_DATA<pos:position pos:line="17" pos:column="69"/></name><argument_list pos:line="17" pos:column="69">(<argument><expr><name pos:line="17" pos:column="70">h<pos:position pos:line="17" pos:column="71"/></name></expr></argument>)<pos:position pos:line="17" pos:column="72"/></argument_list></call><operator pos:line="17" pos:column="72">-&gt;<pos:position pos:line="17" pos:column="77"/></operator><name pos:line="17" pos:column="74">uid<pos:position pos:line="17" pos:column="77"/></name><operator pos:line="17" pos:column="77">)<pos:position pos:line="17" pos:column="78"/></operator></expr></argument>)<pos:position pos:line="17" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="80"/></expr_stmt>
      <break pos:line="18" pos:column="7">break;<pos:position pos:line="18" pos:column="13"/></break>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="21" pos:column="5">h<pos:position pos:line="21" pos:column="6"/></name> <operator pos:line="21" pos:column="7">=<pos:position pos:line="21" pos:column="8"/></operator> <name pos:line="21" pos:column="9">NULL<pos:position pos:line="21" pos:column="13"/></name></expr>;<pos:position pos:line="21" pos:column="14"/></expr_stmt>
  }<pos:position pos:line="22" pos:column="4"/></block></for>
  
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><operator pos:line="24" pos:column="7">!<pos:position pos:line="24" pos:column="8"/></operator><name pos:line="24" pos:column="8">h<pos:position pos:line="24" pos:column="9"/></name></expr>)<pos:position pos:line="24" pos:column="10"/></condition><then pos:line="24" pos:column="10">
  <block pos:line="25" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">dprint<pos:position pos:line="26" pos:column="11"/></name> <argument_list pos:line="26" pos:column="12">(<argument><expr><literal type="number" pos:line="26" pos:column="13">1<pos:position pos:line="26" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="26" pos:column="16">(<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">debugfile<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">,<pos:position pos:line="26" pos:column="27"/></operator> <literal type="string" pos:line="26" pos:column="28">"FETCH response ignored for this message\n"<pos:position pos:line="26" pos:column="71"/></literal><operator pos:line="26" pos:column="71">)<pos:position pos:line="26" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="74"/></expr_stmt>
    <return pos:line="27" pos:column="5">return;<pos:position pos:line="27" pos:column="12"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>
  
  <comment type="block" pos:line="30" pos:column="3">/* skip FETCH */</comment>
  <expr_stmt><expr><name pos:line="31" pos:column="3">s<pos:position pos:line="31" pos:column="4"/></name> <operator pos:line="31" pos:column="5">=<pos:position pos:line="31" pos:column="6"/></operator> <call><name pos:line="31" pos:column="7">imap_next_word<pos:position pos:line="31" pos:column="21"/></name> <argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">s<pos:position pos:line="31" pos:column="24"/></name></expr></argument>)<pos:position pos:line="31" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name pos:line="32" pos:column="3">s<pos:position pos:line="32" pos:column="4"/></name> <operator pos:line="32" pos:column="5">=<pos:position pos:line="32" pos:column="6"/></operator> <call><name pos:line="32" pos:column="7">imap_next_word<pos:position pos:line="32" pos:column="21"/></name> <argument_list pos:line="32" pos:column="22">(<argument><expr><name pos:line="32" pos:column="23">s<pos:position pos:line="32" pos:column="24"/></name></expr></argument>)<pos:position pos:line="32" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="26"/></expr_stmt>

  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><operator pos:line="34" pos:column="7">*<pos:position pos:line="34" pos:column="8"/></operator><name pos:line="34" pos:column="8">s<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">!=<pos:position pos:line="34" pos:column="12"/></operator> <literal type="char" pos:line="34" pos:column="13">'('<pos:position pos:line="34" pos:column="16"/></literal></expr>)<pos:position pos:line="34" pos:column="17"/></condition><then pos:line="34" pos:column="17">
  <block pos:line="35" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">dprint<pos:position pos:line="36" pos:column="11"/></name> <argument_list pos:line="36" pos:column="12">(<argument><expr><literal type="number" pos:line="36" pos:column="13">1<pos:position pos:line="36" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="36" pos:column="16">(<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="17">debugfile<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">,<pos:position pos:line="36" pos:column="27"/></operator> <literal type="string" pos:line="36" pos:column="28">"Malformed FETCH response"<pos:position pos:line="36" pos:column="54"/></literal><operator pos:line="36" pos:column="54">)<pos:position pos:line="36" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="36" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="57"/></expr_stmt>
    <return pos:line="37" pos:column="5">return;<pos:position pos:line="37" pos:column="12"/></return>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="39" pos:column="3">s<pos:position pos:line="39" pos:column="4"/></name><operator pos:line="39" pos:column="4">++<pos:position pos:line="39" pos:column="6"/></operator></expr>;<pos:position pos:line="39" pos:column="7"/></expr_stmt>

  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><call><name pos:line="41" pos:column="7">ascii_strncasecmp<pos:position pos:line="41" pos:column="24"/></name> <argument_list pos:line="41" pos:column="25">(<argument><expr><literal type="string" pos:line="41" pos:column="26">"FLAGS"<pos:position pos:line="41" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="35">s<pos:position pos:line="41" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="38">5<pos:position pos:line="41" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="40"/></argument_list></call> <operator pos:line="41" pos:column="41">!=<pos:position pos:line="41" pos:column="43"/></operator> <literal type="number" pos:line="41" pos:column="44">0<pos:position pos:line="41" pos:column="45"/></literal></expr>)<pos:position pos:line="41" pos:column="46"/></condition><then pos:line="41" pos:column="46">
  <block pos:line="42" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">dprint<pos:position pos:line="43" pos:column="11"/></name> <argument_list pos:line="43" pos:column="12">(<argument><expr><literal type="number" pos:line="43" pos:column="13">2<pos:position pos:line="43" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="43" pos:column="16">(<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="17">debugfile<pos:position pos:line="43" pos:column="26"/></name><operator pos:line="43" pos:column="26">,<pos:position pos:line="43" pos:column="27"/></operator> <literal type="string" pos:line="43" pos:column="28">"Only handle FLAGS updates\n"<pos:position pos:line="43" pos:column="57"/></literal><operator pos:line="43" pos:column="57">)<pos:position pos:line="43" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="43" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="60"/></expr_stmt>
    <return pos:line="44" pos:column="5">return;<pos:position pos:line="44" pos:column="12"/></return>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="47" pos:column="3">/* If server flags could conflict with mutt's flags, reopen the mailbox. */</comment>
  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><name><name pos:line="48" pos:column="7">h<pos:position pos:line="48" pos:column="8"/></name><operator pos:line="48" pos:column="8">-&gt;<pos:position pos:line="48" pos:column="13"/></operator><name pos:line="48" pos:column="10">changed<pos:position pos:line="48" pos:column="17"/></name></name></expr>)<pos:position pos:line="48" pos:column="18"/></condition><then pos:line="48" pos:column="18">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="49" pos:column="5">idata<pos:position pos:line="49" pos:column="10"/></name><operator pos:line="49" pos:column="10">-&gt;<pos:position pos:line="49" pos:column="15"/></operator><name pos:line="49" pos:column="12">reopen<pos:position pos:line="49" pos:column="18"/></name></name> <operator pos:line="49" pos:column="19">|=<pos:position pos:line="49" pos:column="21"/></operator> <name pos:line="49" pos:column="22">IMAP_EXPUNGE_PENDING<pos:position pos:line="49" pos:column="42"/></name></expr>;<pos:position pos:line="49" pos:column="43"/></expr_stmt></block></then>
  <else pos:line="50" pos:column="3">else <block pos:line="50" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">imap_set_flags<pos:position pos:line="51" pos:column="19"/></name> <argument_list pos:line="51" pos:column="20">(<argument><expr><name pos:line="51" pos:column="21">idata<pos:position pos:line="51" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="28">h<pos:position pos:line="51" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="31">s<pos:position pos:line="51" pos:column="32"/></name></expr></argument>)<pos:position pos:line="51" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="52" pos:column="5">idata<pos:position pos:line="52" pos:column="10"/></name><operator pos:line="52" pos:column="10">-&gt;<pos:position pos:line="52" pos:column="15"/></operator><name pos:line="52" pos:column="12">check_status<pos:position pos:line="52" pos:column="24"/></name></name> <operator pos:line="52" pos:column="25">=<pos:position pos:line="52" pos:column="26"/></operator> <name pos:line="52" pos:column="27">IMAP_FLAGS_PENDING<pos:position pos:line="52" pos:column="45"/></name></expr>;<pos:position pos:line="52" pos:column="46"/></expr_stmt>
  }<pos:position pos:line="53" pos:column="4"/></block></else></if>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

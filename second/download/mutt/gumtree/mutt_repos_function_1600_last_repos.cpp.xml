<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1600_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">maildir_check_empty<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">path<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">DIR<pos:position pos:line="3" pos:column="6"/></name> <modifier pos:line="3" pos:column="7">*<pos:position pos:line="3" pos:column="8"/></modifier></type><name pos:line="3" pos:column="8">dp<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">dirent<pos:position pos:line="4" pos:column="16"/></name></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">de<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">r<pos:position pos:line="5" pos:column="8"/></name> <init pos:line="5" pos:column="9">= <expr><literal type="number" pos:line="5" pos:column="11">1<pos:position pos:line="5" pos:column="12"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt> <comment type="block" pos:line="5" pos:column="14">/* assume empty until we find a message */</comment>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">realpath<pos:position pos:line="6" pos:column="16"/></name><index pos:line="6" pos:column="16">[<expr><name pos:line="6" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="6" pos:column="32"/></name></expr>]<pos:position pos:line="6" pos:column="33"/></index></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">iter<pos:position pos:line="7" pos:column="11"/></name> <init pos:line="7" pos:column="12">= <expr><literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* Strategy here is to look for any file not beginning with a period */</comment>

  <do pos:line="11" pos:column="3">do <block pos:line="11" pos:column="6">{
    <comment type="block" pos:line="12" pos:column="5">/* we do "cur" on the first iteration since its more likely that we'll
     * find old messages without having to scan both subdirs
     */</comment>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">snprintf<pos:position pos:line="15" pos:column="13"/></name> <argument_list pos:line="15" pos:column="14">(<argument><expr><name pos:line="15" pos:column="15">realpath<pos:position pos:line="15" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="25">sizeof <argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">realpath<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="44">"%s/%s"<pos:position pos:line="15" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="53">path<pos:position pos:line="15" pos:column="57"/></name></expr></argument>,
	      <argument><expr><ternary><condition><expr><name pos:line="16" pos:column="15">iter<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">==<pos:position pos:line="16" pos:column="22"/></operator> <literal type="number" pos:line="16" pos:column="23">0<pos:position pos:line="16" pos:column="24"/></literal></expr> ?<pos:position pos:line="16" pos:column="26"/></condition><then pos:line="16" pos:column="26"> <expr><literal type="string" pos:line="16" pos:column="27">"cur"<pos:position pos:line="16" pos:column="32"/></literal></expr> <pos:position pos:line="16" pos:column="33"/></then><else pos:line="16" pos:column="33">: <expr><literal type="string" pos:line="16" pos:column="35">"new"<pos:position pos:line="16" pos:column="40"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">(<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">dp<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">opendir<pos:position pos:line="17" pos:column="22"/></name> <argument_list pos:line="17" pos:column="23">(<argument><expr><name pos:line="17" pos:column="24">realpath<pos:position pos:line="17" pos:column="32"/></name></expr></argument>)<pos:position pos:line="17" pos:column="33"/></argument_list></call><operator pos:line="17" pos:column="33">)<pos:position pos:line="17" pos:column="34"/></operator> <operator pos:line="17" pos:column="35">==<pos:position pos:line="17" pos:column="37"/></operator> <name pos:line="17" pos:column="38">NULL<pos:position pos:line="17" pos:column="42"/></name></expr>)<pos:position pos:line="17" pos:column="43"/></condition><then pos:line="17" pos:column="43">
      <block type="pseudo"><return pos:line="18" pos:column="7">return <expr><operator pos:line="18" pos:column="14">-<pos:position pos:line="18" pos:column="15"/></operator><literal type="number" pos:line="18" pos:column="15">1<pos:position pos:line="18" pos:column="16"/></literal></expr>;<pos:position pos:line="18" pos:column="17"/></return></block></then></if>
    <while pos:line="19" pos:column="5">while <condition pos:line="19" pos:column="11">(<expr><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">de<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <call><name pos:line="19" pos:column="18">readdir<pos:position pos:line="19" pos:column="25"/></name> <argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">dp<pos:position pos:line="19" pos:column="29"/></name></expr></argument>)<pos:position pos:line="19" pos:column="30"/></argument_list></call><operator pos:line="19" pos:column="30">)<pos:position pos:line="19" pos:column="31"/></operator></expr>)<pos:position pos:line="19" pos:column="32"/></condition>
    <block pos:line="20" pos:column="5">{
      <if pos:line="21" pos:column="7">if <condition pos:line="21" pos:column="10">(<expr><operator pos:line="21" pos:column="11">*<pos:position pos:line="21" pos:column="12"/></operator><name><name pos:line="21" pos:column="12">de<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">-&gt;<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="16">d_name<pos:position pos:line="21" pos:column="22"/></name></name> <operator pos:line="21" pos:column="23">!=<pos:position pos:line="21" pos:column="25"/></operator> <literal type="char" pos:line="21" pos:column="26">'.'<pos:position pos:line="21" pos:column="29"/></literal></expr>)<pos:position pos:line="21" pos:column="30"/></condition><then pos:line="21" pos:column="30">
      <block pos:line="22" pos:column="7">{
	<expr_stmt><expr><name pos:line="23" pos:column="9">r<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <literal type="number" pos:line="23" pos:column="13">0<pos:position pos:line="23" pos:column="14"/></literal></expr>;<pos:position pos:line="23" pos:column="15"/></expr_stmt>
	<break pos:line="24" pos:column="9">break;<pos:position pos:line="24" pos:column="15"/></break>
      }<pos:position pos:line="25" pos:column="8"/></block></then></if>
    }<pos:position pos:line="26" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">closedir<pos:position pos:line="27" pos:column="13"/></name> <argument_list pos:line="27" pos:column="14">(<argument><expr><name pos:line="27" pos:column="15">dp<pos:position pos:line="27" pos:column="17"/></name></expr></argument>)<pos:position pos:line="27" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">iter<pos:position pos:line="28" pos:column="9"/></name><operator pos:line="28" pos:column="9">++<pos:position pos:line="28" pos:column="11"/></operator></expr>;<pos:position pos:line="28" pos:column="12"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block> while <condition pos:line="29" pos:column="11">(<expr><name pos:line="29" pos:column="12">r<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">&amp;&amp;<pos:position pos:line="29" pos:column="24"/></operator> <name pos:line="29" pos:column="17">iter<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">&lt;<pos:position pos:line="29" pos:column="26"/></operator> <literal type="number" pos:line="29" pos:column="24">2<pos:position pos:line="29" pos:column="25"/></literal></expr>)<pos:position pos:line="29" pos:column="26"/></condition>;<pos:position pos:line="29" pos:column="27"/></do>

  <return pos:line="31" pos:column="3">return <expr><name pos:line="31" pos:column="10">r<pos:position pos:line="31" pos:column="11"/></name></expr>;<pos:position pos:line="31" pos:column="12"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_495_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_multi_choice<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">prompt<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">letters<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">event_t<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">ch<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">choice<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">redraw<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><literal type="number" pos:line="5" pos:column="16">1<pos:position pos:line="5" pos:column="17"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="19">prompt_lines<pos:position pos:line="5" pos:column="31"/></name> <init pos:line="5" pos:column="32">= <expr><literal type="number" pos:line="5" pos:column="34">1<pos:position pos:line="5" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">p<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>

  <macro><name pos:line="8" pos:column="3">FOREVER<pos:position pos:line="8" pos:column="10"/></name></macro>
  <block pos:line="9" pos:column="3">{
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">redraw<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">||<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="19">SigWinch<pos:position pos:line="10" pos:column="27"/></name></expr>)<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28">
    <block pos:line="11" pos:column="5">{
      <expr_stmt><expr><name pos:line="12" pos:column="7">redraw<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></expr_stmt>
<cpp:if pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">if<pos:position pos:line="13" pos:column="4"/></cpp:directive> <expr><call><name pos:line="13" pos:column="5">defined<pos:position pos:line="13" pos:column="12"/></name> <argument_list pos:line="13" pos:column="13">(<argument><expr><name pos:line="13" pos:column="14">USE_SLANG_CURSES<pos:position pos:line="13" pos:column="30"/></name></expr></argument>)<pos:position pos:line="13" pos:column="31"/></argument_list></call> <operator pos:line="13" pos:column="32">||<pos:position pos:line="13" pos:column="34"/></operator> <call><name pos:line="13" pos:column="35">defined<pos:position pos:line="13" pos:column="42"/></name> <argument_list pos:line="13" pos:column="43">(<argument><expr><name pos:line="13" pos:column="44">HAVE_RESIZETERM<pos:position pos:line="13" pos:column="59"/></name></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call></expr></cpp:if>
      <if pos:line="14" pos:column="7">if <condition pos:line="14" pos:column="10">(<expr><name pos:line="14" pos:column="11">SigWinch<pos:position pos:line="14" pos:column="19"/></name></expr>)<pos:position pos:line="14" pos:column="20"/></condition><then pos:line="14" pos:column="20">
      <block pos:line="15" pos:column="7">{
        <expr_stmt><expr><name pos:line="16" pos:column="9">SigWinch<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <literal type="number" pos:line="16" pos:column="20">0<pos:position pos:line="16" pos:column="21"/></literal></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">mutt_resize_screen<pos:position pos:line="17" pos:column="27"/></name> <argument_list pos:line="17" pos:column="28">()<pos:position pos:line="17" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">clearok<pos:position pos:line="18" pos:column="16"/></name> <argument_list pos:line="18" pos:column="17">(<argument><expr><name pos:line="18" pos:column="18">stdscr<pos:position pos:line="18" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="26">TRUE<pos:position pos:line="18" pos:column="30"/></name></expr></argument>)<pos:position pos:line="18" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">mutt_current_menu_redraw<pos:position pos:line="19" pos:column="33"/></name> <argument_list pos:line="19" pos:column="34">()<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>
      }<pos:position pos:line="20" pos:column="8"/></block></then></if>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>
      <if pos:line="22" pos:column="7">if <condition pos:line="22" pos:column="10">(<expr><name><name pos:line="22" pos:column="11">MuttMessageWindow<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">-&gt;<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="30">cols<pos:position pos:line="22" pos:column="34"/></name></name></expr>)<pos:position pos:line="22" pos:column="35"/></condition><then pos:line="22" pos:column="35">
      <block pos:line="23" pos:column="7">{
        <expr_stmt><expr><name pos:line="24" pos:column="9">prompt_lines<pos:position pos:line="24" pos:column="21"/></name> <operator pos:line="24" pos:column="22">=<pos:position pos:line="24" pos:column="23"/></operator> <operator pos:line="24" pos:column="24">(<pos:position pos:line="24" pos:column="25"/></operator><call><name pos:line="24" pos:column="25">mutt_strwidth<pos:position pos:line="24" pos:column="38"/></name> <argument_list pos:line="24" pos:column="39">(<argument><expr><name pos:line="24" pos:column="40">prompt<pos:position pos:line="24" pos:column="46"/></name></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></call> <operator pos:line="24" pos:column="48">+<pos:position pos:line="24" pos:column="49"/></operator> <name><name pos:line="24" pos:column="50">MuttMessageWindow<pos:position pos:line="24" pos:column="67"/></name><operator pos:line="24" pos:column="67">-&gt;<pos:position pos:line="24" pos:column="72"/></operator><name pos:line="24" pos:column="69">cols<pos:position pos:line="24" pos:column="73"/></name></name> <operator pos:line="24" pos:column="74">-<pos:position pos:line="24" pos:column="75"/></operator> <literal type="number" pos:line="24" pos:column="76">1<pos:position pos:line="24" pos:column="77"/></literal><operator pos:line="24" pos:column="77">)<pos:position pos:line="24" pos:column="78"/></operator> <operator pos:line="24" pos:column="79">/<pos:position pos:line="24" pos:column="80"/></operator>
          <name><name pos:line="25" pos:column="11">MuttMessageWindow<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">-&gt;<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="30">cols<pos:position pos:line="25" pos:column="34"/></name></name></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="26" pos:column="9">prompt_lines<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <call><name pos:line="26" pos:column="24">MAX<pos:position pos:line="26" pos:column="27"/></name> <argument_list pos:line="26" pos:column="28">(<argument><expr><literal type="number" pos:line="26" pos:column="29">1<pos:position pos:line="26" pos:column="30"/></literal></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="32">MIN<pos:position pos:line="26" pos:column="35"/></name> <argument_list pos:line="26" pos:column="36">(<argument><expr><literal type="number" pos:line="26" pos:column="37">3<pos:position pos:line="26" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="40">prompt_lines<pos:position pos:line="26" pos:column="52"/></name></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="55"/></expr_stmt>
      }<pos:position pos:line="27" pos:column="8"/></block></then></if>
      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><name pos:line="28" pos:column="11">prompt_lines<pos:position pos:line="28" pos:column="23"/></name> <operator pos:line="28" pos:column="24">!=<pos:position pos:line="28" pos:column="26"/></operator> <name><name pos:line="28" pos:column="27">MuttMessageWindow<pos:position pos:line="28" pos:column="44"/></name><operator pos:line="28" pos:column="44">-&gt;<pos:position pos:line="28" pos:column="49"/></operator><name pos:line="28" pos:column="46">rows<pos:position pos:line="28" pos:column="50"/></name></name></expr>)<pos:position pos:line="28" pos:column="51"/></condition><then pos:line="28" pos:column="51">
      <block pos:line="29" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">reflow_message_window_rows<pos:position pos:line="30" pos:column="35"/></name> <argument_list pos:line="30" pos:column="36">(<argument><expr><name pos:line="30" pos:column="37">prompt_lines<pos:position pos:line="30" pos:column="49"/></name></expr></argument>)<pos:position pos:line="30" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">mutt_current_menu_redraw<pos:position pos:line="31" pos:column="33"/></name> <argument_list pos:line="31" pos:column="34">()<pos:position pos:line="31" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>
      }<pos:position pos:line="32" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="34" pos:column="7">SETCOLOR<pos:position pos:line="34" pos:column="15"/></name> <argument_list pos:line="34" pos:column="16">(<argument><expr><name pos:line="34" pos:column="17">MT_COLOR_PROMPT<pos:position pos:line="34" pos:column="32"/></name></expr></argument>)<pos:position pos:line="34" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="35" pos:column="7">mutt_window_mvaddstr<pos:position pos:line="35" pos:column="27"/></name> <argument_list pos:line="35" pos:column="28">(<argument><expr><name pos:line="35" pos:column="29">MuttMessageWindow<pos:position pos:line="35" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="48">0<pos:position pos:line="35" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="51">0<pos:position pos:line="35" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="54">prompt<pos:position pos:line="35" pos:column="60"/></name></expr></argument>)<pos:position pos:line="35" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="62"/></expr_stmt>
      <expr_stmt><expr><name pos:line="36" pos:column="7">NORMAL_COLOR<pos:position pos:line="36" pos:column="19"/></name></expr>;<pos:position pos:line="36" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="37" pos:column="7">mutt_window_clrtoeol<pos:position pos:line="37" pos:column="27"/></name> <argument_list pos:line="37" pos:column="28">(<argument><expr><name pos:line="37" pos:column="29">MuttMessageWindow<pos:position pos:line="37" pos:column="46"/></name></expr></argument>)<pos:position pos:line="37" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">mutt_refresh<pos:position pos:line="40" pos:column="17"/></name> <argument_list pos:line="40" pos:column="18">()<pos:position pos:line="40" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="21"/></expr_stmt>
    <comment type="block" pos:line="41" pos:column="5">/* SigWinch is not processed unless timeout is set */</comment>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">timeout<pos:position pos:line="42" pos:column="12"/></name> <argument_list pos:line="42" pos:column="13">(<argument><expr><literal type="number" pos:line="42" pos:column="14">30<pos:position pos:line="42" pos:column="16"/></literal> <operator pos:line="42" pos:column="17">*<pos:position pos:line="42" pos:column="18"/></operator> <literal type="number" pos:line="42" pos:column="19">1000<pos:position pos:line="42" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="43" pos:column="5">ch<pos:position pos:line="43" pos:column="7"/></name>  <operator pos:line="43" pos:column="9">=<pos:position pos:line="43" pos:column="10"/></operator> <call><name pos:line="43" pos:column="11">mutt_getch<pos:position pos:line="43" pos:column="21"/></name> <argument_list pos:line="43" pos:column="22">()<pos:position pos:line="43" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">timeout<pos:position pos:line="44" pos:column="12"/></name> <argument_list pos:line="44" pos:column="13">(<argument><expr><operator pos:line="44" pos:column="14">-<pos:position pos:line="44" pos:column="15"/></operator><literal type="number" pos:line="44" pos:column="15">1<pos:position pos:line="44" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="18"/></expr_stmt>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name><name pos:line="45" pos:column="9">ch<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">.<pos:position pos:line="45" pos:column="12"/></operator><name pos:line="45" pos:column="12">ch<pos:position pos:line="45" pos:column="14"/></name></name> <operator pos:line="45" pos:column="15">==<pos:position pos:line="45" pos:column="17"/></operator> <operator pos:line="45" pos:column="18">-<pos:position pos:line="45" pos:column="19"/></operator><literal type="number" pos:line="45" pos:column="19">2<pos:position pos:line="45" pos:column="20"/></literal></expr>)<pos:position pos:line="45" pos:column="21"/></condition><then pos:line="45" pos:column="21">
      <block type="pseudo"><continue pos:line="46" pos:column="7">continue;<pos:position pos:line="46" pos:column="16"/></continue></block></then></if>
    <comment type="block" pos:line="47" pos:column="5">/* (ch.ch == 0) is technically possible.  Treat the same as &lt; 0 (abort) */</comment>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name><name pos:line="48" pos:column="9">ch<pos:position pos:line="48" pos:column="11"/></name><operator pos:line="48" pos:column="11">.<pos:position pos:line="48" pos:column="12"/></operator><name pos:line="48" pos:column="12">ch<pos:position pos:line="48" pos:column="14"/></name></name> <operator pos:line="48" pos:column="15">&lt;=<pos:position pos:line="48" pos:column="20"/></operator> <literal type="number" pos:line="48" pos:column="18">0<pos:position pos:line="48" pos:column="19"/></literal> <operator pos:line="48" pos:column="20">||<pos:position pos:line="48" pos:column="22"/></operator> <call><name pos:line="48" pos:column="23">CI_is_return<pos:position pos:line="48" pos:column="35"/></name> <argument_list pos:line="48" pos:column="36">(<argument><expr><name><name pos:line="48" pos:column="37">ch<pos:position pos:line="48" pos:column="39"/></name><operator pos:line="48" pos:column="39">.<pos:position pos:line="48" pos:column="40"/></operator><name pos:line="48" pos:column="40">ch<pos:position pos:line="48" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="44"/></condition><then pos:line="48" pos:column="44">
    <block pos:line="49" pos:column="5">{
      <expr_stmt><expr><name pos:line="50" pos:column="7">choice<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">=<pos:position pos:line="50" pos:column="15"/></operator> <operator pos:line="50" pos:column="16">-<pos:position pos:line="50" pos:column="17"/></operator><literal type="number" pos:line="50" pos:column="17">1<pos:position pos:line="50" pos:column="18"/></literal></expr>;<pos:position pos:line="50" pos:column="19"/></expr_stmt>
      <break pos:line="51" pos:column="7">break;<pos:position pos:line="51" pos:column="13"/></break>
    }<pos:position pos:line="52" pos:column="6"/></block></then>
    <else pos:line="53" pos:column="5">else
    <block pos:line="54" pos:column="5">{
      <expr_stmt><expr><name pos:line="55" pos:column="7">p<pos:position pos:line="55" pos:column="8"/></name> <operator pos:line="55" pos:column="9">=<pos:position pos:line="55" pos:column="10"/></operator> <call><name pos:line="55" pos:column="11">strchr<pos:position pos:line="55" pos:column="17"/></name> <argument_list pos:line="55" pos:column="18">(<argument><expr><name pos:line="55" pos:column="19">letters<pos:position pos:line="55" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="28">ch<pos:position pos:line="55" pos:column="30"/></name><operator pos:line="55" pos:column="30">.<pos:position pos:line="55" pos:column="31"/></operator><name pos:line="55" pos:column="31">ch<pos:position pos:line="55" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="35"/></expr_stmt>
      <if pos:line="56" pos:column="7">if <condition pos:line="56" pos:column="10">(<expr><name pos:line="56" pos:column="11">p<pos:position pos:line="56" pos:column="12"/></name></expr>)<pos:position pos:line="56" pos:column="13"/></condition><then pos:line="56" pos:column="13">
      <block pos:line="57" pos:column="7">{
	<expr_stmt><expr><name pos:line="58" pos:column="9">choice<pos:position pos:line="58" pos:column="15"/></name> <operator pos:line="58" pos:column="16">=<pos:position pos:line="58" pos:column="17"/></operator> <name pos:line="58" pos:column="18">p<pos:position pos:line="58" pos:column="19"/></name> <operator pos:line="58" pos:column="20">-<pos:position pos:line="58" pos:column="21"/></operator> <name pos:line="58" pos:column="22">letters<pos:position pos:line="58" pos:column="29"/></name> <operator pos:line="58" pos:column="30">+<pos:position pos:line="58" pos:column="31"/></operator> <literal type="number" pos:line="58" pos:column="32">1<pos:position pos:line="58" pos:column="33"/></literal></expr>;<pos:position pos:line="58" pos:column="34"/></expr_stmt>
	<break pos:line="59" pos:column="9">break;<pos:position pos:line="59" pos:column="15"/></break>
      }<pos:position pos:line="60" pos:column="8"/></block></then>
      <elseif pos:line="61" pos:column="7">else <if pos:line="61" pos:column="12">if <condition pos:line="61" pos:column="15">(<expr><name><name pos:line="61" pos:column="16">ch<pos:position pos:line="61" pos:column="18"/></name><operator pos:line="61" pos:column="18">.<pos:position pos:line="61" pos:column="19"/></operator><name pos:line="61" pos:column="19">ch<pos:position pos:line="61" pos:column="21"/></name></name> <operator pos:line="61" pos:column="22">&lt;=<pos:position pos:line="61" pos:column="27"/></operator> <literal type="char" pos:line="61" pos:column="25">'9'<pos:position pos:line="61" pos:column="28"/></literal> <operator pos:line="61" pos:column="29">&amp;&amp;<pos:position pos:line="61" pos:column="39"/></operator> <name><name pos:line="61" pos:column="32">ch<pos:position pos:line="61" pos:column="34"/></name><operator pos:line="61" pos:column="34">.<pos:position pos:line="61" pos:column="35"/></operator><name pos:line="61" pos:column="35">ch<pos:position pos:line="61" pos:column="37"/></name></name> <operator pos:line="61" pos:column="38">&gt;<pos:position pos:line="61" pos:column="42"/></operator> <literal type="char" pos:line="61" pos:column="40">'0'<pos:position pos:line="61" pos:column="43"/></literal></expr>)<pos:position pos:line="61" pos:column="44"/></condition><then pos:line="61" pos:column="44">
      <block pos:line="62" pos:column="7">{
	<expr_stmt><expr><name pos:line="63" pos:column="9">choice<pos:position pos:line="63" pos:column="15"/></name> <operator pos:line="63" pos:column="16">=<pos:position pos:line="63" pos:column="17"/></operator> <name><name pos:line="63" pos:column="18">ch<pos:position pos:line="63" pos:column="20"/></name><operator pos:line="63" pos:column="20">.<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="21">ch<pos:position pos:line="63" pos:column="23"/></name></name> <operator pos:line="63" pos:column="24">-<pos:position pos:line="63" pos:column="25"/></operator> <literal type="char" pos:line="63" pos:column="26">'0'<pos:position pos:line="63" pos:column="29"/></literal></expr>;<pos:position pos:line="63" pos:column="30"/></expr_stmt>
	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name pos:line="64" pos:column="13">choice<pos:position pos:line="64" pos:column="19"/></name> <operator pos:line="64" pos:column="20">&lt;=<pos:position pos:line="64" pos:column="25"/></operator> <call><name pos:line="64" pos:column="23">mutt_strlen<pos:position pos:line="64" pos:column="34"/></name> <argument_list pos:line="64" pos:column="35">(<argument><expr><name pos:line="64" pos:column="36">letters<pos:position pos:line="64" pos:column="43"/></name></expr></argument>)<pos:position pos:line="64" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="45"/></condition><then pos:line="64" pos:column="45">
	  <block type="pseudo"><break pos:line="65" pos:column="11">break;<pos:position pos:line="65" pos:column="17"/></break></block></then></if>
      }<pos:position pos:line="66" pos:column="8"/></block></then></if></elseif></if>
    }<pos:position pos:line="67" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">BEEP<pos:position pos:line="68" pos:column="9"/></name> <argument_list pos:line="68" pos:column="10">()<pos:position pos:line="68" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="69" pos:column="4"/></block>
  <if pos:line="70" pos:column="3">if <condition pos:line="70" pos:column="6">(<expr><name><name pos:line="70" pos:column="7">MuttMessageWindow<pos:position pos:line="70" pos:column="24"/></name><operator pos:line="70" pos:column="24">-&gt;<pos:position pos:line="70" pos:column="29"/></operator><name pos:line="70" pos:column="26">rows<pos:position pos:line="70" pos:column="30"/></name></name> <operator pos:line="70" pos:column="31">!=<pos:position pos:line="70" pos:column="33"/></operator> <literal type="number" pos:line="70" pos:column="34">1<pos:position pos:line="70" pos:column="35"/></literal></expr>)<pos:position pos:line="70" pos:column="36"/></condition><then pos:line="70" pos:column="36">
  <block pos:line="71" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">reflow_message_window_rows<pos:position pos:line="72" pos:column="31"/></name> <argument_list pos:line="72" pos:column="32">(<argument><expr><literal type="number" pos:line="72" pos:column="33">1<pos:position pos:line="72" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="73" pos:column="5">mutt_current_menu_redraw<pos:position pos:line="73" pos:column="29"/></name> <argument_list pos:line="73" pos:column="30">()<pos:position pos:line="73" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="74" pos:column="4"/></block></then>
  <else pos:line="75" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="5">mutt_window_clearline<pos:position pos:line="76" pos:column="26"/></name> <argument_list pos:line="76" pos:column="27">(<argument><expr><name pos:line="76" pos:column="28">MuttMessageWindow<pos:position pos:line="76" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="47">0<pos:position pos:line="76" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="50"/></expr_stmt></block></else></if>
  <expr_stmt><expr><call><name pos:line="77" pos:column="3">mutt_refresh<pos:position pos:line="77" pos:column="15"/></name> <argument_list pos:line="77" pos:column="16">()<pos:position pos:line="77" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="19"/></expr_stmt>
  <return pos:line="78" pos:column="3">return <expr><name pos:line="78" pos:column="10">choice<pos:position pos:line="78" pos:column="16"/></name></expr>;<pos:position pos:line="78" pos:column="17"/></return>
}<pos:position pos:line="79" pos:column="2"/></block></function></unit>

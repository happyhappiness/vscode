<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1184_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">dotlock_invoke<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><specifier pos:line="1" pos:column="21">const<pos:position pos:line="1" pos:column="26"/></specifier> <name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">path<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">int<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">fd<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">flags<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">int<pos:position pos:line="1" pos:column="61"/></name></type> <name pos:line="1" pos:column="62">retry<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">currdir<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">r<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">DotlockFlags<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <name pos:line="6" pos:column="18">flags<pos:position pos:line="6" pos:column="23"/></name></expr>;<pos:position pos:line="6" pos:column="24"/></expr_stmt>
  
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">(<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">currdir<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <call><name pos:line="8" pos:column="18">open<pos:position pos:line="8" pos:column="22"/></name> <argument_list pos:line="8" pos:column="23">(<argument><expr><literal type="string" pos:line="8" pos:column="24">"."<pos:position pos:line="8" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="29">O_RDONLY<pos:position pos:line="8" pos:column="37"/></name></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></call><operator pos:line="8" pos:column="38">)<pos:position pos:line="8" pos:column="39"/></operator> <operator pos:line="8" pos:column="40">==<pos:position pos:line="8" pos:column="42"/></operator> <operator pos:line="8" pos:column="43">-<pos:position pos:line="8" pos:column="44"/></operator><literal type="number" pos:line="8" pos:column="44">1<pos:position pos:line="8" pos:column="45"/></literal></expr>)<pos:position pos:line="8" pos:column="46"/></condition><then pos:line="8" pos:column="46">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">DL_EX_ERROR<pos:position pos:line="9" pos:column="23"/></name></expr>;<pos:position pos:line="9" pos:column="24"/></return></block></then></if>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">!<pos:position pos:line="11" pos:column="8"/></operator><operator pos:line="11" pos:column="8">(<pos:position pos:line="11" pos:column="9"/></operator><name pos:line="11" pos:column="9">DotlockFlags<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">&amp;<pos:position pos:line="11" pos:column="27"/></operator> <name pos:line="11" pos:column="24">DL_FL_RETRY<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">)<pos:position pos:line="11" pos:column="36"/></operator> <operator pos:line="11" pos:column="37">||<pos:position pos:line="11" pos:column="39"/></operator> <name pos:line="11" pos:column="40">retry<pos:position pos:line="11" pos:column="45"/></name></expr>)<pos:position pos:line="11" pos:column="46"/></condition><then pos:line="11" pos:column="46">
    <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="5">Retry<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <name pos:line="12" pos:column="13">MAXLOCKATTEMPT<pos:position pos:line="12" pos:column="27"/></name></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt></block></then>
  <else pos:line="13" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="5">Retry<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <literal type="number" pos:line="14" pos:column="13">0<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></expr_stmt></block></else></if>
  
  <expr_stmt><expr><name pos:line="16" pos:column="3">r<pos:position pos:line="16" pos:column="4"/></name> <operator pos:line="16" pos:column="5">=<pos:position pos:line="16" pos:column="6"/></operator> <call><name pos:line="16" pos:column="7">dotlock_dispatch<pos:position pos:line="16" pos:column="23"/></name> <argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">path<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="31">fd<pos:position pos:line="16" pos:column="33"/></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt>
  
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">fchdir<pos:position pos:line="18" pos:column="9"/></name> <argument_list pos:line="18" pos:column="10">(<argument><expr><name pos:line="18" pos:column="11">currdir<pos:position pos:line="18" pos:column="18"/></name></expr></argument>)<pos:position pos:line="18" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">close<pos:position pos:line="19" pos:column="8"/></name> <argument_list pos:line="19" pos:column="9">(<argument><expr><name pos:line="19" pos:column="10">currdir<pos:position pos:line="19" pos:column="17"/></name></expr></argument>)<pos:position pos:line="19" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt>
  
  <return pos:line="21" pos:column="3">return <expr><name pos:line="21" pos:column="10">r<pos:position pos:line="21" pos:column="11"/></name></expr>;<pos:position pos:line="21" pos:column="12"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

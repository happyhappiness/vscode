<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_216_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_is_multipart_encrypted<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">BODY<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">b<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">p<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">!<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">b<pos:position pos:line="5" pos:column="9"/></name> <operator pos:line="5" pos:column="10">||<pos:position pos:line="5" pos:column="12"/></operator> <name><name pos:line="5" pos:column="13">b<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">-&gt;<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="16">type<pos:position pos:line="5" pos:column="20"/></name></name> <operator pos:line="5" pos:column="21">!=<pos:position pos:line="5" pos:column="23"/></operator> <name pos:line="5" pos:column="24">TYPEMULTIPART<pos:position pos:line="5" pos:column="37"/></name> <operator pos:line="5" pos:column="38">||<pos:position pos:line="5" pos:column="40"/></operator>
      <operator pos:line="6" pos:column="7">!<pos:position pos:line="6" pos:column="8"/></operator><name><name pos:line="6" pos:column="8">b<pos:position pos:line="6" pos:column="9"/></name><operator pos:line="6" pos:column="9">-&gt;<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="11">subtype<pos:position pos:line="6" pos:column="18"/></name></name> <operator pos:line="6" pos:column="19">||<pos:position pos:line="6" pos:column="21"/></operator> <call><name pos:line="6" pos:column="22">ascii_strcasecmp<pos:position pos:line="6" pos:column="38"/></name> <argument_list pos:line="6" pos:column="39">(<argument><expr><name><name pos:line="6" pos:column="40">b<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">-&gt;<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="43">subtype<pos:position pos:line="6" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="52">"encrypted"<pos:position pos:line="6" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="64"/></argument_list></call> <operator pos:line="6" pos:column="65">||<pos:position pos:line="6" pos:column="67"/></operator>
      <operator pos:line="7" pos:column="7">!<pos:position pos:line="7" pos:column="8"/></operator><operator pos:line="7" pos:column="8">(<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="9">p<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">=<pos:position pos:line="7" pos:column="12"/></operator> <call><name pos:line="7" pos:column="13">mutt_get_parameter<pos:position pos:line="7" pos:column="31"/></name> <argument_list pos:line="7" pos:column="32">(<argument><expr><literal type="string" pos:line="7" pos:column="33">"protocol"<pos:position pos:line="7" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="45">b<pos:position pos:line="7" pos:column="46"/></name><operator pos:line="7" pos:column="46">-&gt;<pos:position pos:line="7" pos:column="51"/></operator><name pos:line="7" pos:column="48">parameter<pos:position pos:line="7" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="58"/></argument_list></call><operator pos:line="7" pos:column="58">)<pos:position pos:line="7" pos:column="59"/></operator> <operator pos:line="7" pos:column="60">||<pos:position pos:line="7" pos:column="62"/></operator>
      <call><name pos:line="8" pos:column="7">ascii_strcasecmp<pos:position pos:line="8" pos:column="23"/></name> <argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">p<pos:position pos:line="8" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="28">"application/pgp-encrypted"<pos:position pos:line="8" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="57"/></condition><then pos:line="8" pos:column="57">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></return></block></then></if>
  
  <return pos:line="11" pos:column="3">return <expr><name pos:line="11" pos:column="10">PGPENCRYPT<pos:position pos:line="11" pos:column="20"/></name></expr>;<pos:position pos:line="11" pos:column="21"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

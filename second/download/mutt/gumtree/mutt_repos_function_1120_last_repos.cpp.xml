<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1120_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pop_read_header<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">POP_DATA<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">pop_data<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">HEADER<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">h<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">FILE<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">f<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">ret<pos:position pos:line="4" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="12">index<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">long<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">length<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">buf<pos:position pos:line="6" pos:column="11"/></name><index pos:line="6" pos:column="11">[<expr><name pos:line="6" pos:column="12">LONG_STRING<pos:position pos:line="6" pos:column="23"/></name></expr>]<pos:position pos:line="6" pos:column="24"/></index></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">tempfile<pos:position pos:line="7" pos:column="16"/></name><index pos:line="7" pos:column="16">[<expr><name pos:line="7" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="7" pos:column="32"/></name></expr>]<pos:position pos:line="7" pos:column="33"/></index></name></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">mutt_mktemp<pos:position pos:line="9" pos:column="14"/></name> <argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">tempfile<pos:position pos:line="9" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="26">sizeof <argument_list pos:line="9" pos:column="33">(<argument><expr><name pos:line="9" pos:column="34">tempfile<pos:position pos:line="9" pos:column="42"/></name></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">!<pos:position pos:line="10" pos:column="8"/></operator><operator pos:line="10" pos:column="8">(<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="9">f<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <call><name pos:line="10" pos:column="13">safe_fopen<pos:position pos:line="10" pos:column="23"/></name> <argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">tempfile<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="35">"w+"<pos:position pos:line="10" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="40"/></argument_list></call><operator pos:line="10" pos:column="40">)<pos:position pos:line="10" pos:column="41"/></operator></expr>)<pos:position pos:line="10" pos:column="42"/></condition><then pos:line="10" pos:column="42">
  <block pos:line="11" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">mutt_perror<pos:position pos:line="12" pos:column="16"/></name> <argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">tempfile<pos:position pos:line="12" pos:column="26"/></name></expr></argument>)<pos:position pos:line="12" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">-<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">3<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">snprintf<pos:position pos:line="16" pos:column="11"/></name> <argument_list pos:line="16" pos:column="12">(<argument><expr><name pos:line="16" pos:column="13">buf<pos:position pos:line="16" pos:column="16"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="18">sizeof <argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">buf<pos:position pos:line="16" pos:column="29"/></name></expr></argument>)<pos:position pos:line="16" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="32">"LIST %d\r\n"<pos:position pos:line="16" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="47">h<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">-&gt;<pos:position pos:line="16" pos:column="53"/></operator><name pos:line="16" pos:column="50">refno<pos:position pos:line="16" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="57"/></expr_stmt>
  <expr_stmt><expr><name pos:line="17" pos:column="3">ret<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <call><name pos:line="17" pos:column="9">pop_query<pos:position pos:line="17" pos:column="18"/></name> <argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">pop_data<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="30">buf<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="35">sizeof <argument_list pos:line="17" pos:column="42">(<argument><expr><name pos:line="17" pos:column="43">buf<pos:position pos:line="17" pos:column="46"/></name></expr></argument>)<pos:position pos:line="17" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">ret<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">==<pos:position pos:line="18" pos:column="13"/></operator> <literal type="number" pos:line="18" pos:column="14">0<pos:position pos:line="18" pos:column="15"/></literal></expr>)<pos:position pos:line="18" pos:column="16"/></condition><then pos:line="18" pos:column="16">
  <block pos:line="19" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">sscanf<pos:position pos:line="20" pos:column="11"/></name> <argument_list pos:line="20" pos:column="12">(<argument><expr><name pos:line="20" pos:column="13">buf<pos:position pos:line="20" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="18">"+OK %d %ld"<pos:position pos:line="20" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="32">&amp;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="33">index<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="40">&amp;<pos:position pos:line="20" pos:column="45"/></operator><name pos:line="20" pos:column="41">length<pos:position pos:line="20" pos:column="47"/></name></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="49"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">snprintf<pos:position pos:line="22" pos:column="13"/></name> <argument_list pos:line="22" pos:column="14">(<argument><expr><name pos:line="22" pos:column="15">buf<pos:position pos:line="22" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="20">sizeof <argument_list pos:line="22" pos:column="27">(<argument><expr><name pos:line="22" pos:column="28">buf<pos:position pos:line="22" pos:column="31"/></name></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="34">"TOP %d 0\r\n"<pos:position pos:line="22" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="50">h<pos:position pos:line="22" pos:column="51"/></name><operator pos:line="22" pos:column="51">-&gt;<pos:position pos:line="22" pos:column="56"/></operator><name pos:line="22" pos:column="53">refno<pos:position pos:line="22" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">ret<pos:position pos:line="23" pos:column="8"/></name> <operator pos:line="23" pos:column="9">=<pos:position pos:line="23" pos:column="10"/></operator> <call><name pos:line="23" pos:column="11">pop_fetch_data<pos:position pos:line="23" pos:column="25"/></name> <argument_list pos:line="23" pos:column="26">(<argument><expr><name pos:line="23" pos:column="27">pop_data<pos:position pos:line="23" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="37">buf<pos:position pos:line="23" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="42">NULL<pos:position pos:line="23" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="48">fetch_message<pos:position pos:line="23" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="63">f<pos:position pos:line="23" pos:column="64"/></name></expr></argument>)<pos:position pos:line="23" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="66"/></expr_stmt>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name><name pos:line="25" pos:column="9">pop_data<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">-&gt;<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="19">cmd_top<pos:position pos:line="25" pos:column="26"/></name></name> <operator pos:line="25" pos:column="27">==<pos:position pos:line="25" pos:column="29"/></operator> <literal type="number" pos:line="25" pos:column="30">2<pos:position pos:line="25" pos:column="31"/></literal></expr>)<pos:position pos:line="25" pos:column="32"/></condition><then pos:line="25" pos:column="32">
    <block pos:line="26" pos:column="5">{
      <if pos:line="27" pos:column="7">if <condition pos:line="27" pos:column="10">(<expr><name pos:line="27" pos:column="11">ret<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">==<pos:position pos:line="27" pos:column="17"/></operator> <literal type="number" pos:line="27" pos:column="18">0<pos:position pos:line="27" pos:column="19"/></literal></expr>)<pos:position pos:line="27" pos:column="20"/></condition><then pos:line="27" pos:column="20">
      <block pos:line="28" pos:column="7">{
	<expr_stmt><expr><name><name pos:line="29" pos:column="9">pop_data<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">-&gt;<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="19">cmd_top<pos:position pos:line="29" pos:column="26"/></name></name> <operator pos:line="29" pos:column="27">=<pos:position pos:line="29" pos:column="28"/></operator> <literal type="number" pos:line="29" pos:column="29">1<pos:position pos:line="29" pos:column="30"/></literal></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="31" pos:column="9">dprint<pos:position pos:line="31" pos:column="15"/></name> <argument_list pos:line="31" pos:column="16">(<argument><expr><literal type="number" pos:line="31" pos:column="17">1<pos:position pos:line="31" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="31" pos:column="20">(<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="21">debugfile<pos:position pos:line="31" pos:column="30"/></name><operator pos:line="31" pos:column="30">,<pos:position pos:line="31" pos:column="31"/></operator> <literal type="string" pos:line="31" pos:column="32">"pop_read_header: set TOP capability\n"<pos:position pos:line="31" pos:column="71"/></literal><operator pos:line="31" pos:column="71">)<pos:position pos:line="31" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="31" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="74"/></expr_stmt>
      }<pos:position pos:line="32" pos:column="8"/></block></then></if>

      <if pos:line="34" pos:column="7">if <condition pos:line="34" pos:column="10">(<expr><name pos:line="34" pos:column="11">ret<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">==<pos:position pos:line="34" pos:column="17"/></operator> <operator pos:line="34" pos:column="18">-<pos:position pos:line="34" pos:column="19"/></operator><literal type="number" pos:line="34" pos:column="19">2<pos:position pos:line="34" pos:column="20"/></literal></expr>)<pos:position pos:line="34" pos:column="21"/></condition><then pos:line="34" pos:column="21">
      <block pos:line="35" pos:column="7">{
	<expr_stmt><expr><name><name pos:line="36" pos:column="9">pop_data<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">-&gt;<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="19">cmd_top<pos:position pos:line="36" pos:column="26"/></name></name> <operator pos:line="36" pos:column="27">=<pos:position pos:line="36" pos:column="28"/></operator> <literal type="number" pos:line="36" pos:column="29">0<pos:position pos:line="36" pos:column="30"/></literal></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="38" pos:column="9">dprint<pos:position pos:line="38" pos:column="15"/></name> <argument_list pos:line="38" pos:column="16">(<argument><expr><literal type="number" pos:line="38" pos:column="17">1<pos:position pos:line="38" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="38" pos:column="20">(<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="21">debugfile<pos:position pos:line="38" pos:column="30"/></name><operator pos:line="38" pos:column="30">,<pos:position pos:line="38" pos:column="31"/></operator> <literal type="string" pos:line="38" pos:column="32">"pop_read_header: unset TOP capability\n"<pos:position pos:line="38" pos:column="73"/></literal><operator pos:line="38" pos:column="73">)<pos:position pos:line="38" pos:column="74"/></operator></expr></argument>)<pos:position pos:line="38" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="76"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="39" pos:column="9">snprintf<pos:position pos:line="39" pos:column="17"/></name> <argument_list pos:line="39" pos:column="18">(<argument><expr><name><name pos:line="39" pos:column="19">pop_data<pos:position pos:line="39" pos:column="27"/></name><operator pos:line="39" pos:column="27">-&gt;<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="29">err_msg<pos:position pos:line="39" pos:column="36"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="38">sizeof <argument_list pos:line="39" pos:column="45">(<argument><expr><name><name pos:line="39" pos:column="46">pop_data<pos:position pos:line="39" pos:column="54"/></name><operator pos:line="39" pos:column="54">-&gt;<pos:position pos:line="39" pos:column="59"/></operator><name pos:line="39" pos:column="56">err_msg<pos:position pos:line="39" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="64"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="66">"%s"<pos:position pos:line="39" pos:column="70"/></literal></expr></argument>,
		<argument><expr><call><name pos:line="40" pos:column="17">_<pos:position pos:line="40" pos:column="18"/></name><argument_list pos:line="40" pos:column="18">(<argument><expr><literal type="string" pos:line="40" pos:column="19">"Command TOP is not supported by server."<pos:position pos:line="40" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="63"/></expr_stmt>
      }<pos:position pos:line="41" pos:column="8"/></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>

  <switch pos:line="45" pos:column="3">switch <condition pos:line="45" pos:column="10">(<expr><name pos:line="45" pos:column="11">ret<pos:position pos:line="45" pos:column="14"/></name></expr>)<pos:position pos:line="45" pos:column="15"/></condition>
  <block pos:line="46" pos:column="3">{
    <case pos:line="47" pos:column="5">case <expr><literal type="number" pos:line="47" pos:column="10">0<pos:position pos:line="47" pos:column="11"/></literal></expr>:<pos:position pos:line="47" pos:column="12"/></case>
    <block pos:line="48" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">rewind<pos:position pos:line="49" pos:column="13"/></name> <argument_list pos:line="49" pos:column="14">(<argument><expr><name pos:line="49" pos:column="15">f<pos:position pos:line="49" pos:column="16"/></name></expr></argument>)<pos:position pos:line="49" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="50" pos:column="7">h<pos:position pos:line="50" pos:column="8"/></name><operator pos:line="50" pos:column="8">-&gt;<pos:position pos:line="50" pos:column="13"/></operator><name pos:line="50" pos:column="10">env<pos:position pos:line="50" pos:column="13"/></name></name> <operator pos:line="50" pos:column="14">=<pos:position pos:line="50" pos:column="15"/></operator> <call><name pos:line="50" pos:column="16">mutt_read_rfc822_header<pos:position pos:line="50" pos:column="39"/></name> <argument_list pos:line="50" pos:column="40">(<argument><expr><name pos:line="50" pos:column="41">f<pos:position pos:line="50" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="44">h<pos:position pos:line="50" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="47">0<pos:position pos:line="50" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="50">0<pos:position pos:line="50" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="51" pos:column="7">h<pos:position pos:line="51" pos:column="8"/></name><operator pos:line="51" pos:column="8">-&gt;<pos:position pos:line="51" pos:column="13"/></operator><name pos:line="51" pos:column="10">content<pos:position pos:line="51" pos:column="17"/></name><operator pos:line="51" pos:column="17">-&gt;<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="19">length<pos:position pos:line="51" pos:column="25"/></name></name> <operator pos:line="51" pos:column="26">=<pos:position pos:line="51" pos:column="27"/></operator> <name pos:line="51" pos:column="28">length<pos:position pos:line="51" pos:column="34"/></name> <operator pos:line="51" pos:column="35">-<pos:position pos:line="51" pos:column="36"/></operator> <name><name pos:line="51" pos:column="37">h<pos:position pos:line="51" pos:column="38"/></name><operator pos:line="51" pos:column="38">-&gt;<pos:position pos:line="51" pos:column="43"/></operator><name pos:line="51" pos:column="40">content<pos:position pos:line="51" pos:column="47"/></name><operator pos:line="51" pos:column="47">-&gt;<pos:position pos:line="51" pos:column="52"/></operator><name pos:line="51" pos:column="49">offset<pos:position pos:line="51" pos:column="55"/></name></name> <operator pos:line="51" pos:column="56">+<pos:position pos:line="51" pos:column="57"/></operator> <literal type="number" pos:line="51" pos:column="58">1<pos:position pos:line="51" pos:column="59"/></literal></expr>;<pos:position pos:line="51" pos:column="60"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="52" pos:column="7">rewind<pos:position pos:line="52" pos:column="13"/></name> <argument_list pos:line="52" pos:column="14">(<argument><expr><name pos:line="52" pos:column="15">f<pos:position pos:line="52" pos:column="16"/></name></expr></argument>)<pos:position pos:line="52" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="18"/></expr_stmt>
      <while pos:line="53" pos:column="7">while <condition pos:line="53" pos:column="13">(<expr><operator pos:line="53" pos:column="14">!<pos:position pos:line="53" pos:column="15"/></operator><call><name pos:line="53" pos:column="15">feof<pos:position pos:line="53" pos:column="19"/></name> <argument_list pos:line="53" pos:column="20">(<argument><expr><name pos:line="53" pos:column="21">f<pos:position pos:line="53" pos:column="22"/></name></expr></argument>)<pos:position pos:line="53" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="24"/></condition>
      <block pos:line="54" pos:column="7">{
	<expr_stmt><expr><name><name pos:line="55" pos:column="9">h<pos:position pos:line="55" pos:column="10"/></name><operator pos:line="55" pos:column="10">-&gt;<pos:position pos:line="55" pos:column="15"/></operator><name pos:line="55" pos:column="12">content<pos:position pos:line="55" pos:column="19"/></name><operator pos:line="55" pos:column="19">-&gt;<pos:position pos:line="55" pos:column="24"/></operator><name pos:line="55" pos:column="21">length<pos:position pos:line="55" pos:column="27"/></name></name><operator pos:line="55" pos:column="27">--<pos:position pos:line="55" pos:column="29"/></operator></expr>;<pos:position pos:line="55" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="56" pos:column="9">fgets<pos:position pos:line="56" pos:column="14"/></name> <argument_list pos:line="56" pos:column="15">(<argument><expr><name pos:line="56" pos:column="16">buf<pos:position pos:line="56" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="56" pos:column="21">sizeof <argument_list pos:line="56" pos:column="28">(<argument><expr><name pos:line="56" pos:column="29">buf<pos:position pos:line="56" pos:column="32"/></name></expr></argument>)<pos:position pos:line="56" pos:column="33"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="56" pos:column="35">f<pos:position pos:line="56" pos:column="36"/></name></expr></argument>)<pos:position pos:line="56" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="38"/></expr_stmt>
      }<pos:position pos:line="57" pos:column="8"/></block></while>
      <break pos:line="58" pos:column="7">break;<pos:position pos:line="58" pos:column="13"/></break>
    }<pos:position pos:line="59" pos:column="6"/></block>
    <case pos:line="60" pos:column="5">case <expr><operator pos:line="60" pos:column="10">-<pos:position pos:line="60" pos:column="11"/></operator><literal type="number" pos:line="60" pos:column="11">2<pos:position pos:line="60" pos:column="12"/></literal></expr>:<pos:position pos:line="60" pos:column="13"/></case>
    <block pos:line="61" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="62" pos:column="7">mutt_error<pos:position pos:line="62" pos:column="17"/></name> <argument_list pos:line="62" pos:column="18">(<argument><expr><literal type="string" pos:line="62" pos:column="19">"%s"<pos:position pos:line="62" pos:column="23"/></literal></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="25">pop_data<pos:position pos:line="62" pos:column="33"/></name><operator pos:line="62" pos:column="33">-&gt;<pos:position pos:line="62" pos:column="38"/></operator><name pos:line="62" pos:column="35">err_msg<pos:position pos:line="62" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="44"/></expr_stmt>
      <break pos:line="63" pos:column="7">break;<pos:position pos:line="63" pos:column="13"/></break>
    }<pos:position pos:line="64" pos:column="6"/></block>
    <case pos:line="65" pos:column="5">case <expr><operator pos:line="65" pos:column="10">-<pos:position pos:line="65" pos:column="11"/></operator><literal type="number" pos:line="65" pos:column="11">3<pos:position pos:line="65" pos:column="12"/></literal></expr>:<pos:position pos:line="65" pos:column="13"/></case>
    <block pos:line="66" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="67" pos:column="7">mutt_error<pos:position pos:line="67" pos:column="17"/></name></type> <name pos:line="67" pos:column="18">_<pos:position pos:line="67" pos:column="19"/></name><argument_list pos:line="67" pos:column="19">(<argument><expr><literal type="string" pos:line="67" pos:column="20">"Can't write header to temporary file!"<pos:position pos:line="67" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="60"/></argument_list></decl>;<pos:position pos:line="67" pos:column="61"/></decl_stmt>
      <break pos:line="68" pos:column="7">break;<pos:position pos:line="68" pos:column="13"/></break>
    }<pos:position pos:line="69" pos:column="6"/></block>
  }<pos:position pos:line="70" pos:column="4"/></block></switch>

  <expr_stmt><expr><call><name pos:line="72" pos:column="3">safe_fclose<pos:position pos:line="72" pos:column="14"/></name> <argument_list pos:line="72" pos:column="15">(<argument><expr><operator pos:line="72" pos:column="16">&amp;<pos:position pos:line="72" pos:column="21"/></operator><name pos:line="72" pos:column="17">f<pos:position pos:line="72" pos:column="18"/></name></expr></argument>)<pos:position pos:line="72" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="73" pos:column="3">unlink<pos:position pos:line="73" pos:column="9"/></name> <argument_list pos:line="73" pos:column="10">(<argument><expr><name pos:line="73" pos:column="11">tempfile<pos:position pos:line="73" pos:column="19"/></name></expr></argument>)<pos:position pos:line="73" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="21"/></expr_stmt>
  <return pos:line="74" pos:column="3">return <expr><name pos:line="74" pos:column="10">ret<pos:position pos:line="74" pos:column="13"/></name></expr>;<pos:position pos:line="74" pos:column="14"/></return>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

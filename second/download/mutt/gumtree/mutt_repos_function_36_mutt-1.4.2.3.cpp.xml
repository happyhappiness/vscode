<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_36_mutt-1.4.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">include_reply<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">CONTEXT<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">ctx<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">HEADER<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">cur<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">FILE<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">out<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">cmflags<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><name pos:line="3" pos:column="17">M_CM_PREFIX<pos:position pos:line="3" pos:column="28"/></name> <operator pos:line="3" pos:column="29">|<pos:position pos:line="3" pos:column="30"/></operator> <name pos:line="3" pos:column="31">M_CM_DECODE<pos:position pos:line="3" pos:column="42"/></name> <operator pos:line="3" pos:column="43">|<pos:position pos:line="3" pos:column="44"/></operator> <name pos:line="3" pos:column="45">M_CM_CHARCONV<pos:position pos:line="3" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="59"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">chflags<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><name pos:line="4" pos:column="17">CH_DECODE<pos:position pos:line="4" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>

<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">HAVE_PGP<pos:position pos:line="6" pos:column="16"/></name></cpp:ifdef>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name><name pos:line="7" pos:column="7">cur<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">pgp<pos:position pos:line="7" pos:column="15"/></name></name></expr>)<pos:position pos:line="7" pos:column="16"/></condition><then pos:line="7" pos:column="16">
  <block pos:line="8" pos:column="3">{
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">cur<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">pgp<pos:position pos:line="9" pos:column="17"/></name></name> <operator pos:line="9" pos:column="18">&amp;<pos:position pos:line="9" pos:column="23"/></operator> <name pos:line="9" pos:column="20">PGPENCRYPT<pos:position pos:line="9" pos:column="30"/></name></expr>)<pos:position pos:line="9" pos:column="31"/></condition><then pos:line="9" pos:column="31">
    <block pos:line="10" pos:column="5">{
      <comment type="block" pos:line="11" pos:column="7">/* make sure we have the user's passphrase before proceeding... */</comment>
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">pgp_valid_passphrase<pos:position pos:line="12" pos:column="27"/></name> <argument_list pos:line="12" pos:column="28">()<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="15" pos:column="8">/* HAVE_PGP */</comment>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">mutt_parse_mime_message<pos:position pos:line="17" pos:column="26"/></name> <argument_list pos:line="17" pos:column="27">(<argument><expr><name pos:line="17" pos:column="28">ctx<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="33">cur<pos:position pos:line="17" pos:column="36"/></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">mutt_message_hook<pos:position pos:line="18" pos:column="20"/></name> <argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">ctx<pos:position pos:line="18" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="27">cur<pos:position pos:line="18" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="32">M_MESSAGEHOOK<pos:position pos:line="18" pos:column="45"/></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt>
  
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">mutt_make_attribution<pos:position pos:line="20" pos:column="24"/></name> <argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">ctx<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="31">cur<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="36">out<pos:position pos:line="20" pos:column="39"/></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
  
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><operator pos:line="22" pos:column="7">!<pos:position pos:line="22" pos:column="8"/></operator><call><name pos:line="22" pos:column="8">option<pos:position pos:line="22" pos:column="14"/></name> <argument_list pos:line="22" pos:column="15">(<argument><expr><name pos:line="22" pos:column="16">OPTHEADER<pos:position pos:line="22" pos:column="25"/></name></expr></argument>)<pos:position pos:line="22" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="27"/></condition><then pos:line="22" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="5">cmflags<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">|=<pos:position pos:line="23" pos:column="15"/></operator> <name pos:line="23" pos:column="16">M_CM_NOHEADER<pos:position pos:line="23" pos:column="29"/></name></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt></block></then></if>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><call><name pos:line="24" pos:column="7">option<pos:position pos:line="24" pos:column="13"/></name> <argument_list pos:line="24" pos:column="14">(<argument><expr><name pos:line="24" pos:column="15">OPTWEED<pos:position pos:line="24" pos:column="22"/></name></expr></argument>)<pos:position pos:line="24" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="24"/></condition><then pos:line="24" pos:column="24">
  <block pos:line="25" pos:column="3">{
    <expr_stmt><expr><name pos:line="26" pos:column="5">chflags<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">|=<pos:position pos:line="26" pos:column="15"/></operator> <name pos:line="26" pos:column="16">CH_WEED<pos:position pos:line="26" pos:column="23"/></name></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="27" pos:column="5">cmflags<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">|=<pos:position pos:line="27" pos:column="15"/></operator> <name pos:line="27" pos:column="16">M_CM_WEED<pos:position pos:line="27" pos:column="25"/></name></expr>;<pos:position pos:line="27" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="30" pos:column="3">mutt_copy_message<pos:position pos:line="30" pos:column="20"/></name> <argument_list pos:line="30" pos:column="21">(<argument><expr><name pos:line="30" pos:column="22">out<pos:position pos:line="30" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="27">ctx<pos:position pos:line="30" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="32">cur<pos:position pos:line="30" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="37">cmflags<pos:position pos:line="30" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="46">chflags<pos:position pos:line="30" pos:column="53"/></name></expr></argument>)<pos:position pos:line="30" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="55"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="32" pos:column="3">mutt_make_post_indent<pos:position pos:line="32" pos:column="24"/></name> <argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">ctx<pos:position pos:line="32" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="31">cur<pos:position pos:line="32" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="36">out<pos:position pos:line="32" pos:column="39"/></name></expr></argument>)<pos:position pos:line="32" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>
  
  <return pos:line="34" pos:column="3">return <expr><literal type="number" pos:line="34" pos:column="10">0<pos:position pos:line="34" pos:column="11"/></literal></expr>;<pos:position pos:line="34" pos:column="12"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

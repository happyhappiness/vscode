<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1882_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BODY<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">pgp_make_key_attachment<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">tempf<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">BODY<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">att<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buff<pos:position pos:line="4" pos:column="12"/></name><index pos:line="4" pos:column="12">[<expr><name pos:line="4" pos:column="13">LONG_STRING<pos:position pos:line="4" pos:column="24"/></name></expr>]<pos:position pos:line="4" pos:column="25"/></index></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">tempfb<pos:position pos:line="5" pos:column="14"/></name><index pos:line="5" pos:column="14">[<expr><name pos:line="5" pos:column="15">_POSIX_PATH_MAX<pos:position pos:line="5" pos:column="30"/></name></expr>]<pos:position pos:line="5" pos:column="31"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="5" pos:column="33">tmp<pos:position pos:line="5" pos:column="36"/></name><index pos:line="5" pos:column="36">[<expr><name pos:line="5" pos:column="37">STRING<pos:position pos:line="5" pos:column="43"/></name></expr>]<pos:position pos:line="5" pos:column="44"/></index></name></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">FILE<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">tempfp<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">FILE<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">devnull<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">stat<pos:position pos:line="8" pos:column="14"/></name></name></type> <name pos:line="8" pos:column="15">sb<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">pid_t<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">thepid<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">pgp_key_t<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">key<pos:position pos:line="10" pos:column="16"/></name></decl>;<pos:position pos:line="10" pos:column="17"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">unset_option<pos:position pos:line="11" pos:column="15"/></name> <argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">OPTPGPCHECKTRUST<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt>

  <expr_stmt><expr><name pos:line="13" pos:column="3">key<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <call><name pos:line="13" pos:column="9">pgp_ask_for_key<pos:position pos:line="13" pos:column="24"/></name> <argument_list pos:line="13" pos:column="25">(<argument><expr><call><name pos:line="13" pos:column="26">_<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><literal type="string" pos:line="13" pos:column="28">"Please enter the key ID: "<pos:position pos:line="13" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="13" pos:column="58">NULL<pos:position pos:line="13" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="64">0<pos:position pos:line="13" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="67">PGP_PUBRING<pos:position pos:line="13" pos:column="78"/></name></expr></argument>)<pos:position pos:line="13" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="80"/></expr_stmt>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><operator pos:line="15" pos:column="7">!<pos:position pos:line="15" pos:column="8"/></operator><name pos:line="15" pos:column="8">key<pos:position pos:line="15" pos:column="11"/></name></expr>)<pos:position pos:line="15" pos:column="12"/></condition><then pos:line="15" pos:column="12">    <block type="pseudo"><return pos:line="15" pos:column="16">return <expr><name pos:line="15" pos:column="23">NULL<pos:position pos:line="15" pos:column="27"/></name></expr>;<pos:position pos:line="15" pos:column="28"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">snprintf<pos:position pos:line="17" pos:column="11"/></name> <argument_list pos:line="17" pos:column="12">(<argument><expr><name pos:line="17" pos:column="13">tmp<pos:position pos:line="17" pos:column="16"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="18">sizeof <argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">tmp<pos:position pos:line="17" pos:column="29"/></name></expr></argument>)<pos:position pos:line="17" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="32">"0x%s"<pos:position pos:line="17" pos:column="38"/></literal></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="40">pgp_fpr_or_lkeyid<pos:position pos:line="17" pos:column="57"/></name> <argument_list pos:line="17" pos:column="58">(<argument><expr><call><name pos:line="17" pos:column="59">pgp_principal_key<pos:position pos:line="17" pos:column="76"/></name> <argument_list pos:line="17" pos:column="77">(<argument><expr><name pos:line="17" pos:column="78">key<pos:position pos:line="17" pos:column="81"/></name></expr></argument>)<pos:position pos:line="17" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="85"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">pgp_free_key<pos:position pos:line="18" pos:column="15"/></name> <argument_list pos:line="18" pos:column="16">(<argument><expr><operator pos:line="18" pos:column="17">&amp;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="18">key<pos:position pos:line="18" pos:column="21"/></name></expr></argument>)<pos:position pos:line="18" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><operator pos:line="20" pos:column="7">!<pos:position pos:line="20" pos:column="8"/></operator><name pos:line="20" pos:column="8">tempf<pos:position pos:line="20" pos:column="13"/></name></expr>)<pos:position pos:line="20" pos:column="14"/></condition><then pos:line="20" pos:column="14">
  <block pos:line="21" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">mutt_mktemp<pos:position pos:line="22" pos:column="16"/></name> <argument_list pos:line="22" pos:column="17">(<argument><expr><name pos:line="22" pos:column="18">tempfb<pos:position pos:line="22" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="26">sizeof <argument_list pos:line="22" pos:column="33">(<argument><expr><name pos:line="22" pos:column="34">tempfb<pos:position pos:line="22" pos:column="40"/></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">tempf<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <name pos:line="23" pos:column="13">tempfb<pos:position pos:line="23" pos:column="19"/></name></expr>;<pos:position pos:line="23" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><operator pos:line="26" pos:column="7">(<pos:position pos:line="26" pos:column="8"/></operator><name pos:line="26" pos:column="8">tempfp<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <call><name pos:line="26" pos:column="17">safe_fopen<pos:position pos:line="26" pos:column="27"/></name> <argument_list pos:line="26" pos:column="28">(<argument><expr><name pos:line="26" pos:column="29">tempf<pos:position pos:line="26" pos:column="34"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="26" pos:column="36">tempf<pos:position pos:line="26" pos:column="41"/></name> <operator pos:line="26" pos:column="42">==<pos:position pos:line="26" pos:column="44"/></operator> <name pos:line="26" pos:column="45">tempfb<pos:position pos:line="26" pos:column="51"/></name></expr> ?<pos:position pos:line="26" pos:column="53"/></condition><then pos:line="26" pos:column="53"> <expr><literal type="string" pos:line="26" pos:column="54">"w"<pos:position pos:line="26" pos:column="57"/></literal></expr> <pos:position pos:line="26" pos:column="58"/></then><else pos:line="26" pos:column="58">: <expr><literal type="string" pos:line="26" pos:column="60">"a"<pos:position pos:line="26" pos:column="63"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="26" pos:column="64"/></argument_list></call><operator pos:line="26" pos:column="64">)<pos:position pos:line="26" pos:column="65"/></operator> <operator pos:line="26" pos:column="66">==<pos:position pos:line="26" pos:column="68"/></operator> <name pos:line="26" pos:column="69">NULL<pos:position pos:line="26" pos:column="73"/></name></expr>)<pos:position pos:line="26" pos:column="74"/></condition><then pos:line="26" pos:column="74">
  <block pos:line="27" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">mutt_perror<pos:position pos:line="28" pos:column="16"/></name></type> <name pos:line="28" pos:column="17">_<pos:position pos:line="28" pos:column="18"/></name><argument_list pos:line="28" pos:column="18">(<argument><expr><literal type="string" pos:line="28" pos:column="19">"Can't create temporary file"<pos:position pos:line="28" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="49"/></argument_list></decl>;<pos:position pos:line="28" pos:column="50"/></decl_stmt>
    <return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">NULL<pos:position pos:line="29" pos:column="16"/></name></expr>;<pos:position pos:line="29" pos:column="17"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><operator pos:line="32" pos:column="7">(<pos:position pos:line="32" pos:column="8"/></operator><name pos:line="32" pos:column="8">devnull<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <call><name pos:line="32" pos:column="18">fopen<pos:position pos:line="32" pos:column="23"/></name> <argument_list pos:line="32" pos:column="24">(<argument><expr><literal type="string" pos:line="32" pos:column="25">"/dev/null"<pos:position pos:line="32" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="38">"w"<pos:position pos:line="32" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call><operator pos:line="32" pos:column="42">)<pos:position pos:line="32" pos:column="43"/></operator> <operator pos:line="32" pos:column="44">==<pos:position pos:line="32" pos:column="46"/></operator> <name pos:line="32" pos:column="47">NULL<pos:position pos:line="32" pos:column="51"/></name></expr>)<pos:position pos:line="32" pos:column="52"/></condition><then pos:line="32" pos:column="52">	<comment type="block" pos:line="32" pos:column="57">/* __FOPEN_CHECKED__ */</comment>
  <block pos:line="33" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="34" pos:column="5">mutt_perror<pos:position pos:line="34" pos:column="16"/></name></type> <name pos:line="34" pos:column="17">_<pos:position pos:line="34" pos:column="18"/></name><argument_list pos:line="34" pos:column="18">(<argument><expr><literal type="string" pos:line="34" pos:column="19">"Can't open /dev/null"<pos:position pos:line="34" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="42"/></argument_list></decl>;<pos:position pos:line="34" pos:column="43"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">safe_fclose<pos:position pos:line="35" pos:column="16"/></name> <argument_list pos:line="35" pos:column="17">(<argument><expr><operator pos:line="35" pos:column="18">&amp;<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="19">tempfp<pos:position pos:line="35" pos:column="25"/></name></expr></argument>)<pos:position pos:line="35" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">tempf<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">==<pos:position pos:line="36" pos:column="17"/></operator> <name pos:line="36" pos:column="18">tempfb<pos:position pos:line="36" pos:column="24"/></name></expr>)<pos:position pos:line="36" pos:column="25"/></condition><then pos:line="36" pos:column="25">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="7">unlink<pos:position pos:line="37" pos:column="13"/></name> <argument_list pos:line="37" pos:column="14">(<argument><expr><name pos:line="37" pos:column="15">tempf<pos:position pos:line="37" pos:column="20"/></name></expr></argument>)<pos:position pos:line="37" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="22"/></expr_stmt></block></then></if>
    <return pos:line="38" pos:column="5">return <expr><name pos:line="38" pos:column="12">NULL<pos:position pos:line="38" pos:column="16"/></name></expr>;<pos:position pos:line="38" pos:column="17"/></return>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="41" pos:column="3">mutt_message<pos:position pos:line="41" pos:column="15"/></name></type> <name pos:line="41" pos:column="16">_<pos:position pos:line="41" pos:column="17"/></name><argument_list pos:line="41" pos:column="17">(<argument><expr><literal type="string" pos:line="41" pos:column="18">"Invoking PGP..."<pos:position pos:line="41" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="36"/></argument_list></decl>;<pos:position pos:line="41" pos:column="37"/></decl_stmt>


  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><operator pos:line="44" pos:column="7">(<pos:position pos:line="44" pos:column="8"/></operator><name pos:line="44" pos:column="8">thepid<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">=<pos:position pos:line="44" pos:column="16"/></operator> 
       <call><name pos:line="45" pos:column="8">pgp_invoke_export<pos:position pos:line="45" pos:column="25"/></name> <argument_list pos:line="45" pos:column="26">(<argument><expr><name pos:line="45" pos:column="27">NULL<pos:position pos:line="45" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="33">NULL<pos:position pos:line="45" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="39">NULL<pos:position pos:line="45" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="45">-<pos:position pos:line="45" pos:column="46"/></operator><literal type="number" pos:line="45" pos:column="46">1<pos:position pos:line="45" pos:column="47"/></literal></expr></argument>,
			   <argument><expr><call><name pos:line="46" pos:column="28">fileno<pos:position pos:line="46" pos:column="34"/></name> <argument_list pos:line="46" pos:column="35">(<argument><expr><name pos:line="46" pos:column="36">tempfp<pos:position pos:line="46" pos:column="42"/></name></expr></argument>)<pos:position pos:line="46" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="45">fileno<pos:position pos:line="46" pos:column="51"/></name> <argument_list pos:line="46" pos:column="52">(<argument><expr><name pos:line="46" pos:column="53">devnull<pos:position pos:line="46" pos:column="60"/></name></expr></argument>)<pos:position pos:line="46" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="46" pos:column="63">tmp<pos:position pos:line="46" pos:column="66"/></name></expr></argument>)<pos:position pos:line="46" pos:column="67"/></argument_list></call><operator pos:line="46" pos:column="67">)<pos:position pos:line="46" pos:column="68"/></operator> <operator pos:line="46" pos:column="69">==<pos:position pos:line="46" pos:column="71"/></operator> <operator pos:line="46" pos:column="72">-<pos:position pos:line="46" pos:column="73"/></operator><literal type="number" pos:line="46" pos:column="73">1<pos:position pos:line="46" pos:column="74"/></literal></expr>)<pos:position pos:line="46" pos:column="75"/></condition><then pos:line="46" pos:column="75">
  <block pos:line="47" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="48" pos:column="5">mutt_perror<pos:position pos:line="48" pos:column="16"/></name></type> <name pos:line="48" pos:column="17">_<pos:position pos:line="48" pos:column="18"/></name><argument_list pos:line="48" pos:column="18">(<argument><expr><literal type="string" pos:line="48" pos:column="19">"Can't create filter"<pos:position pos:line="48" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="41"/></argument_list></decl>;<pos:position pos:line="48" pos:column="42"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">unlink<pos:position pos:line="49" pos:column="11"/></name> <argument_list pos:line="49" pos:column="12">(<argument><expr><name pos:line="49" pos:column="13">tempf<pos:position pos:line="49" pos:column="18"/></name></expr></argument>)<pos:position pos:line="49" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">safe_fclose<pos:position pos:line="50" pos:column="16"/></name> <argument_list pos:line="50" pos:column="17">(<argument><expr><operator pos:line="50" pos:column="18">&amp;<pos:position pos:line="50" pos:column="23"/></operator><name pos:line="50" pos:column="19">tempfp<pos:position pos:line="50" pos:column="25"/></name></expr></argument>)<pos:position pos:line="50" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">safe_fclose<pos:position pos:line="51" pos:column="16"/></name> <argument_list pos:line="51" pos:column="17">(<argument><expr><operator pos:line="51" pos:column="18">&amp;<pos:position pos:line="51" pos:column="23"/></operator><name pos:line="51" pos:column="19">devnull<pos:position pos:line="51" pos:column="26"/></name></expr></argument>)<pos:position pos:line="51" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="28"/></expr_stmt>
    <return pos:line="52" pos:column="5">return <expr><name pos:line="52" pos:column="12">NULL<pos:position pos:line="52" pos:column="16"/></name></expr>;<pos:position pos:line="52" pos:column="17"/></return>
  }<pos:position pos:line="53" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="55" pos:column="3">mutt_wait_filter<pos:position pos:line="55" pos:column="19"/></name> <argument_list pos:line="55" pos:column="20">(<argument><expr><name pos:line="55" pos:column="21">thepid<pos:position pos:line="55" pos:column="27"/></name></expr></argument>)<pos:position pos:line="55" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="57" pos:column="3">safe_fclose<pos:position pos:line="57" pos:column="14"/></name> <argument_list pos:line="57" pos:column="15">(<argument><expr><operator pos:line="57" pos:column="16">&amp;<pos:position pos:line="57" pos:column="21"/></operator><name pos:line="57" pos:column="17">tempfp<pos:position pos:line="57" pos:column="23"/></name></expr></argument>)<pos:position pos:line="57" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="58" pos:column="3">safe_fclose<pos:position pos:line="58" pos:column="14"/></name> <argument_list pos:line="58" pos:column="15">(<argument><expr><operator pos:line="58" pos:column="16">&amp;<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="17">devnull<pos:position pos:line="58" pos:column="24"/></name></expr></argument>)<pos:position pos:line="58" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="26"/></expr_stmt>

  <expr_stmt><expr><name pos:line="60" pos:column="3">att<pos:position pos:line="60" pos:column="6"/></name> <operator pos:line="60" pos:column="7">=<pos:position pos:line="60" pos:column="8"/></operator> <call><name pos:line="60" pos:column="9">mutt_new_body<pos:position pos:line="60" pos:column="22"/></name> <argument_list pos:line="60" pos:column="23">()<pos:position pos:line="60" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="61" pos:column="3">att<pos:position pos:line="61" pos:column="6"/></name><operator pos:line="61" pos:column="6">-&gt;<pos:position pos:line="61" pos:column="11"/></operator><name pos:line="61" pos:column="8">filename<pos:position pos:line="61" pos:column="16"/></name></name> <operator pos:line="61" pos:column="17">=<pos:position pos:line="61" pos:column="18"/></operator> <call><name pos:line="61" pos:column="19">safe_strdup<pos:position pos:line="61" pos:column="30"/></name> <argument_list pos:line="61" pos:column="31">(<argument><expr><name pos:line="61" pos:column="32">tempf<pos:position pos:line="61" pos:column="37"/></name></expr></argument>)<pos:position pos:line="61" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="62" pos:column="3">att<pos:position pos:line="62" pos:column="6"/></name><operator pos:line="62" pos:column="6">-&gt;<pos:position pos:line="62" pos:column="11"/></operator><name pos:line="62" pos:column="8">unlink<pos:position pos:line="62" pos:column="14"/></name></name> <operator pos:line="62" pos:column="15">=<pos:position pos:line="62" pos:column="16"/></operator> <literal type="number" pos:line="62" pos:column="17">1<pos:position pos:line="62" pos:column="18"/></literal></expr>;<pos:position pos:line="62" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="63" pos:column="3">att<pos:position pos:line="63" pos:column="6"/></name><operator pos:line="63" pos:column="6">-&gt;<pos:position pos:line="63" pos:column="11"/></operator><name pos:line="63" pos:column="8">use_disp<pos:position pos:line="63" pos:column="16"/></name></name> <operator pos:line="63" pos:column="17">=<pos:position pos:line="63" pos:column="18"/></operator> <literal type="number" pos:line="63" pos:column="19">0<pos:position pos:line="63" pos:column="20"/></literal></expr>;<pos:position pos:line="63" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="64" pos:column="3">att<pos:position pos:line="64" pos:column="6"/></name><operator pos:line="64" pos:column="6">-&gt;<pos:position pos:line="64" pos:column="11"/></operator><name pos:line="64" pos:column="8">type<pos:position pos:line="64" pos:column="12"/></name></name> <operator pos:line="64" pos:column="13">=<pos:position pos:line="64" pos:column="14"/></operator> <name pos:line="64" pos:column="15">TYPEAPPLICATION<pos:position pos:line="64" pos:column="30"/></name></expr>;<pos:position pos:line="64" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="65" pos:column="3">att<pos:position pos:line="65" pos:column="6"/></name><operator pos:line="65" pos:column="6">-&gt;<pos:position pos:line="65" pos:column="11"/></operator><name pos:line="65" pos:column="8">subtype<pos:position pos:line="65" pos:column="15"/></name></name> <operator pos:line="65" pos:column="16">=<pos:position pos:line="65" pos:column="17"/></operator> <call><name pos:line="65" pos:column="18">safe_strdup<pos:position pos:line="65" pos:column="29"/></name> <argument_list pos:line="65" pos:column="30">(<argument><expr><literal type="string" pos:line="65" pos:column="31">"pgp-keys"<pos:position pos:line="65" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="66" pos:column="3">snprintf<pos:position pos:line="66" pos:column="11"/></name> <argument_list pos:line="66" pos:column="12">(<argument><expr><name pos:line="66" pos:column="13">buff<pos:position pos:line="66" pos:column="17"/></name></expr></argument>, <argument><expr><sizeof pos:line="66" pos:column="19">sizeof <argument_list pos:line="66" pos:column="26">(<argument><expr><name pos:line="66" pos:column="27">buff<pos:position pos:line="66" pos:column="31"/></name></expr></argument>)<pos:position pos:line="66" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="66" pos:column="34">_<pos:position pos:line="66" pos:column="35"/></name><argument_list pos:line="66" pos:column="35">(<argument><expr><literal type="string" pos:line="66" pos:column="36">"PGP Key %s."<pos:position pos:line="66" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="66" pos:column="52">tmp<pos:position pos:line="66" pos:column="55"/></name></expr></argument>)<pos:position pos:line="66" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="57"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="67" pos:column="3">att<pos:position pos:line="67" pos:column="6"/></name><operator pos:line="67" pos:column="6">-&gt;<pos:position pos:line="67" pos:column="11"/></operator><name pos:line="67" pos:column="8">description<pos:position pos:line="67" pos:column="19"/></name></name> <operator pos:line="67" pos:column="20">=<pos:position pos:line="67" pos:column="21"/></operator> <call><name pos:line="67" pos:column="22">safe_strdup<pos:position pos:line="67" pos:column="33"/></name> <argument_list pos:line="67" pos:column="34">(<argument><expr><name pos:line="67" pos:column="35">buff<pos:position pos:line="67" pos:column="39"/></name></expr></argument>)<pos:position pos:line="67" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="68" pos:column="3">mutt_update_encoding<pos:position pos:line="68" pos:column="23"/></name> <argument_list pos:line="68" pos:column="24">(<argument><expr><name pos:line="68" pos:column="25">att<pos:position pos:line="68" pos:column="28"/></name></expr></argument>)<pos:position pos:line="68" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="30"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="70" pos:column="3">stat<pos:position pos:line="70" pos:column="7"/></name> <argument_list pos:line="70" pos:column="8">(<argument><expr><name pos:line="70" pos:column="9">tempf<pos:position pos:line="70" pos:column="14"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="16">&amp;<pos:position pos:line="70" pos:column="21"/></operator><name pos:line="70" pos:column="17">sb<pos:position pos:line="70" pos:column="19"/></name></expr></argument>)<pos:position pos:line="70" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="71" pos:column="3">att<pos:position pos:line="71" pos:column="6"/></name><operator pos:line="71" pos:column="6">-&gt;<pos:position pos:line="71" pos:column="11"/></operator><name pos:line="71" pos:column="8">length<pos:position pos:line="71" pos:column="14"/></name></name> <operator pos:line="71" pos:column="15">=<pos:position pos:line="71" pos:column="16"/></operator> <name><name pos:line="71" pos:column="17">sb<pos:position pos:line="71" pos:column="19"/></name><operator pos:line="71" pos:column="19">.<pos:position pos:line="71" pos:column="20"/></operator><name pos:line="71" pos:column="20">st_size<pos:position pos:line="71" pos:column="27"/></name></name></expr>;<pos:position pos:line="71" pos:column="28"/></expr_stmt>

  <return pos:line="73" pos:column="3">return <expr><name pos:line="73" pos:column="10">att<pos:position pos:line="73" pos:column="13"/></name></expr>;<pos:position pos:line="73" pos:column="14"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

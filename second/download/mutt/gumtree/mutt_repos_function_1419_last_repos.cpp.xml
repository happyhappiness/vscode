<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1419_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">LIST<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">mutt_add_list<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">LIST<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">head<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">data<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">len<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><call><name pos:line="3" pos:column="16">mutt_strlen<pos:position pos:line="3" pos:column="27"/></name> <argument_list pos:line="3" pos:column="28">(<argument><expr><name pos:line="3" pos:column="29">data<pos:position pos:line="3" pos:column="33"/></name></expr></argument>)<pos:position pos:line="3" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>

  <return pos:line="5" pos:column="3">return <expr><call><name pos:line="5" pos:column="10">mutt_add_list_n<pos:position pos:line="5" pos:column="25"/></name> <argument_list pos:line="5" pos:column="26">(<argument><expr><name pos:line="5" pos:column="27">head<pos:position pos:line="5" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="33">data<pos:position pos:line="5" pos:column="37"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="5" pos:column="39">len<pos:position pos:line="5" pos:column="42"/></name></expr> ?<pos:position pos:line="5" pos:column="44"/></condition><then pos:line="5" pos:column="44"> <expr><name pos:line="5" pos:column="45">len<pos:position pos:line="5" pos:column="48"/></name> <operator pos:line="5" pos:column="49">+<pos:position pos:line="5" pos:column="50"/></operator> <literal type="number" pos:line="5" pos:column="51">1<pos:position pos:line="5" pos:column="52"/></literal></expr> <pos:position pos:line="5" pos:column="53"/></then><else pos:line="5" pos:column="53">: <expr><literal type="number" pos:line="5" pos:column="55">0<pos:position pos:line="5" pos:column="56"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="5" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="58"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

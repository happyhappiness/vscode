<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1940_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">TEXTDOMAIN<pos:position pos:line="2" pos:column="11"/></name> <argument_list pos:line="2" pos:column="12">(<argument><expr><name pos:line="2" pos:column="13">domainname<pos:position pos:line="2" pos:column="23"/></name></expr></argument>)<pos:position pos:line="2" pos:column="24"/></argument_list>
     const <name pos:line="3" pos:column="12">char<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier><name pos:line="3" pos:column="18">domainname<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">new_domain<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">old_domain<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* A NULL pointer requests the current setting.  */</comment>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">domainname<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">==<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">NULL<pos:position pos:line="9" pos:column="25"/></name></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">char<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">*<pos:position pos:line="10" pos:column="19"/></operator><operator pos:line="10" pos:column="19">)<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="21">_nl_current_default_domain<pos:position pos:line="10" pos:column="47"/></name></expr>;<pos:position pos:line="10" pos:column="48"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">__libc_rwlock_wrlock<pos:position pos:line="12" pos:column="23"/></name> <argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">_nl_state_lock<pos:position pos:line="12" pos:column="39"/></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>

  <expr_stmt><expr><name pos:line="14" pos:column="3">old_domain<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <operator pos:line="14" pos:column="16">(<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">char<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">*<pos:position pos:line="14" pos:column="23"/></operator><operator pos:line="14" pos:column="23">)<pos:position pos:line="14" pos:column="24"/></operator> <name pos:line="14" pos:column="25">_nl_current_default_domain<pos:position pos:line="14" pos:column="51"/></name></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt>

  <comment type="block" pos:line="16" pos:column="3">/* If domain name is the null string set to default domain "messages".  */</comment>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name><name pos:line="17" pos:column="7">domainname<pos:position pos:line="17" pos:column="17"/></name><index pos:line="17" pos:column="17">[<expr><literal type="number" pos:line="17" pos:column="18">0<pos:position pos:line="17" pos:column="19"/></literal></expr>]<pos:position pos:line="17" pos:column="20"/></index></name> <operator pos:line="17" pos:column="21">==<pos:position pos:line="17" pos:column="23"/></operator> <literal type="char" pos:line="17" pos:column="24">'\0'<pos:position pos:line="17" pos:column="28"/></literal>
      <operator pos:line="18" pos:column="7">||<pos:position pos:line="18" pos:column="9"/></operator> <call><name pos:line="18" pos:column="10">strcmp<pos:position pos:line="18" pos:column="16"/></name> <argument_list pos:line="18" pos:column="17">(<argument><expr><name pos:line="18" pos:column="18">domainname<pos:position pos:line="18" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="30">_nl_default_default_domain<pos:position pos:line="18" pos:column="56"/></name></expr></argument>)<pos:position pos:line="18" pos:column="57"/></argument_list></call> <operator pos:line="18" pos:column="58">==<pos:position pos:line="18" pos:column="60"/></operator> <literal type="number" pos:line="18" pos:column="61">0<pos:position pos:line="18" pos:column="62"/></literal></expr>)<pos:position pos:line="18" pos:column="63"/></condition><then pos:line="18" pos:column="63">
    <block pos:line="19" pos:column="5">{
      <expr_stmt><expr><name pos:line="20" pos:column="7">_nl_current_default_domain<pos:position pos:line="20" pos:column="33"/></name> <operator pos:line="20" pos:column="34">=<pos:position pos:line="20" pos:column="35"/></operator> <name pos:line="20" pos:column="36">_nl_default_default_domain<pos:position pos:line="20" pos:column="62"/></name></expr>;<pos:position pos:line="20" pos:column="63"/></expr_stmt>
      <expr_stmt><expr><name pos:line="21" pos:column="7">new_domain<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <operator pos:line="21" pos:column="20">(<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="21">char<pos:position pos:line="21" pos:column="25"/></name> <operator pos:line="21" pos:column="26">*<pos:position pos:line="21" pos:column="27"/></operator><operator pos:line="21" pos:column="27">)<pos:position pos:line="21" pos:column="28"/></operator> <name pos:line="21" pos:column="29">_nl_current_default_domain<pos:position pos:line="21" pos:column="55"/></name></expr>;<pos:position pos:line="21" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then>
  <elseif pos:line="23" pos:column="3">else <if pos:line="23" pos:column="8">if <condition pos:line="23" pos:column="11">(<expr><call><name pos:line="23" pos:column="12">strcmp<pos:position pos:line="23" pos:column="18"/></name> <argument_list pos:line="23" pos:column="19">(<argument><expr><name pos:line="23" pos:column="20">domainname<pos:position pos:line="23" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="32">old_domain<pos:position pos:line="23" pos:column="42"/></name></expr></argument>)<pos:position pos:line="23" pos:column="43"/></argument_list></call> <operator pos:line="23" pos:column="44">==<pos:position pos:line="23" pos:column="46"/></operator> <literal type="number" pos:line="23" pos:column="47">0<pos:position pos:line="23" pos:column="48"/></literal></expr>)<pos:position pos:line="23" pos:column="49"/></condition><then pos:line="23" pos:column="49">
    <comment type="block" pos:line="24" pos:column="5">/* This can happen and people will use it to signal that some
       environment variable changed.  */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="5">new_domain<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <name pos:line="26" pos:column="18">old_domain<pos:position pos:line="26" pos:column="28"/></name></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt></block></then></if></elseif>
  <else pos:line="27" pos:column="3">else
    <block pos:line="28" pos:column="5">{
      <comment type="block" pos:line="29" pos:column="7">/* If the following malloc fails `_nl_current_default_domain'
	 will be NULL.  This value will be returned and so signals we
	 are out of core.  */</comment>
<cpp:if pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">if<pos:position pos:line="32" pos:column="4"/></cpp:directive> <expr><name pos:line="32" pos:column="5">defined<pos:position pos:line="32" pos:column="12"/></name> <name pos:line="32" pos:column="13">_LIBC<pos:position pos:line="32" pos:column="18"/></name> <operator pos:line="32" pos:column="19">||<pos:position pos:line="32" pos:column="21"/></operator> <name pos:line="32" pos:column="22">defined<pos:position pos:line="32" pos:column="29"/></name> <name pos:line="32" pos:column="30">HAVE_STRDUP<pos:position pos:line="32" pos:column="41"/></name></expr></cpp:if>
      <expr_stmt><expr><name pos:line="33" pos:column="7">new_domain<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">=<pos:position pos:line="33" pos:column="19"/></operator> <call><name pos:line="33" pos:column="20">strdup<pos:position pos:line="33" pos:column="26"/></name> <argument_list pos:line="33" pos:column="27">(<argument><expr><name pos:line="33" pos:column="28">domainname<pos:position pos:line="33" pos:column="38"/></name></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>
<cpp:else pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">else<pos:position pos:line="34" pos:column="6"/></cpp:directive></cpp:else>
      <decl_stmt><decl><type><name pos:line="35" pos:column="7">size_t<pos:position pos:line="35" pos:column="13"/></name></type> <name pos:line="35" pos:column="14">len<pos:position pos:line="35" pos:column="17"/></name> <init pos:line="35" pos:column="18">= <expr><call><name pos:line="35" pos:column="20">strlen<pos:position pos:line="35" pos:column="26"/></name> <argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">domainname<pos:position pos:line="35" pos:column="38"/></name></expr></argument>)<pos:position pos:line="35" pos:column="39"/></argument_list></call> <operator pos:line="35" pos:column="40">+<pos:position pos:line="35" pos:column="41"/></operator> <literal type="number" pos:line="35" pos:column="42">1<pos:position pos:line="35" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="35" pos:column="44"/></decl_stmt>
      <expr_stmt><expr><name pos:line="36" pos:column="7">new_domain<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <operator pos:line="36" pos:column="20">(<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="21">char<pos:position pos:line="36" pos:column="25"/></name> <operator pos:line="36" pos:column="26">*<pos:position pos:line="36" pos:column="27"/></operator><operator pos:line="36" pos:column="27">)<pos:position pos:line="36" pos:column="28"/></operator> <call><name pos:line="36" pos:column="29">malloc<pos:position pos:line="36" pos:column="35"/></name> <argument_list pos:line="36" pos:column="36">(<argument><expr><name pos:line="36" pos:column="37">len<pos:position pos:line="36" pos:column="40"/></name></expr></argument>)<pos:position pos:line="36" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="42"/></expr_stmt>
      <if pos:line="37" pos:column="7">if <condition pos:line="37" pos:column="10">(<expr><name pos:line="37" pos:column="11">new_domain<pos:position pos:line="37" pos:column="21"/></name> <operator pos:line="37" pos:column="22">!=<pos:position pos:line="37" pos:column="24"/></operator> <name pos:line="37" pos:column="25">NULL<pos:position pos:line="37" pos:column="29"/></name></expr>)<pos:position pos:line="37" pos:column="30"/></condition><then pos:line="37" pos:column="30">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="9">memcpy<pos:position pos:line="38" pos:column="15"/></name> <argument_list pos:line="38" pos:column="16">(<argument><expr><name pos:line="38" pos:column="17">new_domain<pos:position pos:line="38" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="29">domainname<pos:position pos:line="38" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="41">len<pos:position pos:line="38" pos:column="44"/></name></expr></argument>)<pos:position pos:line="38" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="46"/></expr_stmt></block></then></if>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>

      <if pos:line="41" pos:column="7">if <condition pos:line="41" pos:column="10">(<expr><name pos:line="41" pos:column="11">new_domain<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">!=<pos:position pos:line="41" pos:column="24"/></operator> <name pos:line="41" pos:column="25">NULL<pos:position pos:line="41" pos:column="29"/></name></expr>)<pos:position pos:line="41" pos:column="30"/></condition><then pos:line="41" pos:column="30">
	<block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="9">_nl_current_default_domain<pos:position pos:line="42" pos:column="35"/></name> <operator pos:line="42" pos:column="36">=<pos:position pos:line="42" pos:column="37"/></operator> <name pos:line="42" pos:column="38">new_domain<pos:position pos:line="42" pos:column="48"/></name></expr>;<pos:position pos:line="42" pos:column="49"/></expr_stmt></block></then></if>
    }<pos:position pos:line="43" pos:column="6"/></block></else></if>

  <comment type="block" pos:line="45" pos:column="3">/* We use this possibility to signal a change of the loaded catalogs
     since this is most likely the case and there is no other easy we
     to do it.  Do it only when the call was successful.  */</comment>
  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><name pos:line="48" pos:column="7">new_domain<pos:position pos:line="48" pos:column="17"/></name> <operator pos:line="48" pos:column="18">!=<pos:position pos:line="48" pos:column="20"/></operator> <name pos:line="48" pos:column="21">NULL<pos:position pos:line="48" pos:column="25"/></name></expr>)<pos:position pos:line="48" pos:column="26"/></condition><then pos:line="48" pos:column="26">
    <block pos:line="49" pos:column="5">{
      <expr_stmt><expr><operator pos:line="50" pos:column="7">++<pos:position pos:line="50" pos:column="9"/></operator><name pos:line="50" pos:column="9">_nl_msg_cat_cntr<pos:position pos:line="50" pos:column="25"/></name></expr>;<pos:position pos:line="50" pos:column="26"/></expr_stmt>

      <if pos:line="52" pos:column="7">if <condition pos:line="52" pos:column="10">(<expr><name pos:line="52" pos:column="11">old_domain<pos:position pos:line="52" pos:column="21"/></name> <operator pos:line="52" pos:column="22">!=<pos:position pos:line="52" pos:column="24"/></operator> <name pos:line="52" pos:column="25">new_domain<pos:position pos:line="52" pos:column="35"/></name> <operator pos:line="52" pos:column="36">&amp;&amp;<pos:position pos:line="52" pos:column="46"/></operator> <name pos:line="52" pos:column="39">old_domain<pos:position pos:line="52" pos:column="49"/></name> <operator pos:line="52" pos:column="50">!=<pos:position pos:line="52" pos:column="52"/></operator> <name pos:line="52" pos:column="53">_nl_default_default_domain<pos:position pos:line="52" pos:column="79"/></name></expr>)<pos:position pos:line="52" pos:column="80"/></condition><then pos:line="52" pos:column="80">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="9">free<pos:position pos:line="53" pos:column="13"/></name> <argument_list pos:line="53" pos:column="14">(<argument><expr><name pos:line="53" pos:column="15">old_domain<pos:position pos:line="53" pos:column="25"/></name></expr></argument>)<pos:position pos:line="53" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="27"/></expr_stmt></block></then></if>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="56" pos:column="3">__libc_rwlock_unlock<pos:position pos:line="56" pos:column="23"/></name> <argument_list pos:line="56" pos:column="24">(<argument><expr><name pos:line="56" pos:column="25">_nl_state_lock<pos:position pos:line="56" pos:column="39"/></name></expr></argument>)<pos:position pos:line="56" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="41"/></expr_stmt>

  <return pos:line="58" pos:column="3">return <expr><name pos:line="58" pos:column="10">new_domain<pos:position pos:line="58" pos:column="20"/></name></expr>;<pos:position pos:line="58" pos:column="21"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></unit>

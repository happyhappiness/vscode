<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1897_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">shrink_histfile<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">void<pos:position pos:line="1" pos:column="34"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">tmpfname<pos:position pos:line="3" pos:column="16"/></name><index pos:line="3" pos:column="16">[<expr><name pos:line="3" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="3" pos:column="32"/></name></expr>]<pos:position pos:line="3" pos:column="33"/></index></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">FILE<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">f<pos:position pos:line="4" pos:column="10"/></name></decl>, <modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="13">tmp<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name pos:line="4" pos:column="19">NULL<pos:position pos:line="4" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name><name pos:line="5" pos:column="7">n<pos:position pos:line="5" pos:column="8"/></name><index pos:line="5" pos:column="8">[<expr><name pos:line="5" pos:column="9">HC_LAST<pos:position pos:line="5" pos:column="16"/></name></expr>]<pos:position pos:line="5" pos:column="17"/></index></name> <init pos:line="5" pos:column="18">= <expr><block pos:line="5" pos:column="20">{ <expr><literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal></expr> }<pos:position pos:line="5" pos:column="25"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">line<pos:position pos:line="6" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="13">hclass<pos:position pos:line="6" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="21">read<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">linebuf<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><name pos:line="7" pos:column="19">NULL<pos:position pos:line="7" pos:column="23"/></name></expr></init></decl>, <modifier pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="26">p<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">buflen<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">regen_file<pos:position pos:line="9" pos:column="17"/></name> <init pos:line="9" pos:column="18">= <expr><literal type="number" pos:line="9" pos:column="20">0<pos:position pos:line="9" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">HASH<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name><name pos:line="10" pos:column="9">dup_hashes<pos:position pos:line="10" pos:column="19"/></name><index pos:line="10" pos:column="19">[<expr><name pos:line="10" pos:column="20">HC_LAST<pos:position pos:line="10" pos:column="27"/></name></expr>]<pos:position pos:line="10" pos:column="28"/></index></name> <init pos:line="10" pos:column="29">= <expr><block pos:line="10" pos:column="31">{ <expr><literal type="number" pos:line="10" pos:column="33">0<pos:position pos:line="10" pos:column="34"/></literal></expr> }<pos:position pos:line="10" pos:column="36"/></block></expr></init></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">(<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">f<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <call><name pos:line="12" pos:column="12">fopen<pos:position pos:line="12" pos:column="17"/></name> <argument_list pos:line="12" pos:column="18">(<argument><expr><name pos:line="12" pos:column="19">HistFile<pos:position pos:line="12" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="29">"r"<pos:position pos:line="12" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call><operator pos:line="12" pos:column="33">)<pos:position pos:line="12" pos:column="34"/></operator> <operator pos:line="12" pos:column="35">==<pos:position pos:line="12" pos:column="37"/></operator> <name pos:line="12" pos:column="38">NULL<pos:position pos:line="12" pos:column="42"/></name></expr>)<pos:position pos:line="12" pos:column="43"/></condition><then pos:line="12" pos:column="43">
    <block type="pseudo"><return pos:line="13" pos:column="5">return;<pos:position pos:line="13" pos:column="12"/></return></block></then></if>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><call><name pos:line="15" pos:column="7">option<pos:position pos:line="15" pos:column="13"/></name> <argument_list pos:line="15" pos:column="14">(<argument><expr><name pos:line="15" pos:column="15">OPTHISTREMOVEDUPS<pos:position pos:line="15" pos:column="32"/></name></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="34"/></condition><then pos:line="15" pos:column="34">
    <block type="pseudo"><for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init><expr><name pos:line="16" pos:column="10">hclass<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <literal type="number" pos:line="16" pos:column="19">0<pos:position pos:line="16" pos:column="20"/></literal></expr>;<pos:position pos:line="16" pos:column="21"/></init> <condition><expr><name pos:line="16" pos:column="22">hclass<pos:position pos:line="16" pos:column="28"/></name> <operator pos:line="16" pos:column="29">&lt;<pos:position pos:line="16" pos:column="33"/></operator> <name pos:line="16" pos:column="31">HC_LAST<pos:position pos:line="16" pos:column="38"/></name></expr>;<pos:position pos:line="16" pos:column="39"/></condition> <incr><expr><name pos:line="16" pos:column="40">hclass<pos:position pos:line="16" pos:column="46"/></name><operator pos:line="16" pos:column="46">++<pos:position pos:line="16" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="49"/></control>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="7">dup_hashes<pos:position pos:line="17" pos:column="17"/></name><index pos:line="17" pos:column="17">[<expr><name pos:line="17" pos:column="18">hclass<pos:position pos:line="17" pos:column="24"/></name></expr>]<pos:position pos:line="17" pos:column="25"/></index></name> <operator pos:line="17" pos:column="26">=<pos:position pos:line="17" pos:column="27"/></operator> <call><name pos:line="17" pos:column="28">hash_create<pos:position pos:line="17" pos:column="39"/></name> <argument_list pos:line="17" pos:column="40">(<argument><expr><call><name pos:line="17" pos:column="41">MAX<pos:position pos:line="17" pos:column="44"/></name> <argument_list pos:line="17" pos:column="45">(<argument><expr><literal type="number" pos:line="17" pos:column="46">10<pos:position pos:line="17" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="50">SaveHist<pos:position pos:line="17" pos:column="58"/></name> <operator pos:line="17" pos:column="59">*<pos:position pos:line="17" pos:column="60"/></operator> <literal type="number" pos:line="17" pos:column="61">2<pos:position pos:line="17" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="65">MUTT_HASH_STRDUP_KEYS<pos:position pos:line="17" pos:column="86"/></name></expr></argument>)<pos:position pos:line="17" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="88"/></expr_stmt></block></for></block></then></if>

  <expr_stmt><expr><name pos:line="19" pos:column="3">line<pos:position pos:line="19" pos:column="7"/></name> <operator pos:line="19" pos:column="8">=<pos:position pos:line="19" pos:column="9"/></operator> <literal type="number" pos:line="19" pos:column="10">0<pos:position pos:line="19" pos:column="11"/></literal></expr>;<pos:position pos:line="19" pos:column="12"/></expr_stmt>
  <while pos:line="20" pos:column="3">while <condition pos:line="20" pos:column="9">(<expr><operator pos:line="20" pos:column="10">(<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="11">linebuf<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <call><name pos:line="20" pos:column="21">mutt_read_line<pos:position pos:line="20" pos:column="35"/></name> <argument_list pos:line="20" pos:column="36">(<argument><expr><name pos:line="20" pos:column="37">linebuf<pos:position pos:line="20" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="46">&amp;<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="47">buflen<pos:position pos:line="20" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="55">f<pos:position pos:line="20" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="58">&amp;<pos:position pos:line="20" pos:column="63"/></operator><name pos:line="20" pos:column="59">line<pos:position pos:line="20" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="65">0<pos:position pos:line="20" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="67"/></argument_list></call><operator pos:line="20" pos:column="67">)<pos:position pos:line="20" pos:column="68"/></operator> <operator pos:line="20" pos:column="69">!=<pos:position pos:line="20" pos:column="71"/></operator> <name pos:line="20" pos:column="72">NULL<pos:position pos:line="20" pos:column="76"/></name></expr>)<pos:position pos:line="20" pos:column="77"/></condition>
  <block pos:line="21" pos:column="3">{
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name pos:line="22" pos:column="9">sscanf<pos:position pos:line="22" pos:column="15"/></name> <argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">linebuf<pos:position pos:line="22" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="26">"%d:%n"<pos:position pos:line="22" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="22" pos:column="35">&amp;<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="36">hclass<pos:position pos:line="22" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="44">&amp;<pos:position pos:line="22" pos:column="49"/></operator><name pos:line="22" pos:column="45">read<pos:position pos:line="22" pos:column="49"/></name></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></call> <operator pos:line="22" pos:column="51">&lt;<pos:position pos:line="22" pos:column="55"/></operator> <literal type="number" pos:line="22" pos:column="53">1<pos:position pos:line="22" pos:column="54"/></literal> <operator pos:line="22" pos:column="55">||<pos:position pos:line="22" pos:column="57"/></operator> <name pos:line="22" pos:column="58">read<pos:position pos:line="22" pos:column="62"/></name> <operator pos:line="22" pos:column="63">==<pos:position pos:line="22" pos:column="65"/></operator> <literal type="number" pos:line="22" pos:column="66">0<pos:position pos:line="22" pos:column="67"/></literal> <operator pos:line="22" pos:column="68">||<pos:position pos:line="22" pos:column="70"/></operator>
        <operator pos:line="23" pos:column="9">*<pos:position pos:line="23" pos:column="10"/></operator><operator pos:line="23" pos:column="10">(<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="11">p<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <name pos:line="23" pos:column="15">linebuf<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">+<pos:position pos:line="23" pos:column="24"/></operator> <call><name pos:line="23" pos:column="25">strlen<pos:position pos:line="23" pos:column="31"/></name> <argument_list pos:line="23" pos:column="32">(<argument><expr><name pos:line="23" pos:column="33">linebuf<pos:position pos:line="23" pos:column="40"/></name></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></call> <operator pos:line="23" pos:column="42">-<pos:position pos:line="23" pos:column="43"/></operator> <literal type="number" pos:line="23" pos:column="44">1<pos:position pos:line="23" pos:column="45"/></literal><operator pos:line="23" pos:column="45">)<pos:position pos:line="23" pos:column="46"/></operator> <operator pos:line="23" pos:column="47">!=<pos:position pos:line="23" pos:column="49"/></operator> <literal type="char" pos:line="23" pos:column="50">'|'<pos:position pos:line="23" pos:column="53"/></literal> <operator pos:line="23" pos:column="54">||<pos:position pos:line="23" pos:column="56"/></operator> <name pos:line="23" pos:column="57">hclass<pos:position pos:line="23" pos:column="63"/></name> <operator pos:line="23" pos:column="64">&lt;<pos:position pos:line="23" pos:column="68"/></operator> <literal type="number" pos:line="23" pos:column="66">0<pos:position pos:line="23" pos:column="67"/></literal></expr>)<pos:position pos:line="23" pos:column="68"/></condition><then pos:line="23" pos:column="68">
    <block pos:line="24" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">mutt_error<pos:position pos:line="25" pos:column="17"/></name> <argument_list pos:line="25" pos:column="18">(<argument><expr><call><name pos:line="25" pos:column="19">_<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><literal type="string" pos:line="25" pos:column="21">"Bad history file format (line %d)"<pos:position pos:line="25" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="25" pos:column="59">line<pos:position pos:line="25" pos:column="63"/></name></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="65"/></expr_stmt>
      <goto pos:line="26" pos:column="7">goto <name pos:line="26" pos:column="12">cleanup<pos:position pos:line="26" pos:column="19"/></name>;<pos:position pos:line="26" pos:column="20"/></goto>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="28" pos:column="5">/* silently ignore too high class (probably newer mutt) */</comment>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">hclass<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">&gt;=<pos:position pos:line="29" pos:column="21"/></operator> <name pos:line="29" pos:column="19">HC_LAST<pos:position pos:line="29" pos:column="26"/></name></expr>)<pos:position pos:line="29" pos:column="27"/></condition><then pos:line="29" pos:column="27">
      <block type="pseudo"><continue pos:line="30" pos:column="7">continue;<pos:position pos:line="30" pos:column="16"/></continue></block></then></if>
    <expr_stmt><expr><operator pos:line="31" pos:column="5">*<pos:position pos:line="31" pos:column="6"/></operator><name pos:line="31" pos:column="6">p<pos:position pos:line="31" pos:column="7"/></name> <operator pos:line="31" pos:column="8">=<pos:position pos:line="31" pos:column="9"/></operator> <literal type="char" pos:line="31" pos:column="10">'\0'<pos:position pos:line="31" pos:column="14"/></literal></expr>;<pos:position pos:line="31" pos:column="15"/></expr_stmt>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><call><name pos:line="32" pos:column="9">option<pos:position pos:line="32" pos:column="15"/></name> <argument_list pos:line="32" pos:column="16">(<argument><expr><name pos:line="32" pos:column="17">OPTHISTREMOVEDUPS<pos:position pos:line="32" pos:column="34"/></name></expr></argument>)<pos:position pos:line="32" pos:column="35"/></argument_list></call> <operator pos:line="32" pos:column="36">&amp;&amp;<pos:position pos:line="32" pos:column="46"/></operator>
        <operator pos:line="33" pos:column="9">(<pos:position pos:line="33" pos:column="10"/></operator><call><name pos:line="33" pos:column="10">dup_hash_inc<pos:position pos:line="33" pos:column="22"/></name> <argument_list pos:line="33" pos:column="23">(<argument><expr><name><name pos:line="33" pos:column="24">dup_hashes<pos:position pos:line="33" pos:column="34"/></name><index pos:line="33" pos:column="34">[<expr><name pos:line="33" pos:column="35">hclass<pos:position pos:line="33" pos:column="41"/></name></expr>]<pos:position pos:line="33" pos:column="42"/></index></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="44">linebuf<pos:position pos:line="33" pos:column="51"/></name> <operator pos:line="33" pos:column="52">+<pos:position pos:line="33" pos:column="53"/></operator> <name pos:line="33" pos:column="54">read<pos:position pos:line="33" pos:column="58"/></name></expr></argument>)<pos:position pos:line="33" pos:column="59"/></argument_list></call> <operator pos:line="33" pos:column="60">&gt;<pos:position pos:line="33" pos:column="64"/></operator> <literal type="number" pos:line="33" pos:column="62">1<pos:position pos:line="33" pos:column="63"/></literal><operator pos:line="33" pos:column="63">)<pos:position pos:line="33" pos:column="64"/></operator></expr>)<pos:position pos:line="33" pos:column="65"/></condition><then pos:line="33" pos:column="65">
    <block pos:line="34" pos:column="5">{
      <expr_stmt><expr><name pos:line="35" pos:column="7">regen_file<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <literal type="number" pos:line="35" pos:column="20">1<pos:position pos:line="35" pos:column="21"/></literal></expr>;<pos:position pos:line="35" pos:column="22"/></expr_stmt>
      <continue pos:line="36" pos:column="7">continue;<pos:position pos:line="36" pos:column="16"/></continue>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">n<pos:position pos:line="38" pos:column="6"/></name><index pos:line="38" pos:column="6">[<expr><name pos:line="38" pos:column="7">hclass<pos:position pos:line="38" pos:column="13"/></name></expr>]<pos:position pos:line="38" pos:column="14"/></index></name><operator pos:line="38" pos:column="14">++<pos:position pos:line="38" pos:column="16"/></operator></expr>;<pos:position pos:line="38" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="39" pos:column="4"/></block></while>

  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><operator pos:line="41" pos:column="7">!<pos:position pos:line="41" pos:column="8"/></operator><name pos:line="41" pos:column="8">regen_file<pos:position pos:line="41" pos:column="18"/></name></expr>)<pos:position pos:line="41" pos:column="19"/></condition><then pos:line="41" pos:column="19">
    <block type="pseudo"><for pos:line="42" pos:column="5">for<control pos:line="42" pos:column="8">(<init><expr><name pos:line="42" pos:column="9">hclass<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <name pos:line="42" pos:column="18">HC_FIRST<pos:position pos:line="42" pos:column="26"/></name></expr>;<pos:position pos:line="42" pos:column="27"/></init> <condition><expr><name pos:line="42" pos:column="28">hclass<pos:position pos:line="42" pos:column="34"/></name> <operator pos:line="42" pos:column="35">&lt;<pos:position pos:line="42" pos:column="39"/></operator> <name pos:line="42" pos:column="37">HC_LAST<pos:position pos:line="42" pos:column="44"/></name></expr>;<pos:position pos:line="42" pos:column="45"/></condition> <incr><expr><name pos:line="42" pos:column="46">hclass<pos:position pos:line="42" pos:column="52"/></name><operator pos:line="42" pos:column="52">++<pos:position pos:line="42" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="42" pos:column="55"/></control>
      <block type="pseudo"><if pos:line="43" pos:column="7">if <condition pos:line="43" pos:column="10">(<expr><name><name pos:line="43" pos:column="11">n<pos:position pos:line="43" pos:column="12"/></name><index pos:line="43" pos:column="12">[<expr><name pos:line="43" pos:column="13">hclass<pos:position pos:line="43" pos:column="19"/></name></expr>]<pos:position pos:line="43" pos:column="20"/></index></name> <operator pos:line="43" pos:column="21">&gt;<pos:position pos:line="43" pos:column="25"/></operator> <name pos:line="43" pos:column="23">SaveHist<pos:position pos:line="43" pos:column="31"/></name></expr>)<pos:position pos:line="43" pos:column="32"/></condition><then pos:line="43" pos:column="32">
      <block pos:line="44" pos:column="7">{
        <expr_stmt><expr><name pos:line="45" pos:column="9">regen_file<pos:position pos:line="45" pos:column="19"/></name> <operator pos:line="45" pos:column="20">=<pos:position pos:line="45" pos:column="21"/></operator> <literal type="number" pos:line="45" pos:column="22">1<pos:position pos:line="45" pos:column="23"/></literal></expr>;<pos:position pos:line="45" pos:column="24"/></expr_stmt>
        <break pos:line="46" pos:column="9">break;<pos:position pos:line="46" pos:column="15"/></break>
      }<pos:position pos:line="47" pos:column="8"/></block></then></if></block></for></block></then></if>

  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><name pos:line="49" pos:column="7">regen_file<pos:position pos:line="49" pos:column="17"/></name></expr>)<pos:position pos:line="49" pos:column="18"/></condition><then pos:line="49" pos:column="18">
  <block pos:line="50" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">mutt_mktemp<pos:position pos:line="51" pos:column="16"/></name> <argument_list pos:line="51" pos:column="17">(<argument><expr><name pos:line="51" pos:column="18">tmpfname<pos:position pos:line="51" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="28">sizeof <argument_list pos:line="51" pos:column="35">(<argument><expr><name pos:line="51" pos:column="36">tmpfname<pos:position pos:line="51" pos:column="44"/></name></expr></argument>)<pos:position pos:line="51" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="47"/></expr_stmt>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><operator pos:line="52" pos:column="9">(<pos:position pos:line="52" pos:column="10"/></operator><name pos:line="52" pos:column="10">tmp<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">=<pos:position pos:line="52" pos:column="15"/></operator> <call><name pos:line="52" pos:column="16">safe_fopen<pos:position pos:line="52" pos:column="26"/></name> <argument_list pos:line="52" pos:column="27">(<argument><expr><name pos:line="52" pos:column="28">tmpfname<pos:position pos:line="52" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="38">"w+"<pos:position pos:line="52" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="43"/></argument_list></call><operator pos:line="52" pos:column="43">)<pos:position pos:line="52" pos:column="44"/></operator> <operator pos:line="52" pos:column="45">==<pos:position pos:line="52" pos:column="47"/></operator> <name pos:line="52" pos:column="48">NULL<pos:position pos:line="52" pos:column="52"/></name></expr>)<pos:position pos:line="52" pos:column="53"/></condition><then pos:line="52" pos:column="53">
    <block pos:line="53" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="54" pos:column="7">mutt_perror<pos:position pos:line="54" pos:column="18"/></name> <argument_list pos:line="54" pos:column="19">(<argument><expr><name pos:line="54" pos:column="20">tmpfname<pos:position pos:line="54" pos:column="28"/></name></expr></argument>)<pos:position pos:line="54" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="30"/></expr_stmt>
      <goto pos:line="55" pos:column="7">goto <name pos:line="55" pos:column="12">cleanup<pos:position pos:line="55" pos:column="19"/></name>;<pos:position pos:line="55" pos:column="20"/></goto>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">rewind<pos:position pos:line="57" pos:column="11"/></name> <argument_list pos:line="57" pos:column="12">(<argument><expr><name pos:line="57" pos:column="13">f<pos:position pos:line="57" pos:column="14"/></name></expr></argument>)<pos:position pos:line="57" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="58" pos:column="5">line<pos:position pos:line="58" pos:column="9"/></name> <operator pos:line="58" pos:column="10">=<pos:position pos:line="58" pos:column="11"/></operator> <literal type="number" pos:line="58" pos:column="12">0<pos:position pos:line="58" pos:column="13"/></literal></expr>;<pos:position pos:line="58" pos:column="14"/></expr_stmt>
    <while pos:line="59" pos:column="5">while <condition pos:line="59" pos:column="11">(<expr><operator pos:line="59" pos:column="12">(<pos:position pos:line="59" pos:column="13"/></operator><name pos:line="59" pos:column="13">linebuf<pos:position pos:line="59" pos:column="20"/></name> <operator pos:line="59" pos:column="21">=<pos:position pos:line="59" pos:column="22"/></operator> <call><name pos:line="59" pos:column="23">mutt_read_line<pos:position pos:line="59" pos:column="37"/></name> <argument_list pos:line="59" pos:column="38">(<argument><expr><name pos:line="59" pos:column="39">linebuf<pos:position pos:line="59" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="48">&amp;<pos:position pos:line="59" pos:column="53"/></operator><name pos:line="59" pos:column="49">buflen<pos:position pos:line="59" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="57">f<pos:position pos:line="59" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="60">&amp;<pos:position pos:line="59" pos:column="65"/></operator><name pos:line="59" pos:column="61">line<pos:position pos:line="59" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="67">0<pos:position pos:line="59" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="69"/></argument_list></call><operator pos:line="59" pos:column="69">)<pos:position pos:line="59" pos:column="70"/></operator> <operator pos:line="59" pos:column="71">!=<pos:position pos:line="59" pos:column="73"/></operator> <name pos:line="59" pos:column="74">NULL<pos:position pos:line="59" pos:column="78"/></name></expr>)<pos:position pos:line="59" pos:column="79"/></condition>
    <block pos:line="60" pos:column="5">{
      <if pos:line="61" pos:column="7">if <condition pos:line="61" pos:column="10">(<expr><call><name pos:line="61" pos:column="11">sscanf<pos:position pos:line="61" pos:column="17"/></name> <argument_list pos:line="61" pos:column="18">(<argument><expr><name pos:line="61" pos:column="19">linebuf<pos:position pos:line="61" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="28">"%d:%n"<pos:position pos:line="61" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="61" pos:column="37">&amp;<pos:position pos:line="61" pos:column="42"/></operator><name pos:line="61" pos:column="38">hclass<pos:position pos:line="61" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="46">&amp;<pos:position pos:line="61" pos:column="51"/></operator><name pos:line="61" pos:column="47">read<pos:position pos:line="61" pos:column="51"/></name></expr></argument>)<pos:position pos:line="61" pos:column="52"/></argument_list></call> <operator pos:line="61" pos:column="53">&lt;<pos:position pos:line="61" pos:column="57"/></operator> <literal type="number" pos:line="61" pos:column="55">1<pos:position pos:line="61" pos:column="56"/></literal> <operator pos:line="61" pos:column="57">||<pos:position pos:line="61" pos:column="59"/></operator> <name pos:line="61" pos:column="60">read<pos:position pos:line="61" pos:column="64"/></name> <operator pos:line="61" pos:column="65">==<pos:position pos:line="61" pos:column="67"/></operator> <literal type="number" pos:line="61" pos:column="68">0<pos:position pos:line="61" pos:column="69"/></literal> <operator pos:line="61" pos:column="70">||<pos:position pos:line="61" pos:column="72"/></operator>
          <operator pos:line="62" pos:column="11">*<pos:position pos:line="62" pos:column="12"/></operator><operator pos:line="62" pos:column="12">(<pos:position pos:line="62" pos:column="13"/></operator><name pos:line="62" pos:column="13">p<pos:position pos:line="62" pos:column="14"/></name> <operator pos:line="62" pos:column="15">=<pos:position pos:line="62" pos:column="16"/></operator> <name pos:line="62" pos:column="17">linebuf<pos:position pos:line="62" pos:column="24"/></name> <operator pos:line="62" pos:column="25">+<pos:position pos:line="62" pos:column="26"/></operator> <call><name pos:line="62" pos:column="27">strlen<pos:position pos:line="62" pos:column="33"/></name> <argument_list pos:line="62" pos:column="34">(<argument><expr><name pos:line="62" pos:column="35">linebuf<pos:position pos:line="62" pos:column="42"/></name></expr></argument>)<pos:position pos:line="62" pos:column="43"/></argument_list></call> <operator pos:line="62" pos:column="44">-<pos:position pos:line="62" pos:column="45"/></operator> <literal type="number" pos:line="62" pos:column="46">1<pos:position pos:line="62" pos:column="47"/></literal><operator pos:line="62" pos:column="47">)<pos:position pos:line="62" pos:column="48"/></operator> <operator pos:line="62" pos:column="49">!=<pos:position pos:line="62" pos:column="51"/></operator> <literal type="char" pos:line="62" pos:column="52">'|'<pos:position pos:line="62" pos:column="55"/></literal> <operator pos:line="62" pos:column="56">||<pos:position pos:line="62" pos:column="58"/></operator> <name pos:line="62" pos:column="59">hclass<pos:position pos:line="62" pos:column="65"/></name> <operator pos:line="62" pos:column="66">&lt;<pos:position pos:line="62" pos:column="70"/></operator> <literal type="number" pos:line="62" pos:column="68">0<pos:position pos:line="62" pos:column="69"/></literal></expr>)<pos:position pos:line="62" pos:column="70"/></condition><then pos:line="62" pos:column="70">
      <block pos:line="63" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">mutt_error<pos:position pos:line="64" pos:column="19"/></name> <argument_list pos:line="64" pos:column="20">(<argument><expr><call><name pos:line="64" pos:column="21">_<pos:position pos:line="64" pos:column="22"/></name><argument_list pos:line="64" pos:column="22">(<argument><expr><literal type="string" pos:line="64" pos:column="23">"Bad history file format (line %d)"<pos:position pos:line="64" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="64" pos:column="61">line<pos:position pos:line="64" pos:column="65"/></name></expr></argument>)<pos:position pos:line="64" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="67"/></expr_stmt>
        <goto pos:line="65" pos:column="9">goto <name pos:line="65" pos:column="14">cleanup<pos:position pos:line="65" pos:column="21"/></name>;<pos:position pos:line="65" pos:column="22"/></goto>
      }<pos:position pos:line="66" pos:column="8"/></block></then></if>
      <if pos:line="67" pos:column="7">if <condition pos:line="67" pos:column="10">(<expr><name pos:line="67" pos:column="11">hclass<pos:position pos:line="67" pos:column="17"/></name> <operator pos:line="67" pos:column="18">&gt;=<pos:position pos:line="67" pos:column="23"/></operator> <name pos:line="67" pos:column="21">HC_LAST<pos:position pos:line="67" pos:column="28"/></name></expr>)<pos:position pos:line="67" pos:column="29"/></condition><then pos:line="67" pos:column="29">
	<block type="pseudo"><continue pos:line="68" pos:column="9">continue;<pos:position pos:line="68" pos:column="18"/></continue></block></then></if>
      <expr_stmt><expr><operator pos:line="69" pos:column="7">*<pos:position pos:line="69" pos:column="8"/></operator><name pos:line="69" pos:column="8">p<pos:position pos:line="69" pos:column="9"/></name> <operator pos:line="69" pos:column="10">=<pos:position pos:line="69" pos:column="11"/></operator> <literal type="char" pos:line="69" pos:column="12">'\0'<pos:position pos:line="69" pos:column="16"/></literal></expr>;<pos:position pos:line="69" pos:column="17"/></expr_stmt>
      <if pos:line="70" pos:column="7">if <condition pos:line="70" pos:column="10">(<expr><call><name pos:line="70" pos:column="11">option<pos:position pos:line="70" pos:column="17"/></name> <argument_list pos:line="70" pos:column="18">(<argument><expr><name pos:line="70" pos:column="19">OPTHISTREMOVEDUPS<pos:position pos:line="70" pos:column="36"/></name></expr></argument>)<pos:position pos:line="70" pos:column="37"/></argument_list></call> <operator pos:line="70" pos:column="38">&amp;&amp;<pos:position pos:line="70" pos:column="48"/></operator>
          <operator pos:line="71" pos:column="11">(<pos:position pos:line="71" pos:column="12"/></operator><call><name pos:line="71" pos:column="12">dup_hash_dec<pos:position pos:line="71" pos:column="24"/></name> <argument_list pos:line="71" pos:column="25">(<argument><expr><name><name pos:line="71" pos:column="26">dup_hashes<pos:position pos:line="71" pos:column="36"/></name><index pos:line="71" pos:column="36">[<expr><name pos:line="71" pos:column="37">hclass<pos:position pos:line="71" pos:column="43"/></name></expr>]<pos:position pos:line="71" pos:column="44"/></index></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="46">linebuf<pos:position pos:line="71" pos:column="53"/></name> <operator pos:line="71" pos:column="54">+<pos:position pos:line="71" pos:column="55"/></operator> <name pos:line="71" pos:column="56">read<pos:position pos:line="71" pos:column="60"/></name></expr></argument>)<pos:position pos:line="71" pos:column="61"/></argument_list></call> <operator pos:line="71" pos:column="62">&gt;<pos:position pos:line="71" pos:column="66"/></operator> <literal type="number" pos:line="71" pos:column="64">0<pos:position pos:line="71" pos:column="65"/></literal><operator pos:line="71" pos:column="65">)<pos:position pos:line="71" pos:column="66"/></operator></expr>)<pos:position pos:line="71" pos:column="67"/></condition><then pos:line="71" pos:column="67">
        <block type="pseudo"><continue pos:line="72" pos:column="9">continue;<pos:position pos:line="72" pos:column="18"/></continue></block></then></if>
      <expr_stmt><expr><operator pos:line="73" pos:column="7">*<pos:position pos:line="73" pos:column="8"/></operator><name pos:line="73" pos:column="8">p<pos:position pos:line="73" pos:column="9"/></name> <operator pos:line="73" pos:column="10">=<pos:position pos:line="73" pos:column="11"/></operator> <literal type="char" pos:line="73" pos:column="12">'|'<pos:position pos:line="73" pos:column="15"/></literal></expr>;<pos:position pos:line="73" pos:column="16"/></expr_stmt>
      <if pos:line="74" pos:column="7">if <condition pos:line="74" pos:column="10">(<expr><name><name pos:line="74" pos:column="11">n<pos:position pos:line="74" pos:column="12"/></name><index pos:line="74" pos:column="12">[<expr><name pos:line="74" pos:column="13">hclass<pos:position pos:line="74" pos:column="19"/></name></expr>]<pos:position pos:line="74" pos:column="20"/></index></name><operator pos:line="74" pos:column="20">--<pos:position pos:line="74" pos:column="22"/></operator> <operator pos:line="74" pos:column="23">&lt;=<pos:position pos:line="74" pos:column="28"/></operator> <name pos:line="74" pos:column="26">SaveHist<pos:position pos:line="74" pos:column="34"/></name></expr>)<pos:position pos:line="74" pos:column="35"/></condition><then pos:line="74" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="75" pos:column="9">fprintf<pos:position pos:line="75" pos:column="16"/></name> <argument_list pos:line="75" pos:column="17">(<argument><expr><name pos:line="75" pos:column="18">tmp<pos:position pos:line="75" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="23">"%s\n"<pos:position pos:line="75" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="31">linebuf<pos:position pos:line="75" pos:column="38"/></name></expr></argument>)<pos:position pos:line="75" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="40"/></expr_stmt></block></then></if>
    }<pos:position pos:line="76" pos:column="6"/></block></while>
  }<pos:position pos:line="77" pos:column="4"/></block></then></if>

<label><name pos:line="79" pos:column="1">cleanup<pos:position pos:line="79" pos:column="8"/></name>:<pos:position pos:line="79" pos:column="9"/></label>
  <expr_stmt><expr><call><name pos:line="80" pos:column="3">safe_fclose<pos:position pos:line="80" pos:column="14"/></name> <argument_list pos:line="80" pos:column="15">(<argument><expr><operator pos:line="80" pos:column="16">&amp;<pos:position pos:line="80" pos:column="21"/></operator><name pos:line="80" pos:column="17">f<pos:position pos:line="80" pos:column="18"/></name></expr></argument>)<pos:position pos:line="80" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="81" pos:column="3">FREE<pos:position pos:line="81" pos:column="7"/></name> <argument_list pos:line="81" pos:column="8">(<argument><expr><operator pos:line="81" pos:column="9">&amp;<pos:position pos:line="81" pos:column="14"/></operator><name pos:line="81" pos:column="10">linebuf<pos:position pos:line="81" pos:column="17"/></name></expr></argument>)<pos:position pos:line="81" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="19"/></expr_stmt>
  <if pos:line="82" pos:column="3">if <condition pos:line="82" pos:column="6">(<expr><name pos:line="82" pos:column="7">tmp<pos:position pos:line="82" pos:column="10"/></name> <operator pos:line="82" pos:column="11">!=<pos:position pos:line="82" pos:column="13"/></operator> <name pos:line="82" pos:column="14">NULL<pos:position pos:line="82" pos:column="18"/></name></expr>)<pos:position pos:line="82" pos:column="19"/></condition><then pos:line="82" pos:column="19">
  <block pos:line="83" pos:column="3">{
    <if pos:line="84" pos:column="5">if <condition pos:line="84" pos:column="8">(<expr><call><name pos:line="84" pos:column="9">fflush<pos:position pos:line="84" pos:column="15"/></name> <argument_list pos:line="84" pos:column="16">(<argument><expr><name pos:line="84" pos:column="17">tmp<pos:position pos:line="84" pos:column="20"/></name></expr></argument>)<pos:position pos:line="84" pos:column="21"/></argument_list></call> <operator pos:line="84" pos:column="22">==<pos:position pos:line="84" pos:column="24"/></operator> <literal type="number" pos:line="84" pos:column="25">0<pos:position pos:line="84" pos:column="26"/></literal> <operator pos:line="84" pos:column="27">&amp;&amp;<pos:position pos:line="84" pos:column="37"/></operator>
        <operator pos:line="85" pos:column="9">(<pos:position pos:line="85" pos:column="10"/></operator><name pos:line="85" pos:column="10">f<pos:position pos:line="85" pos:column="11"/></name> <operator pos:line="85" pos:column="12">=<pos:position pos:line="85" pos:column="13"/></operator> <call><name pos:line="85" pos:column="14">fopen<pos:position pos:line="85" pos:column="19"/></name> <argument_list pos:line="85" pos:column="20">(<argument><expr><name pos:line="85" pos:column="21">HistFile<pos:position pos:line="85" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="31">"w"<pos:position pos:line="85" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="35"/></argument_list></call><operator pos:line="85" pos:column="35">)<pos:position pos:line="85" pos:column="36"/></operator> <operator pos:line="85" pos:column="37">!=<pos:position pos:line="85" pos:column="39"/></operator> <name pos:line="85" pos:column="40">NULL<pos:position pos:line="85" pos:column="44"/></name></expr>)<pos:position pos:line="85" pos:column="45"/></condition><then pos:line="85" pos:column="45"> <comment type="block" pos:line="85" pos:column="46">/* __FOPEN_CHECKED__ */</comment>
    <block pos:line="86" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="87" pos:column="7">rewind<pos:position pos:line="87" pos:column="13"/></name> <argument_list pos:line="87" pos:column="14">(<argument><expr><name pos:line="87" pos:column="15">tmp<pos:position pos:line="87" pos:column="18"/></name></expr></argument>)<pos:position pos:line="87" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="88" pos:column="7">mutt_copy_stream<pos:position pos:line="88" pos:column="23"/></name> <argument_list pos:line="88" pos:column="24">(<argument><expr><name pos:line="88" pos:column="25">tmp<pos:position pos:line="88" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="30">f<pos:position pos:line="88" pos:column="31"/></name></expr></argument>)<pos:position pos:line="88" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="89" pos:column="7">safe_fclose<pos:position pos:line="89" pos:column="18"/></name> <argument_list pos:line="89" pos:column="19">(<argument><expr><operator pos:line="89" pos:column="20">&amp;<pos:position pos:line="89" pos:column="25"/></operator><name pos:line="89" pos:column="21">f<pos:position pos:line="89" pos:column="22"/></name></expr></argument>)<pos:position pos:line="89" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">safe_fclose<pos:position pos:line="91" pos:column="16"/></name> <argument_list pos:line="91" pos:column="17">(<argument><expr><operator pos:line="91" pos:column="18">&amp;<pos:position pos:line="91" pos:column="23"/></operator><name pos:line="91" pos:column="19">tmp<pos:position pos:line="91" pos:column="22"/></name></expr></argument>)<pos:position pos:line="91" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="92" pos:column="5">unlink<pos:position pos:line="92" pos:column="11"/></name> <argument_list pos:line="92" pos:column="12">(<argument><expr><name pos:line="92" pos:column="13">tmpfname<pos:position pos:line="92" pos:column="21"/></name></expr></argument>)<pos:position pos:line="92" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="93" pos:column="4"/></block></then></if>
  <if pos:line="94" pos:column="3">if <condition pos:line="94" pos:column="6">(<expr><call><name pos:line="94" pos:column="7">option<pos:position pos:line="94" pos:column="13"/></name> <argument_list pos:line="94" pos:column="14">(<argument><expr><name pos:line="94" pos:column="15">OPTHISTREMOVEDUPS<pos:position pos:line="94" pos:column="32"/></name></expr></argument>)<pos:position pos:line="94" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="94" pos:column="34"/></condition><then pos:line="94" pos:column="34">
    <block type="pseudo"><for pos:line="95" pos:column="5">for <control pos:line="95" pos:column="9">(<init><expr><name pos:line="95" pos:column="10">hclass<pos:position pos:line="95" pos:column="16"/></name> <operator pos:line="95" pos:column="17">=<pos:position pos:line="95" pos:column="18"/></operator> <literal type="number" pos:line="95" pos:column="19">0<pos:position pos:line="95" pos:column="20"/></literal></expr>;<pos:position pos:line="95" pos:column="21"/></init> <condition><expr><name pos:line="95" pos:column="22">hclass<pos:position pos:line="95" pos:column="28"/></name> <operator pos:line="95" pos:column="29">&lt;<pos:position pos:line="95" pos:column="33"/></operator> <name pos:line="95" pos:column="31">HC_LAST<pos:position pos:line="95" pos:column="38"/></name></expr>;<pos:position pos:line="95" pos:column="39"/></condition> <incr><expr><name pos:line="95" pos:column="40">hclass<pos:position pos:line="95" pos:column="46"/></name><operator pos:line="95" pos:column="46">++<pos:position pos:line="95" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="95" pos:column="49"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="96" pos:column="7">hash_destroy<pos:position pos:line="96" pos:column="19"/></name> <argument_list pos:line="96" pos:column="20">(<argument><expr><operator pos:line="96" pos:column="21">&amp;<pos:position pos:line="96" pos:column="26"/></operator><name><name pos:line="96" pos:column="22">dup_hashes<pos:position pos:line="96" pos:column="32"/></name><index pos:line="96" pos:column="32">[<expr><name pos:line="96" pos:column="33">hclass<pos:position pos:line="96" pos:column="39"/></name></expr>]<pos:position pos:line="96" pos:column="40"/></index></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="42">NULL<pos:position pos:line="96" pos:column="46"/></name></expr></argument>)<pos:position pos:line="96" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="48"/></expr_stmt></block></for></block></then></if>
}<pos:position pos:line="97" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_419_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">smime_getkeys<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">ENVELOPE<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">env<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">ADDRESS<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">t<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">found<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><literal type="number" pos:line="4" pos:column="15">0<pos:position pos:line="4" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><call><name pos:line="6" pos:column="7">option<pos:position pos:line="6" pos:column="13"/></name> <argument_list pos:line="6" pos:column="14">(<argument><expr><name pos:line="6" pos:column="15">OPTSDEFAULTDECRYPTKEY<pos:position pos:line="6" pos:column="36"/></name></expr></argument>)<pos:position pos:line="6" pos:column="37"/></argument_list></call> <operator pos:line="6" pos:column="38">&amp;&amp;<pos:position pos:line="6" pos:column="48"/></operator> <name pos:line="6" pos:column="41">SmimeDefaultKey<pos:position pos:line="6" pos:column="56"/></name> <operator pos:line="6" pos:column="57">&amp;&amp;<pos:position pos:line="6" pos:column="67"/></operator> <operator pos:line="6" pos:column="60">*<pos:position pos:line="6" pos:column="61"/></operator><name pos:line="6" pos:column="61">SmimeDefaultKey<pos:position pos:line="6" pos:column="76"/></name></expr>)<pos:position pos:line="6" pos:column="77"/></condition><then pos:line="6" pos:column="77">
  <block pos:line="7" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">snprintf<pos:position pos:line="8" pos:column="13"/></name> <argument_list pos:line="8" pos:column="14">(<argument><expr><name pos:line="8" pos:column="15">SmimeKeyToUse<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="30">sizeof <argument_list pos:line="8" pos:column="37">(<argument><expr><name pos:line="8" pos:column="38">SmimeKeyToUse<pos:position pos:line="8" pos:column="51"/></name></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="54">"%s/%s"<pos:position pos:line="8" pos:column="61"/></literal></expr></argument>, 
	      <argument><expr><call><name pos:line="9" pos:column="15">NONULL<pos:position pos:line="9" pos:column="21"/></name> <argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">SmimeKeys<pos:position pos:line="9" pos:column="32"/></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="9" pos:column="35">SmimeDefaultKey<pos:position pos:line="9" pos:column="50"/></name></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="52"/></expr_stmt>
    
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">snprintf<pos:position pos:line="11" pos:column="13"/></name> <argument_list pos:line="11" pos:column="14">(<argument><expr><name pos:line="11" pos:column="15">SmimeCertToUse<pos:position pos:line="11" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="31">sizeof <argument_list pos:line="11" pos:column="38">(<argument><expr><name pos:line="11" pos:column="39">SmimeCertToUse<pos:position pos:line="11" pos:column="53"/></name></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="56">"%s/%s"<pos:position pos:line="11" pos:column="63"/></literal></expr></argument>,
	      <argument><expr><call><name pos:line="12" pos:column="15">NONULL<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name pos:line="12" pos:column="22">SmimeCertificates<pos:position pos:line="12" pos:column="39"/></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="12" pos:column="42">SmimeDefaultKey<pos:position pos:line="12" pos:column="57"/></name></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt>

    <return pos:line="14" pos:column="5">return;<pos:position pos:line="14" pos:column="12"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <for pos:line="17" pos:column="3">for <control pos:line="17" pos:column="7">(<init><expr><name pos:line="17" pos:column="8">t<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <name><name pos:line="17" pos:column="12">env<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">-&gt;<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="17">to<pos:position pos:line="17" pos:column="19"/></name></name></expr>;<pos:position pos:line="17" pos:column="20"/></init> <condition><expr><operator pos:line="17" pos:column="21">!<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">found<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">&amp;&amp;<pos:position pos:line="17" pos:column="38"/></operator> <name pos:line="17" pos:column="31">t<pos:position pos:line="17" pos:column="32"/></name></expr>;<pos:position pos:line="17" pos:column="33"/></condition> <incr><expr><name pos:line="17" pos:column="34">t<pos:position pos:line="17" pos:column="35"/></name> <operator pos:line="17" pos:column="36">=<pos:position pos:line="17" pos:column="37"/></operator> <name><name pos:line="17" pos:column="38">t<pos:position pos:line="17" pos:column="39"/></name><operator pos:line="17" pos:column="39">-&gt;<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="41">next<pos:position pos:line="17" pos:column="45"/></name></name></expr></incr>)<pos:position pos:line="17" pos:column="46"/></control>
    <block type="pseudo"><if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name pos:line="18" pos:column="9">mutt_addr_is_user<pos:position pos:line="18" pos:column="26"/></name> <argument_list pos:line="18" pos:column="27">(<argument><expr><name pos:line="18" pos:column="28">t<pos:position pos:line="18" pos:column="29"/></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="31"/></condition><then pos:line="18" pos:column="31">
    <block pos:line="19" pos:column="5">{
      <expr_stmt><expr><name pos:line="20" pos:column="7">found<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <literal type="number" pos:line="20" pos:column="15">1<pos:position pos:line="20" pos:column="16"/></literal></expr>;<pos:position pos:line="20" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">_smime_getkeys<pos:position pos:line="21" pos:column="21"/></name> <argument_list pos:line="21" pos:column="22">(<argument><expr><name><name pos:line="21" pos:column="23">t<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">-&gt;<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="26">mailbox<pos:position pos:line="21" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if></block></for>
  <for pos:line="23" pos:column="3">for <control pos:line="23" pos:column="7">(<init><expr><name pos:line="23" pos:column="8">t<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">=<pos:position pos:line="23" pos:column="11"/></operator> <name><name pos:line="23" pos:column="12">env<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">-&gt;<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="17">cc<pos:position pos:line="23" pos:column="19"/></name></name></expr>;<pos:position pos:line="23" pos:column="20"/></init> <condition><expr><operator pos:line="23" pos:column="21">!<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">found<pos:position pos:line="23" pos:column="27"/></name> <operator pos:line="23" pos:column="28">&amp;&amp;<pos:position pos:line="23" pos:column="38"/></operator> <name pos:line="23" pos:column="31">t<pos:position pos:line="23" pos:column="32"/></name></expr>;<pos:position pos:line="23" pos:column="33"/></condition> <incr><expr><name pos:line="23" pos:column="34">t<pos:position pos:line="23" pos:column="35"/></name> <operator pos:line="23" pos:column="36">=<pos:position pos:line="23" pos:column="37"/></operator> <name><name pos:line="23" pos:column="38">t<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">-&gt;<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="41">next<pos:position pos:line="23" pos:column="45"/></name></name></expr></incr>)<pos:position pos:line="23" pos:column="46"/></control>
    <block type="pseudo"><if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><call><name pos:line="24" pos:column="9">mutt_addr_is_user<pos:position pos:line="24" pos:column="26"/></name> <argument_list pos:line="24" pos:column="27">(<argument><expr><name pos:line="24" pos:column="28">t<pos:position pos:line="24" pos:column="29"/></name></expr></argument>)<pos:position pos:line="24" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="31"/></condition><then pos:line="24" pos:column="31">
    <block pos:line="25" pos:column="5">{
      <expr_stmt><expr><name pos:line="26" pos:column="7">found<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">=<pos:position pos:line="26" pos:column="14"/></operator> <literal type="number" pos:line="26" pos:column="15">1<pos:position pos:line="26" pos:column="16"/></literal></expr>;<pos:position pos:line="26" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">_smime_getkeys<pos:position pos:line="27" pos:column="21"/></name> <argument_list pos:line="27" pos:column="22">(<argument><expr><name><name pos:line="27" pos:column="23">t<pos:position pos:line="27" pos:column="24"/></name><operator pos:line="27" pos:column="24">-&gt;<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="26">mailbox<pos:position pos:line="27" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if></block></for>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><operator pos:line="29" pos:column="7">!<pos:position pos:line="29" pos:column="8"/></operator><name pos:line="29" pos:column="8">found<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">&amp;&amp;<pos:position pos:line="29" pos:column="24"/></operator> <operator pos:line="29" pos:column="17">(<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">t<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">=<pos:position pos:line="29" pos:column="21"/></operator> <call><name pos:line="29" pos:column="22">mutt_default_from<pos:position pos:line="29" pos:column="39"/></name><argument_list pos:line="29" pos:column="39">()<pos:position pos:line="29" pos:column="41"/></argument_list></call><operator pos:line="29" pos:column="41">)<pos:position pos:line="29" pos:column="42"/></operator></expr>)<pos:position pos:line="29" pos:column="43"/></condition><then pos:line="29" pos:column="43">
  <block pos:line="30" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">_smime_getkeys<pos:position pos:line="31" pos:column="19"/></name> <argument_list pos:line="31" pos:column="20">(<argument><expr><name><name pos:line="31" pos:column="21">t<pos:position pos:line="31" pos:column="22"/></name><operator pos:line="31" pos:column="22">-&gt;<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="24">mailbox<pos:position pos:line="31" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">rfc822_free_address<pos:position pos:line="32" pos:column="24"/></name> <argument_list pos:line="32" pos:column="25">(<argument><expr><operator pos:line="32" pos:column="26">&amp;<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="27">t<pos:position pos:line="32" pos:column="28"/></name></expr></argument>)<pos:position pos:line="32" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

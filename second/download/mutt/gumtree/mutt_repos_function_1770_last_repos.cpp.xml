<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1770_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_group<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">BUFFER<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">buf<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">BUFFER<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">s<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">unsigned<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">long<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">data<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="69">BUFFER<pos:position pos:line="1" pos:column="75"/></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">err<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">group_context_t<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">gc<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><name pos:line="3" pos:column="25">NULL<pos:position pos:line="3" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">group_state_t<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">state<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><name pos:line="4" pos:column="25">NONE<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">ADDRESS<pos:position pos:line="5" pos:column="10"/></name> <modifier pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></modifier></type><name pos:line="5" pos:column="12">addr<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><name pos:line="5" pos:column="19">NULL<pos:position pos:line="5" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">estr<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><name pos:line="6" pos:column="16">NULL<pos:position pos:line="6" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

  <do pos:line="8" pos:column="3">do
  <block pos:line="9" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">mutt_extract_token<pos:position pos:line="10" pos:column="23"/></name> <argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">buf<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="30">s<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="33">0<pos:position pos:line="10" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">parse_group_context<pos:position pos:line="11" pos:column="28"/></name> <argument_list pos:line="11" pos:column="29">(<argument><expr><operator pos:line="11" pos:column="30">&amp;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="31">gc<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="35">buf<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="40">s<pos:position pos:line="11" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="43">data<pos:position pos:line="11" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="49">err<pos:position pos:line="11" pos:column="52"/></name></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call> <operator pos:line="11" pos:column="54">==<pos:position pos:line="11" pos:column="56"/></operator> <operator pos:line="11" pos:column="57">-<pos:position pos:line="11" pos:column="58"/></operator><literal type="number" pos:line="11" pos:column="58">1<pos:position pos:line="11" pos:column="59"/></literal></expr>)<pos:position pos:line="11" pos:column="60"/></condition><then pos:line="11" pos:column="60">
      <block type="pseudo"><goto pos:line="12" pos:column="7">goto <name pos:line="12" pos:column="12">bail<pos:position pos:line="12" pos:column="16"/></name>;<pos:position pos:line="12" pos:column="17"/></goto></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">data<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">==<pos:position pos:line="14" pos:column="16"/></operator> <name pos:line="14" pos:column="17">MUTT_UNGROUP<pos:position pos:line="14" pos:column="29"/></name> <operator pos:line="14" pos:column="30">&amp;&amp;<pos:position pos:line="14" pos:column="40"/></operator> <operator pos:line="14" pos:column="33">!<pos:position pos:line="14" pos:column="34"/></operator><call><name pos:line="14" pos:column="34">mutt_strcasecmp<pos:position pos:line="14" pos:column="49"/></name> <argument_list pos:line="14" pos:column="50">(<argument><expr><name><name pos:line="14" pos:column="51">buf<pos:position pos:line="14" pos:column="54"/></name><operator pos:line="14" pos:column="54">-&gt;<pos:position pos:line="14" pos:column="59"/></operator><name pos:line="14" pos:column="56">data<pos:position pos:line="14" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="62">"*"<pos:position pos:line="14" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="67"/></condition><then pos:line="14" pos:column="67">
    <block pos:line="15" pos:column="5">{
      <if pos:line="16" pos:column="7">if <condition pos:line="16" pos:column="10">(<expr><call><name pos:line="16" pos:column="11">mutt_group_context_clear<pos:position pos:line="16" pos:column="35"/></name> <argument_list pos:line="16" pos:column="36">(<argument><expr><operator pos:line="16" pos:column="37">&amp;<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="38">gc<pos:position pos:line="16" pos:column="40"/></name></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call> <operator pos:line="16" pos:column="42">&lt;<pos:position pos:line="16" pos:column="46"/></operator> <literal type="number" pos:line="16" pos:column="44">0<pos:position pos:line="16" pos:column="45"/></literal></expr>)<pos:position pos:line="16" pos:column="46"/></condition><then pos:line="16" pos:column="46">
	<block type="pseudo"><goto pos:line="17" pos:column="9">goto <name pos:line="17" pos:column="14">bail<pos:position pos:line="17" pos:column="18"/></name>;<pos:position pos:line="17" pos:column="19"/></goto></block></then></if>
      <goto pos:line="18" pos:column="7">goto <name pos:line="18" pos:column="12">out<pos:position pos:line="18" pos:column="15"/></name>;<pos:position pos:line="18" pos:column="16"/></goto>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">!<pos:position pos:line="21" pos:column="10"/></operator><call><name pos:line="21" pos:column="10">mutt_strcasecmp<pos:position pos:line="21" pos:column="25"/></name> <argument_list pos:line="21" pos:column="26">(<argument><expr><name><name pos:line="21" pos:column="27">buf<pos:position pos:line="21" pos:column="30"/></name><operator pos:line="21" pos:column="30">-&gt;<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="32">data<pos:position pos:line="21" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="38">"-rx"<pos:position pos:line="21" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="45"/></condition><then pos:line="21" pos:column="45">
      <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="7">state<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <name pos:line="22" pos:column="15">RX<pos:position pos:line="22" pos:column="17"/></name></expr>;<pos:position pos:line="22" pos:column="18"/></expr_stmt></block></then>
    <elseif pos:line="23" pos:column="5">else <if pos:line="23" pos:column="10">if <condition pos:line="23" pos:column="13">(<expr><operator pos:line="23" pos:column="14">!<pos:position pos:line="23" pos:column="15"/></operator><call><name pos:line="23" pos:column="15">mutt_strcasecmp<pos:position pos:line="23" pos:column="30"/></name> <argument_list pos:line="23" pos:column="31">(<argument><expr><name><name pos:line="23" pos:column="32">buf<pos:position pos:line="23" pos:column="35"/></name><operator pos:line="23" pos:column="35">-&gt;<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="37">data<pos:position pos:line="23" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="43">"-addr"<pos:position pos:line="23" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="52"/></condition><then pos:line="23" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="7">state<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <name pos:line="24" pos:column="15">ADDR<pos:position pos:line="24" pos:column="19"/></name></expr>;<pos:position pos:line="24" pos:column="20"/></expr_stmt></block></then></if></elseif>
    <else pos:line="25" pos:column="5">else
    <block pos:line="26" pos:column="5">{
      <switch pos:line="27" pos:column="7">switch <condition pos:line="27" pos:column="14">(<expr><name pos:line="27" pos:column="15">state<pos:position pos:line="27" pos:column="20"/></name></expr>)<pos:position pos:line="27" pos:column="21"/></condition>
      <block pos:line="28" pos:column="7">{
	<case pos:line="29" pos:column="9">case <expr><name pos:line="29" pos:column="14">NONE<pos:position pos:line="29" pos:column="18"/></name></expr>:<pos:position pos:line="29" pos:column="19"/></case>
	  <expr_stmt><expr><call><name pos:line="30" pos:column="11">snprintf<pos:position pos:line="30" pos:column="19"/></name> <argument_list pos:line="30" pos:column="20">(<argument><expr><name><name pos:line="30" pos:column="21">err<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">-&gt;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="26">data<pos:position pos:line="30" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="32">err<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">-&gt;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="37">dsize<pos:position pos:line="30" pos:column="42"/></name></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="44">_<pos:position pos:line="30" pos:column="45"/></name><argument_list pos:line="30" pos:column="45">(<argument><expr><literal type="string" pos:line="30" pos:column="46">"%sgroup: missing -rx or -addr."<pos:position pos:line="30" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="79"/></argument_list></call></expr></argument>,
		   <argument><expr><ternary><condition><expr><name pos:line="31" pos:column="20">data<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">==<pos:position pos:line="31" pos:column="27"/></operator> <name pos:line="31" pos:column="28">MUTT_UNGROUP<pos:position pos:line="31" pos:column="40"/></name></expr> ?<pos:position pos:line="31" pos:column="42"/></condition><then pos:line="31" pos:column="42"> <expr><literal type="string" pos:line="31" pos:column="43">"un"<pos:position pos:line="31" pos:column="47"/></literal></expr> <pos:position pos:line="31" pos:column="48"/></then><else pos:line="31" pos:column="48">: <expr><literal type="string" pos:line="31" pos:column="50">""<pos:position pos:line="31" pos:column="52"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="54"/></expr_stmt>
	  <goto pos:line="32" pos:column="11">goto <name pos:line="32" pos:column="16">bail<pos:position pos:line="32" pos:column="20"/></name>;<pos:position pos:line="32" pos:column="21"/></goto>

	<case pos:line="34" pos:column="9">case <expr><name pos:line="34" pos:column="14">RX<pos:position pos:line="34" pos:column="16"/></name></expr>:<pos:position pos:line="34" pos:column="17"/></case>
	  <if pos:line="35" pos:column="11">if <condition pos:line="35" pos:column="14">(<expr><name pos:line="35" pos:column="15">data<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">==<pos:position pos:line="35" pos:column="22"/></operator> <name pos:line="35" pos:column="23">MUTT_GROUP<pos:position pos:line="35" pos:column="33"/></name> <operator pos:line="35" pos:column="34">&amp;&amp;<pos:position pos:line="35" pos:column="44"/></operator>
	      <call><name pos:line="36" pos:column="15">mutt_group_context_add_rx<pos:position pos:line="36" pos:column="40"/></name> <argument_list pos:line="36" pos:column="41">(<argument><expr><name pos:line="36" pos:column="42">gc<pos:position pos:line="36" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="46">buf<pos:position pos:line="36" pos:column="49"/></name><operator pos:line="36" pos:column="49">-&gt;<pos:position pos:line="36" pos:column="54"/></operator><name pos:line="36" pos:column="51">data<pos:position pos:line="36" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="57">REG_ICASE<pos:position pos:line="36" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="68">err<pos:position pos:line="36" pos:column="71"/></name></expr></argument>)<pos:position pos:line="36" pos:column="72"/></argument_list></call> <operator pos:line="36" pos:column="73">!=<pos:position pos:line="36" pos:column="75"/></operator> <literal type="number" pos:line="36" pos:column="76">0<pos:position pos:line="36" pos:column="77"/></literal></expr>)<pos:position pos:line="36" pos:column="78"/></condition><then pos:line="36" pos:column="78">
	    <block type="pseudo"><goto pos:line="37" pos:column="13">goto <name pos:line="37" pos:column="18">bail<pos:position pos:line="37" pos:column="22"/></name>;<pos:position pos:line="37" pos:column="23"/></goto></block></then>
	  <elseif pos:line="38" pos:column="11">else <if pos:line="38" pos:column="16">if <condition pos:line="38" pos:column="19">(<expr><name pos:line="38" pos:column="20">data<pos:position pos:line="38" pos:column="24"/></name> <operator pos:line="38" pos:column="25">==<pos:position pos:line="38" pos:column="27"/></operator> <name pos:line="38" pos:column="28">MUTT_UNGROUP<pos:position pos:line="38" pos:column="40"/></name> <operator pos:line="38" pos:column="41">&amp;&amp;<pos:position pos:line="38" pos:column="51"/></operator>
		   <call><name pos:line="39" pos:column="20">mutt_group_context_remove_rx<pos:position pos:line="39" pos:column="48"/></name> <argument_list pos:line="39" pos:column="49">(<argument><expr><name pos:line="39" pos:column="50">gc<pos:position pos:line="39" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="54">buf<pos:position pos:line="39" pos:column="57"/></name><operator pos:line="39" pos:column="57">-&gt;<pos:position pos:line="39" pos:column="62"/></operator><name pos:line="39" pos:column="59">data<pos:position pos:line="39" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="64"/></argument_list></call> <operator pos:line="39" pos:column="65">&lt;<pos:position pos:line="39" pos:column="69"/></operator> <literal type="number" pos:line="39" pos:column="67">0<pos:position pos:line="39" pos:column="68"/></literal></expr>)<pos:position pos:line="39" pos:column="69"/></condition><then pos:line="39" pos:column="69">
	    <block type="pseudo"><goto pos:line="40" pos:column="13">goto <name pos:line="40" pos:column="18">bail<pos:position pos:line="40" pos:column="22"/></name>;<pos:position pos:line="40" pos:column="23"/></goto></block></then></if></elseif></if>
	  <break pos:line="41" pos:column="11">break;<pos:position pos:line="41" pos:column="17"/></break>

	<case pos:line="43" pos:column="9">case <expr><name pos:line="43" pos:column="14">ADDR<pos:position pos:line="43" pos:column="18"/></name></expr>:<pos:position pos:line="43" pos:column="19"/></case>
	  <if pos:line="44" pos:column="11">if <condition pos:line="44" pos:column="14">(<expr><operator pos:line="44" pos:column="15">(<pos:position pos:line="44" pos:column="16"/></operator><name pos:line="44" pos:column="16">addr<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">=<pos:position pos:line="44" pos:column="22"/></operator> <call><name pos:line="44" pos:column="23">mutt_parse_adrlist<pos:position pos:line="44" pos:column="41"/></name> <argument_list pos:line="44" pos:column="42">(<argument><expr><name pos:line="44" pos:column="43">NULL<pos:position pos:line="44" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="49">buf<pos:position pos:line="44" pos:column="52"/></name><operator pos:line="44" pos:column="52">-&gt;<pos:position pos:line="44" pos:column="57"/></operator><name pos:line="44" pos:column="54">data<pos:position pos:line="44" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="59"/></argument_list></call><operator pos:line="44" pos:column="59">)<pos:position pos:line="44" pos:column="60"/></operator> <operator pos:line="44" pos:column="61">==<pos:position pos:line="44" pos:column="63"/></operator> <name pos:line="44" pos:column="64">NULL<pos:position pos:line="44" pos:column="68"/></name></expr>)<pos:position pos:line="44" pos:column="69"/></condition><then pos:line="44" pos:column="69">
	    <block type="pseudo"><goto pos:line="45" pos:column="13">goto <name pos:line="45" pos:column="18">bail<pos:position pos:line="45" pos:column="22"/></name>;<pos:position pos:line="45" pos:column="23"/></goto></block></then></if>
	  <if pos:line="46" pos:column="11">if <condition pos:line="46" pos:column="14">(<expr><call><name pos:line="46" pos:column="15">mutt_addrlist_to_intl<pos:position pos:line="46" pos:column="36"/></name> <argument_list pos:line="46" pos:column="37">(<argument><expr><name pos:line="46" pos:column="38">addr<pos:position pos:line="46" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="44">&amp;<pos:position pos:line="46" pos:column="49"/></operator><name pos:line="46" pos:column="45">estr<pos:position pos:line="46" pos:column="49"/></name></expr></argument>)<pos:position pos:line="46" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="51"/></condition><then pos:line="46" pos:column="51">
	  <block pos:line="47" pos:column="11">{ 
	    <expr_stmt><expr><call><name pos:line="48" pos:column="13">snprintf<pos:position pos:line="48" pos:column="21"/></name> <argument_list pos:line="48" pos:column="22">(<argument><expr><name><name pos:line="48" pos:column="23">err<pos:position pos:line="48" pos:column="26"/></name><operator pos:line="48" pos:column="26">-&gt;<pos:position pos:line="48" pos:column="31"/></operator><name pos:line="48" pos:column="28">data<pos:position pos:line="48" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="34">err<pos:position pos:line="48" pos:column="37"/></name><operator pos:line="48" pos:column="37">-&gt;<pos:position pos:line="48" pos:column="42"/></operator><name pos:line="48" pos:column="39">dsize<pos:position pos:line="48" pos:column="44"/></name></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="46">_<pos:position pos:line="48" pos:column="47"/></name><argument_list pos:line="48" pos:column="47">(<argument><expr><literal type="string" pos:line="48" pos:column="48">"%sgroup: warning: bad IDN '%s'.\n"<pos:position pos:line="48" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="84"/></argument_list></call></expr></argument>,
		      <argument><expr><ternary><condition><expr><name pos:line="49" pos:column="23">data<pos:position pos:line="49" pos:column="27"/></name> <operator pos:line="49" pos:column="28">==<pos:position pos:line="49" pos:column="30"/></operator> <literal type="number" pos:line="49" pos:column="31">1<pos:position pos:line="49" pos:column="32"/></literal></expr> ?<pos:position pos:line="49" pos:column="34"/></condition><then pos:line="49" pos:column="34"> <expr><literal type="string" pos:line="49" pos:column="35">"un"<pos:position pos:line="49" pos:column="39"/></literal></expr> <pos:position pos:line="49" pos:column="40"/></then><else pos:line="49" pos:column="40">: <expr><literal type="string" pos:line="49" pos:column="42">""<pos:position pos:line="49" pos:column="44"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="49" pos:column="46">estr<pos:position pos:line="49" pos:column="50"/></name></expr></argument>)<pos:position pos:line="49" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="52"/></expr_stmt>
	    <goto pos:line="50" pos:column="13">goto <name pos:line="50" pos:column="18">bail<pos:position pos:line="50" pos:column="22"/></name>;<pos:position pos:line="50" pos:column="23"/></goto>
	  }<pos:position pos:line="51" pos:column="12"/></block></then></if>
	  <if pos:line="52" pos:column="11">if <condition pos:line="52" pos:column="14">(<expr><name pos:line="52" pos:column="15">data<pos:position pos:line="52" pos:column="19"/></name> <operator pos:line="52" pos:column="20">==<pos:position pos:line="52" pos:column="22"/></operator> <name pos:line="52" pos:column="23">MUTT_GROUP<pos:position pos:line="52" pos:column="33"/></name></expr>)<pos:position pos:line="52" pos:column="34"/></condition><then pos:line="52" pos:column="34">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="13">mutt_group_context_add_adrlist<pos:position pos:line="53" pos:column="43"/></name> <argument_list pos:line="53" pos:column="44">(<argument><expr><name pos:line="53" pos:column="45">gc<pos:position pos:line="53" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="49">addr<pos:position pos:line="53" pos:column="53"/></name></expr></argument>)<pos:position pos:line="53" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="55"/></expr_stmt></block></then>
	  <elseif pos:line="54" pos:column="11">else <if pos:line="54" pos:column="16">if <condition pos:line="54" pos:column="19">(<expr><name pos:line="54" pos:column="20">data<pos:position pos:line="54" pos:column="24"/></name> <operator pos:line="54" pos:column="25">==<pos:position pos:line="54" pos:column="27"/></operator> <name pos:line="54" pos:column="28">MUTT_UNGROUP<pos:position pos:line="54" pos:column="40"/></name></expr>)<pos:position pos:line="54" pos:column="41"/></condition><then pos:line="54" pos:column="41">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="13">mutt_group_context_remove_adrlist<pos:position pos:line="55" pos:column="46"/></name> <argument_list pos:line="55" pos:column="47">(<argument><expr><name pos:line="55" pos:column="48">gc<pos:position pos:line="55" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="52">addr<pos:position pos:line="55" pos:column="56"/></name></expr></argument>)<pos:position pos:line="55" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="58"/></expr_stmt></block></then></if></elseif></if>
	  <expr_stmt><expr><call><name pos:line="56" pos:column="11">rfc822_free_address<pos:position pos:line="56" pos:column="30"/></name> <argument_list pos:line="56" pos:column="31">(<argument><expr><operator pos:line="56" pos:column="32">&amp;<pos:position pos:line="56" pos:column="37"/></operator><name pos:line="56" pos:column="33">addr<pos:position pos:line="56" pos:column="37"/></name></expr></argument>)<pos:position pos:line="56" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="39"/></expr_stmt>
	  <break pos:line="57" pos:column="11">break;<pos:position pos:line="57" pos:column="17"/></break>
      }<pos:position pos:line="58" pos:column="8"/></block></switch>
    }<pos:position pos:line="59" pos:column="6"/></block></else></if>
  }<pos:position pos:line="60" pos:column="4"/></block> while <condition pos:line="60" pos:column="11">(<expr><call><name pos:line="60" pos:column="12">MoreArgs<pos:position pos:line="60" pos:column="20"/></name> <argument_list pos:line="60" pos:column="21">(<argument><expr><name pos:line="60" pos:column="22">s<pos:position pos:line="60" pos:column="23"/></name></expr></argument>)<pos:position pos:line="60" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="25"/></condition>;<pos:position pos:line="60" pos:column="26"/></do>

<label><name pos:line="62" pos:column="1">out<pos:position pos:line="62" pos:column="4"/></name>:<pos:position pos:line="62" pos:column="5"/></label>
  <expr_stmt><expr><call><name pos:line="63" pos:column="3">mutt_group_context_destroy<pos:position pos:line="63" pos:column="29"/></name> <argument_list pos:line="63" pos:column="30">(<argument><expr><operator pos:line="63" pos:column="31">&amp;<pos:position pos:line="63" pos:column="36"/></operator><name pos:line="63" pos:column="32">gc<pos:position pos:line="63" pos:column="34"/></name></expr></argument>)<pos:position pos:line="63" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="36"/></expr_stmt>
  <return pos:line="64" pos:column="3">return <expr><literal type="number" pos:line="64" pos:column="10">0<pos:position pos:line="64" pos:column="11"/></literal></expr>;<pos:position pos:line="64" pos:column="12"/></return>

<label><name pos:line="66" pos:column="1">bail<pos:position pos:line="66" pos:column="5"/></name>:<pos:position pos:line="66" pos:column="6"/></label>
  <expr_stmt><expr><call><name pos:line="67" pos:column="3">mutt_group_context_destroy<pos:position pos:line="67" pos:column="29"/></name> <argument_list pos:line="67" pos:column="30">(<argument><expr><operator pos:line="67" pos:column="31">&amp;<pos:position pos:line="67" pos:column="36"/></operator><name pos:line="67" pos:column="32">gc<pos:position pos:line="67" pos:column="34"/></name></expr></argument>)<pos:position pos:line="67" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="36"/></expr_stmt>
  <return pos:line="68" pos:column="3">return <expr><operator pos:line="68" pos:column="10">-<pos:position pos:line="68" pos:column="11"/></operator><literal type="number" pos:line="68" pos:column="11">1<pos:position pos:line="68" pos:column="12"/></literal></expr>;<pos:position pos:line="68" pos:column="13"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_745_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">pgp_gpgme_invoke_import<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">fname<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">gpgme_data_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">keydata<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">gpgme_error_t<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">err<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name><modifier pos:line="5" pos:column="7">*<pos:position pos:line="5" pos:column="8"/></modifier></type> <name pos:line="5" pos:column="9">in<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">FILE<pos:position pos:line="6" pos:column="7"/></name><modifier pos:line="6" pos:column="7">*<pos:position pos:line="6" pos:column="8"/></modifier></type> <name pos:line="6" pos:column="9">out<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><operator pos:line="8" pos:column="8">(<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="9">in<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">safe_fopen<pos:position pos:line="8" pos:column="24"/></name> <argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">fname<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="33">"r"<pos:position pos:line="8" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call><operator pos:line="8" pos:column="37">)<pos:position pos:line="8" pos:column="38"/></operator></expr>)<pos:position pos:line="8" pos:column="39"/></condition><then pos:line="8" pos:column="39">
    <block type="pseudo"><return pos:line="9" pos:column="5">return;<pos:position pos:line="9" pos:column="12"/></return></block></then></if>
  <comment type="block" pos:line="10" pos:column="3">/* Note that the stream, "in", needs to be kept open while the keydata
   * is used.
   */</comment>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><operator pos:line="13" pos:column="7">(<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">err<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">gpgme_data_new_from_stream<pos:position pos:line="13" pos:column="40"/></name> <argument_list pos:line="13" pos:column="41">(<argument><expr><operator pos:line="13" pos:column="42">&amp;<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="43">keydata<pos:position pos:line="13" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="52">in<pos:position pos:line="13" pos:column="54"/></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call><operator pos:line="13" pos:column="55">)<pos:position pos:line="13" pos:column="56"/></operator> <operator pos:line="13" pos:column="57">!=<pos:position pos:line="13" pos:column="59"/></operator> <name pos:line="13" pos:column="60">GPG_ERR_NO_ERROR<pos:position pos:line="13" pos:column="76"/></name></expr>)<pos:position pos:line="13" pos:column="77"/></condition><then pos:line="13" pos:column="77">
  <block pos:line="14" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">safe_fclose<pos:position pos:line="15" pos:column="16"/></name> <argument_list pos:line="15" pos:column="17">(<argument><expr><operator pos:line="15" pos:column="18">&amp;<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="19">in<pos:position pos:line="15" pos:column="21"/></name></expr></argument>)<pos:position pos:line="15" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">mutt_error<pos:position pos:line="16" pos:column="15"/></name> <argument_list pos:line="16" pos:column="16">(<argument><expr><call><name pos:line="16" pos:column="17">_<pos:position pos:line="16" pos:column="18"/></name><argument_list pos:line="16" pos:column="18">(<argument><expr><literal type="string" pos:line="16" pos:column="19">"error allocating data object: %s\n"<pos:position pos:line="16" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="58">gpgme_strerror<pos:position pos:line="16" pos:column="72"/></name> <argument_list pos:line="16" pos:column="73">(<argument><expr><name pos:line="16" pos:column="74">err<pos:position pos:line="16" pos:column="77"/></name></expr></argument>)<pos:position pos:line="16" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">mutt_sleep<pos:position pos:line="17" pos:column="15"/></name> <argument_list pos:line="17" pos:column="16">(<argument><expr><literal type="number" pos:line="17" pos:column="17">1<pos:position pos:line="17" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="20"/></expr_stmt>
    <return pos:line="18" pos:column="5">return;<pos:position pos:line="18" pos:column="12"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><call><name pos:line="21" pos:column="7">pgp_gpgme_extract_keys<pos:position pos:line="21" pos:column="29"/></name> <argument_list pos:line="21" pos:column="30">(<argument><expr><name pos:line="21" pos:column="31">keydata<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="40">&amp;<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="41">out<pos:position pos:line="21" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="46">0<pos:position pos:line="21" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="49"/></condition><then pos:line="21" pos:column="49">
  <block pos:line="22" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">mutt_error<pos:position pos:line="23" pos:column="15"/></name> <argument_list pos:line="23" pos:column="16">(<argument><expr><call><name pos:line="23" pos:column="17">_<pos:position pos:line="23" pos:column="18"/></name><argument_list pos:line="23" pos:column="18">(<argument><expr><literal type="string" pos:line="23" pos:column="19">"Error extracting key data!\n"<pos:position pos:line="23" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">mutt_sleep<pos:position pos:line="24" pos:column="15"/></name> <argument_list pos:line="24" pos:column="16">(<argument><expr><literal type="number" pos:line="24" pos:column="17">1<pos:position pos:line="24" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">gpgme_data_release<pos:position pos:line="26" pos:column="21"/></name> <argument_list pos:line="26" pos:column="22">(<argument><expr><name pos:line="26" pos:column="23">keydata<pos:position pos:line="26" pos:column="30"/></name></expr></argument>)<pos:position pos:line="26" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">safe_fclose<pos:position pos:line="27" pos:column="14"/></name> <argument_list pos:line="27" pos:column="15">(<argument><expr><operator pos:line="27" pos:column="16">&amp;<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="17">in<pos:position pos:line="27" pos:column="19"/></name></expr></argument>)<pos:position pos:line="27" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">safe_fclose<pos:position pos:line="28" pos:column="14"/></name> <argument_list pos:line="28" pos:column="15">(<argument><expr><operator pos:line="28" pos:column="16">&amp;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="17">out<pos:position pos:line="28" pos:column="20"/></name></expr></argument>)<pos:position pos:line="28" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_360_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">parse_keymap<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">menu<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">BUFFER<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">s<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">maxmenus<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">int<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">nummenus<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="79">BUFFER<pos:position pos:line="1" pos:column="85"/></name> <modifier pos:line="1" pos:column="86">*<pos:position pos:line="1" pos:column="87"/></modifier></type><name pos:line="1" pos:column="87">err<pos:position pos:line="1" pos:column="90"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="91"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">BUFFER<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">buf<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name><init pos:line="4" pos:column="8">=<expr><literal type="number" pos:line="4" pos:column="9">0<pos:position pos:line="4" pos:column="10"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">p<pos:position pos:line="5" pos:column="10"/></name></decl>, <modifier pos:line="5" pos:column="12">*<pos:position pos:line="5" pos:column="13"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="13">q<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">mutt_buffer_init<pos:position pos:line="7" pos:column="19"/></name> <argument_list pos:line="7" pos:column="20">(<argument><expr><operator pos:line="7" pos:column="21">&amp;<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="22">buf<pos:position pos:line="7" pos:column="25"/></name></expr></argument>)<pos:position pos:line="7" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* menu name */</comment>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">mutt_extract_token<pos:position pos:line="10" pos:column="21"/></name> <argument_list pos:line="10" pos:column="22">(<argument><expr><operator pos:line="10" pos:column="23">&amp;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="24">buf<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="29">s<pos:position pos:line="10" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="32">0<pos:position pos:line="10" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name pos:line="11" pos:column="3">p<pos:position pos:line="11" pos:column="4"/></name> <operator pos:line="11" pos:column="5">=<pos:position pos:line="11" pos:column="6"/></operator> <name><name pos:line="11" pos:column="7">buf<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">.<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">data<pos:position pos:line="11" pos:column="15"/></name></name></expr>;<pos:position pos:line="11" pos:column="16"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><call><name pos:line="12" pos:column="7">MoreArgs<pos:position pos:line="12" pos:column="15"/></name> <argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">s<pos:position pos:line="12" pos:column="18"/></name></expr></argument>)<pos:position pos:line="12" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20">
  <block pos:line="13" pos:column="3">{
    <while pos:line="14" pos:column="5">while <condition pos:line="14" pos:column="11">(<expr><name pos:line="14" pos:column="12">i<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">&lt;<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="16">maxmenus<pos:position pos:line="14" pos:column="24"/></name></expr>)<pos:position pos:line="14" pos:column="25"/></condition>
    <block pos:line="15" pos:column="5">{
      <expr_stmt><expr><name pos:line="16" pos:column="7">q<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">=<pos:position pos:line="16" pos:column="10"/></operator> <call><name pos:line="16" pos:column="11">strchr<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><name pos:line="16" pos:column="18">p<pos:position pos:line="16" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="16" pos:column="20">','<pos:position pos:line="16" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>
      <if pos:line="17" pos:column="7">if <condition pos:line="17" pos:column="10">(<expr><name pos:line="17" pos:column="11">q<pos:position pos:line="17" pos:column="12"/></name></expr>)<pos:position pos:line="17" pos:column="13"/></condition><then pos:line="17" pos:column="13">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="18" pos:column="9">*<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">q<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <literal type="char" pos:line="18" pos:column="14">'\0'<pos:position pos:line="18" pos:column="18"/></literal></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt></block></then></if>

      <if pos:line="20" pos:column="7">if <condition pos:line="20" pos:column="10">(<expr><operator pos:line="20" pos:column="11">(<pos:position pos:line="20" pos:column="12"/></operator><name><name pos:line="20" pos:column="12">menu<pos:position pos:line="20" pos:column="16"/></name><index pos:line="20" pos:column="16">[<expr><name pos:line="20" pos:column="17">i<pos:position pos:line="20" pos:column="18"/></name></expr>]<pos:position pos:line="20" pos:column="19"/></index></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <call><name pos:line="20" pos:column="22">mutt_check_menu<pos:position pos:line="20" pos:column="37"/></name> <argument_list pos:line="20" pos:column="38">(<argument><expr><name pos:line="20" pos:column="39">p<pos:position pos:line="20" pos:column="40"/></name></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></call><operator pos:line="20" pos:column="41">)<pos:position pos:line="20" pos:column="42"/></operator> <operator pos:line="20" pos:column="43">==<pos:position pos:line="20" pos:column="45"/></operator> <operator pos:line="20" pos:column="46">-<pos:position pos:line="20" pos:column="47"/></operator><literal type="number" pos:line="20" pos:column="47">1<pos:position pos:line="20" pos:column="48"/></literal></expr>)<pos:position pos:line="20" pos:column="49"/></condition><then pos:line="20" pos:column="49">
      <block pos:line="21" pos:column="7">{
         <expr_stmt><expr><call><name pos:line="22" pos:column="10">snprintf<pos:position pos:line="22" pos:column="18"/></name> <argument_list pos:line="22" pos:column="19">(<argument><expr><name><name pos:line="22" pos:column="20">err<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">-&gt;<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="25">data<pos:position pos:line="22" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="31">err<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">-&gt;<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="36">dsize<pos:position pos:line="22" pos:column="41"/></name></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="43">_<pos:position pos:line="22" pos:column="44"/></name><argument_list pos:line="22" pos:column="44">(<argument><expr><literal type="string" pos:line="22" pos:column="45">"%s: no such menu"<pos:position pos:line="22" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="22" pos:column="66">p<pos:position pos:line="22" pos:column="67"/></name></expr></argument>)<pos:position pos:line="22" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="69"/></expr_stmt>
         <goto pos:line="23" pos:column="10">goto <name pos:line="23" pos:column="15">error<pos:position pos:line="23" pos:column="20"/></name>;<pos:position pos:line="23" pos:column="21"/></goto>
      }<pos:position pos:line="24" pos:column="8"/></block></then></if>
      <expr_stmt><expr><operator pos:line="25" pos:column="7">++<pos:position pos:line="25" pos:column="9"/></operator><name pos:line="25" pos:column="9">i<pos:position pos:line="25" pos:column="10"/></name></expr>;<pos:position pos:line="25" pos:column="11"/></expr_stmt>
      <if pos:line="26" pos:column="7">if <condition pos:line="26" pos:column="10">(<expr><name pos:line="26" pos:column="11">q<pos:position pos:line="26" pos:column="12"/></name></expr>)<pos:position pos:line="26" pos:column="13"/></condition><then pos:line="26" pos:column="13">
        <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="9">p<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">=<pos:position pos:line="27" pos:column="12"/></operator> <name pos:line="27" pos:column="13">q<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">+<pos:position pos:line="27" pos:column="15"/></operator><literal type="number" pos:line="27" pos:column="15">1<pos:position pos:line="27" pos:column="16"/></literal></expr>;<pos:position pos:line="27" pos:column="17"/></expr_stmt></block></then>
      <else pos:line="28" pos:column="7">else
        <block type="pseudo"><break pos:line="29" pos:column="9">break;<pos:position pos:line="29" pos:column="15"/></break></block></else></if>
    }<pos:position pos:line="30" pos:column="6"/></block></while>
    <expr_stmt><expr><operator pos:line="31" pos:column="5">*<pos:position pos:line="31" pos:column="6"/></operator><name pos:line="31" pos:column="6">nummenus<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="15">i<pos:position pos:line="31" pos:column="16"/></name></expr>;<pos:position pos:line="31" pos:column="17"/></expr_stmt>
    <comment type="block" pos:line="32" pos:column="5">/* key sequence */</comment>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">mutt_extract_token<pos:position pos:line="33" pos:column="23"/></name> <argument_list pos:line="33" pos:column="24">(<argument><expr><operator pos:line="33" pos:column="25">&amp;<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="26">buf<pos:position pos:line="33" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="31">s<pos:position pos:line="33" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="34">0<pos:position pos:line="33" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><operator pos:line="35" pos:column="9">!<pos:position pos:line="35" pos:column="10"/></operator><operator pos:line="35" pos:column="10">*<pos:position pos:line="35" pos:column="11"/></operator><name><name pos:line="35" pos:column="11">buf<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">.<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="15">data<pos:position pos:line="35" pos:column="19"/></name></name></expr>)<pos:position pos:line="35" pos:column="20"/></condition><then pos:line="35" pos:column="20">
    <block pos:line="36" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="37" pos:column="7">strfcpy<pos:position pos:line="37" pos:column="14"/></name> <argument_list pos:line="37" pos:column="15">(<argument><expr><name><name pos:line="37" pos:column="16">err<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">-&gt;<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="21">data<pos:position pos:line="37" pos:column="25"/></name></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="27">_<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><literal type="string" pos:line="37" pos:column="29">"null key sequence"<pos:position pos:line="37" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="51">err<pos:position pos:line="37" pos:column="54"/></name><operator pos:line="37" pos:column="54">-&gt;<pos:position pos:line="37" pos:column="59"/></operator><name pos:line="37" pos:column="56">dsize<pos:position pos:line="37" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then>
    <elseif pos:line="39" pos:column="5">else <if pos:line="39" pos:column="10">if <condition pos:line="39" pos:column="13">(<expr><call><name pos:line="39" pos:column="14">MoreArgs<pos:position pos:line="39" pos:column="22"/></name> <argument_list pos:line="39" pos:column="23">(<argument><expr><name pos:line="39" pos:column="24">s<pos:position pos:line="39" pos:column="25"/></name></expr></argument>)<pos:position pos:line="39" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="27"/></condition><then pos:line="39" pos:column="27">
      <block type="pseudo"><return pos:line="40" pos:column="7">return <expr><operator pos:line="40" pos:column="14">(<pos:position pos:line="40" pos:column="15"/></operator><name><name pos:line="40" pos:column="15">buf<pos:position pos:line="40" pos:column="18"/></name><operator pos:line="40" pos:column="18">.<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="19">data<pos:position pos:line="40" pos:column="23"/></name></name><operator pos:line="40" pos:column="23">)<pos:position pos:line="40" pos:column="24"/></operator></expr>;<pos:position pos:line="40" pos:column="25"/></return></block></then></if></elseif></if>
  }<pos:position pos:line="41" pos:column="4"/></block></then>
  <else pos:line="42" pos:column="3">else
  <block pos:line="43" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">strfcpy<pos:position pos:line="44" pos:column="12"/></name> <argument_list pos:line="44" pos:column="13">(<argument><expr><name><name pos:line="44" pos:column="14">err<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">-&gt;<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="19">data<pos:position pos:line="44" pos:column="23"/></name></name></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="25">_<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">(<argument><expr><literal type="string" pos:line="44" pos:column="27">"too few arguments"<pos:position pos:line="44" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="49">err<pos:position pos:line="44" pos:column="52"/></name><operator pos:line="44" pos:column="52">-&gt;<pos:position pos:line="44" pos:column="57"/></operator><name pos:line="44" pos:column="54">dsize<pos:position pos:line="44" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="61"/></expr_stmt>
  }<pos:position pos:line="45" pos:column="4"/></block></else></if>
<label><name pos:line="46" pos:column="1">error<pos:position pos:line="46" pos:column="6"/></name>:<pos:position pos:line="46" pos:column="7"/></label>
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">FREE<pos:position pos:line="47" pos:column="7"/></name> <argument_list pos:line="47" pos:column="8">(<argument><expr><operator pos:line="47" pos:column="9">&amp;<pos:position pos:line="47" pos:column="14"/></operator><name><name pos:line="47" pos:column="10">buf<pos:position pos:line="47" pos:column="13"/></name><operator pos:line="47" pos:column="13">.<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="14">data<pos:position pos:line="47" pos:column="18"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="20"/></expr_stmt>
  <return pos:line="48" pos:column="3">return <expr><operator pos:line="48" pos:column="10">(<pos:position pos:line="48" pos:column="11"/></operator><name pos:line="48" pos:column="11">NULL<pos:position pos:line="48" pos:column="15"/></name><operator pos:line="48" pos:column="15">)<pos:position pos:line="48" pos:column="16"/></operator></expr>;<pos:position pos:line="48" pos:column="17"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

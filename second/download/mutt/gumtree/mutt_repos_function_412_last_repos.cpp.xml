<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_412_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">smime_key_t<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type><name pos:line="1" pos:column="21">smime_parse_key<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">buf<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">smime_key_t<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">key<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">pend<pos:position pos:line="4" pos:column="13"/></name></decl>, <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="16">p<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">field<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><literal type="number" pos:line="5" pos:column="15">0<pos:position pos:line="5" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">key<pos:position pos:line="7" pos:column="6"/></name> <operator pos:line="7" pos:column="7">=<pos:position pos:line="7" pos:column="8"/></operator> <call><name pos:line="7" pos:column="9">safe_calloc<pos:position pos:line="7" pos:column="20"/></name> <argument_list pos:line="7" pos:column="21">(<argument><expr><sizeof pos:line="7" pos:column="22">sizeof <argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">smime_key_t<pos:position pos:line="7" pos:column="41"/></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="44">1<pos:position pos:line="7" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="47"/></expr_stmt>

  <for pos:line="9" pos:column="3">for <control pos:line="9" pos:column="7">(<init><expr><name pos:line="9" pos:column="8">p<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <name pos:line="9" pos:column="12">buf<pos:position pos:line="9" pos:column="15"/></name></expr>;<pos:position pos:line="9" pos:column="16"/></init> <condition><expr><name pos:line="9" pos:column="17">p<pos:position pos:line="9" pos:column="18"/></name></expr>;<pos:position pos:line="9" pos:column="19"/></condition> <incr><expr><name pos:line="9" pos:column="20">p<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">=<pos:position pos:line="9" pos:column="23"/></operator> <name pos:line="9" pos:column="24">pend<pos:position pos:line="9" pos:column="28"/></name></expr></incr>)<pos:position pos:line="9" pos:column="29"/></control>
  <block pos:line="10" pos:column="3">{
    <comment type="block" pos:line="11" pos:column="5">/* Some users manually maintain their .index file, and use a tab
     * as a delimiter, which the old parsing code (using fscanf)
     * happened to allow.  smime_keys.pl uses a space, so search for both.
     */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">(<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">pend<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <call><name pos:line="15" pos:column="17">strchr<pos:position pos:line="15" pos:column="23"/></name> <argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">p<pos:position pos:line="15" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="15" pos:column="28">' '<pos:position pos:line="15" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="32"/></argument_list></call><operator pos:line="15" pos:column="32">)<pos:position pos:line="15" pos:column="33"/></operator> <operator pos:line="15" pos:column="34">||<pos:position pos:line="15" pos:column="36"/></operator> <operator pos:line="15" pos:column="37">(<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="38">pend<pos:position pos:line="15" pos:column="42"/></name> <operator pos:line="15" pos:column="43">=<pos:position pos:line="15" pos:column="44"/></operator> <call><name pos:line="15" pos:column="45">strchr<pos:position pos:line="15" pos:column="51"/></name> <argument_list pos:line="15" pos:column="52">(<argument><expr><name pos:line="15" pos:column="53">p<pos:position pos:line="15" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="15" pos:column="56">'\t'<pos:position pos:line="15" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call><operator pos:line="15" pos:column="61">)<pos:position pos:line="15" pos:column="62"/></operator> <operator pos:line="15" pos:column="63">||<pos:position pos:line="15" pos:column="65"/></operator>
        <operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">pend<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <call><name pos:line="16" pos:column="17">strchr<pos:position pos:line="16" pos:column="23"/></name> <argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">p<pos:position pos:line="16" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="16" pos:column="28">'\n'<pos:position pos:line="16" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call><operator pos:line="16" pos:column="33">)<pos:position pos:line="16" pos:column="34"/></operator></expr>)<pos:position pos:line="16" pos:column="35"/></condition><then pos:line="16" pos:column="35">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="17" pos:column="7">*<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">pend<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">++<pos:position pos:line="17" pos:column="14"/></operator> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <literal type="number" pos:line="17" pos:column="17">0<pos:position pos:line="17" pos:column="18"/></literal></expr>;<pos:position pos:line="17" pos:column="19"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="19" pos:column="5">/* For backward compatibility, don't count consecutive delimiters
     * as an empty field.
     */</comment>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator><operator pos:line="22" pos:column="10">*<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="11">p<pos:position pos:line="22" pos:column="12"/></name></expr>)<pos:position pos:line="22" pos:column="13"/></condition><then pos:line="22" pos:column="13">
      <block type="pseudo"><continue pos:line="23" pos:column="7">continue;<pos:position pos:line="23" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="25" pos:column="5">field<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">++<pos:position pos:line="25" pos:column="12"/></operator></expr>;<pos:position pos:line="25" pos:column="13"/></expr_stmt>

    <switch pos:line="27" pos:column="5">switch <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">field<pos:position pos:line="27" pos:column="18"/></name></expr>)<pos:position pos:line="27" pos:column="19"/></condition>
    <block pos:line="28" pos:column="5">{
      <case pos:line="29" pos:column="7">case <expr><literal type="number" pos:line="29" pos:column="12">1<pos:position pos:line="29" pos:column="13"/></literal></expr>:<pos:position pos:line="29" pos:column="14"/></case>                   <comment type="block" pos:line="29" pos:column="33">/* mailbox */</comment>
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">key<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">-&gt;<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="14">email<pos:position pos:line="30" pos:column="19"/></name></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <call><name pos:line="30" pos:column="22">safe_strdup<pos:position pos:line="30" pos:column="33"/></name> <argument_list pos:line="30" pos:column="34">(<argument><expr><name pos:line="30" pos:column="35">p<pos:position pos:line="30" pos:column="36"/></name></expr></argument>)<pos:position pos:line="30" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>
        <break pos:line="31" pos:column="9">break;<pos:position pos:line="31" pos:column="15"/></break>
      <case pos:line="32" pos:column="7">case <expr><literal type="number" pos:line="32" pos:column="12">2<pos:position pos:line="32" pos:column="13"/></literal></expr>:<pos:position pos:line="32" pos:column="14"/></case>                   <comment type="block" pos:line="32" pos:column="33">/* hash */</comment>
        <expr_stmt><expr><name><name pos:line="33" pos:column="9">key<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">-&gt;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="14">hash<pos:position pos:line="33" pos:column="18"/></name></name> <operator pos:line="33" pos:column="19">=<pos:position pos:line="33" pos:column="20"/></operator> <call><name pos:line="33" pos:column="21">safe_strdup<pos:position pos:line="33" pos:column="32"/></name> <argument_list pos:line="33" pos:column="33">(<argument><expr><name pos:line="33" pos:column="34">p<pos:position pos:line="33" pos:column="35"/></name></expr></argument>)<pos:position pos:line="33" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt>
        <break pos:line="34" pos:column="9">break;<pos:position pos:line="34" pos:column="15"/></break>
      <case pos:line="35" pos:column="7">case <expr><literal type="number" pos:line="35" pos:column="12">3<pos:position pos:line="35" pos:column="13"/></literal></expr>:<pos:position pos:line="35" pos:column="14"/></case>                   <comment type="block" pos:line="35" pos:column="33">/* label */</comment>
        <expr_stmt><expr><name><name pos:line="36" pos:column="9">key<pos:position pos:line="36" pos:column="12"/></name><operator pos:line="36" pos:column="12">-&gt;<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="14">label<pos:position pos:line="36" pos:column="19"/></name></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <call><name pos:line="36" pos:column="22">safe_strdup<pos:position pos:line="36" pos:column="33"/></name> <argument_list pos:line="36" pos:column="34">(<argument><expr><name pos:line="36" pos:column="35">p<pos:position pos:line="36" pos:column="36"/></name></expr></argument>)<pos:position pos:line="36" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="38"/></expr_stmt>
        <break pos:line="37" pos:column="9">break;<pos:position pos:line="37" pos:column="15"/></break>
      <case pos:line="38" pos:column="7">case <expr><literal type="number" pos:line="38" pos:column="12">4<pos:position pos:line="38" pos:column="13"/></literal></expr>:<pos:position pos:line="38" pos:column="14"/></case>                   <comment type="block" pos:line="38" pos:column="33">/* issuer */</comment>
        <expr_stmt><expr><name><name pos:line="39" pos:column="9">key<pos:position pos:line="39" pos:column="12"/></name><operator pos:line="39" pos:column="12">-&gt;<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="14">issuer<pos:position pos:line="39" pos:column="20"/></name></name> <operator pos:line="39" pos:column="21">=<pos:position pos:line="39" pos:column="22"/></operator> <call><name pos:line="39" pos:column="23">safe_strdup<pos:position pos:line="39" pos:column="34"/></name> <argument_list pos:line="39" pos:column="35">(<argument><expr><name pos:line="39" pos:column="36">p<pos:position pos:line="39" pos:column="37"/></name></expr></argument>)<pos:position pos:line="39" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="39"/></expr_stmt>
        <break pos:line="40" pos:column="9">break;<pos:position pos:line="40" pos:column="15"/></break>
      <case pos:line="41" pos:column="7">case <expr><literal type="number" pos:line="41" pos:column="12">5<pos:position pos:line="41" pos:column="13"/></literal></expr>:<pos:position pos:line="41" pos:column="14"/></case>                   <comment type="block" pos:line="41" pos:column="33">/* trust */</comment>
        <expr_stmt><expr><name><name pos:line="42" pos:column="9">key<pos:position pos:line="42" pos:column="12"/></name><operator pos:line="42" pos:column="12">-&gt;<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="14">trust<pos:position pos:line="42" pos:column="19"/></name></name> <operator pos:line="42" pos:column="20">=<pos:position pos:line="42" pos:column="21"/></operator> <operator pos:line="42" pos:column="22">*<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="23">p<pos:position pos:line="42" pos:column="24"/></name></expr>;<pos:position pos:line="42" pos:column="25"/></expr_stmt>
        <break pos:line="43" pos:column="9">break;<pos:position pos:line="43" pos:column="15"/></break>
      <case pos:line="44" pos:column="7">case <expr><literal type="number" pos:line="44" pos:column="12">6<pos:position pos:line="44" pos:column="13"/></literal></expr>:<pos:position pos:line="44" pos:column="14"/></case>                   <comment type="block" pos:line="44" pos:column="33">/* purpose */</comment>
        <while pos:line="45" pos:column="9">while <condition pos:line="45" pos:column="15">(<expr><operator pos:line="45" pos:column="16">*<pos:position pos:line="45" pos:column="17"/></operator><name pos:line="45" pos:column="17">p<pos:position pos:line="45" pos:column="18"/></name></expr>)<pos:position pos:line="45" pos:column="19"/></condition>
        <block pos:line="46" pos:column="9">{
          <switch pos:line="47" pos:column="11">switch <condition pos:line="47" pos:column="18">(<expr><operator pos:line="47" pos:column="19">*<pos:position pos:line="47" pos:column="20"/></operator><name pos:line="47" pos:column="20">p<pos:position pos:line="47" pos:column="21"/></name><operator pos:line="47" pos:column="21">++<pos:position pos:line="47" pos:column="23"/></operator></expr>)<pos:position pos:line="47" pos:column="24"/></condition>
          <block pos:line="48" pos:column="11">{
            <case pos:line="49" pos:column="13">case <expr><literal type="char" pos:line="49" pos:column="18">'e'<pos:position pos:line="49" pos:column="21"/></literal></expr>:<pos:position pos:line="49" pos:column="22"/></case>
              <expr_stmt><expr><name><name pos:line="50" pos:column="15">key<pos:position pos:line="50" pos:column="18"/></name><operator pos:line="50" pos:column="18">-&gt;<pos:position pos:line="50" pos:column="23"/></operator><name pos:line="50" pos:column="20">flags<pos:position pos:line="50" pos:column="25"/></name></name> <operator pos:line="50" pos:column="26">|=<pos:position pos:line="50" pos:column="28"/></operator> <name pos:line="50" pos:column="29">KEYFLAG_CANENCRYPT<pos:position pos:line="50" pos:column="47"/></name></expr>;<pos:position pos:line="50" pos:column="48"/></expr_stmt>
              <break pos:line="51" pos:column="15">break;<pos:position pos:line="51" pos:column="21"/></break>

            <case pos:line="53" pos:column="13">case <expr><literal type="char" pos:line="53" pos:column="18">'s'<pos:position pos:line="53" pos:column="21"/></literal></expr>:<pos:position pos:line="53" pos:column="22"/></case>
              <expr_stmt><expr><name><name pos:line="54" pos:column="15">key<pos:position pos:line="54" pos:column="18"/></name><operator pos:line="54" pos:column="18">-&gt;<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="20">flags<pos:position pos:line="54" pos:column="25"/></name></name> <operator pos:line="54" pos:column="26">|=<pos:position pos:line="54" pos:column="28"/></operator> <name pos:line="54" pos:column="29">KEYFLAG_CANSIGN<pos:position pos:line="54" pos:column="44"/></name></expr>;<pos:position pos:line="54" pos:column="45"/></expr_stmt>
              <break pos:line="55" pos:column="15">break;<pos:position pos:line="55" pos:column="21"/></break>
          }<pos:position pos:line="56" pos:column="12"/></block></switch>
        }<pos:position pos:line="57" pos:column="10"/></block></while>
        <break pos:line="58" pos:column="9">break;<pos:position pos:line="58" pos:column="15"/></break>
    }<pos:position pos:line="59" pos:column="6"/></block></switch>
  }<pos:position pos:line="60" pos:column="4"/></block></for>

  <comment type="block" pos:line="62" pos:column="3">/* Old index files could be missing issuer, trust, and purpose,
   * but anything less than that is an error. */</comment>
  <if pos:line="64" pos:column="3">if <condition pos:line="64" pos:column="6">(<expr><name pos:line="64" pos:column="7">field<pos:position pos:line="64" pos:column="12"/></name> <operator pos:line="64" pos:column="13">&lt;<pos:position pos:line="64" pos:column="17"/></operator> <literal type="number" pos:line="64" pos:column="15">3<pos:position pos:line="64" pos:column="16"/></literal></expr>)<pos:position pos:line="64" pos:column="17"/></condition><then pos:line="64" pos:column="17">
  <block pos:line="65" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">smime_free_key<pos:position pos:line="66" pos:column="19"/></name> <argument_list pos:line="66" pos:column="20">(<argument><expr><operator pos:line="66" pos:column="21">&amp;<pos:position pos:line="66" pos:column="26"/></operator><name pos:line="66" pos:column="22">key<pos:position pos:line="66" pos:column="25"/></name></expr></argument>)<pos:position pos:line="66" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="27"/></expr_stmt>
    <return pos:line="67" pos:column="5">return <expr><name pos:line="67" pos:column="12">NULL<pos:position pos:line="67" pos:column="16"/></name></expr>;<pos:position pos:line="67" pos:column="17"/></return>
  }<pos:position pos:line="68" pos:column="4"/></block></then></if>

  <if pos:line="70" pos:column="3">if <condition pos:line="70" pos:column="6">(<expr><name pos:line="70" pos:column="7">field<pos:position pos:line="70" pos:column="12"/></name> <operator pos:line="70" pos:column="13">&lt;<pos:position pos:line="70" pos:column="17"/></operator> <literal type="number" pos:line="70" pos:column="15">4<pos:position pos:line="70" pos:column="16"/></literal></expr>)<pos:position pos:line="70" pos:column="17"/></condition><then pos:line="70" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="71" pos:column="5">key<pos:position pos:line="71" pos:column="8"/></name><operator pos:line="71" pos:column="8">-&gt;<pos:position pos:line="71" pos:column="13"/></operator><name pos:line="71" pos:column="10">issuer<pos:position pos:line="71" pos:column="16"/></name></name> <operator pos:line="71" pos:column="17">=<pos:position pos:line="71" pos:column="18"/></operator> <call><name pos:line="71" pos:column="19">safe_strdup<pos:position pos:line="71" pos:column="30"/></name> <argument_list pos:line="71" pos:column="31">(<argument><expr><literal type="string" pos:line="71" pos:column="32">"?"<pos:position pos:line="71" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="37"/></expr_stmt></block></then></if>

  <if pos:line="73" pos:column="3">if <condition pos:line="73" pos:column="6">(<expr><name pos:line="73" pos:column="7">field<pos:position pos:line="73" pos:column="12"/></name> <operator pos:line="73" pos:column="13">&lt;<pos:position pos:line="73" pos:column="17"/></operator> <literal type="number" pos:line="73" pos:column="15">5<pos:position pos:line="73" pos:column="16"/></literal></expr>)<pos:position pos:line="73" pos:column="17"/></condition><then pos:line="73" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="74" pos:column="5">key<pos:position pos:line="74" pos:column="8"/></name><operator pos:line="74" pos:column="8">-&gt;<pos:position pos:line="74" pos:column="13"/></operator><name pos:line="74" pos:column="10">trust<pos:position pos:line="74" pos:column="15"/></name></name> <operator pos:line="74" pos:column="16">=<pos:position pos:line="74" pos:column="17"/></operator> <literal type="char" pos:line="74" pos:column="18">'t'<pos:position pos:line="74" pos:column="21"/></literal></expr>;<pos:position pos:line="74" pos:column="22"/></expr_stmt></block></then></if>

  <if pos:line="76" pos:column="3">if <condition pos:line="76" pos:column="6">(<expr><name pos:line="76" pos:column="7">field<pos:position pos:line="76" pos:column="12"/></name> <operator pos:line="76" pos:column="13">&lt;<pos:position pos:line="76" pos:column="17"/></operator> <literal type="number" pos:line="76" pos:column="15">6<pos:position pos:line="76" pos:column="16"/></literal></expr>)<pos:position pos:line="76" pos:column="17"/></condition><then pos:line="76" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="77" pos:column="5">key<pos:position pos:line="77" pos:column="8"/></name><operator pos:line="77" pos:column="8">-&gt;<pos:position pos:line="77" pos:column="13"/></operator><name pos:line="77" pos:column="10">flags<pos:position pos:line="77" pos:column="15"/></name></name> <operator pos:line="77" pos:column="16">=<pos:position pos:line="77" pos:column="17"/></operator> <operator pos:line="77" pos:column="18">(<pos:position pos:line="77" pos:column="19"/></operator><name pos:line="77" pos:column="19">KEYFLAG_CANENCRYPT<pos:position pos:line="77" pos:column="37"/></name> <operator pos:line="77" pos:column="38">|<pos:position pos:line="77" pos:column="39"/></operator> <name pos:line="77" pos:column="40">KEYFLAG_CANSIGN<pos:position pos:line="77" pos:column="55"/></name><operator pos:line="77" pos:column="55">)<pos:position pos:line="77" pos:column="56"/></operator></expr>;<pos:position pos:line="77" pos:column="57"/></expr_stmt></block></then></if>

  <return pos:line="79" pos:column="3">return <expr><name pos:line="79" pos:column="10">key<pos:position pos:line="79" pos:column="13"/></name></expr>;<pos:position pos:line="79" pos:column="14"/></return>
}<pos:position pos:line="80" pos:column="2"/></block></function></unit>

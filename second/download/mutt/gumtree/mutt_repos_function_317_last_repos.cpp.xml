<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_317_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">pgp_application_pgp_handler<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">BODY<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">m<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">STATE<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">s<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">could_not_decrypt<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><literal type="number" pos:line="3" pos:column="27">0<pos:position pos:line="3" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">needpass<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><operator pos:line="4" pos:column="18">-<pos:position pos:line="4" pos:column="19"/></operator><literal type="number" pos:line="4" pos:column="19">1<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="22">pgp_keyblock<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><literal type="number" pos:line="4" pos:column="37">0<pos:position pos:line="4" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">clearsign<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="22">rv<pos:position pos:line="5" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="26">rc<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">c<pos:position pos:line="6" pos:column="8"/></name> <init pos:line="6" pos:column="9">= <expr><literal type="number" pos:line="6" pos:column="11">1<pos:position pos:line="6" pos:column="12"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt> <comment type="block" pos:line="6" pos:column="14">/* silence GCC warning */</comment>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">long<pos:position pos:line="7" pos:column="7"/></name></type> <name pos:line="7" pos:column="8">bytes<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">LOFF_T<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">last_pos<pos:position pos:line="8" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="20">offset<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name></type> <name><name pos:line="9" pos:column="8">buf<pos:position pos:line="9" pos:column="11"/></name><index pos:line="9" pos:column="11">[<expr><name pos:line="9" pos:column="12">HUGE_STRING<pos:position pos:line="9" pos:column="23"/></name></expr>]<pos:position pos:line="9" pos:column="24"/></index></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name></type> <name><name pos:line="10" pos:column="8">outfile<pos:position pos:line="10" pos:column="15"/></name><index pos:line="10" pos:column="15">[<expr><name pos:line="10" pos:column="16">_POSIX_PATH_MAX<pos:position pos:line="10" pos:column="31"/></name></expr>]<pos:position pos:line="10" pos:column="32"/></index></name></decl>;<pos:position pos:line="10" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name></type> <name><name pos:line="11" pos:column="8">tmpfname<pos:position pos:line="11" pos:column="16"/></name><index pos:line="11" pos:column="16">[<expr><name pos:line="11" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="11" pos:column="32"/></name></expr>]<pos:position pos:line="11" pos:column="33"/></index></name></decl>;<pos:position pos:line="11" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">FILE<pos:position pos:line="12" pos:column="7"/></name> <modifier pos:line="12" pos:column="8">*<pos:position pos:line="12" pos:column="9"/></modifier></type><name pos:line="12" pos:column="9">pgpout<pos:position pos:line="12" pos:column="15"/></name> <init pos:line="12" pos:column="16">= <expr><name pos:line="12" pos:column="18">NULL<pos:position pos:line="12" pos:column="22"/></name></expr></init></decl>, <modifier pos:line="12" pos:column="24">*<pos:position pos:line="12" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="12" pos:column="25">pgpin<pos:position pos:line="12" pos:column="30"/></name> <init pos:line="12" pos:column="31">= <expr><name pos:line="12" pos:column="33">NULL<pos:position pos:line="12" pos:column="37"/></name></expr></init></decl>, <modifier pos:line="12" pos:column="39">*<pos:position pos:line="12" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="12" pos:column="40">pgperr<pos:position pos:line="12" pos:column="46"/></name> <init pos:line="12" pos:column="47">= <expr><name pos:line="12" pos:column="49">NULL<pos:position pos:line="12" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="54"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">FILE<pos:position pos:line="13" pos:column="7"/></name> <modifier pos:line="13" pos:column="8">*<pos:position pos:line="13" pos:column="9"/></modifier></type><name pos:line="13" pos:column="9">tmpfp<pos:position pos:line="13" pos:column="14"/></name> <init pos:line="13" pos:column="15">= <expr><name pos:line="13" pos:column="17">NULL<pos:position pos:line="13" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">pid_t<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">thepid<pos:position pos:line="14" pos:column="15"/></name></decl>;<pos:position pos:line="14" pos:column="16"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="16" pos:column="3">short<pos:position pos:line="16" pos:column="8"/></name></type> <name pos:line="16" pos:column="9">maybe_goodsig<pos:position pos:line="16" pos:column="22"/></name> <init pos:line="16" pos:column="23">= <expr><literal type="number" pos:line="16" pos:column="25">1<pos:position pos:line="16" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">short<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">have_any_sigs<pos:position pos:line="17" pos:column="22"/></name> <init pos:line="17" pos:column="23">= <expr><literal type="number" pos:line="17" pos:column="25">0<pos:position pos:line="17" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="27"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="19" pos:column="3">char<pos:position pos:line="19" pos:column="7"/></name> <modifier pos:line="19" pos:column="8">*<pos:position pos:line="19" pos:column="9"/></modifier></type><name pos:line="19" pos:column="9">gpgcharset<pos:position pos:line="19" pos:column="19"/></name> <init pos:line="19" pos:column="20">= <expr><name pos:line="19" pos:column="22">NULL<pos:position pos:line="19" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">char<pos:position pos:line="20" pos:column="7"/></name></type> <name><name pos:line="20" pos:column="8">body_charset<pos:position pos:line="20" pos:column="20"/></name><index pos:line="20" pos:column="20">[<expr><name pos:line="20" pos:column="21">STRING<pos:position pos:line="20" pos:column="27"/></name></expr>]<pos:position pos:line="20" pos:column="28"/></index></name></decl>;<pos:position pos:line="20" pos:column="29"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">mutt_get_body_charset<pos:position pos:line="21" pos:column="24"/></name> <argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">body_charset<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="40">sizeof <argument_list pos:line="21" pos:column="47">(<argument><expr><name pos:line="21" pos:column="48">body_charset<pos:position pos:line="21" pos:column="60"/></name></expr></argument>)<pos:position pos:line="21" pos:column="61"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="21" pos:column="63">m<pos:position pos:line="21" pos:column="64"/></name></expr></argument>)<pos:position pos:line="21" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="66"/></expr_stmt>

  <expr_stmt><expr><name pos:line="23" pos:column="3">rc<pos:position pos:line="23" pos:column="5"/></name> <operator pos:line="23" pos:column="6">=<pos:position pos:line="23" pos:column="7"/></operator> <literal type="number" pos:line="23" pos:column="8">0<pos:position pos:line="23" pos:column="9"/></literal></expr>;<pos:position pos:line="23" pos:column="10"/></expr_stmt>	<comment type="block" pos:line="23" pos:column="17">/* silence false compiler warning if (s-&gt;flags &amp; MUTT_DISPLAY) */</comment>

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">fseeko<pos:position pos:line="25" pos:column="9"/></name> <argument_list pos:line="25" pos:column="10">(<argument><expr><name><name pos:line="25" pos:column="11">s<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">fpin<pos:position pos:line="25" pos:column="18"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="20">m<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">-&gt;<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="23">offset<pos:position pos:line="25" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="31">0<pos:position pos:line="25" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name pos:line="26" pos:column="3">last_pos<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <name><name pos:line="26" pos:column="14">m<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">-&gt;<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="17">offset<pos:position pos:line="26" pos:column="23"/></name></name></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt>
  
  <for pos:line="28" pos:column="3">for <control pos:line="28" pos:column="7">(<init><expr><name pos:line="28" pos:column="8">bytes<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <name><name pos:line="28" pos:column="16">m<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">length<pos:position pos:line="28" pos:column="25"/></name></name></expr>;<pos:position pos:line="28" pos:column="26"/></init> <condition><expr><name pos:line="28" pos:column="27">bytes<pos:position pos:line="28" pos:column="32"/></name> <operator pos:line="28" pos:column="33">&gt;<pos:position pos:line="28" pos:column="37"/></operator> <literal type="number" pos:line="28" pos:column="35">0<pos:position pos:line="28" pos:column="36"/></literal></expr>;<pos:position pos:line="28" pos:column="37"/></condition><incr/>)<pos:position pos:line="28" pos:column="38"/></control>
  <block pos:line="29" pos:column="3">{
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><call><name pos:line="30" pos:column="9">fgets<pos:position pos:line="30" pos:column="14"/></name> <argument_list pos:line="30" pos:column="15">(<argument><expr><name pos:line="30" pos:column="16">buf<pos:position pos:line="30" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="21">sizeof <argument_list pos:line="30" pos:column="28">(<argument><expr><name pos:line="30" pos:column="29">buf<pos:position pos:line="30" pos:column="32"/></name></expr></argument>)<pos:position pos:line="30" pos:column="33"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="35">s<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">-&gt;<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="38">fpin<pos:position pos:line="30" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="43"/></argument_list></call> <operator pos:line="30" pos:column="44">==<pos:position pos:line="30" pos:column="46"/></operator> <name pos:line="30" pos:column="47">NULL<pos:position pos:line="30" pos:column="51"/></name></expr>)<pos:position pos:line="30" pos:column="52"/></condition><then pos:line="30" pos:column="52">
      <block type="pseudo"><break pos:line="31" pos:column="7">break;<pos:position pos:line="31" pos:column="13"/></break></block></then></if>
    
    <expr_stmt><expr><name pos:line="33" pos:column="5">offset<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <call><name pos:line="33" pos:column="14">ftello<pos:position pos:line="33" pos:column="20"/></name> <argument_list pos:line="33" pos:column="21">(<argument><expr><name><name pos:line="33" pos:column="22">s<pos:position pos:line="33" pos:column="23"/></name><operator pos:line="33" pos:column="23">-&gt;<pos:position pos:line="33" pos:column="28"/></operator><name pos:line="33" pos:column="25">fpin<pos:position pos:line="33" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="34" pos:column="5">bytes<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">-=<pos:position pos:line="34" pos:column="13"/></operator> <operator pos:line="34" pos:column="14">(<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="15">offset<pos:position pos:line="34" pos:column="21"/></name> <operator pos:line="34" pos:column="22">-<pos:position pos:line="34" pos:column="23"/></operator> <name pos:line="34" pos:column="24">last_pos<pos:position pos:line="34" pos:column="32"/></name><operator pos:line="34" pos:column="32">)<pos:position pos:line="34" pos:column="33"/></operator></expr>;<pos:position pos:line="34" pos:column="34"/></expr_stmt> <comment type="block" pos:line="34" pos:column="35">/* don't rely on mutt_strlen(buf) */</comment>
    <expr_stmt><expr><name pos:line="35" pos:column="5">last_pos<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <name pos:line="35" pos:column="16">offset<pos:position pos:line="35" pos:column="22"/></name></expr>;<pos:position pos:line="35" pos:column="23"/></expr_stmt>
    
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><call><name pos:line="37" pos:column="9">mutt_strncmp<pos:position pos:line="37" pos:column="21"/></name> <argument_list pos:line="37" pos:column="22">(<argument><expr><literal type="string" pos:line="37" pos:column="23">"-----BEGIN PGP "<pos:position pos:line="37" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="42">buf<pos:position pos:line="37" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="47">15<pos:position pos:line="37" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call> <operator pos:line="37" pos:column="51">==<pos:position pos:line="37" pos:column="53"/></operator> <literal type="number" pos:line="37" pos:column="54">0<pos:position pos:line="37" pos:column="55"/></literal></expr>)<pos:position pos:line="37" pos:column="56"/></condition><then pos:line="37" pos:column="56">
    <block pos:line="38" pos:column="5">{
      <expr_stmt><expr><name pos:line="39" pos:column="7">clearsign<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">=<pos:position pos:line="39" pos:column="18"/></operator> <literal type="number" pos:line="39" pos:column="19">0<pos:position pos:line="39" pos:column="20"/></literal></expr>;<pos:position pos:line="39" pos:column="21"/></expr_stmt>

      <if pos:line="41" pos:column="7">if <condition pos:line="41" pos:column="10">(<expr><call><name pos:line="41" pos:column="11">mutt_strcmp<pos:position pos:line="41" pos:column="22"/></name> <argument_list pos:line="41" pos:column="23">(<argument><expr><literal type="string" pos:line="41" pos:column="24">"MESSAGE-----\n"<pos:position pos:line="41" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="42">buf<pos:position pos:line="41" pos:column="45"/></name> <operator pos:line="41" pos:column="46">+<pos:position pos:line="41" pos:column="47"/></operator> <literal type="number" pos:line="41" pos:column="48">15<pos:position pos:line="41" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="51"/></argument_list></call> <operator pos:line="41" pos:column="52">==<pos:position pos:line="41" pos:column="54"/></operator> <literal type="number" pos:line="41" pos:column="55">0<pos:position pos:line="41" pos:column="56"/></literal></expr>)<pos:position pos:line="41" pos:column="57"/></condition><then pos:line="41" pos:column="57">
        <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="9">needpass<pos:position pos:line="42" pos:column="17"/></name> <operator pos:line="42" pos:column="18">=<pos:position pos:line="42" pos:column="19"/></operator> <literal type="number" pos:line="42" pos:column="20">1<pos:position pos:line="42" pos:column="21"/></literal></expr>;<pos:position pos:line="42" pos:column="22"/></expr_stmt></block></then>
      <elseif pos:line="43" pos:column="7">else <if pos:line="43" pos:column="12">if <condition pos:line="43" pos:column="15">(<expr><call><name pos:line="43" pos:column="16">mutt_strcmp<pos:position pos:line="43" pos:column="27"/></name> <argument_list pos:line="43" pos:column="28">(<argument><expr><literal type="string" pos:line="43" pos:column="29">"SIGNED MESSAGE-----\n"<pos:position pos:line="43" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="54">buf<pos:position pos:line="43" pos:column="57"/></name> <operator pos:line="43" pos:column="58">+<pos:position pos:line="43" pos:column="59"/></operator> <literal type="number" pos:line="43" pos:column="60">15<pos:position pos:line="43" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="63"/></argument_list></call> <operator pos:line="43" pos:column="64">==<pos:position pos:line="43" pos:column="66"/></operator> <literal type="number" pos:line="43" pos:column="67">0<pos:position pos:line="43" pos:column="68"/></literal></expr>)<pos:position pos:line="43" pos:column="69"/></condition><then pos:line="43" pos:column="69">
      <block pos:line="44" pos:column="7">{
	<expr_stmt><expr><name pos:line="45" pos:column="9">clearsign<pos:position pos:line="45" pos:column="18"/></name> <operator pos:line="45" pos:column="19">=<pos:position pos:line="45" pos:column="20"/></operator> <literal type="number" pos:line="45" pos:column="21">1<pos:position pos:line="45" pos:column="22"/></literal></expr>;<pos:position pos:line="45" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="46" pos:column="9">needpass<pos:position pos:line="46" pos:column="17"/></name> <operator pos:line="46" pos:column="18">=<pos:position pos:line="46" pos:column="19"/></operator> <literal type="number" pos:line="46" pos:column="20">0<pos:position pos:line="46" pos:column="21"/></literal></expr>;<pos:position pos:line="46" pos:column="22"/></expr_stmt>
      }<pos:position pos:line="47" pos:column="8"/></block></then></if></elseif>
      <elseif pos:line="48" pos:column="7">else <if pos:line="48" pos:column="12">if <condition pos:line="48" pos:column="15">(<expr><operator pos:line="48" pos:column="16">!<pos:position pos:line="48" pos:column="17"/></operator><call><name pos:line="48" pos:column="17">mutt_strcmp<pos:position pos:line="48" pos:column="28"/></name> <argument_list pos:line="48" pos:column="29">(<argument><expr><literal type="string" pos:line="48" pos:column="30">"PUBLIC KEY BLOCK-----\n"<pos:position pos:line="48" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="57">buf<pos:position pos:line="48" pos:column="60"/></name> <operator pos:line="48" pos:column="61">+<pos:position pos:line="48" pos:column="62"/></operator> <literal type="number" pos:line="48" pos:column="63">15<pos:position pos:line="48" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="67"/></condition><then pos:line="48" pos:column="67">
      <block pos:line="49" pos:column="7">{
        <expr_stmt><expr><name pos:line="50" pos:column="9">needpass<pos:position pos:line="50" pos:column="17"/></name> <operator pos:line="50" pos:column="18">=<pos:position pos:line="50" pos:column="19"/></operator> <literal type="number" pos:line="50" pos:column="20">0<pos:position pos:line="50" pos:column="21"/></literal></expr>;<pos:position pos:line="50" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="51" pos:column="9">pgp_keyblock<pos:position pos:line="51" pos:column="21"/></name> <operator pos:line="51" pos:column="22">=<pos:position pos:line="51" pos:column="23"/></operator> <literal type="number" pos:line="51" pos:column="24">1<pos:position pos:line="51" pos:column="25"/></literal></expr>;<pos:position pos:line="51" pos:column="26"/></expr_stmt>
      }<pos:position pos:line="52" pos:column="8"/></block></then></if></elseif> 
      <else pos:line="53" pos:column="7">else
      <block pos:line="54" pos:column="7">{
	<comment type="block" pos:line="55" pos:column="9">/* XXX - we may wish to recode here */</comment>
	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name><name pos:line="56" pos:column="13">s<pos:position pos:line="56" pos:column="14"/></name><operator pos:line="56" pos:column="14">-&gt;<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="16">prefix<pos:position pos:line="56" pos:column="22"/></name></name></expr>)<pos:position pos:line="56" pos:column="23"/></condition><then pos:line="56" pos:column="23">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="11">state_puts<pos:position pos:line="57" pos:column="21"/></name> <argument_list pos:line="57" pos:column="22">(<argument><expr><name><name pos:line="57" pos:column="23">s<pos:position pos:line="57" pos:column="24"/></name><operator pos:line="57" pos:column="24">-&gt;<pos:position pos:line="57" pos:column="29"/></operator><name pos:line="57" pos:column="26">prefix<pos:position pos:line="57" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="34">s<pos:position pos:line="57" pos:column="35"/></name></expr></argument>)<pos:position pos:line="57" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="37"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="58" pos:column="9">state_puts<pos:position pos:line="58" pos:column="19"/></name> <argument_list pos:line="58" pos:column="20">(<argument><expr><name pos:line="58" pos:column="21">buf<pos:position pos:line="58" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="26">s<pos:position pos:line="58" pos:column="27"/></name></expr></argument>)<pos:position pos:line="58" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="29"/></expr_stmt>
	<continue pos:line="59" pos:column="9">continue;<pos:position pos:line="59" pos:column="18"/></continue>
      }<pos:position pos:line="60" pos:column="8"/></block></else></if>

      <expr_stmt><expr><name pos:line="62" pos:column="7">have_any_sigs<pos:position pos:line="62" pos:column="20"/></name> <operator pos:line="62" pos:column="21">=<pos:position pos:line="62" pos:column="22"/></operator> <name pos:line="62" pos:column="23">have_any_sigs<pos:position pos:line="62" pos:column="36"/></name> <operator pos:line="62" pos:column="37">||<pos:position pos:line="62" pos:column="39"/></operator> <operator pos:line="62" pos:column="40">(<pos:position pos:line="62" pos:column="41"/></operator><name pos:line="62" pos:column="41">clearsign<pos:position pos:line="62" pos:column="50"/></name> <operator pos:line="62" pos:column="51">&amp;&amp;<pos:position pos:line="62" pos:column="61"/></operator> <operator pos:line="62" pos:column="54">(<pos:position pos:line="62" pos:column="55"/></operator><name><name pos:line="62" pos:column="55">s<pos:position pos:line="62" pos:column="56"/></name><operator pos:line="62" pos:column="56">-&gt;<pos:position pos:line="62" pos:column="61"/></operator><name pos:line="62" pos:column="58">flags<pos:position pos:line="62" pos:column="63"/></name></name> <operator pos:line="62" pos:column="64">&amp;<pos:position pos:line="62" pos:column="69"/></operator> <name pos:line="62" pos:column="66">MUTT_VERIFY<pos:position pos:line="62" pos:column="77"/></name><operator pos:line="62" pos:column="77">)<pos:position pos:line="62" pos:column="78"/></operator><operator pos:line="62" pos:column="78">)<pos:position pos:line="62" pos:column="79"/></operator></expr>;<pos:position pos:line="62" pos:column="80"/></expr_stmt>

      <comment type="block" pos:line="64" pos:column="7">/* Copy PGP material to temporary file */</comment>
      <expr_stmt><expr><call><name pos:line="65" pos:column="7">mutt_mktemp<pos:position pos:line="65" pos:column="18"/></name> <argument_list pos:line="65" pos:column="19">(<argument><expr><name pos:line="65" pos:column="20">tmpfname<pos:position pos:line="65" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="65" pos:column="30">sizeof <argument_list pos:line="65" pos:column="37">(<argument><expr><name pos:line="65" pos:column="38">tmpfname<pos:position pos:line="65" pos:column="46"/></name></expr></argument>)<pos:position pos:line="65" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="65" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="49"/></expr_stmt>
      <if pos:line="66" pos:column="7">if <condition pos:line="66" pos:column="10">(<expr><operator pos:line="66" pos:column="11">(<pos:position pos:line="66" pos:column="12"/></operator><name pos:line="66" pos:column="12">tmpfp<pos:position pos:line="66" pos:column="17"/></name> <operator pos:line="66" pos:column="18">=<pos:position pos:line="66" pos:column="19"/></operator> <call><name pos:line="66" pos:column="20">safe_fopen<pos:position pos:line="66" pos:column="30"/></name> <argument_list pos:line="66" pos:column="31">(<argument><expr><name pos:line="66" pos:column="32">tmpfname<pos:position pos:line="66" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="42">"w+"<pos:position pos:line="66" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="47"/></argument_list></call><operator pos:line="66" pos:column="47">)<pos:position pos:line="66" pos:column="48"/></operator> <operator pos:line="66" pos:column="49">==<pos:position pos:line="66" pos:column="51"/></operator> <name pos:line="66" pos:column="52">NULL<pos:position pos:line="66" pos:column="56"/></name></expr>)<pos:position pos:line="66" pos:column="57"/></condition><then pos:line="66" pos:column="57">
      <block pos:line="67" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="68" pos:column="9">mutt_perror<pos:position pos:line="68" pos:column="20"/></name> <argument_list pos:line="68" pos:column="21">(<argument><expr><name pos:line="68" pos:column="22">tmpfname<pos:position pos:line="68" pos:column="30"/></name></expr></argument>)<pos:position pos:line="68" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="32"/></expr_stmt>
	<return pos:line="69" pos:column="9">return <expr><operator pos:line="69" pos:column="16">-<pos:position pos:line="69" pos:column="17"/></operator><literal type="number" pos:line="69" pos:column="17">1<pos:position pos:line="69" pos:column="18"/></literal></expr>;<pos:position pos:line="69" pos:column="19"/></return>
      }<pos:position pos:line="70" pos:column="8"/></block></then></if>
      
      <expr_stmt><expr><call><name pos:line="72" pos:column="7">fputs<pos:position pos:line="72" pos:column="12"/></name> <argument_list pos:line="72" pos:column="13">(<argument><expr><name pos:line="72" pos:column="14">buf<pos:position pos:line="72" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="19">tmpfp<pos:position pos:line="72" pos:column="24"/></name></expr></argument>)<pos:position pos:line="72" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="26"/></expr_stmt>
      <while pos:line="73" pos:column="7">while <condition pos:line="73" pos:column="13">(<expr><name pos:line="73" pos:column="14">bytes<pos:position pos:line="73" pos:column="19"/></name> <operator pos:line="73" pos:column="20">&gt;<pos:position pos:line="73" pos:column="24"/></operator> <literal type="number" pos:line="73" pos:column="22">0<pos:position pos:line="73" pos:column="23"/></literal> <operator pos:line="73" pos:column="24">&amp;&amp;<pos:position pos:line="73" pos:column="34"/></operator> <call><name pos:line="73" pos:column="27">fgets<pos:position pos:line="73" pos:column="32"/></name> <argument_list pos:line="73" pos:column="33">(<argument><expr><name pos:line="73" pos:column="34">buf<pos:position pos:line="73" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="73" pos:column="39">sizeof <argument_list pos:line="73" pos:column="46">(<argument><expr><name pos:line="73" pos:column="47">buf<pos:position pos:line="73" pos:column="50"/></name></expr></argument>)<pos:position pos:line="73" pos:column="51"/></argument_list></sizeof> <operator pos:line="73" pos:column="52">-<pos:position pos:line="73" pos:column="53"/></operator> <literal type="number" pos:line="73" pos:column="54">1<pos:position pos:line="73" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="57">s<pos:position pos:line="73" pos:column="58"/></name><operator pos:line="73" pos:column="58">-&gt;<pos:position pos:line="73" pos:column="63"/></operator><name pos:line="73" pos:column="60">fpin<pos:position pos:line="73" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="65"/></argument_list></call> <operator pos:line="73" pos:column="66">!=<pos:position pos:line="73" pos:column="68"/></operator> <name pos:line="73" pos:column="69">NULL<pos:position pos:line="73" pos:column="73"/></name></expr>)<pos:position pos:line="73" pos:column="74"/></condition>
      <block pos:line="74" pos:column="7">{
	<expr_stmt><expr><name pos:line="75" pos:column="9">offset<pos:position pos:line="75" pos:column="15"/></name> <operator pos:line="75" pos:column="16">=<pos:position pos:line="75" pos:column="17"/></operator> <call><name pos:line="75" pos:column="18">ftello<pos:position pos:line="75" pos:column="24"/></name> <argument_list pos:line="75" pos:column="25">(<argument><expr><name><name pos:line="75" pos:column="26">s<pos:position pos:line="75" pos:column="27"/></name><operator pos:line="75" pos:column="27">-&gt;<pos:position pos:line="75" pos:column="32"/></operator><name pos:line="75" pos:column="29">fpin<pos:position pos:line="75" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name pos:line="76" pos:column="9">bytes<pos:position pos:line="76" pos:column="14"/></name> <operator pos:line="76" pos:column="15">-=<pos:position pos:line="76" pos:column="17"/></operator> <operator pos:line="76" pos:column="18">(<pos:position pos:line="76" pos:column="19"/></operator><name pos:line="76" pos:column="19">offset<pos:position pos:line="76" pos:column="25"/></name> <operator pos:line="76" pos:column="26">-<pos:position pos:line="76" pos:column="27"/></operator> <name pos:line="76" pos:column="28">last_pos<pos:position pos:line="76" pos:column="36"/></name><operator pos:line="76" pos:column="36">)<pos:position pos:line="76" pos:column="37"/></operator></expr>;<pos:position pos:line="76" pos:column="38"/></expr_stmt> <comment type="block" pos:line="76" pos:column="39">/* don't rely on mutt_strlen(buf) */</comment>
	<expr_stmt><expr><name pos:line="77" pos:column="9">last_pos<pos:position pos:line="77" pos:column="17"/></name> <operator pos:line="77" pos:column="18">=<pos:position pos:line="77" pos:column="19"/></operator> <name pos:line="77" pos:column="20">offset<pos:position pos:line="77" pos:column="26"/></name></expr>;<pos:position pos:line="77" pos:column="27"/></expr_stmt>
	
	<expr_stmt><expr><call><name pos:line="79" pos:column="9">fputs<pos:position pos:line="79" pos:column="14"/></name> <argument_list pos:line="79" pos:column="15">(<argument><expr><name pos:line="79" pos:column="16">buf<pos:position pos:line="79" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="21">tmpfp<pos:position pos:line="79" pos:column="26"/></name></expr></argument>)<pos:position pos:line="79" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="28"/></expr_stmt>

	<if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><operator pos:line="81" pos:column="13">(<pos:position pos:line="81" pos:column="14"/></operator><name pos:line="81" pos:column="14">needpass<pos:position pos:line="81" pos:column="22"/></name> <operator pos:line="81" pos:column="23">&amp;&amp;<pos:position pos:line="81" pos:column="33"/></operator> <call><name pos:line="81" pos:column="26">mutt_strcmp<pos:position pos:line="81" pos:column="37"/></name> <argument_list pos:line="81" pos:column="38">(<argument><expr><literal type="string" pos:line="81" pos:column="39">"-----END PGP MESSAGE-----\n"<pos:position pos:line="81" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="70">buf<pos:position pos:line="81" pos:column="73"/></name></expr></argument>)<pos:position pos:line="81" pos:column="74"/></argument_list></call> <operator pos:line="81" pos:column="75">==<pos:position pos:line="81" pos:column="77"/></operator> <literal type="number" pos:line="81" pos:column="78">0<pos:position pos:line="81" pos:column="79"/></literal><operator pos:line="81" pos:column="79">)<pos:position pos:line="81" pos:column="80"/></operator> <operator pos:line="81" pos:column="81">||<pos:position pos:line="81" pos:column="83"/></operator>
	    <operator pos:line="82" pos:column="13">(<pos:position pos:line="82" pos:column="14"/></operator><operator pos:line="82" pos:column="14">!<pos:position pos:line="82" pos:column="15"/></operator><name pos:line="82" pos:column="15">needpass<pos:position pos:line="82" pos:column="23"/></name> 
             <operator pos:line="83" pos:column="14">&amp;&amp;<pos:position pos:line="83" pos:column="24"/></operator> <operator pos:line="83" pos:column="17">(<pos:position pos:line="83" pos:column="18"/></operator><call><name pos:line="83" pos:column="18">mutt_strcmp<pos:position pos:line="83" pos:column="29"/></name> <argument_list pos:line="83" pos:column="30">(<argument><expr><literal type="string" pos:line="83" pos:column="31">"-----END PGP SIGNATURE-----\n"<pos:position pos:line="83" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="83" pos:column="64">buf<pos:position pos:line="83" pos:column="67"/></name></expr></argument>)<pos:position pos:line="83" pos:column="68"/></argument_list></call> <operator pos:line="83" pos:column="69">==<pos:position pos:line="83" pos:column="71"/></operator> <literal type="number" pos:line="83" pos:column="72">0<pos:position pos:line="83" pos:column="73"/></literal>
                 <operator pos:line="84" pos:column="18">||<pos:position pos:line="84" pos:column="20"/></operator> <call><name pos:line="84" pos:column="21">mutt_strcmp<pos:position pos:line="84" pos:column="32"/></name> <argument_list pos:line="84" pos:column="33">(<argument><expr><literal type="string" pos:line="84" pos:column="34">"-----END PGP PUBLIC KEY BLOCK-----\n"<pos:position pos:line="84" pos:column="72"/></literal></expr></argument>,<argument><expr><name pos:line="84" pos:column="73">buf<pos:position pos:line="84" pos:column="76"/></name></expr></argument>)<pos:position pos:line="84" pos:column="77"/></argument_list></call> <operator pos:line="84" pos:column="78">==<pos:position pos:line="84" pos:column="80"/></operator> <literal type="number" pos:line="84" pos:column="81">0<pos:position pos:line="84" pos:column="82"/></literal><operator pos:line="84" pos:column="82">)<pos:position pos:line="84" pos:column="83"/></operator><operator pos:line="84" pos:column="83">)<pos:position pos:line="84" pos:column="84"/></operator></expr>)<pos:position pos:line="84" pos:column="85"/></condition><then pos:line="84" pos:column="85">
	  <block type="pseudo"><break pos:line="85" pos:column="11">break;<pos:position pos:line="85" pos:column="17"/></break></block></then></if>
	<comment type="block" pos:line="86" pos:column="9">/* remember optional Charset: armor header as defined by RfC4880 */</comment>
	<if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><call><name pos:line="87" pos:column="13">mutt_strncmp<pos:position pos:line="87" pos:column="25"/></name> <argument_list pos:line="87" pos:column="26">(<argument><expr><literal type="string" pos:line="87" pos:column="27">"Charset: "<pos:position pos:line="87" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="87" pos:column="40">buf<pos:position pos:line="87" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="87" pos:column="45">9<pos:position pos:line="87" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="47"/></argument_list></call> <operator pos:line="87" pos:column="48">==<pos:position pos:line="87" pos:column="50"/></operator> <literal type="number" pos:line="87" pos:column="51">0<pos:position pos:line="87" pos:column="52"/></literal></expr>)<pos:position pos:line="87" pos:column="53"/></condition><then pos:line="87" pos:column="53">
	<block pos:line="88" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="89" pos:column="11">size_t<pos:position pos:line="89" pos:column="17"/></name></type> <name pos:line="89" pos:column="18">l<pos:position pos:line="89" pos:column="19"/></name> <init pos:line="89" pos:column="20">= <expr><literal type="number" pos:line="89" pos:column="22">0<pos:position pos:line="89" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="89" pos:column="24"/></decl_stmt>
	  <expr_stmt><expr><name pos:line="90" pos:column="11">gpgcharset<pos:position pos:line="90" pos:column="21"/></name> <operator pos:line="90" pos:column="22">=<pos:position pos:line="90" pos:column="23"/></operator> <call><name pos:line="90" pos:column="24">safe_strdup<pos:position pos:line="90" pos:column="35"/></name> <argument_list pos:line="90" pos:column="36">(<argument><expr><name pos:line="90" pos:column="37">buf<pos:position pos:line="90" pos:column="40"/></name> <operator pos:line="90" pos:column="41">+<pos:position pos:line="90" pos:column="42"/></operator> <literal type="number" pos:line="90" pos:column="43">9<pos:position pos:line="90" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="46"/></expr_stmt>
	  <if pos:line="91" pos:column="11">if <condition pos:line="91" pos:column="14">(<expr><operator pos:line="91" pos:column="15">(<pos:position pos:line="91" pos:column="16"/></operator><name pos:line="91" pos:column="16">l<pos:position pos:line="91" pos:column="17"/></name> <operator pos:line="91" pos:column="18">=<pos:position pos:line="91" pos:column="19"/></operator> <call><name pos:line="91" pos:column="20">mutt_strlen<pos:position pos:line="91" pos:column="31"/></name> <argument_list pos:line="91" pos:column="32">(<argument><expr><name pos:line="91" pos:column="33">gpgcharset<pos:position pos:line="91" pos:column="43"/></name></expr></argument>)<pos:position pos:line="91" pos:column="44"/></argument_list></call><operator pos:line="91" pos:column="44">)<pos:position pos:line="91" pos:column="45"/></operator> <operator pos:line="91" pos:column="46">&gt;<pos:position pos:line="91" pos:column="50"/></operator> <literal type="number" pos:line="91" pos:column="48">0<pos:position pos:line="91" pos:column="49"/></literal> <operator pos:line="91" pos:column="50">&amp;&amp;<pos:position pos:line="91" pos:column="60"/></operator> <name><name pos:line="91" pos:column="53">gpgcharset<pos:position pos:line="91" pos:column="63"/></name><index pos:line="91" pos:column="63">[<expr><name pos:line="91" pos:column="64">l<pos:position pos:line="91" pos:column="65"/></name><operator pos:line="91" pos:column="65">-<pos:position pos:line="91" pos:column="66"/></operator><literal type="number" pos:line="91" pos:column="66">1<pos:position pos:line="91" pos:column="67"/></literal></expr>]<pos:position pos:line="91" pos:column="68"/></index></name> <operator pos:line="91" pos:column="69">==<pos:position pos:line="91" pos:column="71"/></operator> <literal type="char" pos:line="91" pos:column="72">'\n'<pos:position pos:line="91" pos:column="76"/></literal></expr>)<pos:position pos:line="91" pos:column="77"/></condition><then pos:line="91" pos:column="77">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="92" pos:column="13">gpgcharset<pos:position pos:line="92" pos:column="23"/></name><index pos:line="92" pos:column="23">[<expr><name pos:line="92" pos:column="24">l<pos:position pos:line="92" pos:column="25"/></name><operator pos:line="92" pos:column="25">-<pos:position pos:line="92" pos:column="26"/></operator><literal type="number" pos:line="92" pos:column="26">1<pos:position pos:line="92" pos:column="27"/></literal></expr>]<pos:position pos:line="92" pos:column="28"/></index></name> <operator pos:line="92" pos:column="29">=<pos:position pos:line="92" pos:column="30"/></operator> <literal type="number" pos:line="92" pos:column="31">0<pos:position pos:line="92" pos:column="32"/></literal></expr>;<pos:position pos:line="92" pos:column="33"/></expr_stmt></block></then></if>
	  <if pos:line="93" pos:column="11">if <condition pos:line="93" pos:column="14">(<expr><call><name pos:line="93" pos:column="15">mutt_check_charset<pos:position pos:line="93" pos:column="33"/></name> <argument_list pos:line="93" pos:column="34">(<argument><expr><name pos:line="93" pos:column="35">gpgcharset<pos:position pos:line="93" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="93" pos:column="47">0<pos:position pos:line="93" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="49"/></argument_list></call> <operator pos:line="93" pos:column="50">&lt;<pos:position pos:line="93" pos:column="54"/></operator> <literal type="number" pos:line="93" pos:column="52">0<pos:position pos:line="93" pos:column="53"/></literal></expr>)<pos:position pos:line="93" pos:column="54"/></condition><then pos:line="93" pos:column="54">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="94" pos:column="13">mutt_str_replace<pos:position pos:line="94" pos:column="29"/></name> <argument_list pos:line="94" pos:column="30">(<argument><expr><operator pos:line="94" pos:column="31">&amp;<pos:position pos:line="94" pos:column="36"/></operator><name pos:line="94" pos:column="32">gpgcharset<pos:position pos:line="94" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="44">"UTF-8"<pos:position pos:line="94" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="53"/></expr_stmt></block></then></if>
	}<pos:position pos:line="95" pos:column="10"/></block></then></if>
      }<pos:position pos:line="96" pos:column="8"/></block></while>

      <comment type="block" pos:line="98" pos:column="7">/* leave tmpfp open in case we still need it - but flush it! */</comment>
      <expr_stmt><expr><call><name pos:line="99" pos:column="7">fflush<pos:position pos:line="99" pos:column="13"/></name> <argument_list pos:line="99" pos:column="14">(<argument><expr><name pos:line="99" pos:column="15">tmpfp<pos:position pos:line="99" pos:column="20"/></name></expr></argument>)<pos:position pos:line="99" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="22"/></expr_stmt>

      <comment type="block" pos:line="101" pos:column="7">/* Invoke PGP if needed */</comment>
      <if pos:line="102" pos:column="7">if <condition pos:line="102" pos:column="10">(<expr><operator pos:line="102" pos:column="11">!<pos:position pos:line="102" pos:column="12"/></operator><name pos:line="102" pos:column="12">clearsign<pos:position pos:line="102" pos:column="21"/></name> <operator pos:line="102" pos:column="22">||<pos:position pos:line="102" pos:column="24"/></operator> <operator pos:line="102" pos:column="25">(<pos:position pos:line="102" pos:column="26"/></operator><name><name pos:line="102" pos:column="26">s<pos:position pos:line="102" pos:column="27"/></name><operator pos:line="102" pos:column="27">-&gt;<pos:position pos:line="102" pos:column="32"/></operator><name pos:line="102" pos:column="29">flags<pos:position pos:line="102" pos:column="34"/></name></name> <operator pos:line="102" pos:column="35">&amp;<pos:position pos:line="102" pos:column="40"/></operator> <name pos:line="102" pos:column="37">MUTT_VERIFY<pos:position pos:line="102" pos:column="48"/></name><operator pos:line="102" pos:column="48">)<pos:position pos:line="102" pos:column="49"/></operator></expr>)<pos:position pos:line="102" pos:column="50"/></condition><then pos:line="102" pos:column="50">
      <block pos:line="103" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="104" pos:column="9">mutt_mktemp<pos:position pos:line="104" pos:column="20"/></name> <argument_list pos:line="104" pos:column="21">(<argument><expr><name pos:line="104" pos:column="22">outfile<pos:position pos:line="104" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="104" pos:column="31">sizeof <argument_list pos:line="104" pos:column="38">(<argument><expr><name pos:line="104" pos:column="39">outfile<pos:position pos:line="104" pos:column="46"/></name></expr></argument>)<pos:position pos:line="104" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="104" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="49"/></expr_stmt>
	<if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><operator pos:line="105" pos:column="13">(<pos:position pos:line="105" pos:column="14"/></operator><name pos:line="105" pos:column="14">pgpout<pos:position pos:line="105" pos:column="20"/></name> <operator pos:line="105" pos:column="21">=<pos:position pos:line="105" pos:column="22"/></operator> <call><name pos:line="105" pos:column="23">safe_fopen<pos:position pos:line="105" pos:column="33"/></name> <argument_list pos:line="105" pos:column="34">(<argument><expr><name pos:line="105" pos:column="35">outfile<pos:position pos:line="105" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="44">"w+"<pos:position pos:line="105" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="49"/></argument_list></call><operator pos:line="105" pos:column="49">)<pos:position pos:line="105" pos:column="50"/></operator> <operator pos:line="105" pos:column="51">==<pos:position pos:line="105" pos:column="53"/></operator> <name pos:line="105" pos:column="54">NULL<pos:position pos:line="105" pos:column="58"/></name></expr>)<pos:position pos:line="105" pos:column="59"/></condition><then pos:line="105" pos:column="59">
	<block pos:line="106" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="107" pos:column="11">mutt_perror<pos:position pos:line="107" pos:column="22"/></name> <argument_list pos:line="107" pos:column="23">(<argument><expr><name pos:line="107" pos:column="24">outfile<pos:position pos:line="107" pos:column="31"/></name></expr></argument>)<pos:position pos:line="107" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="33"/></expr_stmt>
	  <return pos:line="108" pos:column="11">return <expr><operator pos:line="108" pos:column="18">-<pos:position pos:line="108" pos:column="19"/></operator><literal type="number" pos:line="108" pos:column="19">1<pos:position pos:line="108" pos:column="20"/></literal></expr>;<pos:position pos:line="108" pos:column="21"/></return>
	}<pos:position pos:line="109" pos:column="10"/></block></then></if>
	
	<if pos:line="111" pos:column="9">if <condition pos:line="111" pos:column="12">(<expr><operator pos:line="111" pos:column="13">(<pos:position pos:line="111" pos:column="14"/></operator><name pos:line="111" pos:column="14">thepid<pos:position pos:line="111" pos:column="20"/></name> <operator pos:line="111" pos:column="21">=<pos:position pos:line="111" pos:column="22"/></operator> <call><name pos:line="111" pos:column="23">pgp_invoke_decode<pos:position pos:line="111" pos:column="40"/></name> <argument_list pos:line="111" pos:column="41">(<argument><expr><operator pos:line="111" pos:column="42">&amp;<pos:position pos:line="111" pos:column="47"/></operator><name pos:line="111" pos:column="43">pgpin<pos:position pos:line="111" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="50">NULL<pos:position pos:line="111" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="111" pos:column="56">&amp;<pos:position pos:line="111" pos:column="61"/></operator><name pos:line="111" pos:column="57">pgperr<pos:position pos:line="111" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="111" pos:column="65">-<pos:position pos:line="111" pos:column="66"/></operator><literal type="number" pos:line="111" pos:column="66">1<pos:position pos:line="111" pos:column="67"/></literal></expr></argument>,
					 <argument><expr><call><name pos:line="112" pos:column="42">fileno<pos:position pos:line="112" pos:column="48"/></name> <argument_list pos:line="112" pos:column="49">(<argument><expr><name pos:line="112" pos:column="50">pgpout<pos:position pos:line="112" pos:column="56"/></name></expr></argument>)<pos:position pos:line="112" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="112" pos:column="59">-<pos:position pos:line="112" pos:column="60"/></operator><literal type="number" pos:line="112" pos:column="60">1<pos:position pos:line="112" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="112" pos:column="63">tmpfname<pos:position pos:line="112" pos:column="71"/></name></expr></argument>,
					 <argument><expr><name pos:line="113" pos:column="42">needpass<pos:position pos:line="113" pos:column="50"/></name></expr></argument>)<pos:position pos:line="113" pos:column="51"/></argument_list></call><operator pos:line="113" pos:column="51">)<pos:position pos:line="113" pos:column="52"/></operator> <operator pos:line="113" pos:column="53">==<pos:position pos:line="113" pos:column="55"/></operator> <operator pos:line="113" pos:column="56">-<pos:position pos:line="113" pos:column="57"/></operator><literal type="number" pos:line="113" pos:column="57">1<pos:position pos:line="113" pos:column="58"/></literal></expr>)<pos:position pos:line="113" pos:column="59"/></condition><then pos:line="113" pos:column="59">
	<block pos:line="114" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="115" pos:column="11">safe_fclose<pos:position pos:line="115" pos:column="22"/></name> <argument_list pos:line="115" pos:column="23">(<argument><expr><operator pos:line="115" pos:column="24">&amp;<pos:position pos:line="115" pos:column="29"/></operator><name pos:line="115" pos:column="25">pgpout<pos:position pos:line="115" pos:column="31"/></name></expr></argument>)<pos:position pos:line="115" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="33"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="116" pos:column="11">maybe_goodsig<pos:position pos:line="116" pos:column="24"/></name> <operator pos:line="116" pos:column="25">=<pos:position pos:line="116" pos:column="26"/></operator> <literal type="number" pos:line="116" pos:column="27">0<pos:position pos:line="116" pos:column="28"/></literal></expr>;<pos:position pos:line="116" pos:column="29"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="117" pos:column="11">pgpin<pos:position pos:line="117" pos:column="16"/></name> <operator pos:line="117" pos:column="17">=<pos:position pos:line="117" pos:column="18"/></operator> <name pos:line="117" pos:column="19">NULL<pos:position pos:line="117" pos:column="23"/></name></expr>;<pos:position pos:line="117" pos:column="24"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="118" pos:column="11">pgperr<pos:position pos:line="118" pos:column="17"/></name> <operator pos:line="118" pos:column="18">=<pos:position pos:line="118" pos:column="19"/></operator> <name pos:line="118" pos:column="20">NULL<pos:position pos:line="118" pos:column="24"/></name></expr>;<pos:position pos:line="118" pos:column="25"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="119" pos:column="11">state_attach_puts<pos:position pos:line="119" pos:column="28"/></name> <argument_list pos:line="119" pos:column="29">(<argument><expr><call><name pos:line="119" pos:column="30">_<pos:position pos:line="119" pos:column="31"/></name><argument_list pos:line="119" pos:column="31">(<argument><expr><literal type="string" pos:line="119" pos:column="32">"[-- Error: unable to create PGP subprocess! --]\n"<pos:position pos:line="119" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="84"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="119" pos:column="86">s<pos:position pos:line="119" pos:column="87"/></name></expr></argument>)<pos:position pos:line="119" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="89"/></expr_stmt>
	}<pos:position pos:line="120" pos:column="10"/></block></then>
	<else pos:line="121" pos:column="9">else <comment type="block" pos:line="121" pos:column="14">/* PGP started successfully */</comment>
	<block pos:line="122" pos:column="9">{
	  <if pos:line="123" pos:column="11">if <condition pos:line="123" pos:column="14">(<expr><name pos:line="123" pos:column="15">needpass<pos:position pos:line="123" pos:column="23"/></name></expr>)<pos:position pos:line="123" pos:column="24"/></condition><then pos:line="123" pos:column="24">
	  <block pos:line="124" pos:column="11">{
	    <if pos:line="125" pos:column="13">if <condition pos:line="125" pos:column="16">(<expr><operator pos:line="125" pos:column="17">!<pos:position pos:line="125" pos:column="18"/></operator><call><name pos:line="125" pos:column="18">pgp_valid_passphrase<pos:position pos:line="125" pos:column="38"/></name> <argument_list pos:line="125" pos:column="39">()<pos:position pos:line="125" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="125" pos:column="42"/></condition><then pos:line="125" pos:column="42"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="125" pos:column="43">pgp_void_passphrase<pos:position pos:line="125" pos:column="62"/></name><argument_list pos:line="125" pos:column="62">()<pos:position pos:line="125" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="65"/></expr_stmt></block></then></if>
            <if pos:line="126" pos:column="13">if <condition pos:line="126" pos:column="16">(<expr><call><name pos:line="126" pos:column="17">pgp_use_gpg_agent<pos:position pos:line="126" pos:column="34"/></name><argument_list pos:line="126" pos:column="34">()<pos:position pos:line="126" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="126" pos:column="37"/></condition><then pos:line="126" pos:column="37">
              <block type="pseudo"><expr_stmt><expr><operator pos:line="127" pos:column="15">*<pos:position pos:line="127" pos:column="16"/></operator><name pos:line="127" pos:column="16">PgpPass<pos:position pos:line="127" pos:column="23"/></name> <operator pos:line="127" pos:column="24">=<pos:position pos:line="127" pos:column="25"/></operator> <literal type="number" pos:line="127" pos:column="26">0<pos:position pos:line="127" pos:column="27"/></literal></expr>;<pos:position pos:line="127" pos:column="28"/></expr_stmt></block></then></if>
	    <expr_stmt><expr><call><name pos:line="128" pos:column="13">fprintf<pos:position pos:line="128" pos:column="20"/></name> <argument_list pos:line="128" pos:column="21">(<argument><expr><name pos:line="128" pos:column="22">pgpin<pos:position pos:line="128" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="128" pos:column="29">"%s\n"<pos:position pos:line="128" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="128" pos:column="37">PgpPass<pos:position pos:line="128" pos:column="44"/></name></expr></argument>)<pos:position pos:line="128" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="46"/></expr_stmt>
	  }<pos:position pos:line="129" pos:column="12"/></block></then></if>
	  
	  <expr_stmt><expr><call><name pos:line="131" pos:column="11">safe_fclose<pos:position pos:line="131" pos:column="22"/></name> <argument_list pos:line="131" pos:column="23">(<argument><expr><operator pos:line="131" pos:column="24">&amp;<pos:position pos:line="131" pos:column="29"/></operator><name pos:line="131" pos:column="25">pgpin<pos:position pos:line="131" pos:column="30"/></name></expr></argument>)<pos:position pos:line="131" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="32"/></expr_stmt>

	  <if pos:line="133" pos:column="11">if <condition pos:line="133" pos:column="14">(<expr><name><name pos:line="133" pos:column="15">s<pos:position pos:line="133" pos:column="16"/></name><operator pos:line="133" pos:column="16">-&gt;<pos:position pos:line="133" pos:column="21"/></operator><name pos:line="133" pos:column="18">flags<pos:position pos:line="133" pos:column="23"/></name></name> <operator pos:line="133" pos:column="24">&amp;<pos:position pos:line="133" pos:column="29"/></operator> <name pos:line="133" pos:column="26">MUTT_DISPLAY<pos:position pos:line="133" pos:column="38"/></name></expr>)<pos:position pos:line="133" pos:column="39"/></condition><then pos:line="133" pos:column="39">
	  <block pos:line="134" pos:column="11">{
	    <expr_stmt><expr><call><name pos:line="135" pos:column="13">crypt_current_time<pos:position pos:line="135" pos:column="31"/></name> <argument_list pos:line="135" pos:column="32">(<argument><expr><name pos:line="135" pos:column="33">s<pos:position pos:line="135" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="36">"PGP"<pos:position pos:line="135" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="43"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="136" pos:column="13">rc<pos:position pos:line="136" pos:column="15"/></name> <operator pos:line="136" pos:column="16">=<pos:position pos:line="136" pos:column="17"/></operator> <call><name pos:line="136" pos:column="18">pgp_copy_checksig<pos:position pos:line="136" pos:column="35"/></name> <argument_list pos:line="136" pos:column="36">(<argument><expr><name pos:line="136" pos:column="37">pgperr<pos:position pos:line="136" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="136" pos:column="45">s<pos:position pos:line="136" pos:column="46"/></name><operator pos:line="136" pos:column="46">-&gt;<pos:position pos:line="136" pos:column="51"/></operator><name pos:line="136" pos:column="48">fpout<pos:position pos:line="136" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="136" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="55"/></expr_stmt>
	  }<pos:position pos:line="137" pos:column="12"/></block></then></if>
	  
	  <expr_stmt><expr><call><name pos:line="139" pos:column="11">safe_fclose<pos:position pos:line="139" pos:column="22"/></name> <argument_list pos:line="139" pos:column="23">(<argument><expr><operator pos:line="139" pos:column="24">&amp;<pos:position pos:line="139" pos:column="29"/></operator><name pos:line="139" pos:column="25">pgperr<pos:position pos:line="139" pos:column="31"/></name></expr></argument>)<pos:position pos:line="139" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="33"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="140" pos:column="11">rv<pos:position pos:line="140" pos:column="13"/></name> <operator pos:line="140" pos:column="14">=<pos:position pos:line="140" pos:column="15"/></operator> <call><name pos:line="140" pos:column="16">mutt_wait_filter<pos:position pos:line="140" pos:column="32"/></name> <argument_list pos:line="140" pos:column="33">(<argument><expr><name pos:line="140" pos:column="34">thepid<pos:position pos:line="140" pos:column="40"/></name></expr></argument>)<pos:position pos:line="140" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="42"/></expr_stmt>
	  
	  <if pos:line="142" pos:column="11">if <condition pos:line="142" pos:column="14">(<expr><name><name pos:line="142" pos:column="15">s<pos:position pos:line="142" pos:column="16"/></name><operator pos:line="142" pos:column="16">-&gt;<pos:position pos:line="142" pos:column="21"/></operator><name pos:line="142" pos:column="18">flags<pos:position pos:line="142" pos:column="23"/></name></name> <operator pos:line="142" pos:column="24">&amp;<pos:position pos:line="142" pos:column="29"/></operator> <name pos:line="142" pos:column="26">MUTT_DISPLAY<pos:position pos:line="142" pos:column="38"/></name></expr>)<pos:position pos:line="142" pos:column="39"/></condition><then pos:line="142" pos:column="39">
	  <block pos:line="143" pos:column="11">{
	    <if pos:line="144" pos:column="13">if <condition pos:line="144" pos:column="16">(<expr><name pos:line="144" pos:column="17">rc<pos:position pos:line="144" pos:column="19"/></name> <operator pos:line="144" pos:column="20">==<pos:position pos:line="144" pos:column="22"/></operator> <literal type="number" pos:line="144" pos:column="23">0<pos:position pos:line="144" pos:column="24"/></literal></expr>)<pos:position pos:line="144" pos:column="25"/></condition><then pos:line="144" pos:column="25"> <block type="pseudo"><expr_stmt><expr><name pos:line="144" pos:column="26">have_any_sigs<pos:position pos:line="144" pos:column="39"/></name> <operator pos:line="144" pos:column="40">=<pos:position pos:line="144" pos:column="41"/></operator> <literal type="number" pos:line="144" pos:column="42">1<pos:position pos:line="144" pos:column="43"/></literal></expr>;<pos:position pos:line="144" pos:column="44"/></expr_stmt></block></then></if>
	    <comment type="block" pos:line="145" pos:column="13">/*
	     * Sig is bad if
	     * gpg_good_sign-pattern did not match || pgp_decode_command returned not 0
	     * Sig _is_ correct if
	     *  gpg_good_sign="" &amp;&amp; pgp_decode_command returned 0
	     */</comment>
	    <if pos:line="151" pos:column="13">if <condition pos:line="151" pos:column="16">(<expr><name pos:line="151" pos:column="17">rc<pos:position pos:line="151" pos:column="19"/></name> <operator pos:line="151" pos:column="20">==<pos:position pos:line="151" pos:column="22"/></operator> <operator pos:line="151" pos:column="23">-<pos:position pos:line="151" pos:column="24"/></operator><literal type="number" pos:line="151" pos:column="24">1<pos:position pos:line="151" pos:column="25"/></literal> <operator pos:line="151" pos:column="26">||<pos:position pos:line="151" pos:column="28"/></operator> <name pos:line="151" pos:column="29">rv<pos:position pos:line="151" pos:column="31"/></name></expr>)<pos:position pos:line="151" pos:column="32"/></condition><then pos:line="151" pos:column="32"> <block type="pseudo"><expr_stmt><expr><name pos:line="151" pos:column="33">maybe_goodsig<pos:position pos:line="151" pos:column="46"/></name> <operator pos:line="151" pos:column="47">=<pos:position pos:line="151" pos:column="48"/></operator> <literal type="number" pos:line="151" pos:column="49">0<pos:position pos:line="151" pos:column="50"/></literal></expr>;<pos:position pos:line="151" pos:column="51"/></expr_stmt></block></then></if>
	    
	    <expr_stmt><expr><call><name pos:line="153" pos:column="13">state_attach_puts<pos:position pos:line="153" pos:column="30"/></name> <argument_list pos:line="153" pos:column="31">(<argument><expr><call><name pos:line="153" pos:column="32">_<pos:position pos:line="153" pos:column="33"/></name><argument_list pos:line="153" pos:column="33">(<argument><expr><literal type="string" pos:line="153" pos:column="34">"[-- End of PGP output --]\n\n"<pos:position pos:line="153" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="153" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="153" pos:column="68">s<pos:position pos:line="153" pos:column="69"/></name></expr></argument>)<pos:position pos:line="153" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="71"/></expr_stmt>
	  }<pos:position pos:line="154" pos:column="12"/></block></then></if>
	  <if pos:line="155" pos:column="11">if <condition pos:line="155" pos:column="14">(<expr><call><name pos:line="155" pos:column="15">pgp_use_gpg_agent<pos:position pos:line="155" pos:column="32"/></name><argument_list pos:line="155" pos:column="32">()<pos:position pos:line="155" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="155" pos:column="35"/></condition><then pos:line="155" pos:column="35">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="156" pos:column="13">mutt_need_hard_redraw<pos:position pos:line="156" pos:column="34"/></name> <argument_list pos:line="156" pos:column="35">()<pos:position pos:line="156" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="38"/></expr_stmt></block></then></if>
	}<pos:position pos:line="157" pos:column="10"/></block></else></if>
	
        <comment type="block" pos:line="159" pos:column="9">/* treat empty result as sign of failure */</comment>
	<comment type="block" pos:line="160" pos:column="9">/* TODO: maybe on failure mutt should include the original undecoded text. */</comment>
	<if pos:line="161" pos:column="9">if <condition pos:line="161" pos:column="12">(<expr><name pos:line="161" pos:column="13">pgpout<pos:position pos:line="161" pos:column="19"/></name></expr>)<pos:position pos:line="161" pos:column="20"/></condition><then pos:line="161" pos:column="20">
	<block pos:line="162" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="163" pos:column="11">rewind<pos:position pos:line="163" pos:column="17"/></name> <argument_list pos:line="163" pos:column="18">(<argument><expr><name pos:line="163" pos:column="19">pgpout<pos:position pos:line="163" pos:column="25"/></name></expr></argument>)<pos:position pos:line="163" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="27"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="164" pos:column="11">c<pos:position pos:line="164" pos:column="12"/></name> <operator pos:line="164" pos:column="13">=<pos:position pos:line="164" pos:column="14"/></operator> <call><name pos:line="164" pos:column="15">fgetc<pos:position pos:line="164" pos:column="20"/></name> <argument_list pos:line="164" pos:column="21">(<argument><expr><name pos:line="164" pos:column="22">pgpout<pos:position pos:line="164" pos:column="28"/></name></expr></argument>)<pos:position pos:line="164" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="30"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="165" pos:column="11">ungetc<pos:position pos:line="165" pos:column="17"/></name> <argument_list pos:line="165" pos:column="18">(<argument><expr><name pos:line="165" pos:column="19">c<pos:position pos:line="165" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="165" pos:column="22">pgpout<pos:position pos:line="165" pos:column="28"/></name></expr></argument>)<pos:position pos:line="165" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="166" pos:column="10"/></block></then></if>
        <if pos:line="167" pos:column="9">if <condition pos:line="167" pos:column="12">(<expr><operator pos:line="167" pos:column="13">!<pos:position pos:line="167" pos:column="14"/></operator><name pos:line="167" pos:column="14">clearsign<pos:position pos:line="167" pos:column="23"/></name> <operator pos:line="167" pos:column="24">&amp;&amp;<pos:position pos:line="167" pos:column="34"/></operator> <operator pos:line="167" pos:column="27">(<pos:position pos:line="167" pos:column="28"/></operator><operator pos:line="167" pos:column="28">!<pos:position pos:line="167" pos:column="29"/></operator><name pos:line="167" pos:column="29">pgpout<pos:position pos:line="167" pos:column="35"/></name> <operator pos:line="167" pos:column="36">||<pos:position pos:line="167" pos:column="38"/></operator> <name pos:line="167" pos:column="39">c<pos:position pos:line="167" pos:column="40"/></name> <operator pos:line="167" pos:column="41">==<pos:position pos:line="167" pos:column="43"/></operator> <name pos:line="167" pos:column="44">EOF<pos:position pos:line="167" pos:column="47"/></name><operator pos:line="167" pos:column="47">)<pos:position pos:line="167" pos:column="48"/></operator></expr>)<pos:position pos:line="167" pos:column="49"/></condition><then pos:line="167" pos:column="49">
	<block pos:line="168" pos:column="9">{
	  <expr_stmt><expr><name pos:line="169" pos:column="11">could_not_decrypt<pos:position pos:line="169" pos:column="28"/></name> <operator pos:line="169" pos:column="29">=<pos:position pos:line="169" pos:column="30"/></operator> <literal type="number" pos:line="169" pos:column="31">1<pos:position pos:line="169" pos:column="32"/></literal></expr>;<pos:position pos:line="169" pos:column="33"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="170" pos:column="11">pgp_void_passphrase<pos:position pos:line="170" pos:column="30"/></name> <argument_list pos:line="170" pos:column="31">()<pos:position pos:line="170" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="171" pos:column="10"/></block></then></if>
	
	<if pos:line="173" pos:column="9">if <condition pos:line="173" pos:column="12">(<expr><name pos:line="173" pos:column="13">could_not_decrypt<pos:position pos:line="173" pos:column="30"/></name> <operator pos:line="173" pos:column="31">&amp;&amp;<pos:position pos:line="173" pos:column="41"/></operator> <operator pos:line="173" pos:column="34">!<pos:position pos:line="173" pos:column="35"/></operator><operator pos:line="173" pos:column="35">(<pos:position pos:line="173" pos:column="36"/></operator><name><name pos:line="173" pos:column="36">s<pos:position pos:line="173" pos:column="37"/></name><operator pos:line="173" pos:column="37">-&gt;<pos:position pos:line="173" pos:column="42"/></operator><name pos:line="173" pos:column="39">flags<pos:position pos:line="173" pos:column="44"/></name></name> <operator pos:line="173" pos:column="45">&amp;<pos:position pos:line="173" pos:column="50"/></operator> <name pos:line="173" pos:column="47">MUTT_DISPLAY<pos:position pos:line="173" pos:column="59"/></name><operator pos:line="173" pos:column="59">)<pos:position pos:line="173" pos:column="60"/></operator></expr>)<pos:position pos:line="173" pos:column="61"/></condition><then pos:line="173" pos:column="61">
	<block pos:line="174" pos:column="9">{
          <decl_stmt><decl><type><name pos:line="175" pos:column="11">mutt_error<pos:position pos:line="175" pos:column="21"/></name></type> <name pos:line="175" pos:column="22">_<pos:position pos:line="175" pos:column="23"/></name><argument_list pos:line="175" pos:column="23">(<argument><expr><literal type="string" pos:line="175" pos:column="24">"Could not decrypt PGP message"<pos:position pos:line="175" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="175" pos:column="56"/></argument_list></decl>;<pos:position pos:line="175" pos:column="57"/></decl_stmt>
	  <expr_stmt><expr><call><name pos:line="176" pos:column="11">mutt_sleep<pos:position pos:line="176" pos:column="21"/></name> <argument_list pos:line="176" pos:column="22">(<argument><expr><literal type="number" pos:line="176" pos:column="23">1<pos:position pos:line="176" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="176" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="26"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="177" pos:column="11">rc<pos:position pos:line="177" pos:column="13"/></name> <operator pos:line="177" pos:column="14">=<pos:position pos:line="177" pos:column="15"/></operator> <operator pos:line="177" pos:column="16">-<pos:position pos:line="177" pos:column="17"/></operator><literal type="number" pos:line="177" pos:column="17">1<pos:position pos:line="177" pos:column="18"/></literal></expr>;<pos:position pos:line="177" pos:column="19"/></expr_stmt>
	  <goto pos:line="178" pos:column="11">goto <name pos:line="178" pos:column="16">out<pos:position pos:line="178" pos:column="19"/></name>;<pos:position pos:line="178" pos:column="20"/></goto>
        }<pos:position pos:line="179" pos:column="10"/></block></then></if>
      }<pos:position pos:line="180" pos:column="8"/></block></then></if>
      
      <comment type="block" pos:line="182" pos:column="7">/*
       * Now, copy cleartext to the screen.
       */</comment>

      <if pos:line="186" pos:column="7">if<condition pos:line="186" pos:column="9">(<expr><name><name pos:line="186" pos:column="10">s<pos:position pos:line="186" pos:column="11"/></name><operator pos:line="186" pos:column="11">-&gt;<pos:position pos:line="186" pos:column="16"/></operator><name pos:line="186" pos:column="13">flags<pos:position pos:line="186" pos:column="18"/></name></name> <operator pos:line="186" pos:column="19">&amp;<pos:position pos:line="186" pos:column="24"/></operator> <name pos:line="186" pos:column="21">MUTT_DISPLAY<pos:position pos:line="186" pos:column="33"/></name></expr>)<pos:position pos:line="186" pos:column="34"/></condition><then pos:line="186" pos:column="34">
      <block pos:line="187" pos:column="7">{
	<if pos:line="188" pos:column="9">if <condition pos:line="188" pos:column="12">(<expr><name pos:line="188" pos:column="13">needpass<pos:position pos:line="188" pos:column="21"/></name></expr>)<pos:position pos:line="188" pos:column="22"/></condition><then pos:line="188" pos:column="22">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="189" pos:column="11">state_attach_puts<pos:position pos:line="189" pos:column="28"/></name> <argument_list pos:line="189" pos:column="29">(<argument><expr><call><name pos:line="189" pos:column="30">_<pos:position pos:line="189" pos:column="31"/></name><argument_list pos:line="189" pos:column="31">(<argument><expr><literal type="string" pos:line="189" pos:column="32">"[-- BEGIN PGP MESSAGE --]\n\n"<pos:position pos:line="189" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="189" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="189" pos:column="66">s<pos:position pos:line="189" pos:column="67"/></name></expr></argument>)<pos:position pos:line="189" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="69"/></expr_stmt></block></then>
	<elseif pos:line="190" pos:column="9">else <if pos:line="190" pos:column="14">if <condition pos:line="190" pos:column="17">(<expr><name pos:line="190" pos:column="18">pgp_keyblock<pos:position pos:line="190" pos:column="30"/></name></expr>)<pos:position pos:line="190" pos:column="31"/></condition><then pos:line="190" pos:column="31">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="191" pos:column="11">state_attach_puts<pos:position pos:line="191" pos:column="28"/></name> <argument_list pos:line="191" pos:column="29">(<argument><expr><call><name pos:line="191" pos:column="30">_<pos:position pos:line="191" pos:column="31"/></name><argument_list pos:line="191" pos:column="31">(<argument><expr><literal type="string" pos:line="191" pos:column="32">"[-- BEGIN PGP PUBLIC KEY BLOCK --]\n"<pos:position pos:line="191" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="191" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="191" pos:column="73">s<pos:position pos:line="191" pos:column="74"/></name></expr></argument>)<pos:position pos:line="191" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="76"/></expr_stmt></block></then></if></elseif>
	<else pos:line="192" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="193" pos:column="11">state_attach_puts<pos:position pos:line="193" pos:column="28"/></name> <argument_list pos:line="193" pos:column="29">(<argument><expr><call><name pos:line="193" pos:column="30">_<pos:position pos:line="193" pos:column="31"/></name><argument_list pos:line="193" pos:column="31">(<argument><expr><literal type="string" pos:line="193" pos:column="32">"[-- BEGIN PGP SIGNED MESSAGE --]\n\n"<pos:position pos:line="193" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="193" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="193" pos:column="73">s<pos:position pos:line="193" pos:column="74"/></name></expr></argument>)<pos:position pos:line="193" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="76"/></expr_stmt></block></else></if>
      }<pos:position pos:line="194" pos:column="8"/></block></then></if>

      <if pos:line="196" pos:column="7">if <condition pos:line="196" pos:column="10">(<expr><name pos:line="196" pos:column="11">clearsign<pos:position pos:line="196" pos:column="20"/></name></expr>)<pos:position pos:line="196" pos:column="21"/></condition><then pos:line="196" pos:column="21">
      <block pos:line="197" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="198" pos:column="9">rewind<pos:position pos:line="198" pos:column="15"/></name> <argument_list pos:line="198" pos:column="16">(<argument><expr><name pos:line="198" pos:column="17">tmpfp<pos:position pos:line="198" pos:column="22"/></name></expr></argument>)<pos:position pos:line="198" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="24"/></expr_stmt>
	<if pos:line="199" pos:column="9">if <condition pos:line="199" pos:column="12">(<expr><name pos:line="199" pos:column="13">tmpfp<pos:position pos:line="199" pos:column="18"/></name></expr>)<pos:position pos:line="199" pos:column="19"/></condition><then pos:line="199" pos:column="19"> 
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="200" pos:column="11">pgp_copy_clearsigned<pos:position pos:line="200" pos:column="31"/></name> <argument_list pos:line="200" pos:column="32">(<argument><expr><name pos:line="200" pos:column="33">tmpfp<pos:position pos:line="200" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="200" pos:column="40">s<pos:position pos:line="200" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="200" pos:column="43">body_charset<pos:position pos:line="200" pos:column="55"/></name></expr></argument>)<pos:position pos:line="200" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="57"/></expr_stmt></block></then></if>
      }<pos:position pos:line="201" pos:column="8"/></block></then>
      <elseif pos:line="202" pos:column="7">else <if pos:line="202" pos:column="12">if <condition pos:line="202" pos:column="15">(<expr><name pos:line="202" pos:column="16">pgpout<pos:position pos:line="202" pos:column="22"/></name></expr>)<pos:position pos:line="202" pos:column="23"/></condition><then pos:line="202" pos:column="23">
      <block pos:line="203" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="204" pos:column="9">FGETCONV<pos:position pos:line="204" pos:column="17"/></name> <modifier pos:line="204" pos:column="18">*<pos:position pos:line="204" pos:column="19"/></modifier></type><name pos:line="204" pos:column="19">fc<pos:position pos:line="204" pos:column="21"/></name></decl>;<pos:position pos:line="204" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="205" pos:column="9">int<pos:position pos:line="205" pos:column="12"/></name></type> <name pos:line="205" pos:column="13">c<pos:position pos:line="205" pos:column="14"/></name></decl>;<pos:position pos:line="205" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="206" pos:column="9">char<pos:position pos:line="206" pos:column="13"/></name> <modifier pos:line="206" pos:column="14">*<pos:position pos:line="206" pos:column="15"/></modifier></type><name pos:line="206" pos:column="15">expected_charset<pos:position pos:line="206" pos:column="31"/></name> <init pos:line="206" pos:column="32">= <expr><ternary><condition><expr><name pos:line="206" pos:column="34">gpgcharset<pos:position pos:line="206" pos:column="44"/></name> <operator pos:line="206" pos:column="45">&amp;&amp;<pos:position pos:line="206" pos:column="55"/></operator> <operator pos:line="206" pos:column="48">*<pos:position pos:line="206" pos:column="49"/></operator><name pos:line="206" pos:column="49">gpgcharset<pos:position pos:line="206" pos:column="59"/></name></expr> ?<pos:position pos:line="206" pos:column="61"/></condition><then pos:line="206" pos:column="61"> <expr><name pos:line="206" pos:column="62">gpgcharset<pos:position pos:line="206" pos:column="72"/></name></expr> <pos:position pos:line="206" pos:column="73"/></then><else pos:line="206" pos:column="73">: <expr><literal type="string" pos:line="206" pos:column="75">"utf-8"<pos:position pos:line="206" pos:column="82"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="206" pos:column="83"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="208" pos:column="9">dprint<pos:position pos:line="208" pos:column="15"/></name><argument_list pos:line="208" pos:column="15">(<argument><expr><literal type="number" pos:line="208" pos:column="16">4<pos:position pos:line="208" pos:column="17"/></literal></expr></argument>,<argument><expr><operator pos:line="208" pos:column="18">(<pos:position pos:line="208" pos:column="19"/></operator><name pos:line="208" pos:column="19">debugfile<pos:position pos:line="208" pos:column="28"/></name><operator pos:line="208" pos:column="28">,<pos:position pos:line="208" pos:column="29"/></operator><literal type="string" pos:line="208" pos:column="29">"pgp: recoding inline from [%s] to [%s]\n"<pos:position pos:line="208" pos:column="71"/></literal><operator pos:line="208" pos:column="71">,<pos:position pos:line="208" pos:column="72"/></operator>
		  <name pos:line="209" pos:column="19">expected_charset<pos:position pos:line="209" pos:column="35"/></name><operator pos:line="209" pos:column="35">,<pos:position pos:line="209" pos:column="36"/></operator> <name pos:line="209" pos:column="37">Charset<pos:position pos:line="209" pos:column="44"/></name><operator pos:line="209" pos:column="44">)<pos:position pos:line="209" pos:column="45"/></operator></expr></argument>)<pos:position pos:line="209" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="47"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="211" pos:column="9">rewind<pos:position pos:line="211" pos:column="15"/></name> <argument_list pos:line="211" pos:column="16">(<argument><expr><name pos:line="211" pos:column="17">pgpout<pos:position pos:line="211" pos:column="23"/></name></expr></argument>)<pos:position pos:line="211" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="212" pos:column="9">state_set_prefix<pos:position pos:line="212" pos:column="25"/></name> <argument_list pos:line="212" pos:column="26">(<argument><expr><name pos:line="212" pos:column="27">s<pos:position pos:line="212" pos:column="28"/></name></expr></argument>)<pos:position pos:line="212" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="213" pos:column="9">fc<pos:position pos:line="213" pos:column="11"/></name> <operator pos:line="213" pos:column="12">=<pos:position pos:line="213" pos:column="13"/></operator> <call><name pos:line="213" pos:column="14">fgetconv_open<pos:position pos:line="213" pos:column="27"/></name> <argument_list pos:line="213" pos:column="28">(<argument><expr><name pos:line="213" pos:column="29">pgpout<pos:position pos:line="213" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="37">expected_charset<pos:position pos:line="213" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="55">Charset<pos:position pos:line="213" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="64">MUTT_ICONV_HOOK_FROM<pos:position pos:line="213" pos:column="84"/></name></expr></argument>)<pos:position pos:line="213" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="86"/></expr_stmt>
	<while pos:line="214" pos:column="9">while <condition pos:line="214" pos:column="15">(<expr><operator pos:line="214" pos:column="16">(<pos:position pos:line="214" pos:column="17"/></operator><name pos:line="214" pos:column="17">c<pos:position pos:line="214" pos:column="18"/></name> <operator pos:line="214" pos:column="19">=<pos:position pos:line="214" pos:column="20"/></operator> <call><name pos:line="214" pos:column="21">fgetconv<pos:position pos:line="214" pos:column="29"/></name> <argument_list pos:line="214" pos:column="30">(<argument><expr><name pos:line="214" pos:column="31">fc<pos:position pos:line="214" pos:column="33"/></name></expr></argument>)<pos:position pos:line="214" pos:column="34"/></argument_list></call><operator pos:line="214" pos:column="34">)<pos:position pos:line="214" pos:column="35"/></operator> <operator pos:line="214" pos:column="36">!=<pos:position pos:line="214" pos:column="38"/></operator> <name pos:line="214" pos:column="39">EOF<pos:position pos:line="214" pos:column="42"/></name></expr>)<pos:position pos:line="214" pos:column="43"/></condition>
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="215" pos:column="11">state_prefix_putc<pos:position pos:line="215" pos:column="28"/></name> <argument_list pos:line="215" pos:column="29">(<argument><expr><name pos:line="215" pos:column="30">c<pos:position pos:line="215" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="215" pos:column="33">s<pos:position pos:line="215" pos:column="34"/></name></expr></argument>)<pos:position pos:line="215" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="36"/></expr_stmt></block></while>
	<expr_stmt><expr><call><name pos:line="216" pos:column="9">fgetconv_close<pos:position pos:line="216" pos:column="23"/></name> <argument_list pos:line="216" pos:column="24">(<argument><expr><operator pos:line="216" pos:column="25">&amp;<pos:position pos:line="216" pos:column="30"/></operator><name pos:line="216" pos:column="26">fc<pos:position pos:line="216" pos:column="28"/></name></expr></argument>)<pos:position pos:line="216" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="30"/></expr_stmt>
      }<pos:position pos:line="217" pos:column="8"/></block></then></if></elseif></if>

      <comment type="block" pos:line="219" pos:column="7">/*
       * Multiple PGP blocks can exist, so these need to be closed and
       * unlinked inside the loop.
       */</comment>
      <expr_stmt><expr><call><name pos:line="223" pos:column="7">safe_fclose<pos:position pos:line="223" pos:column="18"/></name> <argument_list pos:line="223" pos:column="19">(<argument><expr><operator pos:line="223" pos:column="20">&amp;<pos:position pos:line="223" pos:column="25"/></operator><name pos:line="223" pos:column="21">tmpfp<pos:position pos:line="223" pos:column="26"/></name></expr></argument>)<pos:position pos:line="223" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="224" pos:column="7">mutt_unlink<pos:position pos:line="224" pos:column="18"/></name> <argument_list pos:line="224" pos:column="19">(<argument><expr><name pos:line="224" pos:column="20">tmpfname<pos:position pos:line="224" pos:column="28"/></name></expr></argument>)<pos:position pos:line="224" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="30"/></expr_stmt>
      <if pos:line="225" pos:column="7">if <condition pos:line="225" pos:column="10">(<expr><name pos:line="225" pos:column="11">pgpout<pos:position pos:line="225" pos:column="17"/></name></expr>)<pos:position pos:line="225" pos:column="18"/></condition><then pos:line="225" pos:column="18">
      <block pos:line="226" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="227" pos:column="9">safe_fclose<pos:position pos:line="227" pos:column="20"/></name> <argument_list pos:line="227" pos:column="21">(<argument><expr><operator pos:line="227" pos:column="22">&amp;<pos:position pos:line="227" pos:column="27"/></operator><name pos:line="227" pos:column="23">pgpout<pos:position pos:line="227" pos:column="29"/></name></expr></argument>)<pos:position pos:line="227" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="228" pos:column="9">mutt_unlink<pos:position pos:line="228" pos:column="20"/></name> <argument_list pos:line="228" pos:column="21">(<argument><expr><name pos:line="228" pos:column="22">outfile<pos:position pos:line="228" pos:column="29"/></name></expr></argument>)<pos:position pos:line="228" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="31"/></expr_stmt>
      }<pos:position pos:line="229" pos:column="8"/></block></then></if>

      <if pos:line="231" pos:column="7">if <condition pos:line="231" pos:column="10">(<expr><name><name pos:line="231" pos:column="11">s<pos:position pos:line="231" pos:column="12"/></name><operator pos:line="231" pos:column="12">-&gt;<pos:position pos:line="231" pos:column="17"/></operator><name pos:line="231" pos:column="14">flags<pos:position pos:line="231" pos:column="19"/></name></name> <operator pos:line="231" pos:column="20">&amp;<pos:position pos:line="231" pos:column="25"/></operator> <name pos:line="231" pos:column="22">MUTT_DISPLAY<pos:position pos:line="231" pos:column="34"/></name></expr>)<pos:position pos:line="231" pos:column="35"/></condition><then pos:line="231" pos:column="35">
      <block pos:line="232" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="233" pos:column="9">state_putc<pos:position pos:line="233" pos:column="19"/></name> <argument_list pos:line="233" pos:column="20">(<argument><expr><literal type="char" pos:line="233" pos:column="21">'\n'<pos:position pos:line="233" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="233" pos:column="27">s<pos:position pos:line="233" pos:column="28"/></name></expr></argument>)<pos:position pos:line="233" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="30"/></expr_stmt>
	<if pos:line="234" pos:column="9">if <condition pos:line="234" pos:column="12">(<expr><name pos:line="234" pos:column="13">needpass<pos:position pos:line="234" pos:column="21"/></name></expr>)<pos:position pos:line="234" pos:column="22"/></condition><then pos:line="234" pos:column="22">
        <block pos:line="235" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="236" pos:column="11">state_attach_puts<pos:position pos:line="236" pos:column="28"/></name> <argument_list pos:line="236" pos:column="29">(<argument><expr><call><name pos:line="236" pos:column="30">_<pos:position pos:line="236" pos:column="31"/></name><argument_list pos:line="236" pos:column="31">(<argument><expr><literal type="string" pos:line="236" pos:column="32">"[-- END PGP MESSAGE --]\n"<pos:position pos:line="236" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="236" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="236" pos:column="62">s<pos:position pos:line="236" pos:column="63"/></name></expr></argument>)<pos:position pos:line="236" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="65"/></expr_stmt>
	  <if pos:line="237" pos:column="11">if <condition pos:line="237" pos:column="14">(<expr><name pos:line="237" pos:column="15">could_not_decrypt<pos:position pos:line="237" pos:column="32"/></name></expr>)<pos:position pos:line="237" pos:column="33"/></condition><then pos:line="237" pos:column="33">
	    <block type="pseudo"><decl_stmt><decl><type><name pos:line="238" pos:column="13">mutt_error<pos:position pos:line="238" pos:column="23"/></name></type> <name pos:line="238" pos:column="24">_<pos:position pos:line="238" pos:column="25"/></name><argument_list pos:line="238" pos:column="25">(<argument><expr><literal type="string" pos:line="238" pos:column="26">"Could not decrypt PGP message"<pos:position pos:line="238" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="238" pos:column="58"/></argument_list></decl>;<pos:position pos:line="238" pos:column="59"/></decl_stmt></block></then>
	  <else pos:line="239" pos:column="11">else
	    <block type="pseudo"><decl_stmt><decl><type><name pos:line="240" pos:column="13">mutt_message<pos:position pos:line="240" pos:column="25"/></name></type> <name pos:line="240" pos:column="26">_<pos:position pos:line="240" pos:column="27"/></name><argument_list pos:line="240" pos:column="27">(<argument><expr><literal type="string" pos:line="240" pos:column="28">"PGP message successfully decrypted."<pos:position pos:line="240" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="240" pos:column="66"/></argument_list></decl>;<pos:position pos:line="240" pos:column="67"/></decl_stmt></block></else></if>
        }<pos:position pos:line="241" pos:column="10"/></block></then>
	<elseif pos:line="242" pos:column="9">else <if pos:line="242" pos:column="14">if <condition pos:line="242" pos:column="17">(<expr><name pos:line="242" pos:column="18">pgp_keyblock<pos:position pos:line="242" pos:column="30"/></name></expr>)<pos:position pos:line="242" pos:column="31"/></condition><then pos:line="242" pos:column="31">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="243" pos:column="11">state_attach_puts<pos:position pos:line="243" pos:column="28"/></name> <argument_list pos:line="243" pos:column="29">(<argument><expr><call><name pos:line="243" pos:column="30">_<pos:position pos:line="243" pos:column="31"/></name><argument_list pos:line="243" pos:column="31">(<argument><expr><literal type="string" pos:line="243" pos:column="32">"[-- END PGP PUBLIC KEY BLOCK --]\n"<pos:position pos:line="243" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="243" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="243" pos:column="71">s<pos:position pos:line="243" pos:column="72"/></name></expr></argument>)<pos:position pos:line="243" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="74"/></expr_stmt></block></then></if></elseif>
	<else pos:line="244" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="245" pos:column="11">state_attach_puts<pos:position pos:line="245" pos:column="28"/></name> <argument_list pos:line="245" pos:column="29">(<argument><expr><call><name pos:line="245" pos:column="30">_<pos:position pos:line="245" pos:column="31"/></name><argument_list pos:line="245" pos:column="31">(<argument><expr><literal type="string" pos:line="245" pos:column="32">"[-- END PGP SIGNED MESSAGE --]\n"<pos:position pos:line="245" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="245" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="245" pos:column="69">s<pos:position pos:line="245" pos:column="70"/></name></expr></argument>)<pos:position pos:line="245" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="72"/></expr_stmt></block></else></if>
      }<pos:position pos:line="246" pos:column="8"/></block></then></if>
    }<pos:position pos:line="247" pos:column="6"/></block></then>
    <else pos:line="248" pos:column="5">else
    <block pos:line="249" pos:column="5">{
      <comment type="block" pos:line="250" pos:column="7">/* A traditional PGP part may mix signed and unsigned content */</comment>
      <comment type="block" pos:line="251" pos:column="7">/* XXX - we may wish to recode here */</comment>
      <if pos:line="252" pos:column="7">if <condition pos:line="252" pos:column="10">(<expr><name><name pos:line="252" pos:column="11">s<pos:position pos:line="252" pos:column="12"/></name><operator pos:line="252" pos:column="12">-&gt;<pos:position pos:line="252" pos:column="17"/></operator><name pos:line="252" pos:column="14">prefix<pos:position pos:line="252" pos:column="20"/></name></name></expr>)<pos:position pos:line="252" pos:column="21"/></condition><then pos:line="252" pos:column="21">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="253" pos:column="9">state_puts<pos:position pos:line="253" pos:column="19"/></name> <argument_list pos:line="253" pos:column="20">(<argument><expr><name><name pos:line="253" pos:column="21">s<pos:position pos:line="253" pos:column="22"/></name><operator pos:line="253" pos:column="22">-&gt;<pos:position pos:line="253" pos:column="27"/></operator><name pos:line="253" pos:column="24">prefix<pos:position pos:line="253" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="253" pos:column="32">s<pos:position pos:line="253" pos:column="33"/></name></expr></argument>)<pos:position pos:line="253" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="35"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="254" pos:column="7">state_puts<pos:position pos:line="254" pos:column="17"/></name> <argument_list pos:line="254" pos:column="18">(<argument><expr><name pos:line="254" pos:column="19">buf<pos:position pos:line="254" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="254" pos:column="24">s<pos:position pos:line="254" pos:column="25"/></name></expr></argument>)<pos:position pos:line="254" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="254" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="255" pos:column="6"/></block></else></if>
  }<pos:position pos:line="256" pos:column="4"/></block></for>

  <expr_stmt><expr><name pos:line="258" pos:column="3">rc<pos:position pos:line="258" pos:column="5"/></name> <operator pos:line="258" pos:column="6">=<pos:position pos:line="258" pos:column="7"/></operator> <literal type="number" pos:line="258" pos:column="8">0<pos:position pos:line="258" pos:column="9"/></literal></expr>;<pos:position pos:line="258" pos:column="10"/></expr_stmt>

<label><name pos:line="260" pos:column="1">out<pos:position pos:line="260" pos:column="4"/></name>:<pos:position pos:line="260" pos:column="5"/></label>
  <expr_stmt><expr><name><name pos:line="261" pos:column="3">m<pos:position pos:line="261" pos:column="4"/></name><operator pos:line="261" pos:column="4">-&gt;<pos:position pos:line="261" pos:column="9"/></operator><name pos:line="261" pos:column="6">goodsig<pos:position pos:line="261" pos:column="13"/></name></name> <operator pos:line="261" pos:column="14">=<pos:position pos:line="261" pos:column="15"/></operator> <operator pos:line="261" pos:column="16">(<pos:position pos:line="261" pos:column="17"/></operator><name pos:line="261" pos:column="17">maybe_goodsig<pos:position pos:line="261" pos:column="30"/></name> <operator pos:line="261" pos:column="31">&amp;&amp;<pos:position pos:line="261" pos:column="41"/></operator> <name pos:line="261" pos:column="34">have_any_sigs<pos:position pos:line="261" pos:column="47"/></name><operator pos:line="261" pos:column="47">)<pos:position pos:line="261" pos:column="48"/></operator></expr>;<pos:position pos:line="261" pos:column="49"/></expr_stmt>

  <if pos:line="263" pos:column="3">if <condition pos:line="263" pos:column="6">(<expr><name pos:line="263" pos:column="7">tmpfp<pos:position pos:line="263" pos:column="12"/></name></expr>)<pos:position pos:line="263" pos:column="13"/></condition><then pos:line="263" pos:column="13">
  <block pos:line="264" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="265" pos:column="5">safe_fclose<pos:position pos:line="265" pos:column="16"/></name> <argument_list pos:line="265" pos:column="17">(<argument><expr><operator pos:line="265" pos:column="18">&amp;<pos:position pos:line="265" pos:column="23"/></operator><name pos:line="265" pos:column="19">tmpfp<pos:position pos:line="265" pos:column="24"/></name></expr></argument>)<pos:position pos:line="265" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="265" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="266" pos:column="5">mutt_unlink<pos:position pos:line="266" pos:column="16"/></name> <argument_list pos:line="266" pos:column="17">(<argument><expr><name pos:line="266" pos:column="18">tmpfname<pos:position pos:line="266" pos:column="26"/></name></expr></argument>)<pos:position pos:line="266" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="266" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="267" pos:column="4"/></block></then></if>
  <if pos:line="268" pos:column="3">if <condition pos:line="268" pos:column="6">(<expr><name pos:line="268" pos:column="7">pgpout<pos:position pos:line="268" pos:column="13"/></name></expr>)<pos:position pos:line="268" pos:column="14"/></condition><then pos:line="268" pos:column="14">
  <block pos:line="269" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="270" pos:column="5">safe_fclose<pos:position pos:line="270" pos:column="16"/></name> <argument_list pos:line="270" pos:column="17">(<argument><expr><operator pos:line="270" pos:column="18">&amp;<pos:position pos:line="270" pos:column="23"/></operator><name pos:line="270" pos:column="19">pgpout<pos:position pos:line="270" pos:column="25"/></name></expr></argument>)<pos:position pos:line="270" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="271" pos:column="5">mutt_unlink<pos:position pos:line="271" pos:column="16"/></name> <argument_list pos:line="271" pos:column="17">(<argument><expr><name pos:line="271" pos:column="18">outfile<pos:position pos:line="271" pos:column="25"/></name></expr></argument>)<pos:position pos:line="271" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="272" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="274" pos:column="3">FREE<pos:position pos:line="274" pos:column="7"/></name><argument_list pos:line="274" pos:column="7">(<argument><expr><operator pos:line="274" pos:column="8">&amp;<pos:position pos:line="274" pos:column="13"/></operator><name pos:line="274" pos:column="9">gpgcharset<pos:position pos:line="274" pos:column="19"/></name></expr></argument>)<pos:position pos:line="274" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="274" pos:column="21"/></expr_stmt>

  <if pos:line="276" pos:column="3">if <condition pos:line="276" pos:column="6">(<expr><name pos:line="276" pos:column="7">needpass<pos:position pos:line="276" pos:column="15"/></name> <operator pos:line="276" pos:column="16">==<pos:position pos:line="276" pos:column="18"/></operator> <operator pos:line="276" pos:column="19">-<pos:position pos:line="276" pos:column="20"/></operator><literal type="number" pos:line="276" pos:column="20">1<pos:position pos:line="276" pos:column="21"/></literal></expr>)<pos:position pos:line="276" pos:column="22"/></condition><then pos:line="276" pos:column="22">
  <block pos:line="277" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="278" pos:column="5">state_attach_puts<pos:position pos:line="278" pos:column="22"/></name> <argument_list pos:line="278" pos:column="23">(<argument><expr><call><name pos:line="278" pos:column="24">_<pos:position pos:line="278" pos:column="25"/></name><argument_list pos:line="278" pos:column="25">(<argument><expr><literal type="string" pos:line="278" pos:column="26">"[-- Error: could not find beginning of PGP message! --]\n\n"<pos:position pos:line="278" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="278" pos:column="88"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="278" pos:column="90">s<pos:position pos:line="278" pos:column="91"/></name></expr></argument>)<pos:position pos:line="278" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="93"/></expr_stmt>
    <return pos:line="279" pos:column="5">return <expr><operator pos:line="279" pos:column="12">-<pos:position pos:line="279" pos:column="13"/></operator><literal type="number" pos:line="279" pos:column="13">1<pos:position pos:line="279" pos:column="14"/></literal></expr>;<pos:position pos:line="279" pos:column="15"/></return>
  }<pos:position pos:line="280" pos:column="4"/></block></then></if>
  
  <return pos:line="282" pos:column="3">return <expr><name pos:line="282" pos:column="10">rc<pos:position pos:line="282" pos:column="12"/></name></expr>;<pos:position pos:line="282" pos:column="13"/></return>
}<pos:position pos:line="283" pos:column="2"/></block></function></unit>

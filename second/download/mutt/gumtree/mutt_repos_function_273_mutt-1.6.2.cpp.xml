<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_273_mutt-1.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_folder_hook<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">path<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">HOOK<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">tmp<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><name pos:line="3" pos:column="15">Hooks<pos:position pos:line="3" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">BUFFER<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">err<pos:position pos:line="4" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="15">token<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">current_hook_type<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">=<pos:position pos:line="6" pos:column="22"/></operator> <name pos:line="6" pos:column="23">M_FOLDERHOOK<pos:position pos:line="6" pos:column="35"/></name></expr>;<pos:position pos:line="6" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">mutt_buffer_init<pos:position pos:line="8" pos:column="19"/></name> <argument_list pos:line="8" pos:column="20">(<argument><expr><operator pos:line="8" pos:column="21">&amp;<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="22">err<pos:position pos:line="8" pos:column="25"/></name></expr></argument>)<pos:position pos:line="8" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">err<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">.<pos:position pos:line="9" pos:column="7"/></operator><name pos:line="9" pos:column="7">dsize<pos:position pos:line="9" pos:column="12"/></name></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">STRING<pos:position pos:line="9" pos:column="21"/></name></expr>;<pos:position pos:line="9" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">err<pos:position pos:line="10" pos:column="6"/></name><operator pos:line="10" pos:column="6">.<pos:position pos:line="10" pos:column="7"/></operator><name pos:line="10" pos:column="7">data<pos:position pos:line="10" pos:column="11"/></name></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <call><name pos:line="10" pos:column="14">safe_malloc<pos:position pos:line="10" pos:column="25"/></name> <argument_list pos:line="10" pos:column="26">(<argument><expr><name><name pos:line="10" pos:column="27">err<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">.<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="31">dsize<pos:position pos:line="10" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">mutt_buffer_init<pos:position pos:line="11" pos:column="19"/></name> <argument_list pos:line="11" pos:column="20">(<argument><expr><operator pos:line="11" pos:column="21">&amp;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="22">token<pos:position pos:line="11" pos:column="27"/></name></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>
  <for pos:line="12" pos:column="3">for <control pos:line="12" pos:column="7">(<init pos:line="12" pos:column="8">;<pos:position pos:line="12" pos:column="9"/></init> <condition><expr><name pos:line="12" pos:column="10">tmp<pos:position pos:line="12" pos:column="13"/></name></expr>;<pos:position pos:line="12" pos:column="14"/></condition> <incr><expr><name pos:line="12" pos:column="15">tmp<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <name><name pos:line="12" pos:column="21">tmp<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">-&gt;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="26">next<pos:position pos:line="12" pos:column="30"/></name></name></expr></incr>)<pos:position pos:line="12" pos:column="31"/></control>
  <block pos:line="13" pos:column="3">{
    <if pos:line="14" pos:column="5">if<condition pos:line="14" pos:column="7">(<expr><operator pos:line="14" pos:column="8">!<pos:position pos:line="14" pos:column="9"/></operator><name><name pos:line="14" pos:column="9">tmp<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">command<pos:position pos:line="14" pos:column="21"/></name></name></expr>)<pos:position pos:line="14" pos:column="22"/></condition><then pos:line="14" pos:column="22">
      <block type="pseudo"><continue pos:line="15" pos:column="7">continue;<pos:position pos:line="15" pos:column="16"/></continue></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name><name pos:line="17" pos:column="9">tmp<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">type<pos:position pos:line="17" pos:column="18"/></name></name> <operator pos:line="17" pos:column="19">&amp;<pos:position pos:line="17" pos:column="24"/></operator> <name pos:line="17" pos:column="21">M_FOLDERHOOK<pos:position pos:line="17" pos:column="33"/></name></expr>)<pos:position pos:line="17" pos:column="34"/></condition><then pos:line="17" pos:column="34">
    <block pos:line="18" pos:column="5">{
      <if pos:line="19" pos:column="7">if <condition pos:line="19" pos:column="10">(<expr><operator pos:line="19" pos:column="11">(<pos:position pos:line="19" pos:column="12"/></operator><call><name pos:line="19" pos:column="12">regexec<pos:position pos:line="19" pos:column="19"/></name> <argument_list pos:line="19" pos:column="20">(<argument><expr><name><name pos:line="19" pos:column="21">tmp<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">-&gt;<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="26">rx<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">.<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="29">rx<pos:position pos:line="19" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="33">path<pos:position pos:line="19" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="39">0<pos:position pos:line="19" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="42">NULL<pos:position pos:line="19" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="48">0<pos:position pos:line="19" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call> <operator pos:line="19" pos:column="51">==<pos:position pos:line="19" pos:column="53"/></operator> <literal type="number" pos:line="19" pos:column="54">0<pos:position pos:line="19" pos:column="55"/></literal><operator pos:line="19" pos:column="55">)<pos:position pos:line="19" pos:column="56"/></operator> <operator pos:line="19" pos:column="57">^<pos:position pos:line="19" pos:column="58"/></operator> <name><name pos:line="19" pos:column="59">tmp<pos:position pos:line="19" pos:column="62"/></name><operator pos:line="19" pos:column="62">-&gt;<pos:position pos:line="19" pos:column="67"/></operator><name pos:line="19" pos:column="64">rx<pos:position pos:line="19" pos:column="66"/></name><operator pos:line="19" pos:column="66">.<pos:position pos:line="19" pos:column="67"/></operator></name><operator pos:line="19" pos:column="67">not<pos:position pos:line="19" pos:column="70"/></operator></expr>)<pos:position pos:line="19" pos:column="71"/></condition><then pos:line="19" pos:column="71">
      <block pos:line="20" pos:column="7">{
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><call><name pos:line="21" pos:column="13">mutt_parse_rc_line<pos:position pos:line="21" pos:column="31"/></name> <argument_list pos:line="21" pos:column="32">(<argument><expr><name><name pos:line="21" pos:column="33">tmp<pos:position pos:line="21" pos:column="36"/></name><operator pos:line="21" pos:column="36">-&gt;<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="38">command<pos:position pos:line="21" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="47">&amp;<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="48">token<pos:position pos:line="21" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="55">&amp;<pos:position pos:line="21" pos:column="60"/></operator><name pos:line="21" pos:column="56">err<pos:position pos:line="21" pos:column="59"/></name></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call> <operator pos:line="21" pos:column="61">==<pos:position pos:line="21" pos:column="63"/></operator> <operator pos:line="21" pos:column="64">-<pos:position pos:line="21" pos:column="65"/></operator><literal type="number" pos:line="21" pos:column="65">1<pos:position pos:line="21" pos:column="66"/></literal></expr>)<pos:position pos:line="21" pos:column="67"/></condition><then pos:line="21" pos:column="67">
	<block pos:line="22" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="23" pos:column="11">mutt_error<pos:position pos:line="23" pos:column="21"/></name> <argument_list pos:line="23" pos:column="22">(<argument><expr><literal type="string" pos:line="23" pos:column="23">"%s"<pos:position pos:line="23" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="29">err<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">.<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="33">data<pos:position pos:line="23" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="39"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="24" pos:column="11">FREE<pos:position pos:line="24" pos:column="15"/></name> <argument_list pos:line="24" pos:column="16">(<argument><expr><operator pos:line="24" pos:column="17">&amp;<pos:position pos:line="24" pos:column="22"/></operator><name><name pos:line="24" pos:column="18">token<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">.<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="24">data<pos:position pos:line="24" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="25" pos:column="11">mutt_sleep<pos:position pos:line="25" pos:column="21"/></name> <argument_list pos:line="25" pos:column="22">(<argument><expr><literal type="number" pos:line="25" pos:column="23">1<pos:position pos:line="25" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="26"/></expr_stmt>	<comment type="block" pos:line="25" pos:column="33">/* pause a moment to let the user see the error */</comment>
	  <expr_stmt><expr><name pos:line="26" pos:column="11">current_hook_type<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">=<pos:position pos:line="26" pos:column="30"/></operator> <literal type="number" pos:line="26" pos:column="31">0<pos:position pos:line="26" pos:column="32"/></literal></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="27" pos:column="11">FREE<pos:position pos:line="27" pos:column="15"/></name> <argument_list pos:line="27" pos:column="16">(<argument><expr><operator pos:line="27" pos:column="17">&amp;<pos:position pos:line="27" pos:column="22"/></operator><name><name pos:line="27" pos:column="18">err<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">.<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">data<pos:position pos:line="27" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt>

	  <return pos:line="29" pos:column="11">return;<pos:position pos:line="29" pos:column="18"/></return>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>
      }<pos:position pos:line="31" pos:column="8"/></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
  }<pos:position pos:line="33" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">FREE<pos:position pos:line="34" pos:column="7"/></name> <argument_list pos:line="34" pos:column="8">(<argument><expr><operator pos:line="34" pos:column="9">&amp;<pos:position pos:line="34" pos:column="14"/></operator><name><name pos:line="34" pos:column="10">token<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">.<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="16">data<pos:position pos:line="34" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">FREE<pos:position pos:line="35" pos:column="7"/></name> <argument_list pos:line="35" pos:column="8">(<argument><expr><operator pos:line="35" pos:column="9">&amp;<pos:position pos:line="35" pos:column="14"/></operator><name><name pos:line="35" pos:column="10">err<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">.<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">data<pos:position pos:line="35" pos:column="18"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="20"/></expr_stmt>
  
  <expr_stmt><expr><name pos:line="37" pos:column="3">current_hook_type<pos:position pos:line="37" pos:column="20"/></name> <operator pos:line="37" pos:column="21">=<pos:position pos:line="37" pos:column="22"/></operator> <literal type="number" pos:line="37" pos:column="23">0<pos:position pos:line="37" pos:column="24"/></literal></expr>;<pos:position pos:line="37" pos:column="25"/></expr_stmt>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

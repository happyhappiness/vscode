<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_164_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">safe_fsync_close<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">FILE<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier><modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">f<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">r<pos:position pos:line="3" pos:column="8"/></name> <init pos:line="3" pos:column="9">= <expr><literal type="number" pos:line="3" pos:column="11">0<pos:position pos:line="3" pos:column="12"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">*<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">f<pos:position pos:line="5" pos:column="9"/></name></expr>)<pos:position pos:line="5" pos:column="10"/></condition><then pos:line="5" pos:column="10">
  <block pos:line="6" pos:column="3">{
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">fflush<pos:position pos:line="7" pos:column="15"/></name> <argument_list pos:line="7" pos:column="16">(<argument><expr><operator pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="18">f<pos:position pos:line="7" pos:column="19"/></name></expr></argument>)<pos:position pos:line="7" pos:column="20"/></argument_list></call> <operator pos:line="7" pos:column="21">||<pos:position pos:line="7" pos:column="23"/></operator> <call><name pos:line="7" pos:column="24">fsync<pos:position pos:line="7" pos:column="29"/></name> <argument_list pos:line="7" pos:column="30">(<argument><expr><call><name pos:line="7" pos:column="31">fileno<pos:position pos:line="7" pos:column="37"/></name> <argument_list pos:line="7" pos:column="38">(<argument><expr><operator pos:line="7" pos:column="39">*<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="40">f<pos:position pos:line="7" pos:column="41"/></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="44"/></condition><then pos:line="7" pos:column="44">
    <block pos:line="8" pos:column="5">{
      <expr_stmt><expr><name pos:line="9" pos:column="7">r<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator> <operator pos:line="9" pos:column="11">-<pos:position pos:line="9" pos:column="12"/></operator><literal type="number" pos:line="9" pos:column="12">1<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="10" pos:column="7">safe_fclose<pos:position pos:line="10" pos:column="18"/></name> <argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">f<pos:position pos:line="10" pos:column="21"/></name></expr></argument>)<pos:position pos:line="10" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then>
    <else pos:line="12" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="7">r<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <call><name pos:line="13" pos:column="11">safe_fclose<pos:position pos:line="13" pos:column="22"/></name> <argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">f<pos:position pos:line="13" pos:column="25"/></name></expr></argument>)<pos:position pos:line="13" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt></block></else></if>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <return pos:line="16" pos:column="3">return <expr><name pos:line="16" pos:column="10">r<pos:position pos:line="16" pos:column="11"/></name></expr>;<pos:position pos:line="16" pos:column="12"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_339_mutt-1.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">km_dokey<pos:position pos:line="1" pos:column="13"/></name> <parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">int<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">menu<pos:position pos:line="1" pos:column="23"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="24"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">event_t<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">tmp<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">keymap_t<pos:position pos:line="4" pos:column="18"/></name></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">map<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><name><name pos:line="4" pos:column="26">Keymaps<pos:position pos:line="4" pos:column="33"/></name><index pos:line="4" pos:column="33">[<expr><name pos:line="4" pos:column="34">menu<pos:position pos:line="4" pos:column="38"/></name></expr>]<pos:position pos:line="4" pos:column="39"/></index></name></expr></init></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">pos<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><literal type="number" pos:line="5" pos:column="13">0<pos:position pos:line="5" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">n<pos:position pos:line="6" pos:column="8"/></name> <init pos:line="6" pos:column="9">= <expr><literal type="number" pos:line="6" pos:column="11">0<pos:position pos:line="6" pos:column="12"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">i<pos:position pos:line="7" pos:column="8"/></name></decl>;<pos:position pos:line="7" pos:column="9"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">!<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">map<pos:position pos:line="9" pos:column="11"/></name></expr>)<pos:position pos:line="9" pos:column="12"/></condition><then pos:line="9" pos:column="12">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><call><name pos:line="10" pos:column="13">retry_generic<pos:position pos:line="10" pos:column="26"/></name> <argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">menu<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="34">NULL<pos:position pos:line="10" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="40">0<pos:position pos:line="10" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="43">0<pos:position pos:line="10" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call><operator pos:line="10" pos:column="45">)<pos:position pos:line="10" pos:column="46"/></operator></expr>;<pos:position pos:line="10" pos:column="47"/></return></block></then></if>

  <macro><name pos:line="12" pos:column="3">FOREVER<pos:position pos:line="12" pos:column="10"/></name></macro>
  <block pos:line="13" pos:column="3">{
    <expr_stmt><expr><name pos:line="14" pos:column="5">i<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <ternary><condition><expr><name pos:line="14" pos:column="9">Timeout<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">&gt;<pos:position pos:line="14" pos:column="21"/></operator> <literal type="number" pos:line="14" pos:column="19">0<pos:position pos:line="14" pos:column="20"/></literal></expr> ?<pos:position pos:line="14" pos:column="22"/></condition><then pos:line="14" pos:column="22"> <expr><name pos:line="14" pos:column="23">Timeout<pos:position pos:line="14" pos:column="30"/></name></expr> <pos:position pos:line="14" pos:column="31"/></then><else pos:line="14" pos:column="31">: <expr><literal type="number" pos:line="14" pos:column="33">60<pos:position pos:line="14" pos:column="35"/></literal></expr></else></ternary></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>
<cpp:ifdef pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">ifdef<pos:position pos:line="15" pos:column="7"/></cpp:directive> <name pos:line="15" pos:column="8">USE_IMAP<pos:position pos:line="15" pos:column="16"/></name></cpp:ifdef>
    <comment type="block" pos:line="16" pos:column="5">/* keepalive may need to run more frequently than Timeout allows */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">ImapKeepalive<pos:position pos:line="17" pos:column="22"/></name></expr>)<pos:position pos:line="17" pos:column="23"/></condition><then pos:line="17" pos:column="23">
    <block pos:line="18" pos:column="5">{
      <if pos:line="19" pos:column="7">if <condition pos:line="19" pos:column="10">(<expr><name pos:line="19" pos:column="11">ImapKeepalive<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">&gt;=<pos:position pos:line="19" pos:column="30"/></operator> <name pos:line="19" pos:column="28">i<pos:position pos:line="19" pos:column="29"/></name></expr>)<pos:position pos:line="19" pos:column="30"/></condition><then pos:line="19" pos:column="30">
      	<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="9">imap_keepalive<pos:position pos:line="20" pos:column="23"/></name> <argument_list pos:line="20" pos:column="24">()<pos:position pos:line="20" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt></block></then>
      <else pos:line="21" pos:column="7">else
	<block type="pseudo"><while pos:line="22" pos:column="9">while <condition pos:line="22" pos:column="15">(<expr><name pos:line="22" pos:column="16">ImapKeepalive<pos:position pos:line="22" pos:column="29"/></name> <operator pos:line="22" pos:column="30">&amp;&amp;<pos:position pos:line="22" pos:column="40"/></operator> <name pos:line="22" pos:column="33">ImapKeepalive<pos:position pos:line="22" pos:column="46"/></name> <operator pos:line="22" pos:column="47">&lt;<pos:position pos:line="22" pos:column="51"/></operator> <name pos:line="22" pos:column="49">i<pos:position pos:line="22" pos:column="50"/></name></expr>)<pos:position pos:line="22" pos:column="51"/></condition>
	<block pos:line="23" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="24" pos:column="11">timeout<pos:position pos:line="24" pos:column="18"/></name> <argument_list pos:line="24" pos:column="19">(<argument><expr><name pos:line="24" pos:column="20">ImapKeepalive<pos:position pos:line="24" pos:column="33"/></name> <operator pos:line="24" pos:column="34">*<pos:position pos:line="24" pos:column="35"/></operator> <literal type="number" pos:line="24" pos:column="36">1000<pos:position pos:line="24" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="25" pos:column="11">tmp<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <call><name pos:line="25" pos:column="17">mutt_getch<pos:position pos:line="25" pos:column="27"/></name> <argument_list pos:line="25" pos:column="28">()<pos:position pos:line="25" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="31"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="26" pos:column="11">timeout<pos:position pos:line="26" pos:column="18"/></name> <argument_list pos:line="26" pos:column="19">(<argument><expr><operator pos:line="26" pos:column="20">-<pos:position pos:line="26" pos:column="21"/></operator><literal type="number" pos:line="26" pos:column="21">1<pos:position pos:line="26" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt>
	  <comment type="block" pos:line="27" pos:column="11">/* If a timeout was not received, or the window was resized, exit the
	   * loop now.  Otherwise, continue to loop until reaching a total of
	   * $timeout seconds.
	   */</comment>
	  <if pos:line="31" pos:column="11">if <condition pos:line="31" pos:column="14">(<expr><name><name pos:line="31" pos:column="15">tmp<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">.<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="19">ch<pos:position pos:line="31" pos:column="21"/></name></name> <operator pos:line="31" pos:column="22">!=<pos:position pos:line="31" pos:column="24"/></operator> <operator pos:line="31" pos:column="25">-<pos:position pos:line="31" pos:column="26"/></operator><literal type="number" pos:line="31" pos:column="26">2<pos:position pos:line="31" pos:column="27"/></literal> <operator pos:line="31" pos:column="28">||<pos:position pos:line="31" pos:column="30"/></operator> <name pos:line="31" pos:column="31">SigWinch<pos:position pos:line="31" pos:column="39"/></name></expr>)<pos:position pos:line="31" pos:column="40"/></condition><then pos:line="31" pos:column="40">
	    <block type="pseudo"><goto pos:line="32" pos:column="13">goto <name pos:line="32" pos:column="18">gotkey<pos:position pos:line="32" pos:column="24"/></name>;<pos:position pos:line="32" pos:column="25"/></goto></block></then></if>
	  <expr_stmt><expr><name pos:line="33" pos:column="11">i<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">-=<pos:position pos:line="33" pos:column="15"/></operator> <name pos:line="33" pos:column="16">ImapKeepalive<pos:position pos:line="33" pos:column="29"/></name></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="34" pos:column="11">imap_keepalive<pos:position pos:line="34" pos:column="25"/></name> <argument_list pos:line="34" pos:column="26">()<pos:position pos:line="34" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></while></block></else></if>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="39" pos:column="5">timeout<pos:position pos:line="39" pos:column="12"/></name> <argument_list pos:line="39" pos:column="13">(<argument><expr><name pos:line="39" pos:column="14">i<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">*<pos:position pos:line="39" pos:column="17"/></operator> <literal type="number" pos:line="39" pos:column="18">1000<pos:position pos:line="39" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="40" pos:column="5">tmp<pos:position pos:line="40" pos:column="8"/></name> <operator pos:line="40" pos:column="9">=<pos:position pos:line="40" pos:column="10"/></operator> <call><name pos:line="40" pos:column="11">mutt_getch<pos:position pos:line="40" pos:column="21"/></name><argument_list pos:line="40" pos:column="21">()<pos:position pos:line="40" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">timeout<pos:position pos:line="41" pos:column="12"/></name> <argument_list pos:line="41" pos:column="13">(<argument><expr><operator pos:line="41" pos:column="14">-<pos:position pos:line="41" pos:column="15"/></operator><literal type="number" pos:line="41" pos:column="15">1<pos:position pos:line="41" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="18"/></expr_stmt>

    <comment type="block" pos:line="43" pos:column="5">/* hide timeouts from line editor */</comment>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">menu<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">==<pos:position pos:line="44" pos:column="16"/></operator> <name pos:line="44" pos:column="17">MENU_EDITOR<pos:position pos:line="44" pos:column="28"/></name> <operator pos:line="44" pos:column="29">&amp;&amp;<pos:position pos:line="44" pos:column="39"/></operator> <name><name pos:line="44" pos:column="32">tmp<pos:position pos:line="44" pos:column="35"/></name><operator pos:line="44" pos:column="35">.<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="36">ch<pos:position pos:line="44" pos:column="38"/></name></name> <operator pos:line="44" pos:column="39">==<pos:position pos:line="44" pos:column="41"/></operator> <operator pos:line="44" pos:column="42">-<pos:position pos:line="44" pos:column="43"/></operator><literal type="number" pos:line="44" pos:column="43">2<pos:position pos:line="44" pos:column="44"/></literal></expr>)<pos:position pos:line="44" pos:column="45"/></condition><then pos:line="44" pos:column="45">
      <block type="pseudo"><continue pos:line="45" pos:column="7">continue;<pos:position pos:line="45" pos:column="16"/></continue></block></then></if>

<cpp:ifdef pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">ifdef<pos:position pos:line="47" pos:column="7"/></cpp:directive> <name pos:line="47" pos:column="8">USE_IMAP<pos:position pos:line="47" pos:column="16"/></name></cpp:ifdef>
  <label><name pos:line="48" pos:column="3">gotkey<pos:position pos:line="48" pos:column="9"/></name>:<pos:position pos:line="48" pos:column="10"/></label>
<cpp:endif pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">endif<pos:position pos:line="49" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name pos:line="50" pos:column="5">LastKey<pos:position pos:line="50" pos:column="12"/></name> <operator pos:line="50" pos:column="13">=<pos:position pos:line="50" pos:column="14"/></operator> <name><name pos:line="50" pos:column="15">tmp<pos:position pos:line="50" pos:column="18"/></name><operator pos:line="50" pos:column="18">.<pos:position pos:line="50" pos:column="19"/></operator><name pos:line="50" pos:column="19">ch<pos:position pos:line="50" pos:column="21"/></name></name></expr>;<pos:position pos:line="50" pos:column="22"/></expr_stmt>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">LastKey<pos:position pos:line="51" pos:column="16"/></name> <operator pos:line="51" pos:column="17">&lt;<pos:position pos:line="51" pos:column="21"/></operator> <literal type="number" pos:line="51" pos:column="19">0<pos:position pos:line="51" pos:column="20"/></literal></expr>)<pos:position pos:line="51" pos:column="21"/></condition><then pos:line="51" pos:column="21">
      <block type="pseudo"><return pos:line="52" pos:column="7">return <expr><operator pos:line="52" pos:column="14">-<pos:position pos:line="52" pos:column="15"/></operator><literal type="number" pos:line="52" pos:column="15">1<pos:position pos:line="52" pos:column="16"/></literal></expr>;<pos:position pos:line="52" pos:column="17"/></return></block></then></if>

    <comment type="block" pos:line="54" pos:column="5">/* do we have an op already? */</comment>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name><name pos:line="55" pos:column="9">tmp<pos:position pos:line="55" pos:column="12"/></name><operator pos:line="55" pos:column="12">.<pos:position pos:line="55" pos:column="13"/></operator><name pos:line="55" pos:column="13">op<pos:position pos:line="55" pos:column="15"/></name></name></expr>)<pos:position pos:line="55" pos:column="16"/></condition><then pos:line="55" pos:column="16">
    <block pos:line="56" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="57" pos:column="7">char<pos:position pos:line="57" pos:column="11"/></name> <modifier pos:line="57" pos:column="12">*<pos:position pos:line="57" pos:column="13"/></modifier></type><name pos:line="57" pos:column="13">func<pos:position pos:line="57" pos:column="17"/></name> <init pos:line="57" pos:column="18">= <expr><name pos:line="57" pos:column="20">NULL<pos:position pos:line="57" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="57" pos:column="25"/></decl_stmt>
      <decl_stmt><decl><type><specifier pos:line="58" pos:column="7">const<pos:position pos:line="58" pos:column="12"/></specifier> <name><name pos:line="58" pos:column="13">struct<pos:position pos:line="58" pos:column="19"/></name> <name pos:line="58" pos:column="20">binding_t<pos:position pos:line="58" pos:column="29"/></name></name> <modifier pos:line="58" pos:column="30">*<pos:position pos:line="58" pos:column="31"/></modifier></type><name pos:line="58" pos:column="31">bindings<pos:position pos:line="58" pos:column="39"/></name></decl>;<pos:position pos:line="58" pos:column="40"/></decl_stmt>

      <comment type="block" pos:line="60" pos:column="7">/* is this a valid op for this menu? */</comment>
      <if pos:line="61" pos:column="7">if <condition pos:line="61" pos:column="10">(<expr><operator pos:line="61" pos:column="11">(<pos:position pos:line="61" pos:column="12"/></operator><name pos:line="61" pos:column="12">bindings<pos:position pos:line="61" pos:column="20"/></name> <operator pos:line="61" pos:column="21">=<pos:position pos:line="61" pos:column="22"/></operator> <call><name pos:line="61" pos:column="23">km_get_table<pos:position pos:line="61" pos:column="35"/></name> <argument_list pos:line="61" pos:column="36">(<argument><expr><name pos:line="61" pos:column="37">menu<pos:position pos:line="61" pos:column="41"/></name></expr></argument>)<pos:position pos:line="61" pos:column="42"/></argument_list></call><operator pos:line="61" pos:column="42">)<pos:position pos:line="61" pos:column="43"/></operator> <operator pos:line="61" pos:column="44">&amp;&amp;<pos:position pos:line="61" pos:column="54"/></operator>
	  <operator pos:line="62" pos:column="11">(<pos:position pos:line="62" pos:column="12"/></operator><name pos:line="62" pos:column="12">func<pos:position pos:line="62" pos:column="16"/></name> <operator pos:line="62" pos:column="17">=<pos:position pos:line="62" pos:column="18"/></operator> <call><name pos:line="62" pos:column="19">get_func<pos:position pos:line="62" pos:column="27"/></name> <argument_list pos:line="62" pos:column="28">(<argument><expr><name pos:line="62" pos:column="29">bindings<pos:position pos:line="62" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="39">tmp<pos:position pos:line="62" pos:column="42"/></name><operator pos:line="62" pos:column="42">.<pos:position pos:line="62" pos:column="43"/></operator><name pos:line="62" pos:column="43">op<pos:position pos:line="62" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="46"/></argument_list></call><operator pos:line="62" pos:column="46">)<pos:position pos:line="62" pos:column="47"/></operator></expr>)<pos:position pos:line="62" pos:column="48"/></condition><then pos:line="62" pos:column="48">
	<block type="pseudo"><return pos:line="63" pos:column="9">return <expr><name><name pos:line="63" pos:column="16">tmp<pos:position pos:line="63" pos:column="19"/></name><operator pos:line="63" pos:column="19">.<pos:position pos:line="63" pos:column="20"/></operator><name pos:line="63" pos:column="20">op<pos:position pos:line="63" pos:column="22"/></name></name></expr>;<pos:position pos:line="63" pos:column="23"/></return></block></then></if>

      <if pos:line="65" pos:column="7">if <condition pos:line="65" pos:column="10">(<expr><name pos:line="65" pos:column="11">menu<pos:position pos:line="65" pos:column="15"/></name> <operator pos:line="65" pos:column="16">==<pos:position pos:line="65" pos:column="18"/></operator> <name pos:line="65" pos:column="19">MENU_EDITOR<pos:position pos:line="65" pos:column="30"/></name> <operator pos:line="65" pos:column="31">&amp;&amp;<pos:position pos:line="65" pos:column="41"/></operator> <call><name pos:line="65" pos:column="34">get_func<pos:position pos:line="65" pos:column="42"/></name> <argument_list pos:line="65" pos:column="43">(<argument><expr><name pos:line="65" pos:column="44">OpEditor<pos:position pos:line="65" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="54">tmp<pos:position pos:line="65" pos:column="57"/></name><operator pos:line="65" pos:column="57">.<pos:position pos:line="65" pos:column="58"/></operator><name pos:line="65" pos:column="58">op<pos:position pos:line="65" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="62"/></condition><then pos:line="65" pos:column="62">
	<block type="pseudo"><return pos:line="66" pos:column="9">return <expr><name><name pos:line="66" pos:column="16">tmp<pos:position pos:line="66" pos:column="19"/></name><operator pos:line="66" pos:column="19">.<pos:position pos:line="66" pos:column="20"/></operator><name pos:line="66" pos:column="20">op<pos:position pos:line="66" pos:column="22"/></name></name></expr>;<pos:position pos:line="66" pos:column="23"/></return></block></then></if>

      <if pos:line="68" pos:column="7">if <condition pos:line="68" pos:column="10">(<expr><name pos:line="68" pos:column="11">menu<pos:position pos:line="68" pos:column="15"/></name> <operator pos:line="68" pos:column="16">!=<pos:position pos:line="68" pos:column="18"/></operator> <name pos:line="68" pos:column="19">MENU_EDITOR<pos:position pos:line="68" pos:column="30"/></name> <operator pos:line="68" pos:column="31">&amp;&amp;<pos:position pos:line="68" pos:column="41"/></operator> <name pos:line="68" pos:column="34">menu<pos:position pos:line="68" pos:column="38"/></name> <operator pos:line="68" pos:column="39">!=<pos:position pos:line="68" pos:column="41"/></operator> <name pos:line="68" pos:column="42">MENU_PAGER<pos:position pos:line="68" pos:column="52"/></name></expr>)<pos:position pos:line="68" pos:column="53"/></condition><then pos:line="68" pos:column="53">
      <block pos:line="69" pos:column="7">{
	<comment type="block" pos:line="70" pos:column="9">/* check generic menu */</comment>
	<expr_stmt><expr><name pos:line="71" pos:column="9">bindings<pos:position pos:line="71" pos:column="17"/></name> <operator pos:line="71" pos:column="18">=<pos:position pos:line="71" pos:column="19"/></operator> <name pos:line="71" pos:column="20">OpGeneric<pos:position pos:line="71" pos:column="29"/></name></expr>;<pos:position pos:line="71" pos:column="30"/></expr_stmt> 
	<if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><operator pos:line="72" pos:column="13">(<pos:position pos:line="72" pos:column="14"/></operator><name pos:line="72" pos:column="14">func<pos:position pos:line="72" pos:column="18"/></name> <operator pos:line="72" pos:column="19">=<pos:position pos:line="72" pos:column="20"/></operator> <call><name pos:line="72" pos:column="21">get_func<pos:position pos:line="72" pos:column="29"/></name> <argument_list pos:line="72" pos:column="30">(<argument><expr><name pos:line="72" pos:column="31">bindings<pos:position pos:line="72" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="41">tmp<pos:position pos:line="72" pos:column="44"/></name><operator pos:line="72" pos:column="44">.<pos:position pos:line="72" pos:column="45"/></operator><name pos:line="72" pos:column="45">op<pos:position pos:line="72" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="48"/></argument_list></call><operator pos:line="72" pos:column="48">)<pos:position pos:line="72" pos:column="49"/></operator></expr>)<pos:position pos:line="72" pos:column="50"/></condition><then pos:line="72" pos:column="50">
	  <block type="pseudo"><return pos:line="73" pos:column="11">return <expr><name><name pos:line="73" pos:column="18">tmp<pos:position pos:line="73" pos:column="21"/></name><operator pos:line="73" pos:column="21">.<pos:position pos:line="73" pos:column="22"/></operator><name pos:line="73" pos:column="22">op<pos:position pos:line="73" pos:column="24"/></name></name></expr>;<pos:position pos:line="73" pos:column="25"/></return></block></then></if>
      }<pos:position pos:line="74" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="76" pos:column="7">/* Sigh. Valid function but not in this context.
       * Find the literal string and push it back */</comment>
      <for pos:line="78" pos:column="7">for <control pos:line="78" pos:column="11">(<init><expr><name pos:line="78" pos:column="12">i<pos:position pos:line="78" pos:column="13"/></name> <operator pos:line="78" pos:column="14">=<pos:position pos:line="78" pos:column="15"/></operator> <literal type="number" pos:line="78" pos:column="16">0<pos:position pos:line="78" pos:column="17"/></literal></expr>;<pos:position pos:line="78" pos:column="18"/></init> <condition><expr><name><name pos:line="78" pos:column="19">Menus<pos:position pos:line="78" pos:column="24"/></name><index pos:line="78" pos:column="24">[<expr><name pos:line="78" pos:column="25">i<pos:position pos:line="78" pos:column="26"/></name></expr>]<pos:position pos:line="78" pos:column="27"/></index></name><operator pos:line="78" pos:column="27">.<pos:position pos:line="78" pos:column="28"/></operator><name pos:line="78" pos:column="28">name<pos:position pos:line="78" pos:column="32"/></name></expr>;<pos:position pos:line="78" pos:column="33"/></condition> <incr><expr><name pos:line="78" pos:column="34">i<pos:position pos:line="78" pos:column="35"/></name><operator pos:line="78" pos:column="35">++<pos:position pos:line="78" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="78" pos:column="38"/></control>
      <block pos:line="79" pos:column="7">{
	<expr_stmt><expr><name pos:line="80" pos:column="9">bindings<pos:position pos:line="80" pos:column="17"/></name> <operator pos:line="80" pos:column="18">=<pos:position pos:line="80" pos:column="19"/></operator> <call><name pos:line="80" pos:column="20">km_get_table<pos:position pos:line="80" pos:column="32"/></name> <argument_list pos:line="80" pos:column="33">(<argument><expr><name><name pos:line="80" pos:column="34">Menus<pos:position pos:line="80" pos:column="39"/></name><index pos:line="80" pos:column="39">[<expr><name pos:line="80" pos:column="40">i<pos:position pos:line="80" pos:column="41"/></name></expr>]<pos:position pos:line="80" pos:column="42"/></index></name><operator pos:line="80" pos:column="42">.<pos:position pos:line="80" pos:column="43"/></operator><name pos:line="80" pos:column="43">value<pos:position pos:line="80" pos:column="48"/></name></expr></argument>)<pos:position pos:line="80" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="50"/></expr_stmt>
	<if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><name pos:line="81" pos:column="13">bindings<pos:position pos:line="81" pos:column="21"/></name></expr>)<pos:position pos:line="81" pos:column="22"/></condition><then pos:line="81" pos:column="22">
	<block pos:line="82" pos:column="9">{
	  <expr_stmt><expr><name pos:line="83" pos:column="11">func<pos:position pos:line="83" pos:column="15"/></name> <operator pos:line="83" pos:column="16">=<pos:position pos:line="83" pos:column="17"/></operator> <call><name pos:line="83" pos:column="18">get_func<pos:position pos:line="83" pos:column="26"/></name> <argument_list pos:line="83" pos:column="27">(<argument><expr><name pos:line="83" pos:column="28">bindings<pos:position pos:line="83" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="38">tmp<pos:position pos:line="83" pos:column="41"/></name><operator pos:line="83" pos:column="41">.<pos:position pos:line="83" pos:column="42"/></operator><name pos:line="83" pos:column="42">op<pos:position pos:line="83" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="46"/></expr_stmt>
	  <if pos:line="84" pos:column="11">if <condition pos:line="84" pos:column="14">(<expr><name pos:line="84" pos:column="15">func<pos:position pos:line="84" pos:column="19"/></name></expr>)<pos:position pos:line="84" pos:column="20"/></condition><then pos:line="84" pos:column="20">
	  <block pos:line="85" pos:column="11">{
	    <expr_stmt><expr><call><name pos:line="86" pos:column="13">mutt_unget_event<pos:position pos:line="86" pos:column="29"/></name> <argument_list pos:line="86" pos:column="30">(<argument><expr><literal type="char" pos:line="86" pos:column="31">'&gt;'<pos:position pos:line="86" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="86" pos:column="36">0<pos:position pos:line="86" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="39"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="87" pos:column="13">mutt_unget_string<pos:position pos:line="87" pos:column="30"/></name> <argument_list pos:line="87" pos:column="31">(<argument><expr><name pos:line="87" pos:column="32">func<pos:position pos:line="87" pos:column="36"/></name></expr></argument>)<pos:position pos:line="87" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="38"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="88" pos:column="13">mutt_unget_event<pos:position pos:line="88" pos:column="29"/></name> <argument_list pos:line="88" pos:column="30">(<argument><expr><literal type="char" pos:line="88" pos:column="31">'&lt;'<pos:position pos:line="88" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="88" pos:column="36">0<pos:position pos:line="88" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="39"/></expr_stmt>
	    <break pos:line="89" pos:column="13">break;<pos:position pos:line="89" pos:column="19"/></break>
	  }<pos:position pos:line="90" pos:column="12"/></block></then></if>
	}<pos:position pos:line="91" pos:column="10"/></block></then></if>
      }<pos:position pos:line="92" pos:column="8"/></block></for>
      <comment type="block" pos:line="93" pos:column="7">/* continue to chew */</comment>
      <if pos:line="94" pos:column="7">if <condition pos:line="94" pos:column="10">(<expr><name pos:line="94" pos:column="11">func<pos:position pos:line="94" pos:column="15"/></name></expr>)<pos:position pos:line="94" pos:column="16"/></condition><then pos:line="94" pos:column="16">
	<block type="pseudo"><continue pos:line="95" pos:column="9">continue;<pos:position pos:line="95" pos:column="18"/></continue></block></then></if>
    }<pos:position pos:line="96" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="98" pos:column="5">/* Nope. Business as usual */</comment>
    <while pos:line="99" pos:column="5">while <condition pos:line="99" pos:column="11">(<expr><name pos:line="99" pos:column="12">LastKey<pos:position pos:line="99" pos:column="19"/></name> <operator pos:line="99" pos:column="20">&gt;<pos:position pos:line="99" pos:column="24"/></operator> <name><name pos:line="99" pos:column="22">map<pos:position pos:line="99" pos:column="25"/></name><operator pos:line="99" pos:column="25">-&gt;<pos:position pos:line="99" pos:column="30"/></operator><name pos:line="99" pos:column="27">keys<pos:position pos:line="99" pos:column="31"/></name><index pos:line="99" pos:column="31">[<expr><name pos:line="99" pos:column="32">pos<pos:position pos:line="99" pos:column="35"/></name></expr>]<pos:position pos:line="99" pos:column="36"/></index></name></expr>)<pos:position pos:line="99" pos:column="37"/></condition>
    <block pos:line="100" pos:column="5">{
      <if pos:line="101" pos:column="7">if <condition pos:line="101" pos:column="10">(<expr><name pos:line="101" pos:column="11">pos<pos:position pos:line="101" pos:column="14"/></name> <operator pos:line="101" pos:column="15">&gt;<pos:position pos:line="101" pos:column="19"/></operator> <name><name pos:line="101" pos:column="17">map<pos:position pos:line="101" pos:column="20"/></name><operator pos:line="101" pos:column="20">-&gt;<pos:position pos:line="101" pos:column="25"/></operator><name pos:line="101" pos:column="22">eq<pos:position pos:line="101" pos:column="24"/></name></name> <operator pos:line="101" pos:column="25">||<pos:position pos:line="101" pos:column="27"/></operator> <operator pos:line="101" pos:column="28">!<pos:position pos:line="101" pos:column="29"/></operator><name><name pos:line="101" pos:column="29">map<pos:position pos:line="101" pos:column="32"/></name><operator pos:line="101" pos:column="32">-&gt;<pos:position pos:line="101" pos:column="37"/></operator><name pos:line="101" pos:column="34">next<pos:position pos:line="101" pos:column="38"/></name></name></expr>)<pos:position pos:line="101" pos:column="39"/></condition><then pos:line="101" pos:column="39">
	<block type="pseudo"><return pos:line="102" pos:column="9">return <expr><operator pos:line="102" pos:column="16">(<pos:position pos:line="102" pos:column="17"/></operator><call><name pos:line="102" pos:column="17">retry_generic<pos:position pos:line="102" pos:column="30"/></name> <argument_list pos:line="102" pos:column="31">(<argument><expr><name pos:line="102" pos:column="32">menu<pos:position pos:line="102" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="38">map<pos:position pos:line="102" pos:column="41"/></name><operator pos:line="102" pos:column="41">-&gt;<pos:position pos:line="102" pos:column="46"/></operator><name pos:line="102" pos:column="43">keys<pos:position pos:line="102" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="49">pos<pos:position pos:line="102" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="54">LastKey<pos:position pos:line="102" pos:column="61"/></name></expr></argument>)<pos:position pos:line="102" pos:column="62"/></argument_list></call><operator pos:line="102" pos:column="62">)<pos:position pos:line="102" pos:column="63"/></operator></expr>;<pos:position pos:line="102" pos:column="64"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="103" pos:column="7">map<pos:position pos:line="103" pos:column="10"/></name> <operator pos:line="103" pos:column="11">=<pos:position pos:line="103" pos:column="12"/></operator> <name><name pos:line="103" pos:column="13">map<pos:position pos:line="103" pos:column="16"/></name><operator pos:line="103" pos:column="16">-&gt;<pos:position pos:line="103" pos:column="21"/></operator><name pos:line="103" pos:column="18">next<pos:position pos:line="103" pos:column="22"/></name></name></expr>;<pos:position pos:line="103" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="104" pos:column="6"/></block></while>

    <if pos:line="106" pos:column="5">if <condition pos:line="106" pos:column="8">(<expr><name pos:line="106" pos:column="9">LastKey<pos:position pos:line="106" pos:column="16"/></name> <operator pos:line="106" pos:column="17">!=<pos:position pos:line="106" pos:column="19"/></operator> <name><name pos:line="106" pos:column="20">map<pos:position pos:line="106" pos:column="23"/></name><operator pos:line="106" pos:column="23">-&gt;<pos:position pos:line="106" pos:column="28"/></operator><name pos:line="106" pos:column="25">keys<pos:position pos:line="106" pos:column="29"/></name><index pos:line="106" pos:column="29">[<expr><name pos:line="106" pos:column="30">pos<pos:position pos:line="106" pos:column="33"/></name></expr>]<pos:position pos:line="106" pos:column="34"/></index></name></expr>)<pos:position pos:line="106" pos:column="35"/></condition><then pos:line="106" pos:column="35">
      <block type="pseudo"><return pos:line="107" pos:column="7">return <expr><operator pos:line="107" pos:column="14">(<pos:position pos:line="107" pos:column="15"/></operator><call><name pos:line="107" pos:column="15">retry_generic<pos:position pos:line="107" pos:column="28"/></name> <argument_list pos:line="107" pos:column="29">(<argument><expr><name pos:line="107" pos:column="30">menu<pos:position pos:line="107" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="36">map<pos:position pos:line="107" pos:column="39"/></name><operator pos:line="107" pos:column="39">-&gt;<pos:position pos:line="107" pos:column="44"/></operator><name pos:line="107" pos:column="41">keys<pos:position pos:line="107" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="47">pos<pos:position pos:line="107" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="52">LastKey<pos:position pos:line="107" pos:column="59"/></name></expr></argument>)<pos:position pos:line="107" pos:column="60"/></argument_list></call><operator pos:line="107" pos:column="60">)<pos:position pos:line="107" pos:column="61"/></operator></expr>;<pos:position pos:line="107" pos:column="62"/></return></block></then></if>

    <if pos:line="109" pos:column="5">if <condition pos:line="109" pos:column="8">(<expr><operator pos:line="109" pos:column="9">++<pos:position pos:line="109" pos:column="11"/></operator><name pos:line="109" pos:column="11">pos<pos:position pos:line="109" pos:column="14"/></name> <operator pos:line="109" pos:column="15">==<pos:position pos:line="109" pos:column="17"/></operator> <name><name pos:line="109" pos:column="18">map<pos:position pos:line="109" pos:column="21"/></name><operator pos:line="109" pos:column="21">-&gt;<pos:position pos:line="109" pos:column="26"/></operator><name pos:line="109" pos:column="23">len<pos:position pos:line="109" pos:column="26"/></name></name></expr>)<pos:position pos:line="109" pos:column="27"/></condition><then pos:line="109" pos:column="27">
    <block pos:line="110" pos:column="5">{

      <if pos:line="112" pos:column="7">if <condition pos:line="112" pos:column="10">(<expr><name><name pos:line="112" pos:column="11">map<pos:position pos:line="112" pos:column="14"/></name><operator pos:line="112" pos:column="14">-&gt;<pos:position pos:line="112" pos:column="19"/></operator><name pos:line="112" pos:column="16">op<pos:position pos:line="112" pos:column="18"/></name></name> <operator pos:line="112" pos:column="19">!=<pos:position pos:line="112" pos:column="21"/></operator> <name pos:line="112" pos:column="22">OP_MACRO<pos:position pos:line="112" pos:column="30"/></name></expr>)<pos:position pos:line="112" pos:column="31"/></condition><then pos:line="112" pos:column="31">
	<block type="pseudo"><return pos:line="113" pos:column="9">return <expr><name><name pos:line="113" pos:column="16">map<pos:position pos:line="113" pos:column="19"/></name><operator pos:line="113" pos:column="19">-&gt;<pos:position pos:line="113" pos:column="24"/></operator><name pos:line="113" pos:column="21">op<pos:position pos:line="113" pos:column="23"/></name></name></expr>;<pos:position pos:line="113" pos:column="24"/></return></block></then></if>

      <if pos:line="115" pos:column="7">if <condition pos:line="115" pos:column="10">(<expr><call><name pos:line="115" pos:column="11">option<pos:position pos:line="115" pos:column="17"/></name> <argument_list pos:line="115" pos:column="18">(<argument><expr><name pos:line="115" pos:column="19">OPTIGNOREMACROEVENTS<pos:position pos:line="115" pos:column="39"/></name></expr></argument>)<pos:position pos:line="115" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="115" pos:column="41"/></condition><then pos:line="115" pos:column="41">
      <block pos:line="116" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="117" pos:column="9">mutt_error<pos:position pos:line="117" pos:column="19"/></name></type> <name pos:line="117" pos:column="20">_<pos:position pos:line="117" pos:column="21"/></name><argument_list pos:line="117" pos:column="21">(<argument><expr><literal type="string" pos:line="117" pos:column="22">"Macros are currently disabled."<pos:position pos:line="117" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="55"/></argument_list></decl>;<pos:position pos:line="117" pos:column="56"/></decl_stmt>
	<return pos:line="118" pos:column="9">return <expr><operator pos:line="118" pos:column="16">-<pos:position pos:line="118" pos:column="17"/></operator><literal type="number" pos:line="118" pos:column="17">1<pos:position pos:line="118" pos:column="18"/></literal></expr>;<pos:position pos:line="118" pos:column="19"/></return>
      }<pos:position pos:line="119" pos:column="8"/></block></then></if>

      <if pos:line="121" pos:column="7">if <condition pos:line="121" pos:column="10">(<expr><name pos:line="121" pos:column="11">n<pos:position pos:line="121" pos:column="12"/></name><operator pos:line="121" pos:column="12">++<pos:position pos:line="121" pos:column="14"/></operator> <operator pos:line="121" pos:column="15">==<pos:position pos:line="121" pos:column="17"/></operator> <literal type="number" pos:line="121" pos:column="18">10<pos:position pos:line="121" pos:column="20"/></literal></expr>)<pos:position pos:line="121" pos:column="21"/></condition><then pos:line="121" pos:column="21">
      <block pos:line="122" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="123" pos:column="9">mutt_flushinp<pos:position pos:line="123" pos:column="22"/></name> <argument_list pos:line="123" pos:column="23">()<pos:position pos:line="123" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="26"/></expr_stmt>
	<decl_stmt><decl><type><name pos:line="124" pos:column="9">mutt_error<pos:position pos:line="124" pos:column="19"/></name></type> <name pos:line="124" pos:column="20">_<pos:position pos:line="124" pos:column="21"/></name><argument_list pos:line="124" pos:column="21">(<argument><expr><literal type="string" pos:line="124" pos:column="22">"Macro loop detected."<pos:position pos:line="124" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="45"/></argument_list></decl>;<pos:position pos:line="124" pos:column="46"/></decl_stmt>
	<return pos:line="125" pos:column="9">return <expr><operator pos:line="125" pos:column="16">-<pos:position pos:line="125" pos:column="17"/></operator><literal type="number" pos:line="125" pos:column="17">1<pos:position pos:line="125" pos:column="18"/></literal></expr>;<pos:position pos:line="125" pos:column="19"/></return>
      }<pos:position pos:line="126" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="128" pos:column="7">tokenize_push_macro_string<pos:position pos:line="128" pos:column="33"/></name> <argument_list pos:line="128" pos:column="34">(<argument><expr><name><name pos:line="128" pos:column="35">map<pos:position pos:line="128" pos:column="38"/></name><operator pos:line="128" pos:column="38">-&gt;<pos:position pos:line="128" pos:column="43"/></operator><name pos:line="128" pos:column="40">macro<pos:position pos:line="128" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><name pos:line="129" pos:column="7">map<pos:position pos:line="129" pos:column="10"/></name> <operator pos:line="129" pos:column="11">=<pos:position pos:line="129" pos:column="12"/></operator> <name><name pos:line="129" pos:column="13">Keymaps<pos:position pos:line="129" pos:column="20"/></name><index pos:line="129" pos:column="20">[<expr><name pos:line="129" pos:column="21">menu<pos:position pos:line="129" pos:column="25"/></name></expr>]<pos:position pos:line="129" pos:column="26"/></index></name></expr>;<pos:position pos:line="129" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name pos:line="130" pos:column="7">pos<pos:position pos:line="130" pos:column="10"/></name> <operator pos:line="130" pos:column="11">=<pos:position pos:line="130" pos:column="12"/></operator> <literal type="number" pos:line="130" pos:column="13">0<pos:position pos:line="130" pos:column="14"/></literal></expr>;<pos:position pos:line="130" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="131" pos:column="6"/></block></then></if>
  }<pos:position pos:line="132" pos:column="4"/></block>

  <comment type="block" pos:line="134" pos:column="3">/* not reached */</comment>
}<pos:position pos:line="135" pos:column="2"/></block></function></unit>

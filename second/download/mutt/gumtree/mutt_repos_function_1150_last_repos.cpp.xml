<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1150_last_repos.cpp" pos:tabs="8"><function_decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">boolean<pos:position pos:line="1" pos:column="15"/></name></type>
<name pos:line="2" pos:column="1">group_in_compile_stack<pos:position pos:line="2" pos:column="23"/></name> <parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">compile_stack<pos:position pos:line="2" pos:column="38"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">regnum<pos:position pos:line="2" pos:column="46"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">compile_stack_type<pos:position pos:line="3" pos:column="23"/></name></type> <name pos:line="3" pos:column="24">compile_stack<pos:position pos:line="3" pos:column="37"/></name></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">regnum_t<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">regnum<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">this_element<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

  <for pos:line="8" pos:column="3">for <control pos:line="8" pos:column="7">(<init><expr><name pos:line="8" pos:column="8">this_element<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <name><name pos:line="8" pos:column="23">compile_stack<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">.<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="37">avail<pos:position pos:line="8" pos:column="42"/></name></name> <operator pos:line="8" pos:column="43">-<pos:position pos:line="8" pos:column="44"/></operator> <literal type="number" pos:line="8" pos:column="45">1<pos:position pos:line="8" pos:column="46"/></literal></expr>;<pos:position pos:line="8" pos:column="47"/></init>
       <condition><expr><name pos:line="9" pos:column="8">this_element<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">&gt;=<pos:position pos:line="9" pos:column="26"/></operator> <literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></condition>
       <incr><expr><name pos:line="10" pos:column="8">this_element<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">--<pos:position pos:line="10" pos:column="22"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="23"/></control>
    <block type="pseudo"><if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">compile_stack<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">.<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="23">stack<pos:position pos:line="11" pos:column="28"/></name><index pos:line="11" pos:column="28">[<expr><name pos:line="11" pos:column="29">this_element<pos:position pos:line="11" pos:column="41"/></name></expr>]<pos:position pos:line="11" pos:column="42"/></index></name><operator pos:line="11" pos:column="42">.<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="43">regnum<pos:position pos:line="11" pos:column="49"/></name> <operator pos:line="11" pos:column="50">==<pos:position pos:line="11" pos:column="52"/></operator> <name pos:line="11" pos:column="53">regnum<pos:position pos:line="11" pos:column="59"/></name></expr>)<pos:position pos:line="11" pos:column="60"/></condition><then pos:line="11" pos:column="60">
      <block type="pseudo"><return pos:line="12" pos:column="7">return <expr><literal type="boolean" pos:line="12" pos:column="14">true<pos:position pos:line="12" pos:column="18"/></literal></expr>;<pos:position pos:line="12" pos:column="19"/></return></block></then></if></block></for>

  <return pos:line="14" pos:column="3">return <expr><literal type="boolean" pos:line="14" pos:column="10">false<pos:position pos:line="14" pos:column="15"/></literal></expr>;<pos:position pos:line="14" pos:column="16"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function_decl></unit>

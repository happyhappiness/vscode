<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_521_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">ENVELOPE<pos:position pos:line="1" pos:column="9"/></name> <modifier pos:line="1" pos:column="10">*<pos:position pos:line="1" pos:column="11"/></modifier></type><name pos:line="1" pos:column="11">mutt_read_rfc822_header<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">FILE<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">f<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">HEADER<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">hdr<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">short<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">user_hdrs<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
				   <parameter><decl><type><name pos:line="2" pos:column="36">short<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">weed<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">ENVELOPE<pos:position pos:line="4" pos:column="11"/></name> <modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type><name pos:line="4" pos:column="13">e<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><call><name pos:line="4" pos:column="17">mutt_new_envelope<pos:position pos:line="4" pos:column="34"/></name><argument_list pos:line="4" pos:column="34">()<pos:position pos:line="4" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">LIST<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">last<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><name pos:line="5" pos:column="16">NULL<pos:position pos:line="5" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">line<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><call><name pos:line="6" pos:column="16">safe_malloc<pos:position pos:line="6" pos:column="27"/></name> <argument_list pos:line="6" pos:column="28">(<argument><expr><name pos:line="6" pos:column="29">LONG_STRING<pos:position pos:line="6" pos:column="40"/></name></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">p<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">LOFF_T<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">loc<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">linelen<pos:position pos:line="9" pos:column="17"/></name> <init pos:line="9" pos:column="18">= <expr><name pos:line="9" pos:column="20">LONG_STRING<pos:position pos:line="9" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name></type> <name><name pos:line="10" pos:column="8">buf<pos:position pos:line="10" pos:column="11"/></name><index pos:line="10" pos:column="11">[<expr><name pos:line="10" pos:column="12">LONG_STRING<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">+<pos:position pos:line="10" pos:column="24"/></operator><literal type="number" pos:line="10" pos:column="24">1<pos:position pos:line="10" pos:column="25"/></literal></expr>]<pos:position pos:line="10" pos:column="26"/></index></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">hdr<pos:position pos:line="12" pos:column="10"/></name></expr>)<pos:position pos:line="12" pos:column="11"/></condition><then pos:line="12" pos:column="11">
  <block pos:line="13" pos:column="3">{
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name><name pos:line="14" pos:column="9">hdr<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">content<pos:position pos:line="14" pos:column="21"/></name></name> <operator pos:line="14" pos:column="22">==<pos:position pos:line="14" pos:column="24"/></operator> <name pos:line="14" pos:column="25">NULL<pos:position pos:line="14" pos:column="29"/></name></expr>)<pos:position pos:line="14" pos:column="30"/></condition><then pos:line="14" pos:column="30">
    <block pos:line="15" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="16" pos:column="7">hdr<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">content<pos:position pos:line="16" pos:column="19"/></name></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <call><name pos:line="16" pos:column="22">mutt_new_body<pos:position pos:line="16" pos:column="35"/></name> <argument_list pos:line="16" pos:column="36">()<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>

      <comment type="block" pos:line="18" pos:column="7">/* set the defaults from RFC1521 */</comment>
      <expr_stmt><expr><name><name pos:line="19" pos:column="7">hdr<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">-&gt;<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="12">content<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-&gt;<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="21">type<pos:position pos:line="19" pos:column="25"/></name></name>        <operator pos:line="19" pos:column="33">=<pos:position pos:line="19" pos:column="34"/></operator> <name pos:line="19" pos:column="35">TYPETEXT<pos:position pos:line="19" pos:column="43"/></name></expr>;<pos:position pos:line="19" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="20" pos:column="7">hdr<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">content<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">-&gt;<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="21">subtype<pos:position pos:line="20" pos:column="28"/></name></name>     <operator pos:line="20" pos:column="33">=<pos:position pos:line="20" pos:column="34"/></operator> <call><name pos:line="20" pos:column="35">safe_strdup<pos:position pos:line="20" pos:column="46"/></name> <argument_list pos:line="20" pos:column="47">(<argument><expr><literal type="string" pos:line="20" pos:column="48">"plain"<pos:position pos:line="20" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="57"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="21" pos:column="7">hdr<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">content<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">-&gt;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="21">encoding<pos:position pos:line="21" pos:column="29"/></name></name>    <operator pos:line="21" pos:column="33">=<pos:position pos:line="21" pos:column="34"/></operator> <name pos:line="21" pos:column="35">ENC7BIT<pos:position pos:line="21" pos:column="42"/></name></expr>;<pos:position pos:line="21" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="22" pos:column="7">hdr<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">-&gt;<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="12">content<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">-&gt;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="21">length<pos:position pos:line="22" pos:column="27"/></name></name>      <operator pos:line="22" pos:column="33">=<pos:position pos:line="22" pos:column="34"/></operator> <operator pos:line="22" pos:column="35">-<pos:position pos:line="22" pos:column="36"/></operator><literal type="number" pos:line="22" pos:column="36">1<pos:position pos:line="22" pos:column="37"/></literal></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>

      <comment type="block" pos:line="24" pos:column="7">/* RFC 2183 says this is arbitrary */</comment>
      <expr_stmt><expr><name><name pos:line="25" pos:column="7">hdr<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">-&gt;<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="12">content<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">-&gt;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="21">disposition<pos:position pos:line="25" pos:column="32"/></name></name> <operator pos:line="25" pos:column="33">=<pos:position pos:line="25" pos:column="34"/></operator> <name pos:line="25" pos:column="35">DISPINLINE<pos:position pos:line="25" pos:column="45"/></name></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <while pos:line="29" pos:column="3">while <condition pos:line="29" pos:column="9">(<expr><operator pos:line="29" pos:column="10">(<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="11">loc<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator> <call><name pos:line="29" pos:column="17">ftello<pos:position pos:line="29" pos:column="23"/></name> <argument_list pos:line="29" pos:column="24">(<argument><expr><name pos:line="29" pos:column="25">f<pos:position pos:line="29" pos:column="26"/></name></expr></argument>)<pos:position pos:line="29" pos:column="27"/></argument_list></call><operator pos:line="29" pos:column="27">)<pos:position pos:line="29" pos:column="28"/></operator></expr><operator pos:line="29" pos:column="28">,<pos:position pos:line="29" pos:column="29"/></operator>
	  <expr><operator pos:line="30" pos:column="11">*<pos:position pos:line="30" pos:column="12"/></operator><operator pos:line="30" pos:column="12">(<pos:position pos:line="30" pos:column="13"/></operator><name pos:line="30" pos:column="13">line<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">=<pos:position pos:line="30" pos:column="19"/></operator> <call><name pos:line="30" pos:column="20">mutt_read_rfc822_line<pos:position pos:line="30" pos:column="41"/></name> <argument_list pos:line="30" pos:column="42">(<argument><expr><name pos:line="30" pos:column="43">f<pos:position pos:line="30" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="46">line<pos:position pos:line="30" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="52">&amp;<pos:position pos:line="30" pos:column="57"/></operator><name pos:line="30" pos:column="53">linelen<pos:position pos:line="30" pos:column="60"/></name></expr></argument>)<pos:position pos:line="30" pos:column="61"/></argument_list></call><operator pos:line="30" pos:column="61">)<pos:position pos:line="30" pos:column="62"/></operator> <operator pos:line="30" pos:column="63">!=<pos:position pos:line="30" pos:column="65"/></operator> <literal type="number" pos:line="30" pos:column="66">0<pos:position pos:line="30" pos:column="67"/></literal></expr>)<pos:position pos:line="30" pos:column="68"/></condition>
  <block pos:line="31" pos:column="3">{
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><operator pos:line="32" pos:column="9">(<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">p<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <call><name pos:line="32" pos:column="14">strpbrk<pos:position pos:line="32" pos:column="21"/></name> <argument_list pos:line="32" pos:column="22">(<argument><expr><name pos:line="32" pos:column="23">line<pos:position pos:line="32" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="29">": \t"<pos:position pos:line="32" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="36"/></argument_list></call><operator pos:line="32" pos:column="36">)<pos:position pos:line="32" pos:column="37"/></operator> <operator pos:line="32" pos:column="38">==<pos:position pos:line="32" pos:column="40"/></operator> <name pos:line="32" pos:column="41">NULL<pos:position pos:line="32" pos:column="45"/></name> <operator pos:line="32" pos:column="46">||<pos:position pos:line="32" pos:column="48"/></operator> <operator pos:line="32" pos:column="49">*<pos:position pos:line="32" pos:column="50"/></operator><name pos:line="32" pos:column="50">p<pos:position pos:line="32" pos:column="51"/></name> <operator pos:line="32" pos:column="52">!=<pos:position pos:line="32" pos:column="54"/></operator> <literal type="char" pos:line="32" pos:column="55">':'<pos:position pos:line="32" pos:column="58"/></literal></expr>)<pos:position pos:line="32" pos:column="59"/></condition><then pos:line="32" pos:column="59">
    <block pos:line="33" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="34" pos:column="7">char<pos:position pos:line="34" pos:column="11"/></name></type> <name><name pos:line="34" pos:column="12">return_path<pos:position pos:line="34" pos:column="23"/></name><index pos:line="34" pos:column="23">[<expr><name pos:line="34" pos:column="24">LONG_STRING<pos:position pos:line="34" pos:column="35"/></name></expr>]<pos:position pos:line="34" pos:column="36"/></index></name></decl>;<pos:position pos:line="34" pos:column="37"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="35" pos:column="7">time_t<pos:position pos:line="35" pos:column="13"/></name></type> <name pos:line="35" pos:column="14">t<pos:position pos:line="35" pos:column="15"/></name></decl>;<pos:position pos:line="35" pos:column="16"/></decl_stmt>

      <comment type="block" pos:line="37" pos:column="7">/* some bogus MTAs will quote the original "From " line */</comment>
      <if pos:line="38" pos:column="7">if <condition pos:line="38" pos:column="10">(<expr><call><name pos:line="38" pos:column="11">mutt_strncmp<pos:position pos:line="38" pos:column="23"/></name> <argument_list pos:line="38" pos:column="24">(<argument><expr><literal type="string" pos:line="38" pos:column="25">"&gt;From "<pos:position pos:line="38" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="35">line<pos:position pos:line="38" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="41">6<pos:position pos:line="38" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="43"/></argument_list></call> <operator pos:line="38" pos:column="44">==<pos:position pos:line="38" pos:column="46"/></operator> <literal type="number" pos:line="38" pos:column="47">0<pos:position pos:line="38" pos:column="48"/></literal></expr>)<pos:position pos:line="38" pos:column="49"/></condition><then pos:line="38" pos:column="49">
	<block type="pseudo"><continue pos:line="39" pos:column="9">continue;<pos:position pos:line="39" pos:column="18"/></continue></block></then> <comment type="block" pos:line="39" pos:column="19">/* just ignore */</comment>
      <elseif pos:line="40" pos:column="7">else <if pos:line="40" pos:column="12">if <condition pos:line="40" pos:column="15">(<expr><call><name pos:line="40" pos:column="16">is_from<pos:position pos:line="40" pos:column="23"/></name> <argument_list pos:line="40" pos:column="24">(<argument><expr><name pos:line="40" pos:column="25">line<pos:position pos:line="40" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="31">return_path<pos:position pos:line="40" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="44">sizeof <argument_list pos:line="40" pos:column="51">(<argument><expr><name pos:line="40" pos:column="52">return_path<pos:position pos:line="40" pos:column="63"/></name></expr></argument>)<pos:position pos:line="40" pos:column="64"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="40" pos:column="66">&amp;<pos:position pos:line="40" pos:column="71"/></operator><name pos:line="40" pos:column="67">t<pos:position pos:line="40" pos:column="68"/></name></expr></argument>)<pos:position pos:line="40" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="70"/></condition><then pos:line="40" pos:column="70">
      <block pos:line="41" pos:column="7">{
	<comment type="block" pos:line="42" pos:column="9">/* MH sometimes has the From_ line in the middle of the header! */</comment>
	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">hdr<pos:position pos:line="43" pos:column="16"/></name> <operator pos:line="43" pos:column="17">&amp;&amp;<pos:position pos:line="43" pos:column="27"/></operator> <operator pos:line="43" pos:column="20">!<pos:position pos:line="43" pos:column="21"/></operator><name><name pos:line="43" pos:column="21">hdr<pos:position pos:line="43" pos:column="24"/></name><operator pos:line="43" pos:column="24">-&gt;<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="26">received<pos:position pos:line="43" pos:column="34"/></name></name></expr>)<pos:position pos:line="43" pos:column="35"/></condition><then pos:line="43" pos:column="35">
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="44" pos:column="11">hdr<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">-&gt;<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="16">received<pos:position pos:line="44" pos:column="24"/></name></name> <operator pos:line="44" pos:column="25">=<pos:position pos:line="44" pos:column="26"/></operator> <name pos:line="44" pos:column="27">t<pos:position pos:line="44" pos:column="28"/></name> <operator pos:line="44" pos:column="29">-<pos:position pos:line="44" pos:column="30"/></operator> <call><name pos:line="44" pos:column="31">mutt_local_tz<pos:position pos:line="44" pos:column="44"/></name> <argument_list pos:line="44" pos:column="45">(<argument><expr><name pos:line="44" pos:column="46">t<pos:position pos:line="44" pos:column="47"/></name></expr></argument>)<pos:position pos:line="44" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="49"/></expr_stmt></block></then></if>
	<continue pos:line="45" pos:column="9">continue;<pos:position pos:line="45" pos:column="18"/></continue>
      }<pos:position pos:line="46" pos:column="8"/></block></then></if></elseif></if>

      <expr_stmt><expr><call><name pos:line="48" pos:column="7">fseeko<pos:position pos:line="48" pos:column="13"/></name> <argument_list pos:line="48" pos:column="14">(<argument><expr><name pos:line="48" pos:column="15">f<pos:position pos:line="48" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="18">loc<pos:position pos:line="48" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="23">0<pos:position pos:line="48" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="26"/></expr_stmt>
      <break pos:line="49" pos:column="7">break;<pos:position pos:line="49" pos:column="13"/></break> <comment type="block" pos:line="49" pos:column="14">/* end of header */</comment>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="52" pos:column="5">*<pos:position pos:line="52" pos:column="6"/></operator><name pos:line="52" pos:column="6">buf<pos:position pos:line="52" pos:column="9"/></name> <operator pos:line="52" pos:column="10">=<pos:position pos:line="52" pos:column="11"/></operator> <literal type="char" pos:line="52" pos:column="12">'\0'<pos:position pos:line="52" pos:column="16"/></literal></expr>;<pos:position pos:line="52" pos:column="17"/></expr_stmt>

    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><call><name pos:line="54" pos:column="9">mutt_match_spam_list<pos:position pos:line="54" pos:column="29"/></name><argument_list pos:line="54" pos:column="29">(<argument><expr><name pos:line="54" pos:column="30">line<pos:position pos:line="54" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="36">SpamList<pos:position pos:line="54" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="46">buf<pos:position pos:line="54" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="54" pos:column="51">sizeof<argument_list pos:line="54" pos:column="57">(<argument><expr><name pos:line="54" pos:column="58">buf<pos:position pos:line="54" pos:column="61"/></name></expr></argument>)<pos:position pos:line="54" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="54" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="64"/></condition><then pos:line="54" pos:column="64">
    <block pos:line="55" pos:column="5">{
      <if pos:line="56" pos:column="7">if <condition pos:line="56" pos:column="10">(<expr><operator pos:line="56" pos:column="11">!<pos:position pos:line="56" pos:column="12"/></operator><call><name pos:line="56" pos:column="12">mutt_match_rx_list<pos:position pos:line="56" pos:column="30"/></name><argument_list pos:line="56" pos:column="30">(<argument><expr><name pos:line="56" pos:column="31">line<pos:position pos:line="56" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="37">NoSpamList<pos:position pos:line="56" pos:column="47"/></name></expr></argument>)<pos:position pos:line="56" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="49"/></condition><then pos:line="56" pos:column="49">
      <block pos:line="57" pos:column="7">{

	<comment type="block" pos:line="59" pos:column="9">/* if spam tag already exists, figure out how to amend it */</comment>
	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name><name pos:line="60" pos:column="13">e<pos:position pos:line="60" pos:column="14"/></name><operator pos:line="60" pos:column="14">-&gt;<pos:position pos:line="60" pos:column="19"/></operator><name pos:line="60" pos:column="16">spam<pos:position pos:line="60" pos:column="20"/></name></name> <operator pos:line="60" pos:column="21">&amp;&amp;<pos:position pos:line="60" pos:column="31"/></operator> <operator pos:line="60" pos:column="24">*<pos:position pos:line="60" pos:column="25"/></operator><name pos:line="60" pos:column="25">buf<pos:position pos:line="60" pos:column="28"/></name></expr>)<pos:position pos:line="60" pos:column="29"/></condition><then pos:line="60" pos:column="29">
	<block pos:line="61" pos:column="9">{
	  <comment type="block" pos:line="62" pos:column="11">/* If SpamSep defined, append with separator */</comment>
	  <if pos:line="63" pos:column="11">if <condition pos:line="63" pos:column="14">(<expr><name pos:line="63" pos:column="15">SpamSep<pos:position pos:line="63" pos:column="22"/></name></expr>)<pos:position pos:line="63" pos:column="23"/></condition><then pos:line="63" pos:column="23">
	  <block pos:line="64" pos:column="11">{
	    <expr_stmt><expr><call><name pos:line="65" pos:column="13">mutt_buffer_addstr<pos:position pos:line="65" pos:column="31"/></name><argument_list pos:line="65" pos:column="31">(<argument><expr><name><name pos:line="65" pos:column="32">e<pos:position pos:line="65" pos:column="33"/></name><operator pos:line="65" pos:column="33">-&gt;<pos:position pos:line="65" pos:column="38"/></operator><name pos:line="65" pos:column="35">spam<pos:position pos:line="65" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="41">SpamSep<pos:position pos:line="65" pos:column="48"/></name></expr></argument>)<pos:position pos:line="65" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="50"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="66" pos:column="13">mutt_buffer_addstr<pos:position pos:line="66" pos:column="31"/></name><argument_list pos:line="66" pos:column="31">(<argument><expr><name><name pos:line="66" pos:column="32">e<pos:position pos:line="66" pos:column="33"/></name><operator pos:line="66" pos:column="33">-&gt;<pos:position pos:line="66" pos:column="38"/></operator><name pos:line="66" pos:column="35">spam<pos:position pos:line="66" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="41">buf<pos:position pos:line="66" pos:column="44"/></name></expr></argument>)<pos:position pos:line="66" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="46"/></expr_stmt>
	  }<pos:position pos:line="67" pos:column="12"/></block></then>

	  <comment type="block" pos:line="69" pos:column="11">/* else overwrite */</comment>
	  <else pos:line="70" pos:column="11">else
	  <block pos:line="71" pos:column="11">{
	    <expr_stmt><expr><name><name pos:line="72" pos:column="13">e<pos:position pos:line="72" pos:column="14"/></name><operator pos:line="72" pos:column="14">-&gt;<pos:position pos:line="72" pos:column="19"/></operator><name pos:line="72" pos:column="16">spam<pos:position pos:line="72" pos:column="20"/></name><operator pos:line="72" pos:column="20">-&gt;<pos:position pos:line="72" pos:column="25"/></operator><name pos:line="72" pos:column="22">dptr<pos:position pos:line="72" pos:column="26"/></name></name> <operator pos:line="72" pos:column="27">=<pos:position pos:line="72" pos:column="28"/></operator> <name><name pos:line="72" pos:column="29">e<pos:position pos:line="72" pos:column="30"/></name><operator pos:line="72" pos:column="30">-&gt;<pos:position pos:line="72" pos:column="35"/></operator><name pos:line="72" pos:column="32">spam<pos:position pos:line="72" pos:column="36"/></name><operator pos:line="72" pos:column="36">-&gt;<pos:position pos:line="72" pos:column="41"/></operator><name pos:line="72" pos:column="38">data<pos:position pos:line="72" pos:column="42"/></name></name></expr>;<pos:position pos:line="72" pos:column="43"/></expr_stmt>
	    <expr_stmt><expr><operator pos:line="73" pos:column="13">*<pos:position pos:line="73" pos:column="14"/></operator><name><name pos:line="73" pos:column="14">e<pos:position pos:line="73" pos:column="15"/></name><operator pos:line="73" pos:column="15">-&gt;<pos:position pos:line="73" pos:column="20"/></operator><name pos:line="73" pos:column="17">spam<pos:position pos:line="73" pos:column="21"/></name><operator pos:line="73" pos:column="21">-&gt;<pos:position pos:line="73" pos:column="26"/></operator><name pos:line="73" pos:column="23">dptr<pos:position pos:line="73" pos:column="27"/></name></name> <operator pos:line="73" pos:column="28">=<pos:position pos:line="73" pos:column="29"/></operator> <literal type="char" pos:line="73" pos:column="30">'\0'<pos:position pos:line="73" pos:column="34"/></literal></expr>;<pos:position pos:line="73" pos:column="35"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="74" pos:column="13">mutt_buffer_addstr<pos:position pos:line="74" pos:column="31"/></name><argument_list pos:line="74" pos:column="31">(<argument><expr><name><name pos:line="74" pos:column="32">e<pos:position pos:line="74" pos:column="33"/></name><operator pos:line="74" pos:column="33">-&gt;<pos:position pos:line="74" pos:column="38"/></operator><name pos:line="74" pos:column="35">spam<pos:position pos:line="74" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="41">buf<pos:position pos:line="74" pos:column="44"/></name></expr></argument>)<pos:position pos:line="74" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="46"/></expr_stmt>
	  }<pos:position pos:line="75" pos:column="12"/></block></else></if>
	}<pos:position pos:line="76" pos:column="10"/></block></then>

	<comment type="block" pos:line="78" pos:column="9">/* spam tag is new, and match expr is non-empty; copy */</comment>
	<elseif pos:line="79" pos:column="9">else <if pos:line="79" pos:column="14">if <condition pos:line="79" pos:column="17">(<expr><operator pos:line="79" pos:column="18">!<pos:position pos:line="79" pos:column="19"/></operator><name><name pos:line="79" pos:column="19">e<pos:position pos:line="79" pos:column="20"/></name><operator pos:line="79" pos:column="20">-&gt;<pos:position pos:line="79" pos:column="25"/></operator><name pos:line="79" pos:column="22">spam<pos:position pos:line="79" pos:column="26"/></name></name> <operator pos:line="79" pos:column="27">&amp;&amp;<pos:position pos:line="79" pos:column="37"/></operator> <operator pos:line="79" pos:column="30">*<pos:position pos:line="79" pos:column="31"/></operator><name pos:line="79" pos:column="31">buf<pos:position pos:line="79" pos:column="34"/></name></expr>)<pos:position pos:line="79" pos:column="35"/></condition><then pos:line="79" pos:column="35">
	<block pos:line="80" pos:column="9">{
	  <expr_stmt><expr><name><name pos:line="81" pos:column="11">e<pos:position pos:line="81" pos:column="12"/></name><operator pos:line="81" pos:column="12">-&gt;<pos:position pos:line="81" pos:column="17"/></operator><name pos:line="81" pos:column="14">spam<pos:position pos:line="81" pos:column="18"/></name></name> <operator pos:line="81" pos:column="19">=<pos:position pos:line="81" pos:column="20"/></operator> <call><name pos:line="81" pos:column="21">mutt_buffer_from<pos:position pos:line="81" pos:column="37"/></name> <argument_list pos:line="81" pos:column="38">(<argument><expr><name pos:line="81" pos:column="39">buf<pos:position pos:line="81" pos:column="42"/></name></expr></argument>)<pos:position pos:line="81" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="82" pos:column="10"/></block></then></if></elseif>

	<comment type="block" pos:line="84" pos:column="9">/* match expr is empty; plug in null string if no existing tag */</comment>
	<elseif pos:line="85" pos:column="9">else <if pos:line="85" pos:column="14">if <condition pos:line="85" pos:column="17">(<expr><operator pos:line="85" pos:column="18">!<pos:position pos:line="85" pos:column="19"/></operator><name><name pos:line="85" pos:column="19">e<pos:position pos:line="85" pos:column="20"/></name><operator pos:line="85" pos:column="20">-&gt;<pos:position pos:line="85" pos:column="25"/></operator><name pos:line="85" pos:column="22">spam<pos:position pos:line="85" pos:column="26"/></name></name></expr>)<pos:position pos:line="85" pos:column="27"/></condition><then pos:line="85" pos:column="27">
	<block pos:line="86" pos:column="9">{
	  <expr_stmt><expr><name><name pos:line="87" pos:column="11">e<pos:position pos:line="87" pos:column="12"/></name><operator pos:line="87" pos:column="12">-&gt;<pos:position pos:line="87" pos:column="17"/></operator><name pos:line="87" pos:column="14">spam<pos:position pos:line="87" pos:column="18"/></name></name> <operator pos:line="87" pos:column="19">=<pos:position pos:line="87" pos:column="20"/></operator> <call><name pos:line="87" pos:column="21">mutt_buffer_from<pos:position pos:line="87" pos:column="37"/></name><argument_list pos:line="87" pos:column="37">(<argument><expr><literal type="string" pos:line="87" pos:column="38">""<pos:position pos:line="87" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="88" pos:column="10"/></block></then></if></elseif></if>

	<if pos:line="90" pos:column="9">if <condition pos:line="90" pos:column="12">(<expr><name><name pos:line="90" pos:column="13">e<pos:position pos:line="90" pos:column="14"/></name><operator pos:line="90" pos:column="14">-&gt;<pos:position pos:line="90" pos:column="19"/></operator><name pos:line="90" pos:column="16">spam<pos:position pos:line="90" pos:column="20"/></name></name> <operator pos:line="90" pos:column="21">&amp;&amp;<pos:position pos:line="90" pos:column="31"/></operator> <name><name pos:line="90" pos:column="24">e<pos:position pos:line="90" pos:column="25"/></name><operator pos:line="90" pos:column="25">-&gt;<pos:position pos:line="90" pos:column="30"/></operator><name pos:line="90" pos:column="27">spam<pos:position pos:line="90" pos:column="31"/></name><operator pos:line="90" pos:column="31">-&gt;<pos:position pos:line="90" pos:column="36"/></operator><name pos:line="90" pos:column="33">data<pos:position pos:line="90" pos:column="37"/></name></name></expr>)<pos:position pos:line="90" pos:column="38"/></condition><then pos:line="90" pos:column="38">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="91" pos:column="11">dprint<pos:position pos:line="91" pos:column="17"/></name><argument_list pos:line="91" pos:column="17">(<argument><expr><literal type="number" pos:line="91" pos:column="18">5<pos:position pos:line="91" pos:column="19"/></literal></expr></argument>, <argument><expr><operator pos:line="91" pos:column="21">(<pos:position pos:line="91" pos:column="22"/></operator><name pos:line="91" pos:column="22">debugfile<pos:position pos:line="91" pos:column="31"/></name><operator pos:line="91" pos:column="31">,<pos:position pos:line="91" pos:column="32"/></operator> <literal type="string" pos:line="91" pos:column="33">"p822: spam = %s\n"<pos:position pos:line="91" pos:column="52"/></literal><operator pos:line="91" pos:column="52">,<pos:position pos:line="91" pos:column="53"/></operator> <name><name pos:line="91" pos:column="54">e<pos:position pos:line="91" pos:column="55"/></name><operator pos:line="91" pos:column="55">-&gt;<pos:position pos:line="91" pos:column="60"/></operator><name pos:line="91" pos:column="57">spam<pos:position pos:line="91" pos:column="61"/></name><operator pos:line="91" pos:column="61">-&gt;<pos:position pos:line="91" pos:column="66"/></operator><name pos:line="91" pos:column="63">data<pos:position pos:line="91" pos:column="67"/></name></name><operator pos:line="91" pos:column="67">)<pos:position pos:line="91" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="91" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="70"/></expr_stmt></block></then></if>
      }<pos:position pos:line="92" pos:column="8"/></block></then></if>
    }<pos:position pos:line="93" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="95" pos:column="5">*<pos:position pos:line="95" pos:column="6"/></operator><name pos:line="95" pos:column="6">p<pos:position pos:line="95" pos:column="7"/></name> <operator pos:line="95" pos:column="8">=<pos:position pos:line="95" pos:column="9"/></operator> <literal type="number" pos:line="95" pos:column="10">0<pos:position pos:line="95" pos:column="11"/></literal></expr>;<pos:position pos:line="95" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><name pos:line="96" pos:column="5">p<pos:position pos:line="96" pos:column="6"/></name> <operator pos:line="96" pos:column="7">=<pos:position pos:line="96" pos:column="8"/></operator> <call><name pos:line="96" pos:column="9">skip_email_wsp<pos:position pos:line="96" pos:column="23"/></name><argument_list pos:line="96" pos:column="23">(<argument><expr><name pos:line="96" pos:column="24">p<pos:position pos:line="96" pos:column="25"/></name> <operator pos:line="96" pos:column="26">+<pos:position pos:line="96" pos:column="27"/></operator> <literal type="number" pos:line="96" pos:column="28">1<pos:position pos:line="96" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="31"/></expr_stmt>
    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><operator pos:line="97" pos:column="9">!<pos:position pos:line="97" pos:column="10"/></operator><operator pos:line="97" pos:column="10">*<pos:position pos:line="97" pos:column="11"/></operator><name pos:line="97" pos:column="11">p<pos:position pos:line="97" pos:column="12"/></name></expr>)<pos:position pos:line="97" pos:column="13"/></condition><then pos:line="97" pos:column="13">
      <block type="pseudo"><continue pos:line="98" pos:column="7">continue;<pos:position pos:line="98" pos:column="16"/></continue></block></then></if> <comment type="block" pos:line="98" pos:column="17">/* skip empty header fields */</comment>

    <expr_stmt><expr><call><name pos:line="100" pos:column="5">mutt_parse_rfc822_line<pos:position pos:line="100" pos:column="27"/></name> <argument_list pos:line="100" pos:column="28">(<argument><expr><name pos:line="100" pos:column="29">e<pos:position pos:line="100" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="32">hdr<pos:position pos:line="100" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="37">line<pos:position pos:line="100" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="43">p<pos:position pos:line="100" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="46">user_hdrs<pos:position pos:line="100" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="57">weed<pos:position pos:line="100" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="100" pos:column="63">1<pos:position pos:line="100" pos:column="64"/></literal></expr></argument>, <argument><expr><operator pos:line="100" pos:column="66">&amp;<pos:position pos:line="100" pos:column="71"/></operator><name pos:line="100" pos:column="67">last<pos:position pos:line="100" pos:column="71"/></name></expr></argument>)<pos:position pos:line="100" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="73"/></expr_stmt>
  }<pos:position pos:line="101" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="103" pos:column="3">FREE<pos:position pos:line="103" pos:column="7"/></name> <argument_list pos:line="103" pos:column="8">(<argument><expr><operator pos:line="103" pos:column="9">&amp;<pos:position pos:line="103" pos:column="14"/></operator><name pos:line="103" pos:column="10">line<pos:position pos:line="103" pos:column="14"/></name></expr></argument>)<pos:position pos:line="103" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="16"/></expr_stmt>

  <if pos:line="105" pos:column="3">if <condition pos:line="105" pos:column="6">(<expr><name pos:line="105" pos:column="7">hdr<pos:position pos:line="105" pos:column="10"/></name></expr>)<pos:position pos:line="105" pos:column="11"/></condition><then pos:line="105" pos:column="11">
  <block pos:line="106" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="107" pos:column="5">hdr<pos:position pos:line="107" pos:column="8"/></name><operator pos:line="107" pos:column="8">-&gt;<pos:position pos:line="107" pos:column="13"/></operator><name pos:line="107" pos:column="10">content<pos:position pos:line="107" pos:column="17"/></name><operator pos:line="107" pos:column="17">-&gt;<pos:position pos:line="107" pos:column="22"/></operator><name pos:line="107" pos:column="19">hdr_offset<pos:position pos:line="107" pos:column="29"/></name></name> <operator pos:line="107" pos:column="30">=<pos:position pos:line="107" pos:column="31"/></operator> <name><name pos:line="107" pos:column="32">hdr<pos:position pos:line="107" pos:column="35"/></name><operator pos:line="107" pos:column="35">-&gt;<pos:position pos:line="107" pos:column="40"/></operator><name pos:line="107" pos:column="37">offset<pos:position pos:line="107" pos:column="43"/></name></name></expr>;<pos:position pos:line="107" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="108" pos:column="5">hdr<pos:position pos:line="108" pos:column="8"/></name><operator pos:line="108" pos:column="8">-&gt;<pos:position pos:line="108" pos:column="13"/></operator><name pos:line="108" pos:column="10">content<pos:position pos:line="108" pos:column="17"/></name><operator pos:line="108" pos:column="17">-&gt;<pos:position pos:line="108" pos:column="22"/></operator><name pos:line="108" pos:column="19">offset<pos:position pos:line="108" pos:column="25"/></name></name> <operator pos:line="108" pos:column="26">=<pos:position pos:line="108" pos:column="27"/></operator> <call><name pos:line="108" pos:column="28">ftello<pos:position pos:line="108" pos:column="34"/></name> <argument_list pos:line="108" pos:column="35">(<argument><expr><name pos:line="108" pos:column="36">f<pos:position pos:line="108" pos:column="37"/></name></expr></argument>)<pos:position pos:line="108" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="39"/></expr_stmt>

    <comment type="block" pos:line="110" pos:column="5">/* do RFC2047 decoding */</comment>
    <expr_stmt><expr><call><name pos:line="111" pos:column="5">rfc2047_decode_adrlist<pos:position pos:line="111" pos:column="27"/></name> <argument_list pos:line="111" pos:column="28">(<argument><expr><name><name pos:line="111" pos:column="29">e<pos:position pos:line="111" pos:column="30"/></name><operator pos:line="111" pos:column="30">-&gt;<pos:position pos:line="111" pos:column="35"/></operator><name pos:line="111" pos:column="32">from<pos:position pos:line="111" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="112" pos:column="5">rfc2047_decode_adrlist<pos:position pos:line="112" pos:column="27"/></name> <argument_list pos:line="112" pos:column="28">(<argument><expr><name><name pos:line="112" pos:column="29">e<pos:position pos:line="112" pos:column="30"/></name><operator pos:line="112" pos:column="30">-&gt;<pos:position pos:line="112" pos:column="35"/></operator><name pos:line="112" pos:column="32">to<pos:position pos:line="112" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="113" pos:column="5">rfc2047_decode_adrlist<pos:position pos:line="113" pos:column="27"/></name> <argument_list pos:line="113" pos:column="28">(<argument><expr><name><name pos:line="113" pos:column="29">e<pos:position pos:line="113" pos:column="30"/></name><operator pos:line="113" pos:column="30">-&gt;<pos:position pos:line="113" pos:column="35"/></operator><name pos:line="113" pos:column="32">cc<pos:position pos:line="113" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="113" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="114" pos:column="5">rfc2047_decode_adrlist<pos:position pos:line="114" pos:column="27"/></name> <argument_list pos:line="114" pos:column="28">(<argument><expr><name><name pos:line="114" pos:column="29">e<pos:position pos:line="114" pos:column="30"/></name><operator pos:line="114" pos:column="30">-&gt;<pos:position pos:line="114" pos:column="35"/></operator><name pos:line="114" pos:column="32">bcc<pos:position pos:line="114" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="114" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="115" pos:column="5">rfc2047_decode_adrlist<pos:position pos:line="115" pos:column="27"/></name> <argument_list pos:line="115" pos:column="28">(<argument><expr><name><name pos:line="115" pos:column="29">e<pos:position pos:line="115" pos:column="30"/></name><operator pos:line="115" pos:column="30">-&gt;<pos:position pos:line="115" pos:column="35"/></operator><name pos:line="115" pos:column="32">reply_to<pos:position pos:line="115" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="116" pos:column="5">rfc2047_decode_adrlist<pos:position pos:line="116" pos:column="27"/></name> <argument_list pos:line="116" pos:column="28">(<argument><expr><name><name pos:line="116" pos:column="29">e<pos:position pos:line="116" pos:column="30"/></name><operator pos:line="116" pos:column="30">-&gt;<pos:position pos:line="116" pos:column="35"/></operator><name pos:line="116" pos:column="32">mail_followup_to<pos:position pos:line="116" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="116" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="117" pos:column="5">rfc2047_decode_adrlist<pos:position pos:line="117" pos:column="27"/></name> <argument_list pos:line="117" pos:column="28">(<argument><expr><name><name pos:line="117" pos:column="29">e<pos:position pos:line="117" pos:column="30"/></name><operator pos:line="117" pos:column="30">-&gt;<pos:position pos:line="117" pos:column="35"/></operator><name pos:line="117" pos:column="32">return_path<pos:position pos:line="117" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="118" pos:column="5">rfc2047_decode_adrlist<pos:position pos:line="118" pos:column="27"/></name> <argument_list pos:line="118" pos:column="28">(<argument><expr><name><name pos:line="118" pos:column="29">e<pos:position pos:line="118" pos:column="30"/></name><operator pos:line="118" pos:column="30">-&gt;<pos:position pos:line="118" pos:column="35"/></operator><name pos:line="118" pos:column="32">sender<pos:position pos:line="118" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="118" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="119" pos:column="5">rfc2047_decode<pos:position pos:line="119" pos:column="19"/></name> <argument_list pos:line="119" pos:column="20">(<argument><expr><operator pos:line="119" pos:column="21">&amp;<pos:position pos:line="119" pos:column="26"/></operator><name><name pos:line="119" pos:column="22">e<pos:position pos:line="119" pos:column="23"/></name><operator pos:line="119" pos:column="23">-&gt;<pos:position pos:line="119" pos:column="28"/></operator><name pos:line="119" pos:column="25">x_label<pos:position pos:line="119" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="119" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="34"/></expr_stmt>

    <if pos:line="121" pos:column="5">if <condition pos:line="121" pos:column="8">(<expr><name><name pos:line="121" pos:column="9">e<pos:position pos:line="121" pos:column="10"/></name><operator pos:line="121" pos:column="10">-&gt;<pos:position pos:line="121" pos:column="15"/></operator><name pos:line="121" pos:column="12">subject<pos:position pos:line="121" pos:column="19"/></name></name></expr>)<pos:position pos:line="121" pos:column="20"/></condition><then pos:line="121" pos:column="20">
    <block pos:line="122" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="123" pos:column="7">regmatch_t<pos:position pos:line="123" pos:column="17"/></name></type> <name><name pos:line="123" pos:column="18">pmatch<pos:position pos:line="123" pos:column="24"/></name><index pos:line="123" pos:column="24">[<expr><literal type="number" pos:line="123" pos:column="25">1<pos:position pos:line="123" pos:column="26"/></literal></expr>]<pos:position pos:line="123" pos:column="27"/></index></name></decl>;<pos:position pos:line="123" pos:column="28"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="125" pos:column="7">rfc2047_decode<pos:position pos:line="125" pos:column="21"/></name> <argument_list pos:line="125" pos:column="22">(<argument><expr><operator pos:line="125" pos:column="23">&amp;<pos:position pos:line="125" pos:column="28"/></operator><name><name pos:line="125" pos:column="24">e<pos:position pos:line="125" pos:column="25"/></name><operator pos:line="125" pos:column="25">-&gt;<pos:position pos:line="125" pos:column="30"/></operator><name pos:line="125" pos:column="27">subject<pos:position pos:line="125" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="36"/></expr_stmt>

      <if pos:line="127" pos:column="7">if <condition pos:line="127" pos:column="10">(<expr><call><name pos:line="127" pos:column="11">regexec<pos:position pos:line="127" pos:column="18"/></name> <argument_list pos:line="127" pos:column="19">(<argument><expr><name><name pos:line="127" pos:column="20">ReplyRegexp<pos:position pos:line="127" pos:column="31"/></name><operator pos:line="127" pos:column="31">.<pos:position pos:line="127" pos:column="32"/></operator><name pos:line="127" pos:column="32">rx<pos:position pos:line="127" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="127" pos:column="36">e<pos:position pos:line="127" pos:column="37"/></name><operator pos:line="127" pos:column="37">-&gt;<pos:position pos:line="127" pos:column="42"/></operator><name pos:line="127" pos:column="39">subject<pos:position pos:line="127" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="127" pos:column="48">1<pos:position pos:line="127" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="127" pos:column="51">pmatch<pos:position pos:line="127" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="127" pos:column="59">0<pos:position pos:line="127" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="61"/></argument_list></call> <operator pos:line="127" pos:column="62">==<pos:position pos:line="127" pos:column="64"/></operator> <literal type="number" pos:line="127" pos:column="65">0<pos:position pos:line="127" pos:column="66"/></literal></expr>)<pos:position pos:line="127" pos:column="67"/></condition><then pos:line="127" pos:column="67">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="128" pos:column="9">e<pos:position pos:line="128" pos:column="10"/></name><operator pos:line="128" pos:column="10">-&gt;<pos:position pos:line="128" pos:column="15"/></operator><name pos:line="128" pos:column="12">real_subj<pos:position pos:line="128" pos:column="21"/></name></name> <operator pos:line="128" pos:column="22">=<pos:position pos:line="128" pos:column="23"/></operator> <name><name pos:line="128" pos:column="24">e<pos:position pos:line="128" pos:column="25"/></name><operator pos:line="128" pos:column="25">-&gt;<pos:position pos:line="128" pos:column="30"/></operator><name pos:line="128" pos:column="27">subject<pos:position pos:line="128" pos:column="34"/></name></name> <operator pos:line="128" pos:column="35">+<pos:position pos:line="128" pos:column="36"/></operator> <name><name pos:line="128" pos:column="37">pmatch<pos:position pos:line="128" pos:column="43"/></name><index pos:line="128" pos:column="43">[<expr><literal type="number" pos:line="128" pos:column="44">0<pos:position pos:line="128" pos:column="45"/></literal></expr>]<pos:position pos:line="128" pos:column="46"/></index></name><operator pos:line="128" pos:column="46">.<pos:position pos:line="128" pos:column="47"/></operator><name pos:line="128" pos:column="47">rm_eo<pos:position pos:line="128" pos:column="52"/></name></expr>;<pos:position pos:line="128" pos:column="53"/></expr_stmt></block></then>
      <else pos:line="129" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="130" pos:column="9">e<pos:position pos:line="130" pos:column="10"/></name><operator pos:line="130" pos:column="10">-&gt;<pos:position pos:line="130" pos:column="15"/></operator><name pos:line="130" pos:column="12">real_subj<pos:position pos:line="130" pos:column="21"/></name></name> <operator pos:line="130" pos:column="22">=<pos:position pos:line="130" pos:column="23"/></operator> <name><name pos:line="130" pos:column="24">e<pos:position pos:line="130" pos:column="25"/></name><operator pos:line="130" pos:column="25">-&gt;<pos:position pos:line="130" pos:column="30"/></operator><name pos:line="130" pos:column="27">subject<pos:position pos:line="130" pos:column="34"/></name></name></expr>;<pos:position pos:line="130" pos:column="35"/></expr_stmt></block></else></if>
    }<pos:position pos:line="131" pos:column="6"/></block></then></if>

    <if pos:line="133" pos:column="5">if <condition pos:line="133" pos:column="8">(<expr><name><name pos:line="133" pos:column="9">hdr<pos:position pos:line="133" pos:column="12"/></name><operator pos:line="133" pos:column="12">-&gt;<pos:position pos:line="133" pos:column="17"/></operator><name pos:line="133" pos:column="14">received<pos:position pos:line="133" pos:column="22"/></name></name> <operator pos:line="133" pos:column="23">&lt;<pos:position pos:line="133" pos:column="27"/></operator> <literal type="number" pos:line="133" pos:column="25">0<pos:position pos:line="133" pos:column="26"/></literal></expr>)<pos:position pos:line="133" pos:column="27"/></condition><then pos:line="133" pos:column="27">
    <block pos:line="134" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="135" pos:column="7">dprint<pos:position pos:line="135" pos:column="13"/></name><argument_list pos:line="135" pos:column="13">(<argument><expr><literal type="number" pos:line="135" pos:column="14">1<pos:position pos:line="135" pos:column="15"/></literal></expr></argument>,<argument><expr><operator pos:line="135" pos:column="16">(<pos:position pos:line="135" pos:column="17"/></operator><name pos:line="135" pos:column="17">debugfile<pos:position pos:line="135" pos:column="26"/></name><operator pos:line="135" pos:column="26">,<pos:position pos:line="135" pos:column="27"/></operator><literal type="string" pos:line="135" pos:column="27">"read_rfc822_header(): resetting invalid received time to 0\n"<pos:position pos:line="135" pos:column="89"/></literal><operator pos:line="135" pos:column="89">)<pos:position pos:line="135" pos:column="90"/></operator></expr></argument>)<pos:position pos:line="135" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="92"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="136" pos:column="7">hdr<pos:position pos:line="136" pos:column="10"/></name><operator pos:line="136" pos:column="10">-&gt;<pos:position pos:line="136" pos:column="15"/></operator><name pos:line="136" pos:column="12">received<pos:position pos:line="136" pos:column="20"/></name></name> <operator pos:line="136" pos:column="21">=<pos:position pos:line="136" pos:column="22"/></operator> <literal type="number" pos:line="136" pos:column="23">0<pos:position pos:line="136" pos:column="24"/></literal></expr>;<pos:position pos:line="136" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="137" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="139" pos:column="5">/* check for missing or invalid date */</comment>
    <if pos:line="140" pos:column="5">if <condition pos:line="140" pos:column="8">(<expr><name><name pos:line="140" pos:column="9">hdr<pos:position pos:line="140" pos:column="12"/></name><operator pos:line="140" pos:column="12">-&gt;<pos:position pos:line="140" pos:column="17"/></operator><name pos:line="140" pos:column="14">date_sent<pos:position pos:line="140" pos:column="23"/></name></name> <operator pos:line="140" pos:column="24">&lt;=<pos:position pos:line="140" pos:column="29"/></operator> <literal type="number" pos:line="140" pos:column="27">0<pos:position pos:line="140" pos:column="28"/></literal></expr>)<pos:position pos:line="140" pos:column="29"/></condition><then pos:line="140" pos:column="29">
    <block pos:line="141" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="142" pos:column="7">dprint<pos:position pos:line="142" pos:column="13"/></name><argument_list pos:line="142" pos:column="13">(<argument><expr><literal type="number" pos:line="142" pos:column="14">1<pos:position pos:line="142" pos:column="15"/></literal></expr></argument>,<argument><expr><operator pos:line="142" pos:column="16">(<pos:position pos:line="142" pos:column="17"/></operator><name pos:line="142" pos:column="17">debugfile<pos:position pos:line="142" pos:column="26"/></name><operator pos:line="142" pos:column="26">,<pos:position pos:line="142" pos:column="27"/></operator><literal type="string" pos:line="142" pos:column="27">"read_rfc822_header(): no date found, using received time from msg separator\n"<pos:position pos:line="142" pos:column="106"/></literal><operator pos:line="142" pos:column="106">)<pos:position pos:line="142" pos:column="107"/></operator></expr></argument>)<pos:position pos:line="142" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="109"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="143" pos:column="7">hdr<pos:position pos:line="143" pos:column="10"/></name><operator pos:line="143" pos:column="10">-&gt;<pos:position pos:line="143" pos:column="15"/></operator><name pos:line="143" pos:column="12">date_sent<pos:position pos:line="143" pos:column="21"/></name></name> <operator pos:line="143" pos:column="22">=<pos:position pos:line="143" pos:column="23"/></operator> <name><name pos:line="143" pos:column="24">hdr<pos:position pos:line="143" pos:column="27"/></name><operator pos:line="143" pos:column="27">-&gt;<pos:position pos:line="143" pos:column="32"/></operator><name pos:line="143" pos:column="29">received<pos:position pos:line="143" pos:column="37"/></name></name></expr>;<pos:position pos:line="143" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="144" pos:column="6"/></block></then></if>
  }<pos:position pos:line="145" pos:column="4"/></block></then></if>

  <return pos:line="147" pos:column="3">return <expr><operator pos:line="147" pos:column="10">(<pos:position pos:line="147" pos:column="11"/></operator><name pos:line="147" pos:column="11">e<pos:position pos:line="147" pos:column="12"/></name><operator pos:line="147" pos:column="12">)<pos:position pos:line="147" pos:column="13"/></operator></expr>;<pos:position pos:line="147" pos:column="14"/></return>
}<pos:position pos:line="148" pos:column="2"/></block></function></unit>

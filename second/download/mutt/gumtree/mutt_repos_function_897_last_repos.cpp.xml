<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_897_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ssl_err<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">sslsockdata<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">data<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">int<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">err<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name><modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type> <name pos:line="3" pos:column="15">errmsg<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">unsigned<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">long<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">sslerr<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>

  <switch pos:line="6" pos:column="3">switch <condition pos:line="6" pos:column="10">(<expr><call><name pos:line="6" pos:column="11">SSL_get_error<pos:position pos:line="6" pos:column="24"/></name> <argument_list pos:line="6" pos:column="25">(<argument><expr><name><name pos:line="6" pos:column="26">data<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">-&gt;<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="32">ssl<pos:position pos:line="6" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="37">err<pos:position pos:line="6" pos:column="40"/></name></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="42"/></condition>
  <block pos:line="7" pos:column="3">{
  <case pos:line="8" pos:column="3">case <expr><name pos:line="8" pos:column="8">SSL_ERROR_NONE<pos:position pos:line="8" pos:column="22"/></name></expr>:<pos:position pos:line="8" pos:column="23"/></case>
    <return pos:line="9" pos:column="5">return;<pos:position pos:line="9" pos:column="12"/></return>
  <case pos:line="10" pos:column="3">case <expr><name pos:line="10" pos:column="8">SSL_ERROR_ZERO_RETURN<pos:position pos:line="10" pos:column="29"/></name></expr>:<pos:position pos:line="10" pos:column="30"/></case>
    <expr_stmt><expr><name pos:line="11" pos:column="5">errmsg<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <literal type="string" pos:line="11" pos:column="14">"SSL connection closed"<pos:position pos:line="11" pos:column="37"/></literal></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">data<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">-&gt;<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="11">isopen<pos:position pos:line="12" pos:column="17"/></name></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <literal type="number" pos:line="12" pos:column="20">0<pos:position pos:line="12" pos:column="21"/></literal></expr>;<pos:position pos:line="12" pos:column="22"/></expr_stmt>
    <break pos:line="13" pos:column="5">break;<pos:position pos:line="13" pos:column="11"/></break>
  <case pos:line="14" pos:column="3">case <expr><name pos:line="14" pos:column="8">SSL_ERROR_WANT_READ<pos:position pos:line="14" pos:column="27"/></name></expr>:<pos:position pos:line="14" pos:column="28"/></case>
    <expr_stmt><expr><name pos:line="15" pos:column="5">errmsg<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <literal type="string" pos:line="15" pos:column="14">"retry read"<pos:position pos:line="15" pos:column="26"/></literal></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>
    <break pos:line="16" pos:column="5">break;<pos:position pos:line="16" pos:column="11"/></break>
  <case pos:line="17" pos:column="3">case <expr><name pos:line="17" pos:column="8">SSL_ERROR_WANT_WRITE<pos:position pos:line="17" pos:column="28"/></name></expr>:<pos:position pos:line="17" pos:column="29"/></case>
    <expr_stmt><expr><name pos:line="18" pos:column="5">errmsg<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <literal type="string" pos:line="18" pos:column="14">"retry write"<pos:position pos:line="18" pos:column="27"/></literal></expr>;<pos:position pos:line="18" pos:column="28"/></expr_stmt>
    <break pos:line="19" pos:column="5">break;<pos:position pos:line="19" pos:column="11"/></break>
  <case pos:line="20" pos:column="3">case <expr><name pos:line="20" pos:column="8">SSL_ERROR_WANT_CONNECT<pos:position pos:line="20" pos:column="30"/></name></expr>:<pos:position pos:line="20" pos:column="31"/></case>
    <expr_stmt><expr><name pos:line="21" pos:column="5">errmsg<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <literal type="string" pos:line="21" pos:column="14">"retry connect"<pos:position pos:line="21" pos:column="29"/></literal></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
    <break pos:line="22" pos:column="5">break;<pos:position pos:line="22" pos:column="11"/></break>
  <case pos:line="23" pos:column="3">case <expr><name pos:line="23" pos:column="8">SSL_ERROR_WANT_ACCEPT<pos:position pos:line="23" pos:column="29"/></name></expr>:<pos:position pos:line="23" pos:column="30"/></case>
    <expr_stmt><expr><name pos:line="24" pos:column="5">errmsg<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <literal type="string" pos:line="24" pos:column="14">"retry accept"<pos:position pos:line="24" pos:column="28"/></literal></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>
    <break pos:line="25" pos:column="5">break;<pos:position pos:line="25" pos:column="11"/></break>
  <case pos:line="26" pos:column="3">case <expr><name pos:line="26" pos:column="8">SSL_ERROR_WANT_X509_LOOKUP<pos:position pos:line="26" pos:column="34"/></name></expr>:<pos:position pos:line="26" pos:column="35"/></case>
    <expr_stmt><expr><name pos:line="27" pos:column="5">errmsg<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <literal type="string" pos:line="27" pos:column="14">"retry x509 lookup"<pos:position pos:line="27" pos:column="33"/></literal></expr>;<pos:position pos:line="27" pos:column="34"/></expr_stmt>
    <break pos:line="28" pos:column="5">break;<pos:position pos:line="28" pos:column="11"/></break>
  <case pos:line="29" pos:column="3">case <expr><name pos:line="29" pos:column="8">SSL_ERROR_SYSCALL<pos:position pos:line="29" pos:column="25"/></name></expr>:<pos:position pos:line="29" pos:column="26"/></case>
    <expr_stmt><expr><name pos:line="30" pos:column="5">errmsg<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <literal type="string" pos:line="30" pos:column="14">"I/O error"<pos:position pos:line="30" pos:column="25"/></literal></expr>;<pos:position pos:line="30" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">data<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">-&gt;<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="11">isopen<pos:position pos:line="31" pos:column="17"/></name></name> <operator pos:line="31" pos:column="18">=<pos:position pos:line="31" pos:column="19"/></operator> <literal type="number" pos:line="31" pos:column="20">0<pos:position pos:line="31" pos:column="21"/></literal></expr>;<pos:position pos:line="31" pos:column="22"/></expr_stmt>
    <break pos:line="32" pos:column="5">break;<pos:position pos:line="32" pos:column="11"/></break>
  <case pos:line="33" pos:column="3">case <expr><name pos:line="33" pos:column="8">SSL_ERROR_SSL<pos:position pos:line="33" pos:column="21"/></name></expr>:<pos:position pos:line="33" pos:column="22"/></case>
    <expr_stmt><expr><name pos:line="34" pos:column="5">sslerr<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">=<pos:position pos:line="34" pos:column="13"/></operator> <call><name pos:line="34" pos:column="14">ERR_get_error<pos:position pos:line="34" pos:column="27"/></name> <argument_list pos:line="34" pos:column="28">()<pos:position pos:line="34" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="31"/></expr_stmt>
    <switch pos:line="35" pos:column="5">switch <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">sslerr<pos:position pos:line="35" pos:column="19"/></name></expr>)<pos:position pos:line="35" pos:column="20"/></condition>
    <block pos:line="36" pos:column="5">{
    <case pos:line="37" pos:column="5">case <expr><literal type="number" pos:line="37" pos:column="10">0<pos:position pos:line="37" pos:column="11"/></literal></expr>:<pos:position pos:line="37" pos:column="12"/></case>
      <switch pos:line="38" pos:column="7">switch <condition pos:line="38" pos:column="14">(<expr><name pos:line="38" pos:column="15">err<pos:position pos:line="38" pos:column="18"/></name></expr>)<pos:position pos:line="38" pos:column="19"/></condition>
      <block pos:line="39" pos:column="7">{
      <case pos:line="40" pos:column="7">case <expr><literal type="number" pos:line="40" pos:column="12">0<pos:position pos:line="40" pos:column="13"/></literal></expr>:<pos:position pos:line="40" pos:column="14"/></case>
	<expr_stmt><expr><name pos:line="41" pos:column="9">errmsg<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <literal type="string" pos:line="41" pos:column="18">"EOF"<pos:position pos:line="41" pos:column="23"/></literal></expr>;<pos:position pos:line="41" pos:column="24"/></expr_stmt>
	<break pos:line="42" pos:column="9">break;<pos:position pos:line="42" pos:column="15"/></break>
      <default pos:line="43" pos:column="7">default:<pos:position pos:line="43" pos:column="15"/></default>
	<expr_stmt><expr><name pos:line="44" pos:column="9">errmsg<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <call><name pos:line="44" pos:column="18">strerror<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">(<argument><expr><name pos:line="44" pos:column="27">errno<pos:position pos:line="44" pos:column="32"/></name></expr></argument>)<pos:position pos:line="44" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt>
      }<pos:position pos:line="45" pos:column="8"/></block></switch>
      <break pos:line="46" pos:column="7">break;<pos:position pos:line="46" pos:column="13"/></break>
    <default pos:line="47" pos:column="5">default:<pos:position pos:line="47" pos:column="13"/></default>
      <expr_stmt><expr><name pos:line="48" pos:column="7">errmsg<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">=<pos:position pos:line="48" pos:column="15"/></operator> <call><name pos:line="48" pos:column="16">ERR_error_string<pos:position pos:line="48" pos:column="32"/></name> <argument_list pos:line="48" pos:column="33">(<argument><expr><name pos:line="48" pos:column="34">sslerr<pos:position pos:line="48" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="42">NULL<pos:position pos:line="48" pos:column="46"/></name></expr></argument>)<pos:position pos:line="48" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></switch>
    <break pos:line="50" pos:column="5">break;<pos:position pos:line="50" pos:column="11"/></break>
  <default pos:line="51" pos:column="3">default:<pos:position pos:line="51" pos:column="11"/></default>
    <expr_stmt><expr><name pos:line="52" pos:column="5">errmsg<pos:position pos:line="52" pos:column="11"/></name> <operator pos:line="52" pos:column="12">=<pos:position pos:line="52" pos:column="13"/></operator> <literal type="string" pos:line="52" pos:column="14">"unknown error"<pos:position pos:line="52" pos:column="29"/></literal></expr>;<pos:position pos:line="52" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="53" pos:column="4"/></block></switch>

  <expr_stmt><expr><call><name pos:line="55" pos:column="3">dprint<pos:position pos:line="55" pos:column="9"/></name> <argument_list pos:line="55" pos:column="10">(<argument><expr><literal type="number" pos:line="55" pos:column="11">1<pos:position pos:line="55" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="55" pos:column="14">(<pos:position pos:line="55" pos:column="15"/></operator><name pos:line="55" pos:column="15">debugfile<pos:position pos:line="55" pos:column="24"/></name><operator pos:line="55" pos:column="24">,<pos:position pos:line="55" pos:column="25"/></operator> <literal type="string" pos:line="55" pos:column="26">"SSL error: %s\n"<pos:position pos:line="55" pos:column="43"/></literal><operator pos:line="55" pos:column="43">,<pos:position pos:line="55" pos:column="44"/></operator> <name pos:line="55" pos:column="45">errmsg<pos:position pos:line="55" pos:column="51"/></name><operator pos:line="55" pos:column="51">)<pos:position pos:line="55" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="55" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="54"/></expr_stmt>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

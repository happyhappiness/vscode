<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1193_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">dotlock_lock<pos:position pos:line="2" pos:column="13"/></name> <parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><specifier pos:line="2" pos:column="15">const<pos:position pos:line="2" pos:column="20"/></specifier> <name pos:line="2" pos:column="21">char<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">realpath<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">lockfile<pos:position pos:line="4" pos:column="16"/></name><index pos:line="4" pos:column="16">[<expr><name pos:line="4" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="4" pos:column="32"/></name> <operator pos:line="4" pos:column="33">+<pos:position pos:line="4" pos:column="34"/></operator> <name pos:line="4" pos:column="35">LONG_STRING<pos:position pos:line="4" pos:column="46"/></name></expr>]<pos:position pos:line="4" pos:column="47"/></index></name></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">nfslockfile<pos:position pos:line="5" pos:column="19"/></name><index pos:line="5" pos:column="19">[<expr><name pos:line="5" pos:column="20">_POSIX_PATH_MAX<pos:position pos:line="5" pos:column="35"/></name> <operator pos:line="5" pos:column="36">+<pos:position pos:line="5" pos:column="37"/></operator> <name pos:line="5" pos:column="38">LONG_STRING<pos:position pos:line="5" pos:column="49"/></name></expr>]<pos:position pos:line="5" pos:column="50"/></index></name></decl>;<pos:position pos:line="5" pos:column="51"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">prev_size<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><literal type="number" pos:line="6" pos:column="22">0<pos:position pos:line="6" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">fd<pos:position pos:line="7" pos:column="9"/></name></decl>;<pos:position pos:line="7" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">count<pos:position pos:line="8" pos:column="12"/></name> <init pos:line="8" pos:column="13">= <expr><literal type="number" pos:line="8" pos:column="15">0<pos:position pos:line="8" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">hard_count<pos:position pos:line="9" pos:column="17"/></name> <init pos:line="9" pos:column="18">= <expr><literal type="number" pos:line="9" pos:column="20">0<pos:position pos:line="9" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">stat<pos:position pos:line="10" pos:column="14"/></name></name></type> <name pos:line="10" pos:column="15">sb<pos:position pos:line="10" pos:column="17"/></name></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">time_t<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">t<pos:position pos:line="11" pos:column="11"/></name></decl>;<pos:position pos:line="11" pos:column="12"/></decl_stmt>
  
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">snprintf<pos:position pos:line="13" pos:column="11"/></name> <argument_list pos:line="13" pos:column="12">(<argument><expr><name pos:line="13" pos:column="13">nfslockfile<pos:position pos:line="13" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="26">sizeof <argument_list pos:line="13" pos:column="33">(<argument><expr><name pos:line="13" pos:column="34">nfslockfile<pos:position pos:line="13" pos:column="45"/></name></expr></argument>)<pos:position pos:line="13" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="48">"%s.%s.%d"<pos:position pos:line="13" pos:column="58"/></literal></expr></argument>,
	   <argument><expr><name pos:line="14" pos:column="12">realpath<pos:position pos:line="14" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="22">Hostname<pos:position pos:line="14" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="32">(<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="33">int<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">)<pos:position pos:line="14" pos:column="37"/></operator> <call><name pos:line="14" pos:column="38">getpid<pos:position pos:line="14" pos:column="44"/></name> <argument_list pos:line="14" pos:column="45">()<pos:position pos:line="14" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">snprintf<pos:position pos:line="15" pos:column="11"/></name> <argument_list pos:line="15" pos:column="12">(<argument><expr><name pos:line="15" pos:column="13">lockfile<pos:position pos:line="15" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="23">sizeof <argument_list pos:line="15" pos:column="30">(<argument><expr><name pos:line="15" pos:column="31">lockfile<pos:position pos:line="15" pos:column="39"/></name></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="42">"%s.lock"<pos:position pos:line="15" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="53">realpath<pos:position pos:line="15" pos:column="61"/></name></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="63"/></expr_stmt>

  
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">BEGIN_PRIVILEGED<pos:position pos:line="18" pos:column="19"/></name> <argument_list pos:line="18" pos:column="20">()<pos:position pos:line="18" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">unlink<pos:position pos:line="20" pos:column="9"/></name> <argument_list pos:line="20" pos:column="10">(<argument><expr><name pos:line="20" pos:column="11">nfslockfile<pos:position pos:line="20" pos:column="22"/></name></expr></argument>)<pos:position pos:line="20" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="24"/></expr_stmt>

  <while pos:line="22" pos:column="3">while <condition pos:line="22" pos:column="9">(<expr><operator pos:line="22" pos:column="10">(<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="11">fd<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <call><name pos:line="22" pos:column="16">open<pos:position pos:line="22" pos:column="20"/></name> <argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">nfslockfile<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="35">O_WRONLY<pos:position pos:line="22" pos:column="43"/></name> <operator pos:line="22" pos:column="44">|<pos:position pos:line="22" pos:column="45"/></operator> <name pos:line="22" pos:column="46">O_EXCL<pos:position pos:line="22" pos:column="52"/></name> <operator pos:line="22" pos:column="53">|<pos:position pos:line="22" pos:column="54"/></operator> <name pos:line="22" pos:column="55">O_CREAT<pos:position pos:line="22" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="64">0<pos:position pos:line="22" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call><operator pos:line="22" pos:column="66">)<pos:position pos:line="22" pos:column="67"/></operator> <operator pos:line="22" pos:column="68">&lt;<pos:position pos:line="22" pos:column="72"/></operator> <literal type="number" pos:line="22" pos:column="70">0<pos:position pos:line="22" pos:column="71"/></literal></expr>)<pos:position pos:line="22" pos:column="72"/></condition>
  <block pos:line="23" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">END_PRIVILEGED<pos:position pos:line="24" pos:column="19"/></name> <argument_list pos:line="24" pos:column="20">()<pos:position pos:line="24" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="23"/></expr_stmt>

  
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">errno<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">!=<pos:position pos:line="27" pos:column="17"/></operator> <name pos:line="27" pos:column="18">EAGAIN<pos:position pos:line="27" pos:column="24"/></name></expr>)<pos:position pos:line="27" pos:column="25"/></condition><then pos:line="27" pos:column="25">
    <block pos:line="28" pos:column="5">{
      <comment type="block" pos:line="29" pos:column="7">/* perror ("cannot open NFS lock file"); */</comment>
      <return pos:line="30" pos:column="7">return <expr><name pos:line="30" pos:column="14">DL_EX_ERROR<pos:position pos:line="30" pos:column="25"/></name></expr>;<pos:position pos:line="30" pos:column="26"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">BEGIN_PRIVILEGED<pos:position pos:line="34" pos:column="21"/></name> <argument_list pos:line="34" pos:column="22">()<pos:position pos:line="34" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="35" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="37" pos:column="3">END_PRIVILEGED<pos:position pos:line="37" pos:column="17"/></name> <argument_list pos:line="37" pos:column="18">()<pos:position pos:line="37" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="21"/></expr_stmt>

  
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">close<pos:position pos:line="40" pos:column="8"/></name> <argument_list pos:line="40" pos:column="9">(<argument><expr><name pos:line="40" pos:column="10">fd<pos:position pos:line="40" pos:column="12"/></name></expr></argument>)<pos:position pos:line="40" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="14"/></expr_stmt>
  
  <while pos:line="42" pos:column="3">while <condition pos:line="42" pos:column="9">(<expr><name pos:line="42" pos:column="10">hard_count<pos:position pos:line="42" pos:column="20"/></name><operator pos:line="42" pos:column="20">++<pos:position pos:line="42" pos:column="22"/></operator> <operator pos:line="42" pos:column="23">&lt;<pos:position pos:line="42" pos:column="27"/></operator> <name pos:line="42" pos:column="25">HARDMAXATTEMPTS<pos:position pos:line="42" pos:column="40"/></name></expr>)<pos:position pos:line="42" pos:column="41"/></condition>
  <block pos:line="43" pos:column="3">{

    <expr_stmt><expr><call><name pos:line="45" pos:column="5">BEGIN_PRIVILEGED<pos:position pos:line="45" pos:column="21"/></name> <argument_list pos:line="45" pos:column="22">()<pos:position pos:line="45" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">link<pos:position pos:line="46" pos:column="9"/></name> <argument_list pos:line="46" pos:column="10">(<argument><expr><name pos:line="46" pos:column="11">nfslockfile<pos:position pos:line="46" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="24">lockfile<pos:position pos:line="46" pos:column="32"/></name></expr></argument>)<pos:position pos:line="46" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">END_PRIVILEGED<pos:position pos:line="47" pos:column="19"/></name> <argument_list pos:line="47" pos:column="20">()<pos:position pos:line="47" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="23"/></expr_stmt>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><call><name pos:line="49" pos:column="9">stat<pos:position pos:line="49" pos:column="13"/></name> <argument_list pos:line="49" pos:column="14">(<argument><expr><name pos:line="49" pos:column="15">nfslockfile<pos:position pos:line="49" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="28">&amp;<pos:position pos:line="49" pos:column="33"/></operator><name pos:line="49" pos:column="29">sb<pos:position pos:line="49" pos:column="31"/></name></expr></argument>)<pos:position pos:line="49" pos:column="32"/></argument_list></call> <operator pos:line="49" pos:column="33">!=<pos:position pos:line="49" pos:column="35"/></operator> <literal type="number" pos:line="49" pos:column="36">0<pos:position pos:line="49" pos:column="37"/></literal></expr>)<pos:position pos:line="49" pos:column="38"/></condition><then pos:line="49" pos:column="38">
    <block pos:line="50" pos:column="5">{
      <comment type="block" pos:line="51" pos:column="7">/* perror ("stat"); */</comment>
      <return pos:line="52" pos:column="7">return <expr><name pos:line="52" pos:column="14">DL_EX_ERROR<pos:position pos:line="52" pos:column="25"/></name></expr>;<pos:position pos:line="52" pos:column="26"/></return>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name><name pos:line="55" pos:column="9">sb<pos:position pos:line="55" pos:column="11"/></name><operator pos:line="55" pos:column="11">.<pos:position pos:line="55" pos:column="12"/></operator><name pos:line="55" pos:column="12">st_nlink<pos:position pos:line="55" pos:column="20"/></name></name> <operator pos:line="55" pos:column="21">==<pos:position pos:line="55" pos:column="23"/></operator> <literal type="number" pos:line="55" pos:column="24">2<pos:position pos:line="55" pos:column="25"/></literal></expr>)<pos:position pos:line="55" pos:column="26"/></condition><then pos:line="55" pos:column="26">
      <block type="pseudo"><break pos:line="56" pos:column="7">break;<pos:position pos:line="56" pos:column="13"/></break></block></then></if>

    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name pos:line="58" pos:column="9">count<pos:position pos:line="58" pos:column="14"/></name> <operator pos:line="58" pos:column="15">==<pos:position pos:line="58" pos:column="17"/></operator> <literal type="number" pos:line="58" pos:column="18">0<pos:position pos:line="58" pos:column="19"/></literal></expr>)<pos:position pos:line="58" pos:column="20"/></condition><then pos:line="58" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name pos:line="59" pos:column="7">prev_size<pos:position pos:line="59" pos:column="16"/></name> <operator pos:line="59" pos:column="17">=<pos:position pos:line="59" pos:column="18"/></operator> <name><name pos:line="59" pos:column="19">sb<pos:position pos:line="59" pos:column="21"/></name><operator pos:line="59" pos:column="21">.<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="22">st_size<pos:position pos:line="59" pos:column="29"/></name></name></expr>;<pos:position pos:line="59" pos:column="30"/></expr_stmt></block></then></if>

    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name pos:line="61" pos:column="9">prev_size<pos:position pos:line="61" pos:column="18"/></name> <operator pos:line="61" pos:column="19">==<pos:position pos:line="61" pos:column="21"/></operator> <name><name pos:line="61" pos:column="22">sb<pos:position pos:line="61" pos:column="24"/></name><operator pos:line="61" pos:column="24">.<pos:position pos:line="61" pos:column="25"/></operator><name pos:line="61" pos:column="25">st_size<pos:position pos:line="61" pos:column="32"/></name></name> <operator pos:line="61" pos:column="33">&amp;&amp;<pos:position pos:line="61" pos:column="43"/></operator> <operator pos:line="61" pos:column="36">++<pos:position pos:line="61" pos:column="38"/></operator><name pos:line="61" pos:column="38">count<pos:position pos:line="61" pos:column="43"/></name> <operator pos:line="61" pos:column="44">&gt;<pos:position pos:line="61" pos:column="48"/></operator> <name pos:line="61" pos:column="46">Retry<pos:position pos:line="61" pos:column="51"/></name></expr>)<pos:position pos:line="61" pos:column="52"/></condition><then pos:line="61" pos:column="52">
    <block pos:line="62" pos:column="5">{
      <if pos:line="63" pos:column="7">if <condition pos:line="63" pos:column="10">(<expr><name pos:line="63" pos:column="11">DotlockFlags<pos:position pos:line="63" pos:column="23"/></name> <operator pos:line="63" pos:column="24">&amp;<pos:position pos:line="63" pos:column="29"/></operator> <name pos:line="63" pos:column="26">DL_FL_FORCE<pos:position pos:line="63" pos:column="37"/></name></expr>)<pos:position pos:line="63" pos:column="38"/></condition><then pos:line="63" pos:column="38">
      <block pos:line="64" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="65" pos:column="9">BEGIN_PRIVILEGED<pos:position pos:line="65" pos:column="25"/></name> <argument_list pos:line="65" pos:column="26">()<pos:position pos:line="65" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="66" pos:column="9">unlink<pos:position pos:line="66" pos:column="15"/></name> <argument_list pos:line="66" pos:column="16">(<argument><expr><name pos:line="66" pos:column="17">lockfile<pos:position pos:line="66" pos:column="25"/></name></expr></argument>)<pos:position pos:line="66" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="67" pos:column="9">END_PRIVILEGED<pos:position pos:line="67" pos:column="23"/></name> <argument_list pos:line="67" pos:column="24">()<pos:position pos:line="67" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="27"/></expr_stmt>

	<expr_stmt><expr><name pos:line="69" pos:column="9">count<pos:position pos:line="69" pos:column="14"/></name> <operator pos:line="69" pos:column="15">=<pos:position pos:line="69" pos:column="16"/></operator> <literal type="number" pos:line="69" pos:column="17">0<pos:position pos:line="69" pos:column="18"/></literal></expr>;<pos:position pos:line="69" pos:column="19"/></expr_stmt>
	<continue pos:line="70" pos:column="9">continue;<pos:position pos:line="70" pos:column="18"/></continue>
      }<pos:position pos:line="71" pos:column="8"/></block></then>
      <else pos:line="72" pos:column="7">else
      <block pos:line="73" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="74" pos:column="9">BEGIN_PRIVILEGED<pos:position pos:line="74" pos:column="25"/></name> <argument_list pos:line="74" pos:column="26">()<pos:position pos:line="74" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="75" pos:column="9">unlink<pos:position pos:line="75" pos:column="15"/></name> <argument_list pos:line="75" pos:column="16">(<argument><expr><name pos:line="75" pos:column="17">nfslockfile<pos:position pos:line="75" pos:column="28"/></name></expr></argument>)<pos:position pos:line="75" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="76" pos:column="9">END_PRIVILEGED<pos:position pos:line="76" pos:column="23"/></name> <argument_list pos:line="76" pos:column="24">()<pos:position pos:line="76" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="27"/></expr_stmt>
	<return pos:line="77" pos:column="9">return <expr><name pos:line="77" pos:column="16">DL_EX_EXIST<pos:position pos:line="77" pos:column="27"/></name></expr>;<pos:position pos:line="77" pos:column="28"/></return>
      }<pos:position pos:line="78" pos:column="8"/></block></else></if>
    }<pos:position pos:line="79" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name pos:line="81" pos:column="5">prev_size<pos:position pos:line="81" pos:column="14"/></name> <operator pos:line="81" pos:column="15">=<pos:position pos:line="81" pos:column="16"/></operator> <name><name pos:line="81" pos:column="17">sb<pos:position pos:line="81" pos:column="19"/></name><operator pos:line="81" pos:column="19">.<pos:position pos:line="81" pos:column="20"/></operator><name pos:line="81" pos:column="20">st_size<pos:position pos:line="81" pos:column="27"/></name></name></expr>;<pos:position pos:line="81" pos:column="28"/></expr_stmt>
    
    <comment type="block" pos:line="83" pos:column="5">/* don't trust sleep (3) as it may be interrupted
     * by users sending signals. 
     */</comment>
    
    <expr_stmt><expr><name pos:line="87" pos:column="5">t<pos:position pos:line="87" pos:column="6"/></name> <operator pos:line="87" pos:column="7">=<pos:position pos:line="87" pos:column="8"/></operator> <call><name pos:line="87" pos:column="9">time<pos:position pos:line="87" pos:column="13"/></name> <argument_list pos:line="87" pos:column="14">(<argument><expr><name pos:line="87" pos:column="15">NULL<pos:position pos:line="87" pos:column="19"/></name></expr></argument>)<pos:position pos:line="87" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="21"/></expr_stmt>
    <do pos:line="88" pos:column="5">do <block pos:line="88" pos:column="8">{
      <expr_stmt><expr><call><name pos:line="89" pos:column="7">sleep<pos:position pos:line="89" pos:column="12"/></name> <argument_list pos:line="89" pos:column="13">(<argument><expr><literal type="number" pos:line="89" pos:column="14">1<pos:position pos:line="89" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block> while <condition pos:line="90" pos:column="13">(<expr><call><name pos:line="90" pos:column="14">time<pos:position pos:line="90" pos:column="18"/></name> <argument_list pos:line="90" pos:column="19">(<argument><expr><name pos:line="90" pos:column="20">NULL<pos:position pos:line="90" pos:column="24"/></name></expr></argument>)<pos:position pos:line="90" pos:column="25"/></argument_list></call> <operator pos:line="90" pos:column="26">==<pos:position pos:line="90" pos:column="28"/></operator> <name pos:line="90" pos:column="29">t<pos:position pos:line="90" pos:column="30"/></name></expr>)<pos:position pos:line="90" pos:column="31"/></condition>;<pos:position pos:line="90" pos:column="32"/></do>
  }<pos:position pos:line="91" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="93" pos:column="3">BEGIN_PRIVILEGED<pos:position pos:line="93" pos:column="19"/></name> <argument_list pos:line="93" pos:column="20">()<pos:position pos:line="93" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="94" pos:column="3">unlink<pos:position pos:line="94" pos:column="9"/></name> <argument_list pos:line="94" pos:column="10">(<argument><expr><name pos:line="94" pos:column="11">nfslockfile<pos:position pos:line="94" pos:column="22"/></name></expr></argument>)<pos:position pos:line="94" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="95" pos:column="3">END_PRIVILEGED<pos:position pos:line="95" pos:column="17"/></name> <argument_list pos:line="95" pos:column="18">()<pos:position pos:line="95" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="21"/></expr_stmt>

  <return pos:line="97" pos:column="3">return <expr><name pos:line="97" pos:column="10">DL_EX_OK<pos:position pos:line="97" pos:column="18"/></name></expr>;<pos:position pos:line="97" pos:column="19"/></return>
}<pos:position pos:line="98" pos:column="2"/></block></function></unit>

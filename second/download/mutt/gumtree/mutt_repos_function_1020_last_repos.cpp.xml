<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1020_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_attach_reply<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">FILE<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type> <name pos:line="1" pos:column="32">fp<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">HEADER<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type> <name pos:line="1" pos:column="45">hdr<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>,
			<parameter><decl><type><name pos:line="2" pos:column="25">ATTACH_CONTEXT<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">actx<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">BODY<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type> <name pos:line="2" pos:column="54">cur<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
			<parameter><decl><type><name pos:line="3" pos:column="25">int<pos:position pos:line="3" pos:column="28"/></name></type> <name pos:line="3" pos:column="29">flags<pos:position pos:line="3" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="35"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">short<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">mime_reply_any<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><literal type="number" pos:line="5" pos:column="26">0<pos:position pos:line="5" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
  
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">short<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">nattach<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><literal type="number" pos:line="7" pos:column="19">0<pos:position pos:line="7" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">ATTACHPTR<pos:position pos:line="8" pos:column="12"/></name> <modifier pos:line="8" pos:column="13">*<pos:position pos:line="8" pos:column="14"/></modifier></type><name pos:line="8" pos:column="14">parent<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><name pos:line="8" pos:column="23">NULL<pos:position pos:line="8" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">HEADER<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">parent_hdr<pos:position pos:line="9" pos:column="21"/></name> <init pos:line="9" pos:column="22">= <expr><name pos:line="9" pos:column="24">NULL<pos:position pos:line="9" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">FILE<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">parent_fp<pos:position pos:line="10" pos:column="18"/></name> <init pos:line="10" pos:column="19">= <expr><name pos:line="10" pos:column="21">NULL<pos:position pos:line="10" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">HEADER<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">tmphdr<pos:position pos:line="11" pos:column="17"/></name> <init pos:line="11" pos:column="18">= <expr><name pos:line="11" pos:column="20">NULL<pos:position pos:line="11" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">short<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">i<pos:position pos:line="12" pos:column="10"/></name></decl>;<pos:position pos:line="12" pos:column="11"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="14" pos:column="3">STATE<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">st<pos:position pos:line="14" pos:column="11"/></name></decl>;<pos:position pos:line="14" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">char<pos:position pos:line="15" pos:column="7"/></name></type> <name><name pos:line="15" pos:column="8">tmpbody<pos:position pos:line="15" pos:column="15"/></name><index pos:line="15" pos:column="15">[<expr><name pos:line="15" pos:column="16">_POSIX_PATH_MAX<pos:position pos:line="15" pos:column="31"/></name></expr>]<pos:position pos:line="15" pos:column="32"/></index></name></decl>;<pos:position pos:line="15" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">FILE<pos:position pos:line="16" pos:column="7"/></name> <modifier pos:line="16" pos:column="8">*<pos:position pos:line="16" pos:column="9"/></modifier></type><name pos:line="16" pos:column="9">tmpfp<pos:position pos:line="16" pos:column="14"/></name></decl>;<pos:position pos:line="16" pos:column="15"/></decl_stmt>
  
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">char<pos:position pos:line="18" pos:column="7"/></name></type> <name><name pos:line="18" pos:column="8">prefix<pos:position pos:line="18" pos:column="14"/></name><index pos:line="18" pos:column="14">[<expr><name pos:line="18" pos:column="15">SHORT_STRING<pos:position pos:line="18" pos:column="27"/></name></expr>]<pos:position pos:line="18" pos:column="28"/></index></name></decl>;<pos:position pos:line="18" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">int<pos:position pos:line="19" pos:column="6"/></name></type> <name pos:line="19" pos:column="7">rc<pos:position pos:line="19" pos:column="9"/></name></decl>;<pos:position pos:line="19" pos:column="10"/></decl_stmt>
  
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><call><name pos:line="21" pos:column="7">check_all_msg<pos:position pos:line="21" pos:column="20"/></name> <argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">actx<pos:position pos:line="21" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="28">cur<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="33">0<pos:position pos:line="21" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="35"/></argument_list></call> <operator pos:line="21" pos:column="36">==<pos:position pos:line="21" pos:column="38"/></operator> <operator pos:line="21" pos:column="39">-<pos:position pos:line="21" pos:column="40"/></operator><literal type="number" pos:line="21" pos:column="40">1<pos:position pos:line="21" pos:column="41"/></literal></expr>)<pos:position pos:line="21" pos:column="42"/></condition><then pos:line="21" pos:column="42">
  <block pos:line="22" pos:column="3">{
    <expr_stmt><expr><name pos:line="23" pos:column="5">nattach<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <call><name pos:line="23" pos:column="15">count_tagged<pos:position pos:line="23" pos:column="27"/></name> <argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">actx<pos:position pos:line="23" pos:column="33"/></name></expr></argument>)<pos:position pos:line="23" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">(<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">parent<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <call><name pos:line="24" pos:column="19">find_parent<pos:position pos:line="24" pos:column="30"/></name> <argument_list pos:line="24" pos:column="31">(<argument><expr><name pos:line="24" pos:column="32">actx<pos:position pos:line="24" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="38">cur<pos:position pos:line="24" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="43">nattach<pos:position pos:line="24" pos:column="50"/></name></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></call><operator pos:line="24" pos:column="51">)<pos:position pos:line="24" pos:column="52"/></operator> <operator pos:line="24" pos:column="53">!=<pos:position pos:line="24" pos:column="55"/></operator> <name pos:line="24" pos:column="56">NULL<pos:position pos:line="24" pos:column="60"/></name></expr>)<pos:position pos:line="24" pos:column="61"/></condition><then pos:line="24" pos:column="61">
    <block pos:line="25" pos:column="5">{
      <expr_stmt><expr><name pos:line="26" pos:column="7">parent_hdr<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <name><name pos:line="26" pos:column="20">parent<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">-&gt;<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="28">content<pos:position pos:line="26" pos:column="35"/></name><operator pos:line="26" pos:column="35">-&gt;<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="37">hdr<pos:position pos:line="26" pos:column="40"/></name></name></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name pos:line="27" pos:column="7">parent_fp<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <name><name pos:line="27" pos:column="19">parent<pos:position pos:line="27" pos:column="25"/></name><operator pos:line="27" pos:column="25">-&gt;<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="27">fp<pos:position pos:line="27" pos:column="29"/></name></name></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then>
    <else pos:line="29" pos:column="5">else
    <block pos:line="30" pos:column="5">{
      <expr_stmt><expr><name pos:line="31" pos:column="7">parent_hdr<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">=<pos:position pos:line="31" pos:column="19"/></operator> <name pos:line="31" pos:column="20">hdr<pos:position pos:line="31" pos:column="23"/></name></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name pos:line="32" pos:column="7">parent_fp<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <name><name pos:line="32" pos:column="19">actx<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">-&gt;<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="25">root_fp<pos:position pos:line="32" pos:column="32"/></name></name></expr>;<pos:position pos:line="32" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></else></if>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>

  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><name pos:line="36" pos:column="7">nattach<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">&gt;<pos:position pos:line="36" pos:column="19"/></operator> <literal type="number" pos:line="36" pos:column="17">1<pos:position pos:line="36" pos:column="18"/></literal> <operator pos:line="36" pos:column="19">&amp;&amp;<pos:position pos:line="36" pos:column="29"/></operator> <operator pos:line="36" pos:column="22">!<pos:position pos:line="36" pos:column="23"/></operator><call><name pos:line="36" pos:column="23">check_can_decode<pos:position pos:line="36" pos:column="39"/></name> <argument_list pos:line="36" pos:column="40">(<argument><expr><name pos:line="36" pos:column="41">actx<pos:position pos:line="36" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="47">cur<pos:position pos:line="36" pos:column="50"/></name></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="52"/></condition><then pos:line="36" pos:column="52">
  <block pos:line="37" pos:column="3">{
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><operator pos:line="38" pos:column="9">(<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="10">rc<pos:position pos:line="38" pos:column="12"/></name> <operator pos:line="38" pos:column="13">=<pos:position pos:line="38" pos:column="14"/></operator> <call><name pos:line="38" pos:column="15">query_quadoption<pos:position pos:line="38" pos:column="31"/></name> <argument_list pos:line="38" pos:column="32">(<argument><expr><name pos:line="38" pos:column="33">OPT_MIMEFWDREST<pos:position pos:line="38" pos:column="48"/></name></expr></argument>,
      <argument><expr><call><name pos:line="39" pos:column="7">_<pos:position pos:line="39" pos:column="8"/></name><argument_list pos:line="39" pos:column="8">(<argument><expr><literal type="string" pos:line="39" pos:column="9">"Can't decode all tagged attachments.  MIME-encapsulate the others?"<pos:position pos:line="39" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="79"/></argument_list></call><operator pos:line="39" pos:column="79">)<pos:position pos:line="39" pos:column="80"/></operator> <operator pos:line="39" pos:column="81">==<pos:position pos:line="39" pos:column="83"/></operator> <operator pos:line="39" pos:column="84">-<pos:position pos:line="39" pos:column="85"/></operator><literal type="number" pos:line="39" pos:column="85">1<pos:position pos:line="39" pos:column="86"/></literal></expr>)<pos:position pos:line="39" pos:column="87"/></condition><then pos:line="39" pos:column="87">
      <block type="pseudo"><return pos:line="40" pos:column="7">return;<pos:position pos:line="40" pos:column="14"/></return></block></then>
    <elseif pos:line="41" pos:column="5">else <if pos:line="41" pos:column="10">if <condition pos:line="41" pos:column="13">(<expr><name pos:line="41" pos:column="14">rc<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">==<pos:position pos:line="41" pos:column="19"/></operator> <name pos:line="41" pos:column="20">MUTT_YES<pos:position pos:line="41" pos:column="28"/></name></expr>)<pos:position pos:line="41" pos:column="29"/></condition><then pos:line="41" pos:column="29">
      <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="7">mime_reply_any<pos:position pos:line="42" pos:column="21"/></name> <operator pos:line="42" pos:column="22">=<pos:position pos:line="42" pos:column="23"/></operator> <literal type="number" pos:line="42" pos:column="24">1<pos:position pos:line="42" pos:column="25"/></literal></expr>;<pos:position pos:line="42" pos:column="26"/></expr_stmt></block></then></if></elseif></if>
  }<pos:position pos:line="43" pos:column="4"/></block></then>
  <elseif pos:line="44" pos:column="3">else <if pos:line="44" pos:column="8">if <condition pos:line="44" pos:column="11">(<expr><name pos:line="44" pos:column="12">nattach<pos:position pos:line="44" pos:column="19"/></name> <operator pos:line="44" pos:column="20">==<pos:position pos:line="44" pos:column="22"/></operator> <literal type="number" pos:line="44" pos:column="23">1<pos:position pos:line="44" pos:column="24"/></literal></expr>)<pos:position pos:line="44" pos:column="25"/></condition><then pos:line="44" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="5">mime_reply_any<pos:position pos:line="45" pos:column="19"/></name> <operator pos:line="45" pos:column="20">=<pos:position pos:line="45" pos:column="21"/></operator> <literal type="number" pos:line="45" pos:column="22">1<pos:position pos:line="45" pos:column="23"/></literal></expr>;<pos:position pos:line="45" pos:column="24"/></expr_stmt></block></then></if></elseif></if>

  <expr_stmt><expr><name pos:line="47" pos:column="3">tmphdr<pos:position pos:line="47" pos:column="9"/></name> <operator pos:line="47" pos:column="10">=<pos:position pos:line="47" pos:column="11"/></operator> <call><name pos:line="47" pos:column="12">mutt_new_header<pos:position pos:line="47" pos:column="27"/></name> <argument_list pos:line="47" pos:column="28">()<pos:position pos:line="47" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="48" pos:column="3">tmphdr<pos:position pos:line="48" pos:column="9"/></name><operator pos:line="48" pos:column="9">-&gt;<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="11">env<pos:position pos:line="48" pos:column="14"/></name></name> <operator pos:line="48" pos:column="15">=<pos:position pos:line="48" pos:column="16"/></operator> <call><name pos:line="48" pos:column="17">mutt_new_envelope<pos:position pos:line="48" pos:column="34"/></name> <argument_list pos:line="48" pos:column="35">()<pos:position pos:line="48" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="38"/></expr_stmt>

  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><call><name pos:line="50" pos:column="7">attach_reply_envelope_defaults<pos:position pos:line="50" pos:column="37"/></name> <argument_list pos:line="50" pos:column="38">(<argument><expr><name><name pos:line="50" pos:column="39">tmphdr<pos:position pos:line="50" pos:column="45"/></name><operator pos:line="50" pos:column="45">-&gt;<pos:position pos:line="50" pos:column="50"/></operator><name pos:line="50" pos:column="47">env<pos:position pos:line="50" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="52">actx<pos:position pos:line="50" pos:column="56"/></name></expr></argument>,
				      <argument><expr><ternary><condition><expr><name pos:line="51" pos:column="39">parent_hdr<pos:position pos:line="51" pos:column="49"/></name></expr> ?<pos:position pos:line="51" pos:column="51"/></condition><then pos:line="51" pos:column="51"> <expr><name pos:line="51" pos:column="52">parent_hdr<pos:position pos:line="51" pos:column="62"/></name></expr> <pos:position pos:line="51" pos:column="63"/></then><else pos:line="51" pos:column="63">: <expr><operator pos:line="51" pos:column="65">(<pos:position pos:line="51" pos:column="66"/></operator><ternary><condition><expr><name pos:line="51" pos:column="66">cur<pos:position pos:line="51" pos:column="69"/></name></expr> ?<pos:position pos:line="51" pos:column="71"/></condition><then pos:line="51" pos:column="71"> <expr><name><name pos:line="51" pos:column="72">cur<pos:position pos:line="51" pos:column="75"/></name><operator pos:line="51" pos:column="75">-&gt;<pos:position pos:line="51" pos:column="80"/></operator><name pos:line="51" pos:column="77">hdr<pos:position pos:line="51" pos:column="80"/></name></name></expr> <pos:position pos:line="51" pos:column="81"/></then><else pos:line="51" pos:column="81">: <expr><name pos:line="51" pos:column="83">NULL<pos:position pos:line="51" pos:column="87"/></name></expr></else></ternary><operator pos:line="51" pos:column="87">)<pos:position pos:line="51" pos:column="88"/></operator></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="51" pos:column="90">flags<pos:position pos:line="51" pos:column="95"/></name></expr></argument>)<pos:position pos:line="51" pos:column="96"/></argument_list></call> <operator pos:line="51" pos:column="97">==<pos:position pos:line="51" pos:column="99"/></operator> <operator pos:line="51" pos:column="100">-<pos:position pos:line="51" pos:column="101"/></operator><literal type="number" pos:line="51" pos:column="101">1<pos:position pos:line="51" pos:column="102"/></literal></expr>)<pos:position pos:line="51" pos:column="103"/></condition><then pos:line="51" pos:column="103">
  <block pos:line="52" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">mutt_free_header<pos:position pos:line="53" pos:column="21"/></name> <argument_list pos:line="53" pos:column="22">(<argument><expr><operator pos:line="53" pos:column="23">&amp;<pos:position pos:line="53" pos:column="28"/></operator><name pos:line="53" pos:column="24">tmphdr<pos:position pos:line="53" pos:column="30"/></name></expr></argument>)<pos:position pos:line="53" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="32"/></expr_stmt>
    <return pos:line="54" pos:column="5">return;<pos:position pos:line="54" pos:column="12"/></return>
  }<pos:position pos:line="55" pos:column="4"/></block></then></if>
  
  <expr_stmt><expr><call><name pos:line="57" pos:column="3">mutt_mktemp<pos:position pos:line="57" pos:column="14"/></name> <argument_list pos:line="57" pos:column="15">(<argument><expr><name pos:line="57" pos:column="16">tmpbody<pos:position pos:line="57" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="57" pos:column="25">sizeof <argument_list pos:line="57" pos:column="32">(<argument><expr><name pos:line="57" pos:column="33">tmpbody<pos:position pos:line="57" pos:column="40"/></name></expr></argument>)<pos:position pos:line="57" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="57" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="43"/></expr_stmt>
  <if pos:line="58" pos:column="3">if <condition pos:line="58" pos:column="6">(<expr><operator pos:line="58" pos:column="7">(<pos:position pos:line="58" pos:column="8"/></operator><name pos:line="58" pos:column="8">tmpfp<pos:position pos:line="58" pos:column="13"/></name> <operator pos:line="58" pos:column="14">=<pos:position pos:line="58" pos:column="15"/></operator> <call><name pos:line="58" pos:column="16">safe_fopen<pos:position pos:line="58" pos:column="26"/></name> <argument_list pos:line="58" pos:column="27">(<argument><expr><name pos:line="58" pos:column="28">tmpbody<pos:position pos:line="58" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="37">"w"<pos:position pos:line="58" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="41"/></argument_list></call><operator pos:line="58" pos:column="41">)<pos:position pos:line="58" pos:column="42"/></operator> <operator pos:line="58" pos:column="43">==<pos:position pos:line="58" pos:column="45"/></operator> <name pos:line="58" pos:column="46">NULL<pos:position pos:line="58" pos:column="50"/></name></expr>)<pos:position pos:line="58" pos:column="51"/></condition><then pos:line="58" pos:column="51">
  <block pos:line="59" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">mutt_error<pos:position pos:line="60" pos:column="15"/></name> <argument_list pos:line="60" pos:column="16">(<argument><expr><call><name pos:line="60" pos:column="17">_<pos:position pos:line="60" pos:column="18"/></name><argument_list pos:line="60" pos:column="18">(<argument><expr><literal type="string" pos:line="60" pos:column="19">"Can't create %s."<pos:position pos:line="60" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="60" pos:column="40">tmpbody<pos:position pos:line="60" pos:column="47"/></name></expr></argument>)<pos:position pos:line="60" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">mutt_free_header<pos:position pos:line="61" pos:column="21"/></name> <argument_list pos:line="61" pos:column="22">(<argument><expr><operator pos:line="61" pos:column="23">&amp;<pos:position pos:line="61" pos:column="28"/></operator><name pos:line="61" pos:column="24">tmphdr<pos:position pos:line="61" pos:column="30"/></name></expr></argument>)<pos:position pos:line="61" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="32"/></expr_stmt>
    <return pos:line="62" pos:column="5">return;<pos:position pos:line="62" pos:column="12"/></return>
  }<pos:position pos:line="63" pos:column="4"/></block></then></if>

  <if pos:line="65" pos:column="3">if <condition pos:line="65" pos:column="6">(<expr><operator pos:line="65" pos:column="7">!<pos:position pos:line="65" pos:column="8"/></operator><name pos:line="65" pos:column="8">parent_hdr<pos:position pos:line="65" pos:column="18"/></name></expr>)<pos:position pos:line="65" pos:column="19"/></condition><then pos:line="65" pos:column="19">
  <block pos:line="66" pos:column="3">{
    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><name pos:line="67" pos:column="9">cur<pos:position pos:line="67" pos:column="12"/></name></expr>)<pos:position pos:line="67" pos:column="13"/></condition><then pos:line="67" pos:column="13">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="7">attach_include_reply<pos:position pos:line="68" pos:column="27"/></name> <argument_list pos:line="68" pos:column="28">(<argument><expr><name pos:line="68" pos:column="29">fp<pos:position pos:line="68" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="33">tmpfp<pos:position pos:line="68" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="40">cur<pos:position pos:line="68" pos:column="43"/></name><operator pos:line="68" pos:column="43">-&gt;<pos:position pos:line="68" pos:column="48"/></operator><name pos:line="68" pos:column="45">hdr<pos:position pos:line="68" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="50">flags<pos:position pos:line="68" pos:column="55"/></name></expr></argument>)<pos:position pos:line="68" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="57"/></expr_stmt></block></then>
    <else pos:line="69" pos:column="5">else
    <block pos:line="70" pos:column="5">{
      <for pos:line="71" pos:column="7">for <control pos:line="71" pos:column="11">(<init><expr><name pos:line="71" pos:column="12">i<pos:position pos:line="71" pos:column="13"/></name> <operator pos:line="71" pos:column="14">=<pos:position pos:line="71" pos:column="15"/></operator> <literal type="number" pos:line="71" pos:column="16">0<pos:position pos:line="71" pos:column="17"/></literal></expr>;<pos:position pos:line="71" pos:column="18"/></init> <condition><expr><name pos:line="71" pos:column="19">i<pos:position pos:line="71" pos:column="20"/></name> <operator pos:line="71" pos:column="21">&lt;<pos:position pos:line="71" pos:column="25"/></operator> <name><name pos:line="71" pos:column="23">actx<pos:position pos:line="71" pos:column="27"/></name><operator pos:line="71" pos:column="27">-&gt;<pos:position pos:line="71" pos:column="32"/></operator><name pos:line="71" pos:column="29">idxlen<pos:position pos:line="71" pos:column="35"/></name></name></expr>;<pos:position pos:line="71" pos:column="36"/></condition> <incr><expr><name pos:line="71" pos:column="37">i<pos:position pos:line="71" pos:column="38"/></name><operator pos:line="71" pos:column="38">++<pos:position pos:line="71" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="71" pos:column="41"/></control>
      <block pos:line="72" pos:column="7">{
	<if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name><name pos:line="73" pos:column="13">actx<pos:position pos:line="73" pos:column="17"/></name><operator pos:line="73" pos:column="17">-&gt;<pos:position pos:line="73" pos:column="22"/></operator><name pos:line="73" pos:column="19">idx<pos:position pos:line="73" pos:column="22"/></name><index pos:line="73" pos:column="22">[<expr><name pos:line="73" pos:column="23">i<pos:position pos:line="73" pos:column="24"/></name></expr>]<pos:position pos:line="73" pos:column="25"/></index></name><operator pos:line="73" pos:column="25">-&gt;<pos:position pos:line="73" pos:column="30"/></operator><name><name pos:line="73" pos:column="27">content<pos:position pos:line="73" pos:column="34"/></name><operator pos:line="73" pos:column="34">-&gt;<pos:position pos:line="73" pos:column="39"/></operator><name pos:line="73" pos:column="36">tagged<pos:position pos:line="73" pos:column="42"/></name></name></expr>)<pos:position pos:line="73" pos:column="43"/></condition><then pos:line="73" pos:column="43">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="11">attach_include_reply<pos:position pos:line="74" pos:column="31"/></name> <argument_list pos:line="74" pos:column="32">(<argument><expr><name><name pos:line="74" pos:column="33">actx<pos:position pos:line="74" pos:column="37"/></name><operator pos:line="74" pos:column="37">-&gt;<pos:position pos:line="74" pos:column="42"/></operator><name pos:line="74" pos:column="39">idx<pos:position pos:line="74" pos:column="42"/></name><index pos:line="74" pos:column="42">[<expr><name pos:line="74" pos:column="43">i<pos:position pos:line="74" pos:column="44"/></name></expr>]<pos:position pos:line="74" pos:column="45"/></index></name><operator pos:line="74" pos:column="45">-&gt;<pos:position pos:line="74" pos:column="50"/></operator><name pos:line="74" pos:column="47">fp<pos:position pos:line="74" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="51">tmpfp<pos:position pos:line="74" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="58">actx<pos:position pos:line="74" pos:column="62"/></name><operator pos:line="74" pos:column="62">-&gt;<pos:position pos:line="74" pos:column="67"/></operator><name pos:line="74" pos:column="64">idx<pos:position pos:line="74" pos:column="67"/></name><index pos:line="74" pos:column="67">[<expr><name pos:line="74" pos:column="68">i<pos:position pos:line="74" pos:column="69"/></name></expr>]<pos:position pos:line="74" pos:column="70"/></index></name><operator pos:line="74" pos:column="70">-&gt;<pos:position pos:line="74" pos:column="75"/></operator><name><name pos:line="74" pos:column="72">content<pos:position pos:line="74" pos:column="79"/></name><operator pos:line="74" pos:column="79">-&gt;<pos:position pos:line="74" pos:column="84"/></operator><name pos:line="74" pos:column="81">hdr<pos:position pos:line="74" pos:column="84"/></name></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="86">flags<pos:position pos:line="74" pos:column="91"/></name></expr></argument>)<pos:position pos:line="74" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="93"/></expr_stmt></block></then></if>
      }<pos:position pos:line="75" pos:column="8"/></block></for>
    }<pos:position pos:line="76" pos:column="6"/></block></else></if>
  }<pos:position pos:line="77" pos:column="4"/></block></then>
  <else pos:line="78" pos:column="3">else
  <block pos:line="79" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="80" pos:column="5">mutt_make_attribution<pos:position pos:line="80" pos:column="26"/></name> <argument_list pos:line="80" pos:column="27">(<argument><expr><name pos:line="80" pos:column="28">Context<pos:position pos:line="80" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="37">parent_hdr<pos:position pos:line="80" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="49">tmpfp<pos:position pos:line="80" pos:column="54"/></name></expr></argument>)<pos:position pos:line="80" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="56"/></expr_stmt>
    
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">memset<pos:position pos:line="82" pos:column="11"/></name> <argument_list pos:line="82" pos:column="12">(<argument><expr><operator pos:line="82" pos:column="13">&amp;<pos:position pos:line="82" pos:column="18"/></operator><name pos:line="82" pos:column="14">st<pos:position pos:line="82" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="82" pos:column="18">0<pos:position pos:line="82" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="82" pos:column="21">sizeof <argument_list pos:line="82" pos:column="28">(<argument><expr><name pos:line="82" pos:column="29">STATE<pos:position pos:line="82" pos:column="34"/></name></expr></argument>)<pos:position pos:line="82" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="82" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="83" pos:column="5">st<pos:position pos:line="83" pos:column="7"/></name><operator pos:line="83" pos:column="7">.<pos:position pos:line="83" pos:column="8"/></operator><name pos:line="83" pos:column="8">fpout<pos:position pos:line="83" pos:column="13"/></name></name> <operator pos:line="83" pos:column="14">=<pos:position pos:line="83" pos:column="15"/></operator> <name pos:line="83" pos:column="16">tmpfp<pos:position pos:line="83" pos:column="21"/></name></expr>;<pos:position pos:line="83" pos:column="22"/></expr_stmt>

    <if pos:line="85" pos:column="5">if <condition pos:line="85" pos:column="8">(<expr><operator pos:line="85" pos:column="9">!<pos:position pos:line="85" pos:column="10"/></operator><call><name pos:line="85" pos:column="10">option<pos:position pos:line="85" pos:column="16"/></name> <argument_list pos:line="85" pos:column="17">(<argument><expr><name pos:line="85" pos:column="18">OPTTEXTFLOWED<pos:position pos:line="85" pos:column="31"/></name></expr></argument>)<pos:position pos:line="85" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="33"/></condition><then pos:line="85" pos:column="33">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="7">_mutt_make_string<pos:position pos:line="86" pos:column="24"/></name> <argument_list pos:line="86" pos:column="25">(<argument><expr><name pos:line="86" pos:column="26">prefix<pos:position pos:line="86" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="86" pos:column="34">sizeof <argument_list pos:line="86" pos:column="41">(<argument><expr><name pos:line="86" pos:column="42">prefix<pos:position pos:line="86" pos:column="48"/></name></expr></argument>)<pos:position pos:line="86" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="86" pos:column="51">NONULL<pos:position pos:line="86" pos:column="57"/></name> <argument_list pos:line="86" pos:column="58">(<argument><expr><name pos:line="86" pos:column="59">Prefix<pos:position pos:line="86" pos:column="65"/></name></expr></argument>)<pos:position pos:line="86" pos:column="66"/></argument_list></call></expr></argument>, 
			 <argument><expr><name pos:line="87" pos:column="26">Context<pos:position pos:line="87" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="35">parent_hdr<pos:position pos:line="87" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="87" pos:column="47">0<pos:position pos:line="87" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="50"/></expr_stmt></block></then>
    <else pos:line="88" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="89" pos:column="7">strfcpy<pos:position pos:line="89" pos:column="14"/></name> <argument_list pos:line="89" pos:column="15">(<argument><expr><name pos:line="89" pos:column="16">prefix<pos:position pos:line="89" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="24">"&gt;"<pos:position pos:line="89" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="89" pos:column="29">sizeof <argument_list pos:line="89" pos:column="36">(<argument><expr><name pos:line="89" pos:column="37">prefix<pos:position pos:line="89" pos:column="43"/></name></expr></argument>)<pos:position pos:line="89" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="89" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="46"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name><name pos:line="91" pos:column="5">st<pos:position pos:line="91" pos:column="7"/></name><operator pos:line="91" pos:column="7">.<pos:position pos:line="91" pos:column="8"/></operator><name pos:line="91" pos:column="8">prefix<pos:position pos:line="91" pos:column="14"/></name></name> <operator pos:line="91" pos:column="15">=<pos:position pos:line="91" pos:column="16"/></operator> <name pos:line="91" pos:column="17">prefix<pos:position pos:line="91" pos:column="23"/></name></expr>;<pos:position pos:line="91" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="92" pos:column="5">st<pos:position pos:line="92" pos:column="7"/></name><operator pos:line="92" pos:column="7">.<pos:position pos:line="92" pos:column="8"/></operator><name pos:line="92" pos:column="8">flags<pos:position pos:line="92" pos:column="13"/></name></name>  <operator pos:line="92" pos:column="15">=<pos:position pos:line="92" pos:column="16"/></operator> <name pos:line="92" pos:column="17">MUTT_CHARCONV<pos:position pos:line="92" pos:column="30"/></name></expr>;<pos:position pos:line="92" pos:column="31"/></expr_stmt>
    
    <if pos:line="94" pos:column="5">if <condition pos:line="94" pos:column="8">(<expr><call><name pos:line="94" pos:column="9">option<pos:position pos:line="94" pos:column="15"/></name> <argument_list pos:line="94" pos:column="16">(<argument><expr><name pos:line="94" pos:column="17">OPTWEED<pos:position pos:line="94" pos:column="24"/></name></expr></argument>)<pos:position pos:line="94" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="94" pos:column="26"/></condition><then pos:line="94" pos:column="26"> 
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="95" pos:column="7">st<pos:position pos:line="95" pos:column="9"/></name><operator pos:line="95" pos:column="9">.<pos:position pos:line="95" pos:column="10"/></operator><name pos:line="95" pos:column="10">flags<pos:position pos:line="95" pos:column="15"/></name></name> <operator pos:line="95" pos:column="16">|=<pos:position pos:line="95" pos:column="18"/></operator> <name pos:line="95" pos:column="19">MUTT_WEED<pos:position pos:line="95" pos:column="28"/></name></expr>;<pos:position pos:line="95" pos:column="29"/></expr_stmt></block></then></if>

    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><call><name pos:line="97" pos:column="9">option<pos:position pos:line="97" pos:column="15"/></name> <argument_list pos:line="97" pos:column="16">(<argument><expr><name pos:line="97" pos:column="17">OPTHEADER<pos:position pos:line="97" pos:column="26"/></name></expr></argument>)<pos:position pos:line="97" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="97" pos:column="28"/></condition><then pos:line="97" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="98" pos:column="7">include_header<pos:position pos:line="98" pos:column="21"/></name> <argument_list pos:line="98" pos:column="22">(<argument><expr><literal type="number" pos:line="98" pos:column="23">1<pos:position pos:line="98" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="98" pos:column="26">parent_fp<pos:position pos:line="98" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="37">parent_hdr<pos:position pos:line="98" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="49">tmpfp<pos:position pos:line="98" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="56">prefix<pos:position pos:line="98" pos:column="62"/></name></expr></argument>)<pos:position pos:line="98" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="64"/></expr_stmt></block></then></if>

    <if pos:line="100" pos:column="5">if <condition pos:line="100" pos:column="8">(<expr><name pos:line="100" pos:column="9">cur<pos:position pos:line="100" pos:column="12"/></name></expr>)<pos:position pos:line="100" pos:column="13"/></condition><then pos:line="100" pos:column="13">
    <block pos:line="101" pos:column="5">{
      <if pos:line="102" pos:column="7">if <condition pos:line="102" pos:column="10">(<expr><call><name pos:line="102" pos:column="11">mutt_can_decode<pos:position pos:line="102" pos:column="26"/></name> <argument_list pos:line="102" pos:column="27">(<argument><expr><name pos:line="102" pos:column="28">cur<pos:position pos:line="102" pos:column="31"/></name></expr></argument>)<pos:position pos:line="102" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="102" pos:column="33"/></condition><then pos:line="102" pos:column="33">
      <block pos:line="103" pos:column="7">{
        <expr_stmt><expr><name><name pos:line="104" pos:column="9">st<pos:position pos:line="104" pos:column="11"/></name><operator pos:line="104" pos:column="11">.<pos:position pos:line="104" pos:column="12"/></operator><name pos:line="104" pos:column="12">fpin<pos:position pos:line="104" pos:column="16"/></name></name> <operator pos:line="104" pos:column="17">=<pos:position pos:line="104" pos:column="18"/></operator> <name pos:line="104" pos:column="19">fp<pos:position pos:line="104" pos:column="21"/></name></expr>;<pos:position pos:line="104" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="105" pos:column="9">mutt_body_handler<pos:position pos:line="105" pos:column="26"/></name> <argument_list pos:line="105" pos:column="27">(<argument><expr><name pos:line="105" pos:column="28">cur<pos:position pos:line="105" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="105" pos:column="33">&amp;<pos:position pos:line="105" pos:column="38"/></operator><name pos:line="105" pos:column="34">st<pos:position pos:line="105" pos:column="36"/></name></expr></argument>)<pos:position pos:line="105" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="106" pos:column="9">state_putc<pos:position pos:line="106" pos:column="19"/></name> <argument_list pos:line="106" pos:column="20">(<argument><expr><literal type="char" pos:line="106" pos:column="21">'\n'<pos:position pos:line="106" pos:column="25"/></literal></expr></argument>, <argument><expr><operator pos:line="106" pos:column="27">&amp;<pos:position pos:line="106" pos:column="32"/></operator><name pos:line="106" pos:column="28">st<pos:position pos:line="106" pos:column="30"/></name></expr></argument>)<pos:position pos:line="106" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="32"/></expr_stmt>
      }<pos:position pos:line="107" pos:column="8"/></block></then>
      <else pos:line="108" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="109" pos:column="9">mutt_copy_body<pos:position pos:line="109" pos:column="23"/></name> <argument_list pos:line="109" pos:column="24">(<argument><expr><name pos:line="109" pos:column="25">fp<pos:position pos:line="109" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="109" pos:column="29">&amp;<pos:position pos:line="109" pos:column="34"/></operator><name><name pos:line="109" pos:column="30">tmphdr<pos:position pos:line="109" pos:column="36"/></name><operator pos:line="109" pos:column="36">-&gt;<pos:position pos:line="109" pos:column="41"/></operator><name pos:line="109" pos:column="38">content<pos:position pos:line="109" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="47">cur<pos:position pos:line="109" pos:column="50"/></name></expr></argument>)<pos:position pos:line="109" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="52"/></expr_stmt></block></else></if>
    }<pos:position pos:line="110" pos:column="6"/></block></then>
    <else pos:line="111" pos:column="5">else
    <block pos:line="112" pos:column="5">{
      <for pos:line="113" pos:column="7">for <control pos:line="113" pos:column="11">(<init><expr><name pos:line="113" pos:column="12">i<pos:position pos:line="113" pos:column="13"/></name> <operator pos:line="113" pos:column="14">=<pos:position pos:line="113" pos:column="15"/></operator> <literal type="number" pos:line="113" pos:column="16">0<pos:position pos:line="113" pos:column="17"/></literal></expr>;<pos:position pos:line="113" pos:column="18"/></init> <condition><expr><name pos:line="113" pos:column="19">i<pos:position pos:line="113" pos:column="20"/></name> <operator pos:line="113" pos:column="21">&lt;<pos:position pos:line="113" pos:column="25"/></operator> <name><name pos:line="113" pos:column="23">actx<pos:position pos:line="113" pos:column="27"/></name><operator pos:line="113" pos:column="27">-&gt;<pos:position pos:line="113" pos:column="32"/></operator><name pos:line="113" pos:column="29">idxlen<pos:position pos:line="113" pos:column="35"/></name></name></expr>;<pos:position pos:line="113" pos:column="36"/></condition> <incr><expr><name pos:line="113" pos:column="37">i<pos:position pos:line="113" pos:column="38"/></name><operator pos:line="113" pos:column="38">++<pos:position pos:line="113" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="113" pos:column="41"/></control>
      <block pos:line="114" pos:column="7">{
	<if pos:line="115" pos:column="9">if <condition pos:line="115" pos:column="12">(<expr><name><name pos:line="115" pos:column="13">actx<pos:position pos:line="115" pos:column="17"/></name><operator pos:line="115" pos:column="17">-&gt;<pos:position pos:line="115" pos:column="22"/></operator><name pos:line="115" pos:column="19">idx<pos:position pos:line="115" pos:column="22"/></name><index pos:line="115" pos:column="22">[<expr><name pos:line="115" pos:column="23">i<pos:position pos:line="115" pos:column="24"/></name></expr>]<pos:position pos:line="115" pos:column="25"/></index></name><operator pos:line="115" pos:column="25">-&gt;<pos:position pos:line="115" pos:column="30"/></operator><name><name pos:line="115" pos:column="27">content<pos:position pos:line="115" pos:column="34"/></name><operator pos:line="115" pos:column="34">-&gt;<pos:position pos:line="115" pos:column="39"/></operator><name pos:line="115" pos:column="36">tagged<pos:position pos:line="115" pos:column="42"/></name></name> <operator pos:line="115" pos:column="43">&amp;&amp;<pos:position pos:line="115" pos:column="53"/></operator> <call><name pos:line="115" pos:column="46">mutt_can_decode<pos:position pos:line="115" pos:column="61"/></name> <argument_list pos:line="115" pos:column="62">(<argument><expr><name><name pos:line="115" pos:column="63">actx<pos:position pos:line="115" pos:column="67"/></name><operator pos:line="115" pos:column="67">-&gt;<pos:position pos:line="115" pos:column="72"/></operator><name pos:line="115" pos:column="69">idx<pos:position pos:line="115" pos:column="72"/></name><index pos:line="115" pos:column="72">[<expr><name pos:line="115" pos:column="73">i<pos:position pos:line="115" pos:column="74"/></name></expr>]<pos:position pos:line="115" pos:column="75"/></index></name><operator pos:line="115" pos:column="75">-&gt;<pos:position pos:line="115" pos:column="80"/></operator><name pos:line="115" pos:column="77">content<pos:position pos:line="115" pos:column="84"/></name></expr></argument>)<pos:position pos:line="115" pos:column="85"/></argument_list></call></expr>)<pos:position pos:line="115" pos:column="86"/></condition><then pos:line="115" pos:column="86">
	<block pos:line="116" pos:column="9">{
          <expr_stmt><expr><name><name pos:line="117" pos:column="11">st<pos:position pos:line="117" pos:column="13"/></name><operator pos:line="117" pos:column="13">.<pos:position pos:line="117" pos:column="14"/></operator><name pos:line="117" pos:column="14">fpin<pos:position pos:line="117" pos:column="18"/></name></name> <operator pos:line="117" pos:column="19">=<pos:position pos:line="117" pos:column="20"/></operator> <name><name pos:line="117" pos:column="21">actx<pos:position pos:line="117" pos:column="25"/></name><operator pos:line="117" pos:column="25">-&gt;<pos:position pos:line="117" pos:column="30"/></operator><name pos:line="117" pos:column="27">idx<pos:position pos:line="117" pos:column="30"/></name><index pos:line="117" pos:column="30">[<expr><name pos:line="117" pos:column="31">i<pos:position pos:line="117" pos:column="32"/></name></expr>]<pos:position pos:line="117" pos:column="33"/></index></name><operator pos:line="117" pos:column="33">-&gt;<pos:position pos:line="117" pos:column="38"/></operator><name pos:line="117" pos:column="35">fp<pos:position pos:line="117" pos:column="37"/></name></expr>;<pos:position pos:line="117" pos:column="38"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="118" pos:column="11">mutt_body_handler<pos:position pos:line="118" pos:column="28"/></name> <argument_list pos:line="118" pos:column="29">(<argument><expr><name><name pos:line="118" pos:column="30">actx<pos:position pos:line="118" pos:column="34"/></name><operator pos:line="118" pos:column="34">-&gt;<pos:position pos:line="118" pos:column="39"/></operator><name pos:line="118" pos:column="36">idx<pos:position pos:line="118" pos:column="39"/></name><index pos:line="118" pos:column="39">[<expr><name pos:line="118" pos:column="40">i<pos:position pos:line="118" pos:column="41"/></name></expr>]<pos:position pos:line="118" pos:column="42"/></index></name><operator pos:line="118" pos:column="42">-&gt;<pos:position pos:line="118" pos:column="47"/></operator><name pos:line="118" pos:column="44">content<pos:position pos:line="118" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="118" pos:column="53">&amp;<pos:position pos:line="118" pos:column="58"/></operator><name pos:line="118" pos:column="54">st<pos:position pos:line="118" pos:column="56"/></name></expr></argument>)<pos:position pos:line="118" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="58"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="119" pos:column="11">state_putc<pos:position pos:line="119" pos:column="21"/></name> <argument_list pos:line="119" pos:column="22">(<argument><expr><literal type="char" pos:line="119" pos:column="23">'\n'<pos:position pos:line="119" pos:column="27"/></literal></expr></argument>, <argument><expr><operator pos:line="119" pos:column="29">&amp;<pos:position pos:line="119" pos:column="34"/></operator><name pos:line="119" pos:column="30">st<pos:position pos:line="119" pos:column="32"/></name></expr></argument>)<pos:position pos:line="119" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="120" pos:column="10"/></block></then></if>
      }<pos:position pos:line="121" pos:column="8"/></block></for>
    }<pos:position pos:line="122" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="124" pos:column="5">mutt_make_post_indent<pos:position pos:line="124" pos:column="26"/></name> <argument_list pos:line="124" pos:column="27">(<argument><expr><name pos:line="124" pos:column="28">Context<pos:position pos:line="124" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="37">parent_hdr<pos:position pos:line="124" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="49">tmpfp<pos:position pos:line="124" pos:column="54"/></name></expr></argument>)<pos:position pos:line="124" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="56"/></expr_stmt>

    <if pos:line="126" pos:column="5">if <condition pos:line="126" pos:column="8">(<expr><name pos:line="126" pos:column="9">mime_reply_any<pos:position pos:line="126" pos:column="23"/></name> <operator pos:line="126" pos:column="24">&amp;&amp;<pos:position pos:line="126" pos:column="34"/></operator> <operator pos:line="126" pos:column="27">!<pos:position pos:line="126" pos:column="28"/></operator><name pos:line="126" pos:column="28">cur<pos:position pos:line="126" pos:column="31"/></name> <operator pos:line="126" pos:column="32">&amp;&amp;<pos:position pos:line="126" pos:column="42"/></operator> 
	<call><name pos:line="127" pos:column="9">copy_problematic_attachments<pos:position pos:line="127" pos:column="37"/></name> <argument_list pos:line="127" pos:column="38">(<argument><expr><operator pos:line="127" pos:column="39">&amp;<pos:position pos:line="127" pos:column="44"/></operator><name><name pos:line="127" pos:column="40">tmphdr<pos:position pos:line="127" pos:column="46"/></name><operator pos:line="127" pos:column="46">-&gt;<pos:position pos:line="127" pos:column="51"/></operator><name pos:line="127" pos:column="48">content<pos:position pos:line="127" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="57">actx<pos:position pos:line="127" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="127" pos:column="63">0<pos:position pos:line="127" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="65"/></argument_list></call> <operator pos:line="127" pos:column="66">==<pos:position pos:line="127" pos:column="68"/></operator> <name pos:line="127" pos:column="69">NULL<pos:position pos:line="127" pos:column="73"/></name></expr>)<pos:position pos:line="127" pos:column="74"/></condition><then pos:line="127" pos:column="74">
    <block pos:line="128" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="129" pos:column="7">mutt_free_header<pos:position pos:line="129" pos:column="23"/></name> <argument_list pos:line="129" pos:column="24">(<argument><expr><operator pos:line="129" pos:column="25">&amp;<pos:position pos:line="129" pos:column="30"/></operator><name pos:line="129" pos:column="26">tmphdr<pos:position pos:line="129" pos:column="32"/></name></expr></argument>)<pos:position pos:line="129" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="130" pos:column="7">safe_fclose<pos:position pos:line="130" pos:column="18"/></name> <argument_list pos:line="130" pos:column="19">(<argument><expr><operator pos:line="130" pos:column="20">&amp;<pos:position pos:line="130" pos:column="25"/></operator><name pos:line="130" pos:column="21">tmpfp<pos:position pos:line="130" pos:column="26"/></name></expr></argument>)<pos:position pos:line="130" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="28"/></expr_stmt>
      <return pos:line="131" pos:column="7">return;<pos:position pos:line="131" pos:column="14"/></return>
    }<pos:position pos:line="132" pos:column="6"/></block></then></if>
  }<pos:position pos:line="133" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="135" pos:column="3">safe_fclose<pos:position pos:line="135" pos:column="14"/></name> <argument_list pos:line="135" pos:column="15">(<argument><expr><operator pos:line="135" pos:column="16">&amp;<pos:position pos:line="135" pos:column="21"/></operator><name pos:line="135" pos:column="17">tmpfp<pos:position pos:line="135" pos:column="22"/></name></expr></argument>)<pos:position pos:line="135" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="24"/></expr_stmt>
  
  <if pos:line="137" pos:column="3">if <condition pos:line="137" pos:column="6">(<expr><call><name pos:line="137" pos:column="7">ci_send_message<pos:position pos:line="137" pos:column="22"/></name> <argument_list pos:line="137" pos:column="23">(<argument><expr><name pos:line="137" pos:column="24">flags<pos:position pos:line="137" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="31">tmphdr<pos:position pos:line="137" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="39">tmpbody<pos:position pos:line="137" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="48">NULL<pos:position pos:line="137" pos:column="52"/></name></expr></argument>,
			  <argument><expr><ternary><condition><expr><name pos:line="138" pos:column="27">parent_hdr<pos:position pos:line="138" pos:column="37"/></name></expr> ?<pos:position pos:line="138" pos:column="39"/></condition><then pos:line="138" pos:column="39"> <expr><name pos:line="138" pos:column="40">parent_hdr<pos:position pos:line="138" pos:column="50"/></name></expr> <pos:position pos:line="138" pos:column="51"/></then><else pos:line="138" pos:column="51">: <expr><operator pos:line="138" pos:column="53">(<pos:position pos:line="138" pos:column="54"/></operator><ternary><condition><expr><name pos:line="138" pos:column="54">cur<pos:position pos:line="138" pos:column="57"/></name></expr> ?<pos:position pos:line="138" pos:column="59"/></condition><then pos:line="138" pos:column="59"> <expr><name><name pos:line="138" pos:column="60">cur<pos:position pos:line="138" pos:column="63"/></name><operator pos:line="138" pos:column="63">-&gt;<pos:position pos:line="138" pos:column="68"/></operator><name pos:line="138" pos:column="65">hdr<pos:position pos:line="138" pos:column="68"/></name></name></expr> <pos:position pos:line="138" pos:column="69"/></then><else pos:line="138" pos:column="69">: <expr><name pos:line="138" pos:column="71">NULL<pos:position pos:line="138" pos:column="75"/></name></expr></else></ternary><operator pos:line="138" pos:column="75">)<pos:position pos:line="138" pos:column="76"/></operator></expr></else></ternary></expr></argument>)<pos:position pos:line="138" pos:column="77"/></argument_list></call> <operator pos:line="138" pos:column="78">==<pos:position pos:line="138" pos:column="80"/></operator> <literal type="number" pos:line="138" pos:column="81">0<pos:position pos:line="138" pos:column="82"/></literal></expr>)<pos:position pos:line="138" pos:column="83"/></condition><then pos:line="138" pos:column="83">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="139" pos:column="5">mutt_set_flag<pos:position pos:line="139" pos:column="18"/></name> <argument_list pos:line="139" pos:column="19">(<argument><expr><name pos:line="139" pos:column="20">Context<pos:position pos:line="139" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="29">hdr<pos:position pos:line="139" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="34">MUTT_REPLIED<pos:position pos:line="139" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="139" pos:column="48">1<pos:position pos:line="139" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="51"/></expr_stmt></block></then></if>
}<pos:position pos:line="140" pos:column="2"/></block></function></unit>

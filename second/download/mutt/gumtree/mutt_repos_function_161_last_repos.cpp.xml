<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_161_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">safe_realloc<pos:position pos:line="1" pos:column="18"/></name> <parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">void<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">ptr<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="31">size_t<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">siz<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">void<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">r<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">void<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier><modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">p<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><operator pos:line="4" pos:column="14">(<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="15">void<pos:position pos:line="4" pos:column="19"/></name> <operator pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></operator><operator pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></operator><operator pos:line="4" pos:column="22">)<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">ptr<pos:position pos:line="4" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">siz<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">==<pos:position pos:line="6" pos:column="13"/></operator> <literal type="number" pos:line="6" pos:column="14">0<pos:position pos:line="6" pos:column="15"/></literal></expr>)<pos:position pos:line="6" pos:column="16"/></condition><then pos:line="6" pos:column="16">
  <block pos:line="7" pos:column="3">{
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">p<pos:position pos:line="8" pos:column="11"/></name></expr>)<pos:position pos:line="8" pos:column="12"/></condition><then pos:line="8" pos:column="12">
    <block pos:line="9" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="10" pos:column="7">free<pos:position pos:line="10" pos:column="11"/></name> <argument_list pos:line="10" pos:column="12">(<argument><expr><operator pos:line="10" pos:column="13">*<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">p<pos:position pos:line="10" pos:column="15"/></name></expr></argument>)<pos:position pos:line="10" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt>			<comment type="block" pos:line="10" pos:column="41">/* __MEM_CHECKED__ */</comment>
      <expr_stmt><expr><operator pos:line="11" pos:column="7">*<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">p<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <name pos:line="11" pos:column="12">NULL<pos:position pos:line="11" pos:column="16"/></name></expr>;<pos:position pos:line="11" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
    <return pos:line="13" pos:column="5">return;<pos:position pos:line="13" pos:column="12"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><operator pos:line="16" pos:column="7">*<pos:position pos:line="16" pos:column="8"/></operator><name pos:line="16" pos:column="8">p<pos:position pos:line="16" pos:column="9"/></name></expr>)<pos:position pos:line="16" pos:column="10"/></condition><then pos:line="16" pos:column="10">
    <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="5">r<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <operator pos:line="17" pos:column="9">(<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">void<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">*<pos:position pos:line="17" pos:column="16"/></operator><operator pos:line="17" pos:column="16">)<pos:position pos:line="17" pos:column="17"/></operator> <call><name pos:line="17" pos:column="18">realloc<pos:position pos:line="17" pos:column="25"/></name> <argument_list pos:line="17" pos:column="26">(<argument><expr><operator pos:line="17" pos:column="27">*<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="28">p<pos:position pos:line="17" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="31">siz<pos:position pos:line="17" pos:column="34"/></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt></block></then>	<comment type="block" pos:line="17" pos:column="41">/* __MEM_CHECKED__ */</comment>
  <else pos:line="18" pos:column="3">else
  <block pos:line="19" pos:column="3">{
    <comment type="block" pos:line="20" pos:column="5">/* realloc(NULL, nbytes) doesn't seem to work under SunOS 4.1.x  --- __MEM_CHECKED__ */</comment>
    <expr_stmt><expr><name pos:line="21" pos:column="5">r<pos:position pos:line="21" pos:column="6"/></name> <operator pos:line="21" pos:column="7">=<pos:position pos:line="21" pos:column="8"/></operator> <operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">void<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">*<pos:position pos:line="21" pos:column="16"/></operator><operator pos:line="21" pos:column="16">)<pos:position pos:line="21" pos:column="17"/></operator> <call><name pos:line="21" pos:column="18">malloc<pos:position pos:line="21" pos:column="24"/></name> <argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">siz<pos:position pos:line="21" pos:column="29"/></name></expr></argument>)<pos:position pos:line="21" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt>		<comment type="block" pos:line="21" pos:column="41">/* __MEM_CHECKED__ */</comment>
  }<pos:position pos:line="22" pos:column="4"/></block></else></if>

  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><operator pos:line="24" pos:column="7">!<pos:position pos:line="24" pos:column="8"/></operator><name pos:line="24" pos:column="8">r<pos:position pos:line="24" pos:column="9"/></name></expr>)<pos:position pos:line="24" pos:column="10"/></condition><then pos:line="24" pos:column="10">
  <block pos:line="25" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">mutt_error<pos:position pos:line="26" pos:column="15"/></name></type> <name pos:line="26" pos:column="16">_<pos:position pos:line="26" pos:column="17"/></name><argument_list pos:line="26" pos:column="17">(<argument><expr><literal type="string" pos:line="26" pos:column="18">"Out of memory!"<pos:position pos:line="26" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="35"/></argument_list></decl>;<pos:position pos:line="26" pos:column="36"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">sleep<pos:position pos:line="27" pos:column="10"/></name> <argument_list pos:line="27" pos:column="11">(<argument><expr><literal type="number" pos:line="27" pos:column="12">1<pos:position pos:line="27" pos:column="13"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">mutt_exit<pos:position pos:line="28" pos:column="14"/></name> <argument_list pos:line="28" pos:column="15">(<argument><expr><literal type="number" pos:line="28" pos:column="16">1<pos:position pos:line="28" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="31" pos:column="3">*<pos:position pos:line="31" pos:column="4"/></operator><name pos:line="31" pos:column="4">p<pos:position pos:line="31" pos:column="5"/></name> <operator pos:line="31" pos:column="6">=<pos:position pos:line="31" pos:column="7"/></operator> <name pos:line="31" pos:column="8">r<pos:position pos:line="31" pos:column="9"/></name></expr>;<pos:position pos:line="31" pos:column="10"/></expr_stmt>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

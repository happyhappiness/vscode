<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2010_mutt-1.7.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">imap_add_folder<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">delim<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">folder<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">int<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">noselect<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
  <parameter><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">noinferiors<pos:position pos:line="2" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="20">struct<pos:position pos:line="2" pos:column="26"/></name> <name pos:line="2" pos:column="27">browser_state<pos:position pos:line="2" pos:column="40"/></name></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">state<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">short<pos:position pos:line="2" pos:column="54"/></name></type> <name pos:line="2" pos:column="55">isparent<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">tmp<pos:position pos:line="4" pos:column="11"/></name><index pos:line="4" pos:column="11">[<expr><name pos:line="4" pos:column="12">LONG_STRING<pos:position pos:line="4" pos:column="23"/></name></expr>]<pos:position pos:line="4" pos:column="24"/></index></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">relpath<pos:position pos:line="5" pos:column="15"/></name><index pos:line="5" pos:column="15">[<expr><name pos:line="5" pos:column="16">LONG_STRING<pos:position pos:line="5" pos:column="27"/></name></expr>]<pos:position pos:line="5" pos:column="28"/></index></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">IMAP_MBOX<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">mx<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">BUFFY<pos:position pos:line="7" pos:column="8"/></name> <modifier pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></modifier></type><name pos:line="7" pos:column="10">b<pos:position pos:line="7" pos:column="11"/></name></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><call><name pos:line="9" pos:column="7">imap_parse_path<pos:position pos:line="9" pos:column="22"/></name> <argument_list pos:line="9" pos:column="23">(<argument><expr><name><name pos:line="9" pos:column="24">state<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">folder<pos:position pos:line="9" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="39">&amp;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="40">mx<pos:position pos:line="9" pos:column="42"/></name></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="44"/></condition><then pos:line="9" pos:column="44">
    <block type="pseudo"><return pos:line="10" pos:column="5">return;<pos:position pos:line="10" pos:column="12"/></return></block></then></if>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name><name pos:line="12" pos:column="7">state<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">entrylen<pos:position pos:line="12" pos:column="22"/></name></name> <operator pos:line="12" pos:column="23">+<pos:position pos:line="12" pos:column="24"/></operator> <literal type="number" pos:line="12" pos:column="25">1<pos:position pos:line="12" pos:column="26"/></literal> <operator pos:line="12" pos:column="27">==<pos:position pos:line="12" pos:column="29"/></operator> <name><name pos:line="12" pos:column="30">state<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">entrymax<pos:position pos:line="12" pos:column="45"/></name></name></expr>)<pos:position pos:line="12" pos:column="46"/></condition><then pos:line="12" pos:column="46">
  <block pos:line="13" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">safe_realloc<pos:position pos:line="14" pos:column="17"/></name> <argument_list pos:line="14" pos:column="18">(<argument><expr><operator pos:line="14" pos:column="19">&amp;<pos:position pos:line="14" pos:column="24"/></operator><name><name pos:line="14" pos:column="20">state<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">-&gt;<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="27">entry<pos:position pos:line="14" pos:column="32"/></name></name></expr></argument>,
      <argument><expr><sizeof pos:line="15" pos:column="7">sizeof <argument_list pos:line="15" pos:column="14">(<argument><expr pos:line="15" pos:column="15">struct <name pos:line="15" pos:column="22">folder_file<pos:position pos:line="15" pos:column="33"/></name></expr></argument>)<pos:position pos:line="15" pos:column="34"/></argument_list></sizeof> <operator pos:line="15" pos:column="35">*<pos:position pos:line="15" pos:column="36"/></operator> <operator pos:line="15" pos:column="37">(<pos:position pos:line="15" pos:column="38"/></operator><name><name pos:line="15" pos:column="38">state<pos:position pos:line="15" pos:column="43"/></name><operator pos:line="15" pos:column="43">-&gt;<pos:position pos:line="15" pos:column="48"/></operator><name pos:line="15" pos:column="45">entrymax<pos:position pos:line="15" pos:column="53"/></name></name> <operator pos:line="15" pos:column="54">+=<pos:position pos:line="15" pos:column="56"/></operator> <literal type="number" pos:line="15" pos:column="57">256<pos:position pos:line="15" pos:column="60"/></literal><operator pos:line="15" pos:column="60">)<pos:position pos:line="15" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">memset<pos:position pos:line="16" pos:column="11"/></name> <argument_list pos:line="16" pos:column="12">(<argument><expr><name><name pos:line="16" pos:column="13">state<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">entry<pos:position pos:line="16" pos:column="25"/></name></name> <operator pos:line="16" pos:column="26">+<pos:position pos:line="16" pos:column="27"/></operator> <name><name pos:line="16" pos:column="28">state<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">-&gt;<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="35">entrylen<pos:position pos:line="16" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="45">0<pos:position pos:line="16" pos:column="46"/></literal></expr></argument>,
      <argument><expr><operator pos:line="17" pos:column="7">(<pos:position pos:line="17" pos:column="8"/></operator><sizeof pos:line="17" pos:column="8">sizeof <argument_list pos:line="17" pos:column="15">(<argument><expr pos:line="17" pos:column="16">struct <name pos:line="17" pos:column="23">folder_file<pos:position pos:line="17" pos:column="34"/></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></sizeof> <operator pos:line="17" pos:column="36">*<pos:position pos:line="17" pos:column="37"/></operator> <operator pos:line="17" pos:column="38">(<pos:position pos:line="17" pos:column="39"/></operator><name><name pos:line="17" pos:column="39">state<pos:position pos:line="17" pos:column="44"/></name><operator pos:line="17" pos:column="44">-&gt;<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="46">entrymax<pos:position pos:line="17" pos:column="54"/></name></name> <operator pos:line="17" pos:column="55">-<pos:position pos:line="17" pos:column="56"/></operator> <name><name pos:line="17" pos:column="57">state<pos:position pos:line="17" pos:column="62"/></name><operator pos:line="17" pos:column="62">-&gt;<pos:position pos:line="17" pos:column="67"/></operator><name pos:line="17" pos:column="64">entrylen<pos:position pos:line="17" pos:column="72"/></name></name><operator pos:line="17" pos:column="72">)<pos:position pos:line="17" pos:column="73"/></operator><operator pos:line="17" pos:column="73">)<pos:position pos:line="17" pos:column="74"/></operator></expr></argument>)<pos:position pos:line="17" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="76"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="20" pos:column="3">/* render superiors as unix-standard ".." */</comment>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">isparent<pos:position pos:line="21" pos:column="15"/></name></expr>)<pos:position pos:line="21" pos:column="16"/></condition><then pos:line="21" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="5">strfcpy<pos:position pos:line="22" pos:column="12"/></name> <argument_list pos:line="22" pos:column="13">(<argument><expr><name pos:line="22" pos:column="14">relpath<pos:position pos:line="22" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="23">"../"<pos:position pos:line="22" pos:column="28"/></literal></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="30">sizeof <argument_list pos:line="22" pos:column="37">(<argument><expr><name pos:line="22" pos:column="38">relpath<pos:position pos:line="22" pos:column="45"/></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="48"/></expr_stmt></block></then>
  <comment type="block" pos:line="23" pos:column="3">/* strip current folder from target, to render a relative path */</comment>
  <elseif pos:line="24" pos:column="3">else <if pos:line="24" pos:column="8">if <condition pos:line="24" pos:column="11">(<expr><operator pos:line="24" pos:column="12">!<pos:position pos:line="24" pos:column="13"/></operator><call><name pos:line="24" pos:column="13">mutt_strncmp<pos:position pos:line="24" pos:column="25"/></name> <argument_list pos:line="24" pos:column="26">(<argument><expr><name><name pos:line="24" pos:column="27">mx<pos:position pos:line="24" pos:column="29"/></name><operator pos:line="24" pos:column="29">.<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="30">mbox<pos:position pos:line="24" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="36">folder<pos:position pos:line="24" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="44">mutt_strlen<pos:position pos:line="24" pos:column="55"/></name> <argument_list pos:line="24" pos:column="56">(<argument><expr><name><name pos:line="24" pos:column="57">mx<pos:position pos:line="24" pos:column="59"/></name><operator pos:line="24" pos:column="59">.<pos:position pos:line="24" pos:column="60"/></operator><name pos:line="24" pos:column="60">mbox<pos:position pos:line="24" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="67"/></condition><then pos:line="24" pos:column="67">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="5">strfcpy<pos:position pos:line="25" pos:column="12"/></name> <argument_list pos:line="25" pos:column="13">(<argument><expr><name pos:line="25" pos:column="14">relpath<pos:position pos:line="25" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="23">folder<pos:position pos:line="25" pos:column="29"/></name> <operator pos:line="25" pos:column="30">+<pos:position pos:line="25" pos:column="31"/></operator> <call><name pos:line="25" pos:column="32">mutt_strlen<pos:position pos:line="25" pos:column="43"/></name> <argument_list pos:line="25" pos:column="44">(<argument><expr><name><name pos:line="25" pos:column="45">mx<pos:position pos:line="25" pos:column="47"/></name><operator pos:line="25" pos:column="47">.<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="48">mbox<pos:position pos:line="25" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="55">sizeof <argument_list pos:line="25" pos:column="62">(<argument><expr><name pos:line="25" pos:column="63">relpath<pos:position pos:line="25" pos:column="70"/></name></expr></argument>)<pos:position pos:line="25" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="73"/></expr_stmt></block></then></if></elseif>
  <else pos:line="26" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="5">strfcpy<pos:position pos:line="27" pos:column="12"/></name> <argument_list pos:line="27" pos:column="13">(<argument><expr><name pos:line="27" pos:column="14">relpath<pos:position pos:line="27" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="23">folder<pos:position pos:line="27" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="31">sizeof <argument_list pos:line="27" pos:column="38">(<argument><expr><name pos:line="27" pos:column="39">relpath<pos:position pos:line="27" pos:column="46"/></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="29" pos:column="3">/* apply filemask filter. This should really be done at menu setup rather
   * than at scan, since it's so expensive to scan. But that's big changes
   * to browser.c */</comment>
  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><operator pos:line="32" pos:column="7">!<pos:position pos:line="32" pos:column="8"/></operator><operator pos:line="32" pos:column="8">(<pos:position pos:line="32" pos:column="9"/></operator><operator pos:line="32" pos:column="9">(<pos:position pos:line="32" pos:column="10"/></operator><call><name pos:line="32" pos:column="10">regexec<pos:position pos:line="32" pos:column="17"/></name> <argument_list pos:line="32" pos:column="18">(<argument><expr><name><name pos:line="32" pos:column="19">Mask<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">.<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="24">rx<pos:position pos:line="32" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="28">relpath<pos:position pos:line="32" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="37">0<pos:position pos:line="32" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="40">NULL<pos:position pos:line="32" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="46">0<pos:position pos:line="32" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call> <operator pos:line="32" pos:column="49">==<pos:position pos:line="32" pos:column="51"/></operator> <literal type="number" pos:line="32" pos:column="52">0<pos:position pos:line="32" pos:column="53"/></literal><operator pos:line="32" pos:column="53">)<pos:position pos:line="32" pos:column="54"/></operator> <operator pos:line="32" pos:column="55">^<pos:position pos:line="32" pos:column="56"/></operator> <name><name pos:line="32" pos:column="57">Mask<pos:position pos:line="32" pos:column="61"/></name><operator pos:line="32" pos:column="61">.<pos:position pos:line="32" pos:column="62"/></operator></name><operator pos:line="32" pos:column="62">not<pos:position pos:line="32" pos:column="65"/></operator><operator pos:line="32" pos:column="65">)<pos:position pos:line="32" pos:column="66"/></operator></expr>)<pos:position pos:line="32" pos:column="67"/></condition><then pos:line="32" pos:column="67">
  <block pos:line="33" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">FREE<pos:position pos:line="34" pos:column="9"/></name> <argument_list pos:line="34" pos:column="10">(<argument><expr><operator pos:line="34" pos:column="11">&amp;<pos:position pos:line="34" pos:column="16"/></operator><name><name pos:line="34" pos:column="12">mx<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">.<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="15">mbox<pos:position pos:line="34" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="21"/></expr_stmt>
    <return pos:line="35" pos:column="5">return;<pos:position pos:line="35" pos:column="12"/></return>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="38" pos:column="3">imap_qualify_path<pos:position pos:line="38" pos:column="20"/></name> <argument_list pos:line="38" pos:column="21">(<argument><expr><name pos:line="38" pos:column="22">tmp<pos:position pos:line="38" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="27">sizeof <argument_list pos:line="38" pos:column="34">(<argument><expr><name pos:line="38" pos:column="35">tmp<pos:position pos:line="38" pos:column="38"/></name></expr></argument>)<pos:position pos:line="38" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="38" pos:column="41">&amp;<pos:position pos:line="38" pos:column="46"/></operator><name pos:line="38" pos:column="42">mx<pos:position pos:line="38" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="46">folder<pos:position pos:line="38" pos:column="52"/></name></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="39" pos:column="3">(<pos:position pos:line="39" pos:column="4"/></operator><name><name pos:line="39" pos:column="4">state<pos:position pos:line="39" pos:column="9"/></name><operator pos:line="39" pos:column="9">-&gt;<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="11">entry<pos:position pos:line="39" pos:column="16"/></name></name><operator pos:line="39" pos:column="16">)<pos:position pos:line="39" pos:column="17"/></operator><index pos:line="39" pos:column="17">[<expr><name><name pos:line="39" pos:column="18">state<pos:position pos:line="39" pos:column="23"/></name><operator pos:line="39" pos:column="23">-&gt;<pos:position pos:line="39" pos:column="28"/></operator><name pos:line="39" pos:column="25">entrylen<pos:position pos:line="39" pos:column="33"/></name></name></expr>]<pos:position pos:line="39" pos:column="34"/></index><operator pos:line="39" pos:column="34">.<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="35">name<pos:position pos:line="39" pos:column="39"/></name> <operator pos:line="39" pos:column="40">=<pos:position pos:line="39" pos:column="41"/></operator> <call><name pos:line="39" pos:column="42">safe_strdup<pos:position pos:line="39" pos:column="53"/></name> <argument_list pos:line="39" pos:column="54">(<argument><expr><name pos:line="39" pos:column="55">tmp<pos:position pos:line="39" pos:column="58"/></name></expr></argument>)<pos:position pos:line="39" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="60"/></expr_stmt>

  <comment type="block" pos:line="41" pos:column="3">/* mark desc with delim in browser if it can have subfolders */</comment>
  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><operator pos:line="42" pos:column="7">!<pos:position pos:line="42" pos:column="8"/></operator><name pos:line="42" pos:column="8">isparent<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">&amp;&amp;<pos:position pos:line="42" pos:column="27"/></operator> <operator pos:line="42" pos:column="20">!<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="21">noinferiors<pos:position pos:line="42" pos:column="32"/></name> <operator pos:line="42" pos:column="33">&amp;&amp;<pos:position pos:line="42" pos:column="43"/></operator> <call><name pos:line="42" pos:column="36">strlen<pos:position pos:line="42" pos:column="42"/></name> <argument_list pos:line="42" pos:column="43">(<argument><expr><name pos:line="42" pos:column="44">relpath<pos:position pos:line="42" pos:column="51"/></name></expr></argument>)<pos:position pos:line="42" pos:column="52"/></argument_list></call> <operator pos:line="42" pos:column="53">&lt;<pos:position pos:line="42" pos:column="57"/></operator> <sizeof pos:line="42" pos:column="55">sizeof <argument_list pos:line="42" pos:column="62">(<argument><expr><name pos:line="42" pos:column="63">relpath<pos:position pos:line="42" pos:column="70"/></name></expr></argument>)<pos:position pos:line="42" pos:column="71"/></argument_list></sizeof> <operator pos:line="42" pos:column="72">-<pos:position pos:line="42" pos:column="73"/></operator> <literal type="number" pos:line="42" pos:column="74">1<pos:position pos:line="42" pos:column="75"/></literal></expr>)<pos:position pos:line="42" pos:column="76"/></condition><then pos:line="42" pos:column="76">
  <block pos:line="43" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">relpath<pos:position pos:line="44" pos:column="12"/></name><index pos:line="44" pos:column="12">[<expr><call><name pos:line="44" pos:column="13">strlen<pos:position pos:line="44" pos:column="19"/></name> <argument_list pos:line="44" pos:column="20">(<argument><expr><name pos:line="44" pos:column="21">relpath<pos:position pos:line="44" pos:column="28"/></name></expr></argument>)<pos:position pos:line="44" pos:column="29"/></argument_list></call> <operator pos:line="44" pos:column="30">+<pos:position pos:line="44" pos:column="31"/></operator> <literal type="number" pos:line="44" pos:column="32">1<pos:position pos:line="44" pos:column="33"/></literal></expr>]<pos:position pos:line="44" pos:column="34"/></index></name> <operator pos:line="44" pos:column="35">=<pos:position pos:line="44" pos:column="36"/></operator> <literal type="char" pos:line="44" pos:column="37">'\0'<pos:position pos:line="44" pos:column="41"/></literal></expr>;<pos:position pos:line="44" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">relpath<pos:position pos:line="45" pos:column="12"/></name><index pos:line="45" pos:column="12">[<expr><call><name pos:line="45" pos:column="13">strlen<pos:position pos:line="45" pos:column="19"/></name> <argument_list pos:line="45" pos:column="20">(<argument><expr><name pos:line="45" pos:column="21">relpath<pos:position pos:line="45" pos:column="28"/></name></expr></argument>)<pos:position pos:line="45" pos:column="29"/></argument_list></call></expr>]<pos:position pos:line="45" pos:column="30"/></index></name> <operator pos:line="45" pos:column="31">=<pos:position pos:line="45" pos:column="32"/></operator> <name pos:line="45" pos:column="33">delim<pos:position pos:line="45" pos:column="38"/></name></expr>;<pos:position pos:line="45" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="46" pos:column="4"/></block></then></if>
  
  <expr_stmt><expr><operator pos:line="48" pos:column="3">(<pos:position pos:line="48" pos:column="4"/></operator><name><name pos:line="48" pos:column="4">state<pos:position pos:line="48" pos:column="9"/></name><operator pos:line="48" pos:column="9">-&gt;<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="11">entry<pos:position pos:line="48" pos:column="16"/></name></name><operator pos:line="48" pos:column="16">)<pos:position pos:line="48" pos:column="17"/></operator><index pos:line="48" pos:column="17">[<expr><name><name pos:line="48" pos:column="18">state<pos:position pos:line="48" pos:column="23"/></name><operator pos:line="48" pos:column="23">-&gt;<pos:position pos:line="48" pos:column="28"/></operator><name pos:line="48" pos:column="25">entrylen<pos:position pos:line="48" pos:column="33"/></name></name></expr>]<pos:position pos:line="48" pos:column="34"/></index><operator pos:line="48" pos:column="34">.<pos:position pos:line="48" pos:column="35"/></operator><name pos:line="48" pos:column="35">desc<pos:position pos:line="48" pos:column="39"/></name> <operator pos:line="48" pos:column="40">=<pos:position pos:line="48" pos:column="41"/></operator> <call><name pos:line="48" pos:column="42">safe_strdup<pos:position pos:line="48" pos:column="53"/></name> <argument_list pos:line="48" pos:column="54">(<argument><expr><name pos:line="48" pos:column="55">relpath<pos:position pos:line="48" pos:column="62"/></name></expr></argument>)<pos:position pos:line="48" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="64"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="50" pos:column="3">(<pos:position pos:line="50" pos:column="4"/></operator><name><name pos:line="50" pos:column="4">state<pos:position pos:line="50" pos:column="9"/></name><operator pos:line="50" pos:column="9">-&gt;<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="11">entry<pos:position pos:line="50" pos:column="16"/></name></name><operator pos:line="50" pos:column="16">)<pos:position pos:line="50" pos:column="17"/></operator><index pos:line="50" pos:column="17">[<expr><name><name pos:line="50" pos:column="18">state<pos:position pos:line="50" pos:column="23"/></name><operator pos:line="50" pos:column="23">-&gt;<pos:position pos:line="50" pos:column="28"/></operator><name pos:line="50" pos:column="25">entrylen<pos:position pos:line="50" pos:column="33"/></name></name></expr>]<pos:position pos:line="50" pos:column="34"/></index><operator pos:line="50" pos:column="34">.<pos:position pos:line="50" pos:column="35"/></operator><name pos:line="50" pos:column="35">imap<pos:position pos:line="50" pos:column="39"/></name> <operator pos:line="50" pos:column="40">=<pos:position pos:line="50" pos:column="41"/></operator> <literal type="number" pos:line="50" pos:column="42">1<pos:position pos:line="50" pos:column="43"/></literal></expr>;<pos:position pos:line="50" pos:column="44"/></expr_stmt>
  <comment type="block" pos:line="51" pos:column="3">/* delimiter at the root is useless. */</comment>
  <if pos:line="52" pos:column="3">if <condition pos:line="52" pos:column="6">(<expr><name><name pos:line="52" pos:column="7">folder<pos:position pos:line="52" pos:column="13"/></name><index pos:line="52" pos:column="13">[<expr><literal type="number" pos:line="52" pos:column="14">0<pos:position pos:line="52" pos:column="15"/></literal></expr>]<pos:position pos:line="52" pos:column="16"/></index></name> <operator pos:line="52" pos:column="17">==<pos:position pos:line="52" pos:column="19"/></operator> <literal type="char" pos:line="52" pos:column="20">'\0'<pos:position pos:line="52" pos:column="24"/></literal></expr>)<pos:position pos:line="52" pos:column="25"/></condition><then pos:line="52" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="5">delim<pos:position pos:line="53" pos:column="10"/></name> <operator pos:line="53" pos:column="11">=<pos:position pos:line="53" pos:column="12"/></operator> <literal type="char" pos:line="53" pos:column="13">'\0'<pos:position pos:line="53" pos:column="17"/></literal></expr>;<pos:position pos:line="53" pos:column="18"/></expr_stmt></block></then></if>
  <expr_stmt><expr><operator pos:line="54" pos:column="3">(<pos:position pos:line="54" pos:column="4"/></operator><name><name pos:line="54" pos:column="4">state<pos:position pos:line="54" pos:column="9"/></name><operator pos:line="54" pos:column="9">-&gt;<pos:position pos:line="54" pos:column="14"/></operator><name pos:line="54" pos:column="11">entry<pos:position pos:line="54" pos:column="16"/></name></name><operator pos:line="54" pos:column="16">)<pos:position pos:line="54" pos:column="17"/></operator><index pos:line="54" pos:column="17">[<expr><name><name pos:line="54" pos:column="18">state<pos:position pos:line="54" pos:column="23"/></name><operator pos:line="54" pos:column="23">-&gt;<pos:position pos:line="54" pos:column="28"/></operator><name pos:line="54" pos:column="25">entrylen<pos:position pos:line="54" pos:column="33"/></name></name></expr>]<pos:position pos:line="54" pos:column="34"/></index><operator pos:line="54" pos:column="34">.<pos:position pos:line="54" pos:column="35"/></operator><name pos:line="54" pos:column="35">delim<pos:position pos:line="54" pos:column="40"/></name> <operator pos:line="54" pos:column="41">=<pos:position pos:line="54" pos:column="42"/></operator> <name pos:line="54" pos:column="43">delim<pos:position pos:line="54" pos:column="48"/></name></expr>;<pos:position pos:line="54" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="55" pos:column="3">(<pos:position pos:line="55" pos:column="4"/></operator><name><name pos:line="55" pos:column="4">state<pos:position pos:line="55" pos:column="9"/></name><operator pos:line="55" pos:column="9">-&gt;<pos:position pos:line="55" pos:column="14"/></operator><name pos:line="55" pos:column="11">entry<pos:position pos:line="55" pos:column="16"/></name></name><operator pos:line="55" pos:column="16">)<pos:position pos:line="55" pos:column="17"/></operator><index pos:line="55" pos:column="17">[<expr><name><name pos:line="55" pos:column="18">state<pos:position pos:line="55" pos:column="23"/></name><operator pos:line="55" pos:column="23">-&gt;<pos:position pos:line="55" pos:column="28"/></operator><name pos:line="55" pos:column="25">entrylen<pos:position pos:line="55" pos:column="33"/></name></name></expr>]<pos:position pos:line="55" pos:column="34"/></index><operator pos:line="55" pos:column="34">.<pos:position pos:line="55" pos:column="35"/></operator><name pos:line="55" pos:column="35">selectable<pos:position pos:line="55" pos:column="45"/></name> <operator pos:line="55" pos:column="46">=<pos:position pos:line="55" pos:column="47"/></operator> <operator pos:line="55" pos:column="48">!<pos:position pos:line="55" pos:column="49"/></operator><name pos:line="55" pos:column="49">noselect<pos:position pos:line="55" pos:column="57"/></name></expr>;<pos:position pos:line="55" pos:column="58"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="56" pos:column="3">(<pos:position pos:line="56" pos:column="4"/></operator><name><name pos:line="56" pos:column="4">state<pos:position pos:line="56" pos:column="9"/></name><operator pos:line="56" pos:column="9">-&gt;<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="11">entry<pos:position pos:line="56" pos:column="16"/></name></name><operator pos:line="56" pos:column="16">)<pos:position pos:line="56" pos:column="17"/></operator><index pos:line="56" pos:column="17">[<expr><name><name pos:line="56" pos:column="18">state<pos:position pos:line="56" pos:column="23"/></name><operator pos:line="56" pos:column="23">-&gt;<pos:position pos:line="56" pos:column="28"/></operator><name pos:line="56" pos:column="25">entrylen<pos:position pos:line="56" pos:column="33"/></name></name></expr>]<pos:position pos:line="56" pos:column="34"/></index><operator pos:line="56" pos:column="34">.<pos:position pos:line="56" pos:column="35"/></operator><name pos:line="56" pos:column="35">inferiors<pos:position pos:line="56" pos:column="44"/></name> <operator pos:line="56" pos:column="45">=<pos:position pos:line="56" pos:column="46"/></operator> <operator pos:line="56" pos:column="47">!<pos:position pos:line="56" pos:column="48"/></operator><name pos:line="56" pos:column="48">noinferiors<pos:position pos:line="56" pos:column="59"/></name></expr>;<pos:position pos:line="56" pos:column="60"/></expr_stmt>

  <expr_stmt><expr><name pos:line="58" pos:column="3">b<pos:position pos:line="58" pos:column="4"/></name> <operator pos:line="58" pos:column="5">=<pos:position pos:line="58" pos:column="6"/></operator> <name pos:line="58" pos:column="7">Incoming<pos:position pos:line="58" pos:column="15"/></name></expr>;<pos:position pos:line="58" pos:column="16"/></expr_stmt>
  <while pos:line="59" pos:column="3">while <condition pos:line="59" pos:column="9">(<expr><name pos:line="59" pos:column="10">b<pos:position pos:line="59" pos:column="11"/></name> <operator pos:line="59" pos:column="12">&amp;&amp;<pos:position pos:line="59" pos:column="22"/></operator> <call><name pos:line="59" pos:column="15">mutt_strcmp<pos:position pos:line="59" pos:column="26"/></name> <argument_list pos:line="59" pos:column="27">(<argument><expr><name pos:line="59" pos:column="28">tmp<pos:position pos:line="59" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="33">b<pos:position pos:line="59" pos:column="34"/></name><operator pos:line="59" pos:column="34">-&gt;<pos:position pos:line="59" pos:column="39"/></operator><name pos:line="59" pos:column="36">path<pos:position pos:line="59" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="42"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="60" pos:column="5">b<pos:position pos:line="60" pos:column="6"/></name> <operator pos:line="60" pos:column="7">=<pos:position pos:line="60" pos:column="8"/></operator> <name><name pos:line="60" pos:column="9">b<pos:position pos:line="60" pos:column="10"/></name><operator pos:line="60" pos:column="10">-&gt;<pos:position pos:line="60" pos:column="15"/></operator><name pos:line="60" pos:column="12">next<pos:position pos:line="60" pos:column="16"/></name></name></expr>;<pos:position pos:line="60" pos:column="17"/></expr_stmt></block></while>
  <if pos:line="61" pos:column="3">if <condition pos:line="61" pos:column="6">(<expr><name pos:line="61" pos:column="7">b<pos:position pos:line="61" pos:column="8"/></name></expr>)<pos:position pos:line="61" pos:column="9"/></condition><then pos:line="61" pos:column="9">
  <block pos:line="62" pos:column="3">{
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><name pos:line="63" pos:column="9">Context<pos:position pos:line="63" pos:column="16"/></name> <operator pos:line="63" pos:column="17">&amp;&amp;<pos:position pos:line="63" pos:column="27"/></operator>
        <operator pos:line="64" pos:column="9">!<pos:position pos:line="64" pos:column="10"/></operator><call><name pos:line="64" pos:column="10">mutt_strcmp<pos:position pos:line="64" pos:column="21"/></name> <argument_list pos:line="64" pos:column="22">(<argument><expr><name><name pos:line="64" pos:column="23">b<pos:position pos:line="64" pos:column="24"/></name><operator pos:line="64" pos:column="24">-&gt;<pos:position pos:line="64" pos:column="29"/></operator><name pos:line="64" pos:column="26">realpath<pos:position pos:line="64" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="36">Context<pos:position pos:line="64" pos:column="43"/></name><operator pos:line="64" pos:column="43">-&gt;<pos:position pos:line="64" pos:column="48"/></operator><name pos:line="64" pos:column="45">realpath<pos:position pos:line="64" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="55"/></condition><then pos:line="64" pos:column="55">
    <block pos:line="65" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="66" pos:column="7">b<pos:position pos:line="66" pos:column="8"/></name><operator pos:line="66" pos:column="8">-&gt;<pos:position pos:line="66" pos:column="13"/></operator><name pos:line="66" pos:column="10">msg_count<pos:position pos:line="66" pos:column="19"/></name></name> <operator pos:line="66" pos:column="20">=<pos:position pos:line="66" pos:column="21"/></operator> <name><name pos:line="66" pos:column="22">Context<pos:position pos:line="66" pos:column="29"/></name><operator pos:line="66" pos:column="29">-&gt;<pos:position pos:line="66" pos:column="34"/></operator><name pos:line="66" pos:column="31">msgcount<pos:position pos:line="66" pos:column="39"/></name></name></expr>;<pos:position pos:line="66" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="67" pos:column="7">b<pos:position pos:line="67" pos:column="8"/></name><operator pos:line="67" pos:column="8">-&gt;<pos:position pos:line="67" pos:column="13"/></operator><name pos:line="67" pos:column="10">msg_unread<pos:position pos:line="67" pos:column="20"/></name></name> <operator pos:line="67" pos:column="21">=<pos:position pos:line="67" pos:column="22"/></operator> <name><name pos:line="67" pos:column="23">Context<pos:position pos:line="67" pos:column="30"/></name><operator pos:line="67" pos:column="30">-&gt;<pos:position pos:line="67" pos:column="35"/></operator><name pos:line="67" pos:column="32">unread<pos:position pos:line="67" pos:column="38"/></name></name></expr>;<pos:position pos:line="67" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="69" pos:column="5">(<pos:position pos:line="69" pos:column="6"/></operator><name><name pos:line="69" pos:column="6">state<pos:position pos:line="69" pos:column="11"/></name><operator pos:line="69" pos:column="11">-&gt;<pos:position pos:line="69" pos:column="16"/></operator><name pos:line="69" pos:column="13">entry<pos:position pos:line="69" pos:column="18"/></name></name><operator pos:line="69" pos:column="18">)<pos:position pos:line="69" pos:column="19"/></operator><index pos:line="69" pos:column="19">[<expr><name><name pos:line="69" pos:column="20">state<pos:position pos:line="69" pos:column="25"/></name><operator pos:line="69" pos:column="25">-&gt;<pos:position pos:line="69" pos:column="30"/></operator><name pos:line="69" pos:column="27">entrylen<pos:position pos:line="69" pos:column="35"/></name></name></expr>]<pos:position pos:line="69" pos:column="36"/></index><operator pos:line="69" pos:column="36">.<pos:position pos:line="69" pos:column="37"/></operator><name pos:line="69" pos:column="37">has_buffy<pos:position pos:line="69" pos:column="46"/></name> <operator pos:line="69" pos:column="47">=<pos:position pos:line="69" pos:column="48"/></operator> <literal type="number" pos:line="69" pos:column="49">1<pos:position pos:line="69" pos:column="50"/></literal></expr>;<pos:position pos:line="69" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="70" pos:column="5">(<pos:position pos:line="70" pos:column="6"/></operator><name><name pos:line="70" pos:column="6">state<pos:position pos:line="70" pos:column="11"/></name><operator pos:line="70" pos:column="11">-&gt;<pos:position pos:line="70" pos:column="16"/></operator><name pos:line="70" pos:column="13">entry<pos:position pos:line="70" pos:column="18"/></name></name><operator pos:line="70" pos:column="18">)<pos:position pos:line="70" pos:column="19"/></operator><index pos:line="70" pos:column="19">[<expr><name><name pos:line="70" pos:column="20">state<pos:position pos:line="70" pos:column="25"/></name><operator pos:line="70" pos:column="25">-&gt;<pos:position pos:line="70" pos:column="30"/></operator><name pos:line="70" pos:column="27">entrylen<pos:position pos:line="70" pos:column="35"/></name></name></expr>]<pos:position pos:line="70" pos:column="36"/></index><operator pos:line="70" pos:column="36">.<pos:position pos:line="70" pos:column="37"/></operator><operator pos:line="70" pos:column="37">new<pos:position pos:line="70" pos:column="40"/></operator> <operator pos:line="70" pos:column="41">=<pos:position pos:line="70" pos:column="42"/></operator> <name><name pos:line="70" pos:column="43">b<pos:position pos:line="70" pos:column="44"/></name><operator pos:line="70" pos:column="44">-&gt;<pos:position pos:line="70" pos:column="49"/></operator></name><operator pos:line="70" pos:column="46">new<pos:position pos:line="70" pos:column="49"/></operator></expr>;<pos:position pos:line="70" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="71" pos:column="5">(<pos:position pos:line="71" pos:column="6"/></operator><name><name pos:line="71" pos:column="6">state<pos:position pos:line="71" pos:column="11"/></name><operator pos:line="71" pos:column="11">-&gt;<pos:position pos:line="71" pos:column="16"/></operator><name pos:line="71" pos:column="13">entry<pos:position pos:line="71" pos:column="18"/></name></name><operator pos:line="71" pos:column="18">)<pos:position pos:line="71" pos:column="19"/></operator><index pos:line="71" pos:column="19">[<expr><name><name pos:line="71" pos:column="20">state<pos:position pos:line="71" pos:column="25"/></name><operator pos:line="71" pos:column="25">-&gt;<pos:position pos:line="71" pos:column="30"/></operator><name pos:line="71" pos:column="27">entrylen<pos:position pos:line="71" pos:column="35"/></name></name></expr>]<pos:position pos:line="71" pos:column="36"/></index><operator pos:line="71" pos:column="36">.<pos:position pos:line="71" pos:column="37"/></operator><name pos:line="71" pos:column="37">msg_count<pos:position pos:line="71" pos:column="46"/></name> <operator pos:line="71" pos:column="47">=<pos:position pos:line="71" pos:column="48"/></operator> <name><name pos:line="71" pos:column="49">b<pos:position pos:line="71" pos:column="50"/></name><operator pos:line="71" pos:column="50">-&gt;<pos:position pos:line="71" pos:column="55"/></operator><name pos:line="71" pos:column="52">msg_count<pos:position pos:line="71" pos:column="61"/></name></name></expr>;<pos:position pos:line="71" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="72" pos:column="5">(<pos:position pos:line="72" pos:column="6"/></operator><name><name pos:line="72" pos:column="6">state<pos:position pos:line="72" pos:column="11"/></name><operator pos:line="72" pos:column="11">-&gt;<pos:position pos:line="72" pos:column="16"/></operator><name pos:line="72" pos:column="13">entry<pos:position pos:line="72" pos:column="18"/></name></name><operator pos:line="72" pos:column="18">)<pos:position pos:line="72" pos:column="19"/></operator><index pos:line="72" pos:column="19">[<expr><name><name pos:line="72" pos:column="20">state<pos:position pos:line="72" pos:column="25"/></name><operator pos:line="72" pos:column="25">-&gt;<pos:position pos:line="72" pos:column="30"/></operator><name pos:line="72" pos:column="27">entrylen<pos:position pos:line="72" pos:column="35"/></name></name></expr>]<pos:position pos:line="72" pos:column="36"/></index><operator pos:line="72" pos:column="36">.<pos:position pos:line="72" pos:column="37"/></operator><name pos:line="72" pos:column="37">msg_unread<pos:position pos:line="72" pos:column="47"/></name> <operator pos:line="72" pos:column="48">=<pos:position pos:line="72" pos:column="49"/></operator> <name><name pos:line="72" pos:column="50">b<pos:position pos:line="72" pos:column="51"/></name><operator pos:line="72" pos:column="51">-&gt;<pos:position pos:line="72" pos:column="56"/></operator><name pos:line="72" pos:column="53">msg_unread<pos:position pos:line="72" pos:column="63"/></name></name></expr>;<pos:position pos:line="72" pos:column="64"/></expr_stmt>
  }<pos:position pos:line="73" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="75" pos:column="3">(<pos:position pos:line="75" pos:column="4"/></operator><name><name pos:line="75" pos:column="4">state<pos:position pos:line="75" pos:column="9"/></name><operator pos:line="75" pos:column="9">-&gt;<pos:position pos:line="75" pos:column="14"/></operator><name pos:line="75" pos:column="11">entrylen<pos:position pos:line="75" pos:column="19"/></name></name><operator pos:line="75" pos:column="19">)<pos:position pos:line="75" pos:column="20"/></operator><operator pos:line="75" pos:column="20">++<pos:position pos:line="75" pos:column="22"/></operator></expr>;<pos:position pos:line="75" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="77" pos:column="3">FREE<pos:position pos:line="77" pos:column="7"/></name> <argument_list pos:line="77" pos:column="8">(<argument><expr><operator pos:line="77" pos:column="9">&amp;<pos:position pos:line="77" pos:column="14"/></operator><name><name pos:line="77" pos:column="10">mx<pos:position pos:line="77" pos:column="12"/></name><operator pos:line="77" pos:column="12">.<pos:position pos:line="77" pos:column="13"/></operator><name pos:line="77" pos:column="13">mbox<pos:position pos:line="77" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="19"/></expr_stmt>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

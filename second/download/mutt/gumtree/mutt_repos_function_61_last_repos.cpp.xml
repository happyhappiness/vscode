<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_61_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">format_line<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">FILE<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">f<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">int<pos:position pos:line="1" pos:column="38"/></name></type> <name pos:line="1" pos:column="39">ismacro<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>,
			 <parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">t1<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name pos:line="2" pos:column="48">char<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">t2<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="58">const<pos:position pos:line="2" pos:column="63"/></specifier> <name pos:line="2" pos:column="64">char<pos:position pos:line="2" pos:column="68"/></name> <modifier pos:line="2" pos:column="69">*<pos:position pos:line="2" pos:column="70"/></modifier></type><name pos:line="2" pos:column="70">t3<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">col<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">col_a<pos:position pos:line="5" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="14">col_b<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">split<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">n<pos:position pos:line="7" pos:column="8"/></name></decl>;<pos:position pos:line="7" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">fputs<pos:position pos:line="9" pos:column="8"/></name> <argument_list pos:line="9" pos:column="9">(<argument><expr><name pos:line="9" pos:column="10">t1<pos:position pos:line="9" pos:column="12"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="14">f<pos:position pos:line="9" pos:column="15"/></name></expr></argument>)<pos:position pos:line="9" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="17"/></expr_stmt>

  <comment type="block" pos:line="11" pos:column="3">/* don't try to press string into one line with less than 40 characters.
     The double parenthesis avoids a gcc warning, sigh ... */</comment>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><operator pos:line="13" pos:column="7">(<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">split<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <name><name pos:line="13" pos:column="16">MuttIndexWindow<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">-&gt;<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="33">cols<pos:position pos:line="13" pos:column="37"/></name></name> <operator pos:line="13" pos:column="38">&lt;<pos:position pos:line="13" pos:column="42"/></operator> <literal type="number" pos:line="13" pos:column="40">40<pos:position pos:line="13" pos:column="42"/></literal><operator pos:line="13" pos:column="42">)<pos:position pos:line="13" pos:column="43"/></operator></expr>)<pos:position pos:line="13" pos:column="44"/></condition><then pos:line="13" pos:column="44">
  <block pos:line="14" pos:column="3">{
    <expr_stmt><expr><name pos:line="15" pos:column="5">col_a<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <name pos:line="15" pos:column="13">col<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <literal type="number" pos:line="15" pos:column="19">0<pos:position pos:line="15" pos:column="20"/></literal></expr>;<pos:position pos:line="15" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">col_b<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <name pos:line="16" pos:column="13">LONG_STRING<pos:position pos:line="16" pos:column="24"/></name></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">fputc<pos:position pos:line="17" pos:column="10"/></name> <argument_list pos:line="17" pos:column="11">(<argument><expr><literal type="char" pos:line="17" pos:column="12">'\n'<pos:position pos:line="17" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="18">f<pos:position pos:line="17" pos:column="19"/></name></expr></argument>)<pos:position pos:line="17" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></then>
  <else pos:line="19" pos:column="3">else
  <block pos:line="20" pos:column="3">{
    <expr_stmt><expr><name pos:line="21" pos:column="5">col_a<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <ternary><condition><expr><name><name pos:line="21" pos:column="13">MuttIndexWindow<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">-&gt;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="30">cols<pos:position pos:line="21" pos:column="34"/></name></name> <operator pos:line="21" pos:column="35">&gt;<pos:position pos:line="21" pos:column="39"/></operator> <literal type="number" pos:line="21" pos:column="37">83<pos:position pos:line="21" pos:column="39"/></literal></expr> ?<pos:position pos:line="21" pos:column="41"/></condition><then pos:line="21" pos:column="41"> <expr><operator pos:line="21" pos:column="42">(<pos:position pos:line="21" pos:column="43"/></operator><name><name pos:line="21" pos:column="43">MuttIndexWindow<pos:position pos:line="21" pos:column="58"/></name><operator pos:line="21" pos:column="58">-&gt;<pos:position pos:line="21" pos:column="63"/></operator><name pos:line="21" pos:column="60">cols<pos:position pos:line="21" pos:column="64"/></name></name> <operator pos:line="21" pos:column="65">-<pos:position pos:line="21" pos:column="66"/></operator> <literal type="number" pos:line="21" pos:column="67">32<pos:position pos:line="21" pos:column="69"/></literal><operator pos:line="21" pos:column="69">)<pos:position pos:line="21" pos:column="70"/></operator> <operator pos:line="21" pos:column="71">&gt;&gt;<pos:position pos:line="21" pos:column="76"/></operator> <literal type="number" pos:line="21" pos:column="74">2<pos:position pos:line="21" pos:column="75"/></literal></expr> <pos:position pos:line="21" pos:column="76"/></then><else pos:line="21" pos:column="76">: <expr><literal type="number" pos:line="21" pos:column="78">12<pos:position pos:line="21" pos:column="80"/></literal></expr></else></ternary></expr>;<pos:position pos:line="21" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">col_b<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">=<pos:position pos:line="22" pos:column="12"/></operator> <ternary><condition><expr><name><name pos:line="22" pos:column="13">MuttIndexWindow<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">-&gt;<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="30">cols<pos:position pos:line="22" pos:column="34"/></name></name> <operator pos:line="22" pos:column="35">&gt;<pos:position pos:line="22" pos:column="39"/></operator> <literal type="number" pos:line="22" pos:column="37">49<pos:position pos:line="22" pos:column="39"/></literal></expr> ?<pos:position pos:line="22" pos:column="41"/></condition><then pos:line="22" pos:column="41"> <expr><operator pos:line="22" pos:column="42">(<pos:position pos:line="22" pos:column="43"/></operator><name><name pos:line="22" pos:column="43">MuttIndexWindow<pos:position pos:line="22" pos:column="58"/></name><operator pos:line="22" pos:column="58">-&gt;<pos:position pos:line="22" pos:column="63"/></operator><name pos:line="22" pos:column="60">cols<pos:position pos:line="22" pos:column="64"/></name></name> <operator pos:line="22" pos:column="65">-<pos:position pos:line="22" pos:column="66"/></operator> <literal type="number" pos:line="22" pos:column="67">10<pos:position pos:line="22" pos:column="69"/></literal><operator pos:line="22" pos:column="69">)<pos:position pos:line="22" pos:column="70"/></operator> <operator pos:line="22" pos:column="71">&gt;&gt;<pos:position pos:line="22" pos:column="76"/></operator> <literal type="number" pos:line="22" pos:column="74">1<pos:position pos:line="22" pos:column="75"/></literal></expr> <pos:position pos:line="22" pos:column="76"/></then><else pos:line="22" pos:column="76">: <expr><literal type="number" pos:line="22" pos:column="78">19<pos:position pos:line="22" pos:column="80"/></literal></expr></else></ternary></expr>;<pos:position pos:line="22" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">col<pos:position pos:line="23" pos:column="8"/></name> <operator pos:line="23" pos:column="9">=<pos:position pos:line="23" pos:column="10"/></operator> <call><name pos:line="23" pos:column="11">pad<pos:position pos:line="23" pos:column="14"/></name> <argument_list pos:line="23" pos:column="15">(<argument><expr><name pos:line="23" pos:column="16">f<pos:position pos:line="23" pos:column="17"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="19">mutt_strwidth<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><name pos:line="23" pos:column="33">t1<pos:position pos:line="23" pos:column="35"/></name></expr></argument>)<pos:position pos:line="23" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="23" pos:column="38">col_a<pos:position pos:line="23" pos:column="43"/></name></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="45"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></else></if>

  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name pos:line="26" pos:column="7">ismacro<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">&gt;<pos:position pos:line="26" pos:column="19"/></operator> <literal type="number" pos:line="26" pos:column="17">0<pos:position pos:line="26" pos:column="18"/></literal></expr>)<pos:position pos:line="26" pos:column="19"/></condition><then pos:line="26" pos:column="19">
  <block pos:line="27" pos:column="3">{
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><operator pos:line="28" pos:column="9">!<pos:position pos:line="28" pos:column="10"/></operator><call><name pos:line="28" pos:column="10">mutt_strcmp<pos:position pos:line="28" pos:column="21"/></name> <argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">Pager<pos:position pos:line="28" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="30">"builtin"<pos:position pos:line="28" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="41"/></condition><then pos:line="28" pos:column="41">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="7">fputs<pos:position pos:line="29" pos:column="12"/></name> <argument_list pos:line="29" pos:column="13">(<argument><expr><literal type="string" pos:line="29" pos:column="14">"_\010"<pos:position pos:line="29" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="23">f<pos:position pos:line="29" pos:column="24"/></name></expr></argument>)<pos:position pos:line="29" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">fputs<pos:position pos:line="30" pos:column="10"/></name> <argument_list pos:line="30" pos:column="11">(<argument><expr><literal type="string" pos:line="30" pos:column="12">"M "<pos:position pos:line="30" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="18">f<pos:position pos:line="30" pos:column="19"/></name></expr></argument>)<pos:position pos:line="30" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">col<pos:position pos:line="31" pos:column="8"/></name> <operator pos:line="31" pos:column="9">+=<pos:position pos:line="31" pos:column="11"/></operator> <literal type="number" pos:line="31" pos:column="12">2<pos:position pos:line="31" pos:column="13"/></literal></expr>;<pos:position pos:line="31" pos:column="14"/></expr_stmt>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><operator pos:line="33" pos:column="9">!<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">split<pos:position pos:line="33" pos:column="15"/></name></expr>)<pos:position pos:line="33" pos:column="16"/></condition><then pos:line="33" pos:column="16">
    <block pos:line="34" pos:column="5">{
      <expr_stmt><expr><name pos:line="35" pos:column="7">col<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">+=<pos:position pos:line="35" pos:column="13"/></operator> <call><name pos:line="35" pos:column="14">print_macro<pos:position pos:line="35" pos:column="25"/></name> <argument_list pos:line="35" pos:column="26">(<argument><expr><name pos:line="35" pos:column="27">f<pos:position pos:line="35" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="30">col_b<pos:position pos:line="35" pos:column="35"/></name> <operator pos:line="35" pos:column="36">-<pos:position pos:line="35" pos:column="37"/></operator> <name pos:line="35" pos:column="38">col<pos:position pos:line="35" pos:column="41"/></name> <operator pos:line="35" pos:column="42">-<pos:position pos:line="35" pos:column="43"/></operator> <literal type="number" pos:line="35" pos:column="44">4<pos:position pos:line="35" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="35" pos:column="47">&amp;<pos:position pos:line="35" pos:column="52"/></operator><name pos:line="35" pos:column="48">t2<pos:position pos:line="35" pos:column="50"/></name></expr></argument>)<pos:position pos:line="35" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="52"/></expr_stmt>
      <if pos:line="36" pos:column="7">if <condition pos:line="36" pos:column="10">(<expr><call><name pos:line="36" pos:column="11">mutt_strwidth<pos:position pos:line="36" pos:column="24"/></name> <argument_list pos:line="36" pos:column="25">(<argument><expr><name pos:line="36" pos:column="26">t2<pos:position pos:line="36" pos:column="28"/></name></expr></argument>)<pos:position pos:line="36" pos:column="29"/></argument_list></call> <operator pos:line="36" pos:column="30">&gt;<pos:position pos:line="36" pos:column="34"/></operator> <name pos:line="36" pos:column="32">col_b<pos:position pos:line="36" pos:column="37"/></name> <operator pos:line="36" pos:column="38">-<pos:position pos:line="36" pos:column="39"/></operator> <name pos:line="36" pos:column="40">col<pos:position pos:line="36" pos:column="43"/></name></expr>)<pos:position pos:line="36" pos:column="44"/></condition><then pos:line="36" pos:column="44">
	<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="9">t2<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <literal type="string" pos:line="37" pos:column="14">"..."<pos:position pos:line="37" pos:column="19"/></literal></expr>;<pos:position pos:line="37" pos:column="20"/></expr_stmt></block></then></if>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="41" pos:column="3">col<pos:position pos:line="41" pos:column="6"/></name> <operator pos:line="41" pos:column="7">+=<pos:position pos:line="41" pos:column="9"/></operator> <call><name pos:line="41" pos:column="10">print_macro<pos:position pos:line="41" pos:column="21"/></name> <argument_list pos:line="41" pos:column="22">(<argument><expr><name pos:line="41" pos:column="23">f<pos:position pos:line="41" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="26">col_b<pos:position pos:line="41" pos:column="31"/></name> <operator pos:line="41" pos:column="32">-<pos:position pos:line="41" pos:column="33"/></operator> <name pos:line="41" pos:column="34">col<pos:position pos:line="41" pos:column="37"/></name> <operator pos:line="41" pos:column="38">-<pos:position pos:line="41" pos:column="39"/></operator> <literal type="number" pos:line="41" pos:column="40">1<pos:position pos:line="41" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="41" pos:column="43">&amp;<pos:position pos:line="41" pos:column="48"/></operator><name pos:line="41" pos:column="44">t2<pos:position pos:line="41" pos:column="46"/></name></expr></argument>)<pos:position pos:line="41" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="48"/></expr_stmt>
  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><name pos:line="42" pos:column="7">split<pos:position pos:line="42" pos:column="12"/></name></expr>)<pos:position pos:line="42" pos:column="13"/></condition><then pos:line="42" pos:column="13">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="5">fputc<pos:position pos:line="43" pos:column="10"/></name> <argument_list pos:line="43" pos:column="11">(<argument><expr><literal type="char" pos:line="43" pos:column="12">'\n'<pos:position pos:line="43" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="18">f<pos:position pos:line="43" pos:column="19"/></name></expr></argument>)<pos:position pos:line="43" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="21"/></expr_stmt></block></then>
  <else pos:line="44" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="5">col<pos:position pos:line="45" pos:column="8"/></name> <operator pos:line="45" pos:column="9">=<pos:position pos:line="45" pos:column="10"/></operator> <call><name pos:line="45" pos:column="11">pad<pos:position pos:line="45" pos:column="14"/></name> <argument_list pos:line="45" pos:column="15">(<argument><expr><name pos:line="45" pos:column="16">f<pos:position pos:line="45" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="19">col<pos:position pos:line="45" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="24">col_b<pos:position pos:line="45" pos:column="29"/></name></expr></argument>)<pos:position pos:line="45" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="31"/></expr_stmt></block></else></if>

  <if pos:line="47" pos:column="3">if <condition pos:line="47" pos:column="6">(<expr><name pos:line="47" pos:column="7">split<pos:position pos:line="47" pos:column="12"/></name></expr>)<pos:position pos:line="47" pos:column="13"/></condition><then pos:line="47" pos:column="13">
  <block pos:line="48" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">print_macro<pos:position pos:line="49" pos:column="16"/></name> <argument_list pos:line="49" pos:column="17">(<argument><expr><name pos:line="49" pos:column="18">f<pos:position pos:line="49" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="21">LONG_STRING<pos:position pos:line="49" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="34">&amp;<pos:position pos:line="49" pos:column="39"/></operator><name pos:line="49" pos:column="35">t3<pos:position pos:line="49" pos:column="37"/></name></expr></argument>)<pos:position pos:line="49" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">fputc<pos:position pos:line="50" pos:column="10"/></name> <argument_list pos:line="50" pos:column="11">(<argument><expr><literal type="char" pos:line="50" pos:column="12">'\n'<pos:position pos:line="50" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="18">f<pos:position pos:line="50" pos:column="19"/></name></expr></argument>)<pos:position pos:line="50" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="51" pos:column="4"/></block></then>
  <else pos:line="52" pos:column="3">else
  <block pos:line="53" pos:column="3">{
    <while pos:line="54" pos:column="5">while <condition pos:line="54" pos:column="11">(<expr><operator pos:line="54" pos:column="12">*<pos:position pos:line="54" pos:column="13"/></operator><name pos:line="54" pos:column="13">t3<pos:position pos:line="54" pos:column="15"/></name></expr>)<pos:position pos:line="54" pos:column="16"/></condition>
    <block pos:line="55" pos:column="5">{
      <expr_stmt><expr><name pos:line="56" pos:column="7">n<pos:position pos:line="56" pos:column="8"/></name> <operator pos:line="56" pos:column="9">=<pos:position pos:line="56" pos:column="10"/></operator> <name><name pos:line="56" pos:column="11">MuttIndexWindow<pos:position pos:line="56" pos:column="26"/></name><operator pos:line="56" pos:column="26">-&gt;<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="28">cols<pos:position pos:line="56" pos:column="32"/></name></name> <operator pos:line="56" pos:column="33">-<pos:position pos:line="56" pos:column="34"/></operator> <name pos:line="56" pos:column="35">col<pos:position pos:line="56" pos:column="38"/></name></expr>;<pos:position pos:line="56" pos:column="39"/></expr_stmt>

      <if pos:line="58" pos:column="7">if <condition pos:line="58" pos:column="10">(<expr><name pos:line="58" pos:column="11">ismacro<pos:position pos:line="58" pos:column="18"/></name> <operator pos:line="58" pos:column="19">&gt;=<pos:position pos:line="58" pos:column="24"/></operator> <literal type="number" pos:line="58" pos:column="22">0<pos:position pos:line="58" pos:column="23"/></literal></expr>)<pos:position pos:line="58" pos:column="24"/></condition><then pos:line="58" pos:column="24">
      <block pos:line="59" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="60" pos:column="9">SKIPWS<pos:position pos:line="60" pos:column="15"/></name><argument_list pos:line="60" pos:column="15">(<argument><expr><name pos:line="60" pos:column="16">t3<pos:position pos:line="60" pos:column="18"/></name></expr></argument>)<pos:position pos:line="60" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><name pos:line="61" pos:column="9">n<pos:position pos:line="61" pos:column="10"/></name> <operator pos:line="61" pos:column="11">=<pos:position pos:line="61" pos:column="12"/></operator> <call><name pos:line="61" pos:column="13">get_wrapped_width<pos:position pos:line="61" pos:column="30"/></name> <argument_list pos:line="61" pos:column="31">(<argument><expr><name pos:line="61" pos:column="32">t3<pos:position pos:line="61" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="36">n<pos:position pos:line="61" pos:column="37"/></name></expr></argument>)<pos:position pos:line="61" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="39"/></expr_stmt>
      }<pos:position pos:line="62" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="64" pos:column="7">n<pos:position pos:line="64" pos:column="8"/></name> <operator pos:line="64" pos:column="9">=<pos:position pos:line="64" pos:column="10"/></operator> <call><name pos:line="64" pos:column="11">print_macro<pos:position pos:line="64" pos:column="22"/></name> <argument_list pos:line="64" pos:column="23">(<argument><expr><name pos:line="64" pos:column="24">f<pos:position pos:line="64" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="27">n<pos:position pos:line="64" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="30">&amp;<pos:position pos:line="64" pos:column="35"/></operator><name pos:line="64" pos:column="31">t3<pos:position pos:line="64" pos:column="33"/></name></expr></argument>)<pos:position pos:line="64" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="35"/></expr_stmt>

      <if pos:line="66" pos:column="7">if <condition pos:line="66" pos:column="10">(<expr><operator pos:line="66" pos:column="11">*<pos:position pos:line="66" pos:column="12"/></operator><name pos:line="66" pos:column="12">t3<pos:position pos:line="66" pos:column="14"/></name></expr>)<pos:position pos:line="66" pos:column="15"/></condition><then pos:line="66" pos:column="15">
      <block pos:line="67" pos:column="7">{
        <if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><call><name pos:line="68" pos:column="13">mutt_strcmp<pos:position pos:line="68" pos:column="24"/></name> <argument_list pos:line="68" pos:column="25">(<argument><expr><name pos:line="68" pos:column="26">Pager<pos:position pos:line="68" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="33">"builtin"<pos:position pos:line="68" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="44"/></condition><then pos:line="68" pos:column="44">
	<block pos:line="69" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="70" pos:column="11">fputc<pos:position pos:line="70" pos:column="16"/></name> <argument_list pos:line="70" pos:column="17">(<argument><expr><literal type="char" pos:line="70" pos:column="18">'\n'<pos:position pos:line="70" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="24">f<pos:position pos:line="70" pos:column="25"/></name></expr></argument>)<pos:position pos:line="70" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="27"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="71" pos:column="11">n<pos:position pos:line="71" pos:column="12"/></name> <operator pos:line="71" pos:column="13">=<pos:position pos:line="71" pos:column="14"/></operator> <literal type="number" pos:line="71" pos:column="15">0<pos:position pos:line="71" pos:column="16"/></literal></expr>;<pos:position pos:line="71" pos:column="17"/></expr_stmt>
	}<pos:position pos:line="72" pos:column="10"/></block></then>
	<else pos:line="73" pos:column="9">else
	<block pos:line="74" pos:column="9">{
	  <expr_stmt><expr><name pos:line="75" pos:column="11">n<pos:position pos:line="75" pos:column="12"/></name> <operator pos:line="75" pos:column="13">+=<pos:position pos:line="75" pos:column="15"/></operator> <name pos:line="75" pos:column="16">col<pos:position pos:line="75" pos:column="19"/></name> <operator pos:line="75" pos:column="20">-<pos:position pos:line="75" pos:column="21"/></operator> <name><name pos:line="75" pos:column="22">MuttIndexWindow<pos:position pos:line="75" pos:column="37"/></name><operator pos:line="75" pos:column="37">-&gt;<pos:position pos:line="75" pos:column="42"/></operator><name pos:line="75" pos:column="39">cols<pos:position pos:line="75" pos:column="43"/></name></name></expr>;<pos:position pos:line="75" pos:column="44"/></expr_stmt>
	  <if pos:line="76" pos:column="11">if <condition pos:line="76" pos:column="14">(<expr><call><name pos:line="76" pos:column="15">option<pos:position pos:line="76" pos:column="21"/></name> <argument_list pos:line="76" pos:column="22">(<argument><expr><name pos:line="76" pos:column="23">OPTMARKERS<pos:position pos:line="76" pos:column="33"/></name></expr></argument>)<pos:position pos:line="76" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="76" pos:column="35"/></condition><then pos:line="76" pos:column="35">
	    <block type="pseudo"><expr_stmt><expr><operator pos:line="77" pos:column="13">++<pos:position pos:line="77" pos:column="15"/></operator><name pos:line="77" pos:column="15">n<pos:position pos:line="77" pos:column="16"/></name></expr>;<pos:position pos:line="77" pos:column="17"/></expr_stmt></block></then></if>
	}<pos:position pos:line="78" pos:column="10"/></block></else></if>
	<expr_stmt><expr><name pos:line="79" pos:column="9">col<pos:position pos:line="79" pos:column="12"/></name> <operator pos:line="79" pos:column="13">=<pos:position pos:line="79" pos:column="14"/></operator> <call><name pos:line="79" pos:column="15">pad<pos:position pos:line="79" pos:column="18"/></name> <argument_list pos:line="79" pos:column="19">(<argument><expr><name pos:line="79" pos:column="20">f<pos:position pos:line="79" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="23">n<pos:position pos:line="79" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="26">col_b<pos:position pos:line="79" pos:column="31"/></name></expr></argument>)<pos:position pos:line="79" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="33"/></expr_stmt>
      }<pos:position pos:line="80" pos:column="8"/></block></then></if>
    }<pos:position pos:line="81" pos:column="6"/></block></while>
  }<pos:position pos:line="82" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="84" pos:column="3">fputc<pos:position pos:line="84" pos:column="8"/></name> <argument_list pos:line="84" pos:column="9">(<argument><expr><literal type="char" pos:line="84" pos:column="10">'\n'<pos:position pos:line="84" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="84" pos:column="16">f<pos:position pos:line="84" pos:column="17"/></name></expr></argument>)<pos:position pos:line="84" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="19"/></expr_stmt>
}<pos:position pos:line="85" pos:column="2"/></block></function></unit>

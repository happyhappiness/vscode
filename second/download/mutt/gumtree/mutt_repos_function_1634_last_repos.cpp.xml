<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1634_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">open_append_mailbox<pos:position pos:line="2" pos:column="20"/></name> <parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">CONTEXT<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">ctx<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">int<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">flags<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><operator pos:line="4" pos:column="7">!<pos:position pos:line="4" pos:column="8"/></operator><name pos:line="4" pos:column="8">ctx<pos:position pos:line="4" pos:column="11"/></name></expr>)<pos:position pos:line="4" pos:column="12"/></condition><then pos:line="4" pos:column="12">
    <block type="pseudo"><return pos:line="5" pos:column="5">return <expr><operator pos:line="5" pos:column="12">-<pos:position pos:line="5" pos:column="13"/></operator><literal type="number" pos:line="5" pos:column="13">1<pos:position pos:line="5" pos:column="14"/></literal></expr>;<pos:position pos:line="5" pos:column="15"/></return></block></then></if>

  <comment type="block" pos:line="7" pos:column="3">/* If this succeeds, we know there's an open-hook */</comment>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">COMPRESS_INFO<pos:position pos:line="8" pos:column="16"/></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">ci<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><call><name pos:line="8" pos:column="23">set_compress_info<pos:position pos:line="8" pos:column="40"/></name> <argument_list pos:line="8" pos:column="41">(<argument><expr><name pos:line="8" pos:column="42">ctx<pos:position pos:line="8" pos:column="45"/></name></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="47"/></decl_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">!<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">ci<pos:position pos:line="9" pos:column="10"/></name></expr>)<pos:position pos:line="9" pos:column="11"/></condition><then pos:line="9" pos:column="11">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">-<pos:position pos:line="10" pos:column="13"/></operator><literal type="number" pos:line="10" pos:column="13">1<pos:position pos:line="10" pos:column="14"/></literal></expr>;<pos:position pos:line="10" pos:column="15"/></return></block></then></if>

  <comment type="block" pos:line="12" pos:column="3">/* To append we need an append-hook or a close-hook */</comment>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><operator pos:line="13" pos:column="7">!<pos:position pos:line="13" pos:column="8"/></operator><name><name pos:line="13" pos:column="8">ci<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">append<pos:position pos:line="13" pos:column="18"/></name></name> <operator pos:line="13" pos:column="19">&amp;&amp;<pos:position pos:line="13" pos:column="29"/></operator> <operator pos:line="13" pos:column="22">!<pos:position pos:line="13" pos:column="23"/></operator><name><name pos:line="13" pos:column="23">ci<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">-&gt;<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="27">close<pos:position pos:line="13" pos:column="32"/></name></name></expr>)<pos:position pos:line="13" pos:column="33"/></condition><then pos:line="13" pos:column="33">
  <block pos:line="14" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">mutt_error<pos:position pos:line="15" pos:column="15"/></name> <argument_list pos:line="15" pos:column="16">(<argument><expr><call><name pos:line="15" pos:column="17">_<pos:position pos:line="15" pos:column="18"/></name><argument_list pos:line="15" pos:column="18">(<argument><expr><literal type="string" pos:line="15" pos:column="19">"Cannot append without an append-hook or close-hook : %s"<pos:position pos:line="15" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="79">ctx<pos:position pos:line="15" pos:column="82"/></name><operator pos:line="15" pos:column="82">-&gt;<pos:position pos:line="15" pos:column="87"/></operator><name pos:line="15" pos:column="84">path<pos:position pos:line="15" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="90"/></expr_stmt>
    <goto pos:line="16" pos:column="5">goto <name pos:line="16" pos:column="10">oa_fail1<pos:position pos:line="16" pos:column="18"/></name>;<pos:position pos:line="16" pos:column="19"/></goto>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><call><name pos:line="19" pos:column="7">setup_paths<pos:position pos:line="19" pos:column="18"/></name> <argument_list pos:line="19" pos:column="19">(<argument><expr><name pos:line="19" pos:column="20">ctx<pos:position pos:line="19" pos:column="23"/></name></expr></argument>)<pos:position pos:line="19" pos:column="24"/></argument_list></call> <operator pos:line="19" pos:column="25">!=<pos:position pos:line="19" pos:column="27"/></operator> <literal type="number" pos:line="19" pos:column="28">0<pos:position pos:line="19" pos:column="29"/></literal></expr>)<pos:position pos:line="19" pos:column="30"/></condition><then pos:line="19" pos:column="30">
    <block type="pseudo"><goto pos:line="20" pos:column="5">goto <name pos:line="20" pos:column="10">oa_fail2<pos:position pos:line="20" pos:column="18"/></name>;<pos:position pos:line="20" pos:column="19"/></goto></block></then></if>

  <comment type="block" pos:line="22" pos:column="3">/* Lock the realpath for the duration of the append.
   * It will be unlocked in the close */</comment>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><operator pos:line="24" pos:column="7">!<pos:position pos:line="24" pos:column="8"/></operator><call><name pos:line="24" pos:column="8">lock_realpath<pos:position pos:line="24" pos:column="21"/></name> <argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">ctx<pos:position pos:line="24" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="28">1<pos:position pos:line="24" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="31"/></condition><then pos:line="24" pos:column="31">
  <block pos:line="25" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">mutt_error<pos:position pos:line="26" pos:column="15"/></name> <argument_list pos:line="26" pos:column="16">(<argument><expr><call><name pos:line="26" pos:column="17">_<pos:position pos:line="26" pos:column="18"/></name><argument_list pos:line="26" pos:column="18">(<argument><expr><literal type="string" pos:line="26" pos:column="19">"Unable to lock mailbox!"<pos:position pos:line="26" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="47"/></expr_stmt>
    <goto pos:line="27" pos:column="5">goto <name pos:line="27" pos:column="10">oa_fail2<pos:position pos:line="27" pos:column="18"/></name>;<pos:position pos:line="27" pos:column="19"/></goto>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="30" pos:column="3">/* Open the existing mailbox, unless we are appending */</comment>
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><operator pos:line="31" pos:column="7">!<pos:position pos:line="31" pos:column="8"/></operator><name><name pos:line="31" pos:column="8">ci<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">-&gt;<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="12">append<pos:position pos:line="31" pos:column="18"/></name></name> <operator pos:line="31" pos:column="19">&amp;&amp;<pos:position pos:line="31" pos:column="29"/></operator> <operator pos:line="31" pos:column="22">(<pos:position pos:line="31" pos:column="23"/></operator><call><name pos:line="31" pos:column="23">get_size<pos:position pos:line="31" pos:column="31"/></name> <argument_list pos:line="31" pos:column="32">(<argument><expr><name><name pos:line="31" pos:column="33">ctx<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">-&gt;<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="38">realpath<pos:position pos:line="31" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="47"/></argument_list></call> <operator pos:line="31" pos:column="48">&gt;<pos:position pos:line="31" pos:column="52"/></operator> <literal type="number" pos:line="31" pos:column="50">0<pos:position pos:line="31" pos:column="51"/></literal><operator pos:line="31" pos:column="51">)<pos:position pos:line="31" pos:column="52"/></operator></expr>)<pos:position pos:line="31" pos:column="53"/></condition><then pos:line="31" pos:column="53">
  <block pos:line="32" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">int<pos:position pos:line="33" pos:column="8"/></name></type> <name pos:line="33" pos:column="9">rc<pos:position pos:line="33" pos:column="11"/></name> <init pos:line="33" pos:column="12">= <expr><call><name pos:line="33" pos:column="14">execute_command<pos:position pos:line="33" pos:column="29"/></name> <argument_list pos:line="33" pos:column="30">(<argument><expr><name pos:line="33" pos:column="31">ctx<pos:position pos:line="33" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="36">ci<pos:position pos:line="33" pos:column="38"/></name><operator pos:line="33" pos:column="38">-&gt;<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="40">open<pos:position pos:line="33" pos:column="44"/></name></name></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="46">_<pos:position pos:line="33" pos:column="47"/></name><argument_list pos:line="33" pos:column="47">(<argument><expr><literal type="string" pos:line="33" pos:column="48">"Decompressing %s"<pos:position pos:line="33" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="33" pos:column="69"/></decl_stmt>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">rc<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">==<pos:position pos:line="34" pos:column="14"/></operator> <literal type="number" pos:line="34" pos:column="15">0<pos:position pos:line="34" pos:column="16"/></literal></expr>)<pos:position pos:line="34" pos:column="17"/></condition><then pos:line="34" pos:column="17">
    <block pos:line="35" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="36" pos:column="7">mutt_error<pos:position pos:line="36" pos:column="17"/></name> <argument_list pos:line="36" pos:column="18">(<argument><expr><call><name pos:line="36" pos:column="19">_<pos:position pos:line="36" pos:column="20"/></name><argument_list pos:line="36" pos:column="20">(<argument><expr><literal type="string" pos:line="36" pos:column="21">"Compress command failed: %s"<pos:position pos:line="36" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="53">ci<pos:position pos:line="36" pos:column="55"/></name><operator pos:line="36" pos:column="55">-&gt;<pos:position pos:line="36" pos:column="60"/></operator><name pos:line="36" pos:column="57">open<pos:position pos:line="36" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="63"/></expr_stmt>
      <goto pos:line="37" pos:column="7">goto <name pos:line="37" pos:column="12">oa_fail2<pos:position pos:line="37" pos:column="20"/></name>;<pos:position pos:line="37" pos:column="21"/></goto>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">ctx<pos:position pos:line="39" pos:column="8"/></name><operator pos:line="39" pos:column="8">-&gt;<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="10">magic<pos:position pos:line="39" pos:column="15"/></name></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <call><name pos:line="39" pos:column="18">mx_get_magic<pos:position pos:line="39" pos:column="30"/></name> <argument_list pos:line="39" pos:column="31">(<argument><expr><name><name pos:line="39" pos:column="32">ctx<pos:position pos:line="39" pos:column="35"/></name><operator pos:line="39" pos:column="35">-&gt;<pos:position pos:line="39" pos:column="40"/></operator><name pos:line="39" pos:column="37">path<pos:position pos:line="39" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="40" pos:column="4"/></block></then>
  <else pos:line="41" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="42" pos:column="5">ctx<pos:position pos:line="42" pos:column="8"/></name><operator pos:line="42" pos:column="8">-&gt;<pos:position pos:line="42" pos:column="13"/></operator><name pos:line="42" pos:column="10">magic<pos:position pos:line="42" pos:column="15"/></name></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <name pos:line="42" pos:column="18">DefaultMagic<pos:position pos:line="42" pos:column="30"/></name></expr>;<pos:position pos:line="42" pos:column="31"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="44" pos:column="3">/* We can only deal with mbox and mmdf mailboxes */</comment>
  <if pos:line="45" pos:column="3">if <condition pos:line="45" pos:column="6">(<expr><operator pos:line="45" pos:column="7">(<pos:position pos:line="45" pos:column="8"/></operator><name><name pos:line="45" pos:column="8">ctx<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">-&gt;<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="13">magic<pos:position pos:line="45" pos:column="18"/></name></name> <operator pos:line="45" pos:column="19">!=<pos:position pos:line="45" pos:column="21"/></operator> <name pos:line="45" pos:column="22">MUTT_MBOX<pos:position pos:line="45" pos:column="31"/></name><operator pos:line="45" pos:column="31">)<pos:position pos:line="45" pos:column="32"/></operator> <operator pos:line="45" pos:column="33">&amp;&amp;<pos:position pos:line="45" pos:column="43"/></operator> <operator pos:line="45" pos:column="36">(<pos:position pos:line="45" pos:column="37"/></operator><name><name pos:line="45" pos:column="37">ctx<pos:position pos:line="45" pos:column="40"/></name><operator pos:line="45" pos:column="40">-&gt;<pos:position pos:line="45" pos:column="45"/></operator><name pos:line="45" pos:column="42">magic<pos:position pos:line="45" pos:column="47"/></name></name> <operator pos:line="45" pos:column="48">!=<pos:position pos:line="45" pos:column="50"/></operator> <name pos:line="45" pos:column="51">MUTT_MMDF<pos:position pos:line="45" pos:column="60"/></name><operator pos:line="45" pos:column="60">)<pos:position pos:line="45" pos:column="61"/></operator></expr>)<pos:position pos:line="45" pos:column="62"/></condition><then pos:line="45" pos:column="62">
  <block pos:line="46" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">mutt_error<pos:position pos:line="47" pos:column="15"/></name> <argument_list pos:line="47" pos:column="16">(<argument><expr><call><name pos:line="47" pos:column="17">_<pos:position pos:line="47" pos:column="18"/></name><argument_list pos:line="47" pos:column="18">(<argument><expr><literal type="string" pos:line="47" pos:column="19">"Unsupported mailbox type for appending."<pos:position pos:line="47" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="63"/></expr_stmt>
    <goto pos:line="48" pos:column="5">goto <name pos:line="48" pos:column="10">oa_fail2<pos:position pos:line="48" pos:column="18"/></name>;<pos:position pos:line="48" pos:column="19"/></goto>
  }<pos:position pos:line="49" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="51" pos:column="3">ci<pos:position pos:line="51" pos:column="5"/></name><operator pos:line="51" pos:column="5">-&gt;<pos:position pos:line="51" pos:column="10"/></operator><name pos:line="51" pos:column="7">child_ops<pos:position pos:line="51" pos:column="16"/></name></name> <operator pos:line="51" pos:column="17">=<pos:position pos:line="51" pos:column="18"/></operator> <call><name pos:line="51" pos:column="19">mx_get_ops<pos:position pos:line="51" pos:column="29"/></name> <argument_list pos:line="51" pos:column="30">(<argument><expr><name><name pos:line="51" pos:column="31">ctx<pos:position pos:line="51" pos:column="34"/></name><operator pos:line="51" pos:column="34">-&gt;<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="36">magic<pos:position pos:line="51" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="43"/></expr_stmt>
  <if pos:line="52" pos:column="3">if <condition pos:line="52" pos:column="6">(<expr><operator pos:line="52" pos:column="7">!<pos:position pos:line="52" pos:column="8"/></operator><name><name pos:line="52" pos:column="8">ci<pos:position pos:line="52" pos:column="10"/></name><operator pos:line="52" pos:column="10">-&gt;<pos:position pos:line="52" pos:column="15"/></operator><name pos:line="52" pos:column="12">child_ops<pos:position pos:line="52" pos:column="21"/></name></name></expr>)<pos:position pos:line="52" pos:column="22"/></condition><then pos:line="52" pos:column="22">
  <block pos:line="53" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">mutt_error<pos:position pos:line="54" pos:column="15"/></name> <argument_list pos:line="54" pos:column="16">(<argument><expr><call><name pos:line="54" pos:column="17">_<pos:position pos:line="54" pos:column="18"/></name><argument_list pos:line="54" pos:column="18">(<argument><expr><literal type="string" pos:line="54" pos:column="19">"Can't find mailbox ops for mailbox type %d"<pos:position pos:line="54" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="66">ctx<pos:position pos:line="54" pos:column="69"/></name><operator pos:line="54" pos:column="69">-&gt;<pos:position pos:line="54" pos:column="74"/></operator><name pos:line="54" pos:column="71">magic<pos:position pos:line="54" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="78"/></expr_stmt>
    <goto pos:line="55" pos:column="5">goto <name pos:line="55" pos:column="10">oa_fail2<pos:position pos:line="55" pos:column="18"/></name>;<pos:position pos:line="55" pos:column="19"/></goto>
  }<pos:position pos:line="56" pos:column="4"/></block></then></if>

  <if pos:line="58" pos:column="3">if <condition pos:line="58" pos:column="6">(<expr><call><name><name pos:line="58" pos:column="7">ci<pos:position pos:line="58" pos:column="9"/></name><operator pos:line="58" pos:column="9">-&gt;<pos:position pos:line="58" pos:column="14"/></operator><name pos:line="58" pos:column="11">child_ops<pos:position pos:line="58" pos:column="20"/></name><operator pos:line="58" pos:column="20">-&gt;<pos:position pos:line="58" pos:column="25"/></operator><name pos:line="58" pos:column="22">open_append<pos:position pos:line="58" pos:column="33"/></name></name> <argument_list pos:line="58" pos:column="34">(<argument><expr><name pos:line="58" pos:column="35">ctx<pos:position pos:line="58" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="40">flags<pos:position pos:line="58" pos:column="45"/></name></expr></argument>)<pos:position pos:line="58" pos:column="46"/></argument_list></call> <operator pos:line="58" pos:column="47">!=<pos:position pos:line="58" pos:column="49"/></operator> <literal type="number" pos:line="58" pos:column="50">0<pos:position pos:line="58" pos:column="51"/></literal></expr>)<pos:position pos:line="58" pos:column="52"/></condition><then pos:line="58" pos:column="52">
    <block type="pseudo"><goto pos:line="59" pos:column="5">goto <name pos:line="59" pos:column="10">oa_fail2<pos:position pos:line="59" pos:column="18"/></name>;<pos:position pos:line="59" pos:column="19"/></goto></block></then></if>

  <return pos:line="61" pos:column="3">return <expr><literal type="number" pos:line="61" pos:column="10">0<pos:position pos:line="61" pos:column="11"/></literal></expr>;<pos:position pos:line="61" pos:column="12"/></return>

<label><name pos:line="63" pos:column="1">oa_fail2<pos:position pos:line="63" pos:column="9"/></name>:<pos:position pos:line="63" pos:column="10"/></label>
  <comment type="block" pos:line="64" pos:column="3">/* remove the partial uncompressed file */</comment>
  <expr_stmt><expr><call><name pos:line="65" pos:column="3">remove<pos:position pos:line="65" pos:column="9"/></name> <argument_list pos:line="65" pos:column="10">(<argument><expr><name><name pos:line="65" pos:column="11">ctx<pos:position pos:line="65" pos:column="14"/></name><operator pos:line="65" pos:column="14">-&gt;<pos:position pos:line="65" pos:column="19"/></operator><name pos:line="65" pos:column="16">path<pos:position pos:line="65" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="22"/></expr_stmt>
<label><name pos:line="66" pos:column="1">oa_fail1<pos:position pos:line="66" pos:column="9"/></name>:<pos:position pos:line="66" pos:column="10"/></label>
  <comment type="block" pos:line="67" pos:column="3">/* Free the compress_info to prevent close from trying to recompress */</comment>
  <expr_stmt><expr><call><name pos:line="68" pos:column="3">mutt_free_compress_info<pos:position pos:line="68" pos:column="26"/></name> <argument_list pos:line="68" pos:column="27">(<argument><expr><name pos:line="68" pos:column="28">ctx<pos:position pos:line="68" pos:column="31"/></name></expr></argument>)<pos:position pos:line="68" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="33"/></expr_stmt>

  <return pos:line="70" pos:column="3">return <expr><operator pos:line="70" pos:column="10">-<pos:position pos:line="70" pos:column="11"/></operator><literal type="number" pos:line="70" pos:column="11">1<pos:position pos:line="70" pos:column="12"/></literal></expr>;<pos:position pos:line="70" pos:column="13"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_793_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_sasl_client_new<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">CONNECTION<pos:position pos:line="1" pos:column="37"/></name><modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type> <name pos:line="1" pos:column="39">conn<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">sasl_conn_t<pos:position pos:line="1" pos:column="56"/></name><modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier><modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type> <name pos:line="1" pos:column="59">saslconn<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">sasl_security_properties_t<pos:position pos:line="3" pos:column="29"/></name></type> <name pos:line="3" pos:column="30">secprops<pos:position pos:line="3" pos:column="38"/></name></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">sockaddr_storage<pos:position pos:line="4" pos:column="26"/></name></name></type> <name pos:line="4" pos:column="27">local<pos:position pos:line="4" pos:column="32"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="34">remote<pos:position pos:line="4" pos:column="40"/></name></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">socklen_t<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">size<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">iplocalport<pos:position pos:line="6" pos:column="19"/></name><index pos:line="6" pos:column="19">[<expr><name pos:line="6" pos:column="20">IP_PORT_BUFLEN<pos:position pos:line="6" pos:column="34"/></name></expr>]<pos:position pos:line="6" pos:column="35"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="6" pos:column="37">ipremoteport<pos:position pos:line="6" pos:column="49"/></name><index pos:line="6" pos:column="49">[<expr><name pos:line="6" pos:column="50">IP_PORT_BUFLEN<pos:position pos:line="6" pos:column="64"/></name></expr>]<pos:position pos:line="6" pos:column="65"/></index></name></decl>;<pos:position pos:line="6" pos:column="66"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name><modifier pos:line="7" pos:column="7">*<pos:position pos:line="7" pos:column="8"/></modifier></type> <name pos:line="7" pos:column="9">plp<pos:position pos:line="7" pos:column="12"/></name> <init pos:line="7" pos:column="13">= <expr><name pos:line="7" pos:column="15">NULL<pos:position pos:line="7" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name><modifier pos:line="8" pos:column="7">*<pos:position pos:line="8" pos:column="8"/></modifier></type> <name pos:line="8" pos:column="9">prp<pos:position pos:line="8" pos:column="12"/></name> <init pos:line="8" pos:column="13">= <expr><name pos:line="8" pos:column="15">NULL<pos:position pos:line="8" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="9" pos:column="3">const<pos:position pos:line="9" pos:column="8"/></specifier> <name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name><modifier pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></modifier></type> <name pos:line="9" pos:column="15">service<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">rc<pos:position pos:line="10" pos:column="9"/></name></decl>;<pos:position pos:line="10" pos:column="10"/></decl_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><call><name pos:line="12" pos:column="7">mutt_sasl_start<pos:position pos:line="12" pos:column="22"/></name> <argument_list pos:line="12" pos:column="23">()<pos:position pos:line="12" pos:column="25"/></argument_list></call> <operator pos:line="12" pos:column="26">!=<pos:position pos:line="12" pos:column="28"/></operator> <name pos:line="12" pos:column="29">SASL_OK<pos:position pos:line="12" pos:column="36"/></name></expr>)<pos:position pos:line="12" pos:column="37"/></condition><then pos:line="12" pos:column="37">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">-<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">1<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></return></block></then></if>

  <switch pos:line="15" pos:column="3">switch <condition pos:line="15" pos:column="10">(<expr><name><name pos:line="15" pos:column="11">conn<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">-&gt;<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="17">account<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">.<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="25">type<pos:position pos:line="15" pos:column="29"/></name></name></expr>)<pos:position pos:line="15" pos:column="30"/></condition>
  <block pos:line="16" pos:column="3">{
    <case pos:line="17" pos:column="5">case <expr><name pos:line="17" pos:column="10">MUTT_ACCT_TYPE_IMAP<pos:position pos:line="17" pos:column="29"/></name></expr>:<pos:position pos:line="17" pos:column="30"/></case>
      <expr_stmt><expr><name pos:line="18" pos:column="7">service<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <literal type="string" pos:line="18" pos:column="17">"imap"<pos:position pos:line="18" pos:column="23"/></literal></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>
      <break pos:line="19" pos:column="7">break;<pos:position pos:line="19" pos:column="13"/></break>
    <case pos:line="20" pos:column="5">case <expr><name pos:line="20" pos:column="10">MUTT_ACCT_TYPE_POP<pos:position pos:line="20" pos:column="28"/></name></expr>:<pos:position pos:line="20" pos:column="29"/></case>
      <expr_stmt><expr><name pos:line="21" pos:column="7">service<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <literal type="string" pos:line="21" pos:column="17">"pop"<pos:position pos:line="21" pos:column="22"/></literal></expr>;<pos:position pos:line="21" pos:column="23"/></expr_stmt>
      <break pos:line="22" pos:column="7">break;<pos:position pos:line="22" pos:column="13"/></break>
    <case pos:line="23" pos:column="5">case <expr><name pos:line="23" pos:column="10">MUTT_ACCT_TYPE_SMTP<pos:position pos:line="23" pos:column="29"/></name></expr>:<pos:position pos:line="23" pos:column="30"/></case>
      <expr_stmt><expr><name pos:line="24" pos:column="7">service<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <literal type="string" pos:line="24" pos:column="17">"smtp"<pos:position pos:line="24" pos:column="23"/></literal></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>
      <break pos:line="25" pos:column="7">break;<pos:position pos:line="25" pos:column="13"/></break>
    <default pos:line="26" pos:column="5">default:<pos:position pos:line="26" pos:column="13"/></default>
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">mutt_error<pos:position pos:line="27" pos:column="17"/></name> <argument_list pos:line="27" pos:column="18">(<argument><expr><call><name pos:line="27" pos:column="19">_<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><literal type="string" pos:line="27" pos:column="21">"Unknown SASL profile"<pos:position pos:line="27" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="46"/></expr_stmt>
      <return pos:line="28" pos:column="7">return <expr><operator pos:line="28" pos:column="14">-<pos:position pos:line="28" pos:column="15"/></operator><literal type="number" pos:line="28" pos:column="15">1<pos:position pos:line="28" pos:column="16"/></literal></expr>;<pos:position pos:line="28" pos:column="17"/></return>
  }<pos:position pos:line="29" pos:column="4"/></block></switch>

  <expr_stmt><expr><name pos:line="31" pos:column="3">size<pos:position pos:line="31" pos:column="7"/></name> <operator pos:line="31" pos:column="8">=<pos:position pos:line="31" pos:column="9"/></operator> <sizeof pos:line="31" pos:column="10">sizeof <argument_list pos:line="31" pos:column="17">(<argument><expr><name pos:line="31" pos:column="18">local<pos:position pos:line="31" pos:column="23"/></name></expr></argument>)<pos:position pos:line="31" pos:column="24"/></argument_list></sizeof></expr>;<pos:position pos:line="31" pos:column="25"/></expr_stmt>
  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><operator pos:line="32" pos:column="7">!<pos:position pos:line="32" pos:column="8"/></operator><call><name pos:line="32" pos:column="8">getsockname<pos:position pos:line="32" pos:column="19"/></name> <argument_list pos:line="32" pos:column="20">(<argument><expr><name><name pos:line="32" pos:column="21">conn<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">-&gt;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="27">fd<pos:position pos:line="32" pos:column="29"/></name></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="31">(<pos:position pos:line="32" pos:column="32"/></operator>struct <name pos:line="32" pos:column="39">sockaddr<pos:position pos:line="32" pos:column="47"/></name> <operator pos:line="32" pos:column="48">*<pos:position pos:line="32" pos:column="49"/></operator><operator pos:line="32" pos:column="49">)<pos:position pos:line="32" pos:column="50"/></operator><operator pos:line="32" pos:column="50">&amp;<pos:position pos:line="32" pos:column="55"/></operator><name pos:line="32" pos:column="51">local<pos:position pos:line="32" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="58">&amp;<pos:position pos:line="32" pos:column="63"/></operator><name pos:line="32" pos:column="59">size<pos:position pos:line="32" pos:column="63"/></name></expr></argument>)<pos:position pos:line="32" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="65"/></condition><then pos:line="32" pos:column="65"> <block pos:line="32" pos:column="66">{
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><call><name pos:line="33" pos:column="9">iptostring<pos:position pos:line="33" pos:column="19"/></name><argument_list pos:line="33" pos:column="19">(<argument><expr><operator pos:line="33" pos:column="20">(<pos:position pos:line="33" pos:column="21"/></operator>struct <name pos:line="33" pos:column="28">sockaddr<pos:position pos:line="33" pos:column="36"/></name> <operator pos:line="33" pos:column="37">*<pos:position pos:line="33" pos:column="38"/></operator><operator pos:line="33" pos:column="38">)<pos:position pos:line="33" pos:column="39"/></operator><operator pos:line="33" pos:column="39">&amp;<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="40">local<pos:position pos:line="33" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="47">size<pos:position pos:line="33" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="53">iplocalport<pos:position pos:line="33" pos:column="64"/></name></expr></argument>,
                   <argument><expr><name pos:line="34" pos:column="20">IP_PORT_BUFLEN<pos:position pos:line="34" pos:column="34"/></name></expr></argument>)<pos:position pos:line="34" pos:column="35"/></argument_list></call> <operator pos:line="34" pos:column="36">==<pos:position pos:line="34" pos:column="38"/></operator> <name pos:line="34" pos:column="39">SASL_OK<pos:position pos:line="34" pos:column="46"/></name></expr>)<pos:position pos:line="34" pos:column="47"/></condition><then pos:line="34" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="7">plp<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">=<pos:position pos:line="35" pos:column="12"/></operator> <name pos:line="35" pos:column="13">iplocalport<pos:position pos:line="35" pos:column="24"/></name></expr>;<pos:position pos:line="35" pos:column="25"/></expr_stmt></block></then>
    <else pos:line="36" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="7">dprint<pos:position pos:line="37" pos:column="13"/></name> <argument_list pos:line="37" pos:column="14">(<argument><expr><literal type="number" pos:line="37" pos:column="15">2<pos:position pos:line="37" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="37" pos:column="18">(<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="19">debugfile<pos:position pos:line="37" pos:column="28"/></name><operator pos:line="37" pos:column="28">,<pos:position pos:line="37" pos:column="29"/></operator> <literal type="string" pos:line="37" pos:column="30">"SASL failed to parse local IP address\n"<pos:position pos:line="37" pos:column="71"/></literal><operator pos:line="37" pos:column="71">)<pos:position pos:line="37" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="37" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="74"/></expr_stmt></block></else></if>
  }<pos:position pos:line="38" pos:column="4"/></block></then>
  <else pos:line="39" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="5">dprint<pos:position pos:line="40" pos:column="11"/></name> <argument_list pos:line="40" pos:column="12">(<argument><expr><literal type="number" pos:line="40" pos:column="13">2<pos:position pos:line="40" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="40" pos:column="16">(<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="17">debugfile<pos:position pos:line="40" pos:column="26"/></name><operator pos:line="40" pos:column="26">,<pos:position pos:line="40" pos:column="27"/></operator> <literal type="string" pos:line="40" pos:column="28">"SASL failed to get local IP address\n"<pos:position pos:line="40" pos:column="67"/></literal><operator pos:line="40" pos:column="67">)<pos:position pos:line="40" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="40" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="70"/></expr_stmt></block></else></if>
  
  <expr_stmt><expr><name pos:line="42" pos:column="3">size<pos:position pos:line="42" pos:column="7"/></name> <operator pos:line="42" pos:column="8">=<pos:position pos:line="42" pos:column="9"/></operator> <sizeof pos:line="42" pos:column="10">sizeof <argument_list pos:line="42" pos:column="17">(<argument><expr><name pos:line="42" pos:column="18">remote<pos:position pos:line="42" pos:column="24"/></name></expr></argument>)<pos:position pos:line="42" pos:column="25"/></argument_list></sizeof></expr>;<pos:position pos:line="42" pos:column="26"/></expr_stmt>
  <if pos:line="43" pos:column="3">if <condition pos:line="43" pos:column="6">(<expr><operator pos:line="43" pos:column="7">!<pos:position pos:line="43" pos:column="8"/></operator><call><name pos:line="43" pos:column="8">getpeername<pos:position pos:line="43" pos:column="19"/></name> <argument_list pos:line="43" pos:column="20">(<argument><expr><name><name pos:line="43" pos:column="21">conn<pos:position pos:line="43" pos:column="25"/></name><operator pos:line="43" pos:column="25">-&gt;<pos:position pos:line="43" pos:column="30"/></operator><name pos:line="43" pos:column="27">fd<pos:position pos:line="43" pos:column="29"/></name></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="31">(<pos:position pos:line="43" pos:column="32"/></operator>struct <name pos:line="43" pos:column="39">sockaddr<pos:position pos:line="43" pos:column="47"/></name> <operator pos:line="43" pos:column="48">*<pos:position pos:line="43" pos:column="49"/></operator><operator pos:line="43" pos:column="49">)<pos:position pos:line="43" pos:column="50"/></operator><operator pos:line="43" pos:column="50">&amp;<pos:position pos:line="43" pos:column="55"/></operator><name pos:line="43" pos:column="51">remote<pos:position pos:line="43" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="59">&amp;<pos:position pos:line="43" pos:column="64"/></operator><name pos:line="43" pos:column="60">size<pos:position pos:line="43" pos:column="64"/></name></expr></argument>)<pos:position pos:line="43" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="66"/></condition><then><block pos:line="43" pos:column="66">{
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><call><name pos:line="44" pos:column="9">iptostring<pos:position pos:line="44" pos:column="19"/></name><argument_list pos:line="44" pos:column="19">(<argument><expr><operator pos:line="44" pos:column="20">(<pos:position pos:line="44" pos:column="21"/></operator>struct <name pos:line="44" pos:column="28">sockaddr<pos:position pos:line="44" pos:column="36"/></name> <operator pos:line="44" pos:column="37">*<pos:position pos:line="44" pos:column="38"/></operator><operator pos:line="44" pos:column="38">)<pos:position pos:line="44" pos:column="39"/></operator><operator pos:line="44" pos:column="39">&amp;<pos:position pos:line="44" pos:column="44"/></operator><name pos:line="44" pos:column="40">remote<pos:position pos:line="44" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="48">size<pos:position pos:line="44" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="54">ipremoteport<pos:position pos:line="44" pos:column="66"/></name></expr></argument>,
                   <argument><expr><name pos:line="45" pos:column="20">IP_PORT_BUFLEN<pos:position pos:line="45" pos:column="34"/></name></expr></argument>)<pos:position pos:line="45" pos:column="35"/></argument_list></call> <operator pos:line="45" pos:column="36">==<pos:position pos:line="45" pos:column="38"/></operator> <name pos:line="45" pos:column="39">SASL_OK<pos:position pos:line="45" pos:column="46"/></name></expr>)<pos:position pos:line="45" pos:column="47"/></condition><then pos:line="45" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="7">prp<pos:position pos:line="46" pos:column="10"/></name> <operator pos:line="46" pos:column="11">=<pos:position pos:line="46" pos:column="12"/></operator> <name pos:line="46" pos:column="13">ipremoteport<pos:position pos:line="46" pos:column="25"/></name></expr>;<pos:position pos:line="46" pos:column="26"/></expr_stmt></block></then>
    <else pos:line="47" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="7">dprint<pos:position pos:line="48" pos:column="13"/></name> <argument_list pos:line="48" pos:column="14">(<argument><expr><literal type="number" pos:line="48" pos:column="15">2<pos:position pos:line="48" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="48" pos:column="18">(<pos:position pos:line="48" pos:column="19"/></operator><name pos:line="48" pos:column="19">debugfile<pos:position pos:line="48" pos:column="28"/></name><operator pos:line="48" pos:column="28">,<pos:position pos:line="48" pos:column="29"/></operator> <literal type="string" pos:line="48" pos:column="30">"SASL failed to parse remote IP address\n"<pos:position pos:line="48" pos:column="72"/></literal><operator pos:line="48" pos:column="72">)<pos:position pos:line="48" pos:column="73"/></operator></expr></argument>)<pos:position pos:line="48" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="75"/></expr_stmt></block></else></if>
  }<pos:position pos:line="49" pos:column="4"/></block></then>
  <else pos:line="50" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="5">dprint<pos:position pos:line="51" pos:column="11"/></name> <argument_list pos:line="51" pos:column="12">(<argument><expr><literal type="number" pos:line="51" pos:column="13">2<pos:position pos:line="51" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="51" pos:column="16">(<pos:position pos:line="51" pos:column="17"/></operator><name pos:line="51" pos:column="17">debugfile<pos:position pos:line="51" pos:column="26"/></name><operator pos:line="51" pos:column="26">,<pos:position pos:line="51" pos:column="27"/></operator> <literal type="string" pos:line="51" pos:column="28">"SASL failed to get remote IP address\n"<pos:position pos:line="51" pos:column="68"/></literal><operator pos:line="51" pos:column="68">)<pos:position pos:line="51" pos:column="69"/></operator></expr></argument>)<pos:position pos:line="51" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="71"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="53" pos:column="3">dprint<pos:position pos:line="53" pos:column="9"/></name> <argument_list pos:line="53" pos:column="10">(<argument><expr><literal type="number" pos:line="53" pos:column="11">2<pos:position pos:line="53" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="53" pos:column="14">(<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="15">debugfile<pos:position pos:line="53" pos:column="24"/></name><operator pos:line="53" pos:column="24">,<pos:position pos:line="53" pos:column="25"/></operator> <literal type="string" pos:line="53" pos:column="26">"SASL local ip: %s, remote ip:%s\n"<pos:position pos:line="53" pos:column="61"/></literal><operator pos:line="53" pos:column="61">,<pos:position pos:line="53" pos:column="62"/></operator> <call><name pos:line="53" pos:column="63">NONULL<pos:position pos:line="53" pos:column="69"/></name><argument_list pos:line="53" pos:column="69">(<argument><expr><name pos:line="53" pos:column="70">plp<pos:position pos:line="53" pos:column="73"/></name></expr></argument>)<pos:position pos:line="53" pos:column="74"/></argument_list></call><operator pos:line="53" pos:column="74">,<pos:position pos:line="53" pos:column="75"/></operator>
	      <call><name pos:line="54" pos:column="15">NONULL<pos:position pos:line="54" pos:column="21"/></name><argument_list pos:line="54" pos:column="21">(<argument><expr><name pos:line="54" pos:column="22">prp<pos:position pos:line="54" pos:column="25"/></name></expr></argument>)<pos:position pos:line="54" pos:column="26"/></argument_list></call><operator pos:line="54" pos:column="26">)<pos:position pos:line="54" pos:column="27"/></operator></expr></argument>)<pos:position pos:line="54" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="29"/></expr_stmt>
  
  <expr_stmt><expr><name pos:line="56" pos:column="3">rc<pos:position pos:line="56" pos:column="5"/></name> <operator pos:line="56" pos:column="6">=<pos:position pos:line="56" pos:column="7"/></operator> <call><name pos:line="56" pos:column="8">sasl_client_new<pos:position pos:line="56" pos:column="23"/></name> <argument_list pos:line="56" pos:column="24">(<argument><expr><name pos:line="56" pos:column="25">service<pos:position pos:line="56" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="34">conn<pos:position pos:line="56" pos:column="38"/></name><operator pos:line="56" pos:column="38">-&gt;<pos:position pos:line="56" pos:column="43"/></operator><name pos:line="56" pos:column="40">account<pos:position pos:line="56" pos:column="47"/></name><operator pos:line="56" pos:column="47">.<pos:position pos:line="56" pos:column="48"/></operator><name pos:line="56" pos:column="48">host<pos:position pos:line="56" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="54">plp<pos:position pos:line="56" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="59">prp<pos:position pos:line="56" pos:column="62"/></name></expr></argument>,
    <argument><expr><call><name pos:line="57" pos:column="5">mutt_sasl_get_callbacks<pos:position pos:line="57" pos:column="28"/></name> <argument_list pos:line="57" pos:column="29">(<argument><expr><operator pos:line="57" pos:column="30">&amp;<pos:position pos:line="57" pos:column="35"/></operator><name><name pos:line="57" pos:column="31">conn<pos:position pos:line="57" pos:column="35"/></name><operator pos:line="57" pos:column="35">-&gt;<pos:position pos:line="57" pos:column="40"/></operator><name pos:line="57" pos:column="37">account<pos:position pos:line="57" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="47">0<pos:position pos:line="57" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="50">saslconn<pos:position pos:line="57" pos:column="58"/></name></expr></argument>)<pos:position pos:line="57" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="60"/></expr_stmt>

  <if pos:line="59" pos:column="3">if <condition pos:line="59" pos:column="6">(<expr><name pos:line="59" pos:column="7">rc<pos:position pos:line="59" pos:column="9"/></name> <operator pos:line="59" pos:column="10">!=<pos:position pos:line="59" pos:column="12"/></operator> <name pos:line="59" pos:column="13">SASL_OK<pos:position pos:line="59" pos:column="20"/></name></expr>)<pos:position pos:line="59" pos:column="21"/></condition><then pos:line="59" pos:column="21">
  <block pos:line="60" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">mutt_error<pos:position pos:line="61" pos:column="15"/></name> <argument_list pos:line="61" pos:column="16">(<argument><expr><call><name pos:line="61" pos:column="17">_<pos:position pos:line="61" pos:column="18"/></name><argument_list pos:line="61" pos:column="18">(<argument><expr><literal type="string" pos:line="61" pos:column="19">"Error allocating SASL connection"<pos:position pos:line="61" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="61" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="62" pos:column="5">mutt_sleep<pos:position pos:line="62" pos:column="15"/></name> <argument_list pos:line="62" pos:column="16">(<argument><expr><literal type="number" pos:line="62" pos:column="17">2<pos:position pos:line="62" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="20"/></expr_stmt>
    <return pos:line="63" pos:column="5">return <expr><operator pos:line="63" pos:column="12">-<pos:position pos:line="63" pos:column="13"/></operator><literal type="number" pos:line="63" pos:column="13">1<pos:position pos:line="63" pos:column="14"/></literal></expr>;<pos:position pos:line="63" pos:column="15"/></return>
  }<pos:position pos:line="64" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="66" pos:column="3">memset<pos:position pos:line="66" pos:column="9"/></name> <argument_list pos:line="66" pos:column="10">(<argument><expr><operator pos:line="66" pos:column="11">&amp;<pos:position pos:line="66" pos:column="16"/></operator><name pos:line="66" pos:column="12">secprops<pos:position pos:line="66" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="22">0<pos:position pos:line="66" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="66" pos:column="25">sizeof <argument_list pos:line="66" pos:column="32">(<argument><expr><name pos:line="66" pos:column="33">secprops<pos:position pos:line="66" pos:column="41"/></name></expr></argument>)<pos:position pos:line="66" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="66" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="44"/></expr_stmt>
  <comment type="block" pos:line="67" pos:column="3">/* Work around a casting bug in the SASL krb4 module */</comment>
  <expr_stmt><expr><name><name pos:line="68" pos:column="3">secprops<pos:position pos:line="68" pos:column="11"/></name><operator pos:line="68" pos:column="11">.<pos:position pos:line="68" pos:column="12"/></operator><name pos:line="68" pos:column="12">max_ssf<pos:position pos:line="68" pos:column="19"/></name></name> <operator pos:line="68" pos:column="20">=<pos:position pos:line="68" pos:column="21"/></operator> <literal type="number" pos:line="68" pos:column="22">0x7fff<pos:position pos:line="68" pos:column="28"/></literal></expr>;<pos:position pos:line="68" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="69" pos:column="3">secprops<pos:position pos:line="69" pos:column="11"/></name><operator pos:line="69" pos:column="11">.<pos:position pos:line="69" pos:column="12"/></operator><name pos:line="69" pos:column="12">maxbufsize<pos:position pos:line="69" pos:column="22"/></name></name> <operator pos:line="69" pos:column="23">=<pos:position pos:line="69" pos:column="24"/></operator> <name pos:line="69" pos:column="25">MUTT_SASL_MAXBUF<pos:position pos:line="69" pos:column="41"/></name></expr>;<pos:position pos:line="69" pos:column="42"/></expr_stmt>
  <if pos:line="70" pos:column="3">if <condition pos:line="70" pos:column="6">(<expr><call><name pos:line="70" pos:column="7">sasl_setprop<pos:position pos:line="70" pos:column="19"/></name> <argument_list pos:line="70" pos:column="20">(<argument><expr><operator pos:line="70" pos:column="21">*<pos:position pos:line="70" pos:column="22"/></operator><name pos:line="70" pos:column="22">saslconn<pos:position pos:line="70" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="32">SASL_SEC_PROPS<pos:position pos:line="70" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="48">&amp;<pos:position pos:line="70" pos:column="53"/></operator><name pos:line="70" pos:column="49">secprops<pos:position pos:line="70" pos:column="57"/></name></expr></argument>)<pos:position pos:line="70" pos:column="58"/></argument_list></call> <operator pos:line="70" pos:column="59">!=<pos:position pos:line="70" pos:column="61"/></operator> <name pos:line="70" pos:column="62">SASL_OK<pos:position pos:line="70" pos:column="69"/></name></expr>)<pos:position pos:line="70" pos:column="70"/></condition><then pos:line="70" pos:column="70">
  <block pos:line="71" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">mutt_error<pos:position pos:line="72" pos:column="15"/></name> <argument_list pos:line="72" pos:column="16">(<argument><expr><call><name pos:line="72" pos:column="17">_<pos:position pos:line="72" pos:column="18"/></name><argument_list pos:line="72" pos:column="18">(<argument><expr><literal type="string" pos:line="72" pos:column="19">"Error setting SASL security properties"<pos:position pos:line="72" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="72" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="62"/></expr_stmt>
    <return pos:line="73" pos:column="5">return <expr><operator pos:line="73" pos:column="12">-<pos:position pos:line="73" pos:column="13"/></operator><literal type="number" pos:line="73" pos:column="13">1<pos:position pos:line="73" pos:column="14"/></literal></expr>;<pos:position pos:line="73" pos:column="15"/></return>
  }<pos:position pos:line="74" pos:column="4"/></block></then></if>

  <if pos:line="76" pos:column="3">if <condition pos:line="76" pos:column="6">(<expr><name><name pos:line="76" pos:column="7">conn<pos:position pos:line="76" pos:column="11"/></name><operator pos:line="76" pos:column="11">-&gt;<pos:position pos:line="76" pos:column="16"/></operator><name pos:line="76" pos:column="13">ssf<pos:position pos:line="76" pos:column="16"/></name></name></expr>)<pos:position pos:line="76" pos:column="17"/></condition><then pos:line="76" pos:column="17">
  <block pos:line="77" pos:column="3">{
    <comment type="block" pos:line="78" pos:column="5">/* I'm not sure this actually has an effect, at least with SASLv2 */</comment>
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">dprint<pos:position pos:line="79" pos:column="11"/></name> <argument_list pos:line="79" pos:column="12">(<argument><expr><literal type="number" pos:line="79" pos:column="13">2<pos:position pos:line="79" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="79" pos:column="16">(<pos:position pos:line="79" pos:column="17"/></operator><name pos:line="79" pos:column="17">debugfile<pos:position pos:line="79" pos:column="26"/></name><operator pos:line="79" pos:column="26">,<pos:position pos:line="79" pos:column="27"/></operator> <literal type="string" pos:line="79" pos:column="28">"External SSF: %d\n"<pos:position pos:line="79" pos:column="48"/></literal><operator pos:line="79" pos:column="48">,<pos:position pos:line="79" pos:column="49"/></operator> <name><name pos:line="79" pos:column="50">conn<pos:position pos:line="79" pos:column="54"/></name><operator pos:line="79" pos:column="54">-&gt;<pos:position pos:line="79" pos:column="59"/></operator><name pos:line="79" pos:column="56">ssf<pos:position pos:line="79" pos:column="59"/></name></name><operator pos:line="79" pos:column="59">)<pos:position pos:line="79" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="79" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="62"/></expr_stmt>
    <if pos:line="80" pos:column="5">if <condition pos:line="80" pos:column="8">(<expr><call><name pos:line="80" pos:column="9">sasl_setprop<pos:position pos:line="80" pos:column="21"/></name> <argument_list pos:line="80" pos:column="22">(<argument><expr><operator pos:line="80" pos:column="23">*<pos:position pos:line="80" pos:column="24"/></operator><name pos:line="80" pos:column="24">saslconn<pos:position pos:line="80" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="34">SASL_SSF_EXTERNAL<pos:position pos:line="80" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="53">&amp;<pos:position pos:line="80" pos:column="58"/></operator><operator pos:line="80" pos:column="54">(<pos:position pos:line="80" pos:column="55"/></operator><name><name pos:line="80" pos:column="55">conn<pos:position pos:line="80" pos:column="59"/></name><operator pos:line="80" pos:column="59">-&gt;<pos:position pos:line="80" pos:column="64"/></operator><name pos:line="80" pos:column="61">ssf<pos:position pos:line="80" pos:column="64"/></name></name><operator pos:line="80" pos:column="64">)<pos:position pos:line="80" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="80" pos:column="66"/></argument_list></call> <operator pos:line="80" pos:column="67">!=<pos:position pos:line="80" pos:column="69"/></operator> <name pos:line="80" pos:column="70">SASL_OK<pos:position pos:line="80" pos:column="77"/></name></expr>)<pos:position pos:line="80" pos:column="78"/></condition><then pos:line="80" pos:column="78">
    <block pos:line="81" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="82" pos:column="7">mutt_error<pos:position pos:line="82" pos:column="17"/></name> <argument_list pos:line="82" pos:column="18">(<argument><expr><call><name pos:line="82" pos:column="19">_<pos:position pos:line="82" pos:column="20"/></name><argument_list pos:line="82" pos:column="20">(<argument><expr><literal type="string" pos:line="82" pos:column="21">"Error setting SASL external security strength"<pos:position pos:line="82" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="71"/></expr_stmt>
      <return pos:line="83" pos:column="7">return <expr><operator pos:line="83" pos:column="14">-<pos:position pos:line="83" pos:column="15"/></operator><literal type="number" pos:line="83" pos:column="15">1<pos:position pos:line="83" pos:column="16"/></literal></expr>;<pos:position pos:line="83" pos:column="17"/></return>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if>
  }<pos:position pos:line="85" pos:column="4"/></block></then></if>
  <if pos:line="86" pos:column="3">if <condition pos:line="86" pos:column="6">(<expr><name><name pos:line="86" pos:column="7">conn<pos:position pos:line="86" pos:column="11"/></name><operator pos:line="86" pos:column="11">-&gt;<pos:position pos:line="86" pos:column="16"/></operator><name pos:line="86" pos:column="13">account<pos:position pos:line="86" pos:column="20"/></name><operator pos:line="86" pos:column="20">.<pos:position pos:line="86" pos:column="21"/></operator><name pos:line="86" pos:column="21">user<pos:position pos:line="86" pos:column="25"/></name><index pos:line="86" pos:column="25">[<expr><literal type="number" pos:line="86" pos:column="26">0<pos:position pos:line="86" pos:column="27"/></literal></expr>]<pos:position pos:line="86" pos:column="28"/></index></name></expr>)<pos:position pos:line="86" pos:column="29"/></condition><then pos:line="86" pos:column="29">
  <block pos:line="87" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="88" pos:column="5">dprint<pos:position pos:line="88" pos:column="11"/></name> <argument_list pos:line="88" pos:column="12">(<argument><expr><literal type="number" pos:line="88" pos:column="13">2<pos:position pos:line="88" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="88" pos:column="16">(<pos:position pos:line="88" pos:column="17"/></operator><name pos:line="88" pos:column="17">debugfile<pos:position pos:line="88" pos:column="26"/></name><operator pos:line="88" pos:column="26">,<pos:position pos:line="88" pos:column="27"/></operator> <literal type="string" pos:line="88" pos:column="28">"External authentication name: %s\n"<pos:position pos:line="88" pos:column="64"/></literal><operator pos:line="88" pos:column="64">,<pos:position pos:line="88" pos:column="65"/></operator> <name><name pos:line="88" pos:column="66">conn<pos:position pos:line="88" pos:column="70"/></name><operator pos:line="88" pos:column="70">-&gt;<pos:position pos:line="88" pos:column="75"/></operator><name pos:line="88" pos:column="72">account<pos:position pos:line="88" pos:column="79"/></name><operator pos:line="88" pos:column="79">.<pos:position pos:line="88" pos:column="80"/></operator><name pos:line="88" pos:column="80">user<pos:position pos:line="88" pos:column="84"/></name></name><operator pos:line="88" pos:column="84">)<pos:position pos:line="88" pos:column="85"/></operator></expr></argument>)<pos:position pos:line="88" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="87"/></expr_stmt>
    <if pos:line="89" pos:column="5">if <condition pos:line="89" pos:column="8">(<expr><call><name pos:line="89" pos:column="9">sasl_setprop<pos:position pos:line="89" pos:column="21"/></name> <argument_list pos:line="89" pos:column="22">(<argument><expr><operator pos:line="89" pos:column="23">*<pos:position pos:line="89" pos:column="24"/></operator><name pos:line="89" pos:column="24">saslconn<pos:position pos:line="89" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="34">SASL_AUTH_EXTERNAL<pos:position pos:line="89" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="54">conn<pos:position pos:line="89" pos:column="58"/></name><operator pos:line="89" pos:column="58">-&gt;<pos:position pos:line="89" pos:column="63"/></operator><name pos:line="89" pos:column="60">account<pos:position pos:line="89" pos:column="67"/></name><operator pos:line="89" pos:column="67">.<pos:position pos:line="89" pos:column="68"/></operator><name pos:line="89" pos:column="68">user<pos:position pos:line="89" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="73"/></argument_list></call> <operator pos:line="89" pos:column="74">!=<pos:position pos:line="89" pos:column="76"/></operator> <name pos:line="89" pos:column="77">SASL_OK<pos:position pos:line="89" pos:column="84"/></name></expr>)<pos:position pos:line="89" pos:column="85"/></condition><then pos:line="89" pos:column="85">
    <block pos:line="90" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="91" pos:column="7">mutt_error<pos:position pos:line="91" pos:column="17"/></name> <argument_list pos:line="91" pos:column="18">(<argument><expr><call><name pos:line="91" pos:column="19">_<pos:position pos:line="91" pos:column="20"/></name><argument_list pos:line="91" pos:column="20">(<argument><expr><literal type="string" pos:line="91" pos:column="21">"Error setting SASL external user name"<pos:position pos:line="91" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="91" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="63"/></expr_stmt>
      <return pos:line="92" pos:column="7">return <expr><operator pos:line="92" pos:column="14">-<pos:position pos:line="92" pos:column="15"/></operator><literal type="number" pos:line="92" pos:column="15">1<pos:position pos:line="92" pos:column="16"/></literal></expr>;<pos:position pos:line="92" pos:column="17"/></return>
    }<pos:position pos:line="93" pos:column="6"/></block></then></if>
  }<pos:position pos:line="94" pos:column="4"/></block></then></if>

  <return pos:line="96" pos:column="3">return <expr><literal type="number" pos:line="96" pos:column="10">0<pos:position pos:line="96" pos:column="11"/></literal></expr>;<pos:position pos:line="96" pos:column="12"/></return>
}<pos:position pos:line="97" pos:column="2"/></block></function></unit>

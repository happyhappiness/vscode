<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_558_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_socket_open<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">CONNECTION<pos:position pos:line="1" pos:column="33"/></name><modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type> <name pos:line="1" pos:column="35">conn<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list> 
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">rc<pos:position pos:line="3" pos:column="9"/></name></decl>;<pos:position pos:line="3" pos:column="10"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name pos:line="5" pos:column="7">socket_preconnect<pos:position pos:line="5" pos:column="24"/></name> <argument_list pos:line="5" pos:column="25">()<pos:position pos:line="5" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="28"/></condition><then pos:line="5" pos:column="28">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">-<pos:position pos:line="6" pos:column="13"/></operator><literal type="number" pos:line="6" pos:column="13">1<pos:position pos:line="6" pos:column="14"/></literal></expr>;<pos:position pos:line="6" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="8" pos:column="3">rc<pos:position pos:line="8" pos:column="5"/></name> <operator pos:line="8" pos:column="6">=<pos:position pos:line="8" pos:column="7"/></operator> <call><name><name pos:line="8" pos:column="8">conn<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">-&gt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">conn_open<pos:position pos:line="8" pos:column="23"/></name></name> <argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">conn<pos:position pos:line="8" pos:column="29"/></name></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">dprint<pos:position pos:line="10" pos:column="9"/></name> <argument_list pos:line="10" pos:column="10">(<argument><expr><literal type="number" pos:line="10" pos:column="11">2<pos:position pos:line="10" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="14">(<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">debugfile<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">,<pos:position pos:line="10" pos:column="25"/></operator> <literal type="string" pos:line="10" pos:column="26">"Connected to %s:%d on fd=%d\n"<pos:position pos:line="10" pos:column="57"/></literal><operator pos:line="10" pos:column="57">,<pos:position pos:line="10" pos:column="58"/></operator>
	      <call><name pos:line="11" pos:column="15">NONULL<pos:position pos:line="11" pos:column="21"/></name> <argument_list pos:line="11" pos:column="22">(<argument><expr><name><name pos:line="11" pos:column="23">conn<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">account<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">.<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="37">host<pos:position pos:line="11" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call><operator pos:line="11" pos:column="42">,<pos:position pos:line="11" pos:column="43"/></operator> <name><name pos:line="11" pos:column="44">conn<pos:position pos:line="11" pos:column="48"/></name><operator pos:line="11" pos:column="48">-&gt;<pos:position pos:line="11" pos:column="53"/></operator><name pos:line="11" pos:column="50">account<pos:position pos:line="11" pos:column="57"/></name><operator pos:line="11" pos:column="57">.<pos:position pos:line="11" pos:column="58"/></operator><name pos:line="11" pos:column="58">port<pos:position pos:line="11" pos:column="62"/></name></name><operator pos:line="11" pos:column="62">,<pos:position pos:line="11" pos:column="63"/></operator> <name><name pos:line="11" pos:column="64">conn<pos:position pos:line="11" pos:column="68"/></name><operator pos:line="11" pos:column="68">-&gt;<pos:position pos:line="11" pos:column="73"/></operator><name pos:line="11" pos:column="70">fd<pos:position pos:line="11" pos:column="72"/></name></name><operator pos:line="11" pos:column="72">)<pos:position pos:line="11" pos:column="73"/></operator></expr></argument>)<pos:position pos:line="11" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="75"/></expr_stmt>

  <return pos:line="13" pos:column="3">return <expr><name pos:line="13" pos:column="10">rc<pos:position pos:line="13" pos:column="12"/></name></expr>;<pos:position pos:line="13" pos:column="13"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

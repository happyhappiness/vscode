<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_992_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">tls_compare_certificates<pos:position pos:line="1" pos:column="36"/></name> <parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">gnutls_datum_t<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">peercert<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">gnutls_datum_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">cert<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">unsigned<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">ptr<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">fd1<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">ret<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">gnutls_datum_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">b64_data<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">unsigned<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">char<pos:position pos:line="8" pos:column="16"/></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">b64_data_data<pos:position pos:line="8" pos:column="31"/></name></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">stat<pos:position pos:line="9" pos:column="14"/></name></name></type> <name pos:line="9" pos:column="15">filestat<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><call><name pos:line="11" pos:column="7">stat<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name pos:line="11" pos:column="12">SslCertFile<pos:position pos:line="11" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="25">&amp;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="26">filestat<pos:position pos:line="11" pos:column="34"/></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call> <operator pos:line="11" pos:column="36">==<pos:position pos:line="11" pos:column="38"/></operator> <operator pos:line="11" pos:column="39">-<pos:position pos:line="11" pos:column="40"/></operator><literal type="number" pos:line="11" pos:column="40">1<pos:position pos:line="11" pos:column="41"/></literal></expr>)<pos:position pos:line="11" pos:column="42"/></condition><then pos:line="11" pos:column="42">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><literal type="number" pos:line="12" pos:column="12">0<pos:position pos:line="12" pos:column="13"/></literal></expr>;<pos:position pos:line="12" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="14" pos:column="3">b64_data<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">.<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="12">size<pos:position pos:line="14" pos:column="16"/></name></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <name><name pos:line="14" pos:column="19">filestat<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">.<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="28">st_size<pos:position pos:line="14" pos:column="35"/></name></name><operator pos:line="14" pos:column="35">+<pos:position pos:line="14" pos:column="36"/></operator><literal type="number" pos:line="14" pos:column="36">1<pos:position pos:line="14" pos:column="37"/></literal></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name pos:line="15" pos:column="3">b64_data_data<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <operator pos:line="15" pos:column="19">(<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="20">unsigned<pos:position pos:line="15" pos:column="28"/></name> <name pos:line="15" pos:column="29">char<pos:position pos:line="15" pos:column="33"/></name> <operator pos:line="15" pos:column="34">*<pos:position pos:line="15" pos:column="35"/></operator><operator pos:line="15" pos:column="35">)<pos:position pos:line="15" pos:column="36"/></operator> <call><name pos:line="15" pos:column="37">safe_calloc<pos:position pos:line="15" pos:column="48"/></name> <argument_list pos:line="15" pos:column="49">(<argument><expr><literal type="number" pos:line="15" pos:column="50">1<pos:position pos:line="15" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="53">b64_data<pos:position pos:line="15" pos:column="61"/></name><operator pos:line="15" pos:column="61">.<pos:position pos:line="15" pos:column="62"/></operator><name pos:line="15" pos:column="62">size<pos:position pos:line="15" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="68"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">b64_data_data<pos:position pos:line="16" pos:column="16"/></name><index pos:line="16" pos:column="16">[<expr><name><name pos:line="16" pos:column="17">b64_data<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">.<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="26">size<pos:position pos:line="16" pos:column="30"/></name></name><operator pos:line="16" pos:column="30">-<pos:position pos:line="16" pos:column="31"/></operator><literal type="number" pos:line="16" pos:column="31">1<pos:position pos:line="16" pos:column="32"/></literal></expr>]<pos:position pos:line="16" pos:column="33"/></index></name> <operator pos:line="16" pos:column="34">=<pos:position pos:line="16" pos:column="35"/></operator> <literal type="char" pos:line="16" pos:column="36">'\0'<pos:position pos:line="16" pos:column="40"/></literal></expr>;<pos:position pos:line="16" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">b64_data<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">.<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="12">data<pos:position pos:line="17" pos:column="16"/></name></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">b64_data_data<pos:position pos:line="17" pos:column="32"/></name></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><name pos:line="19" pos:column="3">fd1<pos:position pos:line="19" pos:column="6"/></name> <operator pos:line="19" pos:column="7">=<pos:position pos:line="19" pos:column="8"/></operator> <call><name pos:line="19" pos:column="9">fopen<pos:position pos:line="19" pos:column="14"/></name><argument_list pos:line="19" pos:column="14">(<argument><expr><name pos:line="19" pos:column="15">SslCertFile<pos:position pos:line="19" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="28">"r"<pos:position pos:line="19" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">fd1<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">==<pos:position pos:line="20" pos:column="13"/></operator> <name pos:line="20" pos:column="14">NULL<pos:position pos:line="20" pos:column="18"/></name></expr>)<pos:position pos:line="20" pos:column="19"/></condition><then pos:line="20" pos:column="19"> <block pos:line="20" pos:column="20">{
    <return pos:line="21" pos:column="5">return <expr><literal type="number" pos:line="21" pos:column="12">0<pos:position pos:line="21" pos:column="13"/></literal></expr>;<pos:position pos:line="21" pos:column="14"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="24" pos:column="3">b64_data<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">.<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="12">size<pos:position pos:line="24" pos:column="16"/></name></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <call><name pos:line="24" pos:column="19">fread<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name><name pos:line="24" pos:column="25">b64_data<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">.<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="34">data<pos:position pos:line="24" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="40">1<pos:position pos:line="24" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="43">b64_data<pos:position pos:line="24" pos:column="51"/></name><operator pos:line="24" pos:column="51">.<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="52">size<pos:position pos:line="24" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="58">fd1<pos:position pos:line="24" pos:column="61"/></name></expr></argument>)<pos:position pos:line="24" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="63"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">safe_fclose<pos:position pos:line="25" pos:column="14"/></name> <argument_list pos:line="25" pos:column="15">(<argument><expr><operator pos:line="25" pos:column="16">&amp;<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="17">fd1<pos:position pos:line="25" pos:column="20"/></name></expr></argument>)<pos:position pos:line="25" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="22"/></expr_stmt>

  <do pos:line="27" pos:column="3">do <block pos:line="27" pos:column="6">{
    <expr_stmt><expr><name pos:line="28" pos:column="5">ret<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">=<pos:position pos:line="28" pos:column="10"/></operator> <call><name pos:line="28" pos:column="11">gnutls_pem_base64_decode_alloc<pos:position pos:line="28" pos:column="41"/></name><argument_list pos:line="28" pos:column="41">(<argument><expr><name pos:line="28" pos:column="42">NULL<pos:position pos:line="28" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="48">&amp;<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="49">b64_data<pos:position pos:line="28" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="59">&amp;<pos:position pos:line="28" pos:column="64"/></operator><name pos:line="28" pos:column="60">cert<pos:position pos:line="28" pos:column="64"/></name></expr></argument>)<pos:position pos:line="28" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="66"/></expr_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">ret<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">!=<pos:position pos:line="29" pos:column="15"/></operator> <literal type="number" pos:line="29" pos:column="16">0<pos:position pos:line="29" pos:column="17"/></literal></expr>)<pos:position pos:line="29" pos:column="18"/></condition><then pos:line="29" pos:column="18">
    <block pos:line="30" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">FREE<pos:position pos:line="31" pos:column="11"/></name> <argument_list pos:line="31" pos:column="12">(<argument><expr><operator pos:line="31" pos:column="13">&amp;<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="14">b64_data_data<pos:position pos:line="31" pos:column="27"/></name></expr></argument>)<pos:position pos:line="31" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt>
      <return pos:line="32" pos:column="7">return <expr><literal type="number" pos:line="32" pos:column="14">0<pos:position pos:line="32" pos:column="15"/></literal></expr>;<pos:position pos:line="32" pos:column="16"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="35" pos:column="5">/* find start of cert, skipping junk */</comment>
    <expr_stmt><expr><name pos:line="36" pos:column="5">ptr<pos:position pos:line="36" pos:column="8"/></name> <operator pos:line="36" pos:column="9">=<pos:position pos:line="36" pos:column="10"/></operator> <operator pos:line="36" pos:column="11">(<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="12">unsigned<pos:position pos:line="36" pos:column="20"/></name> <name pos:line="36" pos:column="21">char<pos:position pos:line="36" pos:column="25"/></name> <operator pos:line="36" pos:column="26">*<pos:position pos:line="36" pos:column="27"/></operator><operator pos:line="36" pos:column="27">)<pos:position pos:line="36" pos:column="28"/></operator><call><name pos:line="36" pos:column="28">strstr<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">(<argument><expr><operator pos:line="36" pos:column="35">(<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="36">char<pos:position pos:line="36" pos:column="40"/></name><operator pos:line="36" pos:column="40">*<pos:position pos:line="36" pos:column="41"/></operator><operator pos:line="36" pos:column="41">)<pos:position pos:line="36" pos:column="42"/></operator><name><name pos:line="36" pos:column="42">b64_data<pos:position pos:line="36" pos:column="50"/></name><operator pos:line="36" pos:column="50">.<pos:position pos:line="36" pos:column="51"/></operator><name pos:line="36" pos:column="51">data<pos:position pos:line="36" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="57">CERT_SEP<pos:position pos:line="36" pos:column="65"/></name></expr></argument>)<pos:position pos:line="36" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="67"/></expr_stmt>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><operator pos:line="37" pos:column="9">!<pos:position pos:line="37" pos:column="10"/></operator><name pos:line="37" pos:column="10">ptr<pos:position pos:line="37" pos:column="13"/></name></expr>)<pos:position pos:line="37" pos:column="14"/></condition><then pos:line="37" pos:column="14">
    <block pos:line="38" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="39" pos:column="7">gnutls_free<pos:position pos:line="39" pos:column="18"/></name><argument_list pos:line="39" pos:column="18">(<argument><expr><name><name pos:line="39" pos:column="19">cert<pos:position pos:line="39" pos:column="23"/></name><operator pos:line="39" pos:column="23">.<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="24">data<pos:position pos:line="39" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">FREE<pos:position pos:line="40" pos:column="11"/></name> <argument_list pos:line="40" pos:column="12">(<argument><expr><operator pos:line="40" pos:column="13">&amp;<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="14">b64_data_data<pos:position pos:line="40" pos:column="27"/></name></expr></argument>)<pos:position pos:line="40" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>
      <return pos:line="41" pos:column="7">return <expr><literal type="number" pos:line="41" pos:column="14">0<pos:position pos:line="41" pos:column="15"/></literal></expr>;<pos:position pos:line="41" pos:column="16"/></return>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="43" pos:column="5">/* find start of next cert */</comment>
    <expr_stmt><expr><name pos:line="44" pos:column="5">ptr<pos:position pos:line="44" pos:column="8"/></name> <operator pos:line="44" pos:column="9">=<pos:position pos:line="44" pos:column="10"/></operator> <operator pos:line="44" pos:column="11">(<pos:position pos:line="44" pos:column="12"/></operator><name pos:line="44" pos:column="12">unsigned<pos:position pos:line="44" pos:column="20"/></name> <name pos:line="44" pos:column="21">char<pos:position pos:line="44" pos:column="25"/></name> <operator pos:line="44" pos:column="26">*<pos:position pos:line="44" pos:column="27"/></operator><operator pos:line="44" pos:column="27">)<pos:position pos:line="44" pos:column="28"/></operator><call><name pos:line="44" pos:column="28">strstr<pos:position pos:line="44" pos:column="34"/></name><argument_list pos:line="44" pos:column="34">(<argument><expr><operator pos:line="44" pos:column="35">(<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="36">char<pos:position pos:line="44" pos:column="40"/></name><operator pos:line="44" pos:column="40">*<pos:position pos:line="44" pos:column="41"/></operator><operator pos:line="44" pos:column="41">)<pos:position pos:line="44" pos:column="42"/></operator><name pos:line="44" pos:column="42">ptr<pos:position pos:line="44" pos:column="45"/></name> <operator pos:line="44" pos:column="46">+<pos:position pos:line="44" pos:column="47"/></operator> <literal type="number" pos:line="44" pos:column="48">1<pos:position pos:line="44" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="51">CERT_SEP<pos:position pos:line="44" pos:column="59"/></name></expr></argument>)<pos:position pos:line="44" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="61"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="46" pos:column="5">b64_data<pos:position pos:line="46" pos:column="13"/></name><operator pos:line="46" pos:column="13">.<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">size<pos:position pos:line="46" pos:column="18"/></name></name> <operator pos:line="46" pos:column="19">=<pos:position pos:line="46" pos:column="20"/></operator> <name><name pos:line="46" pos:column="21">b64_data<pos:position pos:line="46" pos:column="29"/></name><operator pos:line="46" pos:column="29">.<pos:position pos:line="46" pos:column="30"/></operator><name pos:line="46" pos:column="30">size<pos:position pos:line="46" pos:column="34"/></name></name> <operator pos:line="46" pos:column="35">-<pos:position pos:line="46" pos:column="36"/></operator> <operator pos:line="46" pos:column="37">(<pos:position pos:line="46" pos:column="38"/></operator><name pos:line="46" pos:column="38">ptr<pos:position pos:line="46" pos:column="41"/></name> <operator pos:line="46" pos:column="42">-<pos:position pos:line="46" pos:column="43"/></operator> <name><name pos:line="46" pos:column="44">b64_data<pos:position pos:line="46" pos:column="52"/></name><operator pos:line="46" pos:column="52">.<pos:position pos:line="46" pos:column="53"/></operator><name pos:line="46" pos:column="53">data<pos:position pos:line="46" pos:column="57"/></name></name><operator pos:line="46" pos:column="57">)<pos:position pos:line="46" pos:column="58"/></operator></expr>;<pos:position pos:line="46" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="47" pos:column="5">b64_data<pos:position pos:line="47" pos:column="13"/></name><operator pos:line="47" pos:column="13">.<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="14">data<pos:position pos:line="47" pos:column="18"/></name></name> <operator pos:line="47" pos:column="19">=<pos:position pos:line="47" pos:column="20"/></operator> <name pos:line="47" pos:column="21">ptr<pos:position pos:line="47" pos:column="24"/></name></expr>;<pos:position pos:line="47" pos:column="25"/></expr_stmt>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name><name pos:line="49" pos:column="9">cert<pos:position pos:line="49" pos:column="13"/></name><operator pos:line="49" pos:column="13">.<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="14">size<pos:position pos:line="49" pos:column="18"/></name></name> <operator pos:line="49" pos:column="19">==<pos:position pos:line="49" pos:column="21"/></operator> <name><name pos:line="49" pos:column="22">peercert<pos:position pos:line="49" pos:column="30"/></name><operator pos:line="49" pos:column="30">-&gt;<pos:position pos:line="49" pos:column="35"/></operator><name pos:line="49" pos:column="32">size<pos:position pos:line="49" pos:column="36"/></name></name></expr>)<pos:position pos:line="49" pos:column="37"/></condition><then pos:line="49" pos:column="37">
    <block pos:line="50" pos:column="5">{
      <if pos:line="51" pos:column="7">if <condition pos:line="51" pos:column="10">(<expr><call><name pos:line="51" pos:column="11">memcmp<pos:position pos:line="51" pos:column="17"/></name> <argument_list pos:line="51" pos:column="18">(<argument><expr><name><name pos:line="51" pos:column="19">cert<pos:position pos:line="51" pos:column="23"/></name><operator pos:line="51" pos:column="23">.<pos:position pos:line="51" pos:column="24"/></operator><name pos:line="51" pos:column="24">data<pos:position pos:line="51" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="30">peercert<pos:position pos:line="51" pos:column="38"/></name><operator pos:line="51" pos:column="38">-&gt;<pos:position pos:line="51" pos:column="43"/></operator><name pos:line="51" pos:column="40">data<pos:position pos:line="51" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="46">cert<pos:position pos:line="51" pos:column="50"/></name><operator pos:line="51" pos:column="50">.<pos:position pos:line="51" pos:column="51"/></operator><name pos:line="51" pos:column="51">size<pos:position pos:line="51" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="56"/></argument_list></call> <operator pos:line="51" pos:column="57">==<pos:position pos:line="51" pos:column="59"/></operator> <literal type="number" pos:line="51" pos:column="60">0<pos:position pos:line="51" pos:column="61"/></literal></expr>)<pos:position pos:line="51" pos:column="62"/></condition><then pos:line="51" pos:column="62">
      <block pos:line="52" pos:column="7">{
	<comment type="block" pos:line="53" pos:column="9">/* match found */</comment>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">gnutls_free<pos:position pos:line="54" pos:column="20"/></name><argument_list pos:line="54" pos:column="20">(<argument><expr><name><name pos:line="54" pos:column="21">cert<pos:position pos:line="54" pos:column="25"/></name><operator pos:line="54" pos:column="25">.<pos:position pos:line="54" pos:column="26"/></operator><name pos:line="54" pos:column="26">data<pos:position pos:line="54" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="55" pos:column="9">FREE<pos:position pos:line="55" pos:column="13"/></name> <argument_list pos:line="55" pos:column="14">(<argument><expr><operator pos:line="55" pos:column="15">&amp;<pos:position pos:line="55" pos:column="20"/></operator><name pos:line="55" pos:column="16">b64_data_data<pos:position pos:line="55" pos:column="29"/></name></expr></argument>)<pos:position pos:line="55" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="31"/></expr_stmt>
	<return pos:line="56" pos:column="9">return <expr><literal type="number" pos:line="56" pos:column="16">1<pos:position pos:line="56" pos:column="17"/></literal></expr>;<pos:position pos:line="56" pos:column="18"/></return>
      }<pos:position pos:line="57" pos:column="8"/></block></then></if>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="60" pos:column="5">gnutls_free<pos:position pos:line="60" pos:column="16"/></name><argument_list pos:line="60" pos:column="16">(<argument><expr><name><name pos:line="60" pos:column="17">cert<pos:position pos:line="60" pos:column="21"/></name><operator pos:line="60" pos:column="21">.<pos:position pos:line="60" pos:column="22"/></operator><name pos:line="60" pos:column="22">data<pos:position pos:line="60" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="61" pos:column="4"/></block> while <condition pos:line="61" pos:column="11">(<expr><name pos:line="61" pos:column="12">ptr<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">!=<pos:position pos:line="61" pos:column="18"/></operator> <name pos:line="61" pos:column="19">NULL<pos:position pos:line="61" pos:column="23"/></name></expr>)<pos:position pos:line="61" pos:column="24"/></condition>;<pos:position pos:line="61" pos:column="25"/></do>

  <comment type="block" pos:line="63" pos:column="3">/* no match found */</comment>
  <expr_stmt><expr><call><name pos:line="64" pos:column="3">FREE<pos:position pos:line="64" pos:column="7"/></name> <argument_list pos:line="64" pos:column="8">(<argument><expr><operator pos:line="64" pos:column="9">&amp;<pos:position pos:line="64" pos:column="14"/></operator><name pos:line="64" pos:column="10">b64_data_data<pos:position pos:line="64" pos:column="23"/></name></expr></argument>)<pos:position pos:line="64" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="25"/></expr_stmt>
  <return pos:line="65" pos:column="3">return <expr><literal type="number" pos:line="65" pos:column="10">0<pos:position pos:line="65" pos:column="11"/></literal></expr>;<pos:position pos:line="65" pos:column="12"/></return>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_599_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">tunnel_socket_open<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">CONNECTION<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">conn<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">TUNNEL_DATA<pos:position pos:line="3" pos:column="14"/></name><modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type> <name pos:line="3" pos:column="16">tunnel<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">pid<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">rc<pos:position pos:line="5" pos:column="9"/></name></decl>;<pos:position pos:line="5" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name><name pos:line="6" pos:column="7">pin<pos:position pos:line="6" pos:column="10"/></name><index pos:line="6" pos:column="10">[<expr><literal type="number" pos:line="6" pos:column="11">2<pos:position pos:line="6" pos:column="12"/></literal></expr>]<pos:position pos:line="6" pos:column="13"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="6" pos:column="15">pout<pos:position pos:line="6" pos:column="19"/></name><index pos:line="6" pos:column="19">[<expr><literal type="number" pos:line="6" pos:column="20">2<pos:position pos:line="6" pos:column="21"/></literal></expr>]<pos:position pos:line="6" pos:column="22"/></index></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">devnull<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">tunnel<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">TUNNEL_DATA<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></operator><operator pos:line="9" pos:column="25">)<pos:position pos:line="9" pos:column="26"/></operator> <call><name pos:line="9" pos:column="27">safe_malloc<pos:position pos:line="9" pos:column="38"/></name> <argument_list pos:line="9" pos:column="39">(<argument><expr><sizeof pos:line="9" pos:column="40">sizeof <argument_list pos:line="9" pos:column="47">(<argument><expr><name pos:line="9" pos:column="48">TUNNEL_DATA<pos:position pos:line="9" pos:column="59"/></name></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">conn<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">-&gt;<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="9">sockdata<pos:position pos:line="10" pos:column="17"/></name></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <name pos:line="10" pos:column="20">tunnel<pos:position pos:line="10" pos:column="26"/></name></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">mutt_message<pos:position pos:line="12" pos:column="15"/></name> <argument_list pos:line="12" pos:column="16">(<argument><expr><call><name pos:line="12" pos:column="17">_<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><literal type="string" pos:line="12" pos:column="19">"Connecting with \"%s\"..."<pos:position pos:line="12" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="12" pos:column="49">Tunnel<pos:position pos:line="12" pos:column="55"/></name></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="57"/></expr_stmt>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><operator pos:line="14" pos:column="7">(<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">rc<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <call><name pos:line="14" pos:column="13">pipe<pos:position pos:line="14" pos:column="17"/></name> <argument_list pos:line="14" pos:column="18">(<argument><expr><name pos:line="14" pos:column="19">pin<pos:position pos:line="14" pos:column="22"/></name></expr></argument>)<pos:position pos:line="14" pos:column="23"/></argument_list></call><operator pos:line="14" pos:column="23">)<pos:position pos:line="14" pos:column="24"/></operator> <operator pos:line="14" pos:column="25">==<pos:position pos:line="14" pos:column="27"/></operator> <operator pos:line="14" pos:column="28">-<pos:position pos:line="14" pos:column="29"/></operator><literal type="number" pos:line="14" pos:column="29">1<pos:position pos:line="14" pos:column="30"/></literal></expr>)<pos:position pos:line="14" pos:column="31"/></condition><then pos:line="14" pos:column="31">
  <block pos:line="15" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">mutt_perror<pos:position pos:line="16" pos:column="16"/></name> <argument_list pos:line="16" pos:column="17">(<argument><expr><literal type="string" pos:line="16" pos:column="18">"pipe"<pos:position pos:line="16" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">FREE<pos:position pos:line="17" pos:column="9"/></name> <argument_list pos:line="17" pos:column="10">(<argument><expr><operator pos:line="17" pos:column="11">&amp;<pos:position pos:line="17" pos:column="16"/></operator><name><name pos:line="17" pos:column="12">conn<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-&gt;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="18">sockdata<pos:position pos:line="17" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="28"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">-<pos:position pos:line="18" pos:column="13"/></operator><literal type="number" pos:line="18" pos:column="13">1<pos:position pos:line="18" pos:column="14"/></literal></expr>;<pos:position pos:line="18" pos:column="15"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><operator pos:line="20" pos:column="7">(<pos:position pos:line="20" pos:column="8"/></operator><name pos:line="20" pos:column="8">rc<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <call><name pos:line="20" pos:column="13">pipe<pos:position pos:line="20" pos:column="17"/></name> <argument_list pos:line="20" pos:column="18">(<argument><expr><name pos:line="20" pos:column="19">pout<pos:position pos:line="20" pos:column="23"/></name></expr></argument>)<pos:position pos:line="20" pos:column="24"/></argument_list></call><operator pos:line="20" pos:column="24">)<pos:position pos:line="20" pos:column="25"/></operator> <operator pos:line="20" pos:column="26">==<pos:position pos:line="20" pos:column="28"/></operator> <operator pos:line="20" pos:column="29">-<pos:position pos:line="20" pos:column="30"/></operator><literal type="number" pos:line="20" pos:column="30">1<pos:position pos:line="20" pos:column="31"/></literal></expr>)<pos:position pos:line="20" pos:column="32"/></condition><then pos:line="20" pos:column="32">
  <block pos:line="21" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">mutt_perror<pos:position pos:line="22" pos:column="16"/></name> <argument_list pos:line="22" pos:column="17">(<argument><expr><literal type="string" pos:line="22" pos:column="18">"pipe"<pos:position pos:line="22" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">close<pos:position pos:line="23" pos:column="10"/></name> <argument_list pos:line="23" pos:column="11">(<argument><expr><name><name pos:line="23" pos:column="12">pin<pos:position pos:line="23" pos:column="15"/></name><index pos:line="23" pos:column="15">[<expr><literal type="number" pos:line="23" pos:column="16">0<pos:position pos:line="23" pos:column="17"/></literal></expr>]<pos:position pos:line="23" pos:column="18"/></index></name></expr></argument>)<pos:position pos:line="23" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">close<pos:position pos:line="24" pos:column="10"/></name> <argument_list pos:line="24" pos:column="11">(<argument><expr><name><name pos:line="24" pos:column="12">pin<pos:position pos:line="24" pos:column="15"/></name><index pos:line="24" pos:column="15">[<expr><literal type="number" pos:line="24" pos:column="16">1<pos:position pos:line="24" pos:column="17"/></literal></expr>]<pos:position pos:line="24" pos:column="18"/></index></name></expr></argument>)<pos:position pos:line="24" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">FREE<pos:position pos:line="25" pos:column="9"/></name> <argument_list pos:line="25" pos:column="10">(<argument><expr><operator pos:line="25" pos:column="11">&amp;<pos:position pos:line="25" pos:column="16"/></operator><name><name pos:line="25" pos:column="12">conn<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">-&gt;<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="18">sockdata<pos:position pos:line="25" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="28"/></expr_stmt>
    <return pos:line="26" pos:column="5">return <expr><operator pos:line="26" pos:column="12">-<pos:position pos:line="26" pos:column="13"/></operator><literal type="number" pos:line="26" pos:column="13">1<pos:position pos:line="26" pos:column="14"/></literal></expr>;<pos:position pos:line="26" pos:column="15"/></return>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="29" pos:column="3">mutt_block_signals_system<pos:position pos:line="29" pos:column="28"/></name> <argument_list pos:line="29" pos:column="29">()<pos:position pos:line="29" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="32"/></expr_stmt>
  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><operator pos:line="30" pos:column="7">(<pos:position pos:line="30" pos:column="8"/></operator><name pos:line="30" pos:column="8">pid<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <call><name pos:line="30" pos:column="14">fork<pos:position pos:line="30" pos:column="18"/></name> <argument_list pos:line="30" pos:column="19">()<pos:position pos:line="30" pos:column="21"/></argument_list></call><operator pos:line="30" pos:column="21">)<pos:position pos:line="30" pos:column="22"/></operator> <operator pos:line="30" pos:column="23">==<pos:position pos:line="30" pos:column="25"/></operator> <literal type="number" pos:line="30" pos:column="26">0<pos:position pos:line="30" pos:column="27"/></literal></expr>)<pos:position pos:line="30" pos:column="28"/></condition><then pos:line="30" pos:column="28">
  <block pos:line="31" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">mutt_unblock_signals_system<pos:position pos:line="32" pos:column="32"/></name> <argument_list pos:line="32" pos:column="33">(<argument><expr><literal type="number" pos:line="32" pos:column="34">0<pos:position pos:line="32" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">devnull<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">=<pos:position pos:line="33" pos:column="14"/></operator> <call><name pos:line="33" pos:column="15">open<pos:position pos:line="33" pos:column="19"/></name> <argument_list pos:line="33" pos:column="20">(<argument><expr><literal type="string" pos:line="33" pos:column="21">"/dev/null"<pos:position pos:line="33" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="34">O_RDWR<pos:position pos:line="33" pos:column="40"/></name></expr></argument>)<pos:position pos:line="33" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">devnull<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">&lt;<pos:position pos:line="34" pos:column="21"/></operator> <literal type="number" pos:line="34" pos:column="19">0<pos:position pos:line="34" pos:column="20"/></literal> <operator pos:line="34" pos:column="21">||<pos:position pos:line="34" pos:column="23"/></operator>
        <call><name pos:line="35" pos:column="9">dup2<pos:position pos:line="35" pos:column="13"/></name> <argument_list pos:line="35" pos:column="14">(<argument><expr><name><name pos:line="35" pos:column="15">pout<pos:position pos:line="35" pos:column="19"/></name><index pos:line="35" pos:column="19">[<expr><literal type="number" pos:line="35" pos:column="20">0<pos:position pos:line="35" pos:column="21"/></literal></expr>]<pos:position pos:line="35" pos:column="22"/></index></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="24">STDIN_FILENO<pos:position pos:line="35" pos:column="36"/></name></expr></argument>)<pos:position pos:line="35" pos:column="37"/></argument_list></call> <operator pos:line="35" pos:column="38">&lt;<pos:position pos:line="35" pos:column="42"/></operator> <literal type="number" pos:line="35" pos:column="40">0<pos:position pos:line="35" pos:column="41"/></literal> <operator pos:line="35" pos:column="42">||<pos:position pos:line="35" pos:column="44"/></operator>
        <call><name pos:line="36" pos:column="9">dup2<pos:position pos:line="36" pos:column="13"/></name> <argument_list pos:line="36" pos:column="14">(<argument><expr><name><name pos:line="36" pos:column="15">pin<pos:position pos:line="36" pos:column="18"/></name><index pos:line="36" pos:column="18">[<expr><literal type="number" pos:line="36" pos:column="19">1<pos:position pos:line="36" pos:column="20"/></literal></expr>]<pos:position pos:line="36" pos:column="21"/></index></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="23">STDOUT_FILENO<pos:position pos:line="36" pos:column="36"/></name></expr></argument>)<pos:position pos:line="36" pos:column="37"/></argument_list></call> <operator pos:line="36" pos:column="38">&lt;<pos:position pos:line="36" pos:column="42"/></operator> <literal type="number" pos:line="36" pos:column="40">0<pos:position pos:line="36" pos:column="41"/></literal> <operator pos:line="36" pos:column="42">||<pos:position pos:line="36" pos:column="44"/></operator>
        <call><name pos:line="37" pos:column="9">dup2<pos:position pos:line="37" pos:column="13"/></name> <argument_list pos:line="37" pos:column="14">(<argument><expr><name pos:line="37" pos:column="15">devnull<pos:position pos:line="37" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="24">STDERR_FILENO<pos:position pos:line="37" pos:column="37"/></name></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></call> <operator pos:line="37" pos:column="39">&lt;<pos:position pos:line="37" pos:column="43"/></operator> <literal type="number" pos:line="37" pos:column="41">0<pos:position pos:line="37" pos:column="42"/></literal></expr>)<pos:position pos:line="37" pos:column="43"/></condition><then pos:line="37" pos:column="43">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="7">_exit<pos:position pos:line="38" pos:column="12"/></name> <argument_list pos:line="38" pos:column="13">(<argument><expr><literal type="number" pos:line="38" pos:column="14">127<pos:position pos:line="38" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="19"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">close<pos:position pos:line="39" pos:column="10"/></name> <argument_list pos:line="39" pos:column="11">(<argument><expr><name><name pos:line="39" pos:column="12">pin<pos:position pos:line="39" pos:column="15"/></name><index pos:line="39" pos:column="15">[<expr><literal type="number" pos:line="39" pos:column="16">0<pos:position pos:line="39" pos:column="17"/></literal></expr>]<pos:position pos:line="39" pos:column="18"/></index></name></expr></argument>)<pos:position pos:line="39" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">close<pos:position pos:line="40" pos:column="10"/></name> <argument_list pos:line="40" pos:column="11">(<argument><expr><name><name pos:line="40" pos:column="12">pin<pos:position pos:line="40" pos:column="15"/></name><index pos:line="40" pos:column="15">[<expr><literal type="number" pos:line="40" pos:column="16">1<pos:position pos:line="40" pos:column="17"/></literal></expr>]<pos:position pos:line="40" pos:column="18"/></index></name></expr></argument>)<pos:position pos:line="40" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">close<pos:position pos:line="41" pos:column="10"/></name> <argument_list pos:line="41" pos:column="11">(<argument><expr><name><name pos:line="41" pos:column="12">pout<pos:position pos:line="41" pos:column="16"/></name><index pos:line="41" pos:column="16">[<expr><literal type="number" pos:line="41" pos:column="17">0<pos:position pos:line="41" pos:column="18"/></literal></expr>]<pos:position pos:line="41" pos:column="19"/></index></name></expr></argument>)<pos:position pos:line="41" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">close<pos:position pos:line="42" pos:column="10"/></name> <argument_list pos:line="42" pos:column="11">(<argument><expr><name><name pos:line="42" pos:column="12">pout<pos:position pos:line="42" pos:column="16"/></name><index pos:line="42" pos:column="16">[<expr><literal type="number" pos:line="42" pos:column="17">1<pos:position pos:line="42" pos:column="18"/></literal></expr>]<pos:position pos:line="42" pos:column="19"/></index></name></expr></argument>)<pos:position pos:line="42" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">close<pos:position pos:line="43" pos:column="10"/></name> <argument_list pos:line="43" pos:column="11">(<argument><expr><name pos:line="43" pos:column="12">devnull<pos:position pos:line="43" pos:column="19"/></name></expr></argument>)<pos:position pos:line="43" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="21"/></expr_stmt>

    <comment type="block" pos:line="45" pos:column="5">/* Don't let the subprocess think it can use the controlling tty */</comment>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">setsid<pos:position pos:line="46" pos:column="11"/></name> <argument_list pos:line="46" pos:column="12">()<pos:position pos:line="46" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="15"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="48" pos:column="5">execle<pos:position pos:line="48" pos:column="11"/></name> <argument_list pos:line="48" pos:column="12">(<argument><expr><name pos:line="48" pos:column="13">EXECSHELL<pos:position pos:line="48" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="24">"sh"<pos:position pos:line="48" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="30">"-c"<pos:position pos:line="48" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="36">Tunnel<pos:position pos:line="48" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="44">NULL<pos:position pos:line="48" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="50">mutt_envlist<pos:position pos:line="48" pos:column="62"/></name> <argument_list pos:line="48" pos:column="63">()<pos:position pos:line="48" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">_exit<pos:position pos:line="49" pos:column="10"/></name> <argument_list pos:line="49" pos:column="11">(<argument><expr><literal type="number" pos:line="49" pos:column="12">127<pos:position pos:line="49" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="50" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">mutt_unblock_signals_system<pos:position pos:line="51" pos:column="30"/></name> <argument_list pos:line="51" pos:column="31">(<argument><expr><literal type="number" pos:line="51" pos:column="32">1<pos:position pos:line="51" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="35"/></expr_stmt>

  <if pos:line="53" pos:column="3">if <condition pos:line="53" pos:column="6">(<expr><name pos:line="53" pos:column="7">pid<pos:position pos:line="53" pos:column="10"/></name> <operator pos:line="53" pos:column="11">==<pos:position pos:line="53" pos:column="13"/></operator> <operator pos:line="53" pos:column="14">-<pos:position pos:line="53" pos:column="15"/></operator><literal type="number" pos:line="53" pos:column="15">1<pos:position pos:line="53" pos:column="16"/></literal></expr>)<pos:position pos:line="53" pos:column="17"/></condition><then pos:line="53" pos:column="17">
  <block pos:line="54" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">mutt_perror<pos:position pos:line="55" pos:column="16"/></name> <argument_list pos:line="55" pos:column="17">(<argument><expr><literal type="string" pos:line="55" pos:column="18">"fork"<pos:position pos:line="55" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">close<pos:position pos:line="56" pos:column="10"/></name> <argument_list pos:line="56" pos:column="11">(<argument><expr><name><name pos:line="56" pos:column="12">pin<pos:position pos:line="56" pos:column="15"/></name><index pos:line="56" pos:column="15">[<expr><literal type="number" pos:line="56" pos:column="16">0<pos:position pos:line="56" pos:column="17"/></literal></expr>]<pos:position pos:line="56" pos:column="18"/></index></name></expr></argument>)<pos:position pos:line="56" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">close<pos:position pos:line="57" pos:column="10"/></name> <argument_list pos:line="57" pos:column="11">(<argument><expr><name><name pos:line="57" pos:column="12">pin<pos:position pos:line="57" pos:column="15"/></name><index pos:line="57" pos:column="15">[<expr><literal type="number" pos:line="57" pos:column="16">1<pos:position pos:line="57" pos:column="17"/></literal></expr>]<pos:position pos:line="57" pos:column="18"/></index></name></expr></argument>)<pos:position pos:line="57" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">close<pos:position pos:line="58" pos:column="10"/></name> <argument_list pos:line="58" pos:column="11">(<argument><expr><name><name pos:line="58" pos:column="12">pout<pos:position pos:line="58" pos:column="16"/></name><index pos:line="58" pos:column="16">[<expr><literal type="number" pos:line="58" pos:column="17">0<pos:position pos:line="58" pos:column="18"/></literal></expr>]<pos:position pos:line="58" pos:column="19"/></index></name></expr></argument>)<pos:position pos:line="58" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">close<pos:position pos:line="59" pos:column="10"/></name> <argument_list pos:line="59" pos:column="11">(<argument><expr><name><name pos:line="59" pos:column="12">pout<pos:position pos:line="59" pos:column="16"/></name><index pos:line="59" pos:column="16">[<expr><literal type="number" pos:line="59" pos:column="17">1<pos:position pos:line="59" pos:column="18"/></literal></expr>]<pos:position pos:line="59" pos:column="19"/></index></name></expr></argument>)<pos:position pos:line="59" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">FREE<pos:position pos:line="60" pos:column="9"/></name> <argument_list pos:line="60" pos:column="10">(<argument><expr><operator pos:line="60" pos:column="11">&amp;<pos:position pos:line="60" pos:column="16"/></operator><name><name pos:line="60" pos:column="12">conn<pos:position pos:line="60" pos:column="16"/></name><operator pos:line="60" pos:column="16">-&gt;<pos:position pos:line="60" pos:column="21"/></operator><name pos:line="60" pos:column="18">sockdata<pos:position pos:line="60" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="28"/></expr_stmt>
    <return pos:line="61" pos:column="5">return <expr><operator pos:line="61" pos:column="12">-<pos:position pos:line="61" pos:column="13"/></operator><literal type="number" pos:line="61" pos:column="13">1<pos:position pos:line="61" pos:column="14"/></literal></expr>;<pos:position pos:line="61" pos:column="15"/></return>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if>
  <if pos:line="63" pos:column="3">if <condition pos:line="63" pos:column="6">(<expr><call><name pos:line="63" pos:column="7">close<pos:position pos:line="63" pos:column="12"/></name> <argument_list pos:line="63" pos:column="13">(<argument><expr><name><name pos:line="63" pos:column="14">pin<pos:position pos:line="63" pos:column="17"/></name><index pos:line="63" pos:column="17">[<expr><literal type="number" pos:line="63" pos:column="18">1<pos:position pos:line="63" pos:column="19"/></literal></expr>]<pos:position pos:line="63" pos:column="20"/></index></name></expr></argument>)<pos:position pos:line="63" pos:column="21"/></argument_list></call> <operator pos:line="63" pos:column="22">&lt;<pos:position pos:line="63" pos:column="26"/></operator> <literal type="number" pos:line="63" pos:column="24">0<pos:position pos:line="63" pos:column="25"/></literal> <operator pos:line="63" pos:column="26">||<pos:position pos:line="63" pos:column="28"/></operator> <call><name pos:line="63" pos:column="29">close<pos:position pos:line="63" pos:column="34"/></name> <argument_list pos:line="63" pos:column="35">(<argument><expr><name><name pos:line="63" pos:column="36">pout<pos:position pos:line="63" pos:column="40"/></name><index pos:line="63" pos:column="40">[<expr><literal type="number" pos:line="63" pos:column="41">0<pos:position pos:line="63" pos:column="42"/></literal></expr>]<pos:position pos:line="63" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="63" pos:column="44"/></argument_list></call> <operator pos:line="63" pos:column="45">&lt;<pos:position pos:line="63" pos:column="49"/></operator> <literal type="number" pos:line="63" pos:column="47">0<pos:position pos:line="63" pos:column="48"/></literal></expr>)<pos:position pos:line="63" pos:column="49"/></condition><then pos:line="63" pos:column="49">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="5">mutt_perror<pos:position pos:line="64" pos:column="16"/></name> <argument_list pos:line="64" pos:column="17">(<argument><expr><literal type="string" pos:line="64" pos:column="18">"close"<pos:position pos:line="64" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="27"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="66" pos:column="3">fcntl<pos:position pos:line="66" pos:column="8"/></name> <argument_list pos:line="66" pos:column="9">(<argument><expr><name><name pos:line="66" pos:column="10">pin<pos:position pos:line="66" pos:column="13"/></name><index pos:line="66" pos:column="13">[<expr><literal type="number" pos:line="66" pos:column="14">0<pos:position pos:line="66" pos:column="15"/></literal></expr>]<pos:position pos:line="66" pos:column="16"/></index></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="18">F_SETFD<pos:position pos:line="66" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="27">FD_CLOEXEC<pos:position pos:line="66" pos:column="37"/></name></expr></argument>)<pos:position pos:line="66" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="67" pos:column="3">fcntl<pos:position pos:line="67" pos:column="8"/></name> <argument_list pos:line="67" pos:column="9">(<argument><expr><name><name pos:line="67" pos:column="10">pout<pos:position pos:line="67" pos:column="14"/></name><index pos:line="67" pos:column="14">[<expr><literal type="number" pos:line="67" pos:column="15">1<pos:position pos:line="67" pos:column="16"/></literal></expr>]<pos:position pos:line="67" pos:column="17"/></index></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="19">F_SETFD<pos:position pos:line="67" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="28">FD_CLOEXEC<pos:position pos:line="67" pos:column="38"/></name></expr></argument>)<pos:position pos:line="67" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="40"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="69" pos:column="3">tunnel<pos:position pos:line="69" pos:column="9"/></name><operator pos:line="69" pos:column="9">-&gt;<pos:position pos:line="69" pos:column="14"/></operator><name pos:line="69" pos:column="11">readfd<pos:position pos:line="69" pos:column="17"/></name></name> <operator pos:line="69" pos:column="18">=<pos:position pos:line="69" pos:column="19"/></operator> <name><name pos:line="69" pos:column="20">pin<pos:position pos:line="69" pos:column="23"/></name><index pos:line="69" pos:column="23">[<expr><literal type="number" pos:line="69" pos:column="24">0<pos:position pos:line="69" pos:column="25"/></literal></expr>]<pos:position pos:line="69" pos:column="26"/></index></name></expr>;<pos:position pos:line="69" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="70" pos:column="3">tunnel<pos:position pos:line="70" pos:column="9"/></name><operator pos:line="70" pos:column="9">-&gt;<pos:position pos:line="70" pos:column="14"/></operator><name pos:line="70" pos:column="11">writefd<pos:position pos:line="70" pos:column="18"/></name></name> <operator pos:line="70" pos:column="19">=<pos:position pos:line="70" pos:column="20"/></operator> <name><name pos:line="70" pos:column="21">pout<pos:position pos:line="70" pos:column="25"/></name><index pos:line="70" pos:column="25">[<expr><literal type="number" pos:line="70" pos:column="26">1<pos:position pos:line="70" pos:column="27"/></literal></expr>]<pos:position pos:line="70" pos:column="28"/></index></name></expr>;<pos:position pos:line="70" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="71" pos:column="3">tunnel<pos:position pos:line="71" pos:column="9"/></name><operator pos:line="71" pos:column="9">-&gt;<pos:position pos:line="71" pos:column="14"/></operator><name pos:line="71" pos:column="11">pid<pos:position pos:line="71" pos:column="14"/></name></name> <operator pos:line="71" pos:column="15">=<pos:position pos:line="71" pos:column="16"/></operator> <name pos:line="71" pos:column="17">pid<pos:position pos:line="71" pos:column="20"/></name></expr>;<pos:position pos:line="71" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="73" pos:column="3">conn<pos:position pos:line="73" pos:column="7"/></name><operator pos:line="73" pos:column="7">-&gt;<pos:position pos:line="73" pos:column="12"/></operator><name pos:line="73" pos:column="9">fd<pos:position pos:line="73" pos:column="11"/></name></name> <operator pos:line="73" pos:column="12">=<pos:position pos:line="73" pos:column="13"/></operator> <literal type="number" pos:line="73" pos:column="14">42<pos:position pos:line="73" pos:column="16"/></literal></expr>;<pos:position pos:line="73" pos:column="17"/></expr_stmt> <comment type="block" pos:line="73" pos:column="18">/* stupid hack */</comment>

  <return pos:line="75" pos:column="3">return <expr><literal type="number" pos:line="75" pos:column="10">0<pos:position pos:line="75" pos:column="11"/></literal></expr>;<pos:position pos:line="75" pos:column="12"/></return>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

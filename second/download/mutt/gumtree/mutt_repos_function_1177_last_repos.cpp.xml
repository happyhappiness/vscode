<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1177_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">print_flowed_line<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">line<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">STATE<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">s<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">int<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">ql<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
			       <parameter><decl><type><name pos:line="2" pos:column="32">flowed_state_t<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">fst<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">int<pos:position pos:line="2" pos:column="56"/></name></type> <name pos:line="2" pos:column="57">term<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">width<pos:position pos:line="4" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="17">w<pos:position pos:line="4" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="20">words<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><literal type="number" pos:line="4" pos:column="28">0<pos:position pos:line="4" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">p<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name pos:line="6" pos:column="8">last<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">line<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">||<pos:position pos:line="8" pos:column="15"/></operator> <operator pos:line="8" pos:column="16">!<pos:position pos:line="8" pos:column="17"/></operator><operator pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">line<pos:position pos:line="8" pos:column="22"/></name></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23">
  <block pos:line="9" pos:column="3">{
    <comment type="block" pos:line="10" pos:column="5">/* flush current paragraph (if any) first */</comment>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">flush_par<pos:position pos:line="11" pos:column="14"/></name> <argument_list pos:line="11" pos:column="15">(<argument><expr><name pos:line="11" pos:column="16">s<pos:position pos:line="11" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="19">fst<pos:position pos:line="11" pos:column="22"/></name></expr></argument>)<pos:position pos:line="11" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">print_indent<pos:position pos:line="12" pos:column="17"/></name> <argument_list pos:line="12" pos:column="18">(<argument><expr><name pos:line="12" pos:column="19">ql<pos:position pos:line="12" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="23">s<pos:position pos:line="12" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="26">0<pos:position pos:line="12" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">state_putc<pos:position pos:line="13" pos:column="15"/></name> <argument_list pos:line="13" pos:column="16">(<argument><expr><literal type="char" pos:line="13" pos:column="17">'\n'<pos:position pos:line="13" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="23">s<pos:position pos:line="13" pos:column="24"/></name></expr></argument>)<pos:position pos:line="13" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt>
    <return pos:line="14" pos:column="5">return;<pos:position pos:line="14" pos:column="12"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="17" pos:column="3">width<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">=<pos:position pos:line="17" pos:column="10"/></operator> <call><name pos:line="17" pos:column="11">quote_width<pos:position pos:line="17" pos:column="22"/></name> <argument_list pos:line="17" pos:column="23">(<argument><expr><name pos:line="17" pos:column="24">s<pos:position pos:line="17" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="27">ql<pos:position pos:line="17" pos:column="29"/></name></expr></argument>)<pos:position pos:line="17" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name pos:line="18" pos:column="3">last<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <name><name pos:line="18" pos:column="10">line<pos:position pos:line="18" pos:column="14"/></name><index pos:line="18" pos:column="14">[<expr><call><name pos:line="18" pos:column="15">mutt_strlen<pos:position pos:line="18" pos:column="26"/></name> <argument_list pos:line="18" pos:column="27">(<argument><expr><name pos:line="18" pos:column="28">line<pos:position pos:line="18" pos:column="32"/></name></expr></argument>)<pos:position pos:line="18" pos:column="33"/></argument_list></call> <operator pos:line="18" pos:column="34">-<pos:position pos:line="18" pos:column="35"/></operator> <literal type="number" pos:line="18" pos:column="36">1<pos:position pos:line="18" pos:column="37"/></literal></expr>]<pos:position pos:line="18" pos:column="38"/></index></name></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">dprint<pos:position pos:line="20" pos:column="9"/></name> <argument_list pos:line="20" pos:column="10">(<argument><expr><literal type="number" pos:line="20" pos:column="11">4<pos:position pos:line="20" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="14">(<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">debugfile<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">,<pos:position pos:line="20" pos:column="25"/></operator> <literal type="string" pos:line="20" pos:column="26">"f=f: line [%s], width = %ld, spaces = %d\n"<pos:position pos:line="20" pos:column="70"/></literal><operator pos:line="20" pos:column="70">,<pos:position pos:line="20" pos:column="71"/></operator>
	      <call><name pos:line="21" pos:column="15">NONULL<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">line<pos:position pos:line="21" pos:column="26"/></name></expr></argument>)<pos:position pos:line="21" pos:column="27"/></argument_list></call><operator pos:line="21" pos:column="27">,<pos:position pos:line="21" pos:column="28"/></operator> <operator pos:line="21" pos:column="29">(<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="30">long<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">)<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="35">width<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">,<pos:position pos:line="21" pos:column="41"/></operator> <name><name pos:line="21" pos:column="42">fst<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">-&gt;<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="47">spaces<pos:position pos:line="21" pos:column="53"/></name></name><operator pos:line="21" pos:column="53">)<pos:position pos:line="21" pos:column="54"/></operator></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="56"/></expr_stmt>

  <for pos:line="23" pos:column="3">for <control pos:line="23" pos:column="7">(<init><expr><name pos:line="23" pos:column="8">p<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">=<pos:position pos:line="23" pos:column="11"/></operator> <operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">char<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">*<pos:position pos:line="23" pos:column="19"/></operator><operator pos:line="23" pos:column="19">)<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="20">line<pos:position pos:line="23" pos:column="24"/></name></expr><operator pos:line="23" pos:column="24">,<pos:position pos:line="23" pos:column="25"/></operator> <expr><name pos:line="23" pos:column="26">words<pos:position pos:line="23" pos:column="31"/></name> <operator pos:line="23" pos:column="32">=<pos:position pos:line="23" pos:column="33"/></operator> <literal type="number" pos:line="23" pos:column="34">0<pos:position pos:line="23" pos:column="35"/></literal></expr>;<pos:position pos:line="23" pos:column="36"/></init> <condition><expr><operator pos:line="23" pos:column="37">(<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="38">p<pos:position pos:line="23" pos:column="39"/></name> <operator pos:line="23" pos:column="40">=<pos:position pos:line="23" pos:column="41"/></operator> <call><name pos:line="23" pos:column="42">strsep<pos:position pos:line="23" pos:column="48"/></name> <argument_list pos:line="23" pos:column="49">(<argument><expr><operator pos:line="23" pos:column="50">&amp;<pos:position pos:line="23" pos:column="55"/></operator><name pos:line="23" pos:column="51">line<pos:position pos:line="23" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="57">" "<pos:position pos:line="23" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="61"/></argument_list></call><operator pos:line="23" pos:column="61">)<pos:position pos:line="23" pos:column="62"/></operator> <operator pos:line="23" pos:column="63">!=<pos:position pos:line="23" pos:column="65"/></operator> <name pos:line="23" pos:column="66">NULL<pos:position pos:line="23" pos:column="70"/></name></expr> ;<pos:position pos:line="23" pos:column="72"/></condition> <incr/>)<pos:position pos:line="23" pos:column="74"/></control>
  <block pos:line="24" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">dprint<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><literal type="number" pos:line="25" pos:column="12">4<pos:position pos:line="25" pos:column="13"/></literal></expr></argument>,<argument><expr><operator pos:line="25" pos:column="14">(<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">debugfile<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">,<pos:position pos:line="25" pos:column="25"/></operator><literal type="string" pos:line="25" pos:column="25">"f=f: word [%s], width: %d, remaining = [%s]\n"<pos:position pos:line="25" pos:column="72"/></literal><operator pos:line="25" pos:column="72">,<pos:position pos:line="25" pos:column="73"/></operator>
	      <name pos:line="26" pos:column="15">p<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">,<pos:position pos:line="26" pos:column="17"/></operator> <name><name pos:line="26" pos:column="18">fst<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">-&gt;<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="23">width<pos:position pos:line="26" pos:column="28"/></name></name><operator pos:line="26" pos:column="28">,<pos:position pos:line="26" pos:column="29"/></operator> <name pos:line="26" pos:column="30">line<pos:position pos:line="26" pos:column="34"/></name><operator pos:line="26" pos:column="34">)<pos:position pos:line="26" pos:column="35"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt>

    <comment type="block" pos:line="28" pos:column="5">/* remember number of spaces */</comment>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">!<pos:position pos:line="29" pos:column="10"/></operator><operator pos:line="29" pos:column="10">*<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="11">p<pos:position pos:line="29" pos:column="12"/></name></expr>)<pos:position pos:line="29" pos:column="13"/></condition><then pos:line="29" pos:column="13">
    <block pos:line="30" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">dprint<pos:position pos:line="31" pos:column="13"/></name><argument_list pos:line="31" pos:column="13">(<argument><expr><literal type="number" pos:line="31" pos:column="14">4<pos:position pos:line="31" pos:column="15"/></literal></expr></argument>,<argument><expr><operator pos:line="31" pos:column="16">(<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="17">debugfile<pos:position pos:line="31" pos:column="26"/></name><operator pos:line="31" pos:column="26">,<pos:position pos:line="31" pos:column="27"/></operator><literal type="string" pos:line="31" pos:column="27">"f=f: additional space\n"<pos:position pos:line="31" pos:column="52"/></literal><operator pos:line="31" pos:column="52">)<pos:position pos:line="31" pos:column="53"/></operator></expr></argument>)<pos:position pos:line="31" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="32" pos:column="7">fst<pos:position pos:line="32" pos:column="10"/></name><operator pos:line="32" pos:column="10">-&gt;<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="12">spaces<pos:position pos:line="32" pos:column="18"/></name></name><operator pos:line="32" pos:column="18">++<pos:position pos:line="32" pos:column="20"/></operator></expr>;<pos:position pos:line="32" pos:column="21"/></expr_stmt>
      <continue pos:line="33" pos:column="7">continue;<pos:position pos:line="33" pos:column="16"/></continue>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="35" pos:column="5">/* there's exactly one space prior to every but the first word */</comment>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">words<pos:position pos:line="36" pos:column="14"/></name></expr>)<pos:position pos:line="36" pos:column="15"/></condition><then pos:line="36" pos:column="15">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="37" pos:column="7">fst<pos:position pos:line="37" pos:column="10"/></name><operator pos:line="37" pos:column="10">-&gt;<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="12">spaces<pos:position pos:line="37" pos:column="18"/></name></name><operator pos:line="37" pos:column="18">++<pos:position pos:line="37" pos:column="20"/></operator></expr>;<pos:position pos:line="37" pos:column="21"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="39" pos:column="5">w<pos:position pos:line="39" pos:column="6"/></name> <operator pos:line="39" pos:column="7">=<pos:position pos:line="39" pos:column="8"/></operator> <call><name pos:line="39" pos:column="9">mutt_strwidth<pos:position pos:line="39" pos:column="22"/></name> <argument_list pos:line="39" pos:column="23">(<argument><expr><name pos:line="39" pos:column="24">p<pos:position pos:line="39" pos:column="25"/></name></expr></argument>)<pos:position pos:line="39" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt>
    <comment type="block" pos:line="40" pos:column="5">/* see if we need to break the line but make sure the first
       word is put on the line regardless;
       if for DelSp=yes only one trailing space is used, we probably
       have a long word that we should break within (we leave that
       up to the pager or user) */</comment>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><operator pos:line="45" pos:column="9">!<pos:position pos:line="45" pos:column="10"/></operator><operator pos:line="45" pos:column="10">(<pos:position pos:line="45" pos:column="11"/></operator><operator pos:line="45" pos:column="11">!<pos:position pos:line="45" pos:column="12"/></operator><name><name pos:line="45" pos:column="12">fst<pos:position pos:line="45" pos:column="15"/></name><operator pos:line="45" pos:column="15">-&gt;<pos:position pos:line="45" pos:column="20"/></operator><name pos:line="45" pos:column="17">spaces<pos:position pos:line="45" pos:column="23"/></name></name> <operator pos:line="45" pos:column="24">&amp;&amp;<pos:position pos:line="45" pos:column="34"/></operator> <name><name pos:line="45" pos:column="27">fst<pos:position pos:line="45" pos:column="30"/></name><operator pos:line="45" pos:column="30">-&gt;<pos:position pos:line="45" pos:column="35"/></operator><name pos:line="45" pos:column="32">delsp<pos:position pos:line="45" pos:column="37"/></name></name> <operator pos:line="45" pos:column="38">&amp;&amp;<pos:position pos:line="45" pos:column="48"/></operator> <name pos:line="45" pos:column="41">last<pos:position pos:line="45" pos:column="45"/></name> <operator pos:line="45" pos:column="46">!=<pos:position pos:line="45" pos:column="48"/></operator> <literal type="char" pos:line="45" pos:column="49">' '<pos:position pos:line="45" pos:column="52"/></literal><operator pos:line="45" pos:column="52">)<pos:position pos:line="45" pos:column="53"/></operator> <operator pos:line="45" pos:column="54">&amp;&amp;<pos:position pos:line="45" pos:column="64"/></operator>
	<name><name pos:line="46" pos:column="9">w<pos:position pos:line="46" pos:column="10"/></name> <argument_list type="generic" pos:line="46" pos:column="11">&lt; <argument><expr><name pos:line="46" pos:column="13">width<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">&amp;&amp;<pos:position pos:line="46" pos:column="29"/></operator> <name pos:line="46" pos:column="22">w<pos:position pos:line="46" pos:column="23"/></name> <operator pos:line="46" pos:column="24">+<pos:position pos:line="46" pos:column="25"/></operator> <name><name pos:line="46" pos:column="26">fst<pos:position pos:line="46" pos:column="29"/></name><operator pos:line="46" pos:column="29">-&gt;<pos:position pos:line="46" pos:column="34"/></operator><name pos:line="46" pos:column="31">width<pos:position pos:line="46" pos:column="36"/></name></name> <operator pos:line="46" pos:column="37">+<pos:position pos:line="46" pos:column="38"/></operator> <name><name pos:line="46" pos:column="39">fst<pos:position pos:line="46" pos:column="42"/></name><operator pos:line="46" pos:column="42">-&gt;<pos:position pos:line="46" pos:column="47"/></operator><name pos:line="46" pos:column="44">spaces<pos:position pos:line="46" pos:column="50"/></name></name></expr></argument> &gt;<pos:position pos:line="46" pos:column="55"/></argument_list></name> <name pos:line="46" pos:column="53">width<pos:position pos:line="46" pos:column="58"/></name></expr>)<pos:position pos:line="46" pos:column="59"/></condition><then pos:line="46" pos:column="59">
    <block pos:line="47" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="48" pos:column="7">dprint<pos:position pos:line="48" pos:column="13"/></name><argument_list pos:line="48" pos:column="13">(<argument><expr><literal type="number" pos:line="48" pos:column="14">4<pos:position pos:line="48" pos:column="15"/></literal></expr></argument>,<argument><expr><operator pos:line="48" pos:column="16">(<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="17">debugfile<pos:position pos:line="48" pos:column="26"/></name><operator pos:line="48" pos:column="26">,<pos:position pos:line="48" pos:column="27"/></operator><literal type="string" pos:line="48" pos:column="27">"f=f: break line at %d, %d spaces left\n"<pos:position pos:line="48" pos:column="68"/></literal><operator pos:line="48" pos:column="68">,<pos:position pos:line="48" pos:column="69"/></operator>
		<name><name pos:line="49" pos:column="17">fst<pos:position pos:line="49" pos:column="20"/></name><operator pos:line="49" pos:column="20">-&gt;<pos:position pos:line="49" pos:column="25"/></operator><name pos:line="49" pos:column="22">width<pos:position pos:line="49" pos:column="27"/></name></name><operator pos:line="49" pos:column="27">,<pos:position pos:line="49" pos:column="28"/></operator> <name><name pos:line="49" pos:column="29">fst<pos:position pos:line="49" pos:column="32"/></name><operator pos:line="49" pos:column="32">-&gt;<pos:position pos:line="49" pos:column="37"/></operator><name pos:line="49" pos:column="34">spaces<pos:position pos:line="49" pos:column="40"/></name></name><operator pos:line="49" pos:column="40">)<pos:position pos:line="49" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="49" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="43"/></expr_stmt>
      <comment type="block" pos:line="50" pos:column="7">/* only honor trailing spaces for format=flowed replies */</comment>
      <if pos:line="51" pos:column="7">if <condition pos:line="51" pos:column="10">(<expr><call><name pos:line="51" pos:column="11">option<pos:position pos:line="51" pos:column="17"/></name><argument_list pos:line="51" pos:column="17">(<argument><expr><name pos:line="51" pos:column="18">OPTTEXTFLOWED<pos:position pos:line="51" pos:column="31"/></name></expr></argument>)<pos:position pos:line="51" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="33"/></condition><then pos:line="51" pos:column="33">
	<block type="pseudo"><for pos:line="52" pos:column="9">for <control pos:line="52" pos:column="13">( <init pos:line="52" pos:column="15">;<pos:position pos:line="52" pos:column="16"/></init> <condition><expr><name><name pos:line="52" pos:column="17">fst<pos:position pos:line="52" pos:column="20"/></name><operator pos:line="52" pos:column="20">-&gt;<pos:position pos:line="52" pos:column="25"/></operator><name pos:line="52" pos:column="22">spaces<pos:position pos:line="52" pos:column="28"/></name></name></expr>;<pos:position pos:line="52" pos:column="29"/></condition> <incr><expr><name><name pos:line="52" pos:column="30">fst<pos:position pos:line="52" pos:column="33"/></name><operator pos:line="52" pos:column="33">-&gt;<pos:position pos:line="52" pos:column="38"/></operator><name pos:line="52" pos:column="35">spaces<pos:position pos:line="52" pos:column="41"/></name></name><operator pos:line="52" pos:column="41">--<pos:position pos:line="52" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="52" pos:column="44"/></control>
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="11">state_putc<pos:position pos:line="53" pos:column="21"/></name> <argument_list pos:line="53" pos:column="22">(<argument><expr><literal type="char" pos:line="53" pos:column="23">' '<pos:position pos:line="53" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="28">s<pos:position pos:line="53" pos:column="29"/></name></expr></argument>)<pos:position pos:line="53" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="31"/></expr_stmt></block></for></block></then></if>
      <expr_stmt><expr><call><name pos:line="54" pos:column="7">state_putc<pos:position pos:line="54" pos:column="17"/></name> <argument_list pos:line="54" pos:column="18">(<argument><expr><literal type="char" pos:line="54" pos:column="19">'\n'<pos:position pos:line="54" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="25">s<pos:position pos:line="54" pos:column="26"/></name></expr></argument>)<pos:position pos:line="54" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="55" pos:column="7">fst<pos:position pos:line="55" pos:column="10"/></name><operator pos:line="55" pos:column="10">-&gt;<pos:position pos:line="55" pos:column="15"/></operator><name pos:line="55" pos:column="12">width<pos:position pos:line="55" pos:column="17"/></name></name> <operator pos:line="55" pos:column="18">=<pos:position pos:line="55" pos:column="19"/></operator> <literal type="number" pos:line="55" pos:column="20">0<pos:position pos:line="55" pos:column="21"/></literal></expr>;<pos:position pos:line="55" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="56" pos:column="7">fst<pos:position pos:line="56" pos:column="10"/></name><operator pos:line="56" pos:column="10">-&gt;<pos:position pos:line="56" pos:column="15"/></operator><name pos:line="56" pos:column="12">spaces<pos:position pos:line="56" pos:column="18"/></name></name> <operator pos:line="56" pos:column="19">=<pos:position pos:line="56" pos:column="20"/></operator> <literal type="number" pos:line="56" pos:column="21">0<pos:position pos:line="56" pos:column="22"/></literal></expr>;<pos:position pos:line="56" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name pos:line="57" pos:column="7">words<pos:position pos:line="57" pos:column="12"/></name> <operator pos:line="57" pos:column="13">=<pos:position pos:line="57" pos:column="14"/></operator> <literal type="number" pos:line="57" pos:column="15">0<pos:position pos:line="57" pos:column="16"/></literal></expr>;<pos:position pos:line="57" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>

    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><operator pos:line="60" pos:column="9">!<pos:position pos:line="60" pos:column="10"/></operator><name pos:line="60" pos:column="10">words<pos:position pos:line="60" pos:column="15"/></name> <operator pos:line="60" pos:column="16">&amp;&amp;<pos:position pos:line="60" pos:column="26"/></operator> <operator pos:line="60" pos:column="19">!<pos:position pos:line="60" pos:column="20"/></operator><name><name pos:line="60" pos:column="20">fst<pos:position pos:line="60" pos:column="23"/></name><operator pos:line="60" pos:column="23">-&gt;<pos:position pos:line="60" pos:column="28"/></operator><name pos:line="60" pos:column="25">width<pos:position pos:line="60" pos:column="30"/></name></name></expr>)<pos:position pos:line="60" pos:column="31"/></condition><then pos:line="60" pos:column="31">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="61" pos:column="7">fst<pos:position pos:line="61" pos:column="10"/></name><operator pos:line="61" pos:column="10">-&gt;<pos:position pos:line="61" pos:column="15"/></operator><name pos:line="61" pos:column="12">width<pos:position pos:line="61" pos:column="17"/></name></name> <operator pos:line="61" pos:column="18">=<pos:position pos:line="61" pos:column="19"/></operator> <call><name pos:line="61" pos:column="20">print_indent<pos:position pos:line="61" pos:column="32"/></name> <argument_list pos:line="61" pos:column="33">(<argument><expr><name pos:line="61" pos:column="34">ql<pos:position pos:line="61" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="38">s<pos:position pos:line="61" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="61" pos:column="41">add_quote_suffix<pos:position pos:line="61" pos:column="57"/></name> <argument_list pos:line="61" pos:column="58">(<argument><expr><name pos:line="61" pos:column="59">s<pos:position pos:line="61" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="62">ql<pos:position pos:line="61" pos:column="64"/></name></expr></argument>)<pos:position pos:line="61" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="61" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="67"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="62" pos:column="5">fst<pos:position pos:line="62" pos:column="8"/></name><operator pos:line="62" pos:column="8">-&gt;<pos:position pos:line="62" pos:column="13"/></operator><name pos:line="62" pos:column="10">width<pos:position pos:line="62" pos:column="15"/></name></name> <operator pos:line="62" pos:column="16">+=<pos:position pos:line="62" pos:column="18"/></operator> <name pos:line="62" pos:column="19">w<pos:position pos:line="62" pos:column="20"/></name> <operator pos:line="62" pos:column="21">+<pos:position pos:line="62" pos:column="22"/></operator> <name><name pos:line="62" pos:column="23">fst<pos:position pos:line="62" pos:column="26"/></name><operator pos:line="62" pos:column="26">-&gt;<pos:position pos:line="62" pos:column="31"/></operator><name pos:line="62" pos:column="28">spaces<pos:position pos:line="62" pos:column="34"/></name></name></expr>;<pos:position pos:line="62" pos:column="35"/></expr_stmt>
    <for pos:line="63" pos:column="5">for <control pos:line="63" pos:column="9">( <init pos:line="63" pos:column="11">;<pos:position pos:line="63" pos:column="12"/></init> <condition><expr><name><name pos:line="63" pos:column="13">fst<pos:position pos:line="63" pos:column="16"/></name><operator pos:line="63" pos:column="16">-&gt;<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="18">spaces<pos:position pos:line="63" pos:column="24"/></name></name></expr>;<pos:position pos:line="63" pos:column="25"/></condition> <incr><expr><name><name pos:line="63" pos:column="26">fst<pos:position pos:line="63" pos:column="29"/></name><operator pos:line="63" pos:column="29">-&gt;<pos:position pos:line="63" pos:column="34"/></operator><name pos:line="63" pos:column="31">spaces<pos:position pos:line="63" pos:column="37"/></name></name><operator pos:line="63" pos:column="37">--<pos:position pos:line="63" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="63" pos:column="40"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="7">state_putc<pos:position pos:line="64" pos:column="17"/></name> <argument_list pos:line="64" pos:column="18">(<argument><expr><literal type="char" pos:line="64" pos:column="19">' '<pos:position pos:line="64" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="24">s<pos:position pos:line="64" pos:column="25"/></name></expr></argument>)<pos:position pos:line="64" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="27"/></expr_stmt></block></for>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">state_puts<pos:position pos:line="65" pos:column="15"/></name> <argument_list pos:line="65" pos:column="16">(<argument><expr><name pos:line="65" pos:column="17">p<pos:position pos:line="65" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="20">s<pos:position pos:line="65" pos:column="21"/></name></expr></argument>)<pos:position pos:line="65" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="66" pos:column="5">words<pos:position pos:line="66" pos:column="10"/></name><operator pos:line="66" pos:column="10">++<pos:position pos:line="66" pos:column="12"/></operator></expr>;<pos:position pos:line="66" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="67" pos:column="4"/></block></for>

  <if pos:line="69" pos:column="3">if <condition pos:line="69" pos:column="6">(<expr><name pos:line="69" pos:column="7">term<pos:position pos:line="69" pos:column="11"/></name></expr>)<pos:position pos:line="69" pos:column="12"/></condition><then pos:line="69" pos:column="12">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="5">flush_par<pos:position pos:line="70" pos:column="14"/></name> <argument_list pos:line="70" pos:column="15">(<argument><expr><name pos:line="70" pos:column="16">s<pos:position pos:line="70" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="19">fst<pos:position pos:line="70" pos:column="22"/></name></expr></argument>)<pos:position pos:line="70" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="24"/></expr_stmt></block></then></if>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

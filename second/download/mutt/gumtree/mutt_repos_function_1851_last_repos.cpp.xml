<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1851_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">rfc2231_encode_string<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier><modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">pd<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">ext<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><literal type="number" pos:line="3" pos:column="13">0<pos:position pos:line="3" pos:column="14"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">encode<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><literal type="number" pos:line="3" pos:column="25">0<pos:position pos:line="3" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">charset<pos:position pos:line="4" pos:column="16"/></name></decl>, <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="19">s<pos:position pos:line="4" pos:column="20"/></name></decl>, <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="23">t<pos:position pos:line="4" pos:column="24"/></name></decl>, <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="27">e<pos:position pos:line="4" pos:column="28"/></name></decl>, <modifier pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="31">d<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><literal type="number" pos:line="4" pos:column="35">0<pos:position pos:line="4" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">slen<pos:position pos:line="5" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="16">dlen<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* 
   * A shortcut to detect pure 7bit data.
   * 
   * This should prevent the worst when character set handling
   * is flawed.
   */</comment>

  <for pos:line="14" pos:column="3">for <control pos:line="14" pos:column="7">(<init><expr><name pos:line="14" pos:column="8">s<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <operator pos:line="14" pos:column="12">*<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">pd<pos:position pos:line="14" pos:column="15"/></name></expr>;<pos:position pos:line="14" pos:column="16"/></init> <condition><expr><operator pos:line="14" pos:column="17">*<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">s<pos:position pos:line="14" pos:column="19"/></name></expr>;<pos:position pos:line="14" pos:column="20"/></condition> <incr><expr><name pos:line="14" pos:column="21">s<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">++<pos:position pos:line="14" pos:column="24"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="25"/></control>
    <block type="pseudo"><if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">*<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">s<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">&amp;<pos:position pos:line="15" pos:column="17"/></operator> <literal type="number" pos:line="15" pos:column="14">0x80<pos:position pos:line="15" pos:column="18"/></literal></expr>)<pos:position pos:line="15" pos:column="19"/></condition><then pos:line="15" pos:column="19">
      <block type="pseudo"><break pos:line="16" pos:column="7">break;<pos:position pos:line="16" pos:column="13"/></break></block></then></if></block></for>
  
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">!<pos:position pos:line="18" pos:column="8"/></operator><operator pos:line="18" pos:column="8">*<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="9">s<pos:position pos:line="18" pos:column="10"/></name></expr>)<pos:position pos:line="18" pos:column="11"/></condition><then pos:line="18" pos:column="11">
    <block type="pseudo"><return pos:line="19" pos:column="5">return <expr><literal type="number" pos:line="19" pos:column="12">0<pos:position pos:line="19" pos:column="13"/></literal></expr>;<pos:position pos:line="19" pos:column="14"/></return></block></then></if>
  
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><operator pos:line="21" pos:column="7">!<pos:position pos:line="21" pos:column="8"/></operator><name pos:line="21" pos:column="8">Charset<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">||<pos:position pos:line="21" pos:column="18"/></operator> <operator pos:line="21" pos:column="19">!<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="20">SendCharset<pos:position pos:line="21" pos:column="31"/></name> <operator pos:line="21" pos:column="32">||<pos:position pos:line="21" pos:column="34"/></operator>
      <operator pos:line="22" pos:column="7">!<pos:position pos:line="22" pos:column="8"/></operator><operator pos:line="22" pos:column="8">(<pos:position pos:line="22" pos:column="9"/></operator><name pos:line="22" pos:column="9">charset<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <call><name pos:line="22" pos:column="19">mutt_choose_charset<pos:position pos:line="22" pos:column="38"/></name> <argument_list pos:line="22" pos:column="39">(<argument><expr><name pos:line="22" pos:column="40">Charset<pos:position pos:line="22" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="49">SendCharset<pos:position pos:line="22" pos:column="60"/></name></expr></argument>,
				  <argument><expr><operator pos:line="23" pos:column="35">*<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="36">pd<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="40">strlen<pos:position pos:line="23" pos:column="46"/></name> <argument_list pos:line="23" pos:column="47">(<argument><expr><operator pos:line="23" pos:column="48">*<pos:position pos:line="23" pos:column="49"/></operator><name pos:line="23" pos:column="49">pd<pos:position pos:line="23" pos:column="51"/></name></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="23" pos:column="54">&amp;<pos:position pos:line="23" pos:column="59"/></operator><name pos:line="23" pos:column="55">d<pos:position pos:line="23" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="58">&amp;<pos:position pos:line="23" pos:column="63"/></operator><name pos:line="23" pos:column="59">dlen<pos:position pos:line="23" pos:column="63"/></name></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call><operator pos:line="23" pos:column="64">)<pos:position pos:line="23" pos:column="65"/></operator></expr>)<pos:position pos:line="23" pos:column="66"/></condition><then pos:line="23" pos:column="66">
  <block pos:line="24" pos:column="3">{
    <expr_stmt><expr><name pos:line="25" pos:column="5">charset<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">=<pos:position pos:line="25" pos:column="14"/></operator> <call><name pos:line="25" pos:column="15">safe_strdup<pos:position pos:line="25" pos:column="26"/></name> <argument_list pos:line="25" pos:column="27">(<argument><expr><ternary><condition><expr><name pos:line="25" pos:column="28">Charset<pos:position pos:line="25" pos:column="35"/></name></expr> ?<pos:position pos:line="25" pos:column="37"/></condition><then pos:line="25" pos:column="37"> <expr><name pos:line="25" pos:column="38">Charset<pos:position pos:line="25" pos:column="45"/></name></expr> <pos:position pos:line="25" pos:column="46"/></then><else pos:line="25" pos:column="46">: <expr><literal type="string" pos:line="25" pos:column="48">"unknown-8bit"<pos:position pos:line="25" pos:column="62"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="25" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name pos:line="26" pos:column="5">d<pos:position pos:line="26" pos:column="6"/></name> <operator pos:line="26" pos:column="7">=<pos:position pos:line="26" pos:column="8"/></operator> <operator pos:line="26" pos:column="9">*<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">pd<pos:position pos:line="26" pos:column="12"/></name></expr>;<pos:position pos:line="26" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name pos:line="27" pos:column="5">dlen<pos:position pos:line="27" pos:column="9"/></name> <operator pos:line="27" pos:column="10">=<pos:position pos:line="27" pos:column="11"/></operator> <call><name pos:line="27" pos:column="12">strlen<pos:position pos:line="27" pos:column="18"/></name> <argument_list pos:line="27" pos:column="19">(<argument><expr><name pos:line="27" pos:column="20">d<pos:position pos:line="27" pos:column="21"/></name></expr></argument>)<pos:position pos:line="27" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><operator pos:line="30" pos:column="7">!<pos:position pos:line="30" pos:column="8"/></operator><call><name pos:line="30" pos:column="8">mutt_is_us_ascii<pos:position pos:line="30" pos:column="24"/></name> <argument_list pos:line="30" pos:column="25">(<argument><expr><name pos:line="30" pos:column="26">charset<pos:position pos:line="30" pos:column="33"/></name></expr></argument>)<pos:position pos:line="30" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="35"/></condition><then pos:line="30" pos:column="35">
    <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="5">encode<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <literal type="number" pos:line="31" pos:column="14">1<pos:position pos:line="31" pos:column="15"/></literal></expr>;<pos:position pos:line="31" pos:column="16"/></expr_stmt></block></then></if>

  <for pos:line="33" pos:column="3">for <control pos:line="33" pos:column="7">(<init><expr><name pos:line="33" pos:column="8">s<pos:position pos:line="33" pos:column="9"/></name> <operator pos:line="33" pos:column="10">=<pos:position pos:line="33" pos:column="11"/></operator> <name pos:line="33" pos:column="12">d<pos:position pos:line="33" pos:column="13"/></name></expr><operator pos:line="33" pos:column="13">,<pos:position pos:line="33" pos:column="14"/></operator> <expr><name pos:line="33" pos:column="15">slen<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">=<pos:position pos:line="33" pos:column="21"/></operator> <name pos:line="33" pos:column="22">dlen<pos:position pos:line="33" pos:column="26"/></name></expr>;<pos:position pos:line="33" pos:column="27"/></init> <condition><expr><name pos:line="33" pos:column="28">slen<pos:position pos:line="33" pos:column="32"/></name></expr>;<pos:position pos:line="33" pos:column="33"/></condition> <incr><expr><name pos:line="33" pos:column="34">s<pos:position pos:line="33" pos:column="35"/></name><operator pos:line="33" pos:column="35">++<pos:position pos:line="33" pos:column="37"/></operator></expr><operator pos:line="33" pos:column="37">,<pos:position pos:line="33" pos:column="38"/></operator> <expr><name pos:line="33" pos:column="39">slen<pos:position pos:line="33" pos:column="43"/></name><operator pos:line="33" pos:column="43">--<pos:position pos:line="33" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="46"/></control>
    <block type="pseudo"><if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><operator pos:line="34" pos:column="9">*<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">s<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">&lt;<pos:position pos:line="34" pos:column="16"/></operator> <literal type="number" pos:line="34" pos:column="14">0x20<pos:position pos:line="34" pos:column="18"/></literal> <operator pos:line="34" pos:column="19">||<pos:position pos:line="34" pos:column="21"/></operator> <operator pos:line="34" pos:column="22">*<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="23">s<pos:position pos:line="34" pos:column="24"/></name> <operator pos:line="34" pos:column="25">&gt;=<pos:position pos:line="34" pos:column="30"/></operator> <literal type="number" pos:line="34" pos:column="28">0x7f<pos:position pos:line="34" pos:column="32"/></literal></expr>)<pos:position pos:line="34" pos:column="33"/></condition><then pos:line="34" pos:column="33">
      <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="7">encode<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <literal type="number" pos:line="35" pos:column="16">1<pos:position pos:line="35" pos:column="17"/></literal></expr><operator pos:line="35" pos:column="17">,<pos:position pos:line="35" pos:column="18"/></operator> <expr><operator pos:line="35" pos:column="19">++<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="21">ext<pos:position pos:line="35" pos:column="24"/></name></expr>;<pos:position pos:line="35" pos:column="25"/></expr_stmt></block></then>
    <elseif pos:line="36" pos:column="5">else <if pos:line="36" pos:column="10">if <condition pos:line="36" pos:column="13">(<expr><call><name pos:line="36" pos:column="14">strchr<pos:position pos:line="36" pos:column="20"/></name> <argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">MimeSpecials<pos:position pos:line="36" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="36">*<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="37">s<pos:position pos:line="36" pos:column="38"/></name></expr></argument>)<pos:position pos:line="36" pos:column="39"/></argument_list></call> <operator pos:line="36" pos:column="40">||<pos:position pos:line="36" pos:column="42"/></operator> <call><name pos:line="36" pos:column="43">strchr<pos:position pos:line="36" pos:column="49"/></name> <argument_list pos:line="36" pos:column="50">(<argument><expr><literal type="string" pos:line="36" pos:column="51">"*'%"<pos:position pos:line="36" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="36" pos:column="58">*<pos:position pos:line="36" pos:column="59"/></operator><name pos:line="36" pos:column="59">s<pos:position pos:line="36" pos:column="60"/></name></expr></argument>)<pos:position pos:line="36" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="62"/></condition><then pos:line="36" pos:column="62">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="37" pos:column="7">++<pos:position pos:line="37" pos:column="9"/></operator><name pos:line="37" pos:column="9">ext<pos:position pos:line="37" pos:column="12"/></name></expr>;<pos:position pos:line="37" pos:column="13"/></expr_stmt></block></then></if></elseif></if></block></for>

  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><name pos:line="39" pos:column="7">encode<pos:position pos:line="39" pos:column="13"/></name></expr>)<pos:position pos:line="39" pos:column="14"/></condition><then pos:line="39" pos:column="14">
  <block pos:line="40" pos:column="3">{
    <expr_stmt><expr><name pos:line="41" pos:column="5">e<pos:position pos:line="41" pos:column="6"/></name> <operator pos:line="41" pos:column="7">=<pos:position pos:line="41" pos:column="8"/></operator> <call><name pos:line="41" pos:column="9">safe_malloc<pos:position pos:line="41" pos:column="20"/></name> <argument_list pos:line="41" pos:column="21">(<argument><expr><name pos:line="41" pos:column="22">dlen<pos:position pos:line="41" pos:column="26"/></name> <operator pos:line="41" pos:column="27">+<pos:position pos:line="41" pos:column="28"/></operator> <literal type="number" pos:line="41" pos:column="29">2<pos:position pos:line="41" pos:column="30"/></literal><operator pos:line="41" pos:column="30">*<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="31">ext<pos:position pos:line="41" pos:column="34"/></name> <operator pos:line="41" pos:column="35">+<pos:position pos:line="41" pos:column="36"/></operator> <call><name pos:line="41" pos:column="37">strlen<pos:position pos:line="41" pos:column="43"/></name> <argument_list pos:line="41" pos:column="44">(<argument><expr><name pos:line="41" pos:column="45">charset<pos:position pos:line="41" pos:column="52"/></name></expr></argument>)<pos:position pos:line="41" pos:column="53"/></argument_list></call> <operator pos:line="41" pos:column="54">+<pos:position pos:line="41" pos:column="55"/></operator> <literal type="number" pos:line="41" pos:column="56">3<pos:position pos:line="41" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">sprintf<pos:position pos:line="42" pos:column="12"/></name> <argument_list pos:line="42" pos:column="13">(<argument><expr><name pos:line="42" pos:column="14">e<pos:position pos:line="42" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="17">"%s''"<pos:position pos:line="42" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="25">charset<pos:position pos:line="42" pos:column="32"/></name></expr></argument>)<pos:position pos:line="42" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="34"/></expr_stmt>	<comment type="block" pos:line="42" pos:column="41">/* __SPRINTF_CHECKED__ */</comment>
    <expr_stmt><expr><name pos:line="43" pos:column="5">t<pos:position pos:line="43" pos:column="6"/></name> <operator pos:line="43" pos:column="7">=<pos:position pos:line="43" pos:column="8"/></operator> <name pos:line="43" pos:column="9">e<pos:position pos:line="43" pos:column="10"/></name> <operator pos:line="43" pos:column="11">+<pos:position pos:line="43" pos:column="12"/></operator> <call><name pos:line="43" pos:column="13">strlen<pos:position pos:line="43" pos:column="19"/></name> <argument_list pos:line="43" pos:column="20">(<argument><expr><name pos:line="43" pos:column="21">e<pos:position pos:line="43" pos:column="22"/></name></expr></argument>)<pos:position pos:line="43" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="24"/></expr_stmt>
    <for pos:line="44" pos:column="5">for <control pos:line="44" pos:column="9">(<init><expr><name pos:line="44" pos:column="10">s<pos:position pos:line="44" pos:column="11"/></name> <operator pos:line="44" pos:column="12">=<pos:position pos:line="44" pos:column="13"/></operator> <name pos:line="44" pos:column="14">d<pos:position pos:line="44" pos:column="15"/></name></expr><operator pos:line="44" pos:column="15">,<pos:position pos:line="44" pos:column="16"/></operator> <expr><name pos:line="44" pos:column="17">slen<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">=<pos:position pos:line="44" pos:column="23"/></operator> <name pos:line="44" pos:column="24">dlen<pos:position pos:line="44" pos:column="28"/></name></expr>;<pos:position pos:line="44" pos:column="29"/></init> <condition><expr><name pos:line="44" pos:column="30">slen<pos:position pos:line="44" pos:column="34"/></name></expr>;<pos:position pos:line="44" pos:column="35"/></condition> <incr><expr><name pos:line="44" pos:column="36">s<pos:position pos:line="44" pos:column="37"/></name><operator pos:line="44" pos:column="37">++<pos:position pos:line="44" pos:column="39"/></operator></expr><operator pos:line="44" pos:column="39">,<pos:position pos:line="44" pos:column="40"/></operator> <expr><name pos:line="44" pos:column="41">slen<pos:position pos:line="44" pos:column="45"/></name><operator pos:line="44" pos:column="45">--<pos:position pos:line="44" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="44" pos:column="48"/></control>
      <block type="pseudo"><if pos:line="45" pos:column="7">if <condition pos:line="45" pos:column="10">(<expr><operator pos:line="45" pos:column="11">*<pos:position pos:line="45" pos:column="12"/></operator><name pos:line="45" pos:column="12">s<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">&lt;<pos:position pos:line="45" pos:column="18"/></operator> <literal type="number" pos:line="45" pos:column="16">0x20<pos:position pos:line="45" pos:column="20"/></literal> <operator pos:line="45" pos:column="21">||<pos:position pos:line="45" pos:column="23"/></operator> <operator pos:line="45" pos:column="24">*<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="25">s<pos:position pos:line="45" pos:column="26"/></name> <operator pos:line="45" pos:column="27">&gt;=<pos:position pos:line="45" pos:column="32"/></operator> <literal type="number" pos:line="45" pos:column="30">0x7f<pos:position pos:line="45" pos:column="34"/></literal> <operator pos:line="45" pos:column="35">||<pos:position pos:line="45" pos:column="37"/></operator>
	  <call><name pos:line="46" pos:column="11">strchr<pos:position pos:line="46" pos:column="17"/></name> <argument_list pos:line="46" pos:column="18">(<argument><expr><name pos:line="46" pos:column="19">MimeSpecials<pos:position pos:line="46" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="33">*<pos:position pos:line="46" pos:column="34"/></operator><name pos:line="46" pos:column="34">s<pos:position pos:line="46" pos:column="35"/></name></expr></argument>)<pos:position pos:line="46" pos:column="36"/></argument_list></call> <operator pos:line="46" pos:column="37">||<pos:position pos:line="46" pos:column="39"/></operator> <call><name pos:line="46" pos:column="40">strchr<pos:position pos:line="46" pos:column="46"/></name> <argument_list pos:line="46" pos:column="47">(<argument><expr><literal type="string" pos:line="46" pos:column="48">"*'%"<pos:position pos:line="46" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="46" pos:column="55">*<pos:position pos:line="46" pos:column="56"/></operator><name pos:line="46" pos:column="56">s<pos:position pos:line="46" pos:column="57"/></name></expr></argument>)<pos:position pos:line="46" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="59"/></condition><then pos:line="46" pos:column="59">
      <block pos:line="47" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">sprintf<pos:position pos:line="48" pos:column="16"/></name> <argument_list pos:line="48" pos:column="17">(<argument><expr><name pos:line="48" pos:column="18">t<pos:position pos:line="48" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="21">"%%%02X"<pos:position pos:line="48" pos:column="29"/></literal></expr></argument>, <argument><expr><operator pos:line="48" pos:column="31">(<pos:position pos:line="48" pos:column="32"/></operator><name pos:line="48" pos:column="32">unsigned<pos:position pos:line="48" pos:column="40"/></name> <name pos:line="48" pos:column="41">char<pos:position pos:line="48" pos:column="45"/></name><operator pos:line="48" pos:column="45">)<pos:position pos:line="48" pos:column="46"/></operator><operator pos:line="48" pos:column="46">*<pos:position pos:line="48" pos:column="47"/></operator><name pos:line="48" pos:column="47">s<pos:position pos:line="48" pos:column="48"/></name></expr></argument>)<pos:position pos:line="48" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><name pos:line="49" pos:column="9">t<pos:position pos:line="49" pos:column="10"/></name> <operator pos:line="49" pos:column="11">+=<pos:position pos:line="49" pos:column="13"/></operator> <literal type="number" pos:line="49" pos:column="14">3<pos:position pos:line="49" pos:column="15"/></literal></expr>;<pos:position pos:line="49" pos:column="16"/></expr_stmt>
      }<pos:position pos:line="50" pos:column="8"/></block></then>
      <else pos:line="51" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><operator pos:line="52" pos:column="9">*<pos:position pos:line="52" pos:column="10"/></operator><name pos:line="52" pos:column="10">t<pos:position pos:line="52" pos:column="11"/></name><operator pos:line="52" pos:column="11">++<pos:position pos:line="52" pos:column="13"/></operator> <operator pos:line="52" pos:column="14">=<pos:position pos:line="52" pos:column="15"/></operator> <operator pos:line="52" pos:column="16">*<pos:position pos:line="52" pos:column="17"/></operator><name pos:line="52" pos:column="17">s<pos:position pos:line="52" pos:column="18"/></name></expr>;<pos:position pos:line="52" pos:column="19"/></expr_stmt></block></else></if></block></for>
    <expr_stmt><expr><operator pos:line="53" pos:column="5">*<pos:position pos:line="53" pos:column="6"/></operator><name pos:line="53" pos:column="6">t<pos:position pos:line="53" pos:column="7"/></name> <operator pos:line="53" pos:column="8">=<pos:position pos:line="53" pos:column="9"/></operator> <literal type="char" pos:line="53" pos:column="10">'\0'<pos:position pos:line="53" pos:column="14"/></literal></expr>;<pos:position pos:line="53" pos:column="15"/></expr_stmt>

    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name pos:line="55" pos:column="9">d<pos:position pos:line="55" pos:column="10"/></name> <operator pos:line="55" pos:column="11">!=<pos:position pos:line="55" pos:column="13"/></operator> <operator pos:line="55" pos:column="14">*<pos:position pos:line="55" pos:column="15"/></operator><name pos:line="55" pos:column="15">pd<pos:position pos:line="55" pos:column="17"/></name></expr>)<pos:position pos:line="55" pos:column="18"/></condition><then pos:line="55" pos:column="18">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="7">FREE<pos:position pos:line="56" pos:column="11"/></name> <argument_list pos:line="56" pos:column="12">(<argument><expr><operator pos:line="56" pos:column="13">&amp;<pos:position pos:line="56" pos:column="18"/></operator><name pos:line="56" pos:column="14">d<pos:position pos:line="56" pos:column="15"/></name></expr></argument>)<pos:position pos:line="56" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="17"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">FREE<pos:position pos:line="57" pos:column="9"/></name> <argument_list pos:line="57" pos:column="10">(<argument><expr><name pos:line="57" pos:column="11">pd<pos:position pos:line="57" pos:column="13"/></name></expr></argument>)<pos:position pos:line="57" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="15"/></expr_stmt>		<comment type="block" pos:line="57" pos:column="25">/* __FREE_CHECKED__ */</comment>
    <expr_stmt><expr><operator pos:line="58" pos:column="5">*<pos:position pos:line="58" pos:column="6"/></operator><name pos:line="58" pos:column="6">pd<pos:position pos:line="58" pos:column="8"/></name> <operator pos:line="58" pos:column="9">=<pos:position pos:line="58" pos:column="10"/></operator> <name pos:line="58" pos:column="11">e<pos:position pos:line="58" pos:column="12"/></name></expr>;<pos:position pos:line="58" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="59" pos:column="4"/></block></then>
  <elseif pos:line="60" pos:column="3">else <if pos:line="60" pos:column="8">if <condition pos:line="60" pos:column="11">(<expr><name pos:line="60" pos:column="12">d<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">!=<pos:position pos:line="60" pos:column="16"/></operator> <operator pos:line="60" pos:column="17">*<pos:position pos:line="60" pos:column="18"/></operator><name pos:line="60" pos:column="18">pd<pos:position pos:line="60" pos:column="20"/></name></expr>)<pos:position pos:line="60" pos:column="21"/></condition><then pos:line="60" pos:column="21">
  <block pos:line="61" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="62" pos:column="5">FREE<pos:position pos:line="62" pos:column="9"/></name> <argument_list pos:line="62" pos:column="10">(<argument><expr><name pos:line="62" pos:column="11">pd<pos:position pos:line="62" pos:column="13"/></name></expr></argument>)<pos:position pos:line="62" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="15"/></expr_stmt>		<comment type="block" pos:line="62" pos:column="25">/* __FREE_CHECKED__ */</comment>
    <expr_stmt><expr><operator pos:line="63" pos:column="5">*<pos:position pos:line="63" pos:column="6"/></operator><name pos:line="63" pos:column="6">pd<pos:position pos:line="63" pos:column="8"/></name> <operator pos:line="63" pos:column="9">=<pos:position pos:line="63" pos:column="10"/></operator> <name pos:line="63" pos:column="11">d<pos:position pos:line="63" pos:column="12"/></name></expr>;<pos:position pos:line="63" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="64" pos:column="4"/></block></then></if></elseif></if>
  
  <expr_stmt><expr><call><name pos:line="66" pos:column="3">FREE<pos:position pos:line="66" pos:column="7"/></name> <argument_list pos:line="66" pos:column="8">(<argument><expr><operator pos:line="66" pos:column="9">&amp;<pos:position pos:line="66" pos:column="14"/></operator><name pos:line="66" pos:column="10">charset<pos:position pos:line="66" pos:column="17"/></name></expr></argument>)<pos:position pos:line="66" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="19"/></expr_stmt>
  
  <return pos:line="68" pos:column="3">return <expr><name pos:line="68" pos:column="10">encode<pos:position pos:line="68" pos:column="16"/></name></expr>;<pos:position pos:line="68" pos:column="17"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1516_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">next_word<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">s<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <while pos:line="3" pos:column="3">while <condition pos:line="3" pos:column="9">(<expr><operator pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></operator><name pos:line="3" pos:column="11">s<pos:position pos:line="3" pos:column="12"/></name> <operator pos:line="3" pos:column="13">&amp;&amp;<pos:position pos:line="3" pos:column="23"/></operator> <operator pos:line="3" pos:column="16">!<pos:position pos:line="3" pos:column="17"/></operator><call><name pos:line="3" pos:column="17">ISSPACE<pos:position pos:line="3" pos:column="24"/></name> <argument_list pos:line="3" pos:column="25">(<argument><expr><operator pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></operator><name pos:line="3" pos:column="27">s<pos:position pos:line="3" pos:column="28"/></name></expr></argument>)<pos:position pos:line="3" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="30"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="4" pos:column="5">s<pos:position pos:line="4" pos:column="6"/></name><operator pos:line="4" pos:column="6">++<pos:position pos:line="4" pos:column="8"/></operator></expr>;<pos:position pos:line="4" pos:column="9"/></expr_stmt></block></while>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">SKIPWS<pos:position pos:line="5" pos:column="9"/></name> <argument_list pos:line="5" pos:column="10">(<argument><expr><name pos:line="5" pos:column="11">s<pos:position pos:line="5" pos:column="12"/></name></expr></argument>)<pos:position pos:line="5" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="14"/></expr_stmt>
  <return pos:line="6" pos:column="3">return <expr><name pos:line="6" pos:column="10">s<pos:position pos:line="6" pos:column="11"/></name></expr>;<pos:position pos:line="6" pos:column="12"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

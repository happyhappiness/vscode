<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_442_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BUFFY<pos:position pos:line="1" pos:column="6"/></name> <modifier pos:line="1" pos:column="7">*<pos:position pos:line="1" pos:column="8"/></modifier></type><name pos:line="1" pos:column="8">mutt_find_mailbox<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">path<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">BUFFY<pos:position pos:line="3" pos:column="8"/></name> <modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">tmp<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><name pos:line="3" pos:column="16">NULL<pos:position pos:line="3" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">stat<pos:position pos:line="4" pos:column="14"/></name></name></type> <name pos:line="4" pos:column="15">sb<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">stat<pos:position pos:line="5" pos:column="14"/></name></name></type> <name pos:line="5" pos:column="15">tmp_sb<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
  
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><call><name pos:line="7" pos:column="7">stat<pos:position pos:line="7" pos:column="11"/></name> <argument_list pos:line="7" pos:column="12">(<argument><expr><name pos:line="7" pos:column="13">path<pos:position pos:line="7" pos:column="17"/></name></expr></argument>,<argument><expr><operator pos:line="7" pos:column="18">&amp;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="19">sb<pos:position pos:line="7" pos:column="21"/></name></expr></argument>)<pos:position pos:line="7" pos:column="22"/></argument_list></call> <operator pos:line="7" pos:column="23">!=<pos:position pos:line="7" pos:column="25"/></operator> <literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr>)<pos:position pos:line="7" pos:column="28"/></condition><then pos:line="7" pos:column="28">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">NULL<pos:position pos:line="8" pos:column="16"/></name></expr>;<pos:position pos:line="8" pos:column="17"/></return></block></then></if>

  <for pos:line="10" pos:column="3">for <control pos:line="10" pos:column="7">(<init><expr><name pos:line="10" pos:column="8">tmp<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <name pos:line="10" pos:column="14">Incoming<pos:position pos:line="10" pos:column="22"/></name></expr>;<pos:position pos:line="10" pos:column="23"/></init> <condition><expr><name pos:line="10" pos:column="24">tmp<pos:position pos:line="10" pos:column="27"/></name></expr>;<pos:position pos:line="10" pos:column="28"/></condition> <incr><expr><name pos:line="10" pos:column="29">tmp<pos:position pos:line="10" pos:column="32"/></name> <operator pos:line="10" pos:column="33">=<pos:position pos:line="10" pos:column="34"/></operator> <name><name pos:line="10" pos:column="35">tmp<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">-&gt;<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="40">next<pos:position pos:line="10" pos:column="44"/></name></name></expr></incr>)<pos:position pos:line="10" pos:column="45"/></control>
  <block pos:line="11" pos:column="3">{
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">stat<pos:position pos:line="12" pos:column="13"/></name> <argument_list pos:line="12" pos:column="14">(<argument><expr><name><name pos:line="12" pos:column="15">tmp<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">-&gt;<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="20">path<pos:position pos:line="12" pos:column="24"/></name></name></expr></argument>,<argument><expr><operator pos:line="12" pos:column="25">&amp;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="26">tmp_sb<pos:position pos:line="12" pos:column="32"/></name></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call> <operator pos:line="12" pos:column="34">==<pos:position pos:line="12" pos:column="36"/></operator><literal type="number" pos:line="12" pos:column="36">0<pos:position pos:line="12" pos:column="37"/></literal> <operator pos:line="12" pos:column="38">&amp;&amp;<pos:position pos:line="12" pos:column="48"/></operator> 
	<name><name pos:line="13" pos:column="9">sb<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">.<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="12">st_dev<pos:position pos:line="13" pos:column="18"/></name></name> <operator pos:line="13" pos:column="19">==<pos:position pos:line="13" pos:column="21"/></operator> <name><name pos:line="13" pos:column="22">tmp_sb<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">.<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="29">st_dev<pos:position pos:line="13" pos:column="35"/></name></name> <operator pos:line="13" pos:column="36">&amp;&amp;<pos:position pos:line="13" pos:column="46"/></operator> <name><name pos:line="13" pos:column="39">sb<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">.<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="42">st_ino<pos:position pos:line="13" pos:column="48"/></name></name> <operator pos:line="13" pos:column="49">==<pos:position pos:line="13" pos:column="51"/></operator> <name><name pos:line="13" pos:column="52">tmp_sb<pos:position pos:line="13" pos:column="58"/></name><operator pos:line="13" pos:column="58">.<pos:position pos:line="13" pos:column="59"/></operator><name pos:line="13" pos:column="59">st_ino<pos:position pos:line="13" pos:column="65"/></name></name></expr>)<pos:position pos:line="13" pos:column="66"/></condition><then pos:line="13" pos:column="66">
      <block type="pseudo"><break pos:line="14" pos:column="7">break;<pos:position pos:line="14" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="15" pos:column="4"/></block></for>
  <return pos:line="16" pos:column="3">return <expr><name pos:line="16" pos:column="10">tmp<pos:position pos:line="16" pos:column="13"/></name></expr>;<pos:position pos:line="16" pos:column="14"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

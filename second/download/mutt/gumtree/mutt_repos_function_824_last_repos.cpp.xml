<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_824_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">char<pos:position pos:line="1" pos:column="19"/></name><modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type> <name pos:line="1" pos:column="21">ascii_strlower<pos:position pos:line="1" pos:column="35"/></name> <parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">s<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">p<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><name pos:line="3" pos:column="13">s<pos:position pos:line="3" pos:column="14"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

  <while pos:line="5" pos:column="3">while <condition pos:line="5" pos:column="9">(<expr><operator pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">p<pos:position pos:line="5" pos:column="12"/></name></expr>)<pos:position pos:line="5" pos:column="13"/></condition>
  <block pos:line="6" pos:column="3">{
    <expr_stmt><expr><operator pos:line="7" pos:column="5">*<pos:position pos:line="7" pos:column="6"/></operator><name pos:line="7" pos:column="6">p<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">=<pos:position pos:line="7" pos:column="9"/></operator> <call><name pos:line="7" pos:column="10">ascii_tolower<pos:position pos:line="7" pos:column="23"/></name> <argument_list pos:line="7" pos:column="24">(<argument><expr><operator pos:line="7" pos:column="25">(<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">unsigned<pos:position pos:line="7" pos:column="34"/></name> <name pos:line="7" pos:column="35">int<pos:position pos:line="7" pos:column="38"/></name><operator pos:line="7" pos:column="38">)<pos:position pos:line="7" pos:column="39"/></operator> <operator pos:line="7" pos:column="40">*<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="41">p<pos:position pos:line="7" pos:column="42"/></name></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="8" pos:column="5">p<pos:position pos:line="8" pos:column="6"/></name><operator pos:line="8" pos:column="6">++<pos:position pos:line="8" pos:column="8"/></operator></expr>;<pos:position pos:line="8" pos:column="9"/></expr_stmt>
  }<pos:position pos:line="9" pos:column="4"/></block></while>

  <return pos:line="11" pos:column="3">return <expr><name pos:line="11" pos:column="10">s<pos:position pos:line="11" pos:column="11"/></name></expr>;<pos:position pos:line="11" pos:column="12"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

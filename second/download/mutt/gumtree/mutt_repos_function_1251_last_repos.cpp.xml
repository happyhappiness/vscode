<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1251_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">compare_threads<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">void<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">a<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">void<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">b<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="3" pos:column="3">static<pos:position pos:line="3" pos:column="9"/></specifier> <type><name pos:line="3" pos:column="10">sort_t<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">sort_func<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><name pos:line="3" pos:column="30">NULL<pos:position pos:line="3" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">a<pos:position pos:line="5" pos:column="8"/></name> <operator pos:line="5" pos:column="9">&amp;&amp;<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="12">b<pos:position pos:line="5" pos:column="13"/></name></expr>)<pos:position pos:line="5" pos:column="14"/></condition><then pos:line="5" pos:column="14">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><call pos:line="6" pos:column="13">(<modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier><name pos:line="6" pos:column="15">sort_func<pos:position pos:line="6" pos:column="24"/></name>) <argument_list pos:line="6" pos:column="26">(<argument><expr><operator pos:line="6" pos:column="27">&amp;<pos:position pos:line="6" pos:column="32"/></operator><operator pos:line="6" pos:column="28">(<pos:position pos:line="6" pos:column="29"/></operator><operator pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></operator><operator pos:line="6" pos:column="30">(<pos:position pos:line="6" pos:column="31"/></operator><operator pos:line="6" pos:column="31">(<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="32">THREAD<pos:position pos:line="6" pos:column="38"/></name> <operator pos:line="6" pos:column="39">*<pos:position pos:line="6" pos:column="40"/></operator><operator pos:line="6" pos:column="40">*<pos:position pos:line="6" pos:column="41"/></operator><operator pos:line="6" pos:column="41">)<pos:position pos:line="6" pos:column="42"/></operator> <name pos:line="6" pos:column="43">a<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">)<pos:position pos:line="6" pos:column="45"/></operator><operator pos:line="6" pos:column="45">)<pos:position pos:line="6" pos:column="46"/></operator><operator pos:line="6" pos:column="46">-&gt;<pos:position pos:line="6" pos:column="51"/></operator><name pos:line="6" pos:column="48">sort_key<pos:position pos:line="6" pos:column="56"/></name></expr></argument>,
			  <argument><expr><operator pos:line="7" pos:column="27">&amp;<pos:position pos:line="7" pos:column="32"/></operator><operator pos:line="7" pos:column="28">(<pos:position pos:line="7" pos:column="29"/></operator><operator pos:line="7" pos:column="29">*<pos:position pos:line="7" pos:column="30"/></operator><operator pos:line="7" pos:column="30">(<pos:position pos:line="7" pos:column="31"/></operator><operator pos:line="7" pos:column="31">(<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="32">THREAD<pos:position pos:line="7" pos:column="38"/></name> <operator pos:line="7" pos:column="39">*<pos:position pos:line="7" pos:column="40"/></operator><operator pos:line="7" pos:column="40">*<pos:position pos:line="7" pos:column="41"/></operator><operator pos:line="7" pos:column="41">)<pos:position pos:line="7" pos:column="42"/></operator> <name pos:line="7" pos:column="43">b<pos:position pos:line="7" pos:column="44"/></name><operator pos:line="7" pos:column="44">)<pos:position pos:line="7" pos:column="45"/></operator><operator pos:line="7" pos:column="45">)<pos:position pos:line="7" pos:column="46"/></operator><operator pos:line="7" pos:column="46">-&gt;<pos:position pos:line="7" pos:column="51"/></operator><name pos:line="7" pos:column="48">sort_key<pos:position pos:line="7" pos:column="56"/></name></expr></argument>)<pos:position pos:line="7" pos:column="57"/></argument_list></call><operator pos:line="7" pos:column="57">)<pos:position pos:line="7" pos:column="58"/></operator></expr>;<pos:position pos:line="7" pos:column="59"/></return></block></then>
  <comment type="block" pos:line="8" pos:column="3">/* a hack to let us reset sort_func even though we can't
   * have extra arguments because of qsort
   */</comment>
  <else pos:line="11" pos:column="3">else
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><name pos:line="13" pos:column="5">sort_func<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <call><name pos:line="13" pos:column="17">mutt_get_sort_func<pos:position pos:line="13" pos:column="35"/></name> <argument_list pos:line="13" pos:column="36">(<argument><expr><name pos:line="13" pos:column="37">Sort<pos:position pos:line="13" pos:column="41"/></name></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><ternary><condition><expr><name pos:line="14" pos:column="13">sort_func<pos:position pos:line="14" pos:column="22"/></name></expr> ?<pos:position pos:line="14" pos:column="24"/></condition><then pos:line="14" pos:column="24"> <expr><literal type="number" pos:line="14" pos:column="25">1<pos:position pos:line="14" pos:column="26"/></literal></expr> <pos:position pos:line="14" pos:column="27"/></then><else pos:line="14" pos:column="27">: <expr><literal type="number" pos:line="14" pos:column="29">0<pos:position pos:line="14" pos:column="30"/></literal></expr></else></ternary><operator pos:line="14" pos:column="30">)<pos:position pos:line="14" pos:column="31"/></operator></expr>;<pos:position pos:line="14" pos:column="32"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></else></if>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

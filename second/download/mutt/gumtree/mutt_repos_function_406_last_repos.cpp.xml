<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_406_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">_mutt_fmt_smime_command<pos:position pos:line="1" pos:column="43"/></name> <parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">dest<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
					    <parameter><decl><type><name pos:line="2" pos:column="45">size_t<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">destlen<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>,
					    <parameter><decl><type><name pos:line="3" pos:column="45">size_t<pos:position pos:line="3" pos:column="51"/></name></type> <name pos:line="3" pos:column="52">col<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>,
                                            <parameter><decl><type><name pos:line="4" pos:column="45">int<pos:position pos:line="4" pos:column="48"/></name></type> <name pos:line="4" pos:column="49">cols<pos:position pos:line="4" pos:column="53"/></name></decl></parameter>,
					    <parameter><decl><type><name pos:line="5" pos:column="45">char<pos:position pos:line="5" pos:column="49"/></name></type> <name pos:line="5" pos:column="50">op<pos:position pos:line="5" pos:column="52"/></name></decl></parameter>,
					    <parameter><decl><type><specifier pos:line="6" pos:column="45">const<pos:position pos:line="6" pos:column="50"/></specifier> <name pos:line="6" pos:column="51">char<pos:position pos:line="6" pos:column="55"/></name> <modifier pos:line="6" pos:column="56">*<pos:position pos:line="6" pos:column="57"/></modifier></type><name pos:line="6" pos:column="57">src<pos:position pos:line="6" pos:column="60"/></name></decl></parameter>,
					    <parameter><decl><type><specifier pos:line="7" pos:column="45">const<pos:position pos:line="7" pos:column="50"/></specifier> <name pos:line="7" pos:column="51">char<pos:position pos:line="7" pos:column="55"/></name> <modifier pos:line="7" pos:column="56">*<pos:position pos:line="7" pos:column="57"/></modifier></type><name pos:line="7" pos:column="57">prefix<pos:position pos:line="7" pos:column="63"/></name></decl></parameter>,
					    <parameter><decl><type><specifier pos:line="8" pos:column="45">const<pos:position pos:line="8" pos:column="50"/></specifier> <name pos:line="8" pos:column="51">char<pos:position pos:line="8" pos:column="55"/></name> <modifier pos:line="8" pos:column="56">*<pos:position pos:line="8" pos:column="57"/></modifier></type><name pos:line="8" pos:column="57">ifstring<pos:position pos:line="8" pos:column="65"/></name></decl></parameter>,
					    <parameter><decl><type><specifier pos:line="9" pos:column="45">const<pos:position pos:line="9" pos:column="50"/></specifier> <name pos:line="9" pos:column="51">char<pos:position pos:line="9" pos:column="55"/></name> <modifier pos:line="9" pos:column="56">*<pos:position pos:line="9" pos:column="57"/></modifier></type><name pos:line="9" pos:column="57">elsestring<pos:position pos:line="9" pos:column="67"/></name></decl></parameter>,
					    <parameter><decl><type><name pos:line="10" pos:column="45">unsigned<pos:position pos:line="10" pos:column="53"/></name> <name pos:line="10" pos:column="54">long<pos:position pos:line="10" pos:column="58"/></name></type> <name pos:line="10" pos:column="59">data<pos:position pos:line="10" pos:column="63"/></name></decl></parameter>,
					    <parameter><decl><type><name pos:line="11" pos:column="45">format_flag<pos:position pos:line="11" pos:column="56"/></name></type> <name pos:line="11" pos:column="57">flags<pos:position pos:line="11" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="11" pos:column="63"/></parameter_list>
<block pos:line="12" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name></type> <name><name pos:line="13" pos:column="8">fmt<pos:position pos:line="13" pos:column="11"/></name><index pos:line="13" pos:column="11">[<expr><literal type="number" pos:line="13" pos:column="12">16<pos:position pos:line="13" pos:column="14"/></literal></expr>]<pos:position pos:line="13" pos:column="15"/></index></name></decl>;<pos:position pos:line="13" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="14" pos:column="3">struct<pos:position pos:line="14" pos:column="9"/></name> <name pos:line="14" pos:column="10">smime_command_context<pos:position pos:line="14" pos:column="31"/></name></name> <modifier pos:line="14" pos:column="32">*<pos:position pos:line="14" pos:column="33"/></modifier></type><name pos:line="14" pos:column="33">cctx<pos:position pos:line="14" pos:column="37"/></name> <init pos:line="14" pos:column="38">= <expr><operator pos:line="14" pos:column="40">(<pos:position pos:line="14" pos:column="41"/></operator>struct <name pos:line="14" pos:column="48">smime_command_context<pos:position pos:line="14" pos:column="69"/></name> <operator pos:line="14" pos:column="70">*<pos:position pos:line="14" pos:column="71"/></operator><operator pos:line="14" pos:column="71">)<pos:position pos:line="14" pos:column="72"/></operator> <name pos:line="14" pos:column="73">data<pos:position pos:line="14" pos:column="77"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="78"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type> <name pos:line="15" pos:column="7">optional<pos:position pos:line="15" pos:column="15"/></name> <init pos:line="15" pos:column="16">= <expr><operator pos:line="15" pos:column="18">(<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="19">flags<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">&amp;<pos:position pos:line="15" pos:column="30"/></operator> <name pos:line="15" pos:column="27">MUTT_FORMAT_OPTIONAL<pos:position pos:line="15" pos:column="47"/></name><operator pos:line="15" pos:column="47">)<pos:position pos:line="15" pos:column="48"/></operator></expr></init></decl>;<pos:position pos:line="15" pos:column="49"/></decl_stmt>
  
  <switch pos:line="17" pos:column="3">switch <condition pos:line="17" pos:column="10">(<expr><name pos:line="17" pos:column="11">op<pos:position pos:line="17" pos:column="13"/></name></expr>)<pos:position pos:line="17" pos:column="14"/></condition>
  <block pos:line="18" pos:column="3">{
    <case pos:line="19" pos:column="5">case <expr><literal type="char" pos:line="19" pos:column="10">'C'<pos:position pos:line="19" pos:column="13"/></literal></expr>:<pos:position pos:line="19" pos:column="14"/></case>
    <block pos:line="20" pos:column="5">{
      <if pos:line="21" pos:column="7">if <condition pos:line="21" pos:column="10">(<expr><operator pos:line="21" pos:column="11">!<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="12">optional<pos:position pos:line="21" pos:column="20"/></name></expr>)<pos:position pos:line="21" pos:column="21"/></condition><then pos:line="21" pos:column="21">
      <block pos:line="22" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="23" pos:column="9">char<pos:position pos:line="23" pos:column="13"/></name></type> <name><name pos:line="23" pos:column="14">path<pos:position pos:line="23" pos:column="18"/></name><index pos:line="23" pos:column="18">[<expr><name pos:line="23" pos:column="19">_POSIX_PATH_MAX<pos:position pos:line="23" pos:column="34"/></name></expr>]<pos:position pos:line="23" pos:column="35"/></index></name></decl>;<pos:position pos:line="23" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="24" pos:column="9">char<pos:position pos:line="24" pos:column="13"/></name></type> <name><name pos:line="24" pos:column="14">buf1<pos:position pos:line="24" pos:column="18"/></name><index pos:line="24" pos:column="18">[<expr><name pos:line="24" pos:column="19">LONG_STRING<pos:position pos:line="24" pos:column="30"/></name></expr>]<pos:position pos:line="24" pos:column="31"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="24" pos:column="33">buf2<pos:position pos:line="24" pos:column="37"/></name><index pos:line="24" pos:column="37">[<expr><name pos:line="24" pos:column="38">LONG_STRING<pos:position pos:line="24" pos:column="49"/></name></expr>]<pos:position pos:line="24" pos:column="50"/></index></name></decl>;<pos:position pos:line="24" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="25" pos:column="9">struct<pos:position pos:line="25" pos:column="15"/></name> <name pos:line="25" pos:column="16">stat<pos:position pos:line="25" pos:column="20"/></name></name></type> <name pos:line="25" pos:column="21">sb<pos:position pos:line="25" pos:column="23"/></name></decl>;<pos:position pos:line="25" pos:column="24"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="27" pos:column="9">strfcpy<pos:position pos:line="27" pos:column="16"/></name> <argument_list pos:line="27" pos:column="17">(<argument><expr><name pos:line="27" pos:column="18">path<pos:position pos:line="27" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="24">NONULL<pos:position pos:line="27" pos:column="30"/></name> <argument_list pos:line="27" pos:column="31">(<argument><expr><name pos:line="27" pos:column="32">SmimeCALocation<pos:position pos:line="27" pos:column="47"/></name></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="50">sizeof <argument_list pos:line="27" pos:column="57">(<argument><expr><name pos:line="27" pos:column="58">path<pos:position pos:line="27" pos:column="62"/></name></expr></argument>)<pos:position pos:line="27" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="65"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">mutt_expand_path<pos:position pos:line="28" pos:column="25"/></name> <argument_list pos:line="28" pos:column="26">(<argument><expr><name pos:line="28" pos:column="27">path<pos:position pos:line="28" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="33">sizeof <argument_list pos:line="28" pos:column="40">(<argument><expr><name pos:line="28" pos:column="41">path<pos:position pos:line="28" pos:column="45"/></name></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">mutt_quote_filename<pos:position pos:line="29" pos:column="28"/></name> <argument_list pos:line="29" pos:column="29">(<argument><expr><name pos:line="29" pos:column="30">buf1<pos:position pos:line="29" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="36">sizeof <argument_list pos:line="29" pos:column="43">(<argument><expr><name pos:line="29" pos:column="44">buf1<pos:position pos:line="29" pos:column="48"/></name></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="29" pos:column="51">path<pos:position pos:line="29" pos:column="55"/></name></expr></argument>)<pos:position pos:line="29" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="57"/></expr_stmt>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><call><name pos:line="31" pos:column="13">stat<pos:position pos:line="31" pos:column="17"/></name> <argument_list pos:line="31" pos:column="18">(<argument><expr><name pos:line="31" pos:column="19">path<pos:position pos:line="31" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="25">&amp;<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="26">sb<pos:position pos:line="31" pos:column="28"/></name></expr></argument>)<pos:position pos:line="31" pos:column="29"/></argument_list></call> <operator pos:line="31" pos:column="30">!=<pos:position pos:line="31" pos:column="32"/></operator> <literal type="number" pos:line="31" pos:column="33">0<pos:position pos:line="31" pos:column="34"/></literal> <operator pos:line="31" pos:column="35">||<pos:position pos:line="31" pos:column="37"/></operator> <operator pos:line="31" pos:column="38">!<pos:position pos:line="31" pos:column="39"/></operator><call><name pos:line="31" pos:column="39">S_ISDIR<pos:position pos:line="31" pos:column="46"/></name> <argument_list pos:line="31" pos:column="47">(<argument><expr><name><name pos:line="31" pos:column="48">sb<pos:position pos:line="31" pos:column="50"/></name><operator pos:line="31" pos:column="50">.<pos:position pos:line="31" pos:column="51"/></operator><name pos:line="31" pos:column="51">st_mode<pos:position pos:line="31" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="60"/></condition><then pos:line="31" pos:column="60">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="11">snprintf<pos:position pos:line="32" pos:column="19"/></name> <argument_list pos:line="32" pos:column="20">(<argument><expr><name pos:line="32" pos:column="21">buf2<pos:position pos:line="32" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="27">sizeof <argument_list pos:line="32" pos:column="34">(<argument><expr><name pos:line="32" pos:column="35">buf2<pos:position pos:line="32" pos:column="39"/></name></expr></argument>)<pos:position pos:line="32" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="42">"-CAfile %s"<pos:position pos:line="32" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="56">buf1<pos:position pos:line="32" pos:column="60"/></name></expr></argument>)<pos:position pos:line="32" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="62"/></expr_stmt></block></then>
	<else pos:line="33" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="11">snprintf<pos:position pos:line="34" pos:column="19"/></name> <argument_list pos:line="34" pos:column="20">(<argument><expr><name pos:line="34" pos:column="21">buf2<pos:position pos:line="34" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="27">sizeof <argument_list pos:line="34" pos:column="34">(<argument><expr><name pos:line="34" pos:column="35">buf2<pos:position pos:line="34" pos:column="39"/></name></expr></argument>)<pos:position pos:line="34" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="42">"-CApath %s"<pos:position pos:line="34" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="56">buf1<pos:position pos:line="34" pos:column="60"/></name></expr></argument>)<pos:position pos:line="34" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="62"/></expr_stmt></block></else></if>
	
	<expr_stmt><expr><call><name pos:line="36" pos:column="9">snprintf<pos:position pos:line="36" pos:column="17"/></name> <argument_list pos:line="36" pos:column="18">(<argument><expr><name pos:line="36" pos:column="19">fmt<pos:position pos:line="36" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="24">sizeof <argument_list pos:line="36" pos:column="31">(<argument><expr><name pos:line="36" pos:column="32">fmt<pos:position pos:line="36" pos:column="35"/></name></expr></argument>)<pos:position pos:line="36" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="38">"%%%ss"<pos:position pos:line="36" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="47">prefix<pos:position pos:line="36" pos:column="53"/></name></expr></argument>)<pos:position pos:line="36" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">snprintf<pos:position pos:line="37" pos:column="17"/></name> <argument_list pos:line="37" pos:column="18">(<argument><expr><name pos:line="37" pos:column="19">dest<pos:position pos:line="37" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="25">destlen<pos:position pos:line="37" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="34">fmt<pos:position pos:line="37" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="39">buf2<pos:position pos:line="37" pos:column="43"/></name></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt>
      }<pos:position pos:line="38" pos:column="8"/></block></then>
      <elseif pos:line="39" pos:column="7">else <if pos:line="39" pos:column="12">if <condition pos:line="39" pos:column="15">(<expr><operator pos:line="39" pos:column="16">!<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="17">SmimeCALocation<pos:position pos:line="39" pos:column="32"/></name></expr>)<pos:position pos:line="39" pos:column="33"/></condition><then pos:line="39" pos:column="33">
	<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="9">optional<pos:position pos:line="40" pos:column="17"/></name> <operator pos:line="40" pos:column="18">=<pos:position pos:line="40" pos:column="19"/></operator> <literal type="number" pos:line="40" pos:column="20">0<pos:position pos:line="40" pos:column="21"/></literal></expr>;<pos:position pos:line="40" pos:column="22"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="41" pos:column="7">break;<pos:position pos:line="41" pos:column="13"/></break>
    }<pos:position pos:line="42" pos:column="6"/></block>
    
    <case pos:line="44" pos:column="5">case <expr><literal type="char" pos:line="44" pos:column="10">'c'<pos:position pos:line="44" pos:column="13"/></literal></expr>:<pos:position pos:line="44" pos:column="14"/></case>
    <block pos:line="45" pos:column="5">{           <comment type="block" pos:line="45" pos:column="17">/* certificate (list) */</comment>
      <if pos:line="46" pos:column="7">if <condition pos:line="46" pos:column="10">(<expr><operator pos:line="46" pos:column="11">!<pos:position pos:line="46" pos:column="12"/></operator><name pos:line="46" pos:column="12">optional<pos:position pos:line="46" pos:column="20"/></name></expr>)<pos:position pos:line="46" pos:column="21"/></condition><then pos:line="46" pos:column="21"> <block pos:line="46" pos:column="22">{
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">snprintf<pos:position pos:line="47" pos:column="17"/></name> <argument_list pos:line="47" pos:column="18">(<argument><expr><name pos:line="47" pos:column="19">fmt<pos:position pos:line="47" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="24">sizeof <argument_list pos:line="47" pos:column="31">(<argument><expr><name pos:line="47" pos:column="32">fmt<pos:position pos:line="47" pos:column="35"/></name></expr></argument>)<pos:position pos:line="47" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="38">"%%%ss"<pos:position pos:line="47" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="47">prefix<pos:position pos:line="47" pos:column="53"/></name></expr></argument>)<pos:position pos:line="47" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">snprintf<pos:position pos:line="48" pos:column="17"/></name> <argument_list pos:line="48" pos:column="18">(<argument><expr><name pos:line="48" pos:column="19">dest<pos:position pos:line="48" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="25">destlen<pos:position pos:line="48" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="34">fmt<pos:position pos:line="48" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="39">NONULL<pos:position pos:line="48" pos:column="45"/></name><argument_list pos:line="48" pos:column="45">(<argument><expr><name><name pos:line="48" pos:column="46">cctx<pos:position pos:line="48" pos:column="50"/></name><operator pos:line="48" pos:column="50">-&gt;<pos:position pos:line="48" pos:column="55"/></operator><name pos:line="48" pos:column="52">certificates<pos:position pos:line="48" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="67"/></expr_stmt>
      }<pos:position pos:line="49" pos:column="8"/></block></then>
      <elseif pos:line="50" pos:column="7">else <if pos:line="50" pos:column="12">if <condition pos:line="50" pos:column="15">(<expr><operator pos:line="50" pos:column="16">!<pos:position pos:line="50" pos:column="17"/></operator><name><name pos:line="50" pos:column="17">cctx<pos:position pos:line="50" pos:column="21"/></name><operator pos:line="50" pos:column="21">-&gt;<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="23">certificates<pos:position pos:line="50" pos:column="35"/></name></name></expr>)<pos:position pos:line="50" pos:column="36"/></condition><then pos:line="50" pos:column="36">
	<block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="9">optional<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">=<pos:position pos:line="51" pos:column="19"/></operator> <literal type="number" pos:line="51" pos:column="20">0<pos:position pos:line="51" pos:column="21"/></literal></expr>;<pos:position pos:line="51" pos:column="22"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="52" pos:column="7">break;<pos:position pos:line="52" pos:column="13"/></break>
    }<pos:position pos:line="53" pos:column="6"/></block>
    
    <case pos:line="55" pos:column="5">case <expr><literal type="char" pos:line="55" pos:column="10">'i'<pos:position pos:line="55" pos:column="13"/></literal></expr>:<pos:position pos:line="55" pos:column="14"/></case>
    <block pos:line="56" pos:column="5">{           <comment type="block" pos:line="56" pos:column="17">/* intermediate certificates  */</comment>
      <if pos:line="57" pos:column="7">if <condition pos:line="57" pos:column="10">(<expr><operator pos:line="57" pos:column="11">!<pos:position pos:line="57" pos:column="12"/></operator><name pos:line="57" pos:column="12">optional<pos:position pos:line="57" pos:column="20"/></name></expr>)<pos:position pos:line="57" pos:column="21"/></condition><then pos:line="57" pos:column="21"> <block pos:line="57" pos:column="22">{
	<expr_stmt><expr><call><name pos:line="58" pos:column="9">snprintf<pos:position pos:line="58" pos:column="17"/></name> <argument_list pos:line="58" pos:column="18">(<argument><expr><name pos:line="58" pos:column="19">fmt<pos:position pos:line="58" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="58" pos:column="24">sizeof <argument_list pos:line="58" pos:column="31">(<argument><expr><name pos:line="58" pos:column="32">fmt<pos:position pos:line="58" pos:column="35"/></name></expr></argument>)<pos:position pos:line="58" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="38">"%%%ss"<pos:position pos:line="58" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="47">prefix<pos:position pos:line="58" pos:column="53"/></name></expr></argument>)<pos:position pos:line="58" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="59" pos:column="9">snprintf<pos:position pos:line="59" pos:column="17"/></name> <argument_list pos:line="59" pos:column="18">(<argument><expr><name pos:line="59" pos:column="19">dest<pos:position pos:line="59" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="25">destlen<pos:position pos:line="59" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="34">fmt<pos:position pos:line="59" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="39">NONULL<pos:position pos:line="59" pos:column="45"/></name><argument_list pos:line="59" pos:column="45">(<argument><expr><name><name pos:line="59" pos:column="46">cctx<pos:position pos:line="59" pos:column="50"/></name><operator pos:line="59" pos:column="50">-&gt;<pos:position pos:line="59" pos:column="55"/></operator><name pos:line="59" pos:column="52">intermediates<pos:position pos:line="59" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="68"/></expr_stmt>
      }<pos:position pos:line="60" pos:column="8"/></block></then>
      <elseif pos:line="61" pos:column="7">else <if pos:line="61" pos:column="12">if <condition pos:line="61" pos:column="15">(<expr><operator pos:line="61" pos:column="16">!<pos:position pos:line="61" pos:column="17"/></operator><name><name pos:line="61" pos:column="17">cctx<pos:position pos:line="61" pos:column="21"/></name><operator pos:line="61" pos:column="21">-&gt;<pos:position pos:line="61" pos:column="26"/></operator><name pos:line="61" pos:column="23">intermediates<pos:position pos:line="61" pos:column="36"/></name></name></expr>)<pos:position pos:line="61" pos:column="37"/></condition><then pos:line="61" pos:column="37">
	<block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="9">optional<pos:position pos:line="62" pos:column="17"/></name> <operator pos:line="62" pos:column="18">=<pos:position pos:line="62" pos:column="19"/></operator> <literal type="number" pos:line="62" pos:column="20">0<pos:position pos:line="62" pos:column="21"/></literal></expr>;<pos:position pos:line="62" pos:column="22"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="63" pos:column="7">break;<pos:position pos:line="63" pos:column="13"/></break>
    }<pos:position pos:line="64" pos:column="6"/></block>
    
    <case pos:line="66" pos:column="5">case <expr><literal type="char" pos:line="66" pos:column="10">'s'<pos:position pos:line="66" pos:column="13"/></literal></expr>:<pos:position pos:line="66" pos:column="14"/></case>
    <block pos:line="67" pos:column="5">{           <comment type="block" pos:line="67" pos:column="17">/* detached signature */</comment>
      <if pos:line="68" pos:column="7">if <condition pos:line="68" pos:column="10">(<expr><operator pos:line="68" pos:column="11">!<pos:position pos:line="68" pos:column="12"/></operator><name pos:line="68" pos:column="12">optional<pos:position pos:line="68" pos:column="20"/></name></expr>)<pos:position pos:line="68" pos:column="21"/></condition><then pos:line="68" pos:column="21">
      <block pos:line="69" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="70" pos:column="9">snprintf<pos:position pos:line="70" pos:column="17"/></name> <argument_list pos:line="70" pos:column="18">(<argument><expr><name pos:line="70" pos:column="19">fmt<pos:position pos:line="70" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="70" pos:column="24">sizeof <argument_list pos:line="70" pos:column="31">(<argument><expr><name pos:line="70" pos:column="32">fmt<pos:position pos:line="70" pos:column="35"/></name></expr></argument>)<pos:position pos:line="70" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="38">"%%%ss"<pos:position pos:line="70" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="47">prefix<pos:position pos:line="70" pos:column="53"/></name></expr></argument>)<pos:position pos:line="70" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="71" pos:column="9">snprintf<pos:position pos:line="71" pos:column="17"/></name> <argument_list pos:line="71" pos:column="18">(<argument><expr><name pos:line="71" pos:column="19">dest<pos:position pos:line="71" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="25">destlen<pos:position pos:line="71" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="34">fmt<pos:position pos:line="71" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="71" pos:column="39">NONULL<pos:position pos:line="71" pos:column="45"/></name> <argument_list pos:line="71" pos:column="46">(<argument><expr><name><name pos:line="71" pos:column="47">cctx<pos:position pos:line="71" pos:column="51"/></name><operator pos:line="71" pos:column="51">-&gt;<pos:position pos:line="71" pos:column="56"/></operator><name pos:line="71" pos:column="53">sig_fname<pos:position pos:line="71" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="71" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="65"/></expr_stmt>
      }<pos:position pos:line="72" pos:column="8"/></block></then>
      <elseif pos:line="73" pos:column="7">else <if pos:line="73" pos:column="12">if <condition pos:line="73" pos:column="15">(<expr><operator pos:line="73" pos:column="16">!<pos:position pos:line="73" pos:column="17"/></operator><name><name pos:line="73" pos:column="17">cctx<pos:position pos:line="73" pos:column="21"/></name><operator pos:line="73" pos:column="21">-&gt;<pos:position pos:line="73" pos:column="26"/></operator><name pos:line="73" pos:column="23">sig_fname<pos:position pos:line="73" pos:column="32"/></name></name></expr>)<pos:position pos:line="73" pos:column="33"/></condition><then pos:line="73" pos:column="33">
	<block type="pseudo"><expr_stmt><expr><name pos:line="74" pos:column="9">optional<pos:position pos:line="74" pos:column="17"/></name> <operator pos:line="74" pos:column="18">=<pos:position pos:line="74" pos:column="19"/></operator> <literal type="number" pos:line="74" pos:column="20">0<pos:position pos:line="74" pos:column="21"/></literal></expr>;<pos:position pos:line="74" pos:column="22"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="75" pos:column="7">break;<pos:position pos:line="75" pos:column="13"/></break>
    }<pos:position pos:line="76" pos:column="6"/></block>
    
    <case pos:line="78" pos:column="5">case <expr><literal type="char" pos:line="78" pos:column="10">'k'<pos:position pos:line="78" pos:column="13"/></literal></expr>:<pos:position pos:line="78" pos:column="14"/></case>
    <block pos:line="79" pos:column="5">{           <comment type="block" pos:line="79" pos:column="17">/* private key */</comment>
      <if pos:line="80" pos:column="7">if <condition pos:line="80" pos:column="10">(<expr><operator pos:line="80" pos:column="11">!<pos:position pos:line="80" pos:column="12"/></operator><name pos:line="80" pos:column="12">optional<pos:position pos:line="80" pos:column="20"/></name></expr>)<pos:position pos:line="80" pos:column="21"/></condition><then pos:line="80" pos:column="21">
      <block pos:line="81" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="82" pos:column="9">snprintf<pos:position pos:line="82" pos:column="17"/></name> <argument_list pos:line="82" pos:column="18">(<argument><expr><name pos:line="82" pos:column="19">fmt<pos:position pos:line="82" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="82" pos:column="24">sizeof <argument_list pos:line="82" pos:column="31">(<argument><expr><name pos:line="82" pos:column="32">fmt<pos:position pos:line="82" pos:column="35"/></name></expr></argument>)<pos:position pos:line="82" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="38">"%%%ss"<pos:position pos:line="82" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="82" pos:column="47">prefix<pos:position pos:line="82" pos:column="53"/></name></expr></argument>)<pos:position pos:line="82" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="83" pos:column="9">snprintf<pos:position pos:line="83" pos:column="17"/></name> <argument_list pos:line="83" pos:column="18">(<argument><expr><name pos:line="83" pos:column="19">dest<pos:position pos:line="83" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="25">destlen<pos:position pos:line="83" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="34">fmt<pos:position pos:line="83" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="83" pos:column="39">NONULL<pos:position pos:line="83" pos:column="45"/></name> <argument_list pos:line="83" pos:column="46">(<argument><expr><name><name pos:line="83" pos:column="47">cctx<pos:position pos:line="83" pos:column="51"/></name><operator pos:line="83" pos:column="51">-&gt;<pos:position pos:line="83" pos:column="56"/></operator><name pos:line="83" pos:column="53">key<pos:position pos:line="83" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="83" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="59"/></expr_stmt>
      }<pos:position pos:line="84" pos:column="8"/></block></then>
      <elseif pos:line="85" pos:column="7">else <if pos:line="85" pos:column="12">if <condition pos:line="85" pos:column="15">(<expr><operator pos:line="85" pos:column="16">!<pos:position pos:line="85" pos:column="17"/></operator><name><name pos:line="85" pos:column="17">cctx<pos:position pos:line="85" pos:column="21"/></name><operator pos:line="85" pos:column="21">-&gt;<pos:position pos:line="85" pos:column="26"/></operator><name pos:line="85" pos:column="23">key<pos:position pos:line="85" pos:column="26"/></name></name></expr>)<pos:position pos:line="85" pos:column="27"/></condition><then pos:line="85" pos:column="27">
	<block type="pseudo"><expr_stmt><expr><name pos:line="86" pos:column="9">optional<pos:position pos:line="86" pos:column="17"/></name> <operator pos:line="86" pos:column="18">=<pos:position pos:line="86" pos:column="19"/></operator> <literal type="number" pos:line="86" pos:column="20">0<pos:position pos:line="86" pos:column="21"/></literal></expr>;<pos:position pos:line="86" pos:column="22"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="87" pos:column="7">break;<pos:position pos:line="87" pos:column="13"/></break>
    }<pos:position pos:line="88" pos:column="6"/></block>
    
    <case pos:line="90" pos:column="5">case <expr><literal type="char" pos:line="90" pos:column="10">'a'<pos:position pos:line="90" pos:column="13"/></literal></expr>:<pos:position pos:line="90" pos:column="14"/></case>
    <block pos:line="91" pos:column="5">{           <comment type="block" pos:line="91" pos:column="17">/* algorithm for encryption */</comment>
      <if pos:line="92" pos:column="7">if <condition pos:line="92" pos:column="10">(<expr><operator pos:line="92" pos:column="11">!<pos:position pos:line="92" pos:column="12"/></operator><name pos:line="92" pos:column="12">optional<pos:position pos:line="92" pos:column="20"/></name></expr>)<pos:position pos:line="92" pos:column="21"/></condition><then pos:line="92" pos:column="21"> <block pos:line="92" pos:column="22">{
	<expr_stmt><expr><call><name pos:line="93" pos:column="9">snprintf<pos:position pos:line="93" pos:column="17"/></name> <argument_list pos:line="93" pos:column="18">(<argument><expr><name pos:line="93" pos:column="19">fmt<pos:position pos:line="93" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="93" pos:column="24">sizeof <argument_list pos:line="93" pos:column="31">(<argument><expr><name pos:line="93" pos:column="32">fmt<pos:position pos:line="93" pos:column="35"/></name></expr></argument>)<pos:position pos:line="93" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="38">"%%%ss"<pos:position pos:line="93" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="93" pos:column="47">prefix<pos:position pos:line="93" pos:column="53"/></name></expr></argument>)<pos:position pos:line="93" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="94" pos:column="9">snprintf<pos:position pos:line="94" pos:column="17"/></name> <argument_list pos:line="94" pos:column="18">(<argument><expr><name pos:line="94" pos:column="19">dest<pos:position pos:line="94" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="25">destlen<pos:position pos:line="94" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="34">fmt<pos:position pos:line="94" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="94" pos:column="39">NONULL<pos:position pos:line="94" pos:column="45"/></name> <argument_list pos:line="94" pos:column="46">(<argument><expr><name><name pos:line="94" pos:column="47">cctx<pos:position pos:line="94" pos:column="51"/></name><operator pos:line="94" pos:column="51">-&gt;<pos:position pos:line="94" pos:column="56"/></operator><name pos:line="94" pos:column="53">cryptalg<pos:position pos:line="94" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="94" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="64"/></expr_stmt>
      }<pos:position pos:line="95" pos:column="8"/></block></then>
      <elseif pos:line="96" pos:column="7">else <if pos:line="96" pos:column="12">if <condition pos:line="96" pos:column="15">(<expr><operator pos:line="96" pos:column="16">!<pos:position pos:line="96" pos:column="17"/></operator><name><name pos:line="96" pos:column="17">cctx<pos:position pos:line="96" pos:column="21"/></name><operator pos:line="96" pos:column="21">-&gt;<pos:position pos:line="96" pos:column="26"/></operator><name pos:line="96" pos:column="23">key<pos:position pos:line="96" pos:column="26"/></name></name></expr>)<pos:position pos:line="96" pos:column="27"/></condition><then pos:line="96" pos:column="27">
	<block type="pseudo"><expr_stmt><expr><name pos:line="97" pos:column="9">optional<pos:position pos:line="97" pos:column="17"/></name> <operator pos:line="97" pos:column="18">=<pos:position pos:line="97" pos:column="19"/></operator> <literal type="number" pos:line="97" pos:column="20">0<pos:position pos:line="97" pos:column="21"/></literal></expr>;<pos:position pos:line="97" pos:column="22"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="98" pos:column="7">break;<pos:position pos:line="98" pos:column="13"/></break>
    }<pos:position pos:line="99" pos:column="6"/></block>
    
    <case pos:line="101" pos:column="5">case <expr><literal type="char" pos:line="101" pos:column="10">'f'<pos:position pos:line="101" pos:column="13"/></literal></expr>:<pos:position pos:line="101" pos:column="14"/></case>
    <block pos:line="102" pos:column="5">{           <comment type="block" pos:line="102" pos:column="17">/* file to process */</comment>
      <if pos:line="103" pos:column="7">if <condition pos:line="103" pos:column="10">(<expr><operator pos:line="103" pos:column="11">!<pos:position pos:line="103" pos:column="12"/></operator><name pos:line="103" pos:column="12">optional<pos:position pos:line="103" pos:column="20"/></name></expr>)<pos:position pos:line="103" pos:column="21"/></condition><then pos:line="103" pos:column="21">
      <block pos:line="104" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="105" pos:column="9">snprintf<pos:position pos:line="105" pos:column="17"/></name> <argument_list pos:line="105" pos:column="18">(<argument><expr><name pos:line="105" pos:column="19">fmt<pos:position pos:line="105" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="105" pos:column="24">sizeof <argument_list pos:line="105" pos:column="31">(<argument><expr><name pos:line="105" pos:column="32">fmt<pos:position pos:line="105" pos:column="35"/></name></expr></argument>)<pos:position pos:line="105" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="38">"%%%ss"<pos:position pos:line="105" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="105" pos:column="47">prefix<pos:position pos:line="105" pos:column="53"/></name></expr></argument>)<pos:position pos:line="105" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="106" pos:column="9">snprintf<pos:position pos:line="106" pos:column="17"/></name> <argument_list pos:line="106" pos:column="18">(<argument><expr><name pos:line="106" pos:column="19">dest<pos:position pos:line="106" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="25">destlen<pos:position pos:line="106" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="34">fmt<pos:position pos:line="106" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="106" pos:column="39">NONULL<pos:position pos:line="106" pos:column="45"/></name> <argument_list pos:line="106" pos:column="46">(<argument><expr><name><name pos:line="106" pos:column="47">cctx<pos:position pos:line="106" pos:column="51"/></name><operator pos:line="106" pos:column="51">-&gt;<pos:position pos:line="106" pos:column="56"/></operator><name pos:line="106" pos:column="53">fname<pos:position pos:line="106" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="106" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="61"/></expr_stmt>
      }<pos:position pos:line="107" pos:column="8"/></block></then>
      <elseif pos:line="108" pos:column="7">else <if pos:line="108" pos:column="12">if <condition pos:line="108" pos:column="15">(<expr><operator pos:line="108" pos:column="16">!<pos:position pos:line="108" pos:column="17"/></operator><name><name pos:line="108" pos:column="17">cctx<pos:position pos:line="108" pos:column="21"/></name><operator pos:line="108" pos:column="21">-&gt;<pos:position pos:line="108" pos:column="26"/></operator><name pos:line="108" pos:column="23">fname<pos:position pos:line="108" pos:column="28"/></name></name></expr>)<pos:position pos:line="108" pos:column="29"/></condition><then pos:line="108" pos:column="29">
	<block type="pseudo"><expr_stmt><expr><name pos:line="109" pos:column="9">optional<pos:position pos:line="109" pos:column="17"/></name> <operator pos:line="109" pos:column="18">=<pos:position pos:line="109" pos:column="19"/></operator> <literal type="number" pos:line="109" pos:column="20">0<pos:position pos:line="109" pos:column="21"/></literal></expr>;<pos:position pos:line="109" pos:column="22"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="110" pos:column="7">break;<pos:position pos:line="110" pos:column="13"/></break>
    }<pos:position pos:line="111" pos:column="6"/></block>
    
    <case pos:line="113" pos:column="5">case <expr><literal type="char" pos:line="113" pos:column="10">'d'<pos:position pos:line="113" pos:column="13"/></literal></expr>:<pos:position pos:line="113" pos:column="14"/></case>
    <block pos:line="114" pos:column="5">{           <comment type="block" pos:line="114" pos:column="17">/* algorithm for the signature message digest */</comment>
      <if pos:line="115" pos:column="7">if <condition pos:line="115" pos:column="10">(<expr><operator pos:line="115" pos:column="11">!<pos:position pos:line="115" pos:column="12"/></operator><name pos:line="115" pos:column="12">optional<pos:position pos:line="115" pos:column="20"/></name></expr>)<pos:position pos:line="115" pos:column="21"/></condition><then pos:line="115" pos:column="21"> <block pos:line="115" pos:column="22">{
	<expr_stmt><expr><call><name pos:line="116" pos:column="9">snprintf<pos:position pos:line="116" pos:column="17"/></name> <argument_list pos:line="116" pos:column="18">(<argument><expr><name pos:line="116" pos:column="19">fmt<pos:position pos:line="116" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="116" pos:column="24">sizeof <argument_list pos:line="116" pos:column="31">(<argument><expr><name pos:line="116" pos:column="32">fmt<pos:position pos:line="116" pos:column="35"/></name></expr></argument>)<pos:position pos:line="116" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="38">"%%%ss"<pos:position pos:line="116" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="116" pos:column="47">prefix<pos:position pos:line="116" pos:column="53"/></name></expr></argument>)<pos:position pos:line="116" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="117" pos:column="9">snprintf<pos:position pos:line="117" pos:column="17"/></name> <argument_list pos:line="117" pos:column="18">(<argument><expr><name pos:line="117" pos:column="19">dest<pos:position pos:line="117" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="25">destlen<pos:position pos:line="117" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="34">fmt<pos:position pos:line="117" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="117" pos:column="39">NONULL<pos:position pos:line="117" pos:column="45"/></name> <argument_list pos:line="117" pos:column="46">(<argument><expr><name><name pos:line="117" pos:column="47">cctx<pos:position pos:line="117" pos:column="51"/></name><operator pos:line="117" pos:column="51">-&gt;<pos:position pos:line="117" pos:column="56"/></operator><name pos:line="117" pos:column="53">digestalg<pos:position pos:line="117" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="117" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="65"/></expr_stmt>
      }<pos:position pos:line="118" pos:column="8"/></block></then>
      <elseif pos:line="119" pos:column="7">else <if pos:line="119" pos:column="12">if <condition pos:line="119" pos:column="15">(<expr><operator pos:line="119" pos:column="16">!<pos:position pos:line="119" pos:column="17"/></operator><name><name pos:line="119" pos:column="17">cctx<pos:position pos:line="119" pos:column="21"/></name><operator pos:line="119" pos:column="21">-&gt;<pos:position pos:line="119" pos:column="26"/></operator><name pos:line="119" pos:column="23">key<pos:position pos:line="119" pos:column="26"/></name></name></expr>)<pos:position pos:line="119" pos:column="27"/></condition><then pos:line="119" pos:column="27">
	<block type="pseudo"><expr_stmt><expr><name pos:line="120" pos:column="9">optional<pos:position pos:line="120" pos:column="17"/></name> <operator pos:line="120" pos:column="18">=<pos:position pos:line="120" pos:column="19"/></operator> <literal type="number" pos:line="120" pos:column="20">0<pos:position pos:line="120" pos:column="21"/></literal></expr>;<pos:position pos:line="120" pos:column="22"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="121" pos:column="7">break;<pos:position pos:line="121" pos:column="13"/></break>
    }<pos:position pos:line="122" pos:column="6"/></block>

    <default pos:line="124" pos:column="5">default:<pos:position pos:line="124" pos:column="13"/></default>
      <expr_stmt><expr><operator pos:line="125" pos:column="7">*<pos:position pos:line="125" pos:column="8"/></operator><name pos:line="125" pos:column="8">dest<pos:position pos:line="125" pos:column="12"/></name> <operator pos:line="125" pos:column="13">=<pos:position pos:line="125" pos:column="14"/></operator> <literal type="char" pos:line="125" pos:column="15">'\0'<pos:position pos:line="125" pos:column="19"/></literal></expr>;<pos:position pos:line="125" pos:column="20"/></expr_stmt>
      <break pos:line="126" pos:column="7">break;<pos:position pos:line="126" pos:column="13"/></break>
  }<pos:position pos:line="127" pos:column="4"/></block></switch>

  <if pos:line="129" pos:column="3">if <condition pos:line="129" pos:column="6">(<expr><name pos:line="129" pos:column="7">optional<pos:position pos:line="129" pos:column="15"/></name></expr>)<pos:position pos:line="129" pos:column="16"/></condition><then pos:line="129" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="130" pos:column="5">mutt_FormatString<pos:position pos:line="130" pos:column="22"/></name> <argument_list pos:line="130" pos:column="23">(<argument><expr><name pos:line="130" pos:column="24">dest<pos:position pos:line="130" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="30">destlen<pos:position pos:line="130" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="39">col<pos:position pos:line="130" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="44">cols<pos:position pos:line="130" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="50">ifstring<pos:position pos:line="130" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="60">_mutt_fmt_smime_command<pos:position pos:line="130" pos:column="83"/></name></expr></argument>,
		       <argument><expr><name pos:line="131" pos:column="24">data<pos:position pos:line="131" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="131" pos:column="30">0<pos:position pos:line="131" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="33"/></expr_stmt></block></then>
  <elseif pos:line="132" pos:column="3">else <if pos:line="132" pos:column="8">if <condition pos:line="132" pos:column="11">(<expr><name pos:line="132" pos:column="12">flags<pos:position pos:line="132" pos:column="17"/></name> <operator pos:line="132" pos:column="18">&amp;<pos:position pos:line="132" pos:column="23"/></operator> <name pos:line="132" pos:column="20">MUTT_FORMAT_OPTIONAL<pos:position pos:line="132" pos:column="40"/></name></expr>)<pos:position pos:line="132" pos:column="41"/></condition><then pos:line="132" pos:column="41">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="133" pos:column="5">mutt_FormatString<pos:position pos:line="133" pos:column="22"/></name> <argument_list pos:line="133" pos:column="23">(<argument><expr><name pos:line="133" pos:column="24">dest<pos:position pos:line="133" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="30">destlen<pos:position pos:line="133" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="39">col<pos:position pos:line="133" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="44">cols<pos:position pos:line="133" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="50">elsestring<pos:position pos:line="133" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="62">_mutt_fmt_smime_command<pos:position pos:line="133" pos:column="85"/></name></expr></argument>,
		       <argument><expr><name pos:line="134" pos:column="24">data<pos:position pos:line="134" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="134" pos:column="30">0<pos:position pos:line="134" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="33"/></expr_stmt></block></then></if></elseif></if>

  <return pos:line="136" pos:column="3">return <expr><operator pos:line="136" pos:column="10">(<pos:position pos:line="136" pos:column="11"/></operator><name pos:line="136" pos:column="11">src<pos:position pos:line="136" pos:column="14"/></name><operator pos:line="136" pos:column="14">)<pos:position pos:line="136" pos:column="15"/></operator></expr>;<pos:position pos:line="136" pos:column="16"/></return>
}<pos:position pos:line="137" pos:column="2"/></block></function></unit>

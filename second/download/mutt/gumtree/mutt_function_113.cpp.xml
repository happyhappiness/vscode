<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_function_113.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">pgp_encrypted_handler<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">BODY<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">a<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">STATE<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">s<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">tempfile<pos:position pos:line="3" pos:column="16"/></name><index pos:line="3" pos:column="16">[<expr><name pos:line="3" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="3" pos:column="32"/></name></expr>]<pos:position pos:line="3" pos:column="33"/></index></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">FILE<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">fpout<pos:position pos:line="4" pos:column="14"/></name></decl>, <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="17">fpin<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">BODY<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">tattach<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">BODY<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">p<pos:position pos:line="6" pos:column="10"/></name> <init pos:line="6" pos:column="11">= <expr><name pos:line="6" pos:column="13">a<pos:position pos:line="6" pos:column="14"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">rc<pos:position pos:line="7" pos:column="9"/></name> <init pos:line="7" pos:column="10">= <expr><literal type="number" pos:line="7" pos:column="12">0<pos:position pos:line="7" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>
  
  <expr_stmt><expr><name pos:line="9" pos:column="3">a<pos:position pos:line="9" pos:column="4"/></name> <operator pos:line="9" pos:column="5">=<pos:position pos:line="9" pos:column="6"/></operator> <name><name pos:line="9" pos:column="7">a<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">-&gt;<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="10">parts<pos:position pos:line="9" pos:column="15"/></name></name></expr>;<pos:position pos:line="9" pos:column="16"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">!<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">a<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">||<pos:position pos:line="10" pos:column="12"/></operator> <name><name pos:line="10" pos:column="13">a<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">-&gt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">type<pos:position pos:line="10" pos:column="20"/></name></name> <operator pos:line="10" pos:column="21">!=<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="24">TYPEAPPLICATION<pos:position pos:line="10" pos:column="39"/></name> <operator pos:line="10" pos:column="40">||<pos:position pos:line="10" pos:column="42"/></operator> <operator pos:line="10" pos:column="43">!<pos:position pos:line="10" pos:column="44"/></operator><name><name pos:line="10" pos:column="44">a<pos:position pos:line="10" pos:column="45"/></name><operator pos:line="10" pos:column="45">-&gt;<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="47">subtype<pos:position pos:line="10" pos:column="54"/></name></name> <operator pos:line="10" pos:column="55">||<pos:position pos:line="10" pos:column="57"/></operator> 
      <call><name pos:line="11" pos:column="7">ascii_strcasecmp<pos:position pos:line="11" pos:column="23"/></name> <argument_list pos:line="11" pos:column="24">(<argument><expr><literal type="string" pos:line="11" pos:column="25">"pgp-encrypted"<pos:position pos:line="11" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="42">a<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">-&gt;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="45">subtype<pos:position pos:line="11" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call> <operator pos:line="11" pos:column="54">!=<pos:position pos:line="11" pos:column="56"/></operator> <literal type="number" pos:line="11" pos:column="57">0<pos:position pos:line="11" pos:column="58"/></literal> <operator pos:line="11" pos:column="59">||<pos:position pos:line="11" pos:column="61"/></operator>
      <operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><name><name pos:line="12" pos:column="8">a<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">-&gt;<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="11">next<pos:position pos:line="12" pos:column="15"/></name></name> <operator pos:line="12" pos:column="16">||<pos:position pos:line="12" pos:column="18"/></operator> <name><name pos:line="12" pos:column="19">a<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">-&gt;<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="22">next<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">-&gt;<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="28">type<pos:position pos:line="12" pos:column="32"/></name></name> <operator pos:line="12" pos:column="33">!=<pos:position pos:line="12" pos:column="35"/></operator> <name pos:line="12" pos:column="36">TYPEAPPLICATION<pos:position pos:line="12" pos:column="51"/></name> <operator pos:line="12" pos:column="52">||<pos:position pos:line="12" pos:column="54"/></operator> <operator pos:line="12" pos:column="55">!<pos:position pos:line="12" pos:column="56"/></operator><name><name pos:line="12" pos:column="56">a<pos:position pos:line="12" pos:column="57"/></name><operator pos:line="12" pos:column="57">-&gt;<pos:position pos:line="12" pos:column="62"/></operator><name pos:line="12" pos:column="59">next<pos:position pos:line="12" pos:column="63"/></name><operator pos:line="12" pos:column="63">-&gt;<pos:position pos:line="12" pos:column="68"/></operator><name pos:line="12" pos:column="65">subtype<pos:position pos:line="12" pos:column="72"/></name></name> <operator pos:line="12" pos:column="73">||<pos:position pos:line="12" pos:column="75"/></operator>
      <call><name pos:line="13" pos:column="7">ascii_strcasecmp<pos:position pos:line="13" pos:column="23"/></name> <argument_list pos:line="13" pos:column="24">(<argument><expr><literal type="string" pos:line="13" pos:column="25">"octet-stream"<pos:position pos:line="13" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="41">a<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">-&gt;<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="44">next<pos:position pos:line="13" pos:column="48"/></name><operator pos:line="13" pos:column="48">-&gt;<pos:position pos:line="13" pos:column="53"/></operator><name pos:line="13" pos:column="50">subtype<pos:position pos:line="13" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call> <operator pos:line="13" pos:column="59">!=<pos:position pos:line="13" pos:column="61"/></operator> <literal type="number" pos:line="13" pos:column="62">0<pos:position pos:line="13" pos:column="63"/></literal></expr>)<pos:position pos:line="13" pos:column="64"/></condition><then pos:line="13" pos:column="64">
  <block pos:line="14" pos:column="3">{
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">s<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">flags<pos:position pos:line="15" pos:column="17"/></name></name> <operator pos:line="15" pos:column="18">&amp;<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="20">M_DISPLAY<pos:position pos:line="15" pos:column="29"/></name></expr>)<pos:position pos:line="15" pos:column="30"/></condition><then pos:line="15" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="7">state_attach_puts<pos:position pos:line="16" pos:column="24"/></name> <argument_list pos:line="16" pos:column="25">(<argument><expr><call><name pos:line="16" pos:column="26">_<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><literal type="string" pos:line="16" pos:column="28">"[-- Error: malformed PGP/MIME message! --]\n\n"<pos:position pos:line="16" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="16" pos:column="79">s<pos:position pos:line="16" pos:column="80"/></name></expr></argument>)<pos:position pos:line="16" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="82"/></expr_stmt></block></then></if>
    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">-<pos:position pos:line="17" pos:column="13"/></operator><literal type="number" pos:line="17" pos:column="13">1<pos:position pos:line="17" pos:column="14"/></literal></expr>;<pos:position pos:line="17" pos:column="15"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="20" pos:column="3">/*
   * Move forward to the application/pgp-encrypted body.
   */</comment>
  <expr_stmt><expr><name pos:line="23" pos:column="3">a<pos:position pos:line="23" pos:column="4"/></name> <operator pos:line="23" pos:column="5">=<pos:position pos:line="23" pos:column="6"/></operator> <name><name pos:line="23" pos:column="7">a<pos:position pos:line="23" pos:column="8"/></name><operator pos:line="23" pos:column="8">-&gt;<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="10">next<pos:position pos:line="23" pos:column="14"/></name></name></expr>;<pos:position pos:line="23" pos:column="15"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">mutt_mktemp<pos:position pos:line="25" pos:column="14"/></name> <argument_list pos:line="25" pos:column="15">(<argument><expr><name pos:line="25" pos:column="16">tempfile<pos:position pos:line="25" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="26">sizeof <argument_list pos:line="25" pos:column="33">(<argument><expr><name pos:line="25" pos:column="34">tempfile<pos:position pos:line="25" pos:column="42"/></name></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><operator pos:line="26" pos:column="7">(<pos:position pos:line="26" pos:column="8"/></operator><name pos:line="26" pos:column="8">fpout<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <call><name pos:line="26" pos:column="16">safe_fopen<pos:position pos:line="26" pos:column="26"/></name> <argument_list pos:line="26" pos:column="27">(<argument><expr><name pos:line="26" pos:column="28">tempfile<pos:position pos:line="26" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="38">"w+"<pos:position pos:line="26" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="43"/></argument_list></call><operator pos:line="26" pos:column="43">)<pos:position pos:line="26" pos:column="44"/></operator> <operator pos:line="26" pos:column="45">==<pos:position pos:line="26" pos:column="47"/></operator> <name pos:line="26" pos:column="48">NULL<pos:position pos:line="26" pos:column="52"/></name></expr>)<pos:position pos:line="26" pos:column="53"/></condition><then pos:line="26" pos:column="53">
  <block pos:line="27" pos:column="3">{
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name><name pos:line="28" pos:column="9">s<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">-&gt;<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="12">flags<pos:position pos:line="28" pos:column="17"/></name></name> <operator pos:line="28" pos:column="18">&amp;<pos:position pos:line="28" pos:column="23"/></operator> <name pos:line="28" pos:column="20">M_DISPLAY<pos:position pos:line="28" pos:column="29"/></name></expr>)<pos:position pos:line="28" pos:column="30"/></condition><then pos:line="28" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="7">state_attach_puts<pos:position pos:line="29" pos:column="24"/></name> <argument_list pos:line="29" pos:column="25">(<argument><expr><call><name pos:line="29" pos:column="26">_<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">(<argument><expr><literal type="string" pos:line="29" pos:column="28">"[-- Error: could not create temporary file! --]\n"<pos:position pos:line="29" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="80"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="29" pos:column="82">s<pos:position pos:line="29" pos:column="83"/></name></expr></argument>)<pos:position pos:line="29" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="85"/></expr_stmt></block></then></if>
    <return pos:line="30" pos:column="5">return <expr><operator pos:line="30" pos:column="12">-<pos:position pos:line="30" pos:column="13"/></operator><literal type="number" pos:line="30" pos:column="13">1<pos:position pos:line="30" pos:column="14"/></literal></expr>;<pos:position pos:line="30" pos:column="15"/></return>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><name><name pos:line="33" pos:column="7">s<pos:position pos:line="33" pos:column="8"/></name><operator pos:line="33" pos:column="8">-&gt;<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="10">flags<pos:position pos:line="33" pos:column="15"/></name></name> <operator pos:line="33" pos:column="16">&amp;<pos:position pos:line="33" pos:column="21"/></operator> <name pos:line="33" pos:column="18">M_DISPLAY<pos:position pos:line="33" pos:column="27"/></name></expr>)<pos:position pos:line="33" pos:column="28"/></condition><then pos:line="33" pos:column="28"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="29">crypt_current_time<pos:position pos:line="33" pos:column="47"/></name> <argument_list pos:line="33" pos:column="48">(<argument><expr><name pos:line="33" pos:column="49">s<pos:position pos:line="33" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="52">"PGP"<pos:position pos:line="33" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="59"/></expr_stmt></block></then></if>

  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><operator pos:line="35" pos:column="7">(<pos:position pos:line="35" pos:column="8"/></operator><name pos:line="35" pos:column="8">tattach<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <call><name pos:line="35" pos:column="18">pgp_decrypt_part<pos:position pos:line="35" pos:column="34"/></name> <argument_list pos:line="35" pos:column="35">(<argument><expr><name pos:line="35" pos:column="36">a<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="39">s<pos:position pos:line="35" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="42">fpout<pos:position pos:line="35" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="49">p<pos:position pos:line="35" pos:column="50"/></name></expr></argument>)<pos:position pos:line="35" pos:column="51"/></argument_list></call><operator pos:line="35" pos:column="51">)<pos:position pos:line="35" pos:column="52"/></operator> <operator pos:line="35" pos:column="53">!=<pos:position pos:line="35" pos:column="55"/></operator> <name pos:line="35" pos:column="56">NULL<pos:position pos:line="35" pos:column="60"/></name></expr>)<pos:position pos:line="35" pos:column="61"/></condition><then pos:line="35" pos:column="61">
  <block pos:line="36" pos:column="3">{
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name><name pos:line="37" pos:column="9">s<pos:position pos:line="37" pos:column="10"/></name><operator pos:line="37" pos:column="10">-&gt;<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="12">flags<pos:position pos:line="37" pos:column="17"/></name></name> <operator pos:line="37" pos:column="18">&amp;<pos:position pos:line="37" pos:column="23"/></operator> <name pos:line="37" pos:column="20">M_DISPLAY<pos:position pos:line="37" pos:column="29"/></name></expr>)<pos:position pos:line="37" pos:column="30"/></condition><then pos:line="37" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="7">state_attach_puts<pos:position pos:line="38" pos:column="24"/></name> <argument_list pos:line="38" pos:column="25">(<argument><expr><call><name pos:line="38" pos:column="26">_<pos:position pos:line="38" pos:column="27"/></name><argument_list pos:line="38" pos:column="27">(<argument><expr><literal type="string" pos:line="38" pos:column="28">"[-- The following data is PGP/MIME encrypted --]\n\n"<pos:position pos:line="38" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="83"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="38" pos:column="85">s<pos:position pos:line="38" pos:column="86"/></name></expr></argument>)<pos:position pos:line="38" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="88"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="40" pos:column="5">fpin<pos:position pos:line="40" pos:column="9"/></name> <operator pos:line="40" pos:column="10">=<pos:position pos:line="40" pos:column="11"/></operator> <name><name pos:line="40" pos:column="12">s<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">-&gt;<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="15">fpin<pos:position pos:line="40" pos:column="19"/></name></name></expr>;<pos:position pos:line="40" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">s<pos:position pos:line="41" pos:column="6"/></name><operator pos:line="41" pos:column="6">-&gt;<pos:position pos:line="41" pos:column="11"/></operator><name pos:line="41" pos:column="8">fpin<pos:position pos:line="41" pos:column="12"/></name></name> <operator pos:line="41" pos:column="13">=<pos:position pos:line="41" pos:column="14"/></operator> <name pos:line="41" pos:column="15">fpout<pos:position pos:line="41" pos:column="20"/></name></expr>;<pos:position pos:line="41" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="42" pos:column="5">rc<pos:position pos:line="42" pos:column="7"/></name> <operator pos:line="42" pos:column="8">=<pos:position pos:line="42" pos:column="9"/></operator> <call><name pos:line="42" pos:column="10">mutt_body_handler<pos:position pos:line="42" pos:column="27"/></name> <argument_list pos:line="42" pos:column="28">(<argument><expr><name pos:line="42" pos:column="29">tattach<pos:position pos:line="42" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="38">s<pos:position pos:line="42" pos:column="39"/></name></expr></argument>)<pos:position pos:line="42" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">s<pos:position pos:line="43" pos:column="6"/></name><operator pos:line="43" pos:column="6">-&gt;<pos:position pos:line="43" pos:column="11"/></operator><name pos:line="43" pos:column="8">fpin<pos:position pos:line="43" pos:column="12"/></name></name> <operator pos:line="43" pos:column="13">=<pos:position pos:line="43" pos:column="14"/></operator> <name pos:line="43" pos:column="15">fpin<pos:position pos:line="43" pos:column="19"/></name></expr>;<pos:position pos:line="43" pos:column="20"/></expr_stmt>

    <comment type="block" pos:line="45" pos:column="5">/* 
     * if a multipart/signed is the _only_ sub-part of a
     * multipart/encrypted, cache signature verification
     * status.
     *
     */</comment>
    
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><call><name pos:line="52" pos:column="9">mutt_is_multipart_signed<pos:position pos:line="52" pos:column="33"/></name> <argument_list pos:line="52" pos:column="34">(<argument><expr><name pos:line="52" pos:column="35">tattach<pos:position pos:line="52" pos:column="42"/></name></expr></argument>)<pos:position pos:line="52" pos:column="43"/></argument_list></call> <operator pos:line="52" pos:column="44">&amp;&amp;<pos:position pos:line="52" pos:column="54"/></operator> <operator pos:line="52" pos:column="47">!<pos:position pos:line="52" pos:column="48"/></operator><name><name pos:line="52" pos:column="48">tattach<pos:position pos:line="52" pos:column="55"/></name><operator pos:line="52" pos:column="55">-&gt;<pos:position pos:line="52" pos:column="60"/></operator><name pos:line="52" pos:column="57">next<pos:position pos:line="52" pos:column="61"/></name></name></expr>)<pos:position pos:line="52" pos:column="62"/></condition><then pos:line="52" pos:column="62">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="53" pos:column="7">p<pos:position pos:line="53" pos:column="8"/></name><operator pos:line="53" pos:column="8">-&gt;<pos:position pos:line="53" pos:column="13"/></operator><name pos:line="53" pos:column="10">goodsig<pos:position pos:line="53" pos:column="17"/></name></name> <operator pos:line="53" pos:column="18">|=<pos:position pos:line="53" pos:column="20"/></operator> <name><name pos:line="53" pos:column="21">tattach<pos:position pos:line="53" pos:column="28"/></name><operator pos:line="53" pos:column="28">-&gt;<pos:position pos:line="53" pos:column="33"/></operator><name pos:line="53" pos:column="30">goodsig<pos:position pos:line="53" pos:column="37"/></name></name></expr>;<pos:position pos:line="53" pos:column="38"/></expr_stmt></block></then></if>
    
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name><name pos:line="55" pos:column="9">s<pos:position pos:line="55" pos:column="10"/></name><operator pos:line="55" pos:column="10">-&gt;<pos:position pos:line="55" pos:column="15"/></operator><name pos:line="55" pos:column="12">flags<pos:position pos:line="55" pos:column="17"/></name></name> <operator pos:line="55" pos:column="18">&amp;<pos:position pos:line="55" pos:column="23"/></operator> <name pos:line="55" pos:column="20">M_DISPLAY<pos:position pos:line="55" pos:column="29"/></name></expr>)<pos:position pos:line="55" pos:column="30"/></condition><then pos:line="55" pos:column="30">
    <block pos:line="56" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="57" pos:column="7">state_puts<pos:position pos:line="57" pos:column="17"/></name> <argument_list pos:line="57" pos:column="18">(<argument><expr><literal type="string" pos:line="57" pos:column="19">"\n"<pos:position pos:line="57" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="25">s<pos:position pos:line="57" pos:column="26"/></name></expr></argument>)<pos:position pos:line="57" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="58" pos:column="7">state_attach_puts<pos:position pos:line="58" pos:column="24"/></name> <argument_list pos:line="58" pos:column="25">(<argument><expr><call><name pos:line="58" pos:column="26">_<pos:position pos:line="58" pos:column="27"/></name><argument_list pos:line="58" pos:column="27">(<argument><expr><literal type="string" pos:line="58" pos:column="28">"[-- End of PGP/MIME encrypted data --]\n"<pos:position pos:line="58" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="58" pos:column="73">s<pos:position pos:line="58" pos:column="74"/></name></expr></argument>)<pos:position pos:line="58" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="61" pos:column="5">mutt_free_body<pos:position pos:line="61" pos:column="19"/></name> <argument_list pos:line="61" pos:column="20">(<argument><expr><operator pos:line="61" pos:column="21">&amp;<pos:position pos:line="61" pos:column="26"/></operator><name pos:line="61" pos:column="22">tattach<pos:position pos:line="61" pos:column="29"/></name></expr></argument>)<pos:position pos:line="61" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="31"/></expr_stmt>
    <comment type="block" pos:line="62" pos:column="5">/* clear 'Invoking...' message, since there's no error */</comment>
    <decl_stmt><decl><type><name pos:line="63" pos:column="5">mutt_message<pos:position pos:line="63" pos:column="17"/></name></type> <name pos:line="63" pos:column="18">_<pos:position pos:line="63" pos:column="19"/></name><argument_list pos:line="63" pos:column="19">(<argument><expr><literal type="string" pos:line="63" pos:column="20">"PGP message successfully decrypted."<pos:position pos:line="63" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="58"/></argument_list></decl>;<pos:position pos:line="63" pos:column="59"/></decl_stmt>
  }<pos:position pos:line="64" pos:column="4"/></block></then>
  <else pos:line="65" pos:column="3">else
  <block pos:line="66" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="67" pos:column="5">mutt_error<pos:position pos:line="67" pos:column="15"/></name></type> <name pos:line="67" pos:column="16">_<pos:position pos:line="67" pos:column="17"/></name><argument_list pos:line="67" pos:column="17">(<argument><expr><literal type="string" pos:line="67" pos:column="18">"Could not decrypt PGP message"<pos:position pos:line="67" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="50"/></argument_list></decl>;<pos:position pos:line="67" pos:column="51"/></decl_stmt>
    <comment type="block" pos:line="68" pos:column="5">/* void the passphrase, even if it's not necessarily the problem */</comment>
    <expr_stmt><expr><call><name pos:line="69" pos:column="5">pgp_void_passphrase<pos:position pos:line="69" pos:column="24"/></name> <argument_list pos:line="69" pos:column="25">()<pos:position pos:line="69" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="70" pos:column="5">rc<pos:position pos:line="70" pos:column="7"/></name> <operator pos:line="70" pos:column="8">=<pos:position pos:line="70" pos:column="9"/></operator> <operator pos:line="70" pos:column="10">-<pos:position pos:line="70" pos:column="11"/></operator><literal type="number" pos:line="70" pos:column="11">1<pos:position pos:line="70" pos:column="12"/></literal></expr>;<pos:position pos:line="70" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="71" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="73" pos:column="3">safe_fclose<pos:position pos:line="73" pos:column="14"/></name> <argument_list pos:line="73" pos:column="15">(<argument><expr><operator pos:line="73" pos:column="16">&amp;<pos:position pos:line="73" pos:column="21"/></operator><name pos:line="73" pos:column="17">fpout<pos:position pos:line="73" pos:column="22"/></name></expr></argument>)<pos:position pos:line="73" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="74" pos:column="3">mutt_unlink<pos:position pos:line="74" pos:column="14"/></name><argument_list pos:line="74" pos:column="14">(<argument><expr><name pos:line="74" pos:column="15">tempfile<pos:position pos:line="74" pos:column="23"/></name></expr></argument>)<pos:position pos:line="74" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="25"/></expr_stmt>

  <return pos:line="76" pos:column="3">return <expr><name pos:line="76" pos:column="10">rc<pos:position pos:line="76" pos:column="12"/></name></expr>;<pos:position pos:line="76" pos:column="13"/></return>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

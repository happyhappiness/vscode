<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_function_157.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_check_overwrite<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">attname<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">path<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
				<parameter><decl><type><name pos:line="2" pos:column="33">char<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">fname<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">size_t<pos:position pos:line="2" pos:column="52"/></name></type> <name pos:line="2" pos:column="53">flen<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">int<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">append<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="72">char<pos:position pos:line="2" pos:column="76"/></name> <modifier pos:line="2" pos:column="77">*<pos:position pos:line="2" pos:column="78"/></modifier><modifier pos:line="2" pos:column="78">*<pos:position pos:line="2" pos:column="79"/></modifier></type><name pos:line="2" pos:column="79">directory<pos:position pos:line="2" pos:column="88"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="89"/></parameter_list> 
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">rc<pos:position pos:line="4" pos:column="9"/></name> <init pos:line="4" pos:column="10">= <expr><literal type="number" pos:line="4" pos:column="12">0<pos:position pos:line="4" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">tmp<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><name pos:line="5" pos:column="12">_POSIX_PATH_MAX<pos:position pos:line="5" pos:column="27"/></name></expr>]<pos:position pos:line="5" pos:column="28"/></index></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">stat<pos:position pos:line="6" pos:column="14"/></name></name></type> <name pos:line="6" pos:column="15">st<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">strfcpy<pos:position pos:line="8" pos:column="10"/></name> <argument_list pos:line="8" pos:column="11">(<argument><expr><name pos:line="8" pos:column="12">fname<pos:position pos:line="8" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="19">path<pos:position pos:line="8" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="25">flen<pos:position pos:line="8" pos:column="29"/></name></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><call><name pos:line="9" pos:column="7">access<pos:position pos:line="9" pos:column="13"/></name> <argument_list pos:line="9" pos:column="14">(<argument><expr><name pos:line="9" pos:column="15">fname<pos:position pos:line="9" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="22">F_OK<pos:position pos:line="9" pos:column="26"/></name></expr></argument>)<pos:position pos:line="9" pos:column="27"/></argument_list></call> <operator pos:line="9" pos:column="28">!=<pos:position pos:line="9" pos:column="30"/></operator> <literal type="number" pos:line="9" pos:column="31">0<pos:position pos:line="9" pos:column="32"/></literal></expr>)<pos:position pos:line="9" pos:column="33"/></condition><then pos:line="9" pos:column="33">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><literal type="number" pos:line="10" pos:column="12">0<pos:position pos:line="10" pos:column="13"/></literal></expr>;<pos:position pos:line="10" pos:column="14"/></return></block></then></if>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><call><name pos:line="11" pos:column="7">stat<pos:position pos:line="11" pos:column="11"/></name> <argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">fname<pos:position pos:line="11" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="20">&amp;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="21">st<pos:position pos:line="11" pos:column="23"/></name></expr></argument>)<pos:position pos:line="11" pos:column="24"/></argument_list></call> <operator pos:line="11" pos:column="25">!=<pos:position pos:line="11" pos:column="27"/></operator> <literal type="number" pos:line="11" pos:column="28">0<pos:position pos:line="11" pos:column="29"/></literal></expr>)<pos:position pos:line="11" pos:column="30"/></condition><then pos:line="11" pos:column="30">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">-<pos:position pos:line="12" pos:column="13"/></operator><literal type="number" pos:line="12" pos:column="13">1<pos:position pos:line="12" pos:column="14"/></literal></expr>;<pos:position pos:line="12" pos:column="15"/></return></block></then></if>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><call><name pos:line="13" pos:column="7">S_ISDIR<pos:position pos:line="13" pos:column="14"/></name> <argument_list pos:line="13" pos:column="15">(<argument><expr><name><name pos:line="13" pos:column="16">st<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">.<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="19">st_mode<pos:position pos:line="13" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="28"/></condition><then pos:line="13" pos:column="28">
  <block pos:line="14" pos:column="3">{
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">directory<pos:position pos:line="15" pos:column="18"/></name></expr>)<pos:position pos:line="15" pos:column="19"/></condition><then pos:line="15" pos:column="19">
    <block pos:line="16" pos:column="5">{
      <switch pos:line="17" pos:column="7">switch <condition pos:line="17" pos:column="14">(<expr><call><name pos:line="17" pos:column="15">mutt_multi_choice<pos:position pos:line="17" pos:column="32"/></name>
      <comment type="block" pos:line="18" pos:column="7">/* L10N:
         Means "The path you specified as the destination file is a directory."
         See the msgid "Save to file: " (alias.c, recvattach.c) */</comment>
	      <argument_list pos:line="21" pos:column="15">(<argument><expr><call><name pos:line="21" pos:column="16">_<pos:position pos:line="21" pos:column="17"/></name><argument_list pos:line="21" pos:column="17">(<argument><expr><literal type="string" pos:line="21" pos:column="18">"File is a directory, save under it? [(y)es, (n)o, (a)ll]"<pos:position pos:line="21" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="79">_<pos:position pos:line="21" pos:column="80"/></name><argument_list pos:line="21" pos:column="80">(<argument><expr><literal type="string" pos:line="21" pos:column="81">"yna"<pos:position pos:line="21" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="88"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="89"/></condition>
      <block pos:line="22" pos:column="7">{
	<case pos:line="23" pos:column="9">case <expr><literal type="number" pos:line="23" pos:column="14">3<pos:position pos:line="23" pos:column="15"/></literal></expr>:<pos:position pos:line="23" pos:column="16"/></case>		<comment type="block" pos:line="23" pos:column="25">/* all */</comment>
	  <expr_stmt><expr><call><name pos:line="24" pos:column="11">mutt_str_replace<pos:position pos:line="24" pos:column="27"/></name> <argument_list pos:line="24" pos:column="28">(<argument><expr><name pos:line="24" pos:column="29">directory<pos:position pos:line="24" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="40">fname<pos:position pos:line="24" pos:column="45"/></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt>
	  <break pos:line="25" pos:column="11">break;<pos:position pos:line="25" pos:column="17"/></break>
	<case pos:line="26" pos:column="9">case <expr><literal type="number" pos:line="26" pos:column="14">1<pos:position pos:line="26" pos:column="15"/></literal></expr>:<pos:position pos:line="26" pos:column="16"/></case>		<comment type="block" pos:line="26" pos:column="25">/* yes */</comment>
	  <expr_stmt><expr><call><name pos:line="27" pos:column="11">FREE<pos:position pos:line="27" pos:column="15"/></name> <argument_list pos:line="27" pos:column="16">(<argument><expr><name pos:line="27" pos:column="17">directory<pos:position pos:line="27" pos:column="26"/></name></expr></argument>)<pos:position pos:line="27" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt>		<comment type="block" pos:line="27" pos:column="41">/* __FREE_CHECKED__ */</comment>
	  <break pos:line="28" pos:column="11">break;<pos:position pos:line="28" pos:column="17"/></break>
	<case pos:line="29" pos:column="9">case <expr><operator pos:line="29" pos:column="14">-<pos:position pos:line="29" pos:column="15"/></operator><literal type="number" pos:line="29" pos:column="15">1<pos:position pos:line="29" pos:column="16"/></literal></expr>:<pos:position pos:line="29" pos:column="17"/></case>	<comment type="block" pos:line="29" pos:column="25">/* abort */</comment>
	  <expr_stmt><expr><call><name pos:line="30" pos:column="11">FREE<pos:position pos:line="30" pos:column="15"/></name> <argument_list pos:line="30" pos:column="16">(<argument><expr><name pos:line="30" pos:column="17">directory<pos:position pos:line="30" pos:column="26"/></name></expr></argument>)<pos:position pos:line="30" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="28"/></expr_stmt> 		<comment type="block" pos:line="30" pos:column="41">/* __FREE_CHECKED__ */</comment>
	  <return pos:line="31" pos:column="11">return <expr><operator pos:line="31" pos:column="18">-<pos:position pos:line="31" pos:column="19"/></operator><literal type="number" pos:line="31" pos:column="19">1<pos:position pos:line="31" pos:column="20"/></literal></expr>;<pos:position pos:line="31" pos:column="21"/></return>
	<case pos:line="32" pos:column="9">case  <expr><literal type="number" pos:line="32" pos:column="15">2<pos:position pos:line="32" pos:column="16"/></literal></expr>:<pos:position pos:line="32" pos:column="17"/></case>	<comment type="block" pos:line="32" pos:column="25">/* no */</comment>
	  <expr_stmt><expr><call><name pos:line="33" pos:column="11">FREE<pos:position pos:line="33" pos:column="15"/></name> <argument_list pos:line="33" pos:column="16">(<argument><expr><name pos:line="33" pos:column="17">directory<pos:position pos:line="33" pos:column="26"/></name></expr></argument>)<pos:position pos:line="33" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="28"/></expr_stmt>		<comment type="block" pos:line="33" pos:column="41">/* __FREE_CHECKED__ */</comment>
	  <return pos:line="34" pos:column="11">return <expr><literal type="number" pos:line="34" pos:column="18">1<pos:position pos:line="34" pos:column="19"/></literal></expr>;<pos:position pos:line="34" pos:column="20"/></return>
      }<pos:position pos:line="35" pos:column="8"/></block></switch>
    }<pos:position pos:line="36" pos:column="6"/></block></then>
    <comment type="block" pos:line="37" pos:column="5">/* L10N:
       Means "The path you specified as the destination file is a directory."
       See the msgid "Save to file: " (alias.c, recvattach.c) */</comment>
    <elseif pos:line="40" pos:column="5">else <if pos:line="40" pos:column="10">if <condition pos:line="40" pos:column="13">(<expr><operator pos:line="40" pos:column="14">(<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="15">rc<pos:position pos:line="40" pos:column="17"/></name> <operator pos:line="40" pos:column="18">=<pos:position pos:line="40" pos:column="19"/></operator> <call><name pos:line="40" pos:column="20">mutt_yesorno<pos:position pos:line="40" pos:column="32"/></name> <argument_list pos:line="40" pos:column="33">(<argument><expr><call><name pos:line="40" pos:column="34">_<pos:position pos:line="40" pos:column="35"/></name><argument_list pos:line="40" pos:column="35">(<argument><expr><literal type="string" pos:line="40" pos:column="36">"File is a directory, save under it?"<pos:position pos:line="40" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="40" pos:column="76">M_YES<pos:position pos:line="40" pos:column="81"/></name></expr></argument>)<pos:position pos:line="40" pos:column="82"/></argument_list></call><operator pos:line="40" pos:column="82">)<pos:position pos:line="40" pos:column="83"/></operator> <operator pos:line="40" pos:column="84">!=<pos:position pos:line="40" pos:column="86"/></operator> <name pos:line="40" pos:column="87">M_YES<pos:position pos:line="40" pos:column="92"/></name></expr>)<pos:position pos:line="40" pos:column="93"/></condition><then pos:line="40" pos:column="93">
      <block type="pseudo"><return pos:line="41" pos:column="7">return <expr><ternary><condition><expr><operator pos:line="41" pos:column="14">(<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="15">rc<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">==<pos:position pos:line="41" pos:column="20"/></operator> <name pos:line="41" pos:column="21">M_NO<pos:position pos:line="41" pos:column="25"/></name><operator pos:line="41" pos:column="25">)<pos:position pos:line="41" pos:column="26"/></operator></expr> ?<pos:position pos:line="41" pos:column="28"/></condition><then pos:line="41" pos:column="28"> <expr><literal type="number" pos:line="41" pos:column="29">1<pos:position pos:line="41" pos:column="30"/></literal></expr> <pos:position pos:line="41" pos:column="31"/></then><else pos:line="41" pos:column="31">: <expr><operator pos:line="41" pos:column="33">-<pos:position pos:line="41" pos:column="34"/></operator><literal type="number" pos:line="41" pos:column="34">1<pos:position pos:line="41" pos:column="35"/></literal></expr></else></ternary></expr>;<pos:position pos:line="41" pos:column="36"/></return></block></then></if></elseif></if>

    <expr_stmt><expr><call><name pos:line="43" pos:column="5">strfcpy<pos:position pos:line="43" pos:column="12"/></name> <argument_list pos:line="43" pos:column="13">(<argument><expr><name pos:line="43" pos:column="14">tmp<pos:position pos:line="43" pos:column="17"/></name></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="19">mutt_basename<pos:position pos:line="43" pos:column="32"/></name> <argument_list pos:line="43" pos:column="33">(<argument><expr><call><name pos:line="43" pos:column="34">NONULL<pos:position pos:line="43" pos:column="40"/></name> <argument_list pos:line="43" pos:column="41">(<argument><expr><name pos:line="43" pos:column="42">attname<pos:position pos:line="43" pos:column="49"/></name></expr></argument>)<pos:position pos:line="43" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="53">sizeof <argument_list pos:line="43" pos:column="60">(<argument><expr><name pos:line="43" pos:column="61">tmp<pos:position pos:line="43" pos:column="64"/></name></expr></argument>)<pos:position pos:line="43" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="43" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="67"/></expr_stmt>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><call><name pos:line="44" pos:column="9">mutt_get_field<pos:position pos:line="44" pos:column="23"/></name> <argument_list pos:line="44" pos:column="24">(<argument><expr><call><name pos:line="44" pos:column="25">_<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">(<argument><expr><literal type="string" pos:line="44" pos:column="27">"File under directory: "<pos:position pos:line="44" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="44" pos:column="54">tmp<pos:position pos:line="44" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="59">sizeof <argument_list pos:line="44" pos:column="66">(<argument><expr><name pos:line="44" pos:column="67">tmp<pos:position pos:line="44" pos:column="70"/></name></expr></argument>)<pos:position pos:line="44" pos:column="71"/></argument_list></sizeof></expr></argument>,
                                    <argument><expr><name pos:line="45" pos:column="37">M_FILE<pos:position pos:line="45" pos:column="43"/></name> <operator pos:line="45" pos:column="44">|<pos:position pos:line="45" pos:column="45"/></operator> <name pos:line="45" pos:column="46">M_CLEAR<pos:position pos:line="45" pos:column="53"/></name></expr></argument>)<pos:position pos:line="45" pos:column="54"/></argument_list></call> <operator pos:line="45" pos:column="55">!=<pos:position pos:line="45" pos:column="57"/></operator> <literal type="number" pos:line="45" pos:column="58">0<pos:position pos:line="45" pos:column="59"/></literal> <operator pos:line="45" pos:column="60">||<pos:position pos:line="45" pos:column="62"/></operator> <operator pos:line="45" pos:column="63">!<pos:position pos:line="45" pos:column="64"/></operator><name><name pos:line="45" pos:column="64">tmp<pos:position pos:line="45" pos:column="67"/></name><index pos:line="45" pos:column="67">[<expr><literal type="number" pos:line="45" pos:column="68">0<pos:position pos:line="45" pos:column="69"/></literal></expr>]<pos:position pos:line="45" pos:column="70"/></index></name></expr>)<pos:position pos:line="45" pos:column="71"/></condition><then pos:line="45" pos:column="71">
      <block type="pseudo"><return pos:line="46" pos:column="7">return <expr><operator pos:line="46" pos:column="14">(<pos:position pos:line="46" pos:column="15"/></operator><operator pos:line="46" pos:column="15">-<pos:position pos:line="46" pos:column="16"/></operator><literal type="number" pos:line="46" pos:column="16">1<pos:position pos:line="46" pos:column="17"/></literal><operator pos:line="46" pos:column="17">)<pos:position pos:line="46" pos:column="18"/></operator></expr>;<pos:position pos:line="46" pos:column="19"/></return></block></then></if>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">mutt_concat_path<pos:position pos:line="47" pos:column="21"/></name> <argument_list pos:line="47" pos:column="22">(<argument><expr><name pos:line="47" pos:column="23">fname<pos:position pos:line="47" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="30">path<pos:position pos:line="47" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="36">tmp<pos:position pos:line="47" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="41">flen<pos:position pos:line="47" pos:column="45"/></name></expr></argument>)<pos:position pos:line="47" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="47"/></expr_stmt>
  }<pos:position pos:line="48" pos:column="4"/></block></then></if>
  
  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><operator pos:line="50" pos:column="7">*<pos:position pos:line="50" pos:column="8"/></operator><name pos:line="50" pos:column="8">append<pos:position pos:line="50" pos:column="14"/></name> <operator pos:line="50" pos:column="15">==<pos:position pos:line="50" pos:column="17"/></operator> <literal type="number" pos:line="50" pos:column="18">0<pos:position pos:line="50" pos:column="19"/></literal> <operator pos:line="50" pos:column="20">&amp;&amp;<pos:position pos:line="50" pos:column="30"/></operator> <call><name pos:line="50" pos:column="23">access<pos:position pos:line="50" pos:column="29"/></name> <argument_list pos:line="50" pos:column="30">(<argument><expr><name pos:line="50" pos:column="31">fname<pos:position pos:line="50" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="38">F_OK<pos:position pos:line="50" pos:column="42"/></name></expr></argument>)<pos:position pos:line="50" pos:column="43"/></argument_list></call> <operator pos:line="50" pos:column="44">==<pos:position pos:line="50" pos:column="46"/></operator> <literal type="number" pos:line="50" pos:column="47">0<pos:position pos:line="50" pos:column="48"/></literal></expr>)<pos:position pos:line="50" pos:column="49"/></condition><then pos:line="50" pos:column="49">
  <block pos:line="51" pos:column="3">{
    <switch pos:line="52" pos:column="5">switch <condition pos:line="52" pos:column="12">(<expr><call><name pos:line="52" pos:column="13">mutt_multi_choice<pos:position pos:line="52" pos:column="30"/></name>
	    <argument_list pos:line="53" pos:column="13">(<argument><expr><call><name pos:line="53" pos:column="14">_<pos:position pos:line="53" pos:column="15"/></name><argument_list pos:line="53" pos:column="15">(<argument><expr><literal type="string" pos:line="53" pos:column="16">"File exists, (o)verwrite, (a)ppend, or (c)ancel?"<pos:position pos:line="53" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="53" pos:column="69">_<pos:position pos:line="53" pos:column="70"/></name><argument_list pos:line="53" pos:column="70">(<argument><expr><literal type="string" pos:line="53" pos:column="71">"oac"<pos:position pos:line="53" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="79"/></condition>
    <block pos:line="54" pos:column="5">{
      <case pos:line="55" pos:column="7">case <expr><operator pos:line="55" pos:column="12">-<pos:position pos:line="55" pos:column="13"/></operator><literal type="number" pos:line="55" pos:column="13">1<pos:position pos:line="55" pos:column="14"/></literal></expr>:<pos:position pos:line="55" pos:column="15"/></case> <comment type="block" pos:line="55" pos:column="16">/* abort */</comment>
        <return pos:line="56" pos:column="9">return <expr><operator pos:line="56" pos:column="16">-<pos:position pos:line="56" pos:column="17"/></operator><literal type="number" pos:line="56" pos:column="17">1<pos:position pos:line="56" pos:column="18"/></literal></expr>;<pos:position pos:line="56" pos:column="19"/></return>
      <case pos:line="57" pos:column="7">case <expr><literal type="number" pos:line="57" pos:column="12">3<pos:position pos:line="57" pos:column="13"/></literal></expr>:<pos:position pos:line="57" pos:column="14"/></case>  <comment type="block" pos:line="57" pos:column="16">/* cancel */</comment>
	<return pos:line="58" pos:column="9">return <expr><literal type="number" pos:line="58" pos:column="16">1<pos:position pos:line="58" pos:column="17"/></literal></expr>;<pos:position pos:line="58" pos:column="18"/></return>

      <case pos:line="60" pos:column="7">case <expr><literal type="number" pos:line="60" pos:column="12">2<pos:position pos:line="60" pos:column="13"/></literal></expr>:<pos:position pos:line="60" pos:column="14"/></case> <comment type="block" pos:line="60" pos:column="15">/* append */</comment>
        <expr_stmt><expr><operator pos:line="61" pos:column="9">*<pos:position pos:line="61" pos:column="10"/></operator><name pos:line="61" pos:column="10">append<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">=<pos:position pos:line="61" pos:column="18"/></operator> <name pos:line="61" pos:column="19">M_SAVE_APPEND<pos:position pos:line="61" pos:column="32"/></name></expr>;<pos:position pos:line="61" pos:column="33"/></expr_stmt>
        <break pos:line="62" pos:column="9">break;<pos:position pos:line="62" pos:column="15"/></break>
      <case pos:line="63" pos:column="7">case <expr><literal type="number" pos:line="63" pos:column="12">1<pos:position pos:line="63" pos:column="13"/></literal></expr>:<pos:position pos:line="63" pos:column="14"/></case> <comment type="block" pos:line="63" pos:column="15">/* overwrite */</comment>
        <expr_stmt><expr><operator pos:line="64" pos:column="9">*<pos:position pos:line="64" pos:column="10"/></operator><name pos:line="64" pos:column="10">append<pos:position pos:line="64" pos:column="16"/></name> <operator pos:line="64" pos:column="17">=<pos:position pos:line="64" pos:column="18"/></operator> <name pos:line="64" pos:column="19">M_SAVE_OVERWRITE<pos:position pos:line="64" pos:column="35"/></name></expr>;<pos:position pos:line="64" pos:column="36"/></expr_stmt>
        <break pos:line="65" pos:column="9">break;<pos:position pos:line="65" pos:column="15"/></break>
    }<pos:position pos:line="66" pos:column="6"/></block></switch>
  }<pos:position pos:line="67" pos:column="4"/></block></then></if>
  <return pos:line="68" pos:column="3">return <expr><literal type="number" pos:line="68" pos:column="10">0<pos:position pos:line="68" pos:column="11"/></literal></expr>;<pos:position pos:line="68" pos:column="12"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

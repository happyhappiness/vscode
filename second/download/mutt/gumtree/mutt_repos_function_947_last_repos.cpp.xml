<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_947_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_from_base64<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">out<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">in<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">len<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><literal type="number" pos:line="3" pos:column="13">0<pos:position pos:line="3" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">register<pos:position pos:line="4" pos:column="11"/></specifier> <name pos:line="4" pos:column="12">unsigned<pos:position pos:line="4" pos:column="20"/></name> <name pos:line="4" pos:column="21">char<pos:position pos:line="4" pos:column="25"/></name></type> <name pos:line="4" pos:column="26">digit1<pos:position pos:line="4" pos:column="32"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="34">digit2<pos:position pos:line="4" pos:column="40"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="42">digit3<pos:position pos:line="4" pos:column="48"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="50">digit4<pos:position pos:line="4" pos:column="56"/></name></decl>;<pos:position pos:line="4" pos:column="57"/></decl_stmt>

  <do pos:line="6" pos:column="3">do
  <block pos:line="7" pos:column="3">{
    <expr_stmt><expr><name pos:line="8" pos:column="5">digit1<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <name><name pos:line="8" pos:column="14">in<pos:position pos:line="8" pos:column="16"/></name><index pos:line="8" pos:column="16">[<expr><literal type="number" pos:line="8" pos:column="17">0<pos:position pos:line="8" pos:column="18"/></literal></expr>]<pos:position pos:line="8" pos:column="19"/></index></name></expr>;<pos:position pos:line="8" pos:column="20"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">digit1<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">&gt;<pos:position pos:line="9" pos:column="20"/></operator> <literal type="number" pos:line="9" pos:column="18">127<pos:position pos:line="9" pos:column="21"/></literal> <operator pos:line="9" pos:column="22">||<pos:position pos:line="9" pos:column="24"/></operator> <call><name pos:line="9" pos:column="25">base64val<pos:position pos:line="9" pos:column="34"/></name> <argument_list pos:line="9" pos:column="35">(<argument><expr><name pos:line="9" pos:column="36">digit1<pos:position pos:line="9" pos:column="42"/></name></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call> <operator pos:line="9" pos:column="44">==<pos:position pos:line="9" pos:column="46"/></operator> <name pos:line="9" pos:column="47">BAD<pos:position pos:line="9" pos:column="50"/></name></expr>)<pos:position pos:line="9" pos:column="51"/></condition><then pos:line="9" pos:column="51">
      <block type="pseudo"><return pos:line="10" pos:column="7">return <expr><operator pos:line="10" pos:column="14">-<pos:position pos:line="10" pos:column="15"/></operator><literal type="number" pos:line="10" pos:column="15">1<pos:position pos:line="10" pos:column="16"/></literal></expr>;<pos:position pos:line="10" pos:column="17"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="11" pos:column="5">digit2<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <name><name pos:line="11" pos:column="14">in<pos:position pos:line="11" pos:column="16"/></name><index pos:line="11" pos:column="16">[<expr><literal type="number" pos:line="11" pos:column="17">1<pos:position pos:line="11" pos:column="18"/></literal></expr>]<pos:position pos:line="11" pos:column="19"/></index></name></expr>;<pos:position pos:line="11" pos:column="20"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">digit2<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">&gt;<pos:position pos:line="12" pos:column="20"/></operator> <literal type="number" pos:line="12" pos:column="18">127<pos:position pos:line="12" pos:column="21"/></literal> <operator pos:line="12" pos:column="22">||<pos:position pos:line="12" pos:column="24"/></operator> <call><name pos:line="12" pos:column="25">base64val<pos:position pos:line="12" pos:column="34"/></name> <argument_list pos:line="12" pos:column="35">(<argument><expr><name pos:line="12" pos:column="36">digit2<pos:position pos:line="12" pos:column="42"/></name></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call> <operator pos:line="12" pos:column="44">==<pos:position pos:line="12" pos:column="46"/></operator> <name pos:line="12" pos:column="47">BAD<pos:position pos:line="12" pos:column="50"/></name></expr>)<pos:position pos:line="12" pos:column="51"/></condition><then pos:line="12" pos:column="51">
      <block type="pseudo"><return pos:line="13" pos:column="7">return <expr><operator pos:line="13" pos:column="14">-<pos:position pos:line="13" pos:column="15"/></operator><literal type="number" pos:line="13" pos:column="15">1<pos:position pos:line="13" pos:column="16"/></literal></expr>;<pos:position pos:line="13" pos:column="17"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="14" pos:column="5">digit3<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <name><name pos:line="14" pos:column="14">in<pos:position pos:line="14" pos:column="16"/></name><index pos:line="14" pos:column="16">[<expr><literal type="number" pos:line="14" pos:column="17">2<pos:position pos:line="14" pos:column="18"/></literal></expr>]<pos:position pos:line="14" pos:column="19"/></index></name></expr>;<pos:position pos:line="14" pos:column="20"/></expr_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">digit3<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">&gt;<pos:position pos:line="15" pos:column="20"/></operator> <literal type="number" pos:line="15" pos:column="18">127<pos:position pos:line="15" pos:column="21"/></literal> <operator pos:line="15" pos:column="22">||<pos:position pos:line="15" pos:column="24"/></operator> <operator pos:line="15" pos:column="25">(<pos:position pos:line="15" pos:column="26"/></operator><operator pos:line="15" pos:column="26">(<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="27">digit3<pos:position pos:line="15" pos:column="33"/></name> <operator pos:line="15" pos:column="34">!=<pos:position pos:line="15" pos:column="36"/></operator> <literal type="char" pos:line="15" pos:column="37">'='<pos:position pos:line="15" pos:column="40"/></literal><operator pos:line="15" pos:column="40">)<pos:position pos:line="15" pos:column="41"/></operator> <operator pos:line="15" pos:column="42">&amp;&amp;<pos:position pos:line="15" pos:column="52"/></operator> <operator pos:line="15" pos:column="45">(<pos:position pos:line="15" pos:column="46"/></operator><call><name pos:line="15" pos:column="46">base64val<pos:position pos:line="15" pos:column="55"/></name> <argument_list pos:line="15" pos:column="56">(<argument><expr><name pos:line="15" pos:column="57">digit3<pos:position pos:line="15" pos:column="63"/></name></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></call> <operator pos:line="15" pos:column="65">==<pos:position pos:line="15" pos:column="67"/></operator> <name pos:line="15" pos:column="68">BAD<pos:position pos:line="15" pos:column="71"/></name><operator pos:line="15" pos:column="71">)<pos:position pos:line="15" pos:column="72"/></operator><operator pos:line="15" pos:column="72">)<pos:position pos:line="15" pos:column="73"/></operator></expr>)<pos:position pos:line="15" pos:column="74"/></condition><then pos:line="15" pos:column="74">
      <block type="pseudo"><return pos:line="16" pos:column="7">return <expr><operator pos:line="16" pos:column="14">-<pos:position pos:line="16" pos:column="15"/></operator><literal type="number" pos:line="16" pos:column="15">1<pos:position pos:line="16" pos:column="16"/></literal></expr>;<pos:position pos:line="16" pos:column="17"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="17" pos:column="5">digit4<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <name><name pos:line="17" pos:column="14">in<pos:position pos:line="17" pos:column="16"/></name><index pos:line="17" pos:column="16">[<expr><literal type="number" pos:line="17" pos:column="17">3<pos:position pos:line="17" pos:column="18"/></literal></expr>]<pos:position pos:line="17" pos:column="19"/></index></name></expr>;<pos:position pos:line="17" pos:column="20"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">digit4<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">&gt;<pos:position pos:line="18" pos:column="20"/></operator> <literal type="number" pos:line="18" pos:column="18">127<pos:position pos:line="18" pos:column="21"/></literal> <operator pos:line="18" pos:column="22">||<pos:position pos:line="18" pos:column="24"/></operator> <operator pos:line="18" pos:column="25">(<pos:position pos:line="18" pos:column="26"/></operator><operator pos:line="18" pos:column="26">(<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="27">digit4<pos:position pos:line="18" pos:column="33"/></name> <operator pos:line="18" pos:column="34">!=<pos:position pos:line="18" pos:column="36"/></operator> <literal type="char" pos:line="18" pos:column="37">'='<pos:position pos:line="18" pos:column="40"/></literal><operator pos:line="18" pos:column="40">)<pos:position pos:line="18" pos:column="41"/></operator> <operator pos:line="18" pos:column="42">&amp;&amp;<pos:position pos:line="18" pos:column="52"/></operator> <operator pos:line="18" pos:column="45">(<pos:position pos:line="18" pos:column="46"/></operator><call><name pos:line="18" pos:column="46">base64val<pos:position pos:line="18" pos:column="55"/></name> <argument_list pos:line="18" pos:column="56">(<argument><expr><name pos:line="18" pos:column="57">digit4<pos:position pos:line="18" pos:column="63"/></name></expr></argument>)<pos:position pos:line="18" pos:column="64"/></argument_list></call> <operator pos:line="18" pos:column="65">==<pos:position pos:line="18" pos:column="67"/></operator> <name pos:line="18" pos:column="68">BAD<pos:position pos:line="18" pos:column="71"/></name><operator pos:line="18" pos:column="71">)<pos:position pos:line="18" pos:column="72"/></operator><operator pos:line="18" pos:column="72">)<pos:position pos:line="18" pos:column="73"/></operator></expr>)<pos:position pos:line="18" pos:column="74"/></condition><then pos:line="18" pos:column="74">
      <block type="pseudo"><return pos:line="19" pos:column="7">return <expr><operator pos:line="19" pos:column="14">-<pos:position pos:line="19" pos:column="15"/></operator><literal type="number" pos:line="19" pos:column="15">1<pos:position pos:line="19" pos:column="16"/></literal></expr>;<pos:position pos:line="19" pos:column="17"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="20" pos:column="5">in<pos:position pos:line="20" pos:column="7"/></name> <operator pos:line="20" pos:column="8">+=<pos:position pos:line="20" pos:column="10"/></operator> <literal type="number" pos:line="20" pos:column="11">4<pos:position pos:line="20" pos:column="12"/></literal></expr>;<pos:position pos:line="20" pos:column="13"/></expr_stmt>

    <comment type="block" pos:line="22" pos:column="5">/* digits are already sanity-checked */</comment>
    <expr_stmt><expr><operator pos:line="23" pos:column="5">*<pos:position pos:line="23" pos:column="6"/></operator><name pos:line="23" pos:column="6">out<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">++<pos:position pos:line="23" pos:column="11"/></operator> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <operator pos:line="23" pos:column="14">(<pos:position pos:line="23" pos:column="15"/></operator><call><name pos:line="23" pos:column="15">base64val<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name pos:line="23" pos:column="25">digit1<pos:position pos:line="23" pos:column="31"/></name></expr></argument>)<pos:position pos:line="23" pos:column="32"/></argument_list></call> <operator pos:line="23" pos:column="33">&lt;&lt;<pos:position pos:line="23" pos:column="41"/></operator> <literal type="number" pos:line="23" pos:column="36">2<pos:position pos:line="23" pos:column="37"/></literal><operator pos:line="23" pos:column="37">)<pos:position pos:line="23" pos:column="38"/></operator> <operator pos:line="23" pos:column="39">|<pos:position pos:line="23" pos:column="40"/></operator> <operator pos:line="23" pos:column="41">(<pos:position pos:line="23" pos:column="42"/></operator><call><name pos:line="23" pos:column="42">base64val<pos:position pos:line="23" pos:column="51"/></name><argument_list pos:line="23" pos:column="51">(<argument><expr><name pos:line="23" pos:column="52">digit2<pos:position pos:line="23" pos:column="58"/></name></expr></argument>)<pos:position pos:line="23" pos:column="59"/></argument_list></call> <operator pos:line="23" pos:column="60">&gt;&gt;<pos:position pos:line="23" pos:column="65"/></operator> <literal type="number" pos:line="23" pos:column="63">4<pos:position pos:line="23" pos:column="64"/></literal><operator pos:line="23" pos:column="64">)<pos:position pos:line="23" pos:column="65"/></operator></expr>;<pos:position pos:line="23" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">len<pos:position pos:line="24" pos:column="8"/></name><operator pos:line="24" pos:column="8">++<pos:position pos:line="24" pos:column="10"/></operator></expr>;<pos:position pos:line="24" pos:column="11"/></expr_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">digit3<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">!=<pos:position pos:line="25" pos:column="18"/></operator> <literal type="char" pos:line="25" pos:column="19">'='<pos:position pos:line="25" pos:column="22"/></literal></expr>)<pos:position pos:line="25" pos:column="23"/></condition><then pos:line="25" pos:column="23">
    <block pos:line="26" pos:column="5">{
      <expr_stmt><expr><operator pos:line="27" pos:column="7">*<pos:position pos:line="27" pos:column="8"/></operator><name pos:line="27" pos:column="8">out<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">++<pos:position pos:line="27" pos:column="13"/></operator> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <operator pos:line="27" pos:column="16">(<pos:position pos:line="27" pos:column="17"/></operator><operator pos:line="27" pos:column="17">(<pos:position pos:line="27" pos:column="18"/></operator><call><name pos:line="27" pos:column="18">base64val<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><name pos:line="27" pos:column="28">digit2<pos:position pos:line="27" pos:column="34"/></name></expr></argument>)<pos:position pos:line="27" pos:column="35"/></argument_list></call> <operator pos:line="27" pos:column="36">&lt;&lt;<pos:position pos:line="27" pos:column="44"/></operator> <literal type="number" pos:line="27" pos:column="39">4<pos:position pos:line="27" pos:column="40"/></literal><operator pos:line="27" pos:column="40">)<pos:position pos:line="27" pos:column="41"/></operator> <operator pos:line="27" pos:column="42">&amp;<pos:position pos:line="27" pos:column="47"/></operator> <literal type="number" pos:line="27" pos:column="44">0xf0<pos:position pos:line="27" pos:column="48"/></literal><operator pos:line="27" pos:column="48">)<pos:position pos:line="27" pos:column="49"/></operator> <operator pos:line="27" pos:column="50">|<pos:position pos:line="27" pos:column="51"/></operator> <operator pos:line="27" pos:column="52">(<pos:position pos:line="27" pos:column="53"/></operator><call><name pos:line="27" pos:column="53">base64val<pos:position pos:line="27" pos:column="62"/></name><argument_list pos:line="27" pos:column="62">(<argument><expr><name pos:line="27" pos:column="63">digit3<pos:position pos:line="27" pos:column="69"/></name></expr></argument>)<pos:position pos:line="27" pos:column="70"/></argument_list></call> <operator pos:line="27" pos:column="71">&gt;&gt;<pos:position pos:line="27" pos:column="76"/></operator> <literal type="number" pos:line="27" pos:column="74">2<pos:position pos:line="27" pos:column="75"/></literal><operator pos:line="27" pos:column="75">)<pos:position pos:line="27" pos:column="76"/></operator></expr>;<pos:position pos:line="27" pos:column="77"/></expr_stmt>
      <expr_stmt><expr><name pos:line="28" pos:column="7">len<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">++<pos:position pos:line="28" pos:column="12"/></operator></expr>;<pos:position pos:line="28" pos:column="13"/></expr_stmt>
      <if pos:line="29" pos:column="7">if <condition pos:line="29" pos:column="10">(<expr><name pos:line="29" pos:column="11">digit4<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">!=<pos:position pos:line="29" pos:column="20"/></operator> <literal type="char" pos:line="29" pos:column="21">'='<pos:position pos:line="29" pos:column="24"/></literal></expr>)<pos:position pos:line="29" pos:column="25"/></condition><then pos:line="29" pos:column="25">
      <block pos:line="30" pos:column="7">{
	<expr_stmt><expr><operator pos:line="31" pos:column="9">*<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="10">out<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">++<pos:position pos:line="31" pos:column="15"/></operator> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <operator pos:line="31" pos:column="18">(<pos:position pos:line="31" pos:column="19"/></operator><operator pos:line="31" pos:column="19">(<pos:position pos:line="31" pos:column="20"/></operator><call><name pos:line="31" pos:column="20">base64val<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">digit3<pos:position pos:line="31" pos:column="36"/></name></expr></argument>)<pos:position pos:line="31" pos:column="37"/></argument_list></call> <operator pos:line="31" pos:column="38">&lt;&lt;<pos:position pos:line="31" pos:column="46"/></operator> <literal type="number" pos:line="31" pos:column="41">6<pos:position pos:line="31" pos:column="42"/></literal><operator pos:line="31" pos:column="42">)<pos:position pos:line="31" pos:column="43"/></operator> <operator pos:line="31" pos:column="44">&amp;<pos:position pos:line="31" pos:column="49"/></operator> <literal type="number" pos:line="31" pos:column="46">0xc0<pos:position pos:line="31" pos:column="50"/></literal><operator pos:line="31" pos:column="50">)<pos:position pos:line="31" pos:column="51"/></operator> <operator pos:line="31" pos:column="52">|<pos:position pos:line="31" pos:column="53"/></operator> <call><name pos:line="31" pos:column="54">base64val<pos:position pos:line="31" pos:column="63"/></name><argument_list pos:line="31" pos:column="63">(<argument><expr><name pos:line="31" pos:column="64">digit4<pos:position pos:line="31" pos:column="70"/></name></expr></argument>)<pos:position pos:line="31" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="72"/></expr_stmt>
	<expr_stmt><expr><name pos:line="32" pos:column="9">len<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">++<pos:position pos:line="32" pos:column="14"/></operator></expr>;<pos:position pos:line="32" pos:column="15"/></expr_stmt>
      }<pos:position pos:line="33" pos:column="8"/></block></then></if>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
  }<pos:position pos:line="35" pos:column="4"/></block>
  while <condition pos:line="36" pos:column="9">(<expr><operator pos:line="36" pos:column="10">*<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="11">in<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">&amp;&amp;<pos:position pos:line="36" pos:column="24"/></operator> <name pos:line="36" pos:column="17">digit4<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">!=<pos:position pos:line="36" pos:column="26"/></operator> <literal type="char" pos:line="36" pos:column="27">'='<pos:position pos:line="36" pos:column="30"/></literal></expr>)<pos:position pos:line="36" pos:column="31"/></condition>;<pos:position pos:line="36" pos:column="32"/></do>

  <return pos:line="38" pos:column="3">return <expr><name pos:line="38" pos:column="10">len<pos:position pos:line="38" pos:column="13"/></name></expr>;<pos:position pos:line="38" pos:column="14"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1043_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">external_body_handler<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">BODY<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">b<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">STATE<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">s<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">access_type<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">expiration<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">time_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">expire<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">access_type<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <call><name pos:line="7" pos:column="17">mutt_get_parameter<pos:position pos:line="7" pos:column="35"/></name> <argument_list pos:line="7" pos:column="36">(<argument><expr><literal type="string" pos:line="7" pos:column="37">"access-type"<pos:position pos:line="7" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="52">b<pos:position pos:line="7" pos:column="53"/></name><operator pos:line="7" pos:column="53">-&gt;<pos:position pos:line="7" pos:column="58"/></operator><name pos:line="7" pos:column="55">parameter<pos:position pos:line="7" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="66"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">access_type<pos:position pos:line="8" pos:column="19"/></name></expr>)<pos:position pos:line="8" pos:column="20"/></condition><then pos:line="8" pos:column="20">
  <block pos:line="9" pos:column="3">{
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">s<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">flags<pos:position pos:line="10" pos:column="17"/></name></name> <operator pos:line="10" pos:column="18">&amp;<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="20">MUTT_DISPLAY<pos:position pos:line="10" pos:column="32"/></name></expr>)<pos:position pos:line="10" pos:column="33"/></condition><then pos:line="10" pos:column="33">
    <block pos:line="11" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">state_mark_attach<pos:position pos:line="12" pos:column="24"/></name> <argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">s<pos:position pos:line="12" pos:column="27"/></name></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="13" pos:column="7">state_puts<pos:position pos:line="13" pos:column="17"/></name> <argument_list pos:line="13" pos:column="18">(<argument><expr><call><name pos:line="13" pos:column="19">_<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><literal type="string" pos:line="13" pos:column="21">"[-- Error: message/external-body has no access-type parameter --]\n"<pos:position pos:line="13" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="13" pos:column="93">s<pos:position pos:line="13" pos:column="94"/></name></expr></argument>)<pos:position pos:line="13" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="96"/></expr_stmt>
      <return pos:line="14" pos:column="7">return <expr><literal type="number" pos:line="14" pos:column="14">0<pos:position pos:line="14" pos:column="15"/></literal></expr>;<pos:position pos:line="14" pos:column="16"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then>
    <else pos:line="16" pos:column="5">else
      <block type="pseudo"><return pos:line="17" pos:column="7">return <expr><operator pos:line="17" pos:column="14">-<pos:position pos:line="17" pos:column="15"/></operator><literal type="number" pos:line="17" pos:column="15">1<pos:position pos:line="17" pos:column="16"/></literal></expr>;<pos:position pos:line="17" pos:column="17"/></return></block></else></if>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="20" pos:column="3">expiration<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <call><name pos:line="20" pos:column="16">mutt_get_parameter<pos:position pos:line="20" pos:column="34"/></name> <argument_list pos:line="20" pos:column="35">(<argument><expr><literal type="string" pos:line="20" pos:column="36">"expiration"<pos:position pos:line="20" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="50">b<pos:position pos:line="20" pos:column="51"/></name><operator pos:line="20" pos:column="51">-&gt;<pos:position pos:line="20" pos:column="56"/></operator><name pos:line="20" pos:column="53">parameter<pos:position pos:line="20" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="64"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">expiration<pos:position pos:line="21" pos:column="17"/></name></expr>)<pos:position pos:line="21" pos:column="18"/></condition><then pos:line="21" pos:column="18">
    <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="5">expire<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">mutt_parse_date<pos:position pos:line="22" pos:column="29"/></name> <argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">expiration<pos:position pos:line="22" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="43">NULL<pos:position pos:line="22" pos:column="47"/></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt></block></then>
  <else pos:line="23" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="5">expire<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <operator pos:line="24" pos:column="14">-<pos:position pos:line="24" pos:column="15"/></operator><literal type="number" pos:line="24" pos:column="15">1<pos:position pos:line="24" pos:column="16"/></literal></expr>;<pos:position pos:line="24" pos:column="17"/></expr_stmt></block></else></if>

  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><operator pos:line="26" pos:column="7">!<pos:position pos:line="26" pos:column="8"/></operator><call><name pos:line="26" pos:column="8">ascii_strcasecmp<pos:position pos:line="26" pos:column="24"/></name> <argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">access_type<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="39">"x-mutt-deleted"<pos:position pos:line="26" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="57"/></condition><then pos:line="26" pos:column="57">
  <block pos:line="27" pos:column="3">{
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name><name pos:line="28" pos:column="9">s<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">-&gt;<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="12">flags<pos:position pos:line="28" pos:column="17"/></name></name> <operator pos:line="28" pos:column="18">&amp;<pos:position pos:line="28" pos:column="23"/></operator> <operator pos:line="28" pos:column="20">(<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="21">MUTT_DISPLAY<pos:position pos:line="28" pos:column="33"/></name><operator pos:line="28" pos:column="33">|<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="34">MUTT_PRINTING<pos:position pos:line="28" pos:column="47"/></name><operator pos:line="28" pos:column="47">)<pos:position pos:line="28" pos:column="48"/></operator></expr>)<pos:position pos:line="28" pos:column="49"/></condition><then pos:line="28" pos:column="49">
    <block pos:line="29" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="30" pos:column="7">char<pos:position pos:line="30" pos:column="11"/></name> <modifier pos:line="30" pos:column="12">*<pos:position pos:line="30" pos:column="13"/></modifier></type><name pos:line="30" pos:column="13">length<pos:position pos:line="30" pos:column="19"/></name></decl>;<pos:position pos:line="30" pos:column="20"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="31" pos:column="7">char<pos:position pos:line="31" pos:column="11"/></name></type> <name><name pos:line="31" pos:column="12">pretty_size<pos:position pos:line="31" pos:column="23"/></name><index pos:line="31" pos:column="23">[<expr><literal type="number" pos:line="31" pos:column="24">10<pos:position pos:line="31" pos:column="26"/></literal></expr>]<pos:position pos:line="31" pos:column="27"/></index></name></decl>;<pos:position pos:line="31" pos:column="28"/></decl_stmt>
      
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">state_mark_attach<pos:position pos:line="33" pos:column="24"/></name> <argument_list pos:line="33" pos:column="25">(<argument><expr><name pos:line="33" pos:column="26">s<pos:position pos:line="33" pos:column="27"/></name></expr></argument>)<pos:position pos:line="33" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">state_printf<pos:position pos:line="34" pos:column="19"/></name> <argument_list pos:line="34" pos:column="20">(<argument><expr><name pos:line="34" pos:column="21">s<pos:position pos:line="34" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="24">_<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><literal type="string" pos:line="34" pos:column="26">"[-- This %s/%s attachment "<pos:position pos:line="34" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="55"/></argument_list></call></expr></argument>,
	       <argument><expr><call><name pos:line="35" pos:column="16">TYPE<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><name><name pos:line="35" pos:column="21">b<pos:position pos:line="35" pos:column="22"/></name><operator pos:line="35" pos:column="22">-&gt;<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="24">parts<pos:position pos:line="35" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="30"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="32">b<pos:position pos:line="35" pos:column="33"/></name><operator pos:line="35" pos:column="33">-&gt;<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="35">parts<pos:position pos:line="35" pos:column="40"/></name><operator pos:line="35" pos:column="40">-&gt;<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="42">subtype<pos:position pos:line="35" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name pos:line="36" pos:column="7">length<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <call><name pos:line="36" pos:column="16">mutt_get_parameter<pos:position pos:line="36" pos:column="34"/></name> <argument_list pos:line="36" pos:column="35">(<argument><expr><literal type="string" pos:line="36" pos:column="36">"length"<pos:position pos:line="36" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="46">b<pos:position pos:line="36" pos:column="47"/></name><operator pos:line="36" pos:column="47">-&gt;<pos:position pos:line="36" pos:column="52"/></operator><name pos:line="36" pos:column="49">parameter<pos:position pos:line="36" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="60"/></expr_stmt>
      <if pos:line="37" pos:column="7">if <condition pos:line="37" pos:column="10">(<expr><name pos:line="37" pos:column="11">length<pos:position pos:line="37" pos:column="17"/></name></expr>)<pos:position pos:line="37" pos:column="18"/></condition><then pos:line="37" pos:column="18">
      <block pos:line="38" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="39" pos:column="9">mutt_pretty_size<pos:position pos:line="39" pos:column="25"/></name> <argument_list pos:line="39" pos:column="26">(<argument><expr><name pos:line="39" pos:column="27">pretty_size<pos:position pos:line="39" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="40">sizeof <argument_list pos:line="39" pos:column="47">(<argument><expr><name pos:line="39" pos:column="48">pretty_size<pos:position pos:line="39" pos:column="59"/></name></expr></argument>)<pos:position pos:line="39" pos:column="60"/></argument_list></sizeof></expr></argument>,
			  <argument><expr><call><name pos:line="40" pos:column="27">strtol<pos:position pos:line="40" pos:column="33"/></name> <argument_list pos:line="40" pos:column="34">(<argument><expr><name pos:line="40" pos:column="35">length<pos:position pos:line="40" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="43">NULL<pos:position pos:line="40" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="49">10<pos:position pos:line="40" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">state_printf<pos:position pos:line="41" pos:column="21"/></name> <argument_list pos:line="41" pos:column="22">(<argument><expr><name pos:line="41" pos:column="23">s<pos:position pos:line="41" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="26">_<pos:position pos:line="41" pos:column="27"/></name><argument_list pos:line="41" pos:column="27">(<argument><expr><literal type="string" pos:line="41" pos:column="28">"(size %s bytes) "<pos:position pos:line="41" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="41" pos:column="49">pretty_size<pos:position pos:line="41" pos:column="60"/></name></expr></argument>)<pos:position pos:line="41" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="62"/></expr_stmt>
      }<pos:position pos:line="42" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="43" pos:column="7">state_puts<pos:position pos:line="43" pos:column="17"/></name> <argument_list pos:line="43" pos:column="18">(<argument><expr><call><name pos:line="43" pos:column="19">_<pos:position pos:line="43" pos:column="20"/></name><argument_list pos:line="43" pos:column="20">(<argument><expr><literal type="string" pos:line="43" pos:column="21">"has been deleted --]\n"<pos:position pos:line="43" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="43" pos:column="48">s<pos:position pos:line="43" pos:column="49"/></name></expr></argument>)<pos:position pos:line="43" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="51"/></expr_stmt>

      <if pos:line="45" pos:column="7">if <condition pos:line="45" pos:column="10">(<expr><name pos:line="45" pos:column="11">expire<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">!=<pos:position pos:line="45" pos:column="20"/></operator> <operator pos:line="45" pos:column="21">-<pos:position pos:line="45" pos:column="22"/></operator><literal type="number" pos:line="45" pos:column="22">1<pos:position pos:line="45" pos:column="23"/></literal></expr>)<pos:position pos:line="45" pos:column="24"/></condition><then pos:line="45" pos:column="24">
      <block pos:line="46" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">state_mark_attach<pos:position pos:line="47" pos:column="26"/></name> <argument_list pos:line="47" pos:column="27">(<argument><expr><name pos:line="47" pos:column="28">s<pos:position pos:line="47" pos:column="29"/></name></expr></argument>)<pos:position pos:line="47" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">state_printf<pos:position pos:line="48" pos:column="21"/></name> <argument_list pos:line="48" pos:column="22">(<argument><expr><name pos:line="48" pos:column="23">s<pos:position pos:line="48" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="26">_<pos:position pos:line="48" pos:column="27"/></name><argument_list pos:line="48" pos:column="27">(<argument><expr><literal type="string" pos:line="48" pos:column="28">"[-- on %s --]\n"<pos:position pos:line="48" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="48" pos:column="48">expiration<pos:position pos:line="48" pos:column="58"/></name></expr></argument>)<pos:position pos:line="48" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="60"/></expr_stmt>
      }<pos:position pos:line="49" pos:column="8"/></block></then></if>
      <if pos:line="50" pos:column="7">if <condition pos:line="50" pos:column="10">(<expr><name><name pos:line="50" pos:column="11">b<pos:position pos:line="50" pos:column="12"/></name><operator pos:line="50" pos:column="12">-&gt;<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="14">parts<pos:position pos:line="50" pos:column="19"/></name><operator pos:line="50" pos:column="19">-&gt;<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="21">filename<pos:position pos:line="50" pos:column="29"/></name></name></expr>)<pos:position pos:line="50" pos:column="30"/></condition><then pos:line="50" pos:column="30">
      <block pos:line="51" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="52" pos:column="9">state_mark_attach<pos:position pos:line="52" pos:column="26"/></name> <argument_list pos:line="52" pos:column="27">(<argument><expr><name pos:line="52" pos:column="28">s<pos:position pos:line="52" pos:column="29"/></name></expr></argument>)<pos:position pos:line="52" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="53" pos:column="9">state_printf<pos:position pos:line="53" pos:column="21"/></name> <argument_list pos:line="53" pos:column="22">(<argument><expr><name pos:line="53" pos:column="23">s<pos:position pos:line="53" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="53" pos:column="26">_<pos:position pos:line="53" pos:column="27"/></name><argument_list pos:line="53" pos:column="27">(<argument><expr><literal type="string" pos:line="53" pos:column="28">"[-- name: %s --]\n"<pos:position pos:line="53" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="51">b<pos:position pos:line="53" pos:column="52"/></name><operator pos:line="53" pos:column="52">-&gt;<pos:position pos:line="53" pos:column="57"/></operator><name pos:line="53" pos:column="54">parts<pos:position pos:line="53" pos:column="59"/></name><operator pos:line="53" pos:column="59">-&gt;<pos:position pos:line="53" pos:column="64"/></operator><name pos:line="53" pos:column="61">filename<pos:position pos:line="53" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="71"/></expr_stmt>
      }<pos:position pos:line="54" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="56" pos:column="7">mutt_copy_hdr<pos:position pos:line="56" pos:column="20"/></name> <argument_list pos:line="56" pos:column="21">(<argument><expr><name><name pos:line="56" pos:column="22">s<pos:position pos:line="56" pos:column="23"/></name><operator pos:line="56" pos:column="23">-&gt;<pos:position pos:line="56" pos:column="28"/></operator><name pos:line="56" pos:column="25">fpin<pos:position pos:line="56" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="31">s<pos:position pos:line="56" pos:column="32"/></name><operator pos:line="56" pos:column="32">-&gt;<pos:position pos:line="56" pos:column="37"/></operator><name pos:line="56" pos:column="34">fpout<pos:position pos:line="56" pos:column="39"/></name></name></expr></argument>, <argument><expr><call><name pos:line="56" pos:column="41">ftello<pos:position pos:line="56" pos:column="47"/></name> <argument_list pos:line="56" pos:column="48">(<argument><expr><name><name pos:line="56" pos:column="49">s<pos:position pos:line="56" pos:column="50"/></name><operator pos:line="56" pos:column="50">-&gt;<pos:position pos:line="56" pos:column="55"/></operator><name pos:line="56" pos:column="52">fpin<pos:position pos:line="56" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="59">b<pos:position pos:line="56" pos:column="60"/></name><operator pos:line="56" pos:column="60">-&gt;<pos:position pos:line="56" pos:column="65"/></operator><name pos:line="56" pos:column="62">parts<pos:position pos:line="56" pos:column="67"/></name><operator pos:line="56" pos:column="67">-&gt;<pos:position pos:line="56" pos:column="72"/></operator><name pos:line="56" pos:column="69">offset<pos:position pos:line="56" pos:column="75"/></name></name></expr></argument>,
		     <argument><expr><operator pos:line="57" pos:column="22">(<pos:position pos:line="57" pos:column="23"/></operator><ternary><condition><expr><call><name pos:line="57" pos:column="23">option<pos:position pos:line="57" pos:column="29"/></name> <argument_list pos:line="57" pos:column="30">(<argument><expr><name pos:line="57" pos:column="31">OPTWEED<pos:position pos:line="57" pos:column="38"/></name></expr></argument>)<pos:position pos:line="57" pos:column="39"/></argument_list></call></expr> ?<pos:position pos:line="57" pos:column="41"/></condition><then pos:line="57" pos:column="41"> <expr><operator pos:line="57" pos:column="42">(<pos:position pos:line="57" pos:column="43"/></operator><name pos:line="57" pos:column="43">CH_WEED<pos:position pos:line="57" pos:column="50"/></name> <operator pos:line="57" pos:column="51">|<pos:position pos:line="57" pos:column="52"/></operator> <name pos:line="57" pos:column="53">CH_REORDER<pos:position pos:line="57" pos:column="63"/></name><operator pos:line="57" pos:column="63">)<pos:position pos:line="57" pos:column="64"/></operator></expr> <pos:position pos:line="57" pos:column="65"/></then><else pos:line="57" pos:column="65">: <expr><literal type="number" pos:line="57" pos:column="67">0<pos:position pos:line="57" pos:column="68"/></literal></expr></else></ternary><operator pos:line="57" pos:column="68">)<pos:position pos:line="57" pos:column="69"/></operator> <operator pos:line="57" pos:column="70">|<pos:position pos:line="57" pos:column="71"/></operator>
		     <name pos:line="58" pos:column="22">CH_DECODE<pos:position pos:line="58" pos:column="31"/></name></expr></argument> , <argument><expr><name pos:line="58" pos:column="34">NULL<pos:position pos:line="58" pos:column="38"/></name></expr></argument>)<pos:position pos:line="58" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>
  }<pos:position pos:line="60" pos:column="4"/></block></then>
  <elseif pos:line="61" pos:column="3">else <if pos:line="61" pos:column="8">if<condition pos:line="61" pos:column="10">(<expr><name pos:line="61" pos:column="11">expiration<pos:position pos:line="61" pos:column="21"/></name> <operator pos:line="61" pos:column="22">&amp;&amp;<pos:position pos:line="61" pos:column="32"/></operator> <name pos:line="61" pos:column="25">expire<pos:position pos:line="61" pos:column="31"/></name> <operator pos:line="61" pos:column="32">&lt;<pos:position pos:line="61" pos:column="36"/></operator> <call><name pos:line="61" pos:column="34">time<pos:position pos:line="61" pos:column="38"/></name><argument_list pos:line="61" pos:column="38">(<argument><expr><name pos:line="61" pos:column="39">NULL<pos:position pos:line="61" pos:column="43"/></name></expr></argument>)<pos:position pos:line="61" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="45"/></condition><then pos:line="61" pos:column="45">
  <block pos:line="62" pos:column="3">{
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><name><name pos:line="63" pos:column="9">s<pos:position pos:line="63" pos:column="10"/></name><operator pos:line="63" pos:column="10">-&gt;<pos:position pos:line="63" pos:column="15"/></operator><name pos:line="63" pos:column="12">flags<pos:position pos:line="63" pos:column="17"/></name></name> <operator pos:line="63" pos:column="18">&amp;<pos:position pos:line="63" pos:column="23"/></operator> <name pos:line="63" pos:column="20">MUTT_DISPLAY<pos:position pos:line="63" pos:column="32"/></name></expr>)<pos:position pos:line="63" pos:column="33"/></condition><then pos:line="63" pos:column="33">
    <block pos:line="64" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="65" pos:column="7">state_mark_attach<pos:position pos:line="65" pos:column="24"/></name> <argument_list pos:line="65" pos:column="25">(<argument><expr><name pos:line="65" pos:column="26">s<pos:position pos:line="65" pos:column="27"/></name></expr></argument>)<pos:position pos:line="65" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="66" pos:column="7">state_printf<pos:position pos:line="66" pos:column="19"/></name> <argument_list pos:line="66" pos:column="20">(<argument><expr><name pos:line="66" pos:column="21">s<pos:position pos:line="66" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="66" pos:column="24">_<pos:position pos:line="66" pos:column="25"/></name><argument_list pos:line="66" pos:column="25">(<argument><expr><literal type="string" pos:line="66" pos:column="26">"[-- This %s/%s attachment is not included, --]\n"<pos:position pos:line="66" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="77"/></argument_list></call></expr></argument>,
		    <argument><expr><call><name pos:line="67" pos:column="21">TYPE<pos:position pos:line="67" pos:column="25"/></name><argument_list pos:line="67" pos:column="25">(<argument><expr><name><name pos:line="67" pos:column="26">b<pos:position pos:line="67" pos:column="27"/></name><operator pos:line="67" pos:column="27">-&gt;<pos:position pos:line="67" pos:column="32"/></operator><name pos:line="67" pos:column="29">parts<pos:position pos:line="67" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="37">b<pos:position pos:line="67" pos:column="38"/></name><operator pos:line="67" pos:column="38">-&gt;<pos:position pos:line="67" pos:column="43"/></operator><name pos:line="67" pos:column="40">parts<pos:position pos:line="67" pos:column="45"/></name><operator pos:line="67" pos:column="45">-&gt;<pos:position pos:line="67" pos:column="50"/></operator><name pos:line="67" pos:column="47">subtype<pos:position pos:line="67" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="56"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="68" pos:column="7">state_attach_puts<pos:position pos:line="68" pos:column="24"/></name> <argument_list pos:line="68" pos:column="25">(<argument><expr><call><name pos:line="68" pos:column="26">_<pos:position pos:line="68" pos:column="27"/></name><argument_list pos:line="68" pos:column="27">(<argument><expr><literal type="string" pos:line="68" pos:column="28">"[-- and the indicated external source has --]\n"<pos:position pos:line="68" pos:column="77"/></literal>
			   <literal type="string" pos:line="69" pos:column="28">"[-- expired. --]\n"<pos:position pos:line="69" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="69" pos:column="51">s<pos:position pos:line="69" pos:column="52"/></name></expr></argument>)<pos:position pos:line="69" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="54"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="71" pos:column="7">mutt_copy_hdr<pos:position pos:line="71" pos:column="20"/></name><argument_list pos:line="71" pos:column="20">(<argument><expr><name><name pos:line="71" pos:column="21">s<pos:position pos:line="71" pos:column="22"/></name><operator pos:line="71" pos:column="22">-&gt;<pos:position pos:line="71" pos:column="27"/></operator><name pos:line="71" pos:column="24">fpin<pos:position pos:line="71" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="30">s<pos:position pos:line="71" pos:column="31"/></name><operator pos:line="71" pos:column="31">-&gt;<pos:position pos:line="71" pos:column="36"/></operator><name pos:line="71" pos:column="33">fpout<pos:position pos:line="71" pos:column="38"/></name></name></expr></argument>, <argument><expr><call><name pos:line="71" pos:column="40">ftello<pos:position pos:line="71" pos:column="46"/></name> <argument_list pos:line="71" pos:column="47">(<argument><expr><name><name pos:line="71" pos:column="48">s<pos:position pos:line="71" pos:column="49"/></name><operator pos:line="71" pos:column="49">-&gt;<pos:position pos:line="71" pos:column="54"/></operator><name pos:line="71" pos:column="51">fpin<pos:position pos:line="71" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="58">b<pos:position pos:line="71" pos:column="59"/></name><operator pos:line="71" pos:column="59">-&gt;<pos:position pos:line="71" pos:column="64"/></operator><name pos:line="71" pos:column="61">parts<pos:position pos:line="71" pos:column="66"/></name><operator pos:line="71" pos:column="66">-&gt;<pos:position pos:line="71" pos:column="71"/></operator><name pos:line="71" pos:column="68">offset<pos:position pos:line="71" pos:column="74"/></name></name></expr></argument>,
		    <argument><expr><operator pos:line="72" pos:column="21">(<pos:position pos:line="72" pos:column="22"/></operator><ternary><condition><expr><call><name pos:line="72" pos:column="22">option<pos:position pos:line="72" pos:column="28"/></name> <argument_list pos:line="72" pos:column="29">(<argument><expr><name pos:line="72" pos:column="30">OPTWEED<pos:position pos:line="72" pos:column="37"/></name></expr></argument>)<pos:position pos:line="72" pos:column="38"/></argument_list></call></expr> ?<pos:position pos:line="72" pos:column="40"/></condition><then pos:line="72" pos:column="40"> <expr><operator pos:line="72" pos:column="41">(<pos:position pos:line="72" pos:column="42"/></operator><name pos:line="72" pos:column="42">CH_WEED<pos:position pos:line="72" pos:column="49"/></name> <operator pos:line="72" pos:column="50">|<pos:position pos:line="72" pos:column="51"/></operator> <name pos:line="72" pos:column="52">CH_REORDER<pos:position pos:line="72" pos:column="62"/></name><operator pos:line="72" pos:column="62">)<pos:position pos:line="72" pos:column="63"/></operator></expr> <pos:position pos:line="72" pos:column="64"/></then><else pos:line="72" pos:column="64">: <expr><literal type="number" pos:line="72" pos:column="66">0<pos:position pos:line="72" pos:column="67"/></literal></expr></else></ternary><operator pos:line="72" pos:column="67">)<pos:position pos:line="72" pos:column="68"/></operator> <operator pos:line="72" pos:column="69">|<pos:position pos:line="72" pos:column="70"/></operator>
		    <name pos:line="73" pos:column="21">CH_DECODE<pos:position pos:line="73" pos:column="30"/></name> <operator pos:line="73" pos:column="31">|<pos:position pos:line="73" pos:column="32"/></operator> <name pos:line="73" pos:column="33">CH_DISPLAY<pos:position pos:line="73" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="45">NULL<pos:position pos:line="73" pos:column="49"/></name></expr></argument>)<pos:position pos:line="73" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if>
  }<pos:position pos:line="75" pos:column="4"/></block></then></if></elseif>
  <else pos:line="76" pos:column="3">else
  <block pos:line="77" pos:column="3">{
    <if pos:line="78" pos:column="5">if <condition pos:line="78" pos:column="8">(<expr><name><name pos:line="78" pos:column="9">s<pos:position pos:line="78" pos:column="10"/></name><operator pos:line="78" pos:column="10">-&gt;<pos:position pos:line="78" pos:column="15"/></operator><name pos:line="78" pos:column="12">flags<pos:position pos:line="78" pos:column="17"/></name></name> <operator pos:line="78" pos:column="18">&amp;<pos:position pos:line="78" pos:column="23"/></operator> <name pos:line="78" pos:column="20">MUTT_DISPLAY<pos:position pos:line="78" pos:column="32"/></name></expr>)<pos:position pos:line="78" pos:column="33"/></condition><then pos:line="78" pos:column="33">
    <block pos:line="79" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="80" pos:column="7">state_mark_attach<pos:position pos:line="80" pos:column="24"/></name> <argument_list pos:line="80" pos:column="25">(<argument><expr><name pos:line="80" pos:column="26">s<pos:position pos:line="80" pos:column="27"/></name></expr></argument>)<pos:position pos:line="80" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="81" pos:column="7">state_printf<pos:position pos:line="81" pos:column="19"/></name> <argument_list pos:line="81" pos:column="20">(<argument><expr><name pos:line="81" pos:column="21">s<pos:position pos:line="81" pos:column="22"/></name></expr></argument>,
		    <argument><expr><call><name pos:line="82" pos:column="21">_<pos:position pos:line="82" pos:column="22"/></name><argument_list pos:line="82" pos:column="22">(<argument><expr><literal type="string" pos:line="82" pos:column="23">"[-- This %s/%s attachment is not included, --]\n"<pos:position pos:line="82" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="74"/></argument_list></call></expr></argument>,
		    <argument><expr><call><name pos:line="83" pos:column="21">TYPE<pos:position pos:line="83" pos:column="25"/></name> <argument_list pos:line="83" pos:column="26">(<argument><expr><name><name pos:line="83" pos:column="27">b<pos:position pos:line="83" pos:column="28"/></name><operator pos:line="83" pos:column="28">-&gt;<pos:position pos:line="83" pos:column="33"/></operator><name pos:line="83" pos:column="30">parts<pos:position pos:line="83" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="38">b<pos:position pos:line="83" pos:column="39"/></name><operator pos:line="83" pos:column="39">-&gt;<pos:position pos:line="83" pos:column="44"/></operator><name pos:line="83" pos:column="41">parts<pos:position pos:line="83" pos:column="46"/></name><operator pos:line="83" pos:column="46">-&gt;<pos:position pos:line="83" pos:column="51"/></operator><name pos:line="83" pos:column="48">subtype<pos:position pos:line="83" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="57"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="84" pos:column="7">state_mark_attach<pos:position pos:line="84" pos:column="24"/></name> <argument_list pos:line="84" pos:column="25">(<argument><expr><name pos:line="84" pos:column="26">s<pos:position pos:line="84" pos:column="27"/></name></expr></argument>)<pos:position pos:line="84" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="85" pos:column="7">state_printf<pos:position pos:line="85" pos:column="19"/></name> <argument_list pos:line="85" pos:column="20">(<argument><expr><name pos:line="85" pos:column="21">s<pos:position pos:line="85" pos:column="22"/></name></expr></argument>, 
		    <argument><expr><call><name pos:line="86" pos:column="21">_<pos:position pos:line="86" pos:column="22"/></name><argument_list pos:line="86" pos:column="22">(<argument><expr><literal type="string" pos:line="86" pos:column="23">"[-- and the indicated access-type %s is unsupported --]\n"<pos:position pos:line="86" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="83"/></argument_list></call></expr></argument>,
		    <argument><expr><name pos:line="87" pos:column="21">access_type<pos:position pos:line="87" pos:column="32"/></name></expr></argument>)<pos:position pos:line="87" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="88" pos:column="7">mutt_copy_hdr<pos:position pos:line="88" pos:column="20"/></name> <argument_list pos:line="88" pos:column="21">(<argument><expr><name><name pos:line="88" pos:column="22">s<pos:position pos:line="88" pos:column="23"/></name><operator pos:line="88" pos:column="23">-&gt;<pos:position pos:line="88" pos:column="28"/></operator><name pos:line="88" pos:column="25">fpin<pos:position pos:line="88" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="31">s<pos:position pos:line="88" pos:column="32"/></name><operator pos:line="88" pos:column="32">-&gt;<pos:position pos:line="88" pos:column="37"/></operator><name pos:line="88" pos:column="34">fpout<pos:position pos:line="88" pos:column="39"/></name></name></expr></argument>, <argument><expr><call><name pos:line="88" pos:column="41">ftello<pos:position pos:line="88" pos:column="47"/></name> <argument_list pos:line="88" pos:column="48">(<argument><expr><name><name pos:line="88" pos:column="49">s<pos:position pos:line="88" pos:column="50"/></name><operator pos:line="88" pos:column="50">-&gt;<pos:position pos:line="88" pos:column="55"/></operator><name pos:line="88" pos:column="52">fpin<pos:position pos:line="88" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="59">b<pos:position pos:line="88" pos:column="60"/></name><operator pos:line="88" pos:column="60">-&gt;<pos:position pos:line="88" pos:column="65"/></operator><name pos:line="88" pos:column="62">parts<pos:position pos:line="88" pos:column="67"/></name><operator pos:line="88" pos:column="67">-&gt;<pos:position pos:line="88" pos:column="72"/></operator><name pos:line="88" pos:column="69">offset<pos:position pos:line="88" pos:column="75"/></name></name></expr></argument>,
		     <argument><expr><operator pos:line="89" pos:column="22">(<pos:position pos:line="89" pos:column="23"/></operator><ternary><condition><expr><call><name pos:line="89" pos:column="23">option<pos:position pos:line="89" pos:column="29"/></name> <argument_list pos:line="89" pos:column="30">(<argument><expr><name pos:line="89" pos:column="31">OPTWEED<pos:position pos:line="89" pos:column="38"/></name></expr></argument>)<pos:position pos:line="89" pos:column="39"/></argument_list></call></expr> ?<pos:position pos:line="89" pos:column="41"/></condition><then pos:line="89" pos:column="41"> <expr><operator pos:line="89" pos:column="42">(<pos:position pos:line="89" pos:column="43"/></operator><name pos:line="89" pos:column="43">CH_WEED<pos:position pos:line="89" pos:column="50"/></name> <operator pos:line="89" pos:column="51">|<pos:position pos:line="89" pos:column="52"/></operator> <name pos:line="89" pos:column="53">CH_REORDER<pos:position pos:line="89" pos:column="63"/></name><operator pos:line="89" pos:column="63">)<pos:position pos:line="89" pos:column="64"/></operator></expr> <pos:position pos:line="89" pos:column="65"/></then><else pos:line="89" pos:column="65">: <expr><literal type="number" pos:line="89" pos:column="67">0<pos:position pos:line="89" pos:column="68"/></literal></expr></else></ternary><operator pos:line="89" pos:column="68">)<pos:position pos:line="89" pos:column="69"/></operator> <operator pos:line="89" pos:column="70">|<pos:position pos:line="89" pos:column="71"/></operator>
		     <name pos:line="90" pos:column="22">CH_DECODE<pos:position pos:line="90" pos:column="31"/></name> <operator pos:line="90" pos:column="32">|<pos:position pos:line="90" pos:column="33"/></operator> <name pos:line="90" pos:column="34">CH_DISPLAY<pos:position pos:line="90" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="46">NULL<pos:position pos:line="90" pos:column="50"/></name></expr></argument>)<pos:position pos:line="90" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>
  }<pos:position pos:line="92" pos:column="4"/></block></else></if>
  
  <return pos:line="94" pos:column="3">return <expr><literal type="number" pos:line="94" pos:column="10">0<pos:position pos:line="94" pos:column="11"/></literal></expr>;<pos:position pos:line="94" pos:column="12"/></return>
}<pos:position pos:line="95" pos:column="2"/></block></function></unit>

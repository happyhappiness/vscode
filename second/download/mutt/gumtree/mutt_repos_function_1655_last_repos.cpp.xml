<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1655_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_is_application_smime<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">BODY<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">m<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">t<pos:position pos:line="3" pos:column="10"/></name><init pos:line="3" pos:column="10">=<expr><name pos:line="3" pos:column="11">NULL<pos:position pos:line="3" pos:column="15"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">len<pos:position pos:line="4" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="12">complain<pos:position pos:line="4" pos:column="20"/></name><init pos:line="4" pos:column="20">=<expr><literal type="number" pos:line="4" pos:column="21">0<pos:position pos:line="4" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>

  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><operator pos:line="6" pos:column="6">!<pos:position pos:line="6" pos:column="7"/></operator><name pos:line="6" pos:column="7">m<pos:position pos:line="6" pos:column="8"/></name></expr>)<pos:position pos:line="6" pos:column="9"/></condition><then pos:line="6" pos:column="9">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><literal type="number" pos:line="7" pos:column="12">0<pos:position pos:line="7" pos:column="13"/></literal></expr>;<pos:position pos:line="7" pos:column="14"/></return></block></then></if>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">(<pos:position pos:line="9" pos:column="8"/></operator><name><name pos:line="9" pos:column="8">m<pos:position pos:line="9" pos:column="9"/></name><operator pos:line="9" pos:column="9">-&gt;<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="11">type<pos:position pos:line="9" pos:column="15"/></name></name> <operator pos:line="9" pos:column="16">&amp;<pos:position pos:line="9" pos:column="21"/></operator> <name pos:line="9" pos:column="18">TYPEAPPLICATION<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">)<pos:position pos:line="9" pos:column="34"/></operator> <operator pos:line="9" pos:column="35">&amp;&amp;<pos:position pos:line="9" pos:column="45"/></operator> <name><name pos:line="9" pos:column="38">m<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">-&gt;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="41">subtype<pos:position pos:line="9" pos:column="48"/></name></name></expr>)<pos:position pos:line="9" pos:column="49"/></condition><then pos:line="9" pos:column="49">
  <block pos:line="10" pos:column="3">{
    <comment type="block" pos:line="11" pos:column="5">/* S/MIME MIME types don't need x- anymore, see RFC2311 */</comment>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><call><name pos:line="12" pos:column="10">ascii_strcasecmp<pos:position pos:line="12" pos:column="26"/></name> <argument_list pos:line="12" pos:column="27">(<argument><expr><name><name pos:line="12" pos:column="28">m<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">subtype<pos:position pos:line="12" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="40">"x-pkcs7-mime"<pos:position pos:line="12" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call> <operator pos:line="12" pos:column="56">||<pos:position pos:line="12" pos:column="58"/></operator>
	<operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><call><name pos:line="13" pos:column="10">ascii_strcasecmp<pos:position pos:line="13" pos:column="26"/></name> <argument_list pos:line="13" pos:column="27">(<argument><expr><name><name pos:line="13" pos:column="28">m<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">-&gt;<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="31">subtype<pos:position pos:line="13" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="40">"pkcs7-mime"<pos:position pos:line="13" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="54"/></condition><then pos:line="13" pos:column="54">
    <block pos:line="14" pos:column="5">{
      <if pos:line="15" pos:column="7">if <condition pos:line="15" pos:column="10">(<expr><operator pos:line="15" pos:column="11">(<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">t<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <call><name pos:line="15" pos:column="16">mutt_get_parameter<pos:position pos:line="15" pos:column="34"/></name> <argument_list pos:line="15" pos:column="35">(<argument><expr><literal type="string" pos:line="15" pos:column="36">"smime-type"<pos:position pos:line="15" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="50">m<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">-&gt;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="53">parameter<pos:position pos:line="15" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call><operator pos:line="15" pos:column="63">)<pos:position pos:line="15" pos:column="64"/></operator></expr>)<pos:position pos:line="15" pos:column="65"/></condition><then pos:line="15" pos:column="65">
      <block pos:line="16" pos:column="7">{
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><call><name pos:line="17" pos:column="14">ascii_strcasecmp<pos:position pos:line="17" pos:column="30"/></name> <argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">t<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="35">"enveloped-data"<pos:position pos:line="17" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="53"/></condition><then pos:line="17" pos:column="53">
	  <block type="pseudo"><return pos:line="18" pos:column="11">return <expr><name pos:line="18" pos:column="18">SMIMEENCRYPT<pos:position pos:line="18" pos:column="30"/></name></expr>;<pos:position pos:line="18" pos:column="31"/></return></block></then>
	<elseif pos:line="19" pos:column="9">else <if pos:line="19" pos:column="14">if <condition pos:line="19" pos:column="17">(<expr><operator pos:line="19" pos:column="18">!<pos:position pos:line="19" pos:column="19"/></operator><call><name pos:line="19" pos:column="19">ascii_strcasecmp<pos:position pos:line="19" pos:column="35"/></name> <argument_list pos:line="19" pos:column="36">(<argument><expr><name pos:line="19" pos:column="37">t<pos:position pos:line="19" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="40">"signed-data"<pos:position pos:line="19" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="55"/></condition><then pos:line="19" pos:column="55">
	  <block type="pseudo"><return pos:line="20" pos:column="11">return <expr><operator pos:line="20" pos:column="18">(<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="19">SMIMESIGN<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">|<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="29">SMIMEOPAQUE<pos:position pos:line="20" pos:column="40"/></name><operator pos:line="20" pos:column="40">)<pos:position pos:line="20" pos:column="41"/></operator></expr>;<pos:position pos:line="20" pos:column="42"/></return></block></then></if></elseif>
	<else pos:line="21" pos:column="9">else <block type="pseudo"><return pos:line="21" pos:column="14">return <expr><literal type="number" pos:line="21" pos:column="21">0<pos:position pos:line="21" pos:column="22"/></literal></expr>;<pos:position pos:line="21" pos:column="23"/></return></block></else></if>
      }<pos:position pos:line="22" pos:column="8"/></block></then></if>
      <comment type="block" pos:line="23" pos:column="7">/* Netscape 4.7 uses 
       * Content-Description: S/MIME Encrypted Message
       * instead of Content-Type parameter
       */</comment>
      <if pos:line="27" pos:column="7">if <condition pos:line="27" pos:column="10">(<expr><operator pos:line="27" pos:column="11">!<pos:position pos:line="27" pos:column="12"/></operator><call><name pos:line="27" pos:column="12">ascii_strcasecmp<pos:position pos:line="27" pos:column="28"/></name> <argument_list pos:line="27" pos:column="29">(<argument><expr><name><name pos:line="27" pos:column="30">m<pos:position pos:line="27" pos:column="31"/></name><operator pos:line="27" pos:column="31">-&gt;<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="33">description<pos:position pos:line="27" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="46">"S/MIME Encrypted Message"<pos:position pos:line="27" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="74"/></condition><then pos:line="27" pos:column="74">
	<block type="pseudo"><return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">SMIMEENCRYPT<pos:position pos:line="28" pos:column="28"/></name></expr>;<pos:position pos:line="28" pos:column="29"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="29" pos:column="7">complain<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <literal type="number" pos:line="29" pos:column="18">1<pos:position pos:line="29" pos:column="19"/></literal></expr>;<pos:position pos:line="29" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then>
    <elseif pos:line="31" pos:column="5">else <if pos:line="31" pos:column="10">if <condition pos:line="31" pos:column="13">(<expr><call><name pos:line="31" pos:column="14">ascii_strcasecmp<pos:position pos:line="31" pos:column="30"/></name> <argument_list pos:line="31" pos:column="31">(<argument><expr><name><name pos:line="31" pos:column="32">m<pos:position pos:line="31" pos:column="33"/></name><operator pos:line="31" pos:column="33">-&gt;<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="35">subtype<pos:position pos:line="31" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="44">"octet-stream"<pos:position pos:line="31" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="60"/></condition><then pos:line="31" pos:column="60">
      <block type="pseudo"><return pos:line="32" pos:column="7">return <expr><literal type="number" pos:line="32" pos:column="14">0<pos:position pos:line="32" pos:column="15"/></literal></expr>;<pos:position pos:line="32" pos:column="16"/></return></block></then></if></elseif></if>

    <expr_stmt><expr><name pos:line="34" pos:column="5">t<pos:position pos:line="34" pos:column="6"/></name> <operator pos:line="34" pos:column="7">=<pos:position pos:line="34" pos:column="8"/></operator> <call><name pos:line="34" pos:column="9">mutt_get_parameter<pos:position pos:line="34" pos:column="27"/></name> <argument_list pos:line="34" pos:column="28">(<argument><expr><literal type="string" pos:line="34" pos:column="29">"name"<pos:position pos:line="34" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="37">m<pos:position pos:line="34" pos:column="38"/></name><operator pos:line="34" pos:column="38">-&gt;<pos:position pos:line="34" pos:column="43"/></operator><name pos:line="34" pos:column="40">parameter<pos:position pos:line="34" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="51"/></expr_stmt>

    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><operator pos:line="36" pos:column="9">!<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">t<pos:position pos:line="36" pos:column="11"/></name></expr>)<pos:position pos:line="36" pos:column="12"/></condition><then pos:line="36" pos:column="12"> <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="13">t<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <name><name pos:line="36" pos:column="17">m<pos:position pos:line="36" pos:column="18"/></name><operator pos:line="36" pos:column="18">-&gt;<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="20">d_filename<pos:position pos:line="36" pos:column="30"/></name></name></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt></block></then></if>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><operator pos:line="37" pos:column="9">!<pos:position pos:line="37" pos:column="10"/></operator><name pos:line="37" pos:column="10">t<pos:position pos:line="37" pos:column="11"/></name></expr>)<pos:position pos:line="37" pos:column="12"/></condition><then pos:line="37" pos:column="12"> <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="13">t<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <name><name pos:line="37" pos:column="17">m<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">-&gt;<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="20">filename<pos:position pos:line="37" pos:column="28"/></name></name></expr>;<pos:position pos:line="37" pos:column="29"/></expr_stmt></block></then></if>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><operator pos:line="38" pos:column="9">!<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="10">t<pos:position pos:line="38" pos:column="11"/></name></expr>)<pos:position pos:line="38" pos:column="12"/></condition><then pos:line="38" pos:column="12"> 
    <block pos:line="39" pos:column="5">{
      <if pos:line="40" pos:column="7">if <condition pos:line="40" pos:column="10">(<expr><name pos:line="40" pos:column="11">complain<pos:position pos:line="40" pos:column="19"/></name></expr>)<pos:position pos:line="40" pos:column="20"/></condition><then pos:line="40" pos:column="20">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="9">mutt_message<pos:position pos:line="41" pos:column="21"/></name> <argument_list pos:line="41" pos:column="22">(<argument><expr><call><name pos:line="41" pos:column="23">_<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><literal type="string" pos:line="41" pos:column="25">"S/MIME messages with no hints on content are unsupported."<pos:position pos:line="41" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="87"/></expr_stmt></block></then></if>
      <return pos:line="42" pos:column="7">return <expr><literal type="number" pos:line="42" pos:column="14">0<pos:position pos:line="42" pos:column="15"/></literal></expr>;<pos:position pos:line="42" pos:column="16"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="45" pos:column="5">/* no .p7c, .p10 support yet. */</comment>

    <expr_stmt><expr><name pos:line="47" pos:column="5">len<pos:position pos:line="47" pos:column="8"/></name> <operator pos:line="47" pos:column="9">=<pos:position pos:line="47" pos:column="10"/></operator> <call><name pos:line="47" pos:column="11">mutt_strlen<pos:position pos:line="47" pos:column="22"/></name> <argument_list pos:line="47" pos:column="23">(<argument><expr><name pos:line="47" pos:column="24">t<pos:position pos:line="47" pos:column="25"/></name></expr></argument>)<pos:position pos:line="47" pos:column="26"/></argument_list></call> <operator pos:line="47" pos:column="27">-<pos:position pos:line="47" pos:column="28"/></operator> <literal type="number" pos:line="47" pos:column="29">4<pos:position pos:line="47" pos:column="30"/></literal></expr>;<pos:position pos:line="47" pos:column="31"/></expr_stmt>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name pos:line="48" pos:column="9">len<pos:position pos:line="48" pos:column="12"/></name> <operator pos:line="48" pos:column="13">&gt;<pos:position pos:line="48" pos:column="17"/></operator> <literal type="number" pos:line="48" pos:column="15">0<pos:position pos:line="48" pos:column="16"/></literal> <operator pos:line="48" pos:column="17">&amp;&amp;<pos:position pos:line="48" pos:column="27"/></operator> <operator pos:line="48" pos:column="20">*<pos:position pos:line="48" pos:column="21"/></operator><operator pos:line="48" pos:column="21">(<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="22">t<pos:position pos:line="48" pos:column="23"/></name><operator pos:line="48" pos:column="23">+<pos:position pos:line="48" pos:column="24"/></operator><name pos:line="48" pos:column="24">len<pos:position pos:line="48" pos:column="27"/></name><operator pos:line="48" pos:column="27">)<pos:position pos:line="48" pos:column="28"/></operator> <operator pos:line="48" pos:column="29">==<pos:position pos:line="48" pos:column="31"/></operator> <literal type="char" pos:line="48" pos:column="32">'.'<pos:position pos:line="48" pos:column="35"/></literal></expr>)<pos:position pos:line="48" pos:column="36"/></condition><then pos:line="48" pos:column="36">
    <block pos:line="49" pos:column="5">{
      <expr_stmt><expr><name pos:line="50" pos:column="7">len<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">++<pos:position pos:line="50" pos:column="12"/></operator></expr>;<pos:position pos:line="50" pos:column="13"/></expr_stmt>
      <if pos:line="51" pos:column="7">if <condition pos:line="51" pos:column="10">(<expr><operator pos:line="51" pos:column="11">!<pos:position pos:line="51" pos:column="12"/></operator><call><name pos:line="51" pos:column="12">ascii_strcasecmp<pos:position pos:line="51" pos:column="28"/></name> <argument_list pos:line="51" pos:column="29">(<argument><expr><operator pos:line="51" pos:column="30">(<pos:position pos:line="51" pos:column="31"/></operator><name pos:line="51" pos:column="31">t<pos:position pos:line="51" pos:column="32"/></name><operator pos:line="51" pos:column="32">+<pos:position pos:line="51" pos:column="33"/></operator><name pos:line="51" pos:column="33">len<pos:position pos:line="51" pos:column="36"/></name><operator pos:line="51" pos:column="36">)<pos:position pos:line="51" pos:column="37"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="39">"p7m"<pos:position pos:line="51" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="46"/></condition><then pos:line="51" pos:column="46">
<cpp:if pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">if<pos:position pos:line="52" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="52" pos:column="5">0<pos:position pos:line="52" pos:column="6"/></literal></expr></cpp:if>
       return SMIMEENCRYPT;
<cpp:else pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">else<pos:position pos:line="54" pos:column="6"/></cpp:directive></cpp:else>
      <comment type="block" pos:line="55" pos:column="7">/* Not sure if this is the correct thing to do, but 
         it's required for compatibility with Outlook */</comment>
       <block type="pseudo"><return pos:line="57" pos:column="8">return <expr><operator pos:line="57" pos:column="15">(<pos:position pos:line="57" pos:column="16"/></operator><name pos:line="57" pos:column="16">SMIMESIGN<pos:position pos:line="57" pos:column="25"/></name><operator pos:line="57" pos:column="25">|<pos:position pos:line="57" pos:column="26"/></operator><name pos:line="57" pos:column="26">SMIMEOPAQUE<pos:position pos:line="57" pos:column="37"/></name><operator pos:line="57" pos:column="37">)<pos:position pos:line="57" pos:column="38"/></operator></expr>;<pos:position pos:line="57" pos:column="39"/></return></block></then>
<cpp:endif pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">endif<pos:position pos:line="58" pos:column="7"/></cpp:directive></cpp:endif>
      <elseif pos:line="59" pos:column="7">else <if pos:line="59" pos:column="12">if <condition pos:line="59" pos:column="15">(<expr><operator pos:line="59" pos:column="16">!<pos:position pos:line="59" pos:column="17"/></operator><call><name pos:line="59" pos:column="17">ascii_strcasecmp<pos:position pos:line="59" pos:column="33"/></name> <argument_list pos:line="59" pos:column="34">(<argument><expr><operator pos:line="59" pos:column="35">(<pos:position pos:line="59" pos:column="36"/></operator><name pos:line="59" pos:column="36">t<pos:position pos:line="59" pos:column="37"/></name><operator pos:line="59" pos:column="37">+<pos:position pos:line="59" pos:column="38"/></operator><name pos:line="59" pos:column="38">len<pos:position pos:line="59" pos:column="41"/></name><operator pos:line="59" pos:column="41">)<pos:position pos:line="59" pos:column="42"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="44">"p7s"<pos:position pos:line="59" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="51"/></condition><then pos:line="59" pos:column="51">
	<block type="pseudo"><return pos:line="60" pos:column="9">return <expr><operator pos:line="60" pos:column="16">(<pos:position pos:line="60" pos:column="17"/></operator><name pos:line="60" pos:column="17">SMIMESIGN<pos:position pos:line="60" pos:column="26"/></name><operator pos:line="60" pos:column="26">|<pos:position pos:line="60" pos:column="27"/></operator><name pos:line="60" pos:column="27">SMIMEOPAQUE<pos:position pos:line="60" pos:column="38"/></name><operator pos:line="60" pos:column="38">)<pos:position pos:line="60" pos:column="39"/></operator></expr>;<pos:position pos:line="60" pos:column="40"/></return></block></then></if></elseif></if>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if>

  <return pos:line="64" pos:column="3">return <expr><literal type="number" pos:line="64" pos:column="10">0<pos:position pos:line="64" pos:column="11"/></literal></expr>;<pos:position pos:line="64" pos:column="12"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

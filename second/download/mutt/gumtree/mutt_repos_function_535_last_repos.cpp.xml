<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_535_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mx_get_magic<pos:position pos:line="1" pos:column="17"/></name> <parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><specifier pos:line="1" pos:column="19">const<pos:position pos:line="1" pos:column="24"/></specifier> <name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">path<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">stat<pos:position pos:line="3" pos:column="14"/></name></name></type> <name pos:line="3" pos:column="15">st<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">magic<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><literal type="number" pos:line="4" pos:column="15">0<pos:position pos:line="4" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">tmp<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><name pos:line="5" pos:column="12">_POSIX_PATH_MAX<pos:position pos:line="5" pos:column="27"/></name></expr>]<pos:position pos:line="5" pos:column="28"/></index></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">FILE<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">f<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>

<cpp:ifdef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifdef<pos:position pos:line="8" pos:column="7"/></cpp:directive> <name pos:line="8" pos:column="8">USE_IMAP<pos:position pos:line="8" pos:column="16"/></name></cpp:ifdef>
  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><call><name pos:line="9" pos:column="6">mx_is_imap<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">path<pos:position pos:line="9" pos:column="21"/></name></expr></argument>)<pos:position pos:line="9" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">MUTT_IMAP<pos:position pos:line="10" pos:column="21"/></name></expr>;<pos:position pos:line="10" pos:column="22"/></return></block></then></if>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="11" pos:column="8">/* USE_IMAP */</comment>

<cpp:ifdef pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">ifdef<pos:position pos:line="13" pos:column="7"/></cpp:directive> <name pos:line="13" pos:column="8">USE_POP<pos:position pos:line="13" pos:column="15"/></name></cpp:ifdef>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><call><name pos:line="14" pos:column="7">mx_is_pop<pos:position pos:line="14" pos:column="16"/></name> <argument_list pos:line="14" pos:column="17">(<argument><expr><name pos:line="14" pos:column="18">path<pos:position pos:line="14" pos:column="22"/></name></expr></argument>)<pos:position pos:line="14" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="24"/></condition><then pos:line="14" pos:column="24">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">MUTT_POP<pos:position pos:line="15" pos:column="20"/></name></expr>;<pos:position pos:line="15" pos:column="21"/></return></block></then></if>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="16" pos:column="8">/* USE_POP */</comment>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><call><name pos:line="18" pos:column="7">stat<pos:position pos:line="18" pos:column="11"/></name> <argument_list pos:line="18" pos:column="12">(<argument><expr><name pos:line="18" pos:column="13">path<pos:position pos:line="18" pos:column="17"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="19">&amp;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="20">st<pos:position pos:line="18" pos:column="22"/></name></expr></argument>)<pos:position pos:line="18" pos:column="23"/></argument_list></call> <operator pos:line="18" pos:column="24">==<pos:position pos:line="18" pos:column="26"/></operator> <operator pos:line="18" pos:column="27">-<pos:position pos:line="18" pos:column="28"/></operator><literal type="number" pos:line="18" pos:column="28">1<pos:position pos:line="18" pos:column="29"/></literal></expr>)<pos:position pos:line="18" pos:column="30"/></condition><then pos:line="18" pos:column="30">
  <block pos:line="19" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">dprint<pos:position pos:line="20" pos:column="11"/></name> <argument_list pos:line="20" pos:column="12">(<argument><expr><literal type="number" pos:line="20" pos:column="13">1<pos:position pos:line="20" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="16">(<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">debugfile<pos:position pos:line="20" pos:column="26"/></name><operator pos:line="20" pos:column="26">,<pos:position pos:line="20" pos:column="27"/></operator> <literal type="string" pos:line="20" pos:column="28">"mx_get_magic(): unable to stat %s: %s (errno %d).\n"<pos:position pos:line="20" pos:column="81"/></literal><operator pos:line="20" pos:column="81">,<pos:position pos:line="20" pos:column="82"/></operator>
		<name pos:line="21" pos:column="17">path<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">,<pos:position pos:line="21" pos:column="22"/></operator> <call><name pos:line="21" pos:column="23">strerror<pos:position pos:line="21" pos:column="31"/></name> <argument_list pos:line="21" pos:column="32">(<argument><expr><name pos:line="21" pos:column="33">errno<pos:position pos:line="21" pos:column="38"/></name></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call><operator pos:line="21" pos:column="39">,<pos:position pos:line="21" pos:column="40"/></operator> <name pos:line="21" pos:column="41">errno<pos:position pos:line="21" pos:column="46"/></name><operator pos:line="21" pos:column="46">)<pos:position pos:line="21" pos:column="47"/></operator></expr></argument>)<pos:position pos:line="21" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="49"/></expr_stmt>
    <return pos:line="22" pos:column="5">return <expr><operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><operator pos:line="22" pos:column="13">-<pos:position pos:line="22" pos:column="14"/></operator><literal type="number" pos:line="22" pos:column="14">1<pos:position pos:line="22" pos:column="15"/></literal><operator pos:line="22" pos:column="15">)<pos:position pos:line="22" pos:column="16"/></operator></expr>;<pos:position pos:line="22" pos:column="17"/></return>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><call><name pos:line="25" pos:column="7">S_ISDIR<pos:position pos:line="25" pos:column="14"/></name> <argument_list pos:line="25" pos:column="15">(<argument><expr><name><name pos:line="25" pos:column="16">st<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">.<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">st_mode<pos:position pos:line="25" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="28"/></condition><then pos:line="25" pos:column="28">
  <block pos:line="26" pos:column="3">{
    <comment type="block" pos:line="27" pos:column="5">/* check for maildir-style mailbox */</comment>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><call><name pos:line="28" pos:column="9">mx_is_maildir<pos:position pos:line="28" pos:column="22"/></name> <argument_list pos:line="28" pos:column="23">(<argument><expr><name pos:line="28" pos:column="24">path<pos:position pos:line="28" pos:column="28"/></name></expr></argument>)<pos:position pos:line="28" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="30"/></condition><then pos:line="28" pos:column="30">
      <block type="pseudo"><return pos:line="29" pos:column="7">return <expr><name pos:line="29" pos:column="14">MUTT_MAILDIR<pos:position pos:line="29" pos:column="26"/></name></expr>;<pos:position pos:line="29" pos:column="27"/></return></block></then></if>

    <comment type="block" pos:line="31" pos:column="5">/* check for mh-style mailbox */</comment>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><call><name pos:line="32" pos:column="9">mx_is_mh<pos:position pos:line="32" pos:column="17"/></name> <argument_list pos:line="32" pos:column="18">(<argument><expr><name pos:line="32" pos:column="19">path<pos:position pos:line="32" pos:column="23"/></name></expr></argument>)<pos:position pos:line="32" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="25"/></condition><then pos:line="32" pos:column="25">
      <block type="pseudo"><return pos:line="33" pos:column="7">return <expr><name pos:line="33" pos:column="14">MUTT_MH<pos:position pos:line="33" pos:column="21"/></name></expr>;<pos:position pos:line="33" pos:column="22"/></return></block></then></if>
  }<pos:position pos:line="34" pos:column="4"/></block></then>
  <elseif pos:line="35" pos:column="3">else <if pos:line="35" pos:column="8">if <condition pos:line="35" pos:column="11">(<expr><name><name pos:line="35" pos:column="12">st<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">.<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="15">st_size<pos:position pos:line="35" pos:column="22"/></name></name> <operator pos:line="35" pos:column="23">==<pos:position pos:line="35" pos:column="25"/></operator> <literal type="number" pos:line="35" pos:column="26">0<pos:position pos:line="35" pos:column="27"/></literal></expr>)<pos:position pos:line="35" pos:column="28"/></condition><then pos:line="35" pos:column="28">
  <block pos:line="36" pos:column="3">{
    <comment type="block" pos:line="37" pos:column="5">/* hard to tell what zero-length files are, so assume the default magic */</comment>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name pos:line="38" pos:column="9">DefaultMagic<pos:position pos:line="38" pos:column="21"/></name> <operator pos:line="38" pos:column="22">==<pos:position pos:line="38" pos:column="24"/></operator> <name pos:line="38" pos:column="25">MUTT_MBOX<pos:position pos:line="38" pos:column="34"/></name> <operator pos:line="38" pos:column="35">||<pos:position pos:line="38" pos:column="37"/></operator> <name pos:line="38" pos:column="38">DefaultMagic<pos:position pos:line="38" pos:column="50"/></name> <operator pos:line="38" pos:column="51">==<pos:position pos:line="38" pos:column="53"/></operator> <name pos:line="38" pos:column="54">MUTT_MMDF<pos:position pos:line="38" pos:column="63"/></name></expr>)<pos:position pos:line="38" pos:column="64"/></condition><then pos:line="38" pos:column="64">
      <block type="pseudo"><return pos:line="39" pos:column="7">return <expr><operator pos:line="39" pos:column="14">(<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="15">DefaultMagic<pos:position pos:line="39" pos:column="27"/></name><operator pos:line="39" pos:column="27">)<pos:position pos:line="39" pos:column="28"/></operator></expr>;<pos:position pos:line="39" pos:column="29"/></return></block></then>
    <else pos:line="40" pos:column="5">else
      <block type="pseudo"><return pos:line="41" pos:column="7">return <expr><operator pos:line="41" pos:column="14">(<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="15">MUTT_MBOX<pos:position pos:line="41" pos:column="24"/></name><operator pos:line="41" pos:column="24">)<pos:position pos:line="41" pos:column="25"/></operator></expr>;<pos:position pos:line="41" pos:column="26"/></return></block></else></if>
  }<pos:position pos:line="42" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="43" pos:column="3">else <if pos:line="43" pos:column="8">if <condition pos:line="43" pos:column="11">(<expr><operator pos:line="43" pos:column="12">(<pos:position pos:line="43" pos:column="13"/></operator><name pos:line="43" pos:column="13">f<pos:position pos:line="43" pos:column="14"/></name> <operator pos:line="43" pos:column="15">=<pos:position pos:line="43" pos:column="16"/></operator> <call><name pos:line="43" pos:column="17">fopen<pos:position pos:line="43" pos:column="22"/></name> <argument_list pos:line="43" pos:column="23">(<argument><expr><name pos:line="43" pos:column="24">path<pos:position pos:line="43" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="30">"r"<pos:position pos:line="43" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="34"/></argument_list></call><operator pos:line="43" pos:column="34">)<pos:position pos:line="43" pos:column="35"/></operator> <operator pos:line="43" pos:column="36">!=<pos:position pos:line="43" pos:column="38"/></operator> <name pos:line="43" pos:column="39">NULL<pos:position pos:line="43" pos:column="43"/></name></expr>)<pos:position pos:line="43" pos:column="44"/></condition><then pos:line="43" pos:column="44">
  <block pos:line="44" pos:column="3">{
    <decl_stmt><decl><type><name><name pos:line="45" pos:column="5">struct<pos:position pos:line="45" pos:column="11"/></name> <name pos:line="45" pos:column="12">utimbuf<pos:position pos:line="45" pos:column="19"/></name></name></type> <name pos:line="45" pos:column="20">times<pos:position pos:line="45" pos:column="25"/></name></decl>;<pos:position pos:line="45" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="46" pos:column="5">int<pos:position pos:line="46" pos:column="8"/></name></type> <name pos:line="46" pos:column="9">ch<pos:position pos:line="46" pos:column="11"/></name></decl>;<pos:position pos:line="46" pos:column="12"/></decl_stmt>

    <comment type="block" pos:line="48" pos:column="5">/* Some mailbox creation tools erroneously append a blank line to
     * a file before appending a mail message.  This allows mutt to
     * detect magic for and thus open those files. */</comment>
    <while pos:line="51" pos:column="5">while <condition pos:line="51" pos:column="11">(<expr><operator pos:line="51" pos:column="12">(<pos:position pos:line="51" pos:column="13"/></operator><name pos:line="51" pos:column="13">ch<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">=<pos:position pos:line="51" pos:column="17"/></operator> <call><name pos:line="51" pos:column="18">fgetc<pos:position pos:line="51" pos:column="23"/></name> <argument_list pos:line="51" pos:column="24">(<argument><expr><name pos:line="51" pos:column="25">f<pos:position pos:line="51" pos:column="26"/></name></expr></argument>)<pos:position pos:line="51" pos:column="27"/></argument_list></call><operator pos:line="51" pos:column="27">)<pos:position pos:line="51" pos:column="28"/></operator> <operator pos:line="51" pos:column="29">!=<pos:position pos:line="51" pos:column="31"/></operator> <name pos:line="51" pos:column="32">EOF<pos:position pos:line="51" pos:column="35"/></name></expr>)<pos:position pos:line="51" pos:column="36"/></condition>
    <block pos:line="52" pos:column="5">{
      <if pos:line="53" pos:column="7">if <condition pos:line="53" pos:column="10">(<expr><name pos:line="53" pos:column="11">ch<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">!=<pos:position pos:line="53" pos:column="16"/></operator> <literal type="char" pos:line="53" pos:column="17">'\n'<pos:position pos:line="53" pos:column="21"/></literal> <operator pos:line="53" pos:column="22">&amp;&amp;<pos:position pos:line="53" pos:column="32"/></operator> <name pos:line="53" pos:column="25">ch<pos:position pos:line="53" pos:column="27"/></name> <operator pos:line="53" pos:column="28">!=<pos:position pos:line="53" pos:column="30"/></operator> <literal type="char" pos:line="53" pos:column="31">'\r'<pos:position pos:line="53" pos:column="35"/></literal></expr>)<pos:position pos:line="53" pos:column="36"/></condition><then pos:line="53" pos:column="36">
      <block pos:line="54" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">ungetc<pos:position pos:line="55" pos:column="15"/></name> <argument_list pos:line="55" pos:column="16">(<argument><expr><name pos:line="55" pos:column="17">ch<pos:position pos:line="55" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="21">f<pos:position pos:line="55" pos:column="22"/></name></expr></argument>)<pos:position pos:line="55" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="24"/></expr_stmt>
        <break pos:line="56" pos:column="9">break;<pos:position pos:line="56" pos:column="15"/></break>
      }<pos:position pos:line="57" pos:column="8"/></block></then></if>
    }<pos:position pos:line="58" pos:column="6"/></block></while>

    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><call><name pos:line="60" pos:column="9">fgets<pos:position pos:line="60" pos:column="14"/></name> <argument_list pos:line="60" pos:column="15">(<argument><expr><name pos:line="60" pos:column="16">tmp<pos:position pos:line="60" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="60" pos:column="21">sizeof <argument_list pos:line="60" pos:column="28">(<argument><expr><name pos:line="60" pos:column="29">tmp<pos:position pos:line="60" pos:column="32"/></name></expr></argument>)<pos:position pos:line="60" pos:column="33"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="60" pos:column="35">f<pos:position pos:line="60" pos:column="36"/></name></expr></argument>)<pos:position pos:line="60" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="38"/></condition><then pos:line="60" pos:column="38">
    <block pos:line="61" pos:column="5">{
      <if pos:line="62" pos:column="7">if <condition pos:line="62" pos:column="10">(<expr><call><name pos:line="62" pos:column="11">mutt_strncmp<pos:position pos:line="62" pos:column="23"/></name> <argument_list pos:line="62" pos:column="24">(<argument><expr><literal type="string" pos:line="62" pos:column="25">"From "<pos:position pos:line="62" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="34">tmp<pos:position pos:line="62" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="39">5<pos:position pos:line="62" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="41"/></argument_list></call> <operator pos:line="62" pos:column="42">==<pos:position pos:line="62" pos:column="44"/></operator> <literal type="number" pos:line="62" pos:column="45">0<pos:position pos:line="62" pos:column="46"/></literal></expr>)<pos:position pos:line="62" pos:column="47"/></condition><then pos:line="62" pos:column="47">
        <block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="9">magic<pos:position pos:line="63" pos:column="14"/></name> <operator pos:line="63" pos:column="15">=<pos:position pos:line="63" pos:column="16"/></operator> <name pos:line="63" pos:column="17">MUTT_MBOX<pos:position pos:line="63" pos:column="26"/></name></expr>;<pos:position pos:line="63" pos:column="27"/></expr_stmt></block></then>
      <elseif pos:line="64" pos:column="7">else <if pos:line="64" pos:column="12">if <condition pos:line="64" pos:column="15">(<expr><call><name pos:line="64" pos:column="16">mutt_strcmp<pos:position pos:line="64" pos:column="27"/></name> <argument_list pos:line="64" pos:column="28">(<argument><expr><name pos:line="64" pos:column="29">MMDF_SEP<pos:position pos:line="64" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="39">tmp<pos:position pos:line="64" pos:column="42"/></name></expr></argument>)<pos:position pos:line="64" pos:column="43"/></argument_list></call> <operator pos:line="64" pos:column="44">==<pos:position pos:line="64" pos:column="46"/></operator> <literal type="number" pos:line="64" pos:column="47">0<pos:position pos:line="64" pos:column="48"/></literal></expr>)<pos:position pos:line="64" pos:column="49"/></condition><then pos:line="64" pos:column="49">
        <block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="9">magic<pos:position pos:line="65" pos:column="14"/></name> <operator pos:line="65" pos:column="15">=<pos:position pos:line="65" pos:column="16"/></operator> <name pos:line="65" pos:column="17">MUTT_MMDF<pos:position pos:line="65" pos:column="26"/></name></expr>;<pos:position pos:line="65" pos:column="27"/></expr_stmt></block></then></if></elseif></if>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">safe_fclose<pos:position pos:line="67" pos:column="16"/></name> <argument_list pos:line="67" pos:column="17">(<argument><expr><operator pos:line="67" pos:column="18">&amp;<pos:position pos:line="67" pos:column="23"/></operator><name pos:line="67" pos:column="19">f<pos:position pos:line="67" pos:column="20"/></name></expr></argument>)<pos:position pos:line="67" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="22"/></expr_stmt>

    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><operator pos:line="69" pos:column="9">!<pos:position pos:line="69" pos:column="10"/></operator><call><name pos:line="69" pos:column="10">option<pos:position pos:line="69" pos:column="16"/></name><argument_list pos:line="69" pos:column="16">(<argument><expr><name pos:line="69" pos:column="17">OPTCHECKMBOXSIZE<pos:position pos:line="69" pos:column="33"/></name></expr></argument>)<pos:position pos:line="69" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="35"/></condition><then pos:line="69" pos:column="35">
    <block pos:line="70" pos:column="5">{
      <comment type="block" pos:line="71" pos:column="7">/* need to restore the times here, the file was not really accessed,
       * only the type was accessed.  This is important, because detection
       * of "new mail" depends on those times set correctly.
       */</comment>
      <expr_stmt><expr><name><name pos:line="75" pos:column="7">times<pos:position pos:line="75" pos:column="12"/></name><operator pos:line="75" pos:column="12">.<pos:position pos:line="75" pos:column="13"/></operator><name pos:line="75" pos:column="13">actime<pos:position pos:line="75" pos:column="19"/></name></name> <operator pos:line="75" pos:column="20">=<pos:position pos:line="75" pos:column="21"/></operator> <name><name pos:line="75" pos:column="22">st<pos:position pos:line="75" pos:column="24"/></name><operator pos:line="75" pos:column="24">.<pos:position pos:line="75" pos:column="25"/></operator><name pos:line="75" pos:column="25">st_atime<pos:position pos:line="75" pos:column="33"/></name></name></expr>;<pos:position pos:line="75" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="76" pos:column="7">times<pos:position pos:line="76" pos:column="12"/></name><operator pos:line="76" pos:column="12">.<pos:position pos:line="76" pos:column="13"/></operator><name pos:line="76" pos:column="13">modtime<pos:position pos:line="76" pos:column="20"/></name></name> <operator pos:line="76" pos:column="21">=<pos:position pos:line="76" pos:column="22"/></operator> <name><name pos:line="76" pos:column="23">st<pos:position pos:line="76" pos:column="25"/></name><operator pos:line="76" pos:column="25">.<pos:position pos:line="76" pos:column="26"/></operator><name pos:line="76" pos:column="26">st_mtime<pos:position pos:line="76" pos:column="34"/></name></name></expr>;<pos:position pos:line="76" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="77" pos:column="7">utime<pos:position pos:line="77" pos:column="12"/></name> <argument_list pos:line="77" pos:column="13">(<argument><expr><name pos:line="77" pos:column="14">path<pos:position pos:line="77" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="20">&amp;<pos:position pos:line="77" pos:column="25"/></operator><name pos:line="77" pos:column="21">times<pos:position pos:line="77" pos:column="26"/></name></expr></argument>)<pos:position pos:line="77" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="78" pos:column="6"/></block></then></if>
  }<pos:position pos:line="79" pos:column="4"/></block></then></if></elseif>
  <else pos:line="80" pos:column="3">else
  <block pos:line="81" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">dprint<pos:position pos:line="82" pos:column="11"/></name> <argument_list pos:line="82" pos:column="12">(<argument><expr><literal type="number" pos:line="82" pos:column="13">1<pos:position pos:line="82" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="82" pos:column="16">(<pos:position pos:line="82" pos:column="17"/></operator><name pos:line="82" pos:column="17">debugfile<pos:position pos:line="82" pos:column="26"/></name><operator pos:line="82" pos:column="26">,<pos:position pos:line="82" pos:column="27"/></operator> <literal type="string" pos:line="82" pos:column="28">"mx_get_magic(): unable to open file %s for reading.\n"<pos:position pos:line="82" pos:column="83"/></literal><operator pos:line="82" pos:column="83">,<pos:position pos:line="82" pos:column="84"/></operator>
		<name pos:line="83" pos:column="17">path<pos:position pos:line="83" pos:column="21"/></name><operator pos:line="83" pos:column="21">)<pos:position pos:line="83" pos:column="22"/></operator></expr></argument>)<pos:position pos:line="83" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="24"/></expr_stmt>
    <return pos:line="84" pos:column="5">return <expr><operator pos:line="84" pos:column="12">(<pos:position pos:line="84" pos:column="13"/></operator><operator pos:line="84" pos:column="13">-<pos:position pos:line="84" pos:column="14"/></operator><literal type="number" pos:line="84" pos:column="14">1<pos:position pos:line="84" pos:column="15"/></literal><operator pos:line="84" pos:column="15">)<pos:position pos:line="84" pos:column="16"/></operator></expr>;<pos:position pos:line="84" pos:column="17"/></return>
  }<pos:position pos:line="85" pos:column="4"/></block></else></if>

<cpp:ifdef pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">ifdef<pos:position pos:line="87" pos:column="7"/></cpp:directive> <name pos:line="87" pos:column="8">USE_COMPRESSED<pos:position pos:line="87" pos:column="22"/></name></cpp:ifdef>
  <comment type="block" pos:line="88" pos:column="3">/* If there are no other matches, see if there are any
   * compress hooks that match */</comment>
  <if pos:line="90" pos:column="3">if <condition pos:line="90" pos:column="6">(<expr><operator pos:line="90" pos:column="7">(<pos:position pos:line="90" pos:column="8"/></operator><name pos:line="90" pos:column="8">magic<pos:position pos:line="90" pos:column="13"/></name> <operator pos:line="90" pos:column="14">==<pos:position pos:line="90" pos:column="16"/></operator> <literal type="number" pos:line="90" pos:column="17">0<pos:position pos:line="90" pos:column="18"/></literal><operator pos:line="90" pos:column="18">)<pos:position pos:line="90" pos:column="19"/></operator> <operator pos:line="90" pos:column="20">&amp;&amp;<pos:position pos:line="90" pos:column="30"/></operator> <call><name pos:line="90" pos:column="23">mutt_comp_can_read<pos:position pos:line="90" pos:column="41"/></name> <argument_list pos:line="90" pos:column="42">(<argument><expr><name pos:line="90" pos:column="43">path<pos:position pos:line="90" pos:column="47"/></name></expr></argument>)<pos:position pos:line="90" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="49"/></condition><then pos:line="90" pos:column="49">
    <block type="pseudo"><return pos:line="91" pos:column="5">return <expr><name pos:line="91" pos:column="12">MUTT_COMPRESSED<pos:position pos:line="91" pos:column="27"/></name></expr>;<pos:position pos:line="91" pos:column="28"/></return></block></then></if>
<cpp:endif pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">endif<pos:position pos:line="92" pos:column="7"/></cpp:directive></cpp:endif>
  <return pos:line="93" pos:column="3">return <expr><operator pos:line="93" pos:column="10">(<pos:position pos:line="93" pos:column="11"/></operator><name pos:line="93" pos:column="11">magic<pos:position pos:line="93" pos:column="16"/></name><operator pos:line="93" pos:column="16">)<pos:position pos:line="93" pos:column="17"/></operator></expr>;<pos:position pos:line="93" pos:column="18"/></return>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

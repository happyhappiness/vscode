<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_433_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">smime_verify_one<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">BODY<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">sigbdy<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">STATE<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">s<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">tempfile<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">signedfile<pos:position pos:line="3" pos:column="18"/></name><index pos:line="3" pos:column="18">[<expr><name pos:line="3" pos:column="19">_POSIX_PATH_MAX<pos:position pos:line="3" pos:column="34"/></name></expr>]<pos:position pos:line="3" pos:column="35"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="3" pos:column="37">smimeerrfile<pos:position pos:line="3" pos:column="49"/></name><index pos:line="3" pos:column="49">[<expr><name pos:line="3" pos:column="50">_POSIX_PATH_MAX<pos:position pos:line="3" pos:column="65"/></name></expr>]<pos:position pos:line="3" pos:column="66"/></index></name></decl>;<pos:position pos:line="3" pos:column="67"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">FILE<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">fp<pos:position pos:line="4" pos:column="11"/></name><init pos:line="4" pos:column="11">=<expr><name pos:line="4" pos:column="12">NULL<pos:position pos:line="4" pos:column="16"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="19">smimeout<pos:position pos:line="4" pos:column="27"/></name><init pos:line="4" pos:column="27">=<expr><name pos:line="4" pos:column="28">NULL<pos:position pos:line="4" pos:column="32"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="35">smimeerr<pos:position pos:line="4" pos:column="43"/></name><init pos:line="4" pos:column="43">=<expr><name pos:line="4" pos:column="44">NULL<pos:position pos:line="4" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="49"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">pid_t<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">thepid<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">badsig<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><operator pos:line="6" pos:column="16">-<pos:position pos:line="6" pos:column="17"/></operator><literal type="number" pos:line="6" pos:column="17">1<pos:position pos:line="6" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">LOFF_T<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">tmpoffset<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><literal type="number" pos:line="8" pos:column="22">0<pos:position pos:line="8" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">tmplength<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><literal type="number" pos:line="9" pos:column="22">0<pos:position pos:line="9" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">origType<pos:position pos:line="10" pos:column="15"/></name> <init pos:line="10" pos:column="16">= <expr><name><name pos:line="10" pos:column="18">sigbdy<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">-&gt;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="26">type<pos:position pos:line="10" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">savePrefix<pos:position pos:line="11" pos:column="19"/></name> <init pos:line="11" pos:column="20">= <expr><name pos:line="11" pos:column="22">NULL<pos:position pos:line="11" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>


  <expr_stmt><expr><call><name pos:line="14" pos:column="3">snprintf<pos:position pos:line="14" pos:column="11"/></name> <argument_list pos:line="14" pos:column="12">(<argument><expr><name pos:line="14" pos:column="13">signedfile<pos:position pos:line="14" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="25">sizeof <argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">signedfile<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="46">"%s.sig"<pos:position pos:line="14" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="56">tempfile<pos:position pos:line="14" pos:column="64"/></name></expr></argument>)<pos:position pos:line="14" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="66"/></expr_stmt>
  
  <comment type="block" pos:line="16" pos:column="3">/* decode to a tempfile, saving the original destination */</comment>
  <expr_stmt><expr><name pos:line="17" pos:column="3">fp<pos:position pos:line="17" pos:column="5"/></name> <operator pos:line="17" pos:column="6">=<pos:position pos:line="17" pos:column="7"/></operator> <name><name pos:line="17" pos:column="8">s<pos:position pos:line="17" pos:column="9"/></name><operator pos:line="17" pos:column="9">-&gt;<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="11">fpout<pos:position pos:line="17" pos:column="16"/></name></name></expr>;<pos:position pos:line="17" pos:column="17"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">(<pos:position pos:line="18" pos:column="8"/></operator><name><name pos:line="18" pos:column="8">s<pos:position pos:line="18" pos:column="9"/></name><operator pos:line="18" pos:column="9">-&gt;<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="11">fpout<pos:position pos:line="18" pos:column="16"/></name></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <call><name pos:line="18" pos:column="19">safe_fopen<pos:position pos:line="18" pos:column="29"/></name> <argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">signedfile<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="43">"w"<pos:position pos:line="18" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call><operator pos:line="18" pos:column="47">)<pos:position pos:line="18" pos:column="48"/></operator> <operator pos:line="18" pos:column="49">==<pos:position pos:line="18" pos:column="51"/></operator> <name pos:line="18" pos:column="52">NULL<pos:position pos:line="18" pos:column="56"/></name></expr>)<pos:position pos:line="18" pos:column="57"/></condition><then pos:line="18" pos:column="57">
  <block pos:line="19" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">mutt_perror<pos:position pos:line="20" pos:column="16"/></name> <argument_list pos:line="20" pos:column="17">(<argument><expr><name pos:line="20" pos:column="18">signedfile<pos:position pos:line="20" pos:column="28"/></name></expr></argument>)<pos:position pos:line="20" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">-<pos:position pos:line="21" pos:column="13"/></operator><literal type="number" pos:line="21" pos:column="13">1<pos:position pos:line="21" pos:column="14"/></literal></expr>;<pos:position pos:line="21" pos:column="15"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="23" pos:column="3">/* decoding the attachment changes the size and offset, so save a copy
   * of the "real" values now, and restore them after processing
   */</comment>
  <expr_stmt><expr><name pos:line="26" pos:column="3">tmplength<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">=<pos:position pos:line="26" pos:column="14"/></operator> <name><name pos:line="26" pos:column="15">sigbdy<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">-&gt;<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="23">length<pos:position pos:line="26" pos:column="29"/></name></name></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name pos:line="27" pos:column="3">tmpoffset<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <name><name pos:line="27" pos:column="15">sigbdy<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">-&gt;<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="23">offset<pos:position pos:line="27" pos:column="29"/></name></name></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>

  <comment type="block" pos:line="29" pos:column="3">/* if we are decoding binary bodies, we don't want to prefix each
   * line with the prefix or else the data will get corrupted.
   */</comment>
  <expr_stmt><expr><name pos:line="32" pos:column="3">savePrefix<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <name><name pos:line="32" pos:column="16">s<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">-&gt;<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="19">prefix<pos:position pos:line="32" pos:column="25"/></name></name></expr>;<pos:position pos:line="32" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="33" pos:column="3">s<pos:position pos:line="33" pos:column="4"/></name><operator pos:line="33" pos:column="4">-&gt;<pos:position pos:line="33" pos:column="9"/></operator><name pos:line="33" pos:column="6">prefix<pos:position pos:line="33" pos:column="12"/></name></name> <operator pos:line="33" pos:column="13">=<pos:position pos:line="33" pos:column="14"/></operator> <name pos:line="33" pos:column="15">NULL<pos:position pos:line="33" pos:column="19"/></name></expr>;<pos:position pos:line="33" pos:column="20"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="35" pos:column="3">mutt_decode_attachment<pos:position pos:line="35" pos:column="25"/></name> <argument_list pos:line="35" pos:column="26">(<argument><expr><name pos:line="35" pos:column="27">sigbdy<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="35">s<pos:position pos:line="35" pos:column="36"/></name></expr></argument>)<pos:position pos:line="35" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="38"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="37" pos:column="3">sigbdy<pos:position pos:line="37" pos:column="9"/></name><operator pos:line="37" pos:column="9">-&gt;<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="11">length<pos:position pos:line="37" pos:column="17"/></name></name> <operator pos:line="37" pos:column="18">=<pos:position pos:line="37" pos:column="19"/></operator> <call><name pos:line="37" pos:column="20">ftello<pos:position pos:line="37" pos:column="26"/></name> <argument_list pos:line="37" pos:column="27">(<argument><expr><name><name pos:line="37" pos:column="28">s<pos:position pos:line="37" pos:column="29"/></name><operator pos:line="37" pos:column="29">-&gt;<pos:position pos:line="37" pos:column="34"/></operator><name pos:line="37" pos:column="31">fpout<pos:position pos:line="37" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="38" pos:column="3">sigbdy<pos:position pos:line="38" pos:column="9"/></name><operator pos:line="38" pos:column="9">-&gt;<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="11">offset<pos:position pos:line="38" pos:column="17"/></name></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <literal type="number" pos:line="38" pos:column="20">0<pos:position pos:line="38" pos:column="21"/></literal></expr>;<pos:position pos:line="38" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">safe_fclose<pos:position pos:line="39" pos:column="14"/></name> <argument_list pos:line="39" pos:column="15">(<argument><expr><operator pos:line="39" pos:column="16">&amp;<pos:position pos:line="39" pos:column="21"/></operator><name><name pos:line="39" pos:column="17">s<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">-&gt;<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="20">fpout<pos:position pos:line="39" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt>

  <comment type="block" pos:line="41" pos:column="3">/* restore final destination and substitute the tempfile for input */</comment>
  <expr_stmt><expr><name><name pos:line="42" pos:column="3">s<pos:position pos:line="42" pos:column="4"/></name><operator pos:line="42" pos:column="4">-&gt;<pos:position pos:line="42" pos:column="9"/></operator><name pos:line="42" pos:column="6">fpout<pos:position pos:line="42" pos:column="11"/></name></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <name pos:line="42" pos:column="14">fp<pos:position pos:line="42" pos:column="16"/></name></expr>;<pos:position pos:line="42" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name pos:line="43" pos:column="3">fp<pos:position pos:line="43" pos:column="5"/></name> <operator pos:line="43" pos:column="6">=<pos:position pos:line="43" pos:column="7"/></operator> <name><name pos:line="43" pos:column="8">s<pos:position pos:line="43" pos:column="9"/></name><operator pos:line="43" pos:column="9">-&gt;<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="11">fpin<pos:position pos:line="43" pos:column="15"/></name></name></expr>;<pos:position pos:line="43" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="44" pos:column="3">s<pos:position pos:line="44" pos:column="4"/></name><operator pos:line="44" pos:column="4">-&gt;<pos:position pos:line="44" pos:column="9"/></operator><name pos:line="44" pos:column="6">fpin<pos:position pos:line="44" pos:column="10"/></name></name> <operator pos:line="44" pos:column="11">=<pos:position pos:line="44" pos:column="12"/></operator> <call><name pos:line="44" pos:column="13">fopen<pos:position pos:line="44" pos:column="18"/></name> <argument_list pos:line="44" pos:column="19">(<argument><expr><name pos:line="44" pos:column="20">signedfile<pos:position pos:line="44" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="32">"r"<pos:position pos:line="44" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="37"/></expr_stmt>

  <comment type="block" pos:line="46" pos:column="3">/* restore the prefix */</comment>
  <expr_stmt><expr><name><name pos:line="47" pos:column="3">s<pos:position pos:line="47" pos:column="4"/></name><operator pos:line="47" pos:column="4">-&gt;<pos:position pos:line="47" pos:column="9"/></operator><name pos:line="47" pos:column="6">prefix<pos:position pos:line="47" pos:column="12"/></name></name> <operator pos:line="47" pos:column="13">=<pos:position pos:line="47" pos:column="14"/></operator> <name pos:line="47" pos:column="15">savePrefix<pos:position pos:line="47" pos:column="25"/></name></expr>;<pos:position pos:line="47" pos:column="26"/></expr_stmt>
  
  <expr_stmt><expr><name><name pos:line="49" pos:column="3">sigbdy<pos:position pos:line="49" pos:column="9"/></name><operator pos:line="49" pos:column="9">-&gt;<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="11">type<pos:position pos:line="49" pos:column="15"/></name></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <name pos:line="49" pos:column="18">origType<pos:position pos:line="49" pos:column="26"/></name></expr>;<pos:position pos:line="49" pos:column="27"/></expr_stmt>

  
  <expr_stmt><expr><call><name pos:line="52" pos:column="3">mutt_mktemp<pos:position pos:line="52" pos:column="14"/></name> <argument_list pos:line="52" pos:column="15">(<argument><expr><name pos:line="52" pos:column="16">smimeerrfile<pos:position pos:line="52" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="52" pos:column="30">sizeof <argument_list pos:line="52" pos:column="37">(<argument><expr><name pos:line="52" pos:column="38">smimeerrfile<pos:position pos:line="52" pos:column="50"/></name></expr></argument>)<pos:position pos:line="52" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="52" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="53"/></expr_stmt>
  <if pos:line="53" pos:column="3">if <condition pos:line="53" pos:column="6">(<expr><operator pos:line="53" pos:column="7">!<pos:position pos:line="53" pos:column="8"/></operator><operator pos:line="53" pos:column="8">(<pos:position pos:line="53" pos:column="9"/></operator><name pos:line="53" pos:column="9">smimeerr<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">=<pos:position pos:line="53" pos:column="19"/></operator> <call><name pos:line="53" pos:column="20">safe_fopen<pos:position pos:line="53" pos:column="30"/></name> <argument_list pos:line="53" pos:column="31">(<argument><expr><name pos:line="53" pos:column="32">smimeerrfile<pos:position pos:line="53" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="46">"w+"<pos:position pos:line="53" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="51"/></argument_list></call><operator pos:line="53" pos:column="51">)<pos:position pos:line="53" pos:column="52"/></operator></expr>)<pos:position pos:line="53" pos:column="53"/></condition><then pos:line="53" pos:column="53">
  <block pos:line="54" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">mutt_perror<pos:position pos:line="55" pos:column="16"/></name> <argument_list pos:line="55" pos:column="17">(<argument><expr><name pos:line="55" pos:column="18">smimeerrfile<pos:position pos:line="55" pos:column="30"/></name></expr></argument>)<pos:position pos:line="55" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">mutt_unlink<pos:position pos:line="56" pos:column="16"/></name> <argument_list pos:line="56" pos:column="17">(<argument><expr><name pos:line="56" pos:column="18">signedfile<pos:position pos:line="56" pos:column="28"/></name></expr></argument>)<pos:position pos:line="56" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="30"/></expr_stmt>
    <return pos:line="57" pos:column="5">return <expr><operator pos:line="57" pos:column="12">-<pos:position pos:line="57" pos:column="13"/></operator><literal type="number" pos:line="57" pos:column="13">1<pos:position pos:line="57" pos:column="14"/></literal></expr>;<pos:position pos:line="57" pos:column="15"/></return>
  }<pos:position pos:line="58" pos:column="4"/></block></then></if>
  
  <expr_stmt><expr><call><name pos:line="60" pos:column="3">crypt_current_time<pos:position pos:line="60" pos:column="21"/></name> <argument_list pos:line="60" pos:column="22">(<argument><expr><name pos:line="60" pos:column="23">s<pos:position pos:line="60" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="26">"OpenSSL"<pos:position pos:line="60" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="37"/></expr_stmt>
  
  <if pos:line="62" pos:column="3">if <condition pos:line="62" pos:column="6">(<expr><operator pos:line="62" pos:column="7">(<pos:position pos:line="62" pos:column="8"/></operator><name pos:line="62" pos:column="8">thepid<pos:position pos:line="62" pos:column="14"/></name> <operator pos:line="62" pos:column="15">=<pos:position pos:line="62" pos:column="16"/></operator> <call><name pos:line="62" pos:column="17">smime_invoke_verify<pos:position pos:line="62" pos:column="36"/></name> <argument_list pos:line="62" pos:column="37">(<argument><expr><name pos:line="62" pos:column="38">NULL<pos:position pos:line="62" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="44">&amp;<pos:position pos:line="62" pos:column="49"/></operator><name pos:line="62" pos:column="45">smimeout<pos:position pos:line="62" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="55">NULL<pos:position pos:line="62" pos:column="59"/></name></expr></argument>, 
				   <argument><expr><operator pos:line="63" pos:column="36">-<pos:position pos:line="63" pos:column="37"/></operator><literal type="number" pos:line="63" pos:column="37">1<pos:position pos:line="63" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="63" pos:column="40">-<pos:position pos:line="63" pos:column="41"/></operator><literal type="number" pos:line="63" pos:column="41">1<pos:position pos:line="63" pos:column="42"/></literal></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="44">fileno<pos:position pos:line="63" pos:column="50"/></name> <argument_list pos:line="63" pos:column="51">(<argument><expr><name pos:line="63" pos:column="52">smimeerr<pos:position pos:line="63" pos:column="60"/></name></expr></argument>)<pos:position pos:line="63" pos:column="61"/></argument_list></call></expr></argument>,
				   <argument><expr><name pos:line="64" pos:column="36">tempfile<pos:position pos:line="64" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="46">signedfile<pos:position pos:line="64" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="58">0<pos:position pos:line="64" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="60"/></argument_list></call><operator pos:line="64" pos:column="60">)<pos:position pos:line="64" pos:column="61"/></operator> <operator pos:line="64" pos:column="62">!=<pos:position pos:line="64" pos:column="64"/></operator> <operator pos:line="64" pos:column="65">-<pos:position pos:line="64" pos:column="66"/></operator><literal type="number" pos:line="64" pos:column="66">1<pos:position pos:line="64" pos:column="67"/></literal></expr>)<pos:position pos:line="64" pos:column="68"/></condition><then pos:line="64" pos:column="68">
  <block pos:line="65" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">fflush<pos:position pos:line="66" pos:column="11"/></name> <argument_list pos:line="66" pos:column="12">(<argument><expr><name pos:line="66" pos:column="13">smimeout<pos:position pos:line="66" pos:column="21"/></name></expr></argument>)<pos:position pos:line="66" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">safe_fclose<pos:position pos:line="67" pos:column="16"/></name> <argument_list pos:line="67" pos:column="17">(<argument><expr><operator pos:line="67" pos:column="18">&amp;<pos:position pos:line="67" pos:column="23"/></operator><name pos:line="67" pos:column="19">smimeout<pos:position pos:line="67" pos:column="27"/></name></expr></argument>)<pos:position pos:line="67" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="29"/></expr_stmt>
      
    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><call><name pos:line="69" pos:column="9">mutt_wait_filter<pos:position pos:line="69" pos:column="25"/></name> <argument_list pos:line="69" pos:column="26">(<argument><expr><name pos:line="69" pos:column="27">thepid<pos:position pos:line="69" pos:column="33"/></name></expr></argument>)<pos:position pos:line="69" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="35"/></condition><then pos:line="69" pos:column="35">
      <block type="pseudo"><expr_stmt><expr><name pos:line="70" pos:column="7">badsig<pos:position pos:line="70" pos:column="13"/></name> <operator pos:line="70" pos:column="14">=<pos:position pos:line="70" pos:column="15"/></operator> <operator pos:line="70" pos:column="16">-<pos:position pos:line="70" pos:column="17"/></operator><literal type="number" pos:line="70" pos:column="17">1<pos:position pos:line="70" pos:column="18"/></literal></expr>;<pos:position pos:line="70" pos:column="19"/></expr_stmt></block></then>
    <else pos:line="71" pos:column="5">else
    <block pos:line="72" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="73" pos:column="7">char<pos:position pos:line="73" pos:column="11"/></name> <modifier pos:line="73" pos:column="12">*<pos:position pos:line="73" pos:column="13"/></modifier></type><name pos:line="73" pos:column="13">line<pos:position pos:line="73" pos:column="17"/></name> <init pos:line="73" pos:column="18">= <expr><name pos:line="73" pos:column="20">NULL<pos:position pos:line="73" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="73" pos:column="25"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="74" pos:column="7">int<pos:position pos:line="74" pos:column="10"/></name></type> <name pos:line="74" pos:column="11">lineno<pos:position pos:line="74" pos:column="17"/></name> <init pos:line="74" pos:column="18">= <expr><literal type="number" pos:line="74" pos:column="20">0<pos:position pos:line="74" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="74" pos:column="22"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="75" pos:column="7">size_t<pos:position pos:line="75" pos:column="13"/></name></type> <name pos:line="75" pos:column="14">linelen<pos:position pos:line="75" pos:column="21"/></name></decl>;<pos:position pos:line="75" pos:column="22"/></decl_stmt>
      
      <expr_stmt><expr><call><name pos:line="77" pos:column="7">fflush<pos:position pos:line="77" pos:column="13"/></name> <argument_list pos:line="77" pos:column="14">(<argument><expr><name pos:line="77" pos:column="15">smimeerr<pos:position pos:line="77" pos:column="23"/></name></expr></argument>)<pos:position pos:line="77" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="78" pos:column="7">rewind<pos:position pos:line="78" pos:column="13"/></name> <argument_list pos:line="78" pos:column="14">(<argument><expr><name pos:line="78" pos:column="15">smimeerr<pos:position pos:line="78" pos:column="23"/></name></expr></argument>)<pos:position pos:line="78" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="25"/></expr_stmt>
      
      <expr_stmt><expr><name pos:line="80" pos:column="7">line<pos:position pos:line="80" pos:column="11"/></name> <operator pos:line="80" pos:column="12">=<pos:position pos:line="80" pos:column="13"/></operator> <call><name pos:line="80" pos:column="14">mutt_read_line<pos:position pos:line="80" pos:column="28"/></name> <argument_list pos:line="80" pos:column="29">(<argument><expr><name pos:line="80" pos:column="30">line<pos:position pos:line="80" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="36">&amp;<pos:position pos:line="80" pos:column="41"/></operator><name pos:line="80" pos:column="37">linelen<pos:position pos:line="80" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="46">smimeerr<pos:position pos:line="80" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="56">&amp;<pos:position pos:line="80" pos:column="61"/></operator><name pos:line="80" pos:column="57">lineno<pos:position pos:line="80" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="65">0<pos:position pos:line="80" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="68"/></expr_stmt>
      <if pos:line="81" pos:column="7">if <condition pos:line="81" pos:column="10">(<expr><name pos:line="81" pos:column="11">linelen<pos:position pos:line="81" pos:column="18"/></name> <operator pos:line="81" pos:column="19">&amp;&amp;<pos:position pos:line="81" pos:column="29"/></operator> <operator pos:line="81" pos:column="22">!<pos:position pos:line="81" pos:column="23"/></operator><call><name pos:line="81" pos:column="23">ascii_strcasecmp<pos:position pos:line="81" pos:column="39"/></name> <argument_list pos:line="81" pos:column="40">(<argument><expr><name pos:line="81" pos:column="41">line<pos:position pos:line="81" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="47">"verification successful"<pos:position pos:line="81" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="74"/></condition><then pos:line="81" pos:column="74">
	<block type="pseudo"><expr_stmt><expr><name pos:line="82" pos:column="9">badsig<pos:position pos:line="82" pos:column="15"/></name> <operator pos:line="82" pos:column="16">=<pos:position pos:line="82" pos:column="17"/></operator> <literal type="number" pos:line="82" pos:column="18">0<pos:position pos:line="82" pos:column="19"/></literal></expr>;<pos:position pos:line="82" pos:column="20"/></expr_stmt></block></then></if>

      <expr_stmt><expr><call><name pos:line="84" pos:column="7">FREE<pos:position pos:line="84" pos:column="11"/></name> <argument_list pos:line="84" pos:column="12">(<argument><expr><operator pos:line="84" pos:column="13">&amp;<pos:position pos:line="84" pos:column="18"/></operator><name pos:line="84" pos:column="14">line<pos:position pos:line="84" pos:column="18"/></name></expr></argument>)<pos:position pos:line="84" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="85" pos:column="6"/></block></else></if>
  }<pos:position pos:line="86" pos:column="4"/></block></then></if>
  
  <expr_stmt><expr><call><name pos:line="88" pos:column="3">fflush<pos:position pos:line="88" pos:column="9"/></name> <argument_list pos:line="88" pos:column="10">(<argument><expr><name pos:line="88" pos:column="11">smimeerr<pos:position pos:line="88" pos:column="19"/></name></expr></argument>)<pos:position pos:line="88" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="89" pos:column="3">rewind<pos:position pos:line="89" pos:column="9"/></name> <argument_list pos:line="89" pos:column="10">(<argument><expr><name pos:line="89" pos:column="11">smimeerr<pos:position pos:line="89" pos:column="19"/></name></expr></argument>)<pos:position pos:line="89" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="90" pos:column="3">mutt_copy_stream<pos:position pos:line="90" pos:column="19"/></name> <argument_list pos:line="90" pos:column="20">(<argument><expr><name pos:line="90" pos:column="21">smimeerr<pos:position pos:line="90" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="31">s<pos:position pos:line="90" pos:column="32"/></name><operator pos:line="90" pos:column="32">-&gt;<pos:position pos:line="90" pos:column="37"/></operator><name pos:line="90" pos:column="34">fpout<pos:position pos:line="90" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="91" pos:column="3">safe_fclose<pos:position pos:line="91" pos:column="14"/></name> <argument_list pos:line="91" pos:column="15">(<argument><expr><operator pos:line="91" pos:column="16">&amp;<pos:position pos:line="91" pos:column="21"/></operator><name pos:line="91" pos:column="17">smimeerr<pos:position pos:line="91" pos:column="25"/></name></expr></argument>)<pos:position pos:line="91" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="27"/></expr_stmt>
    
  <expr_stmt><expr><call><name pos:line="93" pos:column="3">state_attach_puts<pos:position pos:line="93" pos:column="20"/></name> <argument_list pos:line="93" pos:column="21">(<argument><expr><call><name pos:line="93" pos:column="22">_<pos:position pos:line="93" pos:column="23"/></name><argument_list pos:line="93" pos:column="23">(<argument><expr><literal type="string" pos:line="93" pos:column="24">"[-- End of OpenSSL output --]\n\n"<pos:position pos:line="93" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="93" pos:column="62">s<pos:position pos:line="93" pos:column="63"/></name></expr></argument>)<pos:position pos:line="93" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="65"/></expr_stmt>
  
  <expr_stmt><expr><call><name pos:line="95" pos:column="3">mutt_unlink<pos:position pos:line="95" pos:column="14"/></name> <argument_list pos:line="95" pos:column="15">(<argument><expr><name pos:line="95" pos:column="16">signedfile<pos:position pos:line="95" pos:column="26"/></name></expr></argument>)<pos:position pos:line="95" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="96" pos:column="3">mutt_unlink<pos:position pos:line="96" pos:column="14"/></name> <argument_list pos:line="96" pos:column="15">(<argument><expr><name pos:line="96" pos:column="16">smimeerrfile<pos:position pos:line="96" pos:column="28"/></name></expr></argument>)<pos:position pos:line="96" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="30"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="98" pos:column="3">sigbdy<pos:position pos:line="98" pos:column="9"/></name><operator pos:line="98" pos:column="9">-&gt;<pos:position pos:line="98" pos:column="14"/></operator><name pos:line="98" pos:column="11">length<pos:position pos:line="98" pos:column="17"/></name></name> <operator pos:line="98" pos:column="18">=<pos:position pos:line="98" pos:column="19"/></operator> <name pos:line="98" pos:column="20">tmplength<pos:position pos:line="98" pos:column="29"/></name></expr>;<pos:position pos:line="98" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="99" pos:column="3">sigbdy<pos:position pos:line="99" pos:column="9"/></name><operator pos:line="99" pos:column="9">-&gt;<pos:position pos:line="99" pos:column="14"/></operator><name pos:line="99" pos:column="11">offset<pos:position pos:line="99" pos:column="17"/></name></name> <operator pos:line="99" pos:column="18">=<pos:position pos:line="99" pos:column="19"/></operator> <name pos:line="99" pos:column="20">tmpoffset<pos:position pos:line="99" pos:column="29"/></name></expr>;<pos:position pos:line="99" pos:column="30"/></expr_stmt>
  
  <comment type="block" pos:line="101" pos:column="3">/* restore the original source stream */</comment>
  <expr_stmt><expr><call><name pos:line="102" pos:column="3">safe_fclose<pos:position pos:line="102" pos:column="14"/></name> <argument_list pos:line="102" pos:column="15">(<argument><expr><operator pos:line="102" pos:column="16">&amp;<pos:position pos:line="102" pos:column="21"/></operator><name><name pos:line="102" pos:column="17">s<pos:position pos:line="102" pos:column="18"/></name><operator pos:line="102" pos:column="18">-&gt;<pos:position pos:line="102" pos:column="23"/></operator><name pos:line="102" pos:column="20">fpin<pos:position pos:line="102" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="103" pos:column="3">s<pos:position pos:line="103" pos:column="4"/></name><operator pos:line="103" pos:column="4">-&gt;<pos:position pos:line="103" pos:column="9"/></operator><name pos:line="103" pos:column="6">fpin<pos:position pos:line="103" pos:column="10"/></name></name> <operator pos:line="103" pos:column="11">=<pos:position pos:line="103" pos:column="12"/></operator> <name pos:line="103" pos:column="13">fp<pos:position pos:line="103" pos:column="15"/></name></expr>;<pos:position pos:line="103" pos:column="16"/></expr_stmt>
  

  <return pos:line="106" pos:column="3">return <expr><name pos:line="106" pos:column="10">badsig<pos:position pos:line="106" pos:column="16"/></name></expr>;<pos:position pos:line="106" pos:column="17"/></return>
}<pos:position pos:line="107" pos:column="2"/></block></function></unit>

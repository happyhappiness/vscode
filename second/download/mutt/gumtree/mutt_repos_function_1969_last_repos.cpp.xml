<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1969_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">STATIC<pos:position pos:line="1" pos:column="7"/></name>
<cpp:endif pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">endif<pos:position pos:line="2" pos:column="7"/></cpp:directive></cpp:endif>
<specifier pos:line="3" pos:column="1">const<pos:position pos:line="3" pos:column="6"/></specifier> <name pos:line="3" pos:column="7">char<pos:position pos:line="3" pos:column="11"/></name> <modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type>
<name pos:line="4" pos:column="1">locale_charset<pos:position pos:line="4" pos:column="15"/></name> <parameter_list pos:line="4" pos:column="16">()<pos:position pos:line="4" pos:column="18"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">codeset<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">aliases<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>

<cpp:ifndef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifndef<pos:position pos:line="9" pos:column="8"/></cpp:directive> <name pos:line="9" pos:column="9">WIN32<pos:position pos:line="9" pos:column="14"/></name></cpp:ifndef>

<cpp:if pos:line="11" pos:column="1"># <cpp:directive pos:line="11" pos:column="3">if<pos:position pos:line="11" pos:column="5"/></cpp:directive> <expr><name pos:line="11" pos:column="6">HAVE_LANGINFO_CODESET<pos:position pos:line="11" pos:column="27"/></name></expr></cpp:if>

  <comment type="block" pos:line="13" pos:column="3">/* Most systems support nl_langinfo (CODESET) nowadays.  */</comment>
  <expr_stmt><expr><name pos:line="14" pos:column="3">codeset<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <call><name pos:line="14" pos:column="13">nl_langinfo<pos:position pos:line="14" pos:column="24"/></name> <argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">CODESET<pos:position pos:line="14" pos:column="33"/></name></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>

<cpp:else pos:line="16" pos:column="1"># <cpp:directive pos:line="16" pos:column="3">else<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:else>

  <comment type="block" pos:line="18" pos:column="3">/* On old systems which lack it, use setlocale or getenv.  */</comment>
  <decl_stmt><decl><type><specifier pos:line="19" pos:column="3">const<pos:position pos:line="19" pos:column="8"/></specifier> <name pos:line="19" pos:column="9">char<pos:position pos:line="19" pos:column="13"/></name> <modifier pos:line="19" pos:column="14">*<pos:position pos:line="19" pos:column="15"/></modifier></type><name pos:line="19" pos:column="15">locale<pos:position pos:line="19" pos:column="21"/></name> <init pos:line="19" pos:column="22">= <expr><name pos:line="19" pos:column="24">NULL<pos:position pos:line="19" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="29"/></decl_stmt>

  <comment type="block" pos:line="21" pos:column="3">/* But most old systems don't have a complete set of locales.  Some
     (like SunOS 4 or DJGPP) have only the C locale.  Therefore we don't
     use setlocale here; it would return "C" when it doesn't support the
     locale name the user has set.  */</comment>
<cpp:if pos:line="25" pos:column="1">#  <cpp:directive pos:line="25" pos:column="4">if<pos:position pos:line="25" pos:column="6"/></cpp:directive> <expr><name pos:line="25" pos:column="7">HAVE_SETLOCALE<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">&amp;&amp;<pos:position pos:line="25" pos:column="32"/></operator> <literal type="number" pos:line="25" pos:column="25">0<pos:position pos:line="25" pos:column="26"/></literal></expr></cpp:if>
  <expr_stmt><expr><name pos:line="26" pos:column="3">locale<pos:position pos:line="26" pos:column="9"/></name> <operator pos:line="26" pos:column="10">=<pos:position pos:line="26" pos:column="11"/></operator> <call><name pos:line="26" pos:column="12">setlocale<pos:position pos:line="26" pos:column="21"/></name> <argument_list pos:line="26" pos:column="22">(<argument><expr><name pos:line="26" pos:column="23">LC_CTYPE<pos:position pos:line="26" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="33">NULL<pos:position pos:line="26" pos:column="37"/></name></expr></argument>)<pos:position pos:line="26" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt>
<cpp:endif pos:line="27" pos:column="1">#  <cpp:directive pos:line="27" pos:column="4">endif<pos:position pos:line="27" pos:column="9"/></cpp:directive></cpp:endif>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">locale<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">==<pos:position pos:line="28" pos:column="16"/></operator> <name pos:line="28" pos:column="17">NULL<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">||<pos:position pos:line="28" pos:column="24"/></operator> <name><name pos:line="28" pos:column="25">locale<pos:position pos:line="28" pos:column="31"/></name><index pos:line="28" pos:column="31">[<expr><literal type="number" pos:line="28" pos:column="32">0<pos:position pos:line="28" pos:column="33"/></literal></expr>]<pos:position pos:line="28" pos:column="34"/></index></name> <operator pos:line="28" pos:column="35">==<pos:position pos:line="28" pos:column="37"/></operator> <literal type="char" pos:line="28" pos:column="38">'\0'<pos:position pos:line="28" pos:column="42"/></literal></expr>)<pos:position pos:line="28" pos:column="43"/></condition><then pos:line="28" pos:column="43">
    <block pos:line="29" pos:column="5">{
      <expr_stmt><expr><name pos:line="30" pos:column="7">locale<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <call><name pos:line="30" pos:column="16">getenv<pos:position pos:line="30" pos:column="22"/></name> <argument_list pos:line="30" pos:column="23">(<argument><expr><literal type="string" pos:line="30" pos:column="24">"LC_ALL"<pos:position pos:line="30" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="34"/></expr_stmt>
      <if pos:line="31" pos:column="7">if <condition pos:line="31" pos:column="10">(<expr><name pos:line="31" pos:column="11">locale<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">==<pos:position pos:line="31" pos:column="20"/></operator> <name pos:line="31" pos:column="21">NULL<pos:position pos:line="31" pos:column="25"/></name> <operator pos:line="31" pos:column="26">||<pos:position pos:line="31" pos:column="28"/></operator> <name><name pos:line="31" pos:column="29">locale<pos:position pos:line="31" pos:column="35"/></name><index pos:line="31" pos:column="35">[<expr><literal type="number" pos:line="31" pos:column="36">0<pos:position pos:line="31" pos:column="37"/></literal></expr>]<pos:position pos:line="31" pos:column="38"/></index></name> <operator pos:line="31" pos:column="39">==<pos:position pos:line="31" pos:column="41"/></operator> <literal type="char" pos:line="31" pos:column="42">'\0'<pos:position pos:line="31" pos:column="46"/></literal></expr>)<pos:position pos:line="31" pos:column="47"/></condition><then pos:line="31" pos:column="47">
	<block pos:line="32" pos:column="9">{
	  <expr_stmt><expr><name pos:line="33" pos:column="11">locale<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">=<pos:position pos:line="33" pos:column="19"/></operator> <call><name pos:line="33" pos:column="20">getenv<pos:position pos:line="33" pos:column="26"/></name> <argument_list pos:line="33" pos:column="27">(<argument><expr><literal type="string" pos:line="33" pos:column="28">"LC_CTYPE"<pos:position pos:line="33" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>
	  <if pos:line="34" pos:column="11">if <condition pos:line="34" pos:column="14">(<expr><name pos:line="34" pos:column="15">locale<pos:position pos:line="34" pos:column="21"/></name> <operator pos:line="34" pos:column="22">==<pos:position pos:line="34" pos:column="24"/></operator> <name pos:line="34" pos:column="25">NULL<pos:position pos:line="34" pos:column="29"/></name> <operator pos:line="34" pos:column="30">||<pos:position pos:line="34" pos:column="32"/></operator> <name><name pos:line="34" pos:column="33">locale<pos:position pos:line="34" pos:column="39"/></name><index pos:line="34" pos:column="39">[<expr><literal type="number" pos:line="34" pos:column="40">0<pos:position pos:line="34" pos:column="41"/></literal></expr>]<pos:position pos:line="34" pos:column="42"/></index></name> <operator pos:line="34" pos:column="43">==<pos:position pos:line="34" pos:column="45"/></operator> <literal type="char" pos:line="34" pos:column="46">'\0'<pos:position pos:line="34" pos:column="50"/></literal></expr>)<pos:position pos:line="34" pos:column="51"/></condition><then pos:line="34" pos:column="51">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="13">locale<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">=<pos:position pos:line="35" pos:column="21"/></operator> <call><name pos:line="35" pos:column="22">getenv<pos:position pos:line="35" pos:column="28"/></name> <argument_list pos:line="35" pos:column="29">(<argument><expr><literal type="string" pos:line="35" pos:column="30">"LANG"<pos:position pos:line="35" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="38"/></expr_stmt></block></then></if>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="39" pos:column="3">/* On some old systems, one used to set locale = "iso8859_1". On others,
     you set it to "language_COUNTRY.charset". In any case, we resolve it
     through the charset.alias file.  */</comment>
  <expr_stmt><expr><name pos:line="42" pos:column="3">codeset<pos:position pos:line="42" pos:column="10"/></name> <operator pos:line="42" pos:column="11">=<pos:position pos:line="42" pos:column="12"/></operator> <name pos:line="42" pos:column="13">locale<pos:position pos:line="42" pos:column="19"/></name></expr>;<pos:position pos:line="42" pos:column="20"/></expr_stmt>

<cpp:endif pos:line="44" pos:column="1"># <cpp:directive pos:line="44" pos:column="3">endif<pos:position pos:line="44" pos:column="8"/></cpp:directive></cpp:endif>

<cpp:else pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">else<pos:position pos:line="46" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="46" pos:column="7">/* WIN32 */</comment>

  <decl_stmt><decl><specifier pos:line="48" pos:column="3">static<pos:position pos:line="48" pos:column="9"/></specifier> <type><name pos:line="48" pos:column="10">char<pos:position pos:line="48" pos:column="14"/></name></type> <name><name pos:line="48" pos:column="15">buf<pos:position pos:line="48" pos:column="18"/></name><index pos:line="48" pos:column="18">[<expr><literal type="number" pos:line="48" pos:column="19">2<pos:position pos:line="48" pos:column="20"/></literal> <operator pos:line="48" pos:column="21">+<pos:position pos:line="48" pos:column="22"/></operator> <literal type="number" pos:line="48" pos:column="23">10<pos:position pos:line="48" pos:column="25"/></literal> <operator pos:line="48" pos:column="26">+<pos:position pos:line="48" pos:column="27"/></operator> <literal type="number" pos:line="48" pos:column="28">1<pos:position pos:line="48" pos:column="29"/></literal></expr>]<pos:position pos:line="48" pos:column="30"/></index></name></decl>;<pos:position pos:line="48" pos:column="31"/></decl_stmt>

  <comment type="block" pos:line="50" pos:column="3">/* Win32 has a function returning the locale's codepage as a number.  */</comment>
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">sprintf<pos:position pos:line="51" pos:column="10"/></name> <argument_list pos:line="51" pos:column="11">(<argument><expr><name pos:line="51" pos:column="12">buf<pos:position pos:line="51" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="17">"CP%u"<pos:position pos:line="51" pos:column="23"/></literal></expr></argument>, <argument><expr><call><name pos:line="51" pos:column="25">GetACP<pos:position pos:line="51" pos:column="31"/></name> <argument_list pos:line="51" pos:column="32">()<pos:position pos:line="51" pos:column="34"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name pos:line="52" pos:column="3">codeset<pos:position pos:line="52" pos:column="10"/></name> <operator pos:line="52" pos:column="11">=<pos:position pos:line="52" pos:column="12"/></operator> <name pos:line="52" pos:column="13">buf<pos:position pos:line="52" pos:column="16"/></name></expr>;<pos:position pos:line="52" pos:column="17"/></expr_stmt>

<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif<pos:position pos:line="54" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="56" pos:column="3">if <condition pos:line="56" pos:column="6">(<expr><name pos:line="56" pos:column="7">codeset<pos:position pos:line="56" pos:column="14"/></name> <operator pos:line="56" pos:column="15">==<pos:position pos:line="56" pos:column="17"/></operator> <name pos:line="56" pos:column="18">NULL<pos:position pos:line="56" pos:column="22"/></name></expr>)<pos:position pos:line="56" pos:column="23"/></condition><then pos:line="56" pos:column="23">
    <comment type="block" pos:line="57" pos:column="5">/* The canonical name cannot be determined.  */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="58" pos:column="5">codeset<pos:position pos:line="58" pos:column="12"/></name> <operator pos:line="58" pos:column="13">=<pos:position pos:line="58" pos:column="14"/></operator> <literal type="string" pos:line="58" pos:column="15">""<pos:position pos:line="58" pos:column="17"/></literal></expr>;<pos:position pos:line="58" pos:column="18"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="60" pos:column="3">/* Resolve alias. */</comment>
  <for pos:line="61" pos:column="3">for <control pos:line="61" pos:column="7">(<init><expr><name pos:line="61" pos:column="8">aliases<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">=<pos:position pos:line="61" pos:column="17"/></operator> <call><name pos:line="61" pos:column="18">get_charset_aliases<pos:position pos:line="61" pos:column="37"/></name> <argument_list pos:line="61" pos:column="38">()<pos:position pos:line="61" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="41"/></init>
       <condition><expr><operator pos:line="62" pos:column="8">*<pos:position pos:line="62" pos:column="9"/></operator><name pos:line="62" pos:column="9">aliases<pos:position pos:line="62" pos:column="16"/></name> <operator pos:line="62" pos:column="17">!=<pos:position pos:line="62" pos:column="19"/></operator> <literal type="char" pos:line="62" pos:column="20">'\0'<pos:position pos:line="62" pos:column="24"/></literal></expr>;<pos:position pos:line="62" pos:column="25"/></condition>
       <incr><expr><name pos:line="63" pos:column="8">aliases<pos:position pos:line="63" pos:column="15"/></name> <operator pos:line="63" pos:column="16">+=<pos:position pos:line="63" pos:column="18"/></operator> <call><name pos:line="63" pos:column="19">strlen<pos:position pos:line="63" pos:column="25"/></name> <argument_list pos:line="63" pos:column="26">(<argument><expr><name pos:line="63" pos:column="27">aliases<pos:position pos:line="63" pos:column="34"/></name></expr></argument>)<pos:position pos:line="63" pos:column="35"/></argument_list></call> <operator pos:line="63" pos:column="36">+<pos:position pos:line="63" pos:column="37"/></operator> <literal type="number" pos:line="63" pos:column="38">1<pos:position pos:line="63" pos:column="39"/></literal></expr><operator pos:line="63" pos:column="39">,<pos:position pos:line="63" pos:column="40"/></operator> <expr><name pos:line="63" pos:column="41">aliases<pos:position pos:line="63" pos:column="48"/></name> <operator pos:line="63" pos:column="49">+=<pos:position pos:line="63" pos:column="51"/></operator> <call><name pos:line="63" pos:column="52">strlen<pos:position pos:line="63" pos:column="58"/></name> <argument_list pos:line="63" pos:column="59">(<argument><expr><name pos:line="63" pos:column="60">aliases<pos:position pos:line="63" pos:column="67"/></name></expr></argument>)<pos:position pos:line="63" pos:column="68"/></argument_list></call> <operator pos:line="63" pos:column="69">+<pos:position pos:line="63" pos:column="70"/></operator> <literal type="number" pos:line="63" pos:column="71">1<pos:position pos:line="63" pos:column="72"/></literal></expr></incr>)<pos:position pos:line="63" pos:column="73"/></control>
    <block type="pseudo"><if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><call><name pos:line="64" pos:column="9">strcmp<pos:position pos:line="64" pos:column="15"/></name> <argument_list pos:line="64" pos:column="16">(<argument><expr><name pos:line="64" pos:column="17">codeset<pos:position pos:line="64" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="26">aliases<pos:position pos:line="64" pos:column="33"/></name></expr></argument>)<pos:position pos:line="64" pos:column="34"/></argument_list></call> <operator pos:line="64" pos:column="35">==<pos:position pos:line="64" pos:column="37"/></operator> <literal type="number" pos:line="64" pos:column="38">0<pos:position pos:line="64" pos:column="39"/></literal>
	<operator pos:line="65" pos:column="9">||<pos:position pos:line="65" pos:column="11"/></operator> <operator pos:line="65" pos:column="12">(<pos:position pos:line="65" pos:column="13"/></operator><name><name pos:line="65" pos:column="13">aliases<pos:position pos:line="65" pos:column="20"/></name><index pos:line="65" pos:column="20">[<expr><literal type="number" pos:line="65" pos:column="21">0<pos:position pos:line="65" pos:column="22"/></literal></expr>]<pos:position pos:line="65" pos:column="23"/></index></name> <operator pos:line="65" pos:column="24">==<pos:position pos:line="65" pos:column="26"/></operator> <literal type="char" pos:line="65" pos:column="27">'*'<pos:position pos:line="65" pos:column="30"/></literal> <operator pos:line="65" pos:column="31">&amp;&amp;<pos:position pos:line="65" pos:column="41"/></operator> <name><name pos:line="65" pos:column="34">aliases<pos:position pos:line="65" pos:column="41"/></name><index pos:line="65" pos:column="41">[<expr><literal type="number" pos:line="65" pos:column="42">1<pos:position pos:line="65" pos:column="43"/></literal></expr>]<pos:position pos:line="65" pos:column="44"/></index></name> <operator pos:line="65" pos:column="45">==<pos:position pos:line="65" pos:column="47"/></operator> <literal type="char" pos:line="65" pos:column="48">'\0'<pos:position pos:line="65" pos:column="52"/></literal><operator pos:line="65" pos:column="52">)<pos:position pos:line="65" pos:column="53"/></operator></expr>)<pos:position pos:line="65" pos:column="54"/></condition><then pos:line="65" pos:column="54">
      <block pos:line="66" pos:column="7">{
	<expr_stmt><expr><name pos:line="67" pos:column="9">codeset<pos:position pos:line="67" pos:column="16"/></name> <operator pos:line="67" pos:column="17">=<pos:position pos:line="67" pos:column="18"/></operator> <name pos:line="67" pos:column="19">aliases<pos:position pos:line="67" pos:column="26"/></name> <operator pos:line="67" pos:column="27">+<pos:position pos:line="67" pos:column="28"/></operator> <call><name pos:line="67" pos:column="29">strlen<pos:position pos:line="67" pos:column="35"/></name> <argument_list pos:line="67" pos:column="36">(<argument><expr><name pos:line="67" pos:column="37">aliases<pos:position pos:line="67" pos:column="44"/></name></expr></argument>)<pos:position pos:line="67" pos:column="45"/></argument_list></call> <operator pos:line="67" pos:column="46">+<pos:position pos:line="67" pos:column="47"/></operator> <literal type="number" pos:line="67" pos:column="48">1<pos:position pos:line="67" pos:column="49"/></literal></expr>;<pos:position pos:line="67" pos:column="50"/></expr_stmt>
	<break pos:line="68" pos:column="9">break;<pos:position pos:line="68" pos:column="15"/></break>
      }<pos:position pos:line="69" pos:column="8"/></block></then></if></block></for>

  <return pos:line="71" pos:column="3">return <expr><name pos:line="71" pos:column="10">codeset<pos:position pos:line="71" pos:column="17"/></name></expr>;<pos:position pos:line="71" pos:column="18"/></return>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

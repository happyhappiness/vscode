<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1645_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">crypt_current_time<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">STATE<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">s<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">app_name<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">time_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">t<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">p<pos:position pos:line="4" pos:column="9"/></name><index pos:line="4" pos:column="9">[<expr><name pos:line="4" pos:column="10">STRING<pos:position pos:line="4" pos:column="16"/></name></expr>]<pos:position pos:line="4" pos:column="17"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="4" pos:column="19">tmp<pos:position pos:line="4" pos:column="22"/></name><index pos:line="4" pos:column="22">[<expr><name pos:line="4" pos:column="23">STRING<pos:position pos:line="4" pos:column="29"/></name></expr>]<pos:position pos:line="4" pos:column="30"/></index></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">!<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">WithCrypto<pos:position pos:line="6" pos:column="18"/></name></expr>)<pos:position pos:line="6" pos:column="19"/></condition><then pos:line="6" pos:column="19">
    <block type="pseudo"><return pos:line="7" pos:column="5">return;<pos:position pos:line="7" pos:column="12"/></return></block></then></if>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><call><name pos:line="9" pos:column="7">option<pos:position pos:line="9" pos:column="13"/></name> <argument_list pos:line="9" pos:column="14">(<argument><expr><name pos:line="9" pos:column="15">OPTCRYPTTIMESTAMP<pos:position pos:line="9" pos:column="32"/></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="34"/></condition><then pos:line="9" pos:column="34">
  <block pos:line="10" pos:column="3">{
    <expr_stmt><expr><name pos:line="11" pos:column="5">t<pos:position pos:line="11" pos:column="6"/></name> <operator pos:line="11" pos:column="7">=<pos:position pos:line="11" pos:column="8"/></operator> <call><name pos:line="11" pos:column="9">time<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name pos:line="11" pos:column="14">NULL<pos:position pos:line="11" pos:column="18"/></name></expr></argument>)<pos:position pos:line="11" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">strftime<pos:position pos:line="12" pos:column="13"/></name> <argument_list pos:line="12" pos:column="14">(<argument><expr><name pos:line="12" pos:column="15">p<pos:position pos:line="12" pos:column="16"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="18">sizeof <argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">p<pos:position pos:line="12" pos:column="27"/></name></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="30">_<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><literal type="string" pos:line="12" pos:column="32">" (current time: %c)"<pos:position pos:line="12" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="56">localtime<pos:position pos:line="12" pos:column="65"/></name> <argument_list pos:line="12" pos:column="66">(<argument><expr><operator pos:line="12" pos:column="67">&amp;<pos:position pos:line="12" pos:column="72"/></operator><name pos:line="12" pos:column="68">t<pos:position pos:line="12" pos:column="69"/></name></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="72"/></expr_stmt>
  }<pos:position pos:line="13" pos:column="4"/></block></then>
  <else pos:line="14" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><operator pos:line="15" pos:column="5">*<pos:position pos:line="15" pos:column="6"/></operator><name pos:line="15" pos:column="6">p<pos:position pos:line="15" pos:column="7"/></name> <operator pos:line="15" pos:column="8">=<pos:position pos:line="15" pos:column="9"/></operator> <literal type="char" pos:line="15" pos:column="10">'\0'<pos:position pos:line="15" pos:column="14"/></literal></expr>;<pos:position pos:line="15" pos:column="15"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">snprintf<pos:position pos:line="17" pos:column="11"/></name> <argument_list pos:line="17" pos:column="12">(<argument><expr><name pos:line="17" pos:column="13">tmp<pos:position pos:line="17" pos:column="16"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="18">sizeof <argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">tmp<pos:position pos:line="17" pos:column="29"/></name></expr></argument>)<pos:position pos:line="17" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="32">_<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><literal type="string" pos:line="17" pos:column="34">"[-- %s output follows%s --]\n"<pos:position pos:line="17" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="68">NONULL<pos:position pos:line="17" pos:column="74"/></name><argument_list pos:line="17" pos:column="74">(<argument><expr><name pos:line="17" pos:column="75">app_name<pos:position pos:line="17" pos:column="83"/></name></expr></argument>)<pos:position pos:line="17" pos:column="84"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="86">p<pos:position pos:line="17" pos:column="87"/></name></expr></argument>)<pos:position pos:line="17" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="89"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">state_attach_puts<pos:position pos:line="18" pos:column="20"/></name> <argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">tmp<pos:position pos:line="18" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="27">s<pos:position pos:line="18" pos:column="28"/></name></expr></argument>)<pos:position pos:line="18" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

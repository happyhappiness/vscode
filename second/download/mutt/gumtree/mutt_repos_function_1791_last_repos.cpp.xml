<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1791_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_envlist_set<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">name<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">value<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">int<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">overwrite<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier><modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">envp<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><name pos:line="3" pos:column="17">envlist<pos:position pos:line="3" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">work<pos:position pos:line="4" pos:column="12"/></name><index pos:line="4" pos:column="12">[<expr><name pos:line="4" pos:column="13">LONG_STRING<pos:position pos:line="4" pos:column="24"/></name></expr>]<pos:position pos:line="4" pos:column="25"/></index></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">count<pos:position pos:line="5" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="14">len<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">len<pos:position pos:line="7" pos:column="6"/></name> <operator pos:line="7" pos:column="7">=<pos:position pos:line="7" pos:column="8"/></operator> <call><name pos:line="7" pos:column="9">mutt_strlen<pos:position pos:line="7" pos:column="20"/></name> <argument_list pos:line="7" pos:column="21">(<argument><expr><name pos:line="7" pos:column="22">name<pos:position pos:line="7" pos:column="26"/></name></expr></argument>)<pos:position pos:line="7" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="28"/></expr_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* Look for current slot to overwrite */</comment>
  <expr_stmt><expr><name pos:line="10" pos:column="3">count<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <literal type="number" pos:line="10" pos:column="11">0<pos:position pos:line="10" pos:column="12"/></literal></expr>;<pos:position pos:line="10" pos:column="13"/></expr_stmt>
  <while pos:line="11" pos:column="3">while <condition pos:line="11" pos:column="9">(<expr><name pos:line="11" pos:column="10">envp<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">&amp;&amp;<pos:position pos:line="11" pos:column="25"/></operator> <operator pos:line="11" pos:column="18">*<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="19">envp<pos:position pos:line="11" pos:column="23"/></name></expr>)<pos:position pos:line="11" pos:column="24"/></condition>
  <block pos:line="12" pos:column="3">{
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><call><name pos:line="13" pos:column="10">mutt_strncmp<pos:position pos:line="13" pos:column="22"/></name> <argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">name<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="30">*<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="31">envp<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="37">len<pos:position pos:line="13" pos:column="40"/></name></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call> <operator pos:line="13" pos:column="42">&amp;&amp;<pos:position pos:line="13" pos:column="52"/></operator> <operator pos:line="13" pos:column="45">(<pos:position pos:line="13" pos:column="46"/></operator><operator pos:line="13" pos:column="46">*<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="47">envp<pos:position pos:line="13" pos:column="51"/></name><operator pos:line="13" pos:column="51">)<pos:position pos:line="13" pos:column="52"/></operator><index pos:line="13" pos:column="52">[<expr><name pos:line="13" pos:column="53">len<pos:position pos:line="13" pos:column="56"/></name></expr>]<pos:position pos:line="13" pos:column="57"/></index> <operator pos:line="13" pos:column="58">==<pos:position pos:line="13" pos:column="60"/></operator> <literal type="char" pos:line="13" pos:column="61">'='<pos:position pos:line="13" pos:column="64"/></literal></expr>)<pos:position pos:line="13" pos:column="65"/></condition><then pos:line="13" pos:column="65">
    <block pos:line="14" pos:column="5">{
      <if pos:line="15" pos:column="7">if <condition pos:line="15" pos:column="10">(<expr><operator pos:line="15" pos:column="11">!<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">overwrite<pos:position pos:line="15" pos:column="21"/></name></expr>)<pos:position pos:line="15" pos:column="22"/></condition><then pos:line="15" pos:column="22">
        <block type="pseudo"><return pos:line="16" pos:column="9">return;<pos:position pos:line="16" pos:column="16"/></return></block></then></if>
      <break pos:line="17" pos:column="7">break;<pos:position pos:line="17" pos:column="13"/></break>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="19" pos:column="5">envp<pos:position pos:line="19" pos:column="9"/></name><operator pos:line="19" pos:column="9">++<pos:position pos:line="19" pos:column="11"/></operator></expr>;<pos:position pos:line="19" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">count<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">++<pos:position pos:line="20" pos:column="12"/></operator></expr>;<pos:position pos:line="20" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></while>

  <comment type="block" pos:line="23" pos:column="3">/* Format var=value string */</comment>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">snprintf<pos:position pos:line="24" pos:column="11"/></name> <argument_list pos:line="24" pos:column="12">(<argument><expr><name pos:line="24" pos:column="13">work<pos:position pos:line="24" pos:column="17"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="19">sizeof<argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">work<pos:position pos:line="24" pos:column="30"/></name></expr></argument>)<pos:position pos:line="24" pos:column="31"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="33">"%s=%s"<pos:position pos:line="24" pos:column="40"/></literal></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="42">NONULL<pos:position pos:line="24" pos:column="48"/></name> <argument_list pos:line="24" pos:column="49">(<argument><expr><name pos:line="24" pos:column="50">name<pos:position pos:line="24" pos:column="54"/></name></expr></argument>)<pos:position pos:line="24" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="57">NONULL<pos:position pos:line="24" pos:column="63"/></name> <argument_list pos:line="24" pos:column="64">(<argument><expr><name pos:line="24" pos:column="65">value<pos:position pos:line="24" pos:column="70"/></name></expr></argument>)<pos:position pos:line="24" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="73"/></expr_stmt>

  <comment type="block" pos:line="26" pos:column="3">/* If slot found, overwrite */</comment>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">envp<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">&amp;&amp;<pos:position pos:line="27" pos:column="22"/></operator> <operator pos:line="27" pos:column="15">*<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="16">envp<pos:position pos:line="27" pos:column="20"/></name></expr>)<pos:position pos:line="27" pos:column="21"/></condition><then pos:line="27" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="5">mutt_str_replace<pos:position pos:line="28" pos:column="21"/></name> <argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">envp<pos:position pos:line="28" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="29">work<pos:position pos:line="28" pos:column="33"/></name></expr></argument>)<pos:position pos:line="28" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt></block></then>

  <comment type="block" pos:line="30" pos:column="3">/* If not found, add new slot */</comment>
  <else pos:line="31" pos:column="3">else
  <block pos:line="32" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">safe_realloc<pos:position pos:line="33" pos:column="17"/></name> <argument_list pos:line="33" pos:column="18">(<argument><expr><operator pos:line="33" pos:column="19">&amp;<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="20">envlist<pos:position pos:line="33" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="29">sizeof<argument_list pos:line="33" pos:column="35">(<argument><expr><name pos:line="33" pos:column="36">char<pos:position pos:line="33" pos:column="40"/></name> <operator pos:line="33" pos:column="41">*<pos:position pos:line="33" pos:column="42"/></operator></expr></argument>)<pos:position pos:line="33" pos:column="43"/></argument_list></sizeof> <operator pos:line="33" pos:column="44">*<pos:position pos:line="33" pos:column="45"/></operator> <operator pos:line="33" pos:column="46">(<pos:position pos:line="33" pos:column="47"/></operator><name pos:line="33" pos:column="47">count<pos:position pos:line="33" pos:column="52"/></name> <operator pos:line="33" pos:column="53">+<pos:position pos:line="33" pos:column="54"/></operator> <literal type="number" pos:line="33" pos:column="55">2<pos:position pos:line="33" pos:column="56"/></literal><operator pos:line="33" pos:column="56">)<pos:position pos:line="33" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="33" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">envlist<pos:position pos:line="34" pos:column="12"/></name><index pos:line="34" pos:column="12">[<expr><name pos:line="34" pos:column="13">count<pos:position pos:line="34" pos:column="18"/></name></expr>]<pos:position pos:line="34" pos:column="19"/></index></name> <operator pos:line="34" pos:column="20">=<pos:position pos:line="34" pos:column="21"/></operator> <call><name pos:line="34" pos:column="22">safe_strdup<pos:position pos:line="34" pos:column="33"/></name> <argument_list pos:line="34" pos:column="34">(<argument><expr><name pos:line="34" pos:column="35">work<pos:position pos:line="34" pos:column="39"/></name></expr></argument>)<pos:position pos:line="34" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">envlist<pos:position pos:line="35" pos:column="12"/></name><index pos:line="35" pos:column="12">[<expr><name pos:line="35" pos:column="13">count<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">+<pos:position pos:line="35" pos:column="20"/></operator> <literal type="number" pos:line="35" pos:column="21">1<pos:position pos:line="35" pos:column="22"/></literal></expr>]<pos:position pos:line="35" pos:column="23"/></index></name> <operator pos:line="35" pos:column="24">=<pos:position pos:line="35" pos:column="25"/></operator> <name pos:line="35" pos:column="26">NULL<pos:position pos:line="35" pos:column="30"/></name></expr>;<pos:position pos:line="35" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block></else></if>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

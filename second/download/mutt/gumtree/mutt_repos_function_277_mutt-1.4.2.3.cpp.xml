<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_277_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_parse_mailboxes<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">BUFFER<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">path<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">BUFFER<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">s<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">unsigned<pos:position pos:line="1" pos:column="60"/></name> <name pos:line="1" pos:column="61">long<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">data<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="72">BUFFER<pos:position pos:line="1" pos:column="78"/></name> <modifier pos:line="1" pos:column="79">*<pos:position pos:line="1" pos:column="80"/></modifier></type><name pos:line="1" pos:column="80">err<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="84"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">BUFFY<pos:position pos:line="3" pos:column="8"/></name> <modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier><modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">tmp<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buf<pos:position pos:line="4" pos:column="11"/></name><index pos:line="4" pos:column="11">[<expr><name pos:line="4" pos:column="12">_POSIX_PATH_MAX<pos:position pos:line="4" pos:column="27"/></name></expr>]<pos:position pos:line="4" pos:column="28"/></index></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">BUFFY_SIZE<pos:position pos:line="5" pos:column="18"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">stat<pos:position pos:line="6" pos:column="14"/></name></name></type> <name pos:line="6" pos:column="15">sb<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="7" pos:column="8">/* BUFFY_SIZE */</comment>

  <while pos:line="9" pos:column="3">while <condition pos:line="9" pos:column="9">(<expr><call><name pos:line="9" pos:column="10">MoreArgs<pos:position pos:line="9" pos:column="18"/></name> <argument_list pos:line="9" pos:column="19">(<argument><expr><name pos:line="9" pos:column="20">s<pos:position pos:line="9" pos:column="21"/></name></expr></argument>)<pos:position pos:line="9" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="23"/></condition>
  <block pos:line="10" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">mutt_extract_token<pos:position pos:line="11" pos:column="23"/></name> <argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">path<pos:position pos:line="11" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="31">s<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="34">0<pos:position pos:line="11" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">strfcpy<pos:position pos:line="12" pos:column="12"/></name> <argument_list pos:line="12" pos:column="13">(<argument><expr><name pos:line="12" pos:column="14">buf<pos:position pos:line="12" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="19">path<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">data<pos:position pos:line="12" pos:column="29"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="31">sizeof <argument_list pos:line="12" pos:column="38">(<argument><expr><name pos:line="12" pos:column="39">buf<pos:position pos:line="12" pos:column="42"/></name></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">mutt_expand_path<pos:position pos:line="13" pos:column="21"/></name> <argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">buf<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="28">sizeof <argument_list pos:line="13" pos:column="35">(<argument><expr><name pos:line="13" pos:column="36">buf<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>

    <comment type="block" pos:line="15" pos:column="5">/* Skip empty tokens. */</comment>
    <if pos:line="16" pos:column="5">if<condition pos:line="16" pos:column="7">(<expr><operator pos:line="16" pos:column="8">!<pos:position pos:line="16" pos:column="9"/></operator><operator pos:line="16" pos:column="9">*<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">buf<pos:position pos:line="16" pos:column="13"/></name></expr>)<pos:position pos:line="16" pos:column="14"/></condition><then pos:line="16" pos:column="14"> <block type="pseudo"><continue pos:line="16" pos:column="15">continue;<pos:position pos:line="16" pos:column="24"/></continue></block></then></if>

    <comment type="block" pos:line="18" pos:column="5">/* simple check to avoid duplicates */</comment>
    <for pos:line="19" pos:column="5">for <control pos:line="19" pos:column="9">(<init><expr><name pos:line="19" pos:column="10">tmp<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <operator pos:line="19" pos:column="16">&amp;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="17">Incoming<pos:position pos:line="19" pos:column="25"/></name></expr>;<pos:position pos:line="19" pos:column="26"/></init> <condition><expr><operator pos:line="19" pos:column="27">*<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="28">tmp<pos:position pos:line="19" pos:column="31"/></name></expr>;<pos:position pos:line="19" pos:column="32"/></condition> <incr><expr><name pos:line="19" pos:column="33">tmp<pos:position pos:line="19" pos:column="36"/></name> <operator pos:line="19" pos:column="37">=<pos:position pos:line="19" pos:column="38"/></operator> <operator pos:line="19" pos:column="39">&amp;<pos:position pos:line="19" pos:column="44"/></operator><operator pos:line="19" pos:column="40">(<pos:position pos:line="19" pos:column="41"/></operator><name><operator pos:line="19" pos:column="41">(<pos:position pos:line="19" pos:column="42"/></operator><operator pos:line="19" pos:column="42">*<pos:position pos:line="19" pos:column="43"/></operator><name pos:line="19" pos:column="43">tmp<pos:position pos:line="19" pos:column="46"/></name><operator pos:line="19" pos:column="46">)<pos:position pos:line="19" pos:column="47"/></operator><operator pos:line="19" pos:column="47">-&gt;<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="49">next<pos:position pos:line="19" pos:column="53"/></name></name><operator pos:line="19" pos:column="53">)<pos:position pos:line="19" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="55"/></control>
    <block pos:line="20" pos:column="5">{
      <if pos:line="21" pos:column="7">if <condition pos:line="21" pos:column="10">(<expr><call><name pos:line="21" pos:column="11">mutt_strcmp<pos:position pos:line="21" pos:column="22"/></name> <argument_list pos:line="21" pos:column="23">(<argument><expr><name pos:line="21" pos:column="24">buf<pos:position pos:line="21" pos:column="27"/></name></expr></argument>, <argument><expr><name><operator pos:line="21" pos:column="29">(<pos:position pos:line="21" pos:column="30"/></operator><operator pos:line="21" pos:column="30">*<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="31">tmp<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">)<pos:position pos:line="21" pos:column="35"/></operator><operator pos:line="21" pos:column="35">-&gt;<pos:position pos:line="21" pos:column="40"/></operator><name pos:line="21" pos:column="37">path<pos:position pos:line="21" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="42"/></argument_list></call> <operator pos:line="21" pos:column="43">==<pos:position pos:line="21" pos:column="45"/></operator> <literal type="number" pos:line="21" pos:column="46">0<pos:position pos:line="21" pos:column="47"/></literal></expr>)<pos:position pos:line="21" pos:column="48"/></condition><then pos:line="21" pos:column="48">
	<block type="pseudo"><break pos:line="22" pos:column="9">break;<pos:position pos:line="22" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="23" pos:column="6"/></block></for>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">!<pos:position pos:line="25" pos:column="10"/></operator><operator pos:line="25" pos:column="10">*<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="11">tmp<pos:position pos:line="25" pos:column="14"/></name></expr>)<pos:position pos:line="25" pos:column="15"/></condition><then pos:line="25" pos:column="15">
    <block pos:line="26" pos:column="5">{
      <expr_stmt><expr><operator pos:line="27" pos:column="7">*<pos:position pos:line="27" pos:column="8"/></operator><name pos:line="27" pos:column="8">tmp<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <operator pos:line="27" pos:column="14">(<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="15">BUFFY<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">*<pos:position pos:line="27" pos:column="22"/></operator><operator pos:line="27" pos:column="22">)<pos:position pos:line="27" pos:column="23"/></operator> <call><name pos:line="27" pos:column="24">safe_calloc<pos:position pos:line="27" pos:column="35"/></name> <argument_list pos:line="27" pos:column="36">(<argument><expr><literal type="number" pos:line="27" pos:column="37">1<pos:position pos:line="27" pos:column="38"/></literal></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="40">sizeof <argument_list pos:line="27" pos:column="47">(<argument><expr><name pos:line="27" pos:column="48">BUFFY<pos:position pos:line="27" pos:column="53"/></name></expr></argument>)<pos:position pos:line="27" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="56"/></expr_stmt>
      <expr_stmt><expr><name><operator pos:line="28" pos:column="7">(<pos:position pos:line="28" pos:column="8"/></operator><operator pos:line="28" pos:column="8">*<pos:position pos:line="28" pos:column="9"/></operator><name pos:line="28" pos:column="9">tmp<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">)<pos:position pos:line="28" pos:column="13"/></operator><operator pos:line="28" pos:column="13">-&gt;<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="15">path<pos:position pos:line="28" pos:column="19"/></name></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <call><name pos:line="28" pos:column="22">safe_strdup<pos:position pos:line="28" pos:column="33"/></name> <argument_list pos:line="28" pos:column="34">(<argument><expr><name pos:line="28" pos:column="35">buf<pos:position pos:line="28" pos:column="38"/></name></expr></argument>)<pos:position pos:line="28" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name><operator pos:line="29" pos:column="7">(<pos:position pos:line="29" pos:column="8"/></operator><operator pos:line="29" pos:column="8">*<pos:position pos:line="29" pos:column="9"/></operator><name pos:line="29" pos:column="9">tmp<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">)<pos:position pos:line="29" pos:column="13"/></operator><operator pos:line="29" pos:column="13">-&gt;<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="15">next<pos:position pos:line="29" pos:column="19"/></name></name> <operator pos:line="29" pos:column="20">=<pos:position pos:line="29" pos:column="21"/></operator> <name pos:line="29" pos:column="22">NULL<pos:position pos:line="29" pos:column="26"/></name></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>
      <comment type="block" pos:line="30" pos:column="7">/* it is tempting to set magic right here */</comment>
      <expr_stmt><expr><name><operator pos:line="31" pos:column="7">(<pos:position pos:line="31" pos:column="8"/></operator><operator pos:line="31" pos:column="8">*<pos:position pos:line="31" pos:column="9"/></operator><name pos:line="31" pos:column="9">tmp<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">)<pos:position pos:line="31" pos:column="13"/></operator><operator pos:line="31" pos:column="13">-&gt;<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="15">magic<pos:position pos:line="31" pos:column="20"/></name></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <literal type="number" pos:line="31" pos:column="23">0<pos:position pos:line="31" pos:column="24"/></literal></expr>;<pos:position pos:line="31" pos:column="25"/></expr_stmt>
      
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><operator pos:line="35" pos:column="5">(<pos:position pos:line="35" pos:column="6"/></operator><operator pos:line="35" pos:column="6">*<pos:position pos:line="35" pos:column="7"/></operator><name pos:line="35" pos:column="7">tmp<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">)<pos:position pos:line="35" pos:column="11"/></operator><operator pos:line="35" pos:column="11">-&gt;<pos:position pos:line="35" pos:column="16"/></operator><name/></name>new <operator pos:line="35" pos:column="17">=<pos:position pos:line="35" pos:column="18"/></operator> <literal type="number" pos:line="35" pos:column="19">0<pos:position pos:line="35" pos:column="20"/></literal></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><operator pos:line="36" pos:column="5">(<pos:position pos:line="36" pos:column="6"/></operator><operator pos:line="36" pos:column="6">*<pos:position pos:line="36" pos:column="7"/></operator><name pos:line="36" pos:column="7">tmp<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">)<pos:position pos:line="36" pos:column="11"/></operator><operator pos:line="36" pos:column="11">-&gt;<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="13">notified<pos:position pos:line="36" pos:column="21"/></name></name> <operator pos:line="36" pos:column="22">=<pos:position pos:line="36" pos:column="23"/></operator> <literal type="number" pos:line="36" pos:column="24">1<pos:position pos:line="36" pos:column="25"/></literal></expr>;<pos:position pos:line="36" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><operator pos:line="37" pos:column="5">(<pos:position pos:line="37" pos:column="6"/></operator><operator pos:line="37" pos:column="6">*<pos:position pos:line="37" pos:column="7"/></operator><name pos:line="37" pos:column="7">tmp<pos:position pos:line="37" pos:column="10"/></name><operator pos:line="37" pos:column="10">)<pos:position pos:line="37" pos:column="11"/></operator><operator pos:line="37" pos:column="11">-&gt;<pos:position pos:line="37" pos:column="16"/></operator><name pos:line="37" pos:column="13">newly_created<pos:position pos:line="37" pos:column="26"/></name></name> <operator pos:line="37" pos:column="27">=<pos:position pos:line="37" pos:column="28"/></operator> <literal type="number" pos:line="37" pos:column="29">0<pos:position pos:line="37" pos:column="30"/></literal></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt>

<cpp:ifdef pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">ifdef<pos:position pos:line="39" pos:column="7"/></cpp:directive> <name pos:line="39" pos:column="8">BUFFY_SIZE<pos:position pos:line="39" pos:column="18"/></name></cpp:ifdef>
    <comment type="block" pos:line="40" pos:column="5">/* for buffy_size, it is important that if the folder is new (tested by
     * reading it), the size is set to 0 so that later when we check we see
     * that it increased .  without buffy_size we probably don't care.
     */</comment>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><call><name pos:line="44" pos:column="9">stat<pos:position pos:line="44" pos:column="13"/></name> <argument_list pos:line="44" pos:column="14">(<argument><expr><name><operator pos:line="44" pos:column="15">(<pos:position pos:line="44" pos:column="16"/></operator><operator pos:line="44" pos:column="16">*<pos:position pos:line="44" pos:column="17"/></operator><name pos:line="44" pos:column="17">tmp<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">)<pos:position pos:line="44" pos:column="21"/></operator><operator pos:line="44" pos:column="21">-&gt;<pos:position pos:line="44" pos:column="26"/></operator><name pos:line="44" pos:column="23">path<pos:position pos:line="44" pos:column="27"/></name></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="29">&amp;<pos:position pos:line="44" pos:column="34"/></operator><name pos:line="44" pos:column="30">sb<pos:position pos:line="44" pos:column="32"/></name></expr></argument>)<pos:position pos:line="44" pos:column="33"/></argument_list></call> <operator pos:line="44" pos:column="34">==<pos:position pos:line="44" pos:column="36"/></operator> <literal type="number" pos:line="44" pos:column="37">0<pos:position pos:line="44" pos:column="38"/></literal> <operator pos:line="44" pos:column="39">&amp;&amp;<pos:position pos:line="44" pos:column="49"/></operator> <operator pos:line="44" pos:column="42">!<pos:position pos:line="44" pos:column="43"/></operator><call><name pos:line="44" pos:column="43">test_new_folder<pos:position pos:line="44" pos:column="58"/></name> <argument_list pos:line="44" pos:column="59">(<argument><expr><name><operator pos:line="44" pos:column="60">(<pos:position pos:line="44" pos:column="61"/></operator><operator pos:line="44" pos:column="61">*<pos:position pos:line="44" pos:column="62"/></operator><name pos:line="44" pos:column="62">tmp<pos:position pos:line="44" pos:column="65"/></name><operator pos:line="44" pos:column="65">)<pos:position pos:line="44" pos:column="66"/></operator><operator pos:line="44" pos:column="66">-&gt;<pos:position pos:line="44" pos:column="71"/></operator><name pos:line="44" pos:column="68">path<pos:position pos:line="44" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="74"/></condition><then pos:line="44" pos:column="74">
    <block pos:line="45" pos:column="5">{
      <comment type="block" pos:line="46" pos:column="7">/* some systems out there don't have an off_t type */</comment>
      <expr_stmt><expr><name><operator pos:line="47" pos:column="7">(<pos:position pos:line="47" pos:column="8"/></operator><operator pos:line="47" pos:column="8">*<pos:position pos:line="47" pos:column="9"/></operator><name pos:line="47" pos:column="9">tmp<pos:position pos:line="47" pos:column="12"/></name><operator pos:line="47" pos:column="12">)<pos:position pos:line="47" pos:column="13"/></operator><operator pos:line="47" pos:column="13">-&gt;<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="15">size<pos:position pos:line="47" pos:column="19"/></name></name> <operator pos:line="47" pos:column="20">=<pos:position pos:line="47" pos:column="21"/></operator> <operator pos:line="47" pos:column="22">(<pos:position pos:line="47" pos:column="23"/></operator><name pos:line="47" pos:column="23">long<pos:position pos:line="47" pos:column="27"/></name><operator pos:line="47" pos:column="27">)<pos:position pos:line="47" pos:column="28"/></operator> <name><name pos:line="47" pos:column="29">sb<pos:position pos:line="47" pos:column="31"/></name><operator pos:line="47" pos:column="31">.<pos:position pos:line="47" pos:column="32"/></operator><name pos:line="47" pos:column="32">st_size<pos:position pos:line="47" pos:column="39"/></name></name></expr>;<pos:position pos:line="47" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></then>
    <else pos:line="49" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><operator pos:line="50" pos:column="7">(<pos:position pos:line="50" pos:column="8"/></operator><operator pos:line="50" pos:column="8">*<pos:position pos:line="50" pos:column="9"/></operator><name pos:line="50" pos:column="9">tmp<pos:position pos:line="50" pos:column="12"/></name><operator pos:line="50" pos:column="12">)<pos:position pos:line="50" pos:column="13"/></operator><operator pos:line="50" pos:column="13">-&gt;<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="15">size<pos:position pos:line="50" pos:column="19"/></name></name> <operator pos:line="50" pos:column="20">=<pos:position pos:line="50" pos:column="21"/></operator> <literal type="number" pos:line="50" pos:column="22">0<pos:position pos:line="50" pos:column="23"/></literal></expr>;<pos:position pos:line="50" pos:column="24"/></expr_stmt></block></else></if>
<cpp:endif pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">endif<pos:position pos:line="51" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="51" pos:column="8">/* BUFFY_SIZE */</comment>
  }<pos:position pos:line="52" pos:column="4"/></block></while>
  <return pos:line="53" pos:column="3">return <expr><literal type="number" pos:line="53" pos:column="10">0<pos:position pos:line="53" pos:column="11"/></literal></expr>;<pos:position pos:line="53" pos:column="12"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

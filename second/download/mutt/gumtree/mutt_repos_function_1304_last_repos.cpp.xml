<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1304_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">encode_headers<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">LIST<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">h<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">tmp<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">p<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name></decl>;<pos:position pos:line="5" pos:column="9"/></decl_stmt>

  <for pos:line="7" pos:column="3">for <control pos:line="7" pos:column="7">(<init pos:line="7" pos:column="8">;<pos:position pos:line="7" pos:column="9"/></init> <condition><expr><name pos:line="7" pos:column="10">h<pos:position pos:line="7" pos:column="11"/></name></expr>;<pos:position pos:line="7" pos:column="12"/></condition> <incr><expr><name pos:line="7" pos:column="13">h<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <name><name pos:line="7" pos:column="17">h<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">next<pos:position pos:line="7" pos:column="24"/></name></name></expr></incr>)<pos:position pos:line="7" pos:column="25"/></control>
  <block pos:line="8" pos:column="3">{
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><operator pos:line="9" pos:column="10">(<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="11">p<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <call><name pos:line="9" pos:column="15">strchr<pos:position pos:line="9" pos:column="21"/></name> <argument_list pos:line="9" pos:column="22">(<argument><expr><name><name pos:line="9" pos:column="23">h<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">-&gt;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="26">data<pos:position pos:line="9" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="9" pos:column="32">':'<pos:position pos:line="9" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call><operator pos:line="9" pos:column="36">)<pos:position pos:line="9" pos:column="37"/></operator></expr>)<pos:position pos:line="9" pos:column="38"/></condition><then pos:line="9" pos:column="38">
      <block type="pseudo"><continue pos:line="10" pos:column="7">continue;<pos:position pos:line="10" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="12" pos:column="5">i<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <name pos:line="12" pos:column="9">p<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">-<pos:position pos:line="12" pos:column="12"/></operator> <name><name pos:line="12" pos:column="13">h<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">data<pos:position pos:line="12" pos:column="20"/></name></name></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">p<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <call><name pos:line="13" pos:column="9">skip_email_wsp<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">p<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">+<pos:position pos:line="13" pos:column="27"/></operator> <literal type="number" pos:line="13" pos:column="28">1<pos:position pos:line="13" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">tmp<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">=<pos:position pos:line="14" pos:column="10"/></operator> <call><name pos:line="14" pos:column="11">safe_strdup<pos:position pos:line="14" pos:column="22"/></name> <argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">p<pos:position pos:line="14" pos:column="25"/></name></expr></argument>)<pos:position pos:line="14" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">tmp<pos:position pos:line="16" pos:column="13"/></name></expr>)<pos:position pos:line="16" pos:column="14"/></condition><then pos:line="16" pos:column="14">
      <block type="pseudo"><continue pos:line="17" pos:column="7">continue;<pos:position pos:line="17" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">rfc2047_encode_string<pos:position pos:line="19" pos:column="26"/></name> <argument_list pos:line="19" pos:column="27">(<argument><expr><operator pos:line="19" pos:column="28">&amp;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="29">tmp<pos:position pos:line="19" pos:column="32"/></name></expr></argument>)<pos:position pos:line="19" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">safe_realloc<pos:position pos:line="20" pos:column="17"/></name> <argument_list pos:line="20" pos:column="18">(<argument><expr><operator pos:line="20" pos:column="19">&amp;<pos:position pos:line="20" pos:column="24"/></operator><name><name pos:line="20" pos:column="20">h<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">data<pos:position pos:line="20" pos:column="27"/></name></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="29">mutt_strlen<pos:position pos:line="20" pos:column="40"/></name> <argument_list pos:line="20" pos:column="41">(<argument><expr><name><name pos:line="20" pos:column="42">h<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">-&gt;<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="45">data<pos:position pos:line="20" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call> <operator pos:line="20" pos:column="51">+<pos:position pos:line="20" pos:column="52"/></operator> <literal type="number" pos:line="20" pos:column="53">2<pos:position pos:line="20" pos:column="54"/></literal> <operator pos:line="20" pos:column="55">+<pos:position pos:line="20" pos:column="56"/></operator> <call><name pos:line="20" pos:column="57">mutt_strlen<pos:position pos:line="20" pos:column="68"/></name> <argument_list pos:line="20" pos:column="69">(<argument><expr><name pos:line="20" pos:column="70">tmp<pos:position pos:line="20" pos:column="73"/></name></expr></argument>)<pos:position pos:line="20" pos:column="74"/></argument_list></call> <operator pos:line="20" pos:column="75">+<pos:position pos:line="20" pos:column="76"/></operator> <literal type="number" pos:line="20" pos:column="77">1<pos:position pos:line="20" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="80"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">sprintf<pos:position pos:line="22" pos:column="12"/></name> <argument_list pos:line="22" pos:column="13">(<argument><expr><name><name pos:line="22" pos:column="14">h<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="17">data<pos:position pos:line="22" pos:column="21"/></name></name> <operator pos:line="22" pos:column="22">+<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="24">i<pos:position pos:line="22" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="27">": %s"<pos:position pos:line="22" pos:column="33"/></literal></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="35">NONULL<pos:position pos:line="22" pos:column="41"/></name> <argument_list pos:line="22" pos:column="42">(<argument><expr><name pos:line="22" pos:column="43">tmp<pos:position pos:line="22" pos:column="46"/></name></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt>  <comment type="block" pos:line="22" pos:column="51">/* __SPRINTF_CHECKED__ */</comment>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">FREE<pos:position pos:line="24" pos:column="9"/></name> <argument_list pos:line="24" pos:column="10">(<argument><expr><operator pos:line="24" pos:column="11">&amp;<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="12">tmp<pos:position pos:line="24" pos:column="15"/></name></expr></argument>)<pos:position pos:line="24" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></for>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_422_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">smime_extract_certificate<pos:position pos:line="1" pos:column="39"/></name> <parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">infile<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">FILE<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">fpout<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><name pos:line="3" pos:column="17">NULL<pos:position pos:line="3" pos:column="21"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="24">fperr<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><name pos:line="3" pos:column="32">NULL<pos:position pos:line="3" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">pk7out<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><name pos:line="4" pos:column="15">_POSIX_PATH_MAX<pos:position pos:line="4" pos:column="30"/></name></expr>]<pos:position pos:line="4" pos:column="31"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="4" pos:column="33">certfile<pos:position pos:line="4" pos:column="41"/></name><index pos:line="4" pos:column="41">[<expr><name pos:line="4" pos:column="42">_POSIX_PATH_MAX<pos:position pos:line="4" pos:column="57"/></name></expr>]<pos:position pos:line="4" pos:column="58"/></index></name></decl>;<pos:position pos:line="4" pos:column="59"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">tmpfname<pos:position pos:line="5" pos:column="16"/></name><index pos:line="5" pos:column="16">[<expr><name pos:line="5" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="5" pos:column="32"/></name></expr>]<pos:position pos:line="5" pos:column="33"/></index></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">pid_t<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">thepid<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">empty<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>


  <expr_stmt><expr><call><name pos:line="10" pos:column="3">mutt_mktemp<pos:position pos:line="10" pos:column="14"/></name> <argument_list pos:line="10" pos:column="15">(<argument><expr><name pos:line="10" pos:column="16">tmpfname<pos:position pos:line="10" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="26">sizeof <argument_list pos:line="10" pos:column="33">(<argument><expr><name pos:line="10" pos:column="34">tmpfname<pos:position pos:line="10" pos:column="42"/></name></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="45"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">(<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">fperr<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <call><name pos:line="11" pos:column="16">safe_fopen<pos:position pos:line="11" pos:column="26"/></name> <argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">tmpfname<pos:position pos:line="11" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="38">"w+"<pos:position pos:line="11" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call><operator pos:line="11" pos:column="43">)<pos:position pos:line="11" pos:column="44"/></operator> <operator pos:line="11" pos:column="45">==<pos:position pos:line="11" pos:column="47"/></operator> <name pos:line="11" pos:column="48">NULL<pos:position pos:line="11" pos:column="52"/></name></expr>)<pos:position pos:line="11" pos:column="53"/></condition><then pos:line="11" pos:column="53">
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">mutt_perror<pos:position pos:line="13" pos:column="16"/></name> <argument_list pos:line="13" pos:column="17">(<argument><expr><name pos:line="13" pos:column="18">tmpfname<pos:position pos:line="13" pos:column="26"/></name></expr></argument>)<pos:position pos:line="13" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="28"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">NULL<pos:position pos:line="14" pos:column="16"/></name></expr>;<pos:position pos:line="14" pos:column="17"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">mutt_unlink<pos:position pos:line="16" pos:column="14"/></name> <argument_list pos:line="16" pos:column="15">(<argument><expr><name pos:line="16" pos:column="16">tmpfname<pos:position pos:line="16" pos:column="24"/></name></expr></argument>)<pos:position pos:line="16" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">mutt_mktemp<pos:position pos:line="18" pos:column="14"/></name> <argument_list pos:line="18" pos:column="15">(<argument><expr><name pos:line="18" pos:column="16">pk7out<pos:position pos:line="18" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="24">sizeof <argument_list pos:line="18" pos:column="31">(<argument><expr><name pos:line="18" pos:column="32">pk7out<pos:position pos:line="18" pos:column="38"/></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="41"/></expr_stmt>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><operator pos:line="19" pos:column="7">(<pos:position pos:line="19" pos:column="8"/></operator><name pos:line="19" pos:column="8">fpout<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <call><name pos:line="19" pos:column="16">safe_fopen<pos:position pos:line="19" pos:column="26"/></name> <argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">pk7out<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="36">"w+"<pos:position pos:line="19" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call><operator pos:line="19" pos:column="41">)<pos:position pos:line="19" pos:column="42"/></operator> <operator pos:line="19" pos:column="43">==<pos:position pos:line="19" pos:column="45"/></operator> <name pos:line="19" pos:column="46">NULL<pos:position pos:line="19" pos:column="50"/></name></expr>)<pos:position pos:line="19" pos:column="51"/></condition><then pos:line="19" pos:column="51">
  <block pos:line="20" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">safe_fclose<pos:position pos:line="21" pos:column="16"/></name> <argument_list pos:line="21" pos:column="17">(<argument><expr><operator pos:line="21" pos:column="18">&amp;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="19">fperr<pos:position pos:line="21" pos:column="24"/></name></expr></argument>)<pos:position pos:line="21" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">mutt_perror<pos:position pos:line="22" pos:column="16"/></name> <argument_list pos:line="22" pos:column="17">(<argument><expr><name pos:line="22" pos:column="18">pk7out<pos:position pos:line="22" pos:column="24"/></name></expr></argument>)<pos:position pos:line="22" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">NULL<pos:position pos:line="23" pos:column="16"/></name></expr>;<pos:position pos:line="23" pos:column="17"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="26" pos:column="3">/* Step 1: Convert the signature to a PKCS#7 structure, as we can't
     extract the full set of certificates directly.
  */</comment>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><operator pos:line="29" pos:column="7">(<pos:position pos:line="29" pos:column="8"/></operator><name pos:line="29" pos:column="8">thepid<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator>  <call><name pos:line="29" pos:column="18">smime_invoke<pos:position pos:line="29" pos:column="30"/></name> <argument_list pos:line="29" pos:column="31">(<argument><expr><name pos:line="29" pos:column="32">NULL<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="38">NULL<pos:position pos:line="29" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="44">NULL<pos:position pos:line="29" pos:column="48"/></name></expr></argument>,
			       <argument><expr><operator pos:line="30" pos:column="32">-<pos:position pos:line="30" pos:column="33"/></operator><literal type="number" pos:line="30" pos:column="33">1<pos:position pos:line="30" pos:column="34"/></literal></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="36">fileno<pos:position pos:line="30" pos:column="42"/></name> <argument_list pos:line="30" pos:column="43">(<argument><expr><name pos:line="30" pos:column="44">fpout<pos:position pos:line="30" pos:column="49"/></name></expr></argument>)<pos:position pos:line="30" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="52">fileno<pos:position pos:line="30" pos:column="58"/></name> <argument_list pos:line="30" pos:column="59">(<argument><expr><name pos:line="30" pos:column="60">fperr<pos:position pos:line="30" pos:column="65"/></name></expr></argument>)<pos:position pos:line="30" pos:column="66"/></argument_list></call></expr></argument>,
			       <argument><expr><name pos:line="31" pos:column="32">infile<pos:position pos:line="31" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="40">NULL<pos:position pos:line="31" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="46">NULL<pos:position pos:line="31" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="52">NULL<pos:position pos:line="31" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="58">NULL<pos:position pos:line="31" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="64">NULL<pos:position pos:line="31" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="70">NULL<pos:position pos:line="31" pos:column="74"/></name></expr></argument>,
			       <argument><expr><name pos:line="32" pos:column="32">SmimePk7outCommand<pos:position pos:line="32" pos:column="50"/></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call><operator pos:line="32" pos:column="51">)<pos:position pos:line="32" pos:column="52"/></operator><operator pos:line="32" pos:column="52">==<pos:position pos:line="32" pos:column="54"/></operator> <operator pos:line="32" pos:column="55">-<pos:position pos:line="32" pos:column="56"/></operator><literal type="number" pos:line="32" pos:column="56">1<pos:position pos:line="32" pos:column="57"/></literal></expr>)<pos:position pos:line="32" pos:column="58"/></condition><then pos:line="32" pos:column="58">
  <block pos:line="33" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">mutt_any_key_to_continue<pos:position pos:line="34" pos:column="29"/></name> <argument_list pos:line="34" pos:column="30">(<argument><expr><call><name pos:line="34" pos:column="31">_<pos:position pos:line="34" pos:column="32"/></name><argument_list pos:line="34" pos:column="32">(<argument><expr><literal type="string" pos:line="34" pos:column="33">"Error: unable to create OpenSSL subprocess!"<pos:position pos:line="34" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">safe_fclose<pos:position pos:line="35" pos:column="16"/></name> <argument_list pos:line="35" pos:column="17">(<argument><expr><operator pos:line="35" pos:column="18">&amp;<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="19">fperr<pos:position pos:line="35" pos:column="24"/></name></expr></argument>)<pos:position pos:line="35" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">safe_fclose<pos:position pos:line="36" pos:column="16"/></name> <argument_list pos:line="36" pos:column="17">(<argument><expr><operator pos:line="36" pos:column="18">&amp;<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="19">fpout<pos:position pos:line="36" pos:column="24"/></name></expr></argument>)<pos:position pos:line="36" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">mutt_unlink<pos:position pos:line="37" pos:column="16"/></name> <argument_list pos:line="37" pos:column="17">(<argument><expr><name pos:line="37" pos:column="18">pk7out<pos:position pos:line="37" pos:column="24"/></name></expr></argument>)<pos:position pos:line="37" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="26"/></expr_stmt>
    <return pos:line="38" pos:column="5">return <expr><name pos:line="38" pos:column="12">NULL<pos:position pos:line="38" pos:column="16"/></name></expr>;<pos:position pos:line="38" pos:column="17"/></return>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="41" pos:column="3">mutt_wait_filter<pos:position pos:line="41" pos:column="19"/></name> <argument_list pos:line="41" pos:column="20">(<argument><expr><name pos:line="41" pos:column="21">thepid<pos:position pos:line="41" pos:column="27"/></name></expr></argument>)<pos:position pos:line="41" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="29"/></expr_stmt>


  <expr_stmt><expr><call><name pos:line="44" pos:column="3">fflush<pos:position pos:line="44" pos:column="9"/></name> <argument_list pos:line="44" pos:column="10">(<argument><expr><name pos:line="44" pos:column="11">fpout<pos:position pos:line="44" pos:column="16"/></name></expr></argument>)<pos:position pos:line="44" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">rewind<pos:position pos:line="45" pos:column="9"/></name> <argument_list pos:line="45" pos:column="10">(<argument><expr><name pos:line="45" pos:column="11">fpout<pos:position pos:line="45" pos:column="16"/></name></expr></argument>)<pos:position pos:line="45" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="46" pos:column="3">fflush<pos:position pos:line="46" pos:column="9"/></name> <argument_list pos:line="46" pos:column="10">(<argument><expr><name pos:line="46" pos:column="11">fperr<pos:position pos:line="46" pos:column="16"/></name></expr></argument>)<pos:position pos:line="46" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">rewind<pos:position pos:line="47" pos:column="9"/></name> <argument_list pos:line="47" pos:column="10">(<argument><expr><name pos:line="47" pos:column="11">fperr<pos:position pos:line="47" pos:column="16"/></name></expr></argument>)<pos:position pos:line="47" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name pos:line="48" pos:column="3">empty<pos:position pos:line="48" pos:column="8"/></name> <operator pos:line="48" pos:column="9">=<pos:position pos:line="48" pos:column="10"/></operator> <operator pos:line="48" pos:column="11">(<pos:position pos:line="48" pos:column="12"/></operator><call><name pos:line="48" pos:column="12">fgetc<pos:position pos:line="48" pos:column="17"/></name> <argument_list pos:line="48" pos:column="18">(<argument><expr><name pos:line="48" pos:column="19">fpout<pos:position pos:line="48" pos:column="24"/></name></expr></argument>)<pos:position pos:line="48" pos:column="25"/></argument_list></call> <operator pos:line="48" pos:column="26">==<pos:position pos:line="48" pos:column="28"/></operator> <name pos:line="48" pos:column="29">EOF<pos:position pos:line="48" pos:column="32"/></name><operator pos:line="48" pos:column="32">)<pos:position pos:line="48" pos:column="33"/></operator></expr>;<pos:position pos:line="48" pos:column="34"/></expr_stmt>
  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><name pos:line="49" pos:column="7">empty<pos:position pos:line="49" pos:column="12"/></name></expr>)<pos:position pos:line="49" pos:column="13"/></condition><then pos:line="49" pos:column="13">
  <block pos:line="50" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">mutt_perror<pos:position pos:line="51" pos:column="16"/></name> <argument_list pos:line="51" pos:column="17">(<argument><expr><name pos:line="51" pos:column="18">pk7out<pos:position pos:line="51" pos:column="24"/></name></expr></argument>)<pos:position pos:line="51" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">mutt_copy_stream<pos:position pos:line="52" pos:column="21"/></name> <argument_list pos:line="52" pos:column="22">(<argument><expr><name pos:line="52" pos:column="23">fperr<pos:position pos:line="52" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="30">stdout<pos:position pos:line="52" pos:column="36"/></name></expr></argument>)<pos:position pos:line="52" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">safe_fclose<pos:position pos:line="53" pos:column="16"/></name> <argument_list pos:line="53" pos:column="17">(<argument><expr><operator pos:line="53" pos:column="18">&amp;<pos:position pos:line="53" pos:column="23"/></operator><name pos:line="53" pos:column="19">fpout<pos:position pos:line="53" pos:column="24"/></name></expr></argument>)<pos:position pos:line="53" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">safe_fclose<pos:position pos:line="54" pos:column="16"/></name> <argument_list pos:line="54" pos:column="17">(<argument><expr><operator pos:line="54" pos:column="18">&amp;<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="19">fperr<pos:position pos:line="54" pos:column="24"/></name></expr></argument>)<pos:position pos:line="54" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">mutt_unlink<pos:position pos:line="55" pos:column="16"/></name> <argument_list pos:line="55" pos:column="17">(<argument><expr><name pos:line="55" pos:column="18">pk7out<pos:position pos:line="55" pos:column="24"/></name></expr></argument>)<pos:position pos:line="55" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="26"/></expr_stmt>
    <return pos:line="56" pos:column="5">return <expr><name pos:line="56" pos:column="12">NULL<pos:position pos:line="56" pos:column="16"/></name></expr>;<pos:position pos:line="56" pos:column="17"/></return>
    
  }<pos:position pos:line="58" pos:column="4"/></block></then></if>


  <expr_stmt><expr><call><name pos:line="61" pos:column="3">safe_fclose<pos:position pos:line="61" pos:column="14"/></name> <argument_list pos:line="61" pos:column="15">(<argument><expr><operator pos:line="61" pos:column="16">&amp;<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="17">fpout<pos:position pos:line="61" pos:column="22"/></name></expr></argument>)<pos:position pos:line="61" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="62" pos:column="3">mutt_mktemp<pos:position pos:line="62" pos:column="14"/></name> <argument_list pos:line="62" pos:column="15">(<argument><expr><name pos:line="62" pos:column="16">certfile<pos:position pos:line="62" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="62" pos:column="26">sizeof <argument_list pos:line="62" pos:column="33">(<argument><expr><name pos:line="62" pos:column="34">certfile<pos:position pos:line="62" pos:column="42"/></name></expr></argument>)<pos:position pos:line="62" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="62" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="45"/></expr_stmt>
  <if pos:line="63" pos:column="3">if <condition pos:line="63" pos:column="6">(<expr><operator pos:line="63" pos:column="7">(<pos:position pos:line="63" pos:column="8"/></operator><name pos:line="63" pos:column="8">fpout<pos:position pos:line="63" pos:column="13"/></name> <operator pos:line="63" pos:column="14">=<pos:position pos:line="63" pos:column="15"/></operator> <call><name pos:line="63" pos:column="16">safe_fopen<pos:position pos:line="63" pos:column="26"/></name> <argument_list pos:line="63" pos:column="27">(<argument><expr><name pos:line="63" pos:column="28">certfile<pos:position pos:line="63" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="38">"w+"<pos:position pos:line="63" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="43"/></argument_list></call><operator pos:line="63" pos:column="43">)<pos:position pos:line="63" pos:column="44"/></operator> <operator pos:line="63" pos:column="45">==<pos:position pos:line="63" pos:column="47"/></operator> <name pos:line="63" pos:column="48">NULL<pos:position pos:line="63" pos:column="52"/></name></expr>)<pos:position pos:line="63" pos:column="53"/></condition><then pos:line="63" pos:column="53">
  <block pos:line="64" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">safe_fclose<pos:position pos:line="65" pos:column="16"/></name> <argument_list pos:line="65" pos:column="17">(<argument><expr><operator pos:line="65" pos:column="18">&amp;<pos:position pos:line="65" pos:column="23"/></operator><name pos:line="65" pos:column="19">fperr<pos:position pos:line="65" pos:column="24"/></name></expr></argument>)<pos:position pos:line="65" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">mutt_unlink<pos:position pos:line="66" pos:column="16"/></name> <argument_list pos:line="66" pos:column="17">(<argument><expr><name pos:line="66" pos:column="18">pk7out<pos:position pos:line="66" pos:column="24"/></name></expr></argument>)<pos:position pos:line="66" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">mutt_perror<pos:position pos:line="67" pos:column="16"/></name> <argument_list pos:line="67" pos:column="17">(<argument><expr><name pos:line="67" pos:column="18">certfile<pos:position pos:line="67" pos:column="26"/></name></expr></argument>)<pos:position pos:line="67" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="28"/></expr_stmt>
    <return pos:line="68" pos:column="5">return <expr><name pos:line="68" pos:column="12">NULL<pos:position pos:line="68" pos:column="16"/></name></expr>;<pos:position pos:line="68" pos:column="17"/></return>
  }<pos:position pos:line="69" pos:column="4"/></block></then></if>
  
  <comment type="block" pos:line="71" pos:column="3">/* Step 2: Extract the certificates from a PKCS#7 structure.
   */</comment>
  <if pos:line="73" pos:column="3">if <condition pos:line="73" pos:column="6">(<expr><operator pos:line="73" pos:column="7">(<pos:position pos:line="73" pos:column="8"/></operator><name pos:line="73" pos:column="8">thepid<pos:position pos:line="73" pos:column="14"/></name> <operator pos:line="73" pos:column="15">=<pos:position pos:line="73" pos:column="16"/></operator>  <call><name pos:line="73" pos:column="18">smime_invoke<pos:position pos:line="73" pos:column="30"/></name> <argument_list pos:line="73" pos:column="31">(<argument><expr><name pos:line="73" pos:column="32">NULL<pos:position pos:line="73" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="38">NULL<pos:position pos:line="73" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="44">NULL<pos:position pos:line="73" pos:column="48"/></name></expr></argument>,
			       <argument><expr><operator pos:line="74" pos:column="32">-<pos:position pos:line="74" pos:column="33"/></operator><literal type="number" pos:line="74" pos:column="33">1<pos:position pos:line="74" pos:column="34"/></literal></expr></argument>, <argument><expr><call><name pos:line="74" pos:column="36">fileno<pos:position pos:line="74" pos:column="42"/></name> <argument_list pos:line="74" pos:column="43">(<argument><expr><name pos:line="74" pos:column="44">fpout<pos:position pos:line="74" pos:column="49"/></name></expr></argument>)<pos:position pos:line="74" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="74" pos:column="52">fileno<pos:position pos:line="74" pos:column="58"/></name> <argument_list pos:line="74" pos:column="59">(<argument><expr><name pos:line="74" pos:column="60">fperr<pos:position pos:line="74" pos:column="65"/></name></expr></argument>)<pos:position pos:line="74" pos:column="66"/></argument_list></call></expr></argument>,
			       <argument><expr><name pos:line="75" pos:column="32">pk7out<pos:position pos:line="75" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="40">NULL<pos:position pos:line="75" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="46">NULL<pos:position pos:line="75" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="52">NULL<pos:position pos:line="75" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="58">NULL<pos:position pos:line="75" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="64">NULL<pos:position pos:line="75" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="70">NULL<pos:position pos:line="75" pos:column="74"/></name></expr></argument>,
			       <argument><expr><name pos:line="76" pos:column="32">SmimeGetCertCommand<pos:position pos:line="76" pos:column="51"/></name></expr></argument>)<pos:position pos:line="76" pos:column="52"/></argument_list></call><operator pos:line="76" pos:column="52">)<pos:position pos:line="76" pos:column="53"/></operator><operator pos:line="76" pos:column="53">==<pos:position pos:line="76" pos:column="55"/></operator> <operator pos:line="76" pos:column="56">-<pos:position pos:line="76" pos:column="57"/></operator><literal type="number" pos:line="76" pos:column="57">1<pos:position pos:line="76" pos:column="58"/></literal></expr>)<pos:position pos:line="76" pos:column="59"/></condition><then pos:line="76" pos:column="59">
  <block pos:line="77" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="78" pos:column="5">mutt_any_key_to_continue<pos:position pos:line="78" pos:column="29"/></name> <argument_list pos:line="78" pos:column="30">(<argument><expr><call><name pos:line="78" pos:column="31">_<pos:position pos:line="78" pos:column="32"/></name><argument_list pos:line="78" pos:column="32">(<argument><expr><literal type="string" pos:line="78" pos:column="33">"Error: unable to create OpenSSL subprocess!"<pos:position pos:line="78" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="78" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">safe_fclose<pos:position pos:line="79" pos:column="16"/></name> <argument_list pos:line="79" pos:column="17">(<argument><expr><operator pos:line="79" pos:column="18">&amp;<pos:position pos:line="79" pos:column="23"/></operator><name pos:line="79" pos:column="19">fperr<pos:position pos:line="79" pos:column="24"/></name></expr></argument>)<pos:position pos:line="79" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="80" pos:column="5">safe_fclose<pos:position pos:line="80" pos:column="16"/></name> <argument_list pos:line="80" pos:column="17">(<argument><expr><operator pos:line="80" pos:column="18">&amp;<pos:position pos:line="80" pos:column="23"/></operator><name pos:line="80" pos:column="19">fpout<pos:position pos:line="80" pos:column="24"/></name></expr></argument>)<pos:position pos:line="80" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="81" pos:column="5">mutt_unlink<pos:position pos:line="81" pos:column="16"/></name> <argument_list pos:line="81" pos:column="17">(<argument><expr><name pos:line="81" pos:column="18">pk7out<pos:position pos:line="81" pos:column="24"/></name></expr></argument>)<pos:position pos:line="81" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">mutt_unlink<pos:position pos:line="82" pos:column="16"/></name> <argument_list pos:line="82" pos:column="17">(<argument><expr><name pos:line="82" pos:column="18">certfile<pos:position pos:line="82" pos:column="26"/></name></expr></argument>)<pos:position pos:line="82" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="28"/></expr_stmt>
    <return pos:line="83" pos:column="5">return <expr><name pos:line="83" pos:column="12">NULL<pos:position pos:line="83" pos:column="16"/></name></expr>;<pos:position pos:line="83" pos:column="17"/></return>
  }<pos:position pos:line="84" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="86" pos:column="3">mutt_wait_filter<pos:position pos:line="86" pos:column="19"/></name> <argument_list pos:line="86" pos:column="20">(<argument><expr><name pos:line="86" pos:column="21">thepid<pos:position pos:line="86" pos:column="27"/></name></expr></argument>)<pos:position pos:line="86" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="88" pos:column="3">mutt_unlink<pos:position pos:line="88" pos:column="14"/></name> <argument_list pos:line="88" pos:column="15">(<argument><expr><name pos:line="88" pos:column="16">pk7out<pos:position pos:line="88" pos:column="22"/></name></expr></argument>)<pos:position pos:line="88" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="24"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="90" pos:column="3">fflush<pos:position pos:line="90" pos:column="9"/></name> <argument_list pos:line="90" pos:column="10">(<argument><expr><name pos:line="90" pos:column="11">fpout<pos:position pos:line="90" pos:column="16"/></name></expr></argument>)<pos:position pos:line="90" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="91" pos:column="3">rewind<pos:position pos:line="91" pos:column="9"/></name> <argument_list pos:line="91" pos:column="10">(<argument><expr><name pos:line="91" pos:column="11">fpout<pos:position pos:line="91" pos:column="16"/></name></expr></argument>)<pos:position pos:line="91" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="92" pos:column="3">fflush<pos:position pos:line="92" pos:column="9"/></name> <argument_list pos:line="92" pos:column="10">(<argument><expr><name pos:line="92" pos:column="11">fperr<pos:position pos:line="92" pos:column="16"/></name></expr></argument>)<pos:position pos:line="92" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="93" pos:column="3">rewind<pos:position pos:line="93" pos:column="9"/></name> <argument_list pos:line="93" pos:column="10">(<argument><expr><name pos:line="93" pos:column="11">fperr<pos:position pos:line="93" pos:column="16"/></name></expr></argument>)<pos:position pos:line="93" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name pos:line="94" pos:column="3">empty<pos:position pos:line="94" pos:column="8"/></name> <operator pos:line="94" pos:column="9">=<pos:position pos:line="94" pos:column="10"/></operator>  <operator pos:line="94" pos:column="12">(<pos:position pos:line="94" pos:column="13"/></operator><call><name pos:line="94" pos:column="13">fgetc<pos:position pos:line="94" pos:column="18"/></name> <argument_list pos:line="94" pos:column="19">(<argument><expr><name pos:line="94" pos:column="20">fpout<pos:position pos:line="94" pos:column="25"/></name></expr></argument>)<pos:position pos:line="94" pos:column="26"/></argument_list></call> <operator pos:line="94" pos:column="27">==<pos:position pos:line="94" pos:column="29"/></operator> <name pos:line="94" pos:column="30">EOF<pos:position pos:line="94" pos:column="33"/></name><operator pos:line="94" pos:column="33">)<pos:position pos:line="94" pos:column="34"/></operator></expr>;<pos:position pos:line="94" pos:column="35"/></expr_stmt>
  <if pos:line="95" pos:column="3">if <condition pos:line="95" pos:column="6">(<expr><name pos:line="95" pos:column="7">empty<pos:position pos:line="95" pos:column="12"/></name></expr>)<pos:position pos:line="95" pos:column="13"/></condition><then pos:line="95" pos:column="13">
  <block pos:line="96" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="97" pos:column="5">mutt_copy_stream<pos:position pos:line="97" pos:column="21"/></name> <argument_list pos:line="97" pos:column="22">(<argument><expr><name pos:line="97" pos:column="23">fperr<pos:position pos:line="97" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="30">stdout<pos:position pos:line="97" pos:column="36"/></name></expr></argument>)<pos:position pos:line="97" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="98" pos:column="5">safe_fclose<pos:position pos:line="98" pos:column="16"/></name> <argument_list pos:line="98" pos:column="17">(<argument><expr><operator pos:line="98" pos:column="18">&amp;<pos:position pos:line="98" pos:column="23"/></operator><name pos:line="98" pos:column="19">fpout<pos:position pos:line="98" pos:column="24"/></name></expr></argument>)<pos:position pos:line="98" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="99" pos:column="5">safe_fclose<pos:position pos:line="99" pos:column="16"/></name> <argument_list pos:line="99" pos:column="17">(<argument><expr><operator pos:line="99" pos:column="18">&amp;<pos:position pos:line="99" pos:column="23"/></operator><name pos:line="99" pos:column="19">fperr<pos:position pos:line="99" pos:column="24"/></name></expr></argument>)<pos:position pos:line="99" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="100" pos:column="5">mutt_unlink<pos:position pos:line="100" pos:column="16"/></name> <argument_list pos:line="100" pos:column="17">(<argument><expr><name pos:line="100" pos:column="18">certfile<pos:position pos:line="100" pos:column="26"/></name></expr></argument>)<pos:position pos:line="100" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="28"/></expr_stmt>
    <return pos:line="101" pos:column="5">return <expr><name pos:line="101" pos:column="12">NULL<pos:position pos:line="101" pos:column="16"/></name></expr>;<pos:position pos:line="101" pos:column="17"/></return>
  }<pos:position pos:line="102" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="104" pos:column="3">safe_fclose<pos:position pos:line="104" pos:column="14"/></name> <argument_list pos:line="104" pos:column="15">(<argument><expr><operator pos:line="104" pos:column="16">&amp;<pos:position pos:line="104" pos:column="21"/></operator><name pos:line="104" pos:column="17">fpout<pos:position pos:line="104" pos:column="22"/></name></expr></argument>)<pos:position pos:line="104" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="105" pos:column="3">safe_fclose<pos:position pos:line="105" pos:column="14"/></name> <argument_list pos:line="105" pos:column="15">(<argument><expr><operator pos:line="105" pos:column="16">&amp;<pos:position pos:line="105" pos:column="21"/></operator><name pos:line="105" pos:column="17">fperr<pos:position pos:line="105" pos:column="22"/></name></expr></argument>)<pos:position pos:line="105" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="24"/></expr_stmt>

  <return pos:line="107" pos:column="3">return <expr><call><name pos:line="107" pos:column="10">safe_strdup<pos:position pos:line="107" pos:column="21"/></name> <argument_list pos:line="107" pos:column="22">(<argument><expr><name pos:line="107" pos:column="23">certfile<pos:position pos:line="107" pos:column="31"/></name></expr></argument>)<pos:position pos:line="107" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="33"/></return>
}<pos:position pos:line="108" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_343_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parsekeys<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">str<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">keycode_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">d<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">int<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">max<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">n<pos:position pos:line="3" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="10">len<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><name pos:line="3" pos:column="16">max<pos:position pos:line="3" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buff<pos:position pos:line="4" pos:column="12"/></name><index pos:line="4" pos:column="12">[<expr><name pos:line="4" pos:column="13">SHORT_STRING<pos:position pos:line="4" pos:column="25"/></name></expr>]<pos:position pos:line="4" pos:column="26"/></index></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">c<pos:position pos:line="5" pos:column="9"/></name></decl>;<pos:position pos:line="5" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">s<pos:position pos:line="6" pos:column="10"/></name></decl>, <modifier pos:line="6" pos:column="12">*<pos:position pos:line="6" pos:column="13"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="13">t<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">strfcpy<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><name pos:line="8" pos:column="11">buff<pos:position pos:line="8" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="17">str<pos:position pos:line="8" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="22">sizeof<argument_list pos:line="8" pos:column="28">(<argument><expr><name pos:line="8" pos:column="29">buff<pos:position pos:line="8" pos:column="33"/></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name pos:line="9" pos:column="3">s<pos:position pos:line="9" pos:column="4"/></name> <operator pos:line="9" pos:column="5">=<pos:position pos:line="9" pos:column="6"/></operator> <name pos:line="9" pos:column="7">buff<pos:position pos:line="9" pos:column="11"/></name></expr>;<pos:position pos:line="9" pos:column="12"/></expr_stmt>
  
  <while pos:line="11" pos:column="3">while <condition pos:line="11" pos:column="9">(<expr><operator pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">s<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">&amp;&amp;<pos:position pos:line="11" pos:column="23"/></operator> <name pos:line="11" pos:column="16">len<pos:position pos:line="11" pos:column="19"/></name></expr>)<pos:position pos:line="11" pos:column="20"/></condition>
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><operator pos:line="13" pos:column="5">*<pos:position pos:line="13" pos:column="6"/></operator><name pos:line="13" pos:column="6">d<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <literal type="char" pos:line="13" pos:column="10">'\0'<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></expr_stmt>
    <if pos:line="14" pos:column="5">if<condition pos:line="14" pos:column="7">(<expr><operator pos:line="14" pos:column="8">*<pos:position pos:line="14" pos:column="9"/></operator><name pos:line="14" pos:column="9">s<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">==<pos:position pos:line="14" pos:column="13"/></operator> <literal type="char" pos:line="14" pos:column="14">'&lt;'<pos:position pos:line="14" pos:column="20"/></literal> <operator pos:line="14" pos:column="18">&amp;&amp;<pos:position pos:line="14" pos:column="28"/></operator> <operator pos:line="14" pos:column="21">(<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">t<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <call><name pos:line="14" pos:column="26">strchr<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">s<pos:position pos:line="14" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="14" pos:column="36">'&gt;'<pos:position pos:line="14" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call><operator pos:line="14" pos:column="40">)<pos:position pos:line="14" pos:column="41"/></operator></expr>)<pos:position pos:line="14" pos:column="42"/></condition><then pos:line="14" pos:column="42">
    <block pos:line="15" pos:column="5">{
      <expr_stmt><expr><name pos:line="16" pos:column="7">t<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">++<pos:position pos:line="16" pos:column="10"/></operator></expr>;<pos:position pos:line="16" pos:column="11"/></expr_stmt> <expr_stmt><expr><name pos:line="16" pos:column="12">c<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <operator pos:line="16" pos:column="16">*<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">t<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt> <expr_stmt><expr><operator pos:line="16" pos:column="20">*<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">t<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <literal type="char" pos:line="16" pos:column="25">'\0'<pos:position pos:line="16" pos:column="29"/></literal></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
      
      <if pos:line="18" pos:column="7">if <condition pos:line="18" pos:column="10">(<expr><operator pos:line="18" pos:column="11">(<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="12">n<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <call><name pos:line="18" pos:column="16">mutt_getvaluebyname<pos:position pos:line="18" pos:column="35"/></name> <argument_list pos:line="18" pos:column="36">(<argument><expr><name pos:line="18" pos:column="37">s<pos:position pos:line="18" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="40">KeyNames<pos:position pos:line="18" pos:column="48"/></name></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></call><operator pos:line="18" pos:column="49">)<pos:position pos:line="18" pos:column="50"/></operator> <operator pos:line="18" pos:column="51">!=<pos:position pos:line="18" pos:column="53"/></operator> <operator pos:line="18" pos:column="54">-<pos:position pos:line="18" pos:column="55"/></operator><literal type="number" pos:line="18" pos:column="55">1<pos:position pos:line="18" pos:column="56"/></literal></expr>)<pos:position pos:line="18" pos:column="57"/></condition><then pos:line="18" pos:column="57">
      <block pos:line="19" pos:column="7">{
	<expr_stmt><expr><name pos:line="20" pos:column="9">s<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <name pos:line="20" pos:column="13">t<pos:position pos:line="20" pos:column="14"/></name></expr>;<pos:position pos:line="20" pos:column="15"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="21" pos:column="9">*<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">d<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <name pos:line="21" pos:column="14">n<pos:position pos:line="21" pos:column="15"/></name></expr>;<pos:position pos:line="21" pos:column="16"/></expr_stmt>
      }<pos:position pos:line="22" pos:column="8"/></block></then>
      <elseif pos:line="23" pos:column="7">else <if pos:line="23" pos:column="12">if <condition pos:line="23" pos:column="15">(<expr><operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">n<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <call><name pos:line="23" pos:column="21">parse_fkey<pos:position pos:line="23" pos:column="31"/></name><argument_list pos:line="23" pos:column="31">(<argument><expr><name pos:line="23" pos:column="32">s<pos:position pos:line="23" pos:column="33"/></name></expr></argument>)<pos:position pos:line="23" pos:column="34"/></argument_list></call><operator pos:line="23" pos:column="34">)<pos:position pos:line="23" pos:column="35"/></operator> <operator pos:line="23" pos:column="36">&gt;<pos:position pos:line="23" pos:column="40"/></operator> <literal type="number" pos:line="23" pos:column="38">0<pos:position pos:line="23" pos:column="39"/></literal></expr>)<pos:position pos:line="23" pos:column="40"/></condition><then pos:line="23" pos:column="40">
      <block pos:line="24" pos:column="7">{
	<expr_stmt><expr><name pos:line="25" pos:column="9">s<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">=<pos:position pos:line="25" pos:column="12"/></operator> <name pos:line="25" pos:column="13">t<pos:position pos:line="25" pos:column="14"/></name></expr>;<pos:position pos:line="25" pos:column="15"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="26" pos:column="9">*<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">d<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <call><name pos:line="26" pos:column="14">KEY_F<pos:position pos:line="26" pos:column="19"/></name> <argument_list pos:line="26" pos:column="20">(<argument><expr><name pos:line="26" pos:column="21">n<pos:position pos:line="26" pos:column="22"/></name></expr></argument>)<pos:position pos:line="26" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt>
      }<pos:position pos:line="27" pos:column="8"/></block></then></if></elseif>
      <elseif pos:line="28" pos:column="7">else <if pos:line="28" pos:column="12">if <condition pos:line="28" pos:column="15">(<expr><operator pos:line="28" pos:column="16">(<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">n<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">=<pos:position pos:line="28" pos:column="20"/></operator> <call><name pos:line="28" pos:column="21">parse_keycode<pos:position pos:line="28" pos:column="34"/></name><argument_list pos:line="28" pos:column="34">(<argument><expr><name pos:line="28" pos:column="35">s<pos:position pos:line="28" pos:column="36"/></name></expr></argument>)<pos:position pos:line="28" pos:column="37"/></argument_list></call><operator pos:line="28" pos:column="37">)<pos:position pos:line="28" pos:column="38"/></operator> <operator pos:line="28" pos:column="39">&gt;<pos:position pos:line="28" pos:column="43"/></operator> <literal type="number" pos:line="28" pos:column="41">0<pos:position pos:line="28" pos:column="42"/></literal></expr>)<pos:position pos:line="28" pos:column="43"/></condition><then pos:line="28" pos:column="43">
      <block pos:line="29" pos:column="7">{
	<expr_stmt><expr><name pos:line="30" pos:column="9">s<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <name pos:line="30" pos:column="13">t<pos:position pos:line="30" pos:column="14"/></name></expr>;<pos:position pos:line="30" pos:column="15"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="31" pos:column="9">*<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="10">d<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <name pos:line="31" pos:column="14">n<pos:position pos:line="31" pos:column="15"/></name></expr>;<pos:position pos:line="31" pos:column="16"/></expr_stmt>
      }<pos:position pos:line="32" pos:column="8"/></block></then></if></elseif></if>
      
      <expr_stmt><expr><operator pos:line="34" pos:column="7">*<pos:position pos:line="34" pos:column="8"/></operator><name pos:line="34" pos:column="8">t<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">=<pos:position pos:line="34" pos:column="11"/></operator> <name pos:line="34" pos:column="12">c<pos:position pos:line="34" pos:column="13"/></name></expr>;<pos:position pos:line="34" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

    <if pos:line="37" pos:column="5">if<condition pos:line="37" pos:column="7">(<expr><operator pos:line="37" pos:column="8">!<pos:position pos:line="37" pos:column="9"/></operator><operator pos:line="37" pos:column="9">*<pos:position pos:line="37" pos:column="10"/></operator><name pos:line="37" pos:column="10">d<pos:position pos:line="37" pos:column="11"/></name></expr>)<pos:position pos:line="37" pos:column="12"/></condition><then pos:line="37" pos:column="12">
    <block pos:line="38" pos:column="5">{
      <expr_stmt><expr><operator pos:line="39" pos:column="7">*<pos:position pos:line="39" pos:column="8"/></operator><name pos:line="39" pos:column="8">d<pos:position pos:line="39" pos:column="9"/></name> <operator pos:line="39" pos:column="10">=<pos:position pos:line="39" pos:column="11"/></operator> <operator pos:line="39" pos:column="12">(<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="13">unsigned<pos:position pos:line="39" pos:column="21"/></name> <name pos:line="39" pos:column="22">char<pos:position pos:line="39" pos:column="26"/></name><operator pos:line="39" pos:column="26">)<pos:position pos:line="39" pos:column="27"/></operator><operator pos:line="39" pos:column="27">*<pos:position pos:line="39" pos:column="28"/></operator><name pos:line="39" pos:column="28">s<pos:position pos:line="39" pos:column="29"/></name></expr>;<pos:position pos:line="39" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name pos:line="40" pos:column="7">s<pos:position pos:line="40" pos:column="8"/></name><operator pos:line="40" pos:column="8">++<pos:position pos:line="40" pos:column="10"/></operator></expr>;<pos:position pos:line="40" pos:column="11"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="42" pos:column="5">d<pos:position pos:line="42" pos:column="6"/></name><operator pos:line="42" pos:column="6">++<pos:position pos:line="42" pos:column="8"/></operator></expr>;<pos:position pos:line="42" pos:column="9"/></expr_stmt>
    <expr_stmt><expr><name pos:line="43" pos:column="5">len<pos:position pos:line="43" pos:column="8"/></name><operator pos:line="43" pos:column="8">--<pos:position pos:line="43" pos:column="10"/></operator></expr>;<pos:position pos:line="43" pos:column="11"/></expr_stmt>
  }<pos:position pos:line="44" pos:column="4"/></block></while>

  <return pos:line="46" pos:column="3">return <expr><operator pos:line="46" pos:column="10">(<pos:position pos:line="46" pos:column="11"/></operator><name pos:line="46" pos:column="11">max<pos:position pos:line="46" pos:column="14"/></name> <operator pos:line="46" pos:column="15">-<pos:position pos:line="46" pos:column="16"/></operator> <name pos:line="46" pos:column="17">len<pos:position pos:line="46" pos:column="20"/></name><operator pos:line="46" pos:column="20">)<pos:position pos:line="46" pos:column="21"/></operator></expr>;<pos:position pos:line="46" pos:column="22"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_348_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">generic_tokenize_push_string<pos:position pos:line="1" pos:column="41"/></name> <parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">s<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><function_decl><type><name pos:line="1" pos:column="52">void<pos:position pos:line="1" pos:column="56"/></name></type> (<modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier><name pos:line="1" pos:column="59">generic_push<pos:position pos:line="1" pos:column="71"/></name>) <parameter_list pos:line="1" pos:column="73">(<parameter><decl><type><name pos:line="1" pos:column="74">int<pos:position pos:line="1" pos:column="77"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="79">int<pos:position pos:line="1" pos:column="82"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="83"/></parameter_list></function_decl></parameter>)<pos:position pos:line="1" pos:column="84"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">pp<pos:position pos:line="3" pos:column="11"/></name></decl>, <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="14">p<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><name pos:line="3" pos:column="18">s<pos:position pos:line="3" pos:column="19"/></name> <operator pos:line="3" pos:column="20">+<pos:position pos:line="3" pos:column="21"/></operator> <call><name pos:line="3" pos:column="22">mutt_strlen<pos:position pos:line="3" pos:column="33"/></name> <argument_list pos:line="3" pos:column="34">(<argument><expr><name pos:line="3" pos:column="35">s<pos:position pos:line="3" pos:column="36"/></name></expr></argument>)<pos:position pos:line="3" pos:column="37"/></argument_list></call> <operator pos:line="3" pos:column="38">-<pos:position pos:line="3" pos:column="39"/></operator> <literal type="number" pos:line="3" pos:column="40">1<pos:position pos:line="3" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">l<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="10">op<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><name pos:line="5" pos:column="15">OP_NULL<pos:position pos:line="5" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>

  <while pos:line="7" pos:column="3">while <condition pos:line="7" pos:column="9">(<expr><name pos:line="7" pos:column="10">p<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">&gt;=<pos:position pos:line="7" pos:column="17"/></operator> <name pos:line="7" pos:column="15">s<pos:position pos:line="7" pos:column="16"/></name></expr>)<pos:position pos:line="7" pos:column="17"/></condition>
  <block pos:line="8" pos:column="3">{
    <comment type="block" pos:line="9" pos:column="5">/* if we see something like "&lt;PageUp&gt;", look to see if it is a real
       function name and return the corresponding value */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">*<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">p<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">==<pos:position pos:line="11" pos:column="14"/></operator> <literal type="char" pos:line="11" pos:column="15">'&gt;'<pos:position pos:line="11" pos:column="21"/></literal></expr>)<pos:position pos:line="11" pos:column="19"/></condition><then pos:line="11" pos:column="19">
    <block pos:line="12" pos:column="5">{
      <for pos:line="13" pos:column="7">for <control pos:line="13" pos:column="11">(<init><expr><name pos:line="13" pos:column="12">pp<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <name pos:line="13" pos:column="17">p<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">-<pos:position pos:line="13" pos:column="20"/></operator> <literal type="number" pos:line="13" pos:column="21">1<pos:position pos:line="13" pos:column="22"/></literal></expr>;<pos:position pos:line="13" pos:column="23"/></init> <condition><expr><name pos:line="13" pos:column="24">pp<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">&gt;=<pos:position pos:line="13" pos:column="32"/></operator> <name pos:line="13" pos:column="30">s<pos:position pos:line="13" pos:column="31"/></name> <operator pos:line="13" pos:column="32">&amp;&amp;<pos:position pos:line="13" pos:column="42"/></operator> <operator pos:line="13" pos:column="35">*<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="36">pp<pos:position pos:line="13" pos:column="38"/></name> <operator pos:line="13" pos:column="39">!=<pos:position pos:line="13" pos:column="41"/></operator> <literal type="char" pos:line="13" pos:column="42">'&lt;'<pos:position pos:line="13" pos:column="48"/></literal></expr>;<pos:position pos:line="13" pos:column="46"/></condition> <incr><expr><name pos:line="13" pos:column="47">pp<pos:position pos:line="13" pos:column="49"/></name><operator pos:line="13" pos:column="49">--<pos:position pos:line="13" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="52"/></control>
	<block type="pseudo"><empty_stmt pos:line="14" pos:column="9">;<pos:position pos:line="14" pos:column="10"/></empty_stmt></block></for>
      <if pos:line="15" pos:column="7">if <condition pos:line="15" pos:column="10">(<expr><name pos:line="15" pos:column="11">pp<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">&gt;=<pos:position pos:line="15" pos:column="19"/></operator> <name pos:line="15" pos:column="17">s<pos:position pos:line="15" pos:column="18"/></name></expr>)<pos:position pos:line="15" pos:column="19"/></condition><then pos:line="15" pos:column="19">
      <block pos:line="16" pos:column="7">{
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">(<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">i<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <call><name pos:line="17" pos:column="18">parse_fkey<pos:position pos:line="17" pos:column="28"/></name> <argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">pp<pos:position pos:line="17" pos:column="32"/></name></expr></argument>)<pos:position pos:line="17" pos:column="33"/></argument_list></call><operator pos:line="17" pos:column="33">)<pos:position pos:line="17" pos:column="34"/></operator> <operator pos:line="17" pos:column="35">&gt;<pos:position pos:line="17" pos:column="39"/></operator> <literal type="number" pos:line="17" pos:column="37">0<pos:position pos:line="17" pos:column="38"/></literal></expr>)<pos:position pos:line="17" pos:column="39"/></condition><then pos:line="17" pos:column="39">
	<block pos:line="18" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="19" pos:column="11">generic_push<pos:position pos:line="19" pos:column="23"/></name> <argument_list pos:line="19" pos:column="24">(<argument><expr><call><name pos:line="19" pos:column="25">KEY_F<pos:position pos:line="19" pos:column="30"/></name> <argument_list pos:line="19" pos:column="31">(<argument><expr><name pos:line="19" pos:column="32">i<pos:position pos:line="19" pos:column="33"/></name></expr></argument>)<pos:position pos:line="19" pos:column="34"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="36">0<pos:position pos:line="19" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="20" pos:column="11">p<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <name pos:line="20" pos:column="15">pp<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">-<pos:position pos:line="20" pos:column="19"/></operator> <literal type="number" pos:line="20" pos:column="20">1<pos:position pos:line="20" pos:column="21"/></literal></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>
	  <continue pos:line="21" pos:column="11">continue;<pos:position pos:line="21" pos:column="20"/></continue>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="24" pos:column="9">l<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator> <name pos:line="24" pos:column="13">p<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">-<pos:position pos:line="24" pos:column="16"/></operator> <name pos:line="24" pos:column="17">pp<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">+<pos:position pos:line="24" pos:column="21"/></operator> <literal type="number" pos:line="24" pos:column="22">1<pos:position pos:line="24" pos:column="23"/></literal></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>
	<for pos:line="25" pos:column="9">for <control pos:line="25" pos:column="13">(<init><expr><name pos:line="25" pos:column="14">i<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <literal type="number" pos:line="25" pos:column="18">0<pos:position pos:line="25" pos:column="19"/></literal></expr>;<pos:position pos:line="25" pos:column="20"/></init> <condition><expr><name><name pos:line="25" pos:column="21">KeyNames<pos:position pos:line="25" pos:column="29"/></name><index pos:line="25" pos:column="29">[<expr><name pos:line="25" pos:column="30">i<pos:position pos:line="25" pos:column="31"/></name></expr>]<pos:position pos:line="25" pos:column="32"/></index></name><operator pos:line="25" pos:column="32">.<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="33">name<pos:position pos:line="25" pos:column="37"/></name></expr>;<pos:position pos:line="25" pos:column="38"/></condition> <incr><expr><name pos:line="25" pos:column="39">i<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">++<pos:position pos:line="25" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="43"/></control>
	<block pos:line="26" pos:column="9">{
	  <if pos:line="27" pos:column="11">if <condition pos:line="27" pos:column="14">(<expr><operator pos:line="27" pos:column="15">!<pos:position pos:line="27" pos:column="16"/></operator><call><name pos:line="27" pos:column="16">ascii_strncasecmp<pos:position pos:line="27" pos:column="33"/></name> <argument_list pos:line="27" pos:column="34">(<argument><expr><name pos:line="27" pos:column="35">pp<pos:position pos:line="27" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="39">KeyNames<pos:position pos:line="27" pos:column="47"/></name><index pos:line="27" pos:column="47">[<expr><name pos:line="27" pos:column="48">i<pos:position pos:line="27" pos:column="49"/></name></expr>]<pos:position pos:line="27" pos:column="50"/></index></name><operator pos:line="27" pos:column="50">.<pos:position pos:line="27" pos:column="51"/></operator><name pos:line="27" pos:column="51">name<pos:position pos:line="27" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="57">l<pos:position pos:line="27" pos:column="58"/></name></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="60"/></condition><then pos:line="27" pos:column="60">
	    <block type="pseudo"><break pos:line="28" pos:column="13">break;<pos:position pos:line="28" pos:column="19"/></break></block></then></if>
	}<pos:position pos:line="29" pos:column="10"/></block></for>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name><name pos:line="30" pos:column="13">KeyNames<pos:position pos:line="30" pos:column="21"/></name><index pos:line="30" pos:column="21">[<expr><name pos:line="30" pos:column="22">i<pos:position pos:line="30" pos:column="23"/></name></expr>]<pos:position pos:line="30" pos:column="24"/></index></name><operator pos:line="30" pos:column="24">.<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="25">name<pos:position pos:line="30" pos:column="29"/></name></expr>)<pos:position pos:line="30" pos:column="30"/></condition><then pos:line="30" pos:column="30">
	<block pos:line="31" pos:column="9">{
	  <comment type="block" pos:line="32" pos:column="11">/* found a match */</comment>
	  <expr_stmt><expr><call><name pos:line="33" pos:column="11">generic_push<pos:position pos:line="33" pos:column="23"/></name> <argument_list pos:line="33" pos:column="24">(<argument><expr><name><name pos:line="33" pos:column="25">KeyNames<pos:position pos:line="33" pos:column="33"/></name><index pos:line="33" pos:column="33">[<expr><name pos:line="33" pos:column="34">i<pos:position pos:line="33" pos:column="35"/></name></expr>]<pos:position pos:line="33" pos:column="36"/></index></name><operator pos:line="33" pos:column="36">.<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="37">value<pos:position pos:line="33" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="44">0<pos:position pos:line="33" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="47"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="34" pos:column="11">p<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">=<pos:position pos:line="34" pos:column="14"/></operator> <name pos:line="34" pos:column="15">pp<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">-<pos:position pos:line="34" pos:column="19"/></operator> <literal type="number" pos:line="34" pos:column="20">1<pos:position pos:line="34" pos:column="21"/></literal></expr>;<pos:position pos:line="34" pos:column="22"/></expr_stmt>
	  <continue pos:line="35" pos:column="11">continue;<pos:position pos:line="35" pos:column="20"/></continue>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="38" pos:column="9">/* See if it is a valid command
	 * skip the '&lt;' and the '&gt;' when comparing */</comment>
	<for pos:line="40" pos:column="9">for <control pos:line="40" pos:column="13">(<init><expr><name pos:line="40" pos:column="14">i<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">=<pos:position pos:line="40" pos:column="17"/></operator> <literal type="number" pos:line="40" pos:column="18">0<pos:position pos:line="40" pos:column="19"/></literal></expr>;<pos:position pos:line="40" pos:column="20"/></init> <condition><expr><name><name pos:line="40" pos:column="21">Menus<pos:position pos:line="40" pos:column="26"/></name><index pos:line="40" pos:column="26">[<expr><name pos:line="40" pos:column="27">i<pos:position pos:line="40" pos:column="28"/></name></expr>]<pos:position pos:line="40" pos:column="29"/></index></name><operator pos:line="40" pos:column="29">.<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="30">name<pos:position pos:line="40" pos:column="34"/></name></expr>;<pos:position pos:line="40" pos:column="35"/></condition> <incr><expr><name pos:line="40" pos:column="36">i<pos:position pos:line="40" pos:column="37"/></name><operator pos:line="40" pos:column="37">++<pos:position pos:line="40" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="40" pos:column="40"/></control>
	<block pos:line="41" pos:column="9">{
	  <decl_stmt><decl><type><specifier pos:line="42" pos:column="11">const<pos:position pos:line="42" pos:column="16"/></specifier> <name><name pos:line="42" pos:column="17">struct<pos:position pos:line="42" pos:column="23"/></name> <name pos:line="42" pos:column="24">binding_t<pos:position pos:line="42" pos:column="33"/></name></name> <modifier pos:line="42" pos:column="34">*<pos:position pos:line="42" pos:column="35"/></modifier></type><name pos:line="42" pos:column="35">binding<pos:position pos:line="42" pos:column="42"/></name> <init pos:line="42" pos:column="43">= <expr><call><name pos:line="42" pos:column="45">km_get_table<pos:position pos:line="42" pos:column="57"/></name> <argument_list pos:line="42" pos:column="58">(<argument><expr><name><name pos:line="42" pos:column="59">Menus<pos:position pos:line="42" pos:column="64"/></name><index pos:line="42" pos:column="64">[<expr><name pos:line="42" pos:column="65">i<pos:position pos:line="42" pos:column="66"/></name></expr>]<pos:position pos:line="42" pos:column="67"/></index></name><operator pos:line="42" pos:column="67">.<pos:position pos:line="42" pos:column="68"/></operator><name pos:line="42" pos:column="68">value<pos:position pos:line="42" pos:column="73"/></name></expr></argument>)<pos:position pos:line="42" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="42" pos:column="75"/></decl_stmt>
	  <if pos:line="43" pos:column="11">if <condition pos:line="43" pos:column="14">(<expr><name pos:line="43" pos:column="15">binding<pos:position pos:line="43" pos:column="22"/></name></expr>)<pos:position pos:line="43" pos:column="23"/></condition><then pos:line="43" pos:column="23">
	  <block pos:line="44" pos:column="11">{
	    <expr_stmt><expr><name pos:line="45" pos:column="13">op<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">=<pos:position pos:line="45" pos:column="17"/></operator> <call><name pos:line="45" pos:column="18">get_op<pos:position pos:line="45" pos:column="24"/></name> <argument_list pos:line="45" pos:column="25">(<argument><expr><name pos:line="45" pos:column="26">binding<pos:position pos:line="45" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="35">pp<pos:position pos:line="45" pos:column="37"/></name> <operator pos:line="45" pos:column="38">+<pos:position pos:line="45" pos:column="39"/></operator> <literal type="number" pos:line="45" pos:column="40">1<pos:position pos:line="45" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="43">l<pos:position pos:line="45" pos:column="44"/></name> <operator pos:line="45" pos:column="45">-<pos:position pos:line="45" pos:column="46"/></operator> <literal type="number" pos:line="45" pos:column="47">2<pos:position pos:line="45" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="50"/></expr_stmt>
	    <if pos:line="46" pos:column="13">if <condition pos:line="46" pos:column="16">(<expr><name pos:line="46" pos:column="17">op<pos:position pos:line="46" pos:column="19"/></name> <operator pos:line="46" pos:column="20">!=<pos:position pos:line="46" pos:column="22"/></operator> <name pos:line="46" pos:column="23">OP_NULL<pos:position pos:line="46" pos:column="30"/></name></expr>)<pos:position pos:line="46" pos:column="31"/></condition><then pos:line="46" pos:column="31">
	      <block type="pseudo"><break pos:line="47" pos:column="15">break;<pos:position pos:line="47" pos:column="21"/></break></block></then></if>
	  }<pos:position pos:line="48" pos:column="12"/></block></then></if>
	}<pos:position pos:line="49" pos:column="10"/></block></for>

	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name pos:line="51" pos:column="13">op<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">!=<pos:position pos:line="51" pos:column="18"/></operator> <name pos:line="51" pos:column="19">OP_NULL<pos:position pos:line="51" pos:column="26"/></name></expr>)<pos:position pos:line="51" pos:column="27"/></condition><then pos:line="51" pos:column="27">
	<block pos:line="52" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="53" pos:column="11">generic_push<pos:position pos:line="53" pos:column="23"/></name> <argument_list pos:line="53" pos:column="24">(<argument><expr><literal type="number" pos:line="53" pos:column="25">0<pos:position pos:line="53" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="28">op<pos:position pos:line="53" pos:column="30"/></name></expr></argument>)<pos:position pos:line="53" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="32"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="54" pos:column="11">p<pos:position pos:line="54" pos:column="12"/></name> <operator pos:line="54" pos:column="13">=<pos:position pos:line="54" pos:column="14"/></operator> <name pos:line="54" pos:column="15">pp<pos:position pos:line="54" pos:column="17"/></name> <operator pos:line="54" pos:column="18">-<pos:position pos:line="54" pos:column="19"/></operator> <literal type="number" pos:line="54" pos:column="20">1<pos:position pos:line="54" pos:column="21"/></literal></expr>;<pos:position pos:line="54" pos:column="22"/></expr_stmt>
	  <continue pos:line="55" pos:column="11">continue;<pos:position pos:line="55" pos:column="20"/></continue>
	}<pos:position pos:line="56" pos:column="10"/></block></then></if>
      }<pos:position pos:line="57" pos:column="8"/></block></then></if>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">generic_push<pos:position pos:line="59" pos:column="17"/></name> <argument_list pos:line="59" pos:column="18">(<argument><expr><operator pos:line="59" pos:column="19">(<pos:position pos:line="59" pos:column="20"/></operator><name pos:line="59" pos:column="20">unsigned<pos:position pos:line="59" pos:column="28"/></name> <name pos:line="59" pos:column="29">char<pos:position pos:line="59" pos:column="33"/></name><operator pos:line="59" pos:column="33">)<pos:position pos:line="59" pos:column="34"/></operator><operator pos:line="59" pos:column="34">*<pos:position pos:line="59" pos:column="35"/></operator><name pos:line="59" pos:column="35">p<pos:position pos:line="59" pos:column="36"/></name><operator pos:line="59" pos:column="36">--<pos:position pos:line="59" pos:column="38"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="40">0<pos:position pos:line="59" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="43"/></expr_stmt>	<comment type="block" pos:line="59" pos:column="49">/* independent 8 bits chars */</comment>
  }<pos:position pos:line="60" pos:column="4"/></block></while>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2114_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">imap_keepalive<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CONNECTION<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">conn<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CONTEXT<pos:position pos:line="4" pos:column="10"/></name> <modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">ctx<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><name pos:line="4" pos:column="18">NULL<pos:position pos:line="4" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">IMAP_DATA<pos:position pos:line="5" pos:column="12"/></name> <modifier pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></modifier></type><name pos:line="5" pos:column="14">idata<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">conn<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">=<pos:position pos:line="7" pos:column="9"/></operator> <call><name pos:line="7" pos:column="10">mutt_socket_head<pos:position pos:line="7" pos:column="26"/></name> <argument_list pos:line="7" pos:column="27">()<pos:position pos:line="7" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>
  <while pos:line="8" pos:column="3">while <condition pos:line="8" pos:column="9">(<expr><name pos:line="8" pos:column="10">conn<pos:position pos:line="8" pos:column="14"/></name></expr>)<pos:position pos:line="8" pos:column="15"/></condition>
  <block pos:line="9" pos:column="3">{
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">conn<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">account<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">.<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">type<pos:position pos:line="10" pos:column="27"/></name></name> <operator pos:line="10" pos:column="28">==<pos:position pos:line="10" pos:column="30"/></operator> <name pos:line="10" pos:column="31">MUTT_ACCT_TYPE_IMAP<pos:position pos:line="10" pos:column="50"/></name></expr>)<pos:position pos:line="10" pos:column="51"/></condition><then pos:line="10" pos:column="51">
    <block pos:line="11" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="12" pos:column="7">int<pos:position pos:line="12" pos:column="10"/></name></type> <name pos:line="12" pos:column="11">need_free<pos:position pos:line="12" pos:column="20"/></name> <init pos:line="12" pos:column="21">= <expr><literal type="number" pos:line="12" pos:column="23">0<pos:position pos:line="12" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="25"/></decl_stmt>

      <expr_stmt><expr><name pos:line="14" pos:column="7">idata<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <operator pos:line="14" pos:column="15">(<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">IMAP_DATA<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">*<pos:position pos:line="14" pos:column="26"/></operator><operator pos:line="14" pos:column="26">)<pos:position pos:line="14" pos:column="27"/></operator> <name><name pos:line="14" pos:column="28">conn<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">-&gt;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="34">data<pos:position pos:line="14" pos:column="38"/></name></name></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>

      <if pos:line="16" pos:column="7">if <condition pos:line="16" pos:column="10">(<expr><name><name pos:line="16" pos:column="11">idata<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">state<pos:position pos:line="16" pos:column="23"/></name></name> <operator pos:line="16" pos:column="24">&gt;=<pos:position pos:line="16" pos:column="29"/></operator> <name pos:line="16" pos:column="27">IMAP_AUTHENTICATED<pos:position pos:line="16" pos:column="45"/></name>
	  <operator pos:line="17" pos:column="11">&amp;&amp;<pos:position pos:line="17" pos:column="21"/></operator> <call><name pos:line="17" pos:column="14">time<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><name pos:line="17" pos:column="19">NULL<pos:position pos:line="17" pos:column="23"/></name></expr></argument>)<pos:position pos:line="17" pos:column="24"/></argument_list></call> <operator pos:line="17" pos:column="25">&gt;=<pos:position pos:line="17" pos:column="30"/></operator> <name><name pos:line="17" pos:column="28">idata<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">-&gt;<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="35">lastread<pos:position pos:line="17" pos:column="43"/></name></name> <operator pos:line="17" pos:column="44">+<pos:position pos:line="17" pos:column="45"/></operator> <name pos:line="17" pos:column="46">ImapKeepalive<pos:position pos:line="17" pos:column="59"/></name></expr>)<pos:position pos:line="17" pos:column="60"/></condition><then pos:line="17" pos:column="60">
      <block pos:line="18" pos:column="7">{
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name><name pos:line="19" pos:column="13">idata<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">-&gt;<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="20">ctx<pos:position pos:line="19" pos:column="23"/></name></name></expr>)<pos:position pos:line="19" pos:column="24"/></condition><then pos:line="19" pos:column="24">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="11">ctx<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <name><name pos:line="20" pos:column="17">idata<pos:position pos:line="20" pos:column="22"/></name><operator pos:line="20" pos:column="22">-&gt;<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="24">ctx<pos:position pos:line="20" pos:column="27"/></name></name></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt></block></then>
	<else pos:line="21" pos:column="9">else
	<block pos:line="22" pos:column="9">{
	  <expr_stmt><expr><name pos:line="23" pos:column="11">ctx<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <call><name pos:line="23" pos:column="17">safe_calloc<pos:position pos:line="23" pos:column="28"/></name> <argument_list pos:line="23" pos:column="29">(<argument><expr><literal type="number" pos:line="23" pos:column="30">1<pos:position pos:line="23" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="33">sizeof <argument_list pos:line="23" pos:column="40">(<argument><expr><name pos:line="23" pos:column="41">CONTEXT<pos:position pos:line="23" pos:column="48"/></name></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="51"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="24" pos:column="11">ctx<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">-&gt;<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="16">data<pos:position pos:line="24" pos:column="20"/></name></name> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="23">idata<pos:position pos:line="24" pos:column="28"/></name></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>
	  <comment type="block" pos:line="25" pos:column="11">/* imap_close_mailbox will set ctx-&gt;iadata-&gt;ctx to NULL, so we can't
	   * rely on the value of iadata-&gt;ctx to determine if this placeholder
	   * context needs to be freed.
	   */</comment>
	  <expr_stmt><expr><name pos:line="29" pos:column="11">need_free<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <literal type="number" pos:line="29" pos:column="23">1<pos:position pos:line="29" pos:column="24"/></literal></expr>;<pos:position pos:line="29" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></else></if>
	<comment type="block" pos:line="31" pos:column="9">/* if the imap connection closes during this call, ctx may be invalid
	 * after this point, and thus should not be read.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">imap_check_mailbox<pos:position pos:line="34" pos:column="27"/></name> <argument_list pos:line="34" pos:column="28">(<argument><expr><name pos:line="34" pos:column="29">ctx<pos:position pos:line="34" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="34">NULL<pos:position pos:line="34" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="40">1<pos:position pos:line="34" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="43"/></expr_stmt>
	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">need_free<pos:position pos:line="35" pos:column="22"/></name></expr>)<pos:position pos:line="35" pos:column="23"/></condition><then pos:line="35" pos:column="23">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="11">FREE<pos:position pos:line="36" pos:column="15"/></name> <argument_list pos:line="36" pos:column="16">(<argument><expr><operator pos:line="36" pos:column="17">&amp;<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="18">ctx<pos:position pos:line="36" pos:column="21"/></name></expr></argument>)<pos:position pos:line="36" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="23"/></expr_stmt></block></then></if>
      }<pos:position pos:line="37" pos:column="8"/></block></then></if>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="40" pos:column="5">conn<pos:position pos:line="40" pos:column="9"/></name> <operator pos:line="40" pos:column="10">=<pos:position pos:line="40" pos:column="11"/></operator> <name><name pos:line="40" pos:column="12">conn<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">-&gt;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="18">next<pos:position pos:line="40" pos:column="22"/></name></name></expr>;<pos:position pos:line="40" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="41" pos:column="4"/></block></while>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

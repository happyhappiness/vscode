<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1708_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">smtp_auth<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">CONNECTION<pos:position pos:line="1" pos:column="33"/></name><modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type> <name pos:line="1" pos:column="35">conn<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">r<pos:position pos:line="3" pos:column="8"/></name> <init pos:line="3" pos:column="9">= <expr><name pos:line="3" pos:column="11">SMTP_AUTH_UNAVAIL<pos:position pos:line="3" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">SmtpAuthenticators<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">&amp;&amp;<pos:position pos:line="5" pos:column="36"/></operator> <operator pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="30">SmtpAuthenticators<pos:position pos:line="5" pos:column="48"/></name></expr>)<pos:position pos:line="5" pos:column="49"/></condition><then pos:line="5" pos:column="49">
  <block pos:line="6" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name><modifier pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></modifier></type> <name pos:line="7" pos:column="11">methods<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><call><name pos:line="7" pos:column="21">safe_strdup<pos:position pos:line="7" pos:column="32"/></name> <argument_list pos:line="7" pos:column="33">(<argument><expr><name pos:line="7" pos:column="34">SmtpAuthenticators<pos:position pos:line="7" pos:column="52"/></name></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="54"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name><modifier pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></modifier></type> <name pos:line="8" pos:column="11">method<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name><modifier pos:line="9" pos:column="9">*<pos:position pos:line="9" pos:column="10"/></modifier></type> <name pos:line="9" pos:column="11">delim<pos:position pos:line="9" pos:column="16"/></name></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt>

    <for pos:line="11" pos:column="5">for <control pos:line="11" pos:column="9">(<init><expr><name pos:line="11" pos:column="10">method<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="19">methods<pos:position pos:line="11" pos:column="26"/></name></expr>;<pos:position pos:line="11" pos:column="27"/></init> <condition><expr><name pos:line="11" pos:column="28">method<pos:position pos:line="11" pos:column="34"/></name></expr>;<pos:position pos:line="11" pos:column="35"/></condition> <incr><expr><name pos:line="11" pos:column="36">method<pos:position pos:line="11" pos:column="42"/></name> <operator pos:line="11" pos:column="43">=<pos:position pos:line="11" pos:column="44"/></operator> <name pos:line="11" pos:column="45">delim<pos:position pos:line="11" pos:column="50"/></name></expr></incr>)<pos:position pos:line="11" pos:column="51"/></control>
    <block pos:line="12" pos:column="5">{
      <expr_stmt><expr><name pos:line="13" pos:column="7">delim<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <call><name pos:line="13" pos:column="15">strchr<pos:position pos:line="13" pos:column="21"/></name> <argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">method<pos:position pos:line="13" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="13" pos:column="31">':'<pos:position pos:line="13" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
      <if pos:line="14" pos:column="7">if <condition pos:line="14" pos:column="10">(<expr><name pos:line="14" pos:column="11">delim<pos:position pos:line="14" pos:column="16"/></name></expr>)<pos:position pos:line="14" pos:column="17"/></condition><then pos:line="14" pos:column="17">
	<block type="pseudo"><expr_stmt><expr><operator pos:line="15" pos:column="9">*<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">delim<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">++<pos:position pos:line="15" pos:column="17"/></operator> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <literal type="char" pos:line="15" pos:column="20">'\0'<pos:position pos:line="15" pos:column="24"/></literal></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt></block></then></if>
      <if pos:line="16" pos:column="7">if <condition pos:line="16" pos:column="10">(<expr><operator pos:line="16" pos:column="11">!<pos:position pos:line="16" pos:column="12"/></operator> <name><name pos:line="16" pos:column="13">method<pos:position pos:line="16" pos:column="19"/></name><index pos:line="16" pos:column="19">[<expr><literal type="number" pos:line="16" pos:column="20">0<pos:position pos:line="16" pos:column="21"/></literal></expr>]<pos:position pos:line="16" pos:column="22"/></index></name></expr>)<pos:position pos:line="16" pos:column="23"/></condition><then pos:line="16" pos:column="23">
	<block type="pseudo"><continue pos:line="17" pos:column="9">continue;<pos:position pos:line="17" pos:column="18"/></continue></block></then></if>

      <expr_stmt><expr><call><name pos:line="19" pos:column="7">dprint<pos:position pos:line="19" pos:column="13"/></name> <argument_list pos:line="19" pos:column="14">(<argument><expr><literal type="number" pos:line="19" pos:column="15">2<pos:position pos:line="19" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="18">(<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="19">debugfile<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">,<pos:position pos:line="19" pos:column="29"/></operator> <literal type="string" pos:line="19" pos:column="30">"smtp_authenticate: Trying method %s\n"<pos:position pos:line="19" pos:column="69"/></literal><operator pos:line="19" pos:column="69">,<pos:position pos:line="19" pos:column="70"/></operator> <name pos:line="19" pos:column="71">method<pos:position pos:line="19" pos:column="77"/></name><operator pos:line="19" pos:column="77">)<pos:position pos:line="19" pos:column="78"/></operator></expr></argument>)<pos:position pos:line="19" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="80"/></expr_stmt>

      <expr_stmt><expr><name pos:line="21" pos:column="7">r<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">=<pos:position pos:line="21" pos:column="10"/></operator> <call><name pos:line="21" pos:column="11">smtp_auth_sasl<pos:position pos:line="21" pos:column="25"/></name> <argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">conn<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="33">method<pos:position pos:line="21" pos:column="39"/></name></expr></argument>)<pos:position pos:line="21" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="41"/></expr_stmt>
      
      <if pos:line="23" pos:column="7">if <condition pos:line="23" pos:column="10">(<expr><name pos:line="23" pos:column="11">r<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">==<pos:position pos:line="23" pos:column="15"/></operator> <name pos:line="23" pos:column="16">SMTP_AUTH_FAIL<pos:position pos:line="23" pos:column="30"/></name> <operator pos:line="23" pos:column="31">&amp;&amp;<pos:position pos:line="23" pos:column="41"/></operator> <name pos:line="23" pos:column="34">delim<pos:position pos:line="23" pos:column="39"/></name></expr>)<pos:position pos:line="23" pos:column="40"/></condition><then pos:line="23" pos:column="40">
      <block pos:line="24" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">mutt_error<pos:position pos:line="25" pos:column="19"/></name> <argument_list pos:line="25" pos:column="20">(<argument><expr><call><name pos:line="25" pos:column="21">_<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><literal type="string" pos:line="25" pos:column="23">"%s authentication failed, trying next method"<pos:position pos:line="25" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="25" pos:column="72">method<pos:position pos:line="25" pos:column="78"/></name></expr></argument>)<pos:position pos:line="25" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">mutt_sleep<pos:position pos:line="26" pos:column="19"/></name> <argument_list pos:line="26" pos:column="20">(<argument><expr><literal type="number" pos:line="26" pos:column="21">1<pos:position pos:line="26" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt>
      }<pos:position pos:line="27" pos:column="8"/></block></then>
      <elseif pos:line="28" pos:column="7">else <if pos:line="28" pos:column="12">if <condition pos:line="28" pos:column="15">(<expr><name pos:line="28" pos:column="16">r<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">!=<pos:position pos:line="28" pos:column="20"/></operator> <name pos:line="28" pos:column="21">SMTP_AUTH_UNAVAIL<pos:position pos:line="28" pos:column="38"/></name></expr>)<pos:position pos:line="28" pos:column="39"/></condition><then pos:line="28" pos:column="39">
        <block type="pseudo"><break pos:line="29" pos:column="9">break;<pos:position pos:line="29" pos:column="15"/></break></block></then></if></elseif></if>
    }<pos:position pos:line="30" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="32" pos:column="5">FREE<pos:position pos:line="32" pos:column="9"/></name> <argument_list pos:line="32" pos:column="10">(<argument><expr><operator pos:line="32" pos:column="11">&amp;<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="12">methods<pos:position pos:line="32" pos:column="19"/></name></expr></argument>)<pos:position pos:line="32" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="33" pos:column="4"/></block></then>
  <else pos:line="34" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="5">r<pos:position pos:line="35" pos:column="6"/></name> <operator pos:line="35" pos:column="7">=<pos:position pos:line="35" pos:column="8"/></operator> <call><name pos:line="35" pos:column="9">smtp_auth_sasl<pos:position pos:line="35" pos:column="23"/></name> <argument_list pos:line="35" pos:column="24">(<argument><expr><name pos:line="35" pos:column="25">conn<pos:position pos:line="35" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="31">AuthMechs<pos:position pos:line="35" pos:column="40"/></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt></block></else></if>

  <if pos:line="37" pos:column="3">if <condition pos:line="37" pos:column="6">(<expr><name pos:line="37" pos:column="7">r<pos:position pos:line="37" pos:column="8"/></name> <operator pos:line="37" pos:column="9">!=<pos:position pos:line="37" pos:column="11"/></operator> <name pos:line="37" pos:column="12">SMTP_AUTH_SUCCESS<pos:position pos:line="37" pos:column="29"/></name></expr>)<pos:position pos:line="37" pos:column="30"/></condition><then pos:line="37" pos:column="30">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="5">mutt_account_unsetpass<pos:position pos:line="38" pos:column="27"/></name> <argument_list pos:line="38" pos:column="28">(<argument><expr><operator pos:line="38" pos:column="29">&amp;<pos:position pos:line="38" pos:column="34"/></operator><name><name pos:line="38" pos:column="30">conn<pos:position pos:line="38" pos:column="34"/></name><operator pos:line="38" pos:column="34">-&gt;<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="36">account<pos:position pos:line="38" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="45"/></expr_stmt></block></then></if>

  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><name pos:line="40" pos:column="7">r<pos:position pos:line="40" pos:column="8"/></name> <operator pos:line="40" pos:column="9">==<pos:position pos:line="40" pos:column="11"/></operator> <name pos:line="40" pos:column="12">SMTP_AUTH_FAIL<pos:position pos:line="40" pos:column="26"/></name></expr>)<pos:position pos:line="40" pos:column="27"/></condition><then pos:line="40" pos:column="27">
  <block pos:line="41" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">mutt_error<pos:position pos:line="42" pos:column="15"/></name> <argument_list pos:line="42" pos:column="16">(<argument><expr><call><name pos:line="42" pos:column="17">_<pos:position pos:line="42" pos:column="18"/></name><argument_list pos:line="42" pos:column="18">(<argument><expr><literal type="string" pos:line="42" pos:column="19">"SASL authentication failed"<pos:position pos:line="42" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">mutt_sleep<pos:position pos:line="43" pos:column="15"/></name> <argument_list pos:line="43" pos:column="16">(<argument><expr><literal type="number" pos:line="43" pos:column="17">1<pos:position pos:line="43" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="44" pos:column="4"/></block></then>
  <elseif pos:line="45" pos:column="3">else <if pos:line="45" pos:column="8">if <condition pos:line="45" pos:column="11">(<expr><name pos:line="45" pos:column="12">r<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">==<pos:position pos:line="45" pos:column="16"/></operator> <name pos:line="45" pos:column="17">SMTP_AUTH_UNAVAIL<pos:position pos:line="45" pos:column="34"/></name></expr>)<pos:position pos:line="45" pos:column="35"/></condition><then pos:line="45" pos:column="35">
  <block pos:line="46" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">mutt_error<pos:position pos:line="47" pos:column="15"/></name> <argument_list pos:line="47" pos:column="16">(<argument><expr><call><name pos:line="47" pos:column="17">_<pos:position pos:line="47" pos:column="18"/></name><argument_list pos:line="47" pos:column="18">(<argument><expr><literal type="string" pos:line="47" pos:column="19">"No authenticators available"<pos:position pos:line="47" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">mutt_sleep<pos:position pos:line="48" pos:column="15"/></name> <argument_list pos:line="48" pos:column="16">(<argument><expr><literal type="number" pos:line="48" pos:column="17">1<pos:position pos:line="48" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="49" pos:column="4"/></block></then></if></elseif></if>

  <return pos:line="51" pos:column="3">return <expr><ternary><condition><expr><name pos:line="51" pos:column="10">r<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">==<pos:position pos:line="51" pos:column="14"/></operator> <name pos:line="51" pos:column="15">SMTP_AUTH_SUCCESS<pos:position pos:line="51" pos:column="32"/></name></expr> ?<pos:position pos:line="51" pos:column="34"/></condition><then pos:line="51" pos:column="34"> <expr><literal type="number" pos:line="51" pos:column="35">0<pos:position pos:line="51" pos:column="36"/></literal></expr> <pos:position pos:line="51" pos:column="37"/></then><else pos:line="51" pos:column="37">: <expr><operator pos:line="51" pos:column="39">-<pos:position pos:line="51" pos:column="40"/></operator><literal type="number" pos:line="51" pos:column="40">1<pos:position pos:line="51" pos:column="41"/></literal></expr></else></ternary></expr>;<pos:position pos:line="51" pos:column="42"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1957_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name pos:line="2" pos:column="1">_nl_normalize_codeset<pos:position pos:line="2" pos:column="22"/></name> <argument_list pos:line="2" pos:column="23">(<argument><expr><name pos:line="2" pos:column="24">codeset<pos:position pos:line="2" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="33">name_len<pos:position pos:line="2" pos:column="41"/></name></expr></argument>)<pos:position pos:line="2" pos:column="42"/></argument_list>
     const <name pos:line="3" pos:column="12">char<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier><name pos:line="3" pos:column="18">codeset<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="4" pos:column="6">size_t<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">name_len<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">len<pos:position pos:line="6" pos:column="10"/></name> <init pos:line="6" pos:column="11">= <expr><literal type="number" pos:line="6" pos:column="13">0<pos:position pos:line="6" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">only_digit<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><literal type="number" pos:line="7" pos:column="20">1<pos:position pos:line="7" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">retval<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">wp<pos:position pos:line="9" pos:column="11"/></name></decl>;<pos:position pos:line="9" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">size_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">cnt<pos:position pos:line="10" pos:column="13"/></name></decl>;<pos:position pos:line="10" pos:column="14"/></decl_stmt>

  <for pos:line="12" pos:column="3">for <control pos:line="12" pos:column="7">(<init><expr><name pos:line="12" pos:column="8">cnt<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <literal type="number" pos:line="12" pos:column="14">0<pos:position pos:line="12" pos:column="15"/></literal></expr>;<pos:position pos:line="12" pos:column="16"/></init> <condition><expr><name pos:line="12" pos:column="17">cnt<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">&lt;<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="23">name_len<pos:position pos:line="12" pos:column="31"/></name></expr>;<pos:position pos:line="12" pos:column="32"/></condition> <incr><expr><operator pos:line="12" pos:column="33">++<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="35">cnt<pos:position pos:line="12" pos:column="38"/></name></expr></incr>)<pos:position pos:line="12" pos:column="39"/></control>
    <block type="pseudo"><if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">isalnum<pos:position pos:line="13" pos:column="16"/></name> <argument_list pos:line="13" pos:column="17">(<argument><expr><operator pos:line="13" pos:column="18">(<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="19">unsigned<pos:position pos:line="13" pos:column="27"/></name> <name pos:line="13" pos:column="28">char<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">)<pos:position pos:line="13" pos:column="33"/></operator> <name><name pos:line="13" pos:column="34">codeset<pos:position pos:line="13" pos:column="41"/></name><index pos:line="13" pos:column="41">[<expr><name pos:line="13" pos:column="42">cnt<pos:position pos:line="13" pos:column="45"/></name></expr>]<pos:position pos:line="13" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="48"/></condition><then pos:line="13" pos:column="48">
      <block pos:line="14" pos:column="7">{
	<expr_stmt><expr><operator pos:line="15" pos:column="9">++<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="11">len<pos:position pos:line="15" pos:column="14"/></name></expr>;<pos:position pos:line="15" pos:column="15"/></expr_stmt>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">isalpha<pos:position pos:line="17" pos:column="20"/></name> <argument_list pos:line="17" pos:column="21">(<argument><expr><operator pos:line="17" pos:column="22">(<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="23">unsigned<pos:position pos:line="17" pos:column="31"/></name> <name pos:line="17" pos:column="32">char<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">)<pos:position pos:line="17" pos:column="37"/></operator> <name><name pos:line="17" pos:column="38">codeset<pos:position pos:line="17" pos:column="45"/></name><index pos:line="17" pos:column="45">[<expr><name pos:line="17" pos:column="46">cnt<pos:position pos:line="17" pos:column="49"/></name></expr>]<pos:position pos:line="17" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="52"/></condition><then pos:line="17" pos:column="52">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="11">only_digit<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <literal type="number" pos:line="18" pos:column="24">0<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt></block></then></if>
      }<pos:position pos:line="19" pos:column="8"/></block></then></if></block></for>

  <expr_stmt><expr><name pos:line="21" pos:column="3">retval<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator> <operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">char<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">*<pos:position pos:line="21" pos:column="19"/></operator><operator pos:line="21" pos:column="19">)<pos:position pos:line="21" pos:column="20"/></operator> <call><name pos:line="21" pos:column="21">malloc<pos:position pos:line="21" pos:column="27"/></name> <argument_list pos:line="21" pos:column="28">(<argument><expr><operator pos:line="21" pos:column="29">(<pos:position pos:line="21" pos:column="30"/></operator><ternary><condition><expr><name pos:line="21" pos:column="30">only_digit<pos:position pos:line="21" pos:column="40"/></name></expr> ?<pos:position pos:line="21" pos:column="42"/></condition><then pos:line="21" pos:column="42"> <expr><literal type="number" pos:line="21" pos:column="43">3<pos:position pos:line="21" pos:column="44"/></literal></expr> <pos:position pos:line="21" pos:column="45"/></then><else pos:line="21" pos:column="45">: <expr><literal type="number" pos:line="21" pos:column="47">0<pos:position pos:line="21" pos:column="48"/></literal></expr></else></ternary><operator pos:line="21" pos:column="48">)<pos:position pos:line="21" pos:column="49"/></operator> <operator pos:line="21" pos:column="50">+<pos:position pos:line="21" pos:column="51"/></operator> <name pos:line="21" pos:column="52">len<pos:position pos:line="21" pos:column="55"/></name> <operator pos:line="21" pos:column="56">+<pos:position pos:line="21" pos:column="57"/></operator> <literal type="number" pos:line="21" pos:column="58">1<pos:position pos:line="21" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="61"/></expr_stmt>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name pos:line="23" pos:column="7">retval<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">!=<pos:position pos:line="23" pos:column="16"/></operator> <name pos:line="23" pos:column="17">NULL<pos:position pos:line="23" pos:column="21"/></name></expr>)<pos:position pos:line="23" pos:column="22"/></condition><then pos:line="23" pos:column="22">
    <block pos:line="24" pos:column="5">{
      <if pos:line="25" pos:column="7">if <condition pos:line="25" pos:column="10">(<expr><name pos:line="25" pos:column="11">only_digit<pos:position pos:line="25" pos:column="21"/></name></expr>)<pos:position pos:line="25" pos:column="22"/></condition><then pos:line="25" pos:column="22">
	<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="9">wp<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <call><name pos:line="26" pos:column="14">stpcpy<pos:position pos:line="26" pos:column="20"/></name> <argument_list pos:line="26" pos:column="21">(<argument><expr><name pos:line="26" pos:column="22">retval<pos:position pos:line="26" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="30">"iso"<pos:position pos:line="26" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt></block></then>
      <else pos:line="27" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="9">wp<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <name pos:line="28" pos:column="14">retval<pos:position pos:line="28" pos:column="20"/></name></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt></block></else></if>

      <for pos:line="30" pos:column="7">for <control pos:line="30" pos:column="11">(<init><expr><name pos:line="30" pos:column="12">cnt<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <literal type="number" pos:line="30" pos:column="18">0<pos:position pos:line="30" pos:column="19"/></literal></expr>;<pos:position pos:line="30" pos:column="20"/></init> <condition><expr><name pos:line="30" pos:column="21">cnt<pos:position pos:line="30" pos:column="24"/></name> <operator pos:line="30" pos:column="25">&lt;<pos:position pos:line="30" pos:column="29"/></operator> <name pos:line="30" pos:column="27">name_len<pos:position pos:line="30" pos:column="35"/></name></expr>;<pos:position pos:line="30" pos:column="36"/></condition> <incr><expr><operator pos:line="30" pos:column="37">++<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="39">cnt<pos:position pos:line="30" pos:column="42"/></name></expr></incr>)<pos:position pos:line="30" pos:column="43"/></control>
	<block type="pseudo"><if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><call><name pos:line="31" pos:column="13">isalpha<pos:position pos:line="31" pos:column="20"/></name> <argument_list pos:line="31" pos:column="21">(<argument><expr><operator pos:line="31" pos:column="22">(<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="23">unsigned<pos:position pos:line="31" pos:column="31"/></name> <name pos:line="31" pos:column="32">char<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">)<pos:position pos:line="31" pos:column="37"/></operator> <name><name pos:line="31" pos:column="38">codeset<pos:position pos:line="31" pos:column="45"/></name><index pos:line="31" pos:column="45">[<expr><name pos:line="31" pos:column="46">cnt<pos:position pos:line="31" pos:column="49"/></name></expr>]<pos:position pos:line="31" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="52"/></condition><then pos:line="31" pos:column="52">
	  <block type="pseudo"><expr_stmt><expr><operator pos:line="32" pos:column="11">*<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="12">wp<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">++<pos:position pos:line="32" pos:column="16"/></operator> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <call><name pos:line="32" pos:column="19">tolower<pos:position pos:line="32" pos:column="26"/></name> <argument_list pos:line="32" pos:column="27">(<argument><expr><operator pos:line="32" pos:column="28">(<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="29">unsigned<pos:position pos:line="32" pos:column="37"/></name> <name pos:line="32" pos:column="38">char<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">)<pos:position pos:line="32" pos:column="43"/></operator> <name><name pos:line="32" pos:column="44">codeset<pos:position pos:line="32" pos:column="51"/></name><index pos:line="32" pos:column="51">[<expr><name pos:line="32" pos:column="52">cnt<pos:position pos:line="32" pos:column="55"/></name></expr>]<pos:position pos:line="32" pos:column="56"/></index></name></expr></argument>)<pos:position pos:line="32" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="58"/></expr_stmt></block></then>
	<elseif pos:line="33" pos:column="9">else <if pos:line="33" pos:column="14">if <condition pos:line="33" pos:column="17">(<expr><call><name pos:line="33" pos:column="18">isdigit<pos:position pos:line="33" pos:column="25"/></name> <argument_list pos:line="33" pos:column="26">(<argument><expr><operator pos:line="33" pos:column="27">(<pos:position pos:line="33" pos:column="28"/></operator><name pos:line="33" pos:column="28">unsigned<pos:position pos:line="33" pos:column="36"/></name> <name pos:line="33" pos:column="37">char<pos:position pos:line="33" pos:column="41"/></name><operator pos:line="33" pos:column="41">)<pos:position pos:line="33" pos:column="42"/></operator> <name><name pos:line="33" pos:column="43">codeset<pos:position pos:line="33" pos:column="50"/></name><index pos:line="33" pos:column="50">[<expr><name pos:line="33" pos:column="51">cnt<pos:position pos:line="33" pos:column="54"/></name></expr>]<pos:position pos:line="33" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="33" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="57"/></condition><then pos:line="33" pos:column="57">
	  <block type="pseudo"><expr_stmt><expr><operator pos:line="34" pos:column="11">*<pos:position pos:line="34" pos:column="12"/></operator><name pos:line="34" pos:column="12">wp<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">++<pos:position pos:line="34" pos:column="16"/></operator> <operator pos:line="34" pos:column="17">=<pos:position pos:line="34" pos:column="18"/></operator> <name><name pos:line="34" pos:column="19">codeset<pos:position pos:line="34" pos:column="26"/></name><index pos:line="34" pos:column="26">[<expr><name pos:line="34" pos:column="27">cnt<pos:position pos:line="34" pos:column="30"/></name></expr>]<pos:position pos:line="34" pos:column="31"/></index></name></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt></block></then></if></elseif></if></block></for>

      <expr_stmt><expr><operator pos:line="36" pos:column="7">*<pos:position pos:line="36" pos:column="8"/></operator><name pos:line="36" pos:column="8">wp<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">=<pos:position pos:line="36" pos:column="12"/></operator> <literal type="char" pos:line="36" pos:column="13">'\0'<pos:position pos:line="36" pos:column="17"/></literal></expr>;<pos:position pos:line="36" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

  <return pos:line="39" pos:column="3">return <expr><operator pos:line="39" pos:column="10">(<pos:position pos:line="39" pos:column="11"/></operator><specifier pos:line="39" pos:column="11">const<pos:position pos:line="39" pos:column="16"/></specifier> <name pos:line="39" pos:column="17">char<pos:position pos:line="39" pos:column="21"/></name> <operator pos:line="39" pos:column="22">*<pos:position pos:line="39" pos:column="23"/></operator><operator pos:line="39" pos:column="23">)<pos:position pos:line="39" pos:column="24"/></operator> <name pos:line="39" pos:column="25">retval<pos:position pos:line="39" pos:column="31"/></name></expr>;<pos:position pos:line="39" pos:column="32"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1041_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">multipart_handler<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">BODY<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">a<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">STATE<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">s<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">BODY<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">b<pos:position pos:line="3" pos:column="10"/></name></decl>, <modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="13">p<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">length<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><literal type="number" pos:line="4" pos:column="15">5<pos:position pos:line="4" pos:column="16"/></literal></expr>]<pos:position pos:line="4" pos:column="17"/></index></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">stat<pos:position pos:line="5" pos:column="14"/></name></name></type> <name pos:line="5" pos:column="15">st<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">count<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">rc<pos:position pos:line="7" pos:column="9"/></name> <init pos:line="7" pos:column="10">= <expr><literal type="number" pos:line="7" pos:column="12">0<pos:position pos:line="7" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name><name pos:line="9" pos:column="7">a<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">-&gt;<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="10">encoding<pos:position pos:line="9" pos:column="18"/></name></name> <operator pos:line="9" pos:column="19">==<pos:position pos:line="9" pos:column="21"/></operator> <name pos:line="9" pos:column="22">ENCBASE64<pos:position pos:line="9" pos:column="31"/></name> <operator pos:line="9" pos:column="32">||<pos:position pos:line="9" pos:column="34"/></operator> <name><name pos:line="9" pos:column="35">a<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">-&gt;<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="38">encoding<pos:position pos:line="9" pos:column="46"/></name></name> <operator pos:line="9" pos:column="47">==<pos:position pos:line="9" pos:column="49"/></operator> <name pos:line="9" pos:column="50">ENCQUOTEDPRINTABLE<pos:position pos:line="9" pos:column="68"/></name> <operator pos:line="9" pos:column="69">||<pos:position pos:line="9" pos:column="71"/></operator>
      <name><name pos:line="10" pos:column="7">a<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">-&gt;<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="10">encoding<pos:position pos:line="10" pos:column="18"/></name></name> <operator pos:line="10" pos:column="19">==<pos:position pos:line="10" pos:column="21"/></operator> <name pos:line="10" pos:column="22">ENCUUENCODED<pos:position pos:line="10" pos:column="34"/></name></expr>)<pos:position pos:line="10" pos:column="35"/></condition><then pos:line="10" pos:column="35">
  <block pos:line="11" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">fstat<pos:position pos:line="12" pos:column="10"/></name> <argument_list pos:line="12" pos:column="11">(<argument><expr><call><name pos:line="12" pos:column="12">fileno<pos:position pos:line="12" pos:column="18"/></name> <argument_list pos:line="12" pos:column="19">(<argument><expr><name><name pos:line="12" pos:column="20">s<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">-&gt;<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="23">fpin<pos:position pos:line="12" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="12" pos:column="30">&amp;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="31">st<pos:position pos:line="12" pos:column="33"/></name></expr></argument>)<pos:position pos:line="12" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">b<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <call><name pos:line="13" pos:column="9">mutt_new_body<pos:position pos:line="13" pos:column="22"/></name> <argument_list pos:line="13" pos:column="23">()<pos:position pos:line="13" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">b<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">-&gt;<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="8">length<pos:position pos:line="14" pos:column="14"/></name></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <operator pos:line="14" pos:column="17">(<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">long<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">)<pos:position pos:line="14" pos:column="23"/></operator> <name><name pos:line="14" pos:column="24">st<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">.<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="27">st_size<pos:position pos:line="14" pos:column="34"/></name></name></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">b<pos:position pos:line="15" pos:column="6"/></name><operator pos:line="15" pos:column="6">-&gt;<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="8">parts<pos:position pos:line="15" pos:column="13"/></name></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <call><name pos:line="15" pos:column="16">mutt_parse_multipart<pos:position pos:line="15" pos:column="36"/></name> <argument_list pos:line="15" pos:column="37">(<argument><expr><name><name pos:line="15" pos:column="38">s<pos:position pos:line="15" pos:column="39"/></name><operator pos:line="15" pos:column="39">-&gt;<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="41">fpin<pos:position pos:line="15" pos:column="45"/></name></name></expr></argument>,
		  <argument><expr><call><name pos:line="16" pos:column="19">mutt_get_parameter<pos:position pos:line="16" pos:column="37"/></name> <argument_list pos:line="16" pos:column="38">(<argument><expr><literal type="string" pos:line="16" pos:column="39">"boundary"<pos:position pos:line="16" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="51">a<pos:position pos:line="16" pos:column="52"/></name><operator pos:line="16" pos:column="52">-&gt;<pos:position pos:line="16" pos:column="57"/></operator><name pos:line="16" pos:column="54">parameter<pos:position pos:line="16" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></call></expr></argument>,
		  <argument><expr><operator pos:line="17" pos:column="19">(<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="20">long<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">)<pos:position pos:line="17" pos:column="25"/></operator> <name><name pos:line="17" pos:column="26">st<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">.<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="29">st_size<pos:position pos:line="17" pos:column="36"/></name></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="38">ascii_strcasecmp<pos:position pos:line="17" pos:column="54"/></name> <argument_list pos:line="17" pos:column="55">(<argument><expr><literal type="string" pos:line="17" pos:column="56">"digest"<pos:position pos:line="17" pos:column="64"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="66">a<pos:position pos:line="17" pos:column="67"/></name><operator pos:line="17" pos:column="67">-&gt;<pos:position pos:line="17" pos:column="72"/></operator><name pos:line="17" pos:column="69">subtype<pos:position pos:line="17" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="77"/></argument_list></call> <operator pos:line="17" pos:column="78">==<pos:position pos:line="17" pos:column="80"/></operator> <literal type="number" pos:line="17" pos:column="81">0<pos:position pos:line="17" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="84"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></then>
  <else pos:line="19" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="5">b<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">=<pos:position pos:line="20" pos:column="8"/></operator> <name pos:line="20" pos:column="9">a<pos:position pos:line="20" pos:column="10"/></name></expr>;<pos:position pos:line="20" pos:column="11"/></expr_stmt></block></else></if>

  <for pos:line="22" pos:column="3">for <control pos:line="22" pos:column="7">(<init><expr><name pos:line="22" pos:column="8">p<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <name><name pos:line="22" pos:column="12">b<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">-&gt;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="15">parts<pos:position pos:line="22" pos:column="20"/></name></name></expr><operator pos:line="22" pos:column="20">,<pos:position pos:line="22" pos:column="21"/></operator> <expr><name pos:line="22" pos:column="22">count<pos:position pos:line="22" pos:column="27"/></name> <operator pos:line="22" pos:column="28">=<pos:position pos:line="22" pos:column="29"/></operator> <literal type="number" pos:line="22" pos:column="30">1<pos:position pos:line="22" pos:column="31"/></literal></expr>;<pos:position pos:line="22" pos:column="32"/></init> <condition><expr><name pos:line="22" pos:column="33">p<pos:position pos:line="22" pos:column="34"/></name></expr>;<pos:position pos:line="22" pos:column="35"/></condition> <incr><expr><name pos:line="22" pos:column="36">p<pos:position pos:line="22" pos:column="37"/></name> <operator pos:line="22" pos:column="38">=<pos:position pos:line="22" pos:column="39"/></operator> <name><name pos:line="22" pos:column="40">p<pos:position pos:line="22" pos:column="41"/></name><operator pos:line="22" pos:column="41">-&gt;<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="43">next<pos:position pos:line="22" pos:column="47"/></name></name></expr><operator pos:line="22" pos:column="47">,<pos:position pos:line="22" pos:column="48"/></operator> <expr><name pos:line="22" pos:column="49">count<pos:position pos:line="22" pos:column="54"/></name><operator pos:line="22" pos:column="54">++<pos:position pos:line="22" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="57"/></control>
  <block pos:line="23" pos:column="3">{
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name><name pos:line="24" pos:column="9">s<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">-&gt;<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="12">flags<pos:position pos:line="24" pos:column="17"/></name></name> <operator pos:line="24" pos:column="18">&amp;<pos:position pos:line="24" pos:column="23"/></operator> <name pos:line="24" pos:column="20">MUTT_DISPLAY<pos:position pos:line="24" pos:column="32"/></name></expr>)<pos:position pos:line="24" pos:column="33"/></condition><then pos:line="24" pos:column="33">
    <block pos:line="25" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">state_mark_attach<pos:position pos:line="26" pos:column="24"/></name> <argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">s<pos:position pos:line="26" pos:column="27"/></name></expr></argument>)<pos:position pos:line="26" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">state_printf<pos:position pos:line="27" pos:column="19"/></name> <argument_list pos:line="27" pos:column="20">(<argument><expr><name pos:line="27" pos:column="21">s<pos:position pos:line="27" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="24">_<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><literal type="string" pos:line="27" pos:column="26">"[-- Attachment #%d"<pos:position pos:line="27" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="27" pos:column="49">count<pos:position pos:line="27" pos:column="54"/></name></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="56"/></expr_stmt>
      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><name><name pos:line="28" pos:column="11">p<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">-&gt;<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="14">description<pos:position pos:line="28" pos:column="25"/></name></name> <operator pos:line="28" pos:column="26">||<pos:position pos:line="28" pos:column="28"/></operator> <name><name pos:line="28" pos:column="29">p<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">-&gt;<pos:position pos:line="28" pos:column="35"/></operator><name pos:line="28" pos:column="32">filename<pos:position pos:line="28" pos:column="40"/></name></name> <operator pos:line="28" pos:column="41">||<pos:position pos:line="28" pos:column="43"/></operator> <name><name pos:line="28" pos:column="44">p<pos:position pos:line="28" pos:column="45"/></name><operator pos:line="28" pos:column="45">-&gt;<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="47">form_name<pos:position pos:line="28" pos:column="56"/></name></name></expr>)<pos:position pos:line="28" pos:column="57"/></condition><then pos:line="28" pos:column="57">
      <block pos:line="29" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">state_puts<pos:position pos:line="30" pos:column="19"/></name> <argument_list pos:line="30" pos:column="20">(<argument><expr><literal type="string" pos:line="30" pos:column="21">": "<pos:position pos:line="30" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="27">s<pos:position pos:line="30" pos:column="28"/></name></expr></argument>)<pos:position pos:line="30" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">state_puts<pos:position pos:line="31" pos:column="19"/></name> <argument_list pos:line="31" pos:column="20">(<argument><expr><ternary><condition><expr><name><name pos:line="31" pos:column="21">p<pos:position pos:line="31" pos:column="22"/></name><operator pos:line="31" pos:column="22">-&gt;<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="24">description<pos:position pos:line="31" pos:column="35"/></name></name></expr> ?<pos:position pos:line="31" pos:column="37"/></condition><then pos:line="31" pos:column="37"> <expr><name><name pos:line="31" pos:column="38">p<pos:position pos:line="31" pos:column="39"/></name><operator pos:line="31" pos:column="39">-&gt;<pos:position pos:line="31" pos:column="44"/></operator><name pos:line="31" pos:column="41">description<pos:position pos:line="31" pos:column="52"/></name></name></expr> <pos:position pos:line="31" pos:column="53"/></then><else pos:line="31" pos:column="53">:
		    <expr><ternary><condition><expr><name><name pos:line="32" pos:column="21">p<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">-&gt;<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="24">filename<pos:position pos:line="32" pos:column="32"/></name></name></expr> ?<pos:position pos:line="32" pos:column="34"/></condition><then pos:line="32" pos:column="34"> <expr><name><name pos:line="32" pos:column="35">p<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">-&gt;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="38">filename<pos:position pos:line="32" pos:column="46"/></name></name></expr> <pos:position pos:line="32" pos:column="47"/></then><else pos:line="32" pos:column="47">: <expr><name><name pos:line="32" pos:column="49">p<pos:position pos:line="32" pos:column="50"/></name><operator pos:line="32" pos:column="50">-&gt;<pos:position pos:line="32" pos:column="55"/></operator><name pos:line="32" pos:column="52">form_name<pos:position pos:line="32" pos:column="61"/></name></name></expr></else></ternary></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="32" pos:column="63">s<pos:position pos:line="32" pos:column="64"/></name></expr></argument>)<pos:position pos:line="32" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="66"/></expr_stmt>
      }<pos:position pos:line="33" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">state_puts<pos:position pos:line="34" pos:column="17"/></name> <argument_list pos:line="34" pos:column="18">(<argument><expr><literal type="string" pos:line="34" pos:column="19">" --]\n"<pos:position pos:line="34" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="29">s<pos:position pos:line="34" pos:column="30"/></name></expr></argument>)<pos:position pos:line="34" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="36" pos:column="7">mutt_pretty_size<pos:position pos:line="36" pos:column="23"/></name> <argument_list pos:line="36" pos:column="24">(<argument><expr><name pos:line="36" pos:column="25">length<pos:position pos:line="36" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="33">sizeof <argument_list pos:line="36" pos:column="40">(<argument><expr><name pos:line="36" pos:column="41">length<pos:position pos:line="36" pos:column="47"/></name></expr></argument>)<pos:position pos:line="36" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="50">p<pos:position pos:line="36" pos:column="51"/></name><operator pos:line="36" pos:column="51">-&gt;<pos:position pos:line="36" pos:column="56"/></operator><name pos:line="36" pos:column="53">length<pos:position pos:line="36" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="61"/></expr_stmt>
      
      <expr_stmt><expr><call><name pos:line="38" pos:column="7">state_mark_attach<pos:position pos:line="38" pos:column="24"/></name> <argument_list pos:line="38" pos:column="25">(<argument><expr><name pos:line="38" pos:column="26">s<pos:position pos:line="38" pos:column="27"/></name></expr></argument>)<pos:position pos:line="38" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="39" pos:column="7">state_printf<pos:position pos:line="39" pos:column="19"/></name> <argument_list pos:line="39" pos:column="20">(<argument><expr><name pos:line="39" pos:column="21">s<pos:position pos:line="39" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="24">_<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">(<argument><expr><literal type="string" pos:line="39" pos:column="26">"[-- Type: %s/%s, Encoding: %s, Size: %s --]\n"<pos:position pos:line="39" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="74"/></argument_list></call></expr></argument>,
		    <argument><expr><call><name pos:line="40" pos:column="21">TYPE<pos:position pos:line="40" pos:column="25"/></name> <argument_list pos:line="40" pos:column="26">(<argument><expr><name pos:line="40" pos:column="27">p<pos:position pos:line="40" pos:column="28"/></name></expr></argument>)<pos:position pos:line="40" pos:column="29"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="31">p<pos:position pos:line="40" pos:column="32"/></name><operator pos:line="40" pos:column="32">-&gt;<pos:position pos:line="40" pos:column="37"/></operator><name pos:line="40" pos:column="34">subtype<pos:position pos:line="40" pos:column="41"/></name></name></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="43">ENCODING<pos:position pos:line="40" pos:column="51"/></name> <argument_list pos:line="40" pos:column="52">(<argument><expr><name><name pos:line="40" pos:column="53">p<pos:position pos:line="40" pos:column="54"/></name><operator pos:line="40" pos:column="54">-&gt;<pos:position pos:line="40" pos:column="59"/></operator><name pos:line="40" pos:column="56">encoding<pos:position pos:line="40" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="40" pos:column="67">length<pos:position pos:line="40" pos:column="73"/></name></expr></argument>)<pos:position pos:line="40" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="75"/></expr_stmt>
      <if pos:line="41" pos:column="7">if <condition pos:line="41" pos:column="10">(<expr><operator pos:line="41" pos:column="11">!<pos:position pos:line="41" pos:column="12"/></operator><call><name pos:line="41" pos:column="12">option<pos:position pos:line="41" pos:column="18"/></name> <argument_list pos:line="41" pos:column="19">(<argument><expr><name pos:line="41" pos:column="20">OPTWEED<pos:position pos:line="41" pos:column="27"/></name></expr></argument>)<pos:position pos:line="41" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="29"/></condition><then pos:line="41" pos:column="29">
      <block pos:line="42" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">fseeko<pos:position pos:line="43" pos:column="15"/></name> <argument_list pos:line="43" pos:column="16">(<argument><expr><name><name pos:line="43" pos:column="17">s<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">-&gt;<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="20">fpin<pos:position pos:line="43" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="26">p<pos:position pos:line="43" pos:column="27"/></name><operator pos:line="43" pos:column="27">-&gt;<pos:position pos:line="43" pos:column="32"/></operator><name pos:line="43" pos:column="29">hdr_offset<pos:position pos:line="43" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="41">0<pos:position pos:line="43" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="44" pos:column="9">mutt_copy_bytes<pos:position pos:line="44" pos:column="24"/></name><argument_list pos:line="44" pos:column="24">(<argument><expr><name><name pos:line="44" pos:column="25">s<pos:position pos:line="44" pos:column="26"/></name><operator pos:line="44" pos:column="26">-&gt;<pos:position pos:line="44" pos:column="31"/></operator><name pos:line="44" pos:column="28">fpin<pos:position pos:line="44" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="34">s<pos:position pos:line="44" pos:column="35"/></name><operator pos:line="44" pos:column="35">-&gt;<pos:position pos:line="44" pos:column="40"/></operator><name pos:line="44" pos:column="37">fpout<pos:position pos:line="44" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="44">p<pos:position pos:line="44" pos:column="45"/></name><operator pos:line="44" pos:column="45">-&gt;<pos:position pos:line="44" pos:column="50"/></operator><name pos:line="44" pos:column="47">offset<pos:position pos:line="44" pos:column="53"/></name></name><operator pos:line="44" pos:column="53">-<pos:position pos:line="44" pos:column="54"/></operator><name><name pos:line="44" pos:column="54">p<pos:position pos:line="44" pos:column="55"/></name><operator pos:line="44" pos:column="55">-&gt;<pos:position pos:line="44" pos:column="60"/></operator><name pos:line="44" pos:column="57">hdr_offset<pos:position pos:line="44" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="69"/></expr_stmt>
      }<pos:position pos:line="45" pos:column="8"/></block></then>
      <else pos:line="46" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="9">state_putc<pos:position pos:line="47" pos:column="19"/></name> <argument_list pos:line="47" pos:column="20">(<argument><expr><literal type="char" pos:line="47" pos:column="21">'\n'<pos:position pos:line="47" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="27">s<pos:position pos:line="47" pos:column="28"/></name></expr></argument>)<pos:position pos:line="47" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="30"/></expr_stmt></block></else></if>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="50" pos:column="5">rc<pos:position pos:line="50" pos:column="7"/></name> <operator pos:line="50" pos:column="8">=<pos:position pos:line="50" pos:column="9"/></operator> <call><name pos:line="50" pos:column="10">mutt_body_handler<pos:position pos:line="50" pos:column="27"/></name> <argument_list pos:line="50" pos:column="28">(<argument><expr><name pos:line="50" pos:column="29">p<pos:position pos:line="50" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="32">s<pos:position pos:line="50" pos:column="33"/></name></expr></argument>)<pos:position pos:line="50" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">state_putc<pos:position pos:line="51" pos:column="15"/></name> <argument_list pos:line="51" pos:column="16">(<argument><expr><literal type="char" pos:line="51" pos:column="17">'\n'<pos:position pos:line="51" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="23">s<pos:position pos:line="51" pos:column="24"/></name></expr></argument>)<pos:position pos:line="51" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="26"/></expr_stmt>
    
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">rc<pos:position pos:line="53" pos:column="11"/></name></expr>)<pos:position pos:line="53" pos:column="12"/></condition><then pos:line="53" pos:column="12">
    <block pos:line="54" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="55" pos:column="7">mutt_error<pos:position pos:line="55" pos:column="17"/></name> <argument_list pos:line="55" pos:column="18">(<argument><expr><call><name pos:line="55" pos:column="19">_<pos:position pos:line="55" pos:column="20"/></name><argument_list pos:line="55" pos:column="20">(<argument><expr><literal type="string" pos:line="55" pos:column="21">"One or more parts of this message could not be displayed"<pos:position pos:line="55" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="82"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="56" pos:column="7">dprint<pos:position pos:line="56" pos:column="13"/></name> <argument_list pos:line="56" pos:column="14">(<argument><expr><literal type="number" pos:line="56" pos:column="15">1<pos:position pos:line="56" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="56" pos:column="18">(<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="19">debugfile<pos:position pos:line="56" pos:column="28"/></name><operator pos:line="56" pos:column="28">,<pos:position pos:line="56" pos:column="29"/></operator> <literal type="string" pos:line="56" pos:column="30">"Failed on attachment #%d, type %s/%s.\n"<pos:position pos:line="56" pos:column="71"/></literal><operator pos:line="56" pos:column="71">,<pos:position pos:line="56" pos:column="72"/></operator> <name pos:line="56" pos:column="73">count<pos:position pos:line="56" pos:column="78"/></name><operator pos:line="56" pos:column="78">,<pos:position pos:line="56" pos:column="79"/></operator> <call><name pos:line="56" pos:column="80">TYPE<pos:position pos:line="56" pos:column="84"/></name><argument_list pos:line="56" pos:column="84">(<argument><expr><name pos:line="56" pos:column="85">p<pos:position pos:line="56" pos:column="86"/></name></expr></argument>)<pos:position pos:line="56" pos:column="87"/></argument_list></call><operator pos:line="56" pos:column="87">,<pos:position pos:line="56" pos:column="88"/></operator> <call><name pos:line="56" pos:column="89">NONULL<pos:position pos:line="56" pos:column="95"/></name> <argument_list pos:line="56" pos:column="96">(<argument><expr><name><name pos:line="56" pos:column="97">p<pos:position pos:line="56" pos:column="98"/></name><operator pos:line="56" pos:column="98">-&gt;<pos:position pos:line="56" pos:column="103"/></operator><name pos:line="56" pos:column="100">subtype<pos:position pos:line="56" pos:column="107"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="108"/></argument_list></call><operator pos:line="56" pos:column="108">)<pos:position pos:line="56" pos:column="109"/></operator></expr></argument>)<pos:position pos:line="56" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="111"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>
    
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><operator pos:line="59" pos:column="9">(<pos:position pos:line="59" pos:column="10"/></operator><name><name pos:line="59" pos:column="10">s<pos:position pos:line="59" pos:column="11"/></name><operator pos:line="59" pos:column="11">-&gt;<pos:position pos:line="59" pos:column="16"/></operator><name pos:line="59" pos:column="13">flags<pos:position pos:line="59" pos:column="18"/></name></name> <operator pos:line="59" pos:column="19">&amp;<pos:position pos:line="59" pos:column="24"/></operator> <name pos:line="59" pos:column="21">MUTT_REPLYING<pos:position pos:line="59" pos:column="34"/></name><operator pos:line="59" pos:column="34">)<pos:position pos:line="59" pos:column="35"/></operator>
        <operator pos:line="60" pos:column="9">&amp;&amp;<pos:position pos:line="60" pos:column="19"/></operator> <operator pos:line="60" pos:column="12">(<pos:position pos:line="60" pos:column="13"/></operator><call><name pos:line="60" pos:column="13">option<pos:position pos:line="60" pos:column="19"/></name> <argument_list pos:line="60" pos:column="20">(<argument><expr><name pos:line="60" pos:column="21">OPTINCLUDEONLYFIRST<pos:position pos:line="60" pos:column="40"/></name></expr></argument>)<pos:position pos:line="60" pos:column="41"/></argument_list></call><operator pos:line="60" pos:column="41">)<pos:position pos:line="60" pos:column="42"/></operator> <operator pos:line="60" pos:column="43">&amp;&amp;<pos:position pos:line="60" pos:column="53"/></operator> <operator pos:line="60" pos:column="46">(<pos:position pos:line="60" pos:column="47"/></operator><name><name pos:line="60" pos:column="47">s<pos:position pos:line="60" pos:column="48"/></name><operator pos:line="60" pos:column="48">-&gt;<pos:position pos:line="60" pos:column="53"/></operator><name pos:line="60" pos:column="50">flags<pos:position pos:line="60" pos:column="55"/></name></name> <operator pos:line="60" pos:column="56">&amp;<pos:position pos:line="60" pos:column="61"/></operator> <name pos:line="60" pos:column="58">MUTT_FIRSTDONE<pos:position pos:line="60" pos:column="72"/></name><operator pos:line="60" pos:column="72">)<pos:position pos:line="60" pos:column="73"/></operator></expr>)<pos:position pos:line="60" pos:column="74"/></condition><then pos:line="60" pos:column="74">
      <block type="pseudo"><break pos:line="61" pos:column="7">break;<pos:position pos:line="61" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="62" pos:column="4"/></block></for>

  <if pos:line="64" pos:column="3">if <condition pos:line="64" pos:column="6">(<expr><name><name pos:line="64" pos:column="7">a<pos:position pos:line="64" pos:column="8"/></name><operator pos:line="64" pos:column="8">-&gt;<pos:position pos:line="64" pos:column="13"/></operator><name pos:line="64" pos:column="10">encoding<pos:position pos:line="64" pos:column="18"/></name></name> <operator pos:line="64" pos:column="19">==<pos:position pos:line="64" pos:column="21"/></operator> <name pos:line="64" pos:column="22">ENCBASE64<pos:position pos:line="64" pos:column="31"/></name> <operator pos:line="64" pos:column="32">||<pos:position pos:line="64" pos:column="34"/></operator> <name><name pos:line="64" pos:column="35">a<pos:position pos:line="64" pos:column="36"/></name><operator pos:line="64" pos:column="36">-&gt;<pos:position pos:line="64" pos:column="41"/></operator><name pos:line="64" pos:column="38">encoding<pos:position pos:line="64" pos:column="46"/></name></name> <operator pos:line="64" pos:column="47">==<pos:position pos:line="64" pos:column="49"/></operator> <name pos:line="64" pos:column="50">ENCQUOTEDPRINTABLE<pos:position pos:line="64" pos:column="68"/></name> <operator pos:line="64" pos:column="69">||<pos:position pos:line="64" pos:column="71"/></operator>
      <name><name pos:line="65" pos:column="7">a<pos:position pos:line="65" pos:column="8"/></name><operator pos:line="65" pos:column="8">-&gt;<pos:position pos:line="65" pos:column="13"/></operator><name pos:line="65" pos:column="10">encoding<pos:position pos:line="65" pos:column="18"/></name></name> <operator pos:line="65" pos:column="19">==<pos:position pos:line="65" pos:column="21"/></operator> <name pos:line="65" pos:column="22">ENCUUENCODED<pos:position pos:line="65" pos:column="34"/></name></expr>)<pos:position pos:line="65" pos:column="35"/></condition><then pos:line="65" pos:column="35">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="5">mutt_free_body<pos:position pos:line="66" pos:column="19"/></name> <argument_list pos:line="66" pos:column="20">(<argument><expr><operator pos:line="66" pos:column="21">&amp;<pos:position pos:line="66" pos:column="26"/></operator><name pos:line="66" pos:column="22">b<pos:position pos:line="66" pos:column="23"/></name></expr></argument>)<pos:position pos:line="66" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="25"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="68" pos:column="3">/* make failure of a single part non-fatal */</comment>
  <if pos:line="69" pos:column="3">if <condition pos:line="69" pos:column="6">(<expr><name pos:line="69" pos:column="7">rc<pos:position pos:line="69" pos:column="9"/></name> <operator pos:line="69" pos:column="10">&lt;<pos:position pos:line="69" pos:column="14"/></operator> <literal type="number" pos:line="69" pos:column="12">0<pos:position pos:line="69" pos:column="13"/></literal></expr>)<pos:position pos:line="69" pos:column="14"/></condition><then pos:line="69" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><name pos:line="70" pos:column="5">rc<pos:position pos:line="70" pos:column="7"/></name> <operator pos:line="70" pos:column="8">=<pos:position pos:line="70" pos:column="9"/></operator> <literal type="number" pos:line="70" pos:column="10">1<pos:position pos:line="70" pos:column="11"/></literal></expr>;<pos:position pos:line="70" pos:column="12"/></expr_stmt></block></then></if>
  <return pos:line="71" pos:column="3">return <expr><name pos:line="71" pos:column="10">rc<pos:position pos:line="71" pos:column="12"/></name></expr>;<pos:position pos:line="71" pos:column="13"/></return>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

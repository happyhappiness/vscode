<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_36_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">crypt_pgp_invoke_import<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">fname<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><call><name pos:line="3" pos:column="7">CRYPT_MOD_CALL_CHECK<pos:position pos:line="3" pos:column="27"/></name> <argument_list pos:line="3" pos:column="28">(<argument><expr><name pos:line="3" pos:column="29">PGP<pos:position pos:line="3" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="34">pgp_invoke_import<pos:position pos:line="3" pos:column="51"/></name></expr></argument>)<pos:position pos:line="3" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="53"/></condition><then pos:line="3" pos:column="53">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="4" pos:column="5">(<pos:position pos:line="4" pos:column="6"/></operator><call><name pos:line="4" pos:column="6">CRYPT_MOD_CALL<pos:position pos:line="4" pos:column="20"/></name> <argument_list pos:line="4" pos:column="21">(<argument><expr><name pos:line="4" pos:column="22">PGP<pos:position pos:line="4" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="27">pgp_invoke_import<pos:position pos:line="4" pos:column="44"/></name></expr></argument>)<pos:position pos:line="4" pos:column="45"/></argument_list></call><operator pos:line="4" pos:column="45">)<pos:position pos:line="4" pos:column="46"/></operator> <operator pos:line="4" pos:column="47">(<pos:position pos:line="4" pos:column="48"/></operator><name pos:line="4" pos:column="48">fname<pos:position pos:line="4" pos:column="53"/></name><operator pos:line="4" pos:column="53">)<pos:position pos:line="4" pos:column="54"/></operator></expr>;<pos:position pos:line="4" pos:column="55"/></expr_stmt></block></then></if>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

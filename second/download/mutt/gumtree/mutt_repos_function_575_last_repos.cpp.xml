<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_575_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">raw_socket_open<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">CONNECTION<pos:position pos:line="1" pos:column="32"/></name><modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type> <name pos:line="1" pos:column="34">conn<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">rc<pos:position pos:line="3" pos:column="9"/></name></decl>;<pos:position pos:line="3" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">fd<pos:position pos:line="4" pos:column="9"/></name></decl>;<pos:position pos:line="4" pos:column="10"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">host_idna<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">NULL<pos:position pos:line="6" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
  
<cpp:ifdef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifdef<pos:position pos:line="8" pos:column="7"/></cpp:directive> <name pos:line="8" pos:column="8">HAVE_GETADDRINFO<pos:position pos:line="8" pos:column="24"/></name></cpp:ifdef>
<comment type="block" pos:line="9" pos:column="1">/* --- IPv4/6 --- */</comment>

  <comment type="block" pos:line="11" pos:column="3">/* "65536\0" */</comment>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">char<pos:position pos:line="12" pos:column="7"/></name></type> <name><name pos:line="12" pos:column="8">port<pos:position pos:line="12" pos:column="12"/></name><index pos:line="12" pos:column="12">[<expr><literal type="number" pos:line="12" pos:column="13">6<pos:position pos:line="12" pos:column="14"/></literal></expr>]<pos:position pos:line="12" pos:column="15"/></index></name></decl>;<pos:position pos:line="12" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="13" pos:column="3">struct<pos:position pos:line="13" pos:column="9"/></name> <name pos:line="13" pos:column="10">addrinfo<pos:position pos:line="13" pos:column="18"/></name></name></type> <name pos:line="13" pos:column="19">hints<pos:position pos:line="13" pos:column="24"/></name></decl>;<pos:position pos:line="13" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="14" pos:column="3">struct<pos:position pos:line="14" pos:column="9"/></name> <name pos:line="14" pos:column="10">addrinfo<pos:position pos:line="14" pos:column="18"/></name></name><modifier pos:line="14" pos:column="18">*<pos:position pos:line="14" pos:column="19"/></modifier></type> <name pos:line="14" pos:column="20">res<pos:position pos:line="14" pos:column="23"/></name></decl>;<pos:position pos:line="14" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="15" pos:column="3">struct<pos:position pos:line="15" pos:column="9"/></name> <name pos:line="15" pos:column="10">addrinfo<pos:position pos:line="15" pos:column="18"/></name></name><modifier pos:line="15" pos:column="18">*<pos:position pos:line="15" pos:column="19"/></modifier></type> <name pos:line="15" pos:column="20">cur<pos:position pos:line="15" pos:column="23"/></name></decl>;<pos:position pos:line="15" pos:column="24"/></decl_stmt>

  <comment type="block" pos:line="17" pos:column="3">/* we accept v4 or v6 STREAM sockets */</comment>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">memset<pos:position pos:line="18" pos:column="9"/></name> <argument_list pos:line="18" pos:column="10">(<argument><expr><operator pos:line="18" pos:column="11">&amp;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="12">hints<pos:position pos:line="18" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="19">0<pos:position pos:line="18" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="22">sizeof <argument_list pos:line="18" pos:column="29">(<argument><expr><name pos:line="18" pos:column="30">hints<pos:position pos:line="18" pos:column="35"/></name></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><call><name pos:line="20" pos:column="7">option<pos:position pos:line="20" pos:column="13"/></name> <argument_list pos:line="20" pos:column="14">(<argument><expr><name pos:line="20" pos:column="15">OPTUSEIPV6<pos:position pos:line="20" pos:column="25"/></name></expr></argument>)<pos:position pos:line="20" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="27"/></condition><then pos:line="20" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="5">hints<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">.<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="11">ai_family<pos:position pos:line="21" pos:column="20"/></name></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <name pos:line="21" pos:column="23">AF_UNSPEC<pos:position pos:line="21" pos:column="32"/></name></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt></block></then>
  <else pos:line="22" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="5">hints<pos:position pos:line="23" pos:column="10"/></name><operator pos:line="23" pos:column="10">.<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="11">ai_family<pos:position pos:line="23" pos:column="20"/></name></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <name pos:line="23" pos:column="23">AF_INET<pos:position pos:line="23" pos:column="30"/></name></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt></block></else></if>

  <expr_stmt><expr><name><name pos:line="25" pos:column="3">hints<pos:position pos:line="25" pos:column="8"/></name><operator pos:line="25" pos:column="8">.<pos:position pos:line="25" pos:column="9"/></operator><name pos:line="25" pos:column="9">ai_socktype<pos:position pos:line="25" pos:column="20"/></name></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <name pos:line="25" pos:column="23">SOCK_STREAM<pos:position pos:line="25" pos:column="34"/></name></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">snprintf<pos:position pos:line="27" pos:column="11"/></name> <argument_list pos:line="27" pos:column="12">(<argument><expr><name pos:line="27" pos:column="13">port<pos:position pos:line="27" pos:column="17"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="19">sizeof <argument_list pos:line="27" pos:column="26">(<argument><expr><name pos:line="27" pos:column="27">port<pos:position pos:line="27" pos:column="31"/></name></expr></argument>)<pos:position pos:line="27" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="34">"%d"<pos:position pos:line="27" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="40">conn<pos:position pos:line="27" pos:column="44"/></name><operator pos:line="27" pos:column="44">-&gt;<pos:position pos:line="27" pos:column="49"/></operator><name pos:line="27" pos:column="46">account<pos:position pos:line="27" pos:column="53"/></name><operator pos:line="27" pos:column="53">.<pos:position pos:line="27" pos:column="54"/></operator><name pos:line="27" pos:column="54">port<pos:position pos:line="27" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="60"/></expr_stmt>
  
<cpp:ifdef pos:line="29" pos:column="1"># <cpp:directive pos:line="29" pos:column="3">ifdef<pos:position pos:line="29" pos:column="8"/></cpp:directive> <name pos:line="29" pos:column="9">HAVE_LIBIDN<pos:position pos:line="29" pos:column="20"/></name></cpp:ifdef>
  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><call><name pos:line="30" pos:column="7">idna_to_ascii_lz<pos:position pos:line="30" pos:column="23"/></name> <argument_list pos:line="30" pos:column="24">(<argument><expr><name><name pos:line="30" pos:column="25">conn<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">-&gt;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="31">account<pos:position pos:line="30" pos:column="38"/></name><operator pos:line="30" pos:column="38">.<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="39">host<pos:position pos:line="30" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="45">&amp;<pos:position pos:line="30" pos:column="50"/></operator><name pos:line="30" pos:column="46">host_idna<pos:position pos:line="30" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="57">1<pos:position pos:line="30" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="59"/></argument_list></call> <operator pos:line="30" pos:column="60">!=<pos:position pos:line="30" pos:column="62"/></operator> <name pos:line="30" pos:column="63">IDNA_SUCCESS<pos:position pos:line="30" pos:column="75"/></name></expr>)<pos:position pos:line="30" pos:column="76"/></condition><then pos:line="30" pos:column="76">
  <block pos:line="31" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">mutt_error<pos:position pos:line="32" pos:column="15"/></name> <argument_list pos:line="32" pos:column="16">(<argument><expr><call><name pos:line="32" pos:column="17">_<pos:position pos:line="32" pos:column="18"/></name><argument_list pos:line="32" pos:column="18">(<argument><expr><literal type="string" pos:line="32" pos:column="19">"Bad IDN \"%s\"."<pos:position pos:line="32" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="37"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="39">conn<pos:position pos:line="32" pos:column="43"/></name><operator pos:line="32" pos:column="43">-&gt;<pos:position pos:line="32" pos:column="48"/></operator><name pos:line="32" pos:column="45">account<pos:position pos:line="32" pos:column="52"/></name><operator pos:line="32" pos:column="52">.<pos:position pos:line="32" pos:column="53"/></operator><name pos:line="32" pos:column="53">host<pos:position pos:line="32" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="59"/></expr_stmt>
    <return pos:line="33" pos:column="5">return <expr><operator pos:line="33" pos:column="12">-<pos:position pos:line="33" pos:column="13"/></operator><literal type="number" pos:line="33" pos:column="13">1<pos:position pos:line="33" pos:column="14"/></literal></expr>;<pos:position pos:line="33" pos:column="15"/></return>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>
<cpp:else pos:line="35" pos:column="1"># <cpp:directive pos:line="35" pos:column="3">else<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:else>
  <expr_stmt><expr><name pos:line="36" pos:column="3">host_idna<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">=<pos:position pos:line="36" pos:column="14"/></operator> <name><name pos:line="36" pos:column="15">conn<pos:position pos:line="36" pos:column="19"/></name><operator pos:line="36" pos:column="19">-&gt;<pos:position pos:line="36" pos:column="24"/></operator><name pos:line="36" pos:column="21">account<pos:position pos:line="36" pos:column="28"/></name><operator pos:line="36" pos:column="28">.<pos:position pos:line="36" pos:column="29"/></operator><name pos:line="36" pos:column="29">host<pos:position pos:line="36" pos:column="33"/></name></name></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt>
<cpp:endif pos:line="37" pos:column="1"># <cpp:directive pos:line="37" pos:column="3">endif<pos:position pos:line="37" pos:column="8"/></cpp:directive></cpp:endif>

  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><operator pos:line="39" pos:column="7">!<pos:position pos:line="39" pos:column="8"/></operator><call><name pos:line="39" pos:column="8">option<pos:position pos:line="39" pos:column="14"/></name><argument_list pos:line="39" pos:column="14">(<argument><expr><name pos:line="39" pos:column="15">OPTNOCURSES<pos:position pos:line="39" pos:column="26"/></name></expr></argument>)<pos:position pos:line="39" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="28"/></condition><then pos:line="39" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="5">mutt_message<pos:position pos:line="40" pos:column="17"/></name> <argument_list pos:line="40" pos:column="18">(<argument><expr><call><name pos:line="40" pos:column="19">_<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">(<argument><expr><literal type="string" pos:line="40" pos:column="21">"Looking up %s..."<pos:position pos:line="40" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="42">conn<pos:position pos:line="40" pos:column="46"/></name><operator pos:line="40" pos:column="46">-&gt;<pos:position pos:line="40" pos:column="51"/></operator><name pos:line="40" pos:column="48">account<pos:position pos:line="40" pos:column="55"/></name><operator pos:line="40" pos:column="55">.<pos:position pos:line="40" pos:column="56"/></operator><name pos:line="40" pos:column="56">host<pos:position pos:line="40" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="62"/></expr_stmt></block></then></if>
  
  <expr_stmt><expr><name pos:line="42" pos:column="3">rc<pos:position pos:line="42" pos:column="5"/></name> <operator pos:line="42" pos:column="6">=<pos:position pos:line="42" pos:column="7"/></operator> <call><name pos:line="42" pos:column="8">getaddrinfo<pos:position pos:line="42" pos:column="19"/></name> <argument_list pos:line="42" pos:column="20">(<argument><expr><name pos:line="42" pos:column="21">host_idna<pos:position pos:line="42" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="32">port<pos:position pos:line="42" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="38">&amp;<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="39">hints<pos:position pos:line="42" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="46">&amp;<pos:position pos:line="42" pos:column="51"/></operator><name pos:line="42" pos:column="47">res<pos:position pos:line="42" pos:column="50"/></name></expr></argument>)<pos:position pos:line="42" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="52"/></expr_stmt>

<cpp:ifdef pos:line="44" pos:column="1"># <cpp:directive pos:line="44" pos:column="3">ifdef<pos:position pos:line="44" pos:column="8"/></cpp:directive> <name pos:line="44" pos:column="9">HAVE_LIBIDN<pos:position pos:line="44" pos:column="20"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">FREE<pos:position pos:line="45" pos:column="7"/></name> <argument_list pos:line="45" pos:column="8">(<argument><expr><operator pos:line="45" pos:column="9">&amp;<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="10">host_idna<pos:position pos:line="45" pos:column="19"/></name></expr></argument>)<pos:position pos:line="45" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="21"/></expr_stmt>
<cpp:endif pos:line="46" pos:column="1"># <cpp:directive pos:line="46" pos:column="3">endif<pos:position pos:line="46" pos:column="8"/></cpp:directive></cpp:endif>

  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><name pos:line="48" pos:column="7">rc<pos:position pos:line="48" pos:column="9"/></name></expr>)<pos:position pos:line="48" pos:column="10"/></condition><then pos:line="48" pos:column="10">
  <block pos:line="49" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">mutt_error<pos:position pos:line="50" pos:column="15"/></name> <argument_list pos:line="50" pos:column="16">(<argument><expr><call><name pos:line="50" pos:column="17">_<pos:position pos:line="50" pos:column="18"/></name><argument_list pos:line="50" pos:column="18">(<argument><expr><literal type="string" pos:line="50" pos:column="19">"Could not find the host \"%s\""<pos:position pos:line="50" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="54">conn<pos:position pos:line="50" pos:column="58"/></name><operator pos:line="50" pos:column="58">-&gt;<pos:position pos:line="50" pos:column="63"/></operator><name pos:line="50" pos:column="60">account<pos:position pos:line="50" pos:column="67"/></name><operator pos:line="50" pos:column="67">.<pos:position pos:line="50" pos:column="68"/></operator><name pos:line="50" pos:column="68">host<pos:position pos:line="50" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">mutt_sleep<pos:position pos:line="51" pos:column="15"/></name> <argument_list pos:line="51" pos:column="16">(<argument><expr><literal type="number" pos:line="51" pos:column="17">2<pos:position pos:line="51" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="20"/></expr_stmt>
    <return pos:line="52" pos:column="5">return <expr><operator pos:line="52" pos:column="12">-<pos:position pos:line="52" pos:column="13"/></operator><literal type="number" pos:line="52" pos:column="13">1<pos:position pos:line="52" pos:column="14"/></literal></expr>;<pos:position pos:line="52" pos:column="15"/></return>
  }<pos:position pos:line="53" pos:column="4"/></block></then></if>

  <if pos:line="55" pos:column="3">if <condition pos:line="55" pos:column="6">(<expr><operator pos:line="55" pos:column="7">!<pos:position pos:line="55" pos:column="8"/></operator><call><name pos:line="55" pos:column="8">option<pos:position pos:line="55" pos:column="14"/></name><argument_list pos:line="55" pos:column="14">(<argument><expr><name pos:line="55" pos:column="15">OPTNOCURSES<pos:position pos:line="55" pos:column="26"/></name></expr></argument>)<pos:position pos:line="55" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="28"/></condition><then pos:line="55" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="5">mutt_message<pos:position pos:line="56" pos:column="17"/></name> <argument_list pos:line="56" pos:column="18">(<argument><expr><call><name pos:line="56" pos:column="19">_<pos:position pos:line="56" pos:column="20"/></name><argument_list pos:line="56" pos:column="20">(<argument><expr><literal type="string" pos:line="56" pos:column="21">"Connecting to %s..."<pos:position pos:line="56" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="45">conn<pos:position pos:line="56" pos:column="49"/></name><operator pos:line="56" pos:column="49">-&gt;<pos:position pos:line="56" pos:column="54"/></operator><name pos:line="56" pos:column="51">account<pos:position pos:line="56" pos:column="58"/></name><operator pos:line="56" pos:column="58">.<pos:position pos:line="56" pos:column="59"/></operator><name pos:line="56" pos:column="59">host<pos:position pos:line="56" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="65"/></expr_stmt></block></then></if> 

  <expr_stmt><expr><name pos:line="58" pos:column="3">rc<pos:position pos:line="58" pos:column="5"/></name> <operator pos:line="58" pos:column="6">=<pos:position pos:line="58" pos:column="7"/></operator> <operator pos:line="58" pos:column="8">-<pos:position pos:line="58" pos:column="9"/></operator><literal type="number" pos:line="58" pos:column="9">1<pos:position pos:line="58" pos:column="10"/></literal></expr>;<pos:position pos:line="58" pos:column="11"/></expr_stmt>
  <for pos:line="59" pos:column="3">for <control pos:line="59" pos:column="7">(<init><expr><name pos:line="59" pos:column="8">cur<pos:position pos:line="59" pos:column="11"/></name> <operator pos:line="59" pos:column="12">=<pos:position pos:line="59" pos:column="13"/></operator> <name pos:line="59" pos:column="14">res<pos:position pos:line="59" pos:column="17"/></name></expr>;<pos:position pos:line="59" pos:column="18"/></init> <condition><expr><name pos:line="59" pos:column="19">cur<pos:position pos:line="59" pos:column="22"/></name> <operator pos:line="59" pos:column="23">!=<pos:position pos:line="59" pos:column="25"/></operator> <name pos:line="59" pos:column="26">NULL<pos:position pos:line="59" pos:column="30"/></name></expr>;<pos:position pos:line="59" pos:column="31"/></condition> <incr><expr><name pos:line="59" pos:column="32">cur<pos:position pos:line="59" pos:column="35"/></name> <operator pos:line="59" pos:column="36">=<pos:position pos:line="59" pos:column="37"/></operator> <name><name pos:line="59" pos:column="38">cur<pos:position pos:line="59" pos:column="41"/></name><operator pos:line="59" pos:column="41">-&gt;<pos:position pos:line="59" pos:column="46"/></operator><name pos:line="59" pos:column="43">ai_next<pos:position pos:line="59" pos:column="50"/></name></name></expr></incr>)<pos:position pos:line="59" pos:column="51"/></control>
  <block pos:line="60" pos:column="3">{
    <expr_stmt><expr><name pos:line="61" pos:column="5">fd<pos:position pos:line="61" pos:column="7"/></name> <operator pos:line="61" pos:column="8">=<pos:position pos:line="61" pos:column="9"/></operator> <call><name pos:line="61" pos:column="10">socket<pos:position pos:line="61" pos:column="16"/></name> <argument_list pos:line="61" pos:column="17">(<argument><expr><name><name pos:line="61" pos:column="18">cur<pos:position pos:line="61" pos:column="21"/></name><operator pos:line="61" pos:column="21">-&gt;<pos:position pos:line="61" pos:column="26"/></operator><name pos:line="61" pos:column="23">ai_family<pos:position pos:line="61" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="34">cur<pos:position pos:line="61" pos:column="37"/></name><operator pos:line="61" pos:column="37">-&gt;<pos:position pos:line="61" pos:column="42"/></operator><name pos:line="61" pos:column="39">ai_socktype<pos:position pos:line="61" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="52">cur<pos:position pos:line="61" pos:column="55"/></name><operator pos:line="61" pos:column="55">-&gt;<pos:position pos:line="61" pos:column="60"/></operator><name pos:line="61" pos:column="57">ai_protocol<pos:position pos:line="61" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="70"/></expr_stmt>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name pos:line="62" pos:column="9">fd<pos:position pos:line="62" pos:column="11"/></name> <operator pos:line="62" pos:column="12">&gt;=<pos:position pos:line="62" pos:column="17"/></operator> <literal type="number" pos:line="62" pos:column="15">0<pos:position pos:line="62" pos:column="16"/></literal></expr>)<pos:position pos:line="62" pos:column="17"/></condition><then pos:line="62" pos:column="17">
    <block pos:line="63" pos:column="5">{
      <if pos:line="64" pos:column="7">if <condition pos:line="64" pos:column="10">(<expr><operator pos:line="64" pos:column="11">(<pos:position pos:line="64" pos:column="12"/></operator><name pos:line="64" pos:column="12">rc<pos:position pos:line="64" pos:column="14"/></name> <operator pos:line="64" pos:column="15">=<pos:position pos:line="64" pos:column="16"/></operator> <call><name pos:line="64" pos:column="17">socket_connect<pos:position pos:line="64" pos:column="31"/></name> <argument_list pos:line="64" pos:column="32">(<argument><expr><name pos:line="64" pos:column="33">fd<pos:position pos:line="64" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="37">cur<pos:position pos:line="64" pos:column="40"/></name><operator pos:line="64" pos:column="40">-&gt;<pos:position pos:line="64" pos:column="45"/></operator><name pos:line="64" pos:column="42">ai_addr<pos:position pos:line="64" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="50"/></argument_list></call><operator pos:line="64" pos:column="50">)<pos:position pos:line="64" pos:column="51"/></operator> <operator pos:line="64" pos:column="52">==<pos:position pos:line="64" pos:column="54"/></operator> <literal type="number" pos:line="64" pos:column="55">0<pos:position pos:line="64" pos:column="56"/></literal></expr>)<pos:position pos:line="64" pos:column="57"/></condition><then pos:line="64" pos:column="57">
      <block pos:line="65" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="66" pos:column="9">fcntl<pos:position pos:line="66" pos:column="14"/></name> <argument_list pos:line="66" pos:column="15">(<argument><expr><name pos:line="66" pos:column="16">fd<pos:position pos:line="66" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="20">F_SETFD<pos:position pos:line="66" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="29">FD_CLOEXEC<pos:position pos:line="66" pos:column="39"/></name></expr></argument>)<pos:position pos:line="66" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="67" pos:column="9">conn<pos:position pos:line="67" pos:column="13"/></name><operator pos:line="67" pos:column="13">-&gt;<pos:position pos:line="67" pos:column="18"/></operator><name pos:line="67" pos:column="15">fd<pos:position pos:line="67" pos:column="17"/></name></name> <operator pos:line="67" pos:column="18">=<pos:position pos:line="67" pos:column="19"/></operator> <name pos:line="67" pos:column="20">fd<pos:position pos:line="67" pos:column="22"/></name></expr>;<pos:position pos:line="67" pos:column="23"/></expr_stmt>
	<break pos:line="68" pos:column="9">break;<pos:position pos:line="68" pos:column="15"/></break>
      }<pos:position pos:line="69" pos:column="8"/></block></then>
      <else pos:line="70" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="9">close<pos:position pos:line="71" pos:column="14"/></name> <argument_list pos:line="71" pos:column="15">(<argument><expr><name pos:line="71" pos:column="16">fd<pos:position pos:line="71" pos:column="18"/></name></expr></argument>)<pos:position pos:line="71" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="20"/></expr_stmt></block></else></if>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if>
  }<pos:position pos:line="73" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="75" pos:column="3">freeaddrinfo<pos:position pos:line="75" pos:column="15"/></name> <argument_list pos:line="75" pos:column="16">(<argument><expr><name pos:line="75" pos:column="17">res<pos:position pos:line="75" pos:column="20"/></name></expr></argument>)<pos:position pos:line="75" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="22"/></expr_stmt>

<cpp:else pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">else<pos:position pos:line="77" pos:column="6"/></cpp:directive></cpp:else>
  <comment type="block" pos:line="78" pos:column="3">/* --- IPv4 only --- */</comment>

  <decl_stmt><decl><type><name><name pos:line="80" pos:column="3">struct<pos:position pos:line="80" pos:column="9"/></name> <name pos:line="80" pos:column="10">sockaddr_in<pos:position pos:line="80" pos:column="21"/></name></name></type> <name pos:line="80" pos:column="22">sin<pos:position pos:line="80" pos:column="25"/></name></decl>;<pos:position pos:line="80" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="81" pos:column="3">struct<pos:position pos:line="81" pos:column="9"/></name> <name pos:line="81" pos:column="10">hostent<pos:position pos:line="81" pos:column="17"/></name></name><modifier pos:line="81" pos:column="17">*<pos:position pos:line="81" pos:column="18"/></modifier></type> <name pos:line="81" pos:column="19">he<pos:position pos:line="81" pos:column="21"/></name></decl>;<pos:position pos:line="81" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="82" pos:column="3">int<pos:position pos:line="82" pos:column="6"/></name></type> <name pos:line="82" pos:column="7">i<pos:position pos:line="82" pos:column="8"/></name></decl>;<pos:position pos:line="82" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="84" pos:column="3">memset<pos:position pos:line="84" pos:column="9"/></name> <argument_list pos:line="84" pos:column="10">(<argument><expr><operator pos:line="84" pos:column="11">&amp;<pos:position pos:line="84" pos:column="16"/></operator><name pos:line="84" pos:column="12">sin<pos:position pos:line="84" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="84" pos:column="17">0<pos:position pos:line="84" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="84" pos:column="20">sizeof <argument_list pos:line="84" pos:column="27">(<argument><expr><name pos:line="84" pos:column="28">sin<pos:position pos:line="84" pos:column="31"/></name></expr></argument>)<pos:position pos:line="84" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="84" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="85" pos:column="3">sin<pos:position pos:line="85" pos:column="6"/></name><operator pos:line="85" pos:column="6">.<pos:position pos:line="85" pos:column="7"/></operator><name pos:line="85" pos:column="7">sin_port<pos:position pos:line="85" pos:column="15"/></name></name> <operator pos:line="85" pos:column="16">=<pos:position pos:line="85" pos:column="17"/></operator> <call><name pos:line="85" pos:column="18">htons<pos:position pos:line="85" pos:column="23"/></name> <argument_list pos:line="85" pos:column="24">(<argument><expr><name><name pos:line="85" pos:column="25">conn<pos:position pos:line="85" pos:column="29"/></name><operator pos:line="85" pos:column="29">-&gt;<pos:position pos:line="85" pos:column="34"/></operator><name pos:line="85" pos:column="31">account<pos:position pos:line="85" pos:column="38"/></name><operator pos:line="85" pos:column="38">.<pos:position pos:line="85" pos:column="39"/></operator><name pos:line="85" pos:column="39">port<pos:position pos:line="85" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="86" pos:column="3">sin<pos:position pos:line="86" pos:column="6"/></name><operator pos:line="86" pos:column="6">.<pos:position pos:line="86" pos:column="7"/></operator><name pos:line="86" pos:column="7">sin_family<pos:position pos:line="86" pos:column="17"/></name></name> <operator pos:line="86" pos:column="18">=<pos:position pos:line="86" pos:column="19"/></operator> <name pos:line="86" pos:column="20">AF_INET<pos:position pos:line="86" pos:column="27"/></name></expr>;<pos:position pos:line="86" pos:column="28"/></expr_stmt>

<cpp:ifdef pos:line="88" pos:column="1"># <cpp:directive pos:line="88" pos:column="3">ifdef<pos:position pos:line="88" pos:column="8"/></cpp:directive> <name pos:line="88" pos:column="9">HAVE_LIBIDN<pos:position pos:line="88" pos:column="20"/></name></cpp:ifdef>
  <if pos:line="89" pos:column="3">if <condition pos:line="89" pos:column="6">(<expr><call><name pos:line="89" pos:column="7">idna_to_ascii_lz<pos:position pos:line="89" pos:column="23"/></name> <argument_list pos:line="89" pos:column="24">(<argument><expr><name><name pos:line="89" pos:column="25">conn<pos:position pos:line="89" pos:column="29"/></name><operator pos:line="89" pos:column="29">-&gt;<pos:position pos:line="89" pos:column="34"/></operator><name pos:line="89" pos:column="31">account<pos:position pos:line="89" pos:column="38"/></name><operator pos:line="89" pos:column="38">.<pos:position pos:line="89" pos:column="39"/></operator><name pos:line="89" pos:column="39">host<pos:position pos:line="89" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="89" pos:column="45">&amp;<pos:position pos:line="89" pos:column="50"/></operator><name pos:line="89" pos:column="46">host_idna<pos:position pos:line="89" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="57">1<pos:position pos:line="89" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="59"/></argument_list></call> <operator pos:line="89" pos:column="60">!=<pos:position pos:line="89" pos:column="62"/></operator> <name pos:line="89" pos:column="63">IDNA_SUCCESS<pos:position pos:line="89" pos:column="75"/></name></expr>)<pos:position pos:line="89" pos:column="76"/></condition><then pos:line="89" pos:column="76">
  <block pos:line="90" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">mutt_error<pos:position pos:line="91" pos:column="15"/></name> <argument_list pos:line="91" pos:column="16">(<argument><expr><call><name pos:line="91" pos:column="17">_<pos:position pos:line="91" pos:column="18"/></name><argument_list pos:line="91" pos:column="18">(<argument><expr><literal type="string" pos:line="91" pos:column="19">"Bad IDN \"%s\"."<pos:position pos:line="91" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="37"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="39">conn<pos:position pos:line="91" pos:column="43"/></name><operator pos:line="91" pos:column="43">-&gt;<pos:position pos:line="91" pos:column="48"/></operator><name pos:line="91" pos:column="45">account<pos:position pos:line="91" pos:column="52"/></name><operator pos:line="91" pos:column="52">.<pos:position pos:line="91" pos:column="53"/></operator><name pos:line="91" pos:column="53">host<pos:position pos:line="91" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="59"/></expr_stmt>
    <return pos:line="92" pos:column="5">return <expr><operator pos:line="92" pos:column="12">-<pos:position pos:line="92" pos:column="13"/></operator><literal type="number" pos:line="92" pos:column="13">1<pos:position pos:line="92" pos:column="14"/></literal></expr>;<pos:position pos:line="92" pos:column="15"/></return>
  }<pos:position pos:line="93" pos:column="4"/></block></then></if>
<cpp:else pos:line="94" pos:column="1"># <cpp:directive pos:line="94" pos:column="3">else<pos:position pos:line="94" pos:column="7"/></cpp:directive></cpp:else>
  <expr_stmt><expr><name pos:line="95" pos:column="3">host_idna<pos:position pos:line="95" pos:column="12"/></name> <operator pos:line="95" pos:column="13">=<pos:position pos:line="95" pos:column="14"/></operator> <name><name pos:line="95" pos:column="15">conn<pos:position pos:line="95" pos:column="19"/></name><operator pos:line="95" pos:column="19">-&gt;<pos:position pos:line="95" pos:column="24"/></operator><name pos:line="95" pos:column="21">account<pos:position pos:line="95" pos:column="28"/></name><operator pos:line="95" pos:column="28">.<pos:position pos:line="95" pos:column="29"/></operator><name pos:line="95" pos:column="29">host<pos:position pos:line="95" pos:column="33"/></name></name></expr>;<pos:position pos:line="95" pos:column="34"/></expr_stmt>
<cpp:endif pos:line="96" pos:column="1"># <cpp:directive pos:line="96" pos:column="3">endif<pos:position pos:line="96" pos:column="8"/></cpp:directive></cpp:endif>

  <if pos:line="98" pos:column="3">if <condition pos:line="98" pos:column="6">(<expr><operator pos:line="98" pos:column="7">!<pos:position pos:line="98" pos:column="8"/></operator><call><name pos:line="98" pos:column="8">option<pos:position pos:line="98" pos:column="14"/></name><argument_list pos:line="98" pos:column="14">(<argument><expr><name pos:line="98" pos:column="15">OPTNOCURSES<pos:position pos:line="98" pos:column="26"/></name></expr></argument>)<pos:position pos:line="98" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="28"/></condition><then pos:line="98" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="99" pos:column="5">mutt_message<pos:position pos:line="99" pos:column="17"/></name> <argument_list pos:line="99" pos:column="18">(<argument><expr><call><name pos:line="99" pos:column="19">_<pos:position pos:line="99" pos:column="20"/></name><argument_list pos:line="99" pos:column="20">(<argument><expr><literal type="string" pos:line="99" pos:column="21">"Looking up %s..."<pos:position pos:line="99" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="42">conn<pos:position pos:line="99" pos:column="46"/></name><operator pos:line="99" pos:column="46">-&gt;<pos:position pos:line="99" pos:column="51"/></operator><name pos:line="99" pos:column="48">account<pos:position pos:line="99" pos:column="55"/></name><operator pos:line="99" pos:column="55">.<pos:position pos:line="99" pos:column="56"/></operator><name pos:line="99" pos:column="56">host<pos:position pos:line="99" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="62"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="101" pos:column="3">he<pos:position pos:line="101" pos:column="5"/></name> <operator pos:line="101" pos:column="6">=<pos:position pos:line="101" pos:column="7"/></operator> <call><name pos:line="101" pos:column="8">gethostbyname<pos:position pos:line="101" pos:column="21"/></name> <argument_list pos:line="101" pos:column="22">(<argument><expr><name pos:line="101" pos:column="23">host_idna<pos:position pos:line="101" pos:column="32"/></name></expr></argument>)<pos:position pos:line="101" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="34"/></expr_stmt>

<cpp:ifdef pos:line="103" pos:column="1"># <cpp:directive pos:line="103" pos:column="3">ifdef<pos:position pos:line="103" pos:column="8"/></cpp:directive> <name pos:line="103" pos:column="9">HAVE_LIBIDN<pos:position pos:line="103" pos:column="20"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="104" pos:column="5">FREE<pos:position pos:line="104" pos:column="9"/></name> <argument_list pos:line="104" pos:column="10">(<argument><expr><operator pos:line="104" pos:column="11">&amp;<pos:position pos:line="104" pos:column="16"/></operator><name pos:line="104" pos:column="12">host_idna<pos:position pos:line="104" pos:column="21"/></name></expr></argument>)<pos:position pos:line="104" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="23"/></expr_stmt>
<cpp:endif pos:line="105" pos:column="1"># <cpp:directive pos:line="105" pos:column="3">endif<pos:position pos:line="105" pos:column="8"/></cpp:directive></cpp:endif>

  <if pos:line="107" pos:column="3">if <condition pos:line="107" pos:column="6">(<expr><operator pos:line="107" pos:column="7">!<pos:position pos:line="107" pos:column="8"/></operator> <name pos:line="107" pos:column="9">he<pos:position pos:line="107" pos:column="11"/></name></expr>)<pos:position pos:line="107" pos:column="12"/></condition><then pos:line="107" pos:column="12"> <block pos:line="107" pos:column="13">{
    <expr_stmt><expr><call><name pos:line="108" pos:column="5">mutt_error<pos:position pos:line="108" pos:column="15"/></name> <argument_list pos:line="108" pos:column="16">(<argument><expr><call><name pos:line="108" pos:column="17">_<pos:position pos:line="108" pos:column="18"/></name><argument_list pos:line="108" pos:column="18">(<argument><expr><literal type="string" pos:line="108" pos:column="19">"Could not find the host \"%s\""<pos:position pos:line="108" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="54">conn<pos:position pos:line="108" pos:column="58"/></name><operator pos:line="108" pos:column="58">-&gt;<pos:position pos:line="108" pos:column="63"/></operator><name pos:line="108" pos:column="60">account<pos:position pos:line="108" pos:column="67"/></name><operator pos:line="108" pos:column="67">.<pos:position pos:line="108" pos:column="68"/></operator><name pos:line="108" pos:column="68">host<pos:position pos:line="108" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="74"/></expr_stmt>
	
    <return pos:line="110" pos:column="5">return <expr><operator pos:line="110" pos:column="12">-<pos:position pos:line="110" pos:column="13"/></operator><literal type="number" pos:line="110" pos:column="13">1<pos:position pos:line="110" pos:column="14"/></literal></expr>;<pos:position pos:line="110" pos:column="15"/></return>
  }<pos:position pos:line="111" pos:column="4"/></block></then></if>

  <if pos:line="113" pos:column="3">if <condition pos:line="113" pos:column="6">(<expr><operator pos:line="113" pos:column="7">!<pos:position pos:line="113" pos:column="8"/></operator><call><name pos:line="113" pos:column="8">option<pos:position pos:line="113" pos:column="14"/></name><argument_list pos:line="113" pos:column="14">(<argument><expr><name pos:line="113" pos:column="15">OPTNOCURSES<pos:position pos:line="113" pos:column="26"/></name></expr></argument>)<pos:position pos:line="113" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="113" pos:column="28"/></condition><then pos:line="113" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="114" pos:column="5">mutt_message<pos:position pos:line="114" pos:column="17"/></name> <argument_list pos:line="114" pos:column="18">(<argument><expr><call><name pos:line="114" pos:column="19">_<pos:position pos:line="114" pos:column="20"/></name><argument_list pos:line="114" pos:column="20">(<argument><expr><literal type="string" pos:line="114" pos:column="21">"Connecting to %s..."<pos:position pos:line="114" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="45">conn<pos:position pos:line="114" pos:column="49"/></name><operator pos:line="114" pos:column="49">-&gt;<pos:position pos:line="114" pos:column="54"/></operator><name pos:line="114" pos:column="51">account<pos:position pos:line="114" pos:column="58"/></name><operator pos:line="114" pos:column="58">.<pos:position pos:line="114" pos:column="59"/></operator><name pos:line="114" pos:column="59">host<pos:position pos:line="114" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="114" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="65"/></expr_stmt></block></then></if> 

  <expr_stmt><expr><name pos:line="116" pos:column="3">rc<pos:position pos:line="116" pos:column="5"/></name> <operator pos:line="116" pos:column="6">=<pos:position pos:line="116" pos:column="7"/></operator> <operator pos:line="116" pos:column="8">-<pos:position pos:line="116" pos:column="9"/></operator><literal type="number" pos:line="116" pos:column="9">1<pos:position pos:line="116" pos:column="10"/></literal></expr>;<pos:position pos:line="116" pos:column="11"/></expr_stmt>
  <for pos:line="117" pos:column="3">for <control pos:line="117" pos:column="7">(<init><expr><name pos:line="117" pos:column="8">i<pos:position pos:line="117" pos:column="9"/></name> <operator pos:line="117" pos:column="10">=<pos:position pos:line="117" pos:column="11"/></operator> <literal type="number" pos:line="117" pos:column="12">0<pos:position pos:line="117" pos:column="13"/></literal></expr>;<pos:position pos:line="117" pos:column="14"/></init> <condition><expr><name><name pos:line="117" pos:column="15">he<pos:position pos:line="117" pos:column="17"/></name><operator pos:line="117" pos:column="17">-&gt;<pos:position pos:line="117" pos:column="22"/></operator><name pos:line="117" pos:column="19">h_addr_list<pos:position pos:line="117" pos:column="30"/></name><index pos:line="117" pos:column="30">[<expr><name pos:line="117" pos:column="31">i<pos:position pos:line="117" pos:column="32"/></name></expr>]<pos:position pos:line="117" pos:column="33"/></index></name> <operator pos:line="117" pos:column="34">!=<pos:position pos:line="117" pos:column="36"/></operator> <name pos:line="117" pos:column="37">NULL<pos:position pos:line="117" pos:column="41"/></name></expr>;<pos:position pos:line="117" pos:column="42"/></condition> <incr><expr><name pos:line="117" pos:column="43">i<pos:position pos:line="117" pos:column="44"/></name><operator pos:line="117" pos:column="44">++<pos:position pos:line="117" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="117" pos:column="47"/></control>
  <block pos:line="118" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="119" pos:column="5">memcpy<pos:position pos:line="119" pos:column="11"/></name> <argument_list pos:line="119" pos:column="12">(<argument><expr><operator pos:line="119" pos:column="13">&amp;<pos:position pos:line="119" pos:column="18"/></operator><name><name pos:line="119" pos:column="14">sin<pos:position pos:line="119" pos:column="17"/></name><operator pos:line="119" pos:column="17">.<pos:position pos:line="119" pos:column="18"/></operator><name pos:line="119" pos:column="18">sin_addr<pos:position pos:line="119" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="119" pos:column="28">he<pos:position pos:line="119" pos:column="30"/></name><operator pos:line="119" pos:column="30">-&gt;<pos:position pos:line="119" pos:column="35"/></operator><name pos:line="119" pos:column="32">h_addr_list<pos:position pos:line="119" pos:column="43"/></name><index pos:line="119" pos:column="43">[<expr><name pos:line="119" pos:column="44">i<pos:position pos:line="119" pos:column="45"/></name></expr>]<pos:position pos:line="119" pos:column="46"/></index></name></expr></argument>, <argument><expr><name><name pos:line="119" pos:column="48">he<pos:position pos:line="119" pos:column="50"/></name><operator pos:line="119" pos:column="50">-&gt;<pos:position pos:line="119" pos:column="55"/></operator><name pos:line="119" pos:column="52">h_length<pos:position pos:line="119" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="119" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name pos:line="120" pos:column="5">fd<pos:position pos:line="120" pos:column="7"/></name> <operator pos:line="120" pos:column="8">=<pos:position pos:line="120" pos:column="9"/></operator> <call><name pos:line="120" pos:column="10">socket<pos:position pos:line="120" pos:column="16"/></name> <argument_list pos:line="120" pos:column="17">(<argument><expr><name pos:line="120" pos:column="18">PF_INET<pos:position pos:line="120" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="27">SOCK_STREAM<pos:position pos:line="120" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="40">IPPROTO_IP<pos:position pos:line="120" pos:column="50"/></name></expr></argument>)<pos:position pos:line="120" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="52"/></expr_stmt>

    <if pos:line="122" pos:column="5">if <condition pos:line="122" pos:column="8">(<expr><name pos:line="122" pos:column="9">fd<pos:position pos:line="122" pos:column="11"/></name> <operator pos:line="122" pos:column="12">&gt;=<pos:position pos:line="122" pos:column="17"/></operator> <literal type="number" pos:line="122" pos:column="15">0<pos:position pos:line="122" pos:column="16"/></literal></expr>)<pos:position pos:line="122" pos:column="17"/></condition><then pos:line="122" pos:column="17">
    <block pos:line="123" pos:column="5">{
      <if pos:line="124" pos:column="7">if <condition pos:line="124" pos:column="10">(<expr><operator pos:line="124" pos:column="11">(<pos:position pos:line="124" pos:column="12"/></operator><name pos:line="124" pos:column="12">rc<pos:position pos:line="124" pos:column="14"/></name> <operator pos:line="124" pos:column="15">=<pos:position pos:line="124" pos:column="16"/></operator> <call><name pos:line="124" pos:column="17">socket_connect<pos:position pos:line="124" pos:column="31"/></name> <argument_list pos:line="124" pos:column="32">(<argument><expr><name pos:line="124" pos:column="33">fd<pos:position pos:line="124" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="124" pos:column="37">(<pos:position pos:line="124" pos:column="38"/></operator>struct <name pos:line="124" pos:column="45">sockaddr<pos:position pos:line="124" pos:column="53"/></name><operator pos:line="124" pos:column="53">*<pos:position pos:line="124" pos:column="54"/></operator><operator pos:line="124" pos:column="54">)<pos:position pos:line="124" pos:column="55"/></operator> <operator pos:line="124" pos:column="56">&amp;<pos:position pos:line="124" pos:column="61"/></operator><name pos:line="124" pos:column="57">sin<pos:position pos:line="124" pos:column="60"/></name></expr></argument>)<pos:position pos:line="124" pos:column="61"/></argument_list></call><operator pos:line="124" pos:column="61">)<pos:position pos:line="124" pos:column="62"/></operator> <operator pos:line="124" pos:column="63">==<pos:position pos:line="124" pos:column="65"/></operator> <literal type="number" pos:line="124" pos:column="66">0<pos:position pos:line="124" pos:column="67"/></literal></expr>)<pos:position pos:line="124" pos:column="68"/></condition><then pos:line="124" pos:column="68">
      <block pos:line="125" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="126" pos:column="9">fcntl<pos:position pos:line="126" pos:column="14"/></name> <argument_list pos:line="126" pos:column="15">(<argument><expr><name pos:line="126" pos:column="16">fd<pos:position pos:line="126" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="20">F_SETFD<pos:position pos:line="126" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="29">FD_CLOEXEC<pos:position pos:line="126" pos:column="39"/></name></expr></argument>)<pos:position pos:line="126" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="127" pos:column="9">conn<pos:position pos:line="127" pos:column="13"/></name><operator pos:line="127" pos:column="13">-&gt;<pos:position pos:line="127" pos:column="18"/></operator><name pos:line="127" pos:column="15">fd<pos:position pos:line="127" pos:column="17"/></name></name> <operator pos:line="127" pos:column="18">=<pos:position pos:line="127" pos:column="19"/></operator> <name pos:line="127" pos:column="20">fd<pos:position pos:line="127" pos:column="22"/></name></expr>;<pos:position pos:line="127" pos:column="23"/></expr_stmt>
	<break pos:line="128" pos:column="9">break;<pos:position pos:line="128" pos:column="15"/></break>
      }<pos:position pos:line="129" pos:column="8"/></block></then>
      <else pos:line="130" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="131" pos:column="9">close<pos:position pos:line="131" pos:column="14"/></name> <argument_list pos:line="131" pos:column="15">(<argument><expr><name pos:line="131" pos:column="16">fd<pos:position pos:line="131" pos:column="18"/></name></expr></argument>)<pos:position pos:line="131" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="20"/></expr_stmt></block></else></if>
    }<pos:position pos:line="132" pos:column="6"/></block></then></if>
  }<pos:position pos:line="133" pos:column="4"/></block></for>

<cpp:endif pos:line="135" pos:column="1">#<cpp:directive pos:line="135" pos:column="2">endif<pos:position pos:line="135" pos:column="7"/></cpp:directive></cpp:endif>
  <if pos:line="136" pos:column="3">if <condition pos:line="136" pos:column="6">(<expr><name pos:line="136" pos:column="7">rc<pos:position pos:line="136" pos:column="9"/></name></expr>)<pos:position pos:line="136" pos:column="10"/></condition><then pos:line="136" pos:column="10">
  <block pos:line="137" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="138" pos:column="5">mutt_error<pos:position pos:line="138" pos:column="15"/></name> <argument_list pos:line="138" pos:column="16">(<argument><expr><call><name pos:line="138" pos:column="17">_<pos:position pos:line="138" pos:column="18"/></name><argument_list pos:line="138" pos:column="18">(<argument><expr><literal type="string" pos:line="138" pos:column="19">"Could not connect to %s (%s)."<pos:position pos:line="138" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="138" pos:column="53">conn<pos:position pos:line="138" pos:column="57"/></name><operator pos:line="138" pos:column="57">-&gt;<pos:position pos:line="138" pos:column="62"/></operator><name pos:line="138" pos:column="59">account<pos:position pos:line="138" pos:column="66"/></name><operator pos:line="138" pos:column="66">.<pos:position pos:line="138" pos:column="67"/></operator><name pos:line="138" pos:column="67">host<pos:position pos:line="138" pos:column="71"/></name></name></expr></argument>,
	    <argument><expr><ternary><condition><expr><operator pos:line="139" pos:column="13">(<pos:position pos:line="139" pos:column="14"/></operator><name pos:line="139" pos:column="14">rc<pos:position pos:line="139" pos:column="16"/></name> <operator pos:line="139" pos:column="17">&gt;<pos:position pos:line="139" pos:column="21"/></operator> <literal type="number" pos:line="139" pos:column="19">0<pos:position pos:line="139" pos:column="20"/></literal><operator pos:line="139" pos:column="20">)<pos:position pos:line="139" pos:column="21"/></operator></expr> ?<pos:position pos:line="139" pos:column="23"/></condition><then pos:line="139" pos:column="23"> <expr><call><name pos:line="139" pos:column="24">strerror<pos:position pos:line="139" pos:column="32"/></name> <argument_list pos:line="139" pos:column="33">(<argument><expr><name pos:line="139" pos:column="34">rc<pos:position pos:line="139" pos:column="36"/></name></expr></argument>)<pos:position pos:line="139" pos:column="37"/></argument_list></call></expr> <pos:position pos:line="139" pos:column="38"/></then><else pos:line="139" pos:column="38">: <expr><call><name pos:line="139" pos:column="40">_<pos:position pos:line="139" pos:column="41"/></name><argument_list pos:line="139" pos:column="41">(<argument><expr><literal type="string" pos:line="139" pos:column="42">"unknown error"<pos:position pos:line="139" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="58"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="139" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="140" pos:column="5">mutt_sleep<pos:position pos:line="140" pos:column="15"/></name> <argument_list pos:line="140" pos:column="16">(<argument><expr><literal type="number" pos:line="140" pos:column="17">2<pos:position pos:line="140" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="20"/></expr_stmt>
    <return pos:line="141" pos:column="5">return <expr><operator pos:line="141" pos:column="12">-<pos:position pos:line="141" pos:column="13"/></operator><literal type="number" pos:line="141" pos:column="13">1<pos:position pos:line="141" pos:column="14"/></literal></expr>;<pos:position pos:line="141" pos:column="15"/></return>
  }<pos:position pos:line="142" pos:column="4"/></block></then></if>
  
  <return pos:line="144" pos:column="3">return <expr><literal type="number" pos:line="144" pos:column="10">0<pos:position pos:line="144" pos:column="11"/></literal></expr>;<pos:position pos:line="144" pos:column="12"/></return>
}<pos:position pos:line="145" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1891_mutt-1.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">imap_sync_message<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">IMAP_DATA<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">idata<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">HEADER<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">hdr<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">BUFFER<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">cmd<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
		       <parameter><decl><type><name pos:line="2" pos:column="24">int<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">err_continue<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">flags<pos:position pos:line="4" pos:column="13"/></name><index pos:line="4" pos:column="13">[<expr><name pos:line="4" pos:column="14">LONG_STRING<pos:position pos:line="4" pos:column="25"/></name></expr>]<pos:position pos:line="4" pos:column="26"/></index></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">uid<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><literal type="number" pos:line="5" pos:column="12">11<pos:position pos:line="5" pos:column="14"/></literal></expr>]<pos:position pos:line="5" pos:column="15"/></index></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="7" pos:column="3">hdr<pos:position pos:line="7" pos:column="6"/></name><operator pos:line="7" pos:column="6">-&gt;<pos:position pos:line="7" pos:column="11"/></operator><name pos:line="7" pos:column="8">changed<pos:position pos:line="7" pos:column="15"/></name></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr>;<pos:position pos:line="7" pos:column="20"/></expr_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">!<pos:position pos:line="9" pos:column="8"/></operator><call><name pos:line="9" pos:column="8">compare_flags<pos:position pos:line="9" pos:column="21"/></name> <argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">hdr<pos:position pos:line="9" pos:column="26"/></name></expr></argument>)<pos:position pos:line="9" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="28"/></condition><then pos:line="9" pos:column="28">
  <block pos:line="10" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">idata<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">ctx<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">changed<pos:position pos:line="11" pos:column="24"/></name></name><operator pos:line="11" pos:column="24">--<pos:position pos:line="11" pos:column="26"/></operator></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><literal type="number" pos:line="12" pos:column="12">0<pos:position pos:line="12" pos:column="13"/></literal></expr>;<pos:position pos:line="12" pos:column="14"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">snprintf<pos:position pos:line="15" pos:column="11"/></name> <argument_list pos:line="15" pos:column="12">(<argument><expr><name pos:line="15" pos:column="13">uid<pos:position pos:line="15" pos:column="16"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="18">sizeof <argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">uid<pos:position pos:line="15" pos:column="29"/></name></expr></argument>)<pos:position pos:line="15" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="32">"%u"<pos:position pos:line="15" pos:column="36"/></literal></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="38">HEADER_DATA<pos:position pos:line="15" pos:column="49"/></name><argument_list pos:line="15" pos:column="49">(<argument><expr><name pos:line="15" pos:column="50">hdr<pos:position pos:line="15" pos:column="53"/></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call><operator pos:line="15" pos:column="54">-&gt;<pos:position pos:line="15" pos:column="59"/></operator><name pos:line="15" pos:column="56">uid<pos:position pos:line="15" pos:column="59"/></name></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="61"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">cmd<pos:position pos:line="16" pos:column="6"/></name><operator pos:line="16" pos:column="6">-&gt;<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="8">dptr<pos:position pos:line="16" pos:column="12"/></name></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <name><name pos:line="16" pos:column="15">cmd<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">data<pos:position pos:line="16" pos:column="24"/></name></name></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">mutt_buffer_addstr<pos:position pos:line="17" pos:column="21"/></name> <argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">cmd<pos:position pos:line="17" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="28">"UID STORE "<pos:position pos:line="17" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">mutt_buffer_addstr<pos:position pos:line="18" pos:column="21"/></name> <argument_list pos:line="18" pos:column="22">(<argument><expr><name pos:line="18" pos:column="23">cmd<pos:position pos:line="18" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="28">uid<pos:position pos:line="18" pos:column="31"/></name></expr></argument>)<pos:position pos:line="18" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="20" pos:column="3">flags<pos:position pos:line="20" pos:column="8"/></name><index pos:line="20" pos:column="8">[<expr><literal type="number" pos:line="20" pos:column="9">0<pos:position pos:line="20" pos:column="10"/></literal></expr>]<pos:position pos:line="20" pos:column="11"/></index></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <literal type="char" pos:line="20" pos:column="14">'\0'<pos:position pos:line="20" pos:column="18"/></literal></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">imap_set_flag<pos:position pos:line="22" pos:column="16"/></name> <argument_list pos:line="22" pos:column="17">(<argument><expr><name pos:line="22" pos:column="18">idata<pos:position pos:line="22" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="25">M_ACL_SEEN<pos:position pos:line="22" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="37">hdr<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">-&gt;<pos:position pos:line="22" pos:column="45"/></operator><name pos:line="22" pos:column="42">read<pos:position pos:line="22" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="48">"\\Seen "<pos:position pos:line="22" pos:column="57"/></literal></expr></argument>,
		 <argument><expr><name pos:line="23" pos:column="18">flags<pos:position pos:line="23" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="25">sizeof <argument_list pos:line="23" pos:column="32">(<argument><expr><name pos:line="23" pos:column="33">flags<pos:position pos:line="23" pos:column="38"/></name></expr></argument>)<pos:position pos:line="23" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">imap_set_flag<pos:position pos:line="24" pos:column="16"/></name> <argument_list pos:line="24" pos:column="17">(<argument><expr><name pos:line="24" pos:column="18">idata<pos:position pos:line="24" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="25">M_ACL_WRITE<pos:position pos:line="24" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="38">hdr<pos:position pos:line="24" pos:column="41"/></name><operator pos:line="24" pos:column="41">-&gt;<pos:position pos:line="24" pos:column="46"/></operator><name pos:line="24" pos:column="43">old<pos:position pos:line="24" pos:column="46"/></name></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="25" pos:column="18">"Old "<pos:position pos:line="25" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="26">flags<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="33">sizeof <argument_list pos:line="25" pos:column="40">(<argument><expr><name pos:line="25" pos:column="41">flags<pos:position pos:line="25" pos:column="46"/></name></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">imap_set_flag<pos:position pos:line="26" pos:column="16"/></name> <argument_list pos:line="26" pos:column="17">(<argument><expr><name pos:line="26" pos:column="18">idata<pos:position pos:line="26" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="25">M_ACL_WRITE<pos:position pos:line="26" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="38">hdr<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">-&gt;<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="43">flagged<pos:position pos:line="26" pos:column="50"/></name></name></expr></argument>,
		 <argument><expr><literal type="string" pos:line="27" pos:column="18">"\\Flagged "<pos:position pos:line="27" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="32">flags<pos:position pos:line="27" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="39">sizeof <argument_list pos:line="27" pos:column="46">(<argument><expr><name pos:line="27" pos:column="47">flags<pos:position pos:line="27" pos:column="52"/></name></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="55"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">imap_set_flag<pos:position pos:line="28" pos:column="16"/></name> <argument_list pos:line="28" pos:column="17">(<argument><expr><name pos:line="28" pos:column="18">idata<pos:position pos:line="28" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="25">M_ACL_WRITE<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="38">hdr<pos:position pos:line="28" pos:column="41"/></name><operator pos:line="28" pos:column="41">-&gt;<pos:position pos:line="28" pos:column="46"/></operator><name pos:line="28" pos:column="43">replied<pos:position pos:line="28" pos:column="50"/></name></name></expr></argument>,
		 <argument><expr><literal type="string" pos:line="29" pos:column="18">"\\Answered "<pos:position pos:line="29" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="33">flags<pos:position pos:line="29" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="40">sizeof <argument_list pos:line="29" pos:column="47">(<argument><expr><name pos:line="29" pos:column="48">flags<pos:position pos:line="29" pos:column="53"/></name></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">imap_set_flag<pos:position pos:line="30" pos:column="16"/></name> <argument_list pos:line="30" pos:column="17">(<argument><expr><name pos:line="30" pos:column="18">idata<pos:position pos:line="30" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="25">M_ACL_DELETE<pos:position pos:line="30" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="39">hdr<pos:position pos:line="30" pos:column="42"/></name><operator pos:line="30" pos:column="42">-&gt;<pos:position pos:line="30" pos:column="47"/></operator><name pos:line="30" pos:column="44">deleted<pos:position pos:line="30" pos:column="51"/></name></name></expr></argument>,
		 <argument><expr><literal type="string" pos:line="31" pos:column="18">"\\Deleted "<pos:position pos:line="31" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="32">flags<pos:position pos:line="31" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="39">sizeof <argument_list pos:line="31" pos:column="46">(<argument><expr><name pos:line="31" pos:column="47">flags<pos:position pos:line="31" pos:column="52"/></name></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="55"/></expr_stmt>

  <comment type="block" pos:line="33" pos:column="3">/* now make sure we don't lose custom tags */</comment>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><call><name pos:line="34" pos:column="7">mutt_bit_isset<pos:position pos:line="34" pos:column="21"/></name> <argument_list pos:line="34" pos:column="22">(<argument><expr><name><name pos:line="34" pos:column="23">idata<pos:position pos:line="34" pos:column="28"/></name><operator pos:line="34" pos:column="28">-&gt;<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="30">ctx<pos:position pos:line="34" pos:column="33"/></name><operator pos:line="34" pos:column="33">-&gt;<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="35">rights<pos:position pos:line="34" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="43">M_ACL_WRITE<pos:position pos:line="34" pos:column="54"/></name></expr></argument>)<pos:position pos:line="34" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="56"/></condition><then pos:line="34" pos:column="56">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="5">imap_add_keywords<pos:position pos:line="35" pos:column="22"/></name> <argument_list pos:line="35" pos:column="23">(<argument><expr><name pos:line="35" pos:column="24">flags<pos:position pos:line="35" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="31">hdr<pos:position pos:line="35" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="36">idata<pos:position pos:line="35" pos:column="41"/></name><operator pos:line="35" pos:column="41">-&gt;<pos:position pos:line="35" pos:column="46"/></operator><name pos:line="35" pos:column="43">flags<pos:position pos:line="35" pos:column="48"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="50">sizeof <argument_list pos:line="35" pos:column="57">(<argument><expr><name pos:line="35" pos:column="58">flags<pos:position pos:line="35" pos:column="63"/></name></expr></argument>)<pos:position pos:line="35" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="66"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="37" pos:column="3">mutt_remove_trailing_ws<pos:position pos:line="37" pos:column="26"/></name> <argument_list pos:line="37" pos:column="27">(<argument><expr><name pos:line="37" pos:column="28">flags<pos:position pos:line="37" pos:column="33"/></name></expr></argument>)<pos:position pos:line="37" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="35"/></expr_stmt>

  <comment type="block" pos:line="39" pos:column="3">/* UW-IMAP is OK with null flags, Cyrus isn't. The only solution is to
   * explicitly revoke all system flags (if we have permission) */</comment>
  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><operator pos:line="41" pos:column="7">!<pos:position pos:line="41" pos:column="8"/></operator><operator pos:line="41" pos:column="8">*<pos:position pos:line="41" pos:column="9"/></operator><name pos:line="41" pos:column="9">flags<pos:position pos:line="41" pos:column="14"/></name></expr>)<pos:position pos:line="41" pos:column="15"/></condition><then pos:line="41" pos:column="15">
  <block pos:line="42" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">imap_set_flag<pos:position pos:line="43" pos:column="18"/></name> <argument_list pos:line="43" pos:column="19">(<argument><expr><name pos:line="43" pos:column="20">idata<pos:position pos:line="43" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="27">M_ACL_SEEN<pos:position pos:line="43" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="39">1<pos:position pos:line="43" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="42">"\\Seen "<pos:position pos:line="43" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="53">flags<pos:position pos:line="43" pos:column="58"/></name></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="60">sizeof <argument_list pos:line="43" pos:column="67">(<argument><expr><name pos:line="43" pos:column="68">flags<pos:position pos:line="43" pos:column="73"/></name></expr></argument>)<pos:position pos:line="43" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="43" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">imap_set_flag<pos:position pos:line="44" pos:column="18"/></name> <argument_list pos:line="44" pos:column="19">(<argument><expr><name pos:line="44" pos:column="20">idata<pos:position pos:line="44" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="27">M_ACL_WRITE<pos:position pos:line="44" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="40">1<pos:position pos:line="44" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="43">"Old "<pos:position pos:line="44" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="51">flags<pos:position pos:line="44" pos:column="56"/></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="58">sizeof <argument_list pos:line="44" pos:column="65">(<argument><expr><name pos:line="44" pos:column="66">flags<pos:position pos:line="44" pos:column="71"/></name></expr></argument>)<pos:position pos:line="44" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">imap_set_flag<pos:position pos:line="45" pos:column="18"/></name> <argument_list pos:line="45" pos:column="19">(<argument><expr><name pos:line="45" pos:column="20">idata<pos:position pos:line="45" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="27">M_ACL_WRITE<pos:position pos:line="45" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="40">1<pos:position pos:line="45" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="43">"\\Flagged "<pos:position pos:line="45" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="57">flags<pos:position pos:line="45" pos:column="62"/></name></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="64">sizeof <argument_list pos:line="45" pos:column="71">(<argument><expr><name pos:line="45" pos:column="72">flags<pos:position pos:line="45" pos:column="77"/></name></expr></argument>)<pos:position pos:line="45" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">imap_set_flag<pos:position pos:line="46" pos:column="18"/></name> <argument_list pos:line="46" pos:column="19">(<argument><expr><name pos:line="46" pos:column="20">idata<pos:position pos:line="46" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="27">M_ACL_WRITE<pos:position pos:line="46" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="40">1<pos:position pos:line="46" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="43">"\\Answered "<pos:position pos:line="46" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="58">flags<pos:position pos:line="46" pos:column="63"/></name></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="65">sizeof <argument_list pos:line="46" pos:column="72">(<argument><expr><name pos:line="46" pos:column="73">flags<pos:position pos:line="46" pos:column="78"/></name></expr></argument>)<pos:position pos:line="46" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="46" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">imap_set_flag<pos:position pos:line="47" pos:column="18"/></name> <argument_list pos:line="47" pos:column="19">(<argument><expr><name pos:line="47" pos:column="20">idata<pos:position pos:line="47" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="27">M_ACL_DELETE<pos:position pos:line="47" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="41">1<pos:position pos:line="47" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="44">"\\Deleted "<pos:position pos:line="47" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="58">flags<pos:position pos:line="47" pos:column="63"/></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="65">sizeof <argument_list pos:line="47" pos:column="72">(<argument><expr><name pos:line="47" pos:column="73">flags<pos:position pos:line="47" pos:column="78"/></name></expr></argument>)<pos:position pos:line="47" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="47" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="81"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="49" pos:column="5">mutt_remove_trailing_ws<pos:position pos:line="49" pos:column="28"/></name> <argument_list pos:line="49" pos:column="29">(<argument><expr><name pos:line="49" pos:column="30">flags<pos:position pos:line="49" pos:column="35"/></name></expr></argument>)<pos:position pos:line="49" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="51" pos:column="5">mutt_buffer_addstr<pos:position pos:line="51" pos:column="23"/></name> <argument_list pos:line="51" pos:column="24">(<argument><expr><name pos:line="51" pos:column="25">cmd<pos:position pos:line="51" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="30">" -FLAGS.SILENT ("<pos:position pos:line="51" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="50"/></expr_stmt>
  }<pos:position pos:line="52" pos:column="4"/></block></then> <else pos:line="52" pos:column="5">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="5">mutt_buffer_addstr<pos:position pos:line="53" pos:column="23"/></name> <argument_list pos:line="53" pos:column="24">(<argument><expr><name pos:line="53" pos:column="25">cmd<pos:position pos:line="53" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="30">" FLAGS.SILENT ("<pos:position pos:line="53" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="49"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="55" pos:column="3">mutt_buffer_addstr<pos:position pos:line="55" pos:column="21"/></name> <argument_list pos:line="55" pos:column="22">(<argument><expr><name pos:line="55" pos:column="23">cmd<pos:position pos:line="55" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="28">flags<pos:position pos:line="55" pos:column="33"/></name></expr></argument>)<pos:position pos:line="55" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="56" pos:column="3">mutt_buffer_addstr<pos:position pos:line="56" pos:column="21"/></name> <argument_list pos:line="56" pos:column="22">(<argument><expr><name pos:line="56" pos:column="23">cmd<pos:position pos:line="56" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="28">")"<pos:position pos:line="56" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="33"/></expr_stmt>

  <comment type="block" pos:line="58" pos:column="3">/* dumb hack for bad UW-IMAP 4.7 servers spurious FLAGS updates */</comment>
  <expr_stmt><expr><name><name pos:line="59" pos:column="3">hdr<pos:position pos:line="59" pos:column="6"/></name><operator pos:line="59" pos:column="6">-&gt;<pos:position pos:line="59" pos:column="11"/></operator><name pos:line="59" pos:column="8">active<pos:position pos:line="59" pos:column="14"/></name></name> <operator pos:line="59" pos:column="15">=<pos:position pos:line="59" pos:column="16"/></operator> <literal type="number" pos:line="59" pos:column="17">0<pos:position pos:line="59" pos:column="18"/></literal></expr>;<pos:position pos:line="59" pos:column="19"/></expr_stmt>

  <comment type="block" pos:line="61" pos:column="3">/* after all this it's still possible to have no flags, if you
   * have no ACL rights */</comment>
  <if pos:line="63" pos:column="3">if <condition pos:line="63" pos:column="6">(<expr><operator pos:line="63" pos:column="7">*<pos:position pos:line="63" pos:column="8"/></operator><name pos:line="63" pos:column="8">flags<pos:position pos:line="63" pos:column="13"/></name> <operator pos:line="63" pos:column="14">&amp;&amp;<pos:position pos:line="63" pos:column="24"/></operator> <operator pos:line="63" pos:column="17">(<pos:position pos:line="63" pos:column="18"/></operator><call><name pos:line="63" pos:column="18">imap_exec<pos:position pos:line="63" pos:column="27"/></name> <argument_list pos:line="63" pos:column="28">(<argument><expr><name pos:line="63" pos:column="29">idata<pos:position pos:line="63" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="36">cmd<pos:position pos:line="63" pos:column="39"/></name><operator pos:line="63" pos:column="39">-&gt;<pos:position pos:line="63" pos:column="44"/></operator><name pos:line="63" pos:column="41">data<pos:position pos:line="63" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="47">0<pos:position pos:line="63" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="49"/></argument_list></call> <operator pos:line="63" pos:column="50">!=<pos:position pos:line="63" pos:column="52"/></operator> <literal type="number" pos:line="63" pos:column="53">0<pos:position pos:line="63" pos:column="54"/></literal><operator pos:line="63" pos:column="54">)<pos:position pos:line="63" pos:column="55"/></operator> <operator pos:line="63" pos:column="56">&amp;&amp;<pos:position pos:line="63" pos:column="66"/></operator>
      <name pos:line="64" pos:column="7">err_continue<pos:position pos:line="64" pos:column="19"/></name> <operator pos:line="64" pos:column="20">&amp;&amp;<pos:position pos:line="64" pos:column="30"/></operator> <operator pos:line="64" pos:column="23">(<pos:position pos:line="64" pos:column="24"/></operator><operator pos:line="64" pos:column="24">*<pos:position pos:line="64" pos:column="25"/></operator><name pos:line="64" pos:column="25">err_continue<pos:position pos:line="64" pos:column="37"/></name> <operator pos:line="64" pos:column="38">!=<pos:position pos:line="64" pos:column="40"/></operator> <name pos:line="64" pos:column="41">M_YES<pos:position pos:line="64" pos:column="46"/></name><operator pos:line="64" pos:column="46">)<pos:position pos:line="64" pos:column="47"/></operator></expr>)<pos:position pos:line="64" pos:column="48"/></condition><then pos:line="64" pos:column="48">
  <block pos:line="65" pos:column="3">{
    <expr_stmt><expr><operator pos:line="66" pos:column="5">*<pos:position pos:line="66" pos:column="6"/></operator><name pos:line="66" pos:column="6">err_continue<pos:position pos:line="66" pos:column="18"/></name> <operator pos:line="66" pos:column="19">=<pos:position pos:line="66" pos:column="20"/></operator> <call><name pos:line="66" pos:column="21">imap_continue<pos:position pos:line="66" pos:column="34"/></name> <argument_list pos:line="66" pos:column="35">(<argument><expr><literal type="string" pos:line="66" pos:column="36">"imap_sync_message: STORE failed"<pos:position pos:line="66" pos:column="69"/></literal></expr></argument>,
				   <argument><expr><name><name pos:line="67" pos:column="36">idata<pos:position pos:line="67" pos:column="41"/></name><operator pos:line="67" pos:column="41">-&gt;<pos:position pos:line="67" pos:column="46"/></operator><name pos:line="67" pos:column="43">buf<pos:position pos:line="67" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="48"/></expr_stmt>
    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><operator pos:line="68" pos:column="9">*<pos:position pos:line="68" pos:column="10"/></operator><name pos:line="68" pos:column="10">err_continue<pos:position pos:line="68" pos:column="22"/></name> <operator pos:line="68" pos:column="23">!=<pos:position pos:line="68" pos:column="25"/></operator> <name pos:line="68" pos:column="26">M_YES<pos:position pos:line="68" pos:column="31"/></name></expr>)<pos:position pos:line="68" pos:column="32"/></condition><then pos:line="68" pos:column="32">
      <block type="pseudo"><return pos:line="69" pos:column="7">return <expr><operator pos:line="69" pos:column="14">-<pos:position pos:line="69" pos:column="15"/></operator><literal type="number" pos:line="69" pos:column="15">1<pos:position pos:line="69" pos:column="16"/></literal></expr>;<pos:position pos:line="69" pos:column="17"/></return></block></then></if>
  }<pos:position pos:line="70" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="72" pos:column="3">hdr<pos:position pos:line="72" pos:column="6"/></name><operator pos:line="72" pos:column="6">-&gt;<pos:position pos:line="72" pos:column="11"/></operator><name pos:line="72" pos:column="8">active<pos:position pos:line="72" pos:column="14"/></name></name> <operator pos:line="72" pos:column="15">=<pos:position pos:line="72" pos:column="16"/></operator> <literal type="number" pos:line="72" pos:column="17">1<pos:position pos:line="72" pos:column="18"/></literal></expr>;<pos:position pos:line="72" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="73" pos:column="3">idata<pos:position pos:line="73" pos:column="8"/></name><operator pos:line="73" pos:column="8">-&gt;<pos:position pos:line="73" pos:column="13"/></operator><name pos:line="73" pos:column="10">ctx<pos:position pos:line="73" pos:column="13"/></name><operator pos:line="73" pos:column="13">-&gt;<pos:position pos:line="73" pos:column="18"/></operator><name pos:line="73" pos:column="15">changed<pos:position pos:line="73" pos:column="22"/></name></name><operator pos:line="73" pos:column="22">--<pos:position pos:line="73" pos:column="24"/></operator></expr>;<pos:position pos:line="73" pos:column="25"/></expr_stmt>

  <return pos:line="75" pos:column="3">return <expr><literal type="number" pos:line="75" pos:column="10">0<pos:position pos:line="75" pos:column="11"/></literal></expr>;<pos:position pos:line="75" pos:column="12"/></return>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

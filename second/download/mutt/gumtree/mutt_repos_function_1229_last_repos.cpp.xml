<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1229_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">encode_block<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">s<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">d<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">size_t<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">dlen<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
			    <parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">char<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">fromcode<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="51">const<pos:position pos:line="2" pos:column="56"/></specifier> <name pos:line="2" pos:column="57">char<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">tocode<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>,
			    <parameter><decl><type><name pos:line="3" pos:column="29">encoder_t<pos:position pos:line="3" pos:column="38"/></name></type> <name pos:line="3" pos:column="39">encoder<pos:position pos:line="3" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="47"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">buf1<pos:position pos:line="5" pos:column="12"/></name><index pos:line="5" pos:column="12">[<expr><name pos:line="5" pos:column="13">ENCWORD_LEN_MAX<pos:position pos:line="5" pos:column="28"/></name> <operator pos:line="5" pos:column="29">-<pos:position pos:line="5" pos:column="30"/></operator> <name pos:line="5" pos:column="31">ENCWORD_LEN_MIN<pos:position pos:line="5" pos:column="46"/></name> <operator pos:line="5" pos:column="47">+<pos:position pos:line="5" pos:column="48"/></operator> <literal type="number" pos:line="5" pos:column="49">1<pos:position pos:line="5" pos:column="50"/></literal></expr>]<pos:position pos:line="5" pos:column="51"/></index></name></decl>;<pos:position pos:line="5" pos:column="52"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">iconv_t<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">cd<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">ICONV_CONST<pos:position pos:line="7" pos:column="14"/></name> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">ib<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">ob<pos:position pos:line="8" pos:column="11"/></name></decl>;<pos:position pos:line="8" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">ibl<pos:position pos:line="9" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="15">obl<pos:position pos:line="9" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="20">n1<pos:position pos:line="9" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="24">n2<pos:position pos:line="9" pos:column="26"/></name></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">fromcode<pos:position pos:line="11" pos:column="15"/></name></expr>)<pos:position pos:line="11" pos:column="16"/></condition><then pos:line="11" pos:column="16">
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><name pos:line="13" pos:column="5">cd<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <call><name pos:line="13" pos:column="10">mutt_iconv_open<pos:position pos:line="13" pos:column="25"/></name> <argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">tocode<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="35">fromcode<pos:position pos:line="13" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="45">0<pos:position pos:line="13" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">assert<pos:position pos:line="14" pos:column="11"/></name> <argument_list pos:line="14" pos:column="12">(<argument><expr><name pos:line="14" pos:column="13">cd<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">!=<pos:position pos:line="14" pos:column="18"/></operator> <call pos:line="14" pos:column="19">(<name pos:line="14" pos:column="20">iconv_t<pos:position pos:line="14" pos:column="27"/></name>)<argument_list pos:line="14" pos:column="28">(<argument><expr><operator pos:line="14" pos:column="29">-<pos:position pos:line="14" pos:column="30"/></operator><literal type="number" pos:line="14" pos:column="30">1<pos:position pos:line="14" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">ib<pos:position pos:line="15" pos:column="7"/></name> <operator pos:line="15" pos:column="8">=<pos:position pos:line="15" pos:column="9"/></operator> <name pos:line="15" pos:column="10">d<pos:position pos:line="15" pos:column="11"/></name></expr><operator pos:line="15" pos:column="11">,<pos:position pos:line="15" pos:column="12"/></operator> <expr><name pos:line="15" pos:column="13">ibl<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <name pos:line="15" pos:column="19">dlen<pos:position pos:line="15" pos:column="23"/></name></expr><operator pos:line="15" pos:column="23">,<pos:position pos:line="15" pos:column="24"/></operator> <expr><name pos:line="15" pos:column="25">ob<pos:position pos:line="15" pos:column="27"/></name> <operator pos:line="15" pos:column="28">=<pos:position pos:line="15" pos:column="29"/></operator> <name pos:line="15" pos:column="30">buf1<pos:position pos:line="15" pos:column="34"/></name></expr><operator pos:line="15" pos:column="34">,<pos:position pos:line="15" pos:column="35"/></operator> <expr><name pos:line="15" pos:column="36">obl<pos:position pos:line="15" pos:column="39"/></name> <operator pos:line="15" pos:column="40">=<pos:position pos:line="15" pos:column="41"/></operator> <sizeof pos:line="15" pos:column="42">sizeof <argument_list pos:line="15" pos:column="49">(<argument><expr><name pos:line="15" pos:column="50">buf1<pos:position pos:line="15" pos:column="54"/></name></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></sizeof> <operator pos:line="15" pos:column="56">-<pos:position pos:line="15" pos:column="57"/></operator> <call><name pos:line="15" pos:column="58">strlen<pos:position pos:line="15" pos:column="64"/></name> <argument_list pos:line="15" pos:column="65">(<argument><expr><name pos:line="15" pos:column="66">tocode<pos:position pos:line="15" pos:column="72"/></name></expr></argument>)<pos:position pos:line="15" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">n1<pos:position pos:line="16" pos:column="7"/></name> <operator pos:line="16" pos:column="8">=<pos:position pos:line="16" pos:column="9"/></operator> <call><name pos:line="16" pos:column="10">iconv<pos:position pos:line="16" pos:column="15"/></name> <argument_list pos:line="16" pos:column="16">(<argument><expr><name pos:line="16" pos:column="17">cd<pos:position pos:line="16" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="21">&amp;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="22">ib<pos:position pos:line="16" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="26">&amp;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="27">ibl<pos:position pos:line="16" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="32">&amp;<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="33">ob<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="37">&amp;<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="38">obl<pos:position pos:line="16" pos:column="41"/></name></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">n2<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <call><name pos:line="17" pos:column="10">iconv<pos:position pos:line="17" pos:column="15"/></name> <argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">cd<pos:position pos:line="17" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="21">0<pos:position pos:line="17" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="27">&amp;<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="28">ob<pos:position pos:line="17" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="32">&amp;<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="33">obl<pos:position pos:line="17" pos:column="36"/></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">assert<pos:position pos:line="18" pos:column="11"/></name> <argument_list pos:line="18" pos:column="12">(<argument><expr><name pos:line="18" pos:column="13">n1<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">!=<pos:position pos:line="18" pos:column="18"/></operator> <call pos:line="18" pos:column="19">(<name pos:line="18" pos:column="20">size_t<pos:position pos:line="18" pos:column="26"/></name>)<argument_list pos:line="18" pos:column="27">(<argument><expr><operator pos:line="18" pos:column="28">-<pos:position pos:line="18" pos:column="29"/></operator><literal type="number" pos:line="18" pos:column="29">1<pos:position pos:line="18" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="31"/></argument_list></call> <operator pos:line="18" pos:column="32">&amp;&amp;<pos:position pos:line="18" pos:column="42"/></operator> <name pos:line="18" pos:column="35">n2<pos:position pos:line="18" pos:column="37"/></name> <operator pos:line="18" pos:column="38">!=<pos:position pos:line="18" pos:column="40"/></operator> <call pos:line="18" pos:column="41">(<name pos:line="18" pos:column="42">size_t<pos:position pos:line="18" pos:column="48"/></name>)<argument_list pos:line="18" pos:column="49">(<argument><expr><operator pos:line="18" pos:column="50">-<pos:position pos:line="18" pos:column="51"/></operator><literal type="number" pos:line="18" pos:column="51">1<pos:position pos:line="18" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">iconv_close<pos:position pos:line="19" pos:column="16"/></name> <argument_list pos:line="19" pos:column="17">(<argument><expr><name pos:line="19" pos:column="18">cd<pos:position pos:line="19" pos:column="20"/></name></expr></argument>)<pos:position pos:line="19" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><call pos:line="20" pos:column="12">(<modifier pos:line="20" pos:column="13">*<pos:position pos:line="20" pos:column="14"/></modifier><name pos:line="20" pos:column="14">encoder<pos:position pos:line="20" pos:column="21"/></name>) <argument_list pos:line="20" pos:column="23">(<argument><expr><name pos:line="20" pos:column="24">s<pos:position pos:line="20" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="27">buf1<pos:position pos:line="20" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="33">ob<pos:position pos:line="20" pos:column="35"/></name> <operator pos:line="20" pos:column="36">-<pos:position pos:line="20" pos:column="37"/></operator> <name pos:line="20" pos:column="38">buf1<pos:position pos:line="20" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="44">tocode<pos:position pos:line="20" pos:column="50"/></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="52"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then>
  <else pos:line="22" pos:column="3">else
    <block type="pseudo"><return pos:line="23" pos:column="5">return <expr><call pos:line="23" pos:column="12">(<modifier pos:line="23" pos:column="13">*<pos:position pos:line="23" pos:column="14"/></modifier><name pos:line="23" pos:column="14">encoder<pos:position pos:line="23" pos:column="21"/></name>) <argument_list pos:line="23" pos:column="23">(<argument><expr><name pos:line="23" pos:column="24">s<pos:position pos:line="23" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="27">d<pos:position pos:line="23" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="30">dlen<pos:position pos:line="23" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="36">tocode<pos:position pos:line="23" pos:column="42"/></name></expr></argument>)<pos:position pos:line="23" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="44"/></return></block></else></if>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

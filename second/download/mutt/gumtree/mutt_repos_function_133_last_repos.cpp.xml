<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_133_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type> <name pos:line="1" pos:column="21">parse_date_range<pos:position pos:line="1" pos:column="37"/></name> <parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name><modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type> <name pos:line="1" pos:column="51">pc<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="55">struct<pos:position pos:line="1" pos:column="61"/></name> <name pos:line="1" pos:column="62">tm<pos:position pos:line="1" pos:column="64"/></name></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">min<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
    <parameter><decl><type><name><name pos:line="2" pos:column="5">struct<pos:position pos:line="2" pos:column="11"/></name> <name pos:line="2" pos:column="12">tm<pos:position pos:line="2" pos:column="14"/></name></name> <modifier pos:line="2" pos:column="15">*<pos:position pos:line="2" pos:column="16"/></modifier></type><name pos:line="2" pos:column="16">max<pos:position pos:line="2" pos:column="19"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="21">int<pos:position pos:line="2" pos:column="24"/></name></type> <name pos:line="2" pos:column="25">haveMin<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="34">struct<pos:position pos:line="2" pos:column="40"/></name> <name pos:line="2" pos:column="41">tm<pos:position pos:line="2" pos:column="43"/></name></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">baseMin<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">BUFFER<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">err<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">flag<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><name pos:line="4" pos:column="14">MUTT_PDR_NONE<pos:position pos:line="4" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>	
  <while pos:line="5" pos:column="3">while <condition pos:line="5" pos:column="9">(<expr><operator pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">pc<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">&amp;&amp;<pos:position pos:line="5" pos:column="24"/></operator> <operator pos:line="5" pos:column="17">(<pos:position pos:line="5" pos:column="18"/></operator><operator pos:line="5" pos:column="18">(<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">flag<pos:position pos:line="5" pos:column="23"/></name> <operator pos:line="5" pos:column="24">&amp;<pos:position pos:line="5" pos:column="29"/></operator> <name pos:line="5" pos:column="26">MUTT_PDR_DONE<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">)<pos:position pos:line="5" pos:column="40"/></operator> <operator pos:line="5" pos:column="41">==<pos:position pos:line="5" pos:column="43"/></operator> <literal type="number" pos:line="5" pos:column="44">0<pos:position pos:line="5" pos:column="45"/></literal><operator pos:line="5" pos:column="45">)<pos:position pos:line="5" pos:column="46"/></operator></expr>)<pos:position pos:line="5" pos:column="47"/></condition>
  <block pos:line="6" pos:column="3">{
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">pt<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">ch<pos:position pos:line="8" pos:column="12"/></name> <init pos:line="8" pos:column="13">= <expr><operator pos:line="8" pos:column="15">*<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">pc<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">++<pos:position pos:line="8" pos:column="20"/></operator></expr></init></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">SKIPWS<pos:position pos:line="9" pos:column="11"/></name> <argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">pc<pos:position pos:line="9" pos:column="15"/></name></expr></argument>)<pos:position pos:line="9" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="17"/></expr_stmt>
    <switch pos:line="10" pos:column="5">switch <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">ch<pos:position pos:line="10" pos:column="15"/></name></expr>)<pos:position pos:line="10" pos:column="16"/></condition>
    <block pos:line="11" pos:column="5">{
      <case pos:line="12" pos:column="7">case <expr><literal type="char" pos:line="12" pos:column="12">'-'<pos:position pos:line="12" pos:column="15"/></literal></expr>:<pos:position pos:line="12" pos:column="16"/></case>
      <block pos:line="13" pos:column="7">{
	<comment type="block" pos:line="14" pos:column="9">/* try a range of absolute date minus offset of Ndwmy */</comment>
	<expr_stmt><expr><name pos:line="15" pos:column="9">pt<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <call><name pos:line="15" pos:column="14">get_offset<pos:position pos:line="15" pos:column="24"/></name> <argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">min<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="31">pc<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="35">-<pos:position pos:line="15" pos:column="36"/></operator><literal type="number" pos:line="15" pos:column="36">1<pos:position pos:line="15" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="39"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">pc<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">==<pos:position pos:line="16" pos:column="18"/></operator> <name pos:line="16" pos:column="19">pt<pos:position pos:line="16" pos:column="21"/></name></expr>)<pos:position pos:line="16" pos:column="22"/></condition><then pos:line="16" pos:column="22">
	<block pos:line="17" pos:column="9">{
	  <if pos:line="18" pos:column="11">if <condition pos:line="18" pos:column="14">(<expr><name pos:line="18" pos:column="15">flag<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">==<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="23">MUTT_PDR_NONE<pos:position pos:line="18" pos:column="36"/></name></expr>)<pos:position pos:line="18" pos:column="37"/></condition><then pos:line="18" pos:column="37">
	  <block pos:line="19" pos:column="11">{ <comment type="block" pos:line="19" pos:column="13">/* nothing yet and no offset parsed =&gt; absolute date? */</comment>
	    <if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><operator pos:line="20" pos:column="17">!<pos:position pos:line="20" pos:column="18"/></operator><call><name pos:line="20" pos:column="18">getDate<pos:position pos:line="20" pos:column="25"/></name> <argument_list pos:line="20" pos:column="26">(<argument><expr><name pos:line="20" pos:column="27">pc<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="31">max<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="36">err<pos:position pos:line="20" pos:column="39"/></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41">
	      <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="15">flag<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">|=<pos:position pos:line="21" pos:column="22"/></operator> <operator pos:line="21" pos:column="23">(<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="24">MUTT_PDR_ABSOLUTE<pos:position pos:line="21" pos:column="41"/></name> <operator pos:line="21" pos:column="42">|<pos:position pos:line="21" pos:column="43"/></operator> <name pos:line="21" pos:column="44">MUTT_PDR_ERRORDONE<pos:position pos:line="21" pos:column="62"/></name><operator pos:line="21" pos:column="62">)<pos:position pos:line="21" pos:column="63"/></operator></expr>;<pos:position pos:line="21" pos:column="64"/></expr_stmt></block></then>  <comment type="block" pos:line="21" pos:column="66">/* done bad */</comment>
	    <else pos:line="22" pos:column="13">else
	    <block pos:line="23" pos:column="13">{
	      <comment type="block" pos:line="24" pos:column="15">/* reestablish initial base minimum if not specified */</comment>
	      <if pos:line="25" pos:column="15">if <condition pos:line="25" pos:column="18">(<expr><operator pos:line="25" pos:column="19">!<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="20">haveMin<pos:position pos:line="25" pos:column="27"/></name></expr>)<pos:position pos:line="25" pos:column="28"/></condition><then pos:line="25" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="17">memcpy<pos:position pos:line="26" pos:column="23"/></name> <argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">min<pos:position pos:line="26" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="30">baseMin<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="39">sizeof<argument_list pos:line="26" pos:column="45">(<argument><expr pos:line="26" pos:column="46">struct <name pos:line="26" pos:column="53">tm<pos:position pos:line="26" pos:column="55"/></name></expr></argument>)<pos:position pos:line="26" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt></block></then></if>
	      <expr_stmt><expr><name pos:line="27" pos:column="15">flag<pos:position pos:line="27" pos:column="19"/></name> <operator pos:line="27" pos:column="20">|=<pos:position pos:line="27" pos:column="22"/></operator> <operator pos:line="27" pos:column="23">(<pos:position pos:line="27" pos:column="24"/></operator><name pos:line="27" pos:column="24">MUTT_PDR_ABSOLUTE<pos:position pos:line="27" pos:column="41"/></name> <operator pos:line="27" pos:column="42">|<pos:position pos:line="27" pos:column="43"/></operator> <name pos:line="27" pos:column="44">MUTT_PDR_DONE<pos:position pos:line="27" pos:column="57"/></name><operator pos:line="27" pos:column="57">)<pos:position pos:line="27" pos:column="58"/></operator></expr>;<pos:position pos:line="27" pos:column="59"/></expr_stmt>  <comment type="block" pos:line="27" pos:column="61">/* done good */</comment>
	    }<pos:position pos:line="28" pos:column="14"/></block></else></if>
	  }<pos:position pos:line="29" pos:column="12"/></block></then>
	  <else pos:line="30" pos:column="11">else
	    <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="13">flag<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">|=<pos:position pos:line="31" pos:column="20"/></operator> <name pos:line="31" pos:column="21">MUTT_PDR_ERRORDONE<pos:position pos:line="31" pos:column="39"/></name></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt></block></else></if>
	}<pos:position pos:line="32" pos:column="10"/></block></then>
	<else pos:line="33" pos:column="9">else
	<block pos:line="34" pos:column="9">{
	  <expr_stmt><expr><name pos:line="35" pos:column="11">pc<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <name pos:line="35" pos:column="16">pt<pos:position pos:line="35" pos:column="18"/></name></expr>;<pos:position pos:line="35" pos:column="19"/></expr_stmt>
	  <if pos:line="36" pos:column="11">if <condition pos:line="36" pos:column="14">(<expr><name pos:line="36" pos:column="15">flag<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">==<pos:position pos:line="36" pos:column="22"/></operator> <name pos:line="36" pos:column="23">MUTT_PDR_NONE<pos:position pos:line="36" pos:column="36"/></name> <operator pos:line="36" pos:column="37">&amp;&amp;<pos:position pos:line="36" pos:column="47"/></operator> <operator pos:line="36" pos:column="40">!<pos:position pos:line="36" pos:column="41"/></operator><name pos:line="36" pos:column="41">haveMin<pos:position pos:line="36" pos:column="48"/></name></expr>)<pos:position pos:line="36" pos:column="49"/></condition><then pos:line="36" pos:column="49">
	  <block pos:line="37" pos:column="11">{ <comment type="block" pos:line="37" pos:column="13">/* the very first "-3d" without a previous absolute date */</comment>
	    <expr_stmt><expr><name><name pos:line="38" pos:column="13">max<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">-&gt;<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="18">tm_year<pos:position pos:line="38" pos:column="25"/></name></name> <operator pos:line="38" pos:column="26">=<pos:position pos:line="38" pos:column="27"/></operator> <name><name pos:line="38" pos:column="28">min<pos:position pos:line="38" pos:column="31"/></name><operator pos:line="38" pos:column="31">-&gt;<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="33">tm_year<pos:position pos:line="38" pos:column="40"/></name></name></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="39" pos:column="13">max<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">-&gt;<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="18">tm_mon<pos:position pos:line="39" pos:column="24"/></name></name> <operator pos:line="39" pos:column="25">=<pos:position pos:line="39" pos:column="26"/></operator> <name><name pos:line="39" pos:column="27">min<pos:position pos:line="39" pos:column="30"/></name><operator pos:line="39" pos:column="30">-&gt;<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="32">tm_mon<pos:position pos:line="39" pos:column="38"/></name></name></expr>;<pos:position pos:line="39" pos:column="39"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="40" pos:column="13">max<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">-&gt;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="18">tm_mday<pos:position pos:line="40" pos:column="25"/></name></name> <operator pos:line="40" pos:column="26">=<pos:position pos:line="40" pos:column="27"/></operator> <name><name pos:line="40" pos:column="28">min<pos:position pos:line="40" pos:column="31"/></name><operator pos:line="40" pos:column="31">-&gt;<pos:position pos:line="40" pos:column="36"/></operator><name pos:line="40" pos:column="33">tm_mday<pos:position pos:line="40" pos:column="40"/></name></name></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt>
	  }<pos:position pos:line="41" pos:column="12"/></block></then></if>
	  <expr_stmt><expr><name pos:line="42" pos:column="11">flag<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">|=<pos:position pos:line="42" pos:column="18"/></operator> <name pos:line="42" pos:column="19">MUTT_PDR_MINUS<pos:position pos:line="42" pos:column="33"/></name></expr>;<pos:position pos:line="42" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="43" pos:column="10"/></block></else></if>
      }<pos:position pos:line="44" pos:column="8"/></block>
      <break pos:line="45" pos:column="7">break;<pos:position pos:line="45" pos:column="13"/></break>
      <case pos:line="46" pos:column="7">case <expr><literal type="char" pos:line="46" pos:column="12">'+'<pos:position pos:line="46" pos:column="15"/></literal></expr>:<pos:position pos:line="46" pos:column="16"/></case>
      <block pos:line="47" pos:column="7">{ <comment type="block" pos:line="47" pos:column="9">/* enlarge plusRange */</comment>
	<expr_stmt><expr><name pos:line="48" pos:column="9">pt<pos:position pos:line="48" pos:column="11"/></name> <operator pos:line="48" pos:column="12">=<pos:position pos:line="48" pos:column="13"/></operator> <call><name pos:line="48" pos:column="14">get_offset<pos:position pos:line="48" pos:column="24"/></name> <argument_list pos:line="48" pos:column="25">(<argument><expr><name pos:line="48" pos:column="26">max<pos:position pos:line="48" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="31">pc<pos:position pos:line="48" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="35">1<pos:position pos:line="48" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="38"/></expr_stmt>
	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">pc<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">==<pos:position pos:line="49" pos:column="18"/></operator> <name pos:line="49" pos:column="19">pt<pos:position pos:line="49" pos:column="21"/></name></expr>)<pos:position pos:line="49" pos:column="22"/></condition><then pos:line="49" pos:column="22">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="11">flag<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">|=<pos:position pos:line="50" pos:column="18"/></operator> <name pos:line="50" pos:column="19">MUTT_PDR_ERRORDONE<pos:position pos:line="50" pos:column="37"/></name></expr>;<pos:position pos:line="50" pos:column="38"/></expr_stmt></block></then>
	<else pos:line="51" pos:column="9">else
	<block pos:line="52" pos:column="9">{
	  <expr_stmt><expr><name pos:line="53" pos:column="11">pc<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">=<pos:position pos:line="53" pos:column="15"/></operator> <name pos:line="53" pos:column="16">pt<pos:position pos:line="53" pos:column="18"/></name></expr>;<pos:position pos:line="53" pos:column="19"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="54" pos:column="11">flag<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">|=<pos:position pos:line="54" pos:column="18"/></operator> <name pos:line="54" pos:column="19">MUTT_PDR_PLUS<pos:position pos:line="54" pos:column="32"/></name></expr>;<pos:position pos:line="54" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="55" pos:column="10"/></block></else></if>
      }<pos:position pos:line="56" pos:column="8"/></block>
      <break pos:line="57" pos:column="7">break;<pos:position pos:line="57" pos:column="13"/></break>
      <case pos:line="58" pos:column="7">case <expr><literal type="char" pos:line="58" pos:column="12">'*'<pos:position pos:line="58" pos:column="15"/></literal></expr>:<pos:position pos:line="58" pos:column="16"/></case>
      <block pos:line="59" pos:column="7">{ <comment type="block" pos:line="59" pos:column="9">/* enlarge window in both directions */</comment>
	<expr_stmt><expr><name pos:line="60" pos:column="9">pt<pos:position pos:line="60" pos:column="11"/></name> <operator pos:line="60" pos:column="12">=<pos:position pos:line="60" pos:column="13"/></operator> <call><name pos:line="60" pos:column="14">get_offset<pos:position pos:line="60" pos:column="24"/></name> <argument_list pos:line="60" pos:column="25">(<argument><expr><name pos:line="60" pos:column="26">min<pos:position pos:line="60" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="31">pc<pos:position pos:line="60" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="35">-<pos:position pos:line="60" pos:column="36"/></operator><literal type="number" pos:line="60" pos:column="36">1<pos:position pos:line="60" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="39"/></expr_stmt>
	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name pos:line="61" pos:column="13">pc<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">==<pos:position pos:line="61" pos:column="18"/></operator> <name pos:line="61" pos:column="19">pt<pos:position pos:line="61" pos:column="21"/></name></expr>)<pos:position pos:line="61" pos:column="22"/></condition><then pos:line="61" pos:column="22">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="11">flag<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">|=<pos:position pos:line="62" pos:column="18"/></operator> <name pos:line="62" pos:column="19">MUTT_PDR_ERRORDONE<pos:position pos:line="62" pos:column="37"/></name></expr>;<pos:position pos:line="62" pos:column="38"/></expr_stmt></block></then>
	<else pos:line="63" pos:column="9">else
	<block pos:line="64" pos:column="9">{
	  <expr_stmt><expr><name pos:line="65" pos:column="11">pc<pos:position pos:line="65" pos:column="13"/></name> <operator pos:line="65" pos:column="14">=<pos:position pos:line="65" pos:column="15"/></operator> <call><name pos:line="65" pos:column="16">get_offset<pos:position pos:line="65" pos:column="26"/></name> <argument_list pos:line="65" pos:column="27">(<argument><expr><name pos:line="65" pos:column="28">max<pos:position pos:line="65" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="33">pc<pos:position pos:line="65" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="37">1<pos:position pos:line="65" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="40"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="66" pos:column="11">flag<pos:position pos:line="66" pos:column="15"/></name> <operator pos:line="66" pos:column="16">|=<pos:position pos:line="66" pos:column="18"/></operator> <name pos:line="66" pos:column="19">MUTT_PDR_WINDOW<pos:position pos:line="66" pos:column="34"/></name></expr>;<pos:position pos:line="66" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="67" pos:column="10"/></block></else></if>
      }<pos:position pos:line="68" pos:column="8"/></block>
      <break pos:line="69" pos:column="7">break;<pos:position pos:line="69" pos:column="13"/></break>
      <default pos:line="70" pos:column="7">default:<pos:position pos:line="70" pos:column="15"/></default>
	<expr_stmt><expr><name pos:line="71" pos:column="9">flag<pos:position pos:line="71" pos:column="13"/></name> <operator pos:line="71" pos:column="14">|=<pos:position pos:line="71" pos:column="16"/></operator> <name pos:line="71" pos:column="17">MUTT_PDR_ERRORDONE<pos:position pos:line="71" pos:column="35"/></name></expr>;<pos:position pos:line="71" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="72" pos:column="6"/></block></switch>
    <expr_stmt><expr><call><name pos:line="73" pos:column="5">SKIPWS<pos:position pos:line="73" pos:column="11"/></name> <argument_list pos:line="73" pos:column="12">(<argument><expr><name pos:line="73" pos:column="13">pc<pos:position pos:line="73" pos:column="15"/></name></expr></argument>)<pos:position pos:line="73" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="74" pos:column="4"/></block></while>
  <if pos:line="75" pos:column="3">if <condition pos:line="75" pos:column="6">(<expr><operator pos:line="75" pos:column="7">(<pos:position pos:line="75" pos:column="8"/></operator><name pos:line="75" pos:column="8">flag<pos:position pos:line="75" pos:column="12"/></name> <operator pos:line="75" pos:column="13">&amp;<pos:position pos:line="75" pos:column="18"/></operator> <name pos:line="75" pos:column="15">MUTT_PDR_ERROR<pos:position pos:line="75" pos:column="29"/></name><operator pos:line="75" pos:column="29">)<pos:position pos:line="75" pos:column="30"/></operator> <operator pos:line="75" pos:column="31">&amp;&amp;<pos:position pos:line="75" pos:column="41"/></operator> <operator pos:line="75" pos:column="34">!<pos:position pos:line="75" pos:column="35"/></operator><operator pos:line="75" pos:column="35">(<pos:position pos:line="75" pos:column="36"/></operator><name pos:line="75" pos:column="36">flag<pos:position pos:line="75" pos:column="40"/></name> <operator pos:line="75" pos:column="41">&amp;<pos:position pos:line="75" pos:column="46"/></operator> <name pos:line="75" pos:column="43">MUTT_PDR_ABSOLUTE<pos:position pos:line="75" pos:column="60"/></name><operator pos:line="75" pos:column="60">)<pos:position pos:line="75" pos:column="61"/></operator></expr>)<pos:position pos:line="75" pos:column="62"/></condition><then pos:line="75" pos:column="62">
  <block pos:line="76" pos:column="3">{ <comment type="block" pos:line="76" pos:column="5">/* getDate has its own error message, don't overwrite it here */</comment>
    <expr_stmt><expr><call><name pos:line="77" pos:column="5">snprintf<pos:position pos:line="77" pos:column="13"/></name> <argument_list pos:line="77" pos:column="14">(<argument><expr><name><name pos:line="77" pos:column="15">err<pos:position pos:line="77" pos:column="18"/></name><operator pos:line="77" pos:column="18">-&gt;<pos:position pos:line="77" pos:column="23"/></operator><name pos:line="77" pos:column="20">data<pos:position pos:line="77" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="26">err<pos:position pos:line="77" pos:column="29"/></name><operator pos:line="77" pos:column="29">-&gt;<pos:position pos:line="77" pos:column="34"/></operator><name pos:line="77" pos:column="31">dsize<pos:position pos:line="77" pos:column="36"/></name></name></expr></argument>, <argument><expr><call><name pos:line="77" pos:column="38">_<pos:position pos:line="77" pos:column="39"/></name><argument_list pos:line="77" pos:column="39">(<argument><expr><literal type="string" pos:line="77" pos:column="40">"Invalid relative date: %s"<pos:position pos:line="77" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="77" pos:column="70">pc<pos:position pos:line="77" pos:column="72"/></name><operator pos:line="77" pos:column="72">-<pos:position pos:line="77" pos:column="73"/></operator><literal type="number" pos:line="77" pos:column="73">1<pos:position pos:line="77" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="76"/></expr_stmt>
  }<pos:position pos:line="78" pos:column="4"/></block></then></if>
  <return pos:line="79" pos:column="3">return <expr><operator pos:line="79" pos:column="10">(<pos:position pos:line="79" pos:column="11"/></operator><ternary><condition><expr><operator pos:line="79" pos:column="11">(<pos:position pos:line="79" pos:column="12"/></operator><name pos:line="79" pos:column="12">flag<pos:position pos:line="79" pos:column="16"/></name> <operator pos:line="79" pos:column="17">&amp;<pos:position pos:line="79" pos:column="22"/></operator> <name pos:line="79" pos:column="19">MUTT_PDR_ERROR<pos:position pos:line="79" pos:column="33"/></name><operator pos:line="79" pos:column="33">)<pos:position pos:line="79" pos:column="34"/></operator></expr> ?<pos:position pos:line="79" pos:column="36"/></condition><then pos:line="79" pos:column="36"> <expr><name pos:line="79" pos:column="37">NULL<pos:position pos:line="79" pos:column="41"/></name></expr> <pos:position pos:line="79" pos:column="42"/></then><else pos:line="79" pos:column="42">: <expr><name pos:line="79" pos:column="44">pc<pos:position pos:line="79" pos:column="46"/></name></expr></else></ternary><operator pos:line="79" pos:column="46">)<pos:position pos:line="79" pos:column="47"/></operator></expr>;<pos:position pos:line="79" pos:column="48"/></return>
}<pos:position pos:line="80" pos:column="2"/></block></function></unit>

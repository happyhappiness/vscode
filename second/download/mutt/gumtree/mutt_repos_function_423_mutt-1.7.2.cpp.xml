<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_423_mutt-1.7.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BODY<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">smime_build_smime_entity<pos:position pos:line="1" pos:column="31"/></name> <parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">BODY<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">a<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">certlist<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buf<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">LONG_STRING<pos:position pos:line="3" pos:column="23"/></name></expr>]<pos:position pos:line="3" pos:column="24"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="3" pos:column="26">certfile<pos:position pos:line="3" pos:column="34"/></name><index pos:line="3" pos:column="34">[<expr><name pos:line="3" pos:column="35">LONG_STRING<pos:position pos:line="3" pos:column="46"/></name></expr>]<pos:position pos:line="3" pos:column="47"/></index></name></decl>;<pos:position pos:line="3" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">tempfile<pos:position pos:line="4" pos:column="16"/></name><index pos:line="4" pos:column="16">[<expr><name pos:line="4" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="4" pos:column="32"/></name></expr>]<pos:position pos:line="4" pos:column="33"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="4" pos:column="35">smimeerrfile<pos:position pos:line="4" pos:column="47"/></name><index pos:line="4" pos:column="47">[<expr><name pos:line="4" pos:column="48">_POSIX_PATH_MAX<pos:position pos:line="4" pos:column="63"/></name></expr>]<pos:position pos:line="4" pos:column="64"/></index></name></decl>;<pos:position pos:line="4" pos:column="65"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">smimeinfile<pos:position pos:line="5" pos:column="19"/></name><index pos:line="5" pos:column="19">[<expr><name pos:line="5" pos:column="20">_POSIX_PATH_MAX<pos:position pos:line="5" pos:column="35"/></name></expr>]<pos:position pos:line="5" pos:column="36"/></index></name></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">cert_start<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name pos:line="6" pos:column="22">certlist<pos:position pos:line="6" pos:column="30"/></name></expr></init></decl>, <modifier pos:line="6" pos:column="32">*<pos:position pos:line="6" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="33">cert_end<pos:position pos:line="6" pos:column="41"/></name> <init pos:line="6" pos:column="42">= <expr><name pos:line="6" pos:column="44">certlist<pos:position pos:line="6" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="53"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">FILE<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">smimein<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><name pos:line="7" pos:column="19">NULL<pos:position pos:line="7" pos:column="23"/></name></expr></init></decl>, <modifier pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="26">smimeerr<pos:position pos:line="7" pos:column="34"/></name> <init pos:line="7" pos:column="35">= <expr><name pos:line="7" pos:column="37">NULL<pos:position pos:line="7" pos:column="41"/></name></expr></init></decl>, <modifier pos:line="7" pos:column="43">*<pos:position pos:line="7" pos:column="44"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="44">fpout<pos:position pos:line="7" pos:column="49"/></name> <init pos:line="7" pos:column="50">= <expr><name pos:line="7" pos:column="52">NULL<pos:position pos:line="7" pos:column="56"/></name></expr></init></decl>, <modifier pos:line="7" pos:column="58">*<pos:position pos:line="7" pos:column="59"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="59">fptmp<pos:position pos:line="7" pos:column="64"/></name> <init pos:line="7" pos:column="65">= <expr><name pos:line="7" pos:column="67">NULL<pos:position pos:line="7" pos:column="71"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="72"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">BODY<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">t<pos:position pos:line="8" pos:column="10"/></name></decl>;<pos:position pos:line="8" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">err<pos:position pos:line="9" pos:column="10"/></name> <init pos:line="9" pos:column="11">= <expr><literal type="number" pos:line="9" pos:column="13">0<pos:position pos:line="9" pos:column="14"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="16">empty<pos:position pos:line="9" pos:column="21"/></name></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">pid_t<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">thepid<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>
  
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">mutt_mktemp<pos:position pos:line="12" pos:column="14"/></name> <argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">tempfile<pos:position pos:line="12" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="26">sizeof <argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">tempfile<pos:position pos:line="12" pos:column="42"/></name></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><operator pos:line="13" pos:column="7">(<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">fpout<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <call><name pos:line="13" pos:column="16">safe_fopen<pos:position pos:line="13" pos:column="26"/></name> <argument_list pos:line="13" pos:column="27">(<argument><expr><name pos:line="13" pos:column="28">tempfile<pos:position pos:line="13" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="38">"w+"<pos:position pos:line="13" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call><operator pos:line="13" pos:column="43">)<pos:position pos:line="13" pos:column="44"/></operator> <operator pos:line="13" pos:column="45">==<pos:position pos:line="13" pos:column="47"/></operator> <name pos:line="13" pos:column="48">NULL<pos:position pos:line="13" pos:column="52"/></name></expr>)<pos:position pos:line="13" pos:column="53"/></condition><then pos:line="13" pos:column="53">
  <block pos:line="14" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">mutt_perror<pos:position pos:line="15" pos:column="16"/></name> <argument_list pos:line="15" pos:column="17">(<argument><expr><name pos:line="15" pos:column="18">tempfile<pos:position pos:line="15" pos:column="26"/></name></expr></argument>)<pos:position pos:line="15" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="28"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="13">NULL<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">)<pos:position pos:line="16" pos:column="18"/></operator></expr>;<pos:position pos:line="16" pos:column="19"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="19" pos:column="3">mutt_mktemp<pos:position pos:line="19" pos:column="14"/></name> <argument_list pos:line="19" pos:column="15">(<argument><expr><name pos:line="19" pos:column="16">smimeerrfile<pos:position pos:line="19" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="30">sizeof <argument_list pos:line="19" pos:column="37">(<argument><expr><name pos:line="19" pos:column="38">smimeerrfile<pos:position pos:line="19" pos:column="50"/></name></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="53"/></expr_stmt>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><operator pos:line="20" pos:column="7">(<pos:position pos:line="20" pos:column="8"/></operator><name pos:line="20" pos:column="8">smimeerr<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <call><name pos:line="20" pos:column="19">safe_fopen<pos:position pos:line="20" pos:column="29"/></name> <argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">smimeerrfile<pos:position pos:line="20" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="45">"w+"<pos:position pos:line="20" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call><operator pos:line="20" pos:column="50">)<pos:position pos:line="20" pos:column="51"/></operator> <operator pos:line="20" pos:column="52">==<pos:position pos:line="20" pos:column="54"/></operator> <name pos:line="20" pos:column="55">NULL<pos:position pos:line="20" pos:column="59"/></name></expr>)<pos:position pos:line="20" pos:column="60"/></condition><then pos:line="20" pos:column="60">
  <block pos:line="21" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">mutt_perror<pos:position pos:line="22" pos:column="16"/></name> <argument_list pos:line="22" pos:column="17">(<argument><expr><name pos:line="22" pos:column="18">smimeerrfile<pos:position pos:line="22" pos:column="30"/></name></expr></argument>)<pos:position pos:line="22" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">safe_fclose<pos:position pos:line="23" pos:column="16"/></name> <argument_list pos:line="23" pos:column="17">(<argument><expr><operator pos:line="23" pos:column="18">&amp;<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="19">fpout<pos:position pos:line="23" pos:column="24"/></name></expr></argument>)<pos:position pos:line="23" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">mutt_unlink<pos:position pos:line="24" pos:column="16"/></name> <argument_list pos:line="24" pos:column="17">(<argument><expr><name pos:line="24" pos:column="18">tempfile<pos:position pos:line="24" pos:column="26"/></name></expr></argument>)<pos:position pos:line="24" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">NULL<pos:position pos:line="25" pos:column="16"/></name></expr>;<pos:position pos:line="25" pos:column="17"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">mutt_unlink<pos:position pos:line="27" pos:column="14"/></name> <argument_list pos:line="27" pos:column="15">(<argument><expr><name pos:line="27" pos:column="16">smimeerrfile<pos:position pos:line="27" pos:column="28"/></name></expr></argument>)<pos:position pos:line="27" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>
  
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">mutt_mktemp<pos:position pos:line="29" pos:column="14"/></name> <argument_list pos:line="29" pos:column="15">(<argument><expr><name pos:line="29" pos:column="16">smimeinfile<pos:position pos:line="29" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="29">sizeof <argument_list pos:line="29" pos:column="36">(<argument><expr><name pos:line="29" pos:column="37">smimeinfile<pos:position pos:line="29" pos:column="48"/></name></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="51"/></expr_stmt>
  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><operator pos:line="30" pos:column="7">(<pos:position pos:line="30" pos:column="8"/></operator><name pos:line="30" pos:column="8">fptmp<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <call><name pos:line="30" pos:column="16">safe_fopen<pos:position pos:line="30" pos:column="26"/></name> <argument_list pos:line="30" pos:column="27">(<argument><expr><name pos:line="30" pos:column="28">smimeinfile<pos:position pos:line="30" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="41">"w+"<pos:position pos:line="30" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="46"/></argument_list></call><operator pos:line="30" pos:column="46">)<pos:position pos:line="30" pos:column="47"/></operator> <operator pos:line="30" pos:column="48">==<pos:position pos:line="30" pos:column="50"/></operator> <name pos:line="30" pos:column="51">NULL<pos:position pos:line="30" pos:column="55"/></name></expr>)<pos:position pos:line="30" pos:column="56"/></condition><then pos:line="30" pos:column="56">
  <block pos:line="31" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">mutt_perror<pos:position pos:line="32" pos:column="16"/></name> <argument_list pos:line="32" pos:column="17">(<argument><expr><name pos:line="32" pos:column="18">smimeinfile<pos:position pos:line="32" pos:column="29"/></name></expr></argument>)<pos:position pos:line="32" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">mutt_unlink<pos:position pos:line="33" pos:column="16"/></name> <argument_list pos:line="33" pos:column="17">(<argument><expr><name pos:line="33" pos:column="18">tempfile<pos:position pos:line="33" pos:column="26"/></name></expr></argument>)<pos:position pos:line="33" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">safe_fclose<pos:position pos:line="34" pos:column="16"/></name> <argument_list pos:line="34" pos:column="17">(<argument><expr><operator pos:line="34" pos:column="18">&amp;<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="19">fpout<pos:position pos:line="34" pos:column="24"/></name></expr></argument>)<pos:position pos:line="34" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">safe_fclose<pos:position pos:line="35" pos:column="16"/></name> <argument_list pos:line="35" pos:column="17">(<argument><expr><operator pos:line="35" pos:column="18">&amp;<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="19">smimeerr<pos:position pos:line="35" pos:column="27"/></name></expr></argument>)<pos:position pos:line="35" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><name pos:line="36" pos:column="12">NULL<pos:position pos:line="36" pos:column="16"/></name></expr>;<pos:position pos:line="36" pos:column="17"/></return>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="39" pos:column="3">*<pos:position pos:line="39" pos:column="4"/></operator><name pos:line="39" pos:column="4">certfile<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator> <literal type="char" pos:line="39" pos:column="15">'\0'<pos:position pos:line="39" pos:column="19"/></literal></expr>;<pos:position pos:line="39" pos:column="20"/></expr_stmt>
  <while pos:line="40" pos:column="3">while <condition pos:line="40" pos:column="9">(<expr><literal type="number" pos:line="40" pos:column="10">1<pos:position pos:line="40" pos:column="11"/></literal></expr>)<pos:position pos:line="40" pos:column="12"/></condition>
  <block pos:line="41" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="42" pos:column="5">int<pos:position pos:line="42" pos:column="8"/></name></type> <name pos:line="42" pos:column="9">off<pos:position pos:line="42" pos:column="12"/></name> <init pos:line="42" pos:column="13">= <expr><call><name pos:line="42" pos:column="15">mutt_strlen<pos:position pos:line="42" pos:column="26"/></name> <argument_list pos:line="42" pos:column="27">(<argument><expr><name pos:line="42" pos:column="28">certfile<pos:position pos:line="42" pos:column="36"/></name></expr></argument>)<pos:position pos:line="42" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="42" pos:column="38"/></decl_stmt>
    <while pos:line="43" pos:column="5">while <condition pos:line="43" pos:column="11">(<expr><operator pos:line="43" pos:column="12">*<pos:position pos:line="43" pos:column="13"/></operator><operator pos:line="43" pos:column="13">++<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="15">cert_end<pos:position pos:line="43" pos:column="23"/></name> <operator pos:line="43" pos:column="24">&amp;&amp;<pos:position pos:line="43" pos:column="34"/></operator> <operator pos:line="43" pos:column="27">*<pos:position pos:line="43" pos:column="28"/></operator><name pos:line="43" pos:column="28">cert_end<pos:position pos:line="43" pos:column="36"/></name> <operator pos:line="43" pos:column="37">!=<pos:position pos:line="43" pos:column="39"/></operator> <literal type="char" pos:line="43" pos:column="40">'\n'<pos:position pos:line="43" pos:column="44"/></literal></expr>)<pos:position pos:line="43" pos:column="45"/></condition><block type="pseudo"><empty_stmt pos:line="43" pos:column="45">;<pos:position pos:line="43" pos:column="46"/></empty_stmt></block></while>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><operator pos:line="44" pos:column="9">!<pos:position pos:line="44" pos:column="10"/></operator><operator pos:line="44" pos:column="10">*<pos:position pos:line="44" pos:column="11"/></operator><name pos:line="44" pos:column="11">cert_end<pos:position pos:line="44" pos:column="19"/></name></expr>)<pos:position pos:line="44" pos:column="20"/></condition><then pos:line="44" pos:column="20"> <block type="pseudo"><break pos:line="44" pos:column="21">break;<pos:position pos:line="44" pos:column="27"/></break></block></then></if>
    <expr_stmt><expr><operator pos:line="45" pos:column="5">*<pos:position pos:line="45" pos:column="6"/></operator><name pos:line="45" pos:column="6">cert_end<pos:position pos:line="45" pos:column="14"/></name> <operator pos:line="45" pos:column="15">=<pos:position pos:line="45" pos:column="16"/></operator> <literal type="char" pos:line="45" pos:column="17">'\0'<pos:position pos:line="45" pos:column="21"/></literal></expr>;<pos:position pos:line="45" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">snprintf<pos:position pos:line="46" pos:column="13"/></name> <argument_list pos:line="46" pos:column="14">(<argument><expr><name pos:line="46" pos:column="15">certfile<pos:position pos:line="46" pos:column="23"/></name><operator pos:line="46" pos:column="23">+<pos:position pos:line="46" pos:column="24"/></operator><name pos:line="46" pos:column="24">off<pos:position pos:line="46" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="29">sizeof <argument_list pos:line="46" pos:column="36">(<argument><expr><name pos:line="46" pos:column="37">certfile<pos:position pos:line="46" pos:column="45"/></name></expr></argument>)<pos:position pos:line="46" pos:column="46"/></argument_list></sizeof><operator pos:line="46" pos:column="46">-<pos:position pos:line="46" pos:column="47"/></operator><name pos:line="46" pos:column="47">off<pos:position pos:line="46" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="52">" %s/%s"<pos:position pos:line="46" pos:column="60"/></literal></expr></argument>,
	      <argument><expr><call><name pos:line="47" pos:column="15">NONULL<pos:position pos:line="47" pos:column="21"/></name><argument_list pos:line="47" pos:column="21">(<argument><expr><name pos:line="47" pos:column="22">SmimeCertificates<pos:position pos:line="47" pos:column="39"/></name></expr></argument>)<pos:position pos:line="47" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="47" pos:column="42">cert_start<pos:position pos:line="47" pos:column="52"/></name></expr></argument>)<pos:position pos:line="47" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="48" pos:column="5">*<pos:position pos:line="48" pos:column="6"/></operator><name pos:line="48" pos:column="6">cert_end<pos:position pos:line="48" pos:column="14"/></name> <operator pos:line="48" pos:column="15">=<pos:position pos:line="48" pos:column="16"/></operator> <literal type="char" pos:line="48" pos:column="17">'\n'<pos:position pos:line="48" pos:column="21"/></literal></expr>;<pos:position pos:line="48" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="49" pos:column="5">cert_start<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <name pos:line="49" pos:column="18">cert_end<pos:position pos:line="49" pos:column="26"/></name></expr>;<pos:position pos:line="49" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="50" pos:column="5">cert_start<pos:position pos:line="50" pos:column="15"/></name><operator pos:line="50" pos:column="15">++<pos:position pos:line="50" pos:column="17"/></operator></expr>;<pos:position pos:line="50" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="51" pos:column="4"/></block></while>

  <comment type="block" pos:line="53" pos:column="3">/* write a MIME entity */</comment>
  <expr_stmt><expr><call><name pos:line="54" pos:column="3">mutt_write_mime_header<pos:position pos:line="54" pos:column="25"/></name> <argument_list pos:line="54" pos:column="26">(<argument><expr><name pos:line="54" pos:column="27">a<pos:position pos:line="54" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="30">fptmp<pos:position pos:line="54" pos:column="35"/></name></expr></argument>)<pos:position pos:line="54" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="55" pos:column="3">fputc<pos:position pos:line="55" pos:column="8"/></name> <argument_list pos:line="55" pos:column="9">(<argument><expr><literal type="char" pos:line="55" pos:column="10">'\n'<pos:position pos:line="55" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="16">fptmp<pos:position pos:line="55" pos:column="21"/></name></expr></argument>)<pos:position pos:line="55" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="56" pos:column="3">mutt_write_mime_body<pos:position pos:line="56" pos:column="23"/></name> <argument_list pos:line="56" pos:column="24">(<argument><expr><name pos:line="56" pos:column="25">a<pos:position pos:line="56" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="28">fptmp<pos:position pos:line="56" pos:column="33"/></name></expr></argument>)<pos:position pos:line="56" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="57" pos:column="3">safe_fclose<pos:position pos:line="57" pos:column="14"/></name> <argument_list pos:line="57" pos:column="15">(<argument><expr><operator pos:line="57" pos:column="16">&amp;<pos:position pos:line="57" pos:column="21"/></operator><name pos:line="57" pos:column="17">fptmp<pos:position pos:line="57" pos:column="22"/></name></expr></argument>)<pos:position pos:line="57" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="24"/></expr_stmt>

  <if pos:line="59" pos:column="3">if <condition pos:line="59" pos:column="6">(<expr><operator pos:line="59" pos:column="7">(<pos:position pos:line="59" pos:column="8"/></operator><name pos:line="59" pos:column="8">thepid<pos:position pos:line="59" pos:column="14"/></name> <operator pos:line="59" pos:column="15">=<pos:position pos:line="59" pos:column="16"/></operator>
       <call><name pos:line="60" pos:column="8">smime_invoke_encrypt<pos:position pos:line="60" pos:column="28"/></name> <argument_list pos:line="60" pos:column="29">(<argument><expr><operator pos:line="60" pos:column="30">&amp;<pos:position pos:line="60" pos:column="35"/></operator><name pos:line="60" pos:column="31">smimein<pos:position pos:line="60" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="40">NULL<pos:position pos:line="60" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="46">NULL<pos:position pos:line="60" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="52">-<pos:position pos:line="60" pos:column="53"/></operator><literal type="number" pos:line="60" pos:column="53">1<pos:position pos:line="60" pos:column="54"/></literal></expr></argument>,
			     <argument><expr><call><name pos:line="61" pos:column="30">fileno<pos:position pos:line="61" pos:column="36"/></name> <argument_list pos:line="61" pos:column="37">(<argument><expr><name pos:line="61" pos:column="38">fpout<pos:position pos:line="61" pos:column="43"/></name></expr></argument>)<pos:position pos:line="61" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="61" pos:column="46">fileno<pos:position pos:line="61" pos:column="52"/></name> <argument_list pos:line="61" pos:column="53">(<argument><expr><name pos:line="61" pos:column="54">smimeerr<pos:position pos:line="61" pos:column="62"/></name></expr></argument>)<pos:position pos:line="61" pos:column="63"/></argument_list></call></expr></argument>,
			     <argument><expr><name pos:line="62" pos:column="30">smimeinfile<pos:position pos:line="62" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="43">certfile<pos:position pos:line="62" pos:column="51"/></name></expr></argument>)<pos:position pos:line="62" pos:column="52"/></argument_list></call><operator pos:line="62" pos:column="52">)<pos:position pos:line="62" pos:column="53"/></operator> <operator pos:line="62" pos:column="54">==<pos:position pos:line="62" pos:column="56"/></operator> <operator pos:line="62" pos:column="57">-<pos:position pos:line="62" pos:column="58"/></operator><literal type="number" pos:line="62" pos:column="58">1<pos:position pos:line="62" pos:column="59"/></literal></expr>)<pos:position pos:line="62" pos:column="60"/></condition><then pos:line="62" pos:column="60">
  <block pos:line="63" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">safe_fclose<pos:position pos:line="64" pos:column="16"/></name> <argument_list pos:line="64" pos:column="17">(<argument><expr><operator pos:line="64" pos:column="18">&amp;<pos:position pos:line="64" pos:column="23"/></operator><name pos:line="64" pos:column="19">smimeerr<pos:position pos:line="64" pos:column="27"/></name></expr></argument>)<pos:position pos:line="64" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">mutt_unlink<pos:position pos:line="65" pos:column="16"/></name> <argument_list pos:line="65" pos:column="17">(<argument><expr><name pos:line="65" pos:column="18">smimeinfile<pos:position pos:line="65" pos:column="29"/></name></expr></argument>)<pos:position pos:line="65" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">mutt_unlink<pos:position pos:line="66" pos:column="16"/></name> <argument_list pos:line="66" pos:column="17">(<argument><expr><name pos:line="66" pos:column="18">certfile<pos:position pos:line="66" pos:column="26"/></name></expr></argument>)<pos:position pos:line="66" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="28"/></expr_stmt>
    <return pos:line="67" pos:column="5">return <expr><operator pos:line="67" pos:column="12">(<pos:position pos:line="67" pos:column="13"/></operator><name pos:line="67" pos:column="13">NULL<pos:position pos:line="67" pos:column="17"/></name><operator pos:line="67" pos:column="17">)<pos:position pos:line="67" pos:column="18"/></operator></expr>;<pos:position pos:line="67" pos:column="19"/></return>
  }<pos:position pos:line="68" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="70" pos:column="3">safe_fclose<pos:position pos:line="70" pos:column="14"/></name> <argument_list pos:line="70" pos:column="15">(<argument><expr><operator pos:line="70" pos:column="16">&amp;<pos:position pos:line="70" pos:column="21"/></operator><name pos:line="70" pos:column="17">smimein<pos:position pos:line="70" pos:column="24"/></name></expr></argument>)<pos:position pos:line="70" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="26"/></expr_stmt>
  
  <expr_stmt><expr><call><name pos:line="72" pos:column="3">mutt_wait_filter<pos:position pos:line="72" pos:column="19"/></name> <argument_list pos:line="72" pos:column="20">(<argument><expr><name pos:line="72" pos:column="21">thepid<pos:position pos:line="72" pos:column="27"/></name></expr></argument>)<pos:position pos:line="72" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="73" pos:column="3">mutt_unlink<pos:position pos:line="73" pos:column="14"/></name> <argument_list pos:line="73" pos:column="15">(<argument><expr><name pos:line="73" pos:column="16">smimeinfile<pos:position pos:line="73" pos:column="27"/></name></expr></argument>)<pos:position pos:line="73" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="74" pos:column="3">mutt_unlink<pos:position pos:line="74" pos:column="14"/></name> <argument_list pos:line="74" pos:column="15">(<argument><expr><name pos:line="74" pos:column="16">certfile<pos:position pos:line="74" pos:column="24"/></name></expr></argument>)<pos:position pos:line="74" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="26"/></expr_stmt>
  
  <expr_stmt><expr><call><name pos:line="76" pos:column="3">fflush<pos:position pos:line="76" pos:column="9"/></name> <argument_list pos:line="76" pos:column="10">(<argument><expr><name pos:line="76" pos:column="11">fpout<pos:position pos:line="76" pos:column="16"/></name></expr></argument>)<pos:position pos:line="76" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="77" pos:column="3">rewind<pos:position pos:line="77" pos:column="9"/></name> <argument_list pos:line="77" pos:column="10">(<argument><expr><name pos:line="77" pos:column="11">fpout<pos:position pos:line="77" pos:column="16"/></name></expr></argument>)<pos:position pos:line="77" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name pos:line="78" pos:column="3">empty<pos:position pos:line="78" pos:column="8"/></name> <operator pos:line="78" pos:column="9">=<pos:position pos:line="78" pos:column="10"/></operator> <operator pos:line="78" pos:column="11">(<pos:position pos:line="78" pos:column="12"/></operator><call><name pos:line="78" pos:column="12">fgetc<pos:position pos:line="78" pos:column="17"/></name> <argument_list pos:line="78" pos:column="18">(<argument><expr><name pos:line="78" pos:column="19">fpout<pos:position pos:line="78" pos:column="24"/></name></expr></argument>)<pos:position pos:line="78" pos:column="25"/></argument_list></call> <operator pos:line="78" pos:column="26">==<pos:position pos:line="78" pos:column="28"/></operator> <name pos:line="78" pos:column="29">EOF<pos:position pos:line="78" pos:column="32"/></name><operator pos:line="78" pos:column="32">)<pos:position pos:line="78" pos:column="33"/></operator></expr>;<pos:position pos:line="78" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="79" pos:column="3">safe_fclose<pos:position pos:line="79" pos:column="14"/></name> <argument_list pos:line="79" pos:column="15">(<argument><expr><operator pos:line="79" pos:column="16">&amp;<pos:position pos:line="79" pos:column="21"/></operator><name pos:line="79" pos:column="17">fpout<pos:position pos:line="79" pos:column="22"/></name></expr></argument>)<pos:position pos:line="79" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="24"/></expr_stmt>
 
  <expr_stmt><expr><call><name pos:line="81" pos:column="3">fflush<pos:position pos:line="81" pos:column="9"/></name> <argument_list pos:line="81" pos:column="10">(<argument><expr><name pos:line="81" pos:column="11">smimeerr<pos:position pos:line="81" pos:column="19"/></name></expr></argument>)<pos:position pos:line="81" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="82" pos:column="3">rewind<pos:position pos:line="82" pos:column="9"/></name> <argument_list pos:line="82" pos:column="10">(<argument><expr><name pos:line="82" pos:column="11">smimeerr<pos:position pos:line="82" pos:column="19"/></name></expr></argument>)<pos:position pos:line="82" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="21"/></expr_stmt>
  <while pos:line="83" pos:column="3">while <condition pos:line="83" pos:column="9">(<expr><call><name pos:line="83" pos:column="10">fgets<pos:position pos:line="83" pos:column="15"/></name> <argument_list pos:line="83" pos:column="16">(<argument><expr><name pos:line="83" pos:column="17">buf<pos:position pos:line="83" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="83" pos:column="22">sizeof <argument_list pos:line="83" pos:column="29">(<argument><expr><name pos:line="83" pos:column="30">buf<pos:position pos:line="83" pos:column="33"/></name></expr></argument>)<pos:position pos:line="83" pos:column="34"/></argument_list></sizeof> <operator pos:line="83" pos:column="35">-<pos:position pos:line="83" pos:column="36"/></operator> <literal type="number" pos:line="83" pos:column="37">1<pos:position pos:line="83" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="83" pos:column="40">smimeerr<pos:position pos:line="83" pos:column="48"/></name></expr></argument>)<pos:position pos:line="83" pos:column="49"/></argument_list></call> <operator pos:line="83" pos:column="50">!=<pos:position pos:line="83" pos:column="52"/></operator> <name pos:line="83" pos:column="53">NULL<pos:position pos:line="83" pos:column="57"/></name></expr>)<pos:position pos:line="83" pos:column="58"/></condition>
  <block pos:line="84" pos:column="3">{
    <expr_stmt><expr><name pos:line="85" pos:column="5">err<pos:position pos:line="85" pos:column="8"/></name> <operator pos:line="85" pos:column="9">=<pos:position pos:line="85" pos:column="10"/></operator> <literal type="number" pos:line="85" pos:column="11">1<pos:position pos:line="85" pos:column="12"/></literal></expr>;<pos:position pos:line="85" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">fputs<pos:position pos:line="86" pos:column="10"/></name> <argument_list pos:line="86" pos:column="11">(<argument><expr><name pos:line="86" pos:column="12">buf<pos:position pos:line="86" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="17">stdout<pos:position pos:line="86" pos:column="23"/></name></expr></argument>)<pos:position pos:line="86" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="87" pos:column="4"/></block></while>
  <expr_stmt><expr><call><name pos:line="88" pos:column="3">safe_fclose<pos:position pos:line="88" pos:column="14"/></name> <argument_list pos:line="88" pos:column="15">(<argument><expr><operator pos:line="88" pos:column="16">&amp;<pos:position pos:line="88" pos:column="21"/></operator><name pos:line="88" pos:column="17">smimeerr<pos:position pos:line="88" pos:column="25"/></name></expr></argument>)<pos:position pos:line="88" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="27"/></expr_stmt>

  <comment type="block" pos:line="90" pos:column="3">/* pause if there is any error output from SMIME */</comment>
  <if pos:line="91" pos:column="3">if <condition pos:line="91" pos:column="6">(<expr><name pos:line="91" pos:column="7">err<pos:position pos:line="91" pos:column="10"/></name></expr>)<pos:position pos:line="91" pos:column="11"/></condition><then pos:line="91" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="92" pos:column="5">mutt_any_key_to_continue<pos:position pos:line="92" pos:column="29"/></name> <argument_list pos:line="92" pos:column="30">(<argument><expr><name pos:line="92" pos:column="31">NULL<pos:position pos:line="92" pos:column="35"/></name></expr></argument>)<pos:position pos:line="92" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="37"/></expr_stmt></block></then></if>

  <if pos:line="94" pos:column="3">if <condition pos:line="94" pos:column="6">(<expr><name pos:line="94" pos:column="7">empty<pos:position pos:line="94" pos:column="12"/></name></expr>)<pos:position pos:line="94" pos:column="13"/></condition><then pos:line="94" pos:column="13">
  <block pos:line="95" pos:column="3">{
    <comment type="block" pos:line="96" pos:column="5">/* fatal error while trying to encrypt message */</comment>
    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><operator pos:line="97" pos:column="9">!<pos:position pos:line="97" pos:column="10"/></operator><name pos:line="97" pos:column="10">err<pos:position pos:line="97" pos:column="13"/></name></expr>)<pos:position pos:line="97" pos:column="14"/></condition><then pos:line="97" pos:column="14"> <block type="pseudo"><decl_stmt><decl><type><name pos:line="97" pos:column="15">mutt_any_key_to_continue<pos:position pos:line="97" pos:column="39"/></name></type> <name pos:line="97" pos:column="40">_<pos:position pos:line="97" pos:column="41"/></name><argument_list pos:line="97" pos:column="41">(<argument><expr><literal type="string" pos:line="97" pos:column="42">"No output from OpenSSL..."<pos:position pos:line="97" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="70"/></argument_list></decl>;<pos:position pos:line="97" pos:column="71"/></decl_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="98" pos:column="5">mutt_unlink<pos:position pos:line="98" pos:column="16"/></name> <argument_list pos:line="98" pos:column="17">(<argument><expr><name pos:line="98" pos:column="18">tempfile<pos:position pos:line="98" pos:column="26"/></name></expr></argument>)<pos:position pos:line="98" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="28"/></expr_stmt>
    <return pos:line="99" pos:column="5">return <expr><operator pos:line="99" pos:column="12">(<pos:position pos:line="99" pos:column="13"/></operator><name pos:line="99" pos:column="13">NULL<pos:position pos:line="99" pos:column="17"/></name><operator pos:line="99" pos:column="17">)<pos:position pos:line="99" pos:column="18"/></operator></expr>;<pos:position pos:line="99" pos:column="19"/></return>
  }<pos:position pos:line="100" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="102" pos:column="3">t<pos:position pos:line="102" pos:column="4"/></name> <operator pos:line="102" pos:column="5">=<pos:position pos:line="102" pos:column="6"/></operator> <call><name pos:line="102" pos:column="7">mutt_new_body<pos:position pos:line="102" pos:column="20"/></name> <argument_list pos:line="102" pos:column="21">()<pos:position pos:line="102" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="103" pos:column="3">t<pos:position pos:line="103" pos:column="4"/></name><operator pos:line="103" pos:column="4">-&gt;<pos:position pos:line="103" pos:column="9"/></operator><name pos:line="103" pos:column="6">type<pos:position pos:line="103" pos:column="10"/></name></name> <operator pos:line="103" pos:column="11">=<pos:position pos:line="103" pos:column="12"/></operator> <name pos:line="103" pos:column="13">TYPEAPPLICATION<pos:position pos:line="103" pos:column="28"/></name></expr>;<pos:position pos:line="103" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="104" pos:column="3">t<pos:position pos:line="104" pos:column="4"/></name><operator pos:line="104" pos:column="4">-&gt;<pos:position pos:line="104" pos:column="9"/></operator><name pos:line="104" pos:column="6">subtype<pos:position pos:line="104" pos:column="13"/></name></name> <operator pos:line="104" pos:column="14">=<pos:position pos:line="104" pos:column="15"/></operator> <call><name pos:line="104" pos:column="16">safe_strdup<pos:position pos:line="104" pos:column="27"/></name> <argument_list pos:line="104" pos:column="28">(<argument><expr><literal type="string" pos:line="104" pos:column="29">"x-pkcs7-mime"<pos:position pos:line="104" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="105" pos:column="3">mutt_set_parameter<pos:position pos:line="105" pos:column="21"/></name> <argument_list pos:line="105" pos:column="22">(<argument><expr><literal type="string" pos:line="105" pos:column="23">"name"<pos:position pos:line="105" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="31">"smime.p7m"<pos:position pos:line="105" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="105" pos:column="44">&amp;<pos:position pos:line="105" pos:column="49"/></operator><name><name pos:line="105" pos:column="45">t<pos:position pos:line="105" pos:column="46"/></name><operator pos:line="105" pos:column="46">-&gt;<pos:position pos:line="105" pos:column="51"/></operator><name pos:line="105" pos:column="48">parameter<pos:position pos:line="105" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="59"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="106" pos:column="3">mutt_set_parameter<pos:position pos:line="106" pos:column="21"/></name> <argument_list pos:line="106" pos:column="22">(<argument><expr><literal type="string" pos:line="106" pos:column="23">"smime-type"<pos:position pos:line="106" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="37">"enveloped-data"<pos:position pos:line="106" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="106" pos:column="55">&amp;<pos:position pos:line="106" pos:column="60"/></operator><name><name pos:line="106" pos:column="56">t<pos:position pos:line="106" pos:column="57"/></name><operator pos:line="106" pos:column="57">-&gt;<pos:position pos:line="106" pos:column="62"/></operator><name pos:line="106" pos:column="59">parameter<pos:position pos:line="106" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="70"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="107" pos:column="3">t<pos:position pos:line="107" pos:column="4"/></name><operator pos:line="107" pos:column="4">-&gt;<pos:position pos:line="107" pos:column="9"/></operator><name pos:line="107" pos:column="6">encoding<pos:position pos:line="107" pos:column="14"/></name></name> <operator pos:line="107" pos:column="15">=<pos:position pos:line="107" pos:column="16"/></operator> <name pos:line="107" pos:column="17">ENCBASE64<pos:position pos:line="107" pos:column="26"/></name></expr>;<pos:position pos:line="107" pos:column="27"/></expr_stmt>  <comment type="block" pos:line="107" pos:column="29">/* The output of OpenSSL SHOULD be binary */</comment>
  <expr_stmt><expr><name><name pos:line="108" pos:column="3">t<pos:position pos:line="108" pos:column="4"/></name><operator pos:line="108" pos:column="4">-&gt;<pos:position pos:line="108" pos:column="9"/></operator><name pos:line="108" pos:column="6">use_disp<pos:position pos:line="108" pos:column="14"/></name></name> <operator pos:line="108" pos:column="15">=<pos:position pos:line="108" pos:column="16"/></operator> <literal type="number" pos:line="108" pos:column="17">1<pos:position pos:line="108" pos:column="18"/></literal></expr>;<pos:position pos:line="108" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="109" pos:column="3">t<pos:position pos:line="109" pos:column="4"/></name><operator pos:line="109" pos:column="4">-&gt;<pos:position pos:line="109" pos:column="9"/></operator><name pos:line="109" pos:column="6">disposition<pos:position pos:line="109" pos:column="17"/></name></name> <operator pos:line="109" pos:column="18">=<pos:position pos:line="109" pos:column="19"/></operator> <name pos:line="109" pos:column="20">DISPATTACH<pos:position pos:line="109" pos:column="30"/></name></expr>;<pos:position pos:line="109" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="110" pos:column="3">t<pos:position pos:line="110" pos:column="4"/></name><operator pos:line="110" pos:column="4">-&gt;<pos:position pos:line="110" pos:column="9"/></operator><name pos:line="110" pos:column="6">d_filename<pos:position pos:line="110" pos:column="16"/></name></name> <operator pos:line="110" pos:column="17">=<pos:position pos:line="110" pos:column="18"/></operator> <call><name pos:line="110" pos:column="19">safe_strdup<pos:position pos:line="110" pos:column="30"/></name> <argument_list pos:line="110" pos:column="31">(<argument><expr><literal type="string" pos:line="110" pos:column="32">"smime.p7m"<pos:position pos:line="110" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="111" pos:column="3">t<pos:position pos:line="111" pos:column="4"/></name><operator pos:line="111" pos:column="4">-&gt;<pos:position pos:line="111" pos:column="9"/></operator><name pos:line="111" pos:column="6">filename<pos:position pos:line="111" pos:column="14"/></name></name> <operator pos:line="111" pos:column="15">=<pos:position pos:line="111" pos:column="16"/></operator> <call><name pos:line="111" pos:column="17">safe_strdup<pos:position pos:line="111" pos:column="28"/></name> <argument_list pos:line="111" pos:column="29">(<argument><expr><name pos:line="111" pos:column="30">tempfile<pos:position pos:line="111" pos:column="38"/></name></expr></argument>)<pos:position pos:line="111" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="112" pos:column="3">t<pos:position pos:line="112" pos:column="4"/></name><operator pos:line="112" pos:column="4">-&gt;<pos:position pos:line="112" pos:column="9"/></operator><name pos:line="112" pos:column="6">unlink<pos:position pos:line="112" pos:column="12"/></name></name> <operator pos:line="112" pos:column="13">=<pos:position pos:line="112" pos:column="14"/></operator> <literal type="number" pos:line="112" pos:column="15">1<pos:position pos:line="112" pos:column="16"/></literal></expr>;<pos:position pos:line="112" pos:column="17"/></expr_stmt> <comment type="block" pos:line="112" pos:column="18">/*delete after sending the message */</comment>
  <expr_stmt><expr><name><name pos:line="113" pos:column="3">t<pos:position pos:line="113" pos:column="4"/></name><operator pos:line="113" pos:column="4">-&gt;<pos:position pos:line="113" pos:column="9"/></operator><name pos:line="113" pos:column="6">parts<pos:position pos:line="113" pos:column="11"/></name></name><operator pos:line="113" pos:column="11">=<pos:position pos:line="113" pos:column="12"/></operator><literal type="number" pos:line="113" pos:column="12">0<pos:position pos:line="113" pos:column="13"/></literal></expr>;<pos:position pos:line="113" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="114" pos:column="3">t<pos:position pos:line="114" pos:column="4"/></name><operator pos:line="114" pos:column="4">-&gt;<pos:position pos:line="114" pos:column="9"/></operator><name pos:line="114" pos:column="6">next<pos:position pos:line="114" pos:column="10"/></name></name><operator pos:line="114" pos:column="10">=<pos:position pos:line="114" pos:column="11"/></operator><literal type="number" pos:line="114" pos:column="11">0<pos:position pos:line="114" pos:column="12"/></literal></expr>;<pos:position pos:line="114" pos:column="13"/></expr_stmt>
  
  <return pos:line="116" pos:column="3">return <expr><operator pos:line="116" pos:column="10">(<pos:position pos:line="116" pos:column="11"/></operator><name pos:line="116" pos:column="11">t<pos:position pos:line="116" pos:column="12"/></name><operator pos:line="116" pos:column="12">)<pos:position pos:line="116" pos:column="13"/></operator></expr>;<pos:position pos:line="116" pos:column="14"/></return>
}<pos:position pos:line="117" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_880_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">format_address_header<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier><modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">h<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">ADDRESS<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">a<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buf<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">HUGE_STRING<pos:position pos:line="3" pos:column="23"/></name></expr>]<pos:position pos:line="3" pos:column="24"/></index></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">cbuf<pos:position pos:line="4" pos:column="12"/></name><index pos:line="4" pos:column="12">[<expr><name pos:line="4" pos:column="13">STRING<pos:position pos:line="4" pos:column="19"/></name></expr>]<pos:position pos:line="4" pos:column="20"/></index></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">c2buf<pos:position pos:line="5" pos:column="13"/></name><index pos:line="5" pos:column="13">[<expr><name pos:line="5" pos:column="14">STRING<pos:position pos:line="5" pos:column="20"/></name></expr>]<pos:position pos:line="5" pos:column="21"/></index></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">p<pos:position pos:line="6" pos:column="10"/></name> <init pos:line="6" pos:column="11">= <expr><name pos:line="6" pos:column="13">NULL<pos:position pos:line="6" pos:column="17"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">l<pos:position pos:line="7" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="10">linelen<pos:position pos:line="7" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="19">buflen<pos:position pos:line="7" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="27">count<pos:position pos:line="7" pos:column="32"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="34">cbuflen<pos:position pos:line="7" pos:column="41"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="43">c2buflen<pos:position pos:line="7" pos:column="51"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="53">plen<pos:position pos:line="7" pos:column="57"/></name></decl>;<pos:position pos:line="7" pos:column="58"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">linelen<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <call><name pos:line="9" pos:column="13">mutt_strlen<pos:position pos:line="9" pos:column="24"/></name> <argument_list pos:line="9" pos:column="25">(<argument><expr><operator pos:line="9" pos:column="26">*<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">h<pos:position pos:line="9" pos:column="28"/></name></expr></argument>)<pos:position pos:line="9" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name pos:line="10" pos:column="3">plen<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <name pos:line="10" pos:column="10">linelen<pos:position pos:line="10" pos:column="17"/></name></expr>;<pos:position pos:line="10" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name pos:line="11" pos:column="3">buflen<pos:position pos:line="11" pos:column="9"/></name>  <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <name pos:line="11" pos:column="13">linelen<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">+<pos:position pos:line="11" pos:column="22"/></operator> <literal type="number" pos:line="11" pos:column="23">3<pos:position pos:line="11" pos:column="24"/></literal></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">safe_realloc<pos:position pos:line="13" pos:column="15"/></name> <argument_list pos:line="13" pos:column="16">(<argument><expr><name pos:line="13" pos:column="17">h<pos:position pos:line="13" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="20">buflen<pos:position pos:line="13" pos:column="26"/></name></expr></argument>)<pos:position pos:line="13" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="28"/></expr_stmt>
  <for pos:line="14" pos:column="3">for <control pos:line="14" pos:column="7">(<init><expr><name pos:line="14" pos:column="8">count<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></init> <condition><expr><name pos:line="14" pos:column="19">a<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></condition> <incr><expr><name pos:line="14" pos:column="22">a<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <name><name pos:line="14" pos:column="26">a<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">-&gt;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="29">next<pos:position pos:line="14" pos:column="33"/></name></name></expr><operator pos:line="14" pos:column="33">,<pos:position pos:line="14" pos:column="34"/></operator> <expr><name pos:line="14" pos:column="35">count<pos:position pos:line="14" pos:column="40"/></name><operator pos:line="14" pos:column="40">++<pos:position pos:line="14" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="43"/></control>
  <block pos:line="15" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">ADDRESS<pos:position pos:line="16" pos:column="12"/></name> <modifier pos:line="16" pos:column="13">*<pos:position pos:line="16" pos:column="14"/></modifier></type><name pos:line="16" pos:column="14">tmp<pos:position pos:line="16" pos:column="17"/></name> <init pos:line="16" pos:column="18">= <expr><name><name pos:line="16" pos:column="20">a<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">-&gt;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="23">next<pos:position pos:line="16" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="16" pos:column="28"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">a<pos:position pos:line="17" pos:column="6"/></name><operator pos:line="17" pos:column="6">-&gt;<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="8">next<pos:position pos:line="17" pos:column="12"/></name></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <name pos:line="17" pos:column="15">NULL<pos:position pos:line="17" pos:column="19"/></name></expr>;<pos:position pos:line="17" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="18" pos:column="5">*<pos:position pos:line="18" pos:column="6"/></operator><name pos:line="18" pos:column="6">buf<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <operator pos:line="18" pos:column="12">*<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">cbuf<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <operator pos:line="18" pos:column="20">*<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="21">c2buf<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">=<pos:position pos:line="18" pos:column="28"/></operator> <literal type="char" pos:line="18" pos:column="29">'\0'<pos:position pos:line="18" pos:column="33"/></literal></expr>;<pos:position pos:line="18" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">l<pos:position pos:line="19" pos:column="6"/></name> <operator pos:line="19" pos:column="7">=<pos:position pos:line="19" pos:column="8"/></operator> <call><name pos:line="19" pos:column="9">rfc822_write_address<pos:position pos:line="19" pos:column="29"/></name> <argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">buf<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="36">sizeof <argument_list pos:line="19" pos:column="43">(<argument><expr><name pos:line="19" pos:column="44">buf<pos:position pos:line="19" pos:column="47"/></name></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="19" pos:column="50">a<pos:position pos:line="19" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="53">0<pos:position pos:line="19" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">a<pos:position pos:line="20" pos:column="6"/></name><operator pos:line="20" pos:column="6">-&gt;<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="8">next<pos:position pos:line="20" pos:column="12"/></name></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <name pos:line="20" pos:column="15">tmp<pos:position pos:line="20" pos:column="18"/></name></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>
    
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">count<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">&amp;&amp;<pos:position pos:line="22" pos:column="25"/></operator> <name pos:line="22" pos:column="18">linelen<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">+<pos:position pos:line="22" pos:column="27"/></operator> <name pos:line="22" pos:column="28">l<pos:position pos:line="22" pos:column="29"/></name> <operator pos:line="22" pos:column="30">&gt;<pos:position pos:line="22" pos:column="34"/></operator> <literal type="number" pos:line="22" pos:column="32">74<pos:position pos:line="22" pos:column="34"/></literal></expr>)<pos:position pos:line="22" pos:column="35"/></condition><then pos:line="22" pos:column="35"> 
    <block pos:line="23" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">strcpy<pos:position pos:line="24" pos:column="13"/></name> <argument_list pos:line="24" pos:column="14">(<argument><expr><name pos:line="24" pos:column="15">cbuf<pos:position pos:line="24" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="21">"\n\t"<pos:position pos:line="24" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>  	<comment type="block" pos:line="24" pos:column="33">/* __STRCPY_CHECKED__ */</comment>
      <expr_stmt><expr><name pos:line="25" pos:column="7">linelen<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <name pos:line="25" pos:column="17">l<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">+<pos:position pos:line="25" pos:column="20"/></operator> <literal type="number" pos:line="25" pos:column="21">8<pos:position pos:line="25" pos:column="22"/></literal></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then>
    <else pos:line="27" pos:column="5">else
    <block pos:line="28" pos:column="5">{
      <if pos:line="29" pos:column="7">if <condition pos:line="29" pos:column="10">(<expr><name><name pos:line="29" pos:column="11">a<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">-&gt;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="14">mailbox<pos:position pos:line="29" pos:column="21"/></name></name></expr>)<pos:position pos:line="29" pos:column="22"/></condition><then pos:line="29" pos:column="22">
      <block pos:line="30" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">strcpy<pos:position pos:line="31" pos:column="15"/></name> <argument_list pos:line="31" pos:column="16">(<argument><expr><name pos:line="31" pos:column="17">cbuf<pos:position pos:line="31" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="23">" "<pos:position pos:line="31" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="28"/></expr_stmt>	<comment type="block" pos:line="31" pos:column="33">/* __STRCPY_CHECKED__ */</comment>
	<expr_stmt><expr><name pos:line="32" pos:column="9">linelen<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">++<pos:position pos:line="32" pos:column="18"/></operator></expr>;<pos:position pos:line="32" pos:column="19"/></expr_stmt>
      }<pos:position pos:line="33" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="34" pos:column="7">linelen<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">+=<pos:position pos:line="34" pos:column="17"/></operator> <name pos:line="34" pos:column="18">l<pos:position pos:line="34" pos:column="19"/></name></expr>;<pos:position pos:line="34" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></else></if>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><operator pos:line="36" pos:column="9">!<pos:position pos:line="36" pos:column="10"/></operator><name><name pos:line="36" pos:column="10">a<pos:position pos:line="36" pos:column="11"/></name><operator pos:line="36" pos:column="11">-&gt;<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="13">group<pos:position pos:line="36" pos:column="18"/></name></name> <operator pos:line="36" pos:column="19">&amp;&amp;<pos:position pos:line="36" pos:column="29"/></operator> <name><name pos:line="36" pos:column="22">a<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">-&gt;<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="25">next<pos:position pos:line="36" pos:column="29"/></name></name> <operator pos:line="36" pos:column="30">&amp;&amp;<pos:position pos:line="36" pos:column="40"/></operator> <name><name pos:line="36" pos:column="33">a<pos:position pos:line="36" pos:column="34"/></name><operator pos:line="36" pos:column="34">-&gt;<pos:position pos:line="36" pos:column="39"/></operator><name pos:line="36" pos:column="36">next<pos:position pos:line="36" pos:column="40"/></name><operator pos:line="36" pos:column="40">-&gt;<pos:position pos:line="36" pos:column="45"/></operator><name pos:line="36" pos:column="42">mailbox<pos:position pos:line="36" pos:column="49"/></name></name></expr>)<pos:position pos:line="36" pos:column="50"/></condition><then pos:line="36" pos:column="50">
    <block pos:line="37" pos:column="5">{
      <expr_stmt><expr><name pos:line="38" pos:column="7">linelen<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">++<pos:position pos:line="38" pos:column="16"/></operator></expr>;<pos:position pos:line="38" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name pos:line="39" pos:column="7">buflen<pos:position pos:line="39" pos:column="13"/></name><operator pos:line="39" pos:column="13">++<pos:position pos:line="39" pos:column="15"/></operator></expr>;<pos:position pos:line="39" pos:column="16"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">strcpy<pos:position pos:line="40" pos:column="13"/></name> <argument_list pos:line="40" pos:column="14">(<argument><expr><name pos:line="40" pos:column="15">c2buf<pos:position pos:line="40" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="22">","<pos:position pos:line="40" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="27"/></expr_stmt>	<comment type="block" pos:line="40" pos:column="33">/* __STRCPY_CHECKED__ */</comment>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="43" pos:column="5">cbuflen<pos:position pos:line="43" pos:column="12"/></name> <operator pos:line="43" pos:column="13">=<pos:position pos:line="43" pos:column="14"/></operator> <call><name pos:line="43" pos:column="15">mutt_strlen<pos:position pos:line="43" pos:column="26"/></name> <argument_list pos:line="43" pos:column="27">(<argument><expr><name pos:line="43" pos:column="28">cbuf<pos:position pos:line="43" pos:column="32"/></name></expr></argument>)<pos:position pos:line="43" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="44" pos:column="5">c2buflen<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <call><name pos:line="44" pos:column="16">mutt_strlen<pos:position pos:line="44" pos:column="27"/></name> <argument_list pos:line="44" pos:column="28">(<argument><expr><name pos:line="44" pos:column="29">c2buf<pos:position pos:line="44" pos:column="34"/></name></expr></argument>)<pos:position pos:line="44" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="45" pos:column="5">buflen<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">+=<pos:position pos:line="45" pos:column="14"/></operator> <name pos:line="45" pos:column="15">l<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">+<pos:position pos:line="45" pos:column="18"/></operator> <name pos:line="45" pos:column="19">cbuflen<pos:position pos:line="45" pos:column="26"/></name> <operator pos:line="45" pos:column="27">+<pos:position pos:line="45" pos:column="28"/></operator> <name pos:line="45" pos:column="29">c2buflen<pos:position pos:line="45" pos:column="37"/></name></expr>;<pos:position pos:line="45" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">safe_realloc<pos:position pos:line="46" pos:column="17"/></name> <argument_list pos:line="46" pos:column="18">(<argument><expr><name pos:line="46" pos:column="19">h<pos:position pos:line="46" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="22">buflen<pos:position pos:line="46" pos:column="28"/></name></expr></argument>)<pos:position pos:line="46" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="47" pos:column="5">p<pos:position pos:line="47" pos:column="6"/></name> <operator pos:line="47" pos:column="7">=<pos:position pos:line="47" pos:column="8"/></operator> <operator pos:line="47" pos:column="9">*<pos:position pos:line="47" pos:column="10"/></operator><name pos:line="47" pos:column="10">h<pos:position pos:line="47" pos:column="11"/></name></expr>;<pos:position pos:line="47" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">strcat<pos:position pos:line="48" pos:column="11"/></name> <argument_list pos:line="48" pos:column="12">(<argument><expr><name pos:line="48" pos:column="13">p<pos:position pos:line="48" pos:column="14"/></name> <operator pos:line="48" pos:column="15">+<pos:position pos:line="48" pos:column="16"/></operator> <name pos:line="48" pos:column="17">plen<pos:position pos:line="48" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="23">cbuf<pos:position pos:line="48" pos:column="27"/></name></expr></argument>)<pos:position pos:line="48" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="29"/></expr_stmt>		<comment type="block" pos:line="48" pos:column="41">/* __STRCAT_CHECKED__ */</comment>
    <expr_stmt><expr><name pos:line="49" pos:column="5">plen<pos:position pos:line="49" pos:column="9"/></name> <operator pos:line="49" pos:column="10">+=<pos:position pos:line="49" pos:column="12"/></operator> <name pos:line="49" pos:column="13">cbuflen<pos:position pos:line="49" pos:column="20"/></name></expr>;<pos:position pos:line="49" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">strcat<pos:position pos:line="50" pos:column="11"/></name> <argument_list pos:line="50" pos:column="12">(<argument><expr><name pos:line="50" pos:column="13">p<pos:position pos:line="50" pos:column="14"/></name> <operator pos:line="50" pos:column="15">+<pos:position pos:line="50" pos:column="16"/></operator> <name pos:line="50" pos:column="17">plen<pos:position pos:line="50" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="23">buf<pos:position pos:line="50" pos:column="26"/></name></expr></argument>)<pos:position pos:line="50" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="28"/></expr_stmt>		<comment type="block" pos:line="50" pos:column="41">/* __STRCAT_CHECKED__ */</comment>
    <expr_stmt><expr><name pos:line="51" pos:column="5">plen<pos:position pos:line="51" pos:column="9"/></name> <operator pos:line="51" pos:column="10">+=<pos:position pos:line="51" pos:column="12"/></operator> <name pos:line="51" pos:column="13">l<pos:position pos:line="51" pos:column="14"/></name></expr>;<pos:position pos:line="51" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">strcat<pos:position pos:line="52" pos:column="11"/></name> <argument_list pos:line="52" pos:column="12">(<argument><expr><name pos:line="52" pos:column="13">p<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">+<pos:position pos:line="52" pos:column="16"/></operator> <name pos:line="52" pos:column="17">plen<pos:position pos:line="52" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="23">c2buf<pos:position pos:line="52" pos:column="28"/></name></expr></argument>)<pos:position pos:line="52" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="30"/></expr_stmt>		<comment type="block" pos:line="52" pos:column="41">/* __STRCAT_CHECKED__ */</comment>
    <expr_stmt><expr><name pos:line="53" pos:column="5">plen<pos:position pos:line="53" pos:column="9"/></name> <operator pos:line="53" pos:column="10">+=<pos:position pos:line="53" pos:column="12"/></operator> <name pos:line="53" pos:column="13">c2buflen<pos:position pos:line="53" pos:column="21"/></name></expr>;<pos:position pos:line="53" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="54" pos:column="4"/></block></for>
  
  <comment type="block" pos:line="56" pos:column="3">/* Space for this was allocated in the beginning of this function. */</comment>
  <expr_stmt><expr><call><name pos:line="57" pos:column="3">strcat<pos:position pos:line="57" pos:column="9"/></name> <argument_list pos:line="57" pos:column="10">(<argument><expr><name pos:line="57" pos:column="11">p<pos:position pos:line="57" pos:column="12"/></name> <operator pos:line="57" pos:column="13">+<pos:position pos:line="57" pos:column="14"/></operator> <name pos:line="57" pos:column="15">plen<pos:position pos:line="57" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="21">"\n"<pos:position pos:line="57" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="27"/></expr_stmt>		<comment type="block" pos:line="57" pos:column="41">/* __STRCAT_CHECKED__ */</comment>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

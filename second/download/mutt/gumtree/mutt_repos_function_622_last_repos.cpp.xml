<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_622_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">wcwidth<pos:position pos:line="1" pos:column="12"/></name> <parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><name pos:line="1" pos:column="14">wchar_t<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">wc<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="25"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><operator pos:line="3" pos:column="7">!<pos:position pos:line="3" pos:column="8"/></operator><name pos:line="3" pos:column="8">Charset_is_utf8<pos:position pos:line="3" pos:column="23"/></name></expr>)<pos:position pos:line="3" pos:column="24"/></condition><then pos:line="3" pos:column="24">
  <block pos:line="4" pos:column="3">{
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">charset_is_ja<pos:position pos:line="5" pos:column="23"/></name></expr>)<pos:position pos:line="5" pos:column="24"/></condition><then pos:line="5" pos:column="24">
    <block pos:line="6" pos:column="5">{
      <comment type="block" pos:line="7" pos:column="7">/* 8-bit case */</comment>
      <if pos:line="8" pos:column="7">if <condition pos:line="8" pos:column="10">(<expr><operator pos:line="8" pos:column="11">!<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="12">wc<pos:position pos:line="8" pos:column="14"/></name></expr>)<pos:position pos:line="8" pos:column="15"/></condition><then pos:line="8" pos:column="15">
	<block type="pseudo"><return pos:line="9" pos:column="9">return <expr><literal type="number" pos:line="9" pos:column="16">0<pos:position pos:line="9" pos:column="17"/></literal></expr>;<pos:position pos:line="9" pos:column="18"/></return></block></then>
      <elseif pos:line="10" pos:column="7">else <if pos:line="10" pos:column="12">if <condition pos:line="10" pos:column="15">(<expr><operator pos:line="10" pos:column="16">(<pos:position pos:line="10" pos:column="17"/></operator><literal type="number" pos:line="10" pos:column="17">0<pos:position pos:line="10" pos:column="18"/></literal> <operator pos:line="10" pos:column="19">&lt;=<pos:position pos:line="10" pos:column="24"/></operator> <name pos:line="10" pos:column="22">wc<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">&amp;&amp;<pos:position pos:line="10" pos:column="35"/></operator> <name pos:line="10" pos:column="28">wc<pos:position pos:line="10" pos:column="30"/></name> <operator pos:line="10" pos:column="31">&lt;<pos:position pos:line="10" pos:column="35"/></operator> <literal type="number" pos:line="10" pos:column="33">256<pos:position pos:line="10" pos:column="36"/></literal><operator pos:line="10" pos:column="36">)<pos:position pos:line="10" pos:column="37"/></operator> <operator pos:line="10" pos:column="38">&amp;&amp;<pos:position pos:line="10" pos:column="48"/></operator> <call><name pos:line="10" pos:column="41">IsPrint<pos:position pos:line="10" pos:column="48"/></name> <argument_list pos:line="10" pos:column="49">(<argument><expr><name pos:line="10" pos:column="50">wc<pos:position pos:line="10" pos:column="52"/></name></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="54"/></condition><then pos:line="10" pos:column="54">
	<block type="pseudo"><return pos:line="11" pos:column="9">return <expr><literal type="number" pos:line="11" pos:column="16">1<pos:position pos:line="11" pos:column="17"/></literal></expr>;<pos:position pos:line="11" pos:column="18"/></return></block></then></if></elseif>
      <else pos:line="12" pos:column="7">else
	<block type="pseudo"><return pos:line="13" pos:column="9">return <expr><operator pos:line="13" pos:column="16">-<pos:position pos:line="13" pos:column="17"/></operator><literal type="number" pos:line="13" pos:column="17">1<pos:position pos:line="13" pos:column="18"/></literal></expr>;<pos:position pos:line="13" pos:column="19"/></return></block></else></if>
    }<pos:position pos:line="14" pos:column="6"/></block></then>
    <else pos:line="15" pos:column="5">else
    <block pos:line="16" pos:column="5">{
      <comment type="block" pos:line="17" pos:column="7">/* Japanese */</comment>
      <decl_stmt><decl><type><name pos:line="18" pos:column="7">int<pos:position pos:line="18" pos:column="10"/></name></type> <name pos:line="18" pos:column="11">k<pos:position pos:line="18" pos:column="12"/></name> <init pos:line="18" pos:column="13">= <expr><call><name pos:line="18" pos:column="15">wcwidth_ja<pos:position pos:line="18" pos:column="25"/></name> <argument_list pos:line="18" pos:column="26">(<argument><expr><name pos:line="18" pos:column="27">wc<pos:position pos:line="18" pos:column="29"/></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="31"/></decl_stmt>
      <if pos:line="19" pos:column="7">if <condition pos:line="19" pos:column="10">(<expr><name pos:line="19" pos:column="11">k<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">!=<pos:position pos:line="19" pos:column="15"/></operator> <operator pos:line="19" pos:column="16">-<pos:position pos:line="19" pos:column="17"/></operator><literal type="number" pos:line="19" pos:column="17">1<pos:position pos:line="19" pos:column="18"/></literal></expr>)<pos:position pos:line="19" pos:column="19"/></condition><then pos:line="19" pos:column="19">
	<block type="pseudo"><return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">k<pos:position pos:line="20" pos:column="17"/></name></expr>;<pos:position pos:line="20" pos:column="18"/></return></block></then></if>
    }<pos:position pos:line="21" pos:column="6"/></block></else></if>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>
  <return pos:line="23" pos:column="3">return <expr><call><name pos:line="23" pos:column="10">wcwidth_ucs<pos:position pos:line="23" pos:column="21"/></name> <argument_list pos:line="23" pos:column="22">(<argument><expr><name pos:line="23" pos:column="23">wc<pos:position pos:line="23" pos:column="25"/></name></expr></argument>)<pos:position pos:line="23" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="27"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

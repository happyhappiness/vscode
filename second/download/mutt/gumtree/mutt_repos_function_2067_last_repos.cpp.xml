<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2067_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">imap_get_mailbox<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name><modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type> <name pos:line="1" pos:column="42">path<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">IMAP_DATA<pos:position pos:line="1" pos:column="57"/></name><modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier><modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type> <name pos:line="1" pos:column="60">hidata<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="68">char<pos:position pos:line="1" pos:column="72"/></name><modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type> <name pos:line="1" pos:column="74">buf<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="79">size_t<pos:position pos:line="1" pos:column="85"/></name></type> <name pos:line="1" pos:column="86">blen<pos:position pos:line="1" pos:column="90"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="91"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">IMAP_MBOX<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">mx<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name pos:line="5" pos:column="7">imap_parse_path<pos:position pos:line="5" pos:column="22"/></name> <argument_list pos:line="5" pos:column="23">(<argument><expr><name pos:line="5" pos:column="24">path<pos:position pos:line="5" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="30">&amp;<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="31">mx<pos:position pos:line="5" pos:column="33"/></name></expr></argument>)<pos:position pos:line="5" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="35"/></condition><then pos:line="5" pos:column="35">
  <block pos:line="6" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">dprint<pos:position pos:line="7" pos:column="11"/></name> <argument_list pos:line="7" pos:column="12">(<argument><expr><literal type="number" pos:line="7" pos:column="13">1<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="16">(<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">debugfile<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">,<pos:position pos:line="7" pos:column="27"/></operator> <literal type="string" pos:line="7" pos:column="28">"imap_get_mailbox: Error parsing %s\n"<pos:position pos:line="7" pos:column="66"/></literal><operator pos:line="7" pos:column="66">,<pos:position pos:line="7" pos:column="67"/></operator> <name pos:line="7" pos:column="68">path<pos:position pos:line="7" pos:column="72"/></name><operator pos:line="7" pos:column="72">)<pos:position pos:line="7" pos:column="73"/></operator></expr></argument>)<pos:position pos:line="7" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="75"/></expr_stmt>
    <return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">-<pos:position pos:line="8" pos:column="13"/></operator><literal type="number" pos:line="8" pos:column="13">1<pos:position pos:line="8" pos:column="14"/></literal></expr>;<pos:position pos:line="8" pos:column="15"/></return>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">!<pos:position pos:line="10" pos:column="8"/></operator><operator pos:line="10" pos:column="8">(<pos:position pos:line="10" pos:column="9"/></operator><operator pos:line="10" pos:column="9">*<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">hidata<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <call><name pos:line="10" pos:column="19">imap_conn_find<pos:position pos:line="10" pos:column="33"/></name> <argument_list pos:line="10" pos:column="34">(<argument><expr><operator pos:line="10" pos:column="35">&amp;<pos:position pos:line="10" pos:column="40"/></operator><operator pos:line="10" pos:column="36">(<pos:position pos:line="10" pos:column="37"/></operator><name><name pos:line="10" pos:column="37">mx<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">.<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">account<pos:position pos:line="10" pos:column="47"/></name></name><operator pos:line="10" pos:column="47">)<pos:position pos:line="10" pos:column="48"/></operator></expr></argument>, <argument><expr><ternary><condition><expr><call><name pos:line="10" pos:column="50">option<pos:position pos:line="10" pos:column="56"/></name> <argument_list pos:line="10" pos:column="57">(<argument><expr><name pos:line="10" pos:column="58">OPTIMAPPASSIVE<pos:position pos:line="10" pos:column="72"/></name></expr></argument>)<pos:position pos:line="10" pos:column="73"/></argument_list></call></expr> ?<pos:position pos:line="10" pos:column="75"/></condition><then pos:line="10" pos:column="75"> <expr><name pos:line="10" pos:column="76">MUTT_IMAP_CONN_NONEW<pos:position pos:line="10" pos:column="96"/></name></expr> <pos:position pos:line="10" pos:column="97"/></then><else pos:line="10" pos:column="97">: <expr><literal type="number" pos:line="10" pos:column="99">0<pos:position pos:line="10" pos:column="100"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="10" pos:column="101"/></argument_list></call><operator pos:line="10" pos:column="101">)<pos:position pos:line="10" pos:column="102"/></operator>
      <operator pos:line="11" pos:column="7">||<pos:position pos:line="11" pos:column="9"/></operator> <name><operator pos:line="11" pos:column="10">(<pos:position pos:line="11" pos:column="11"/></operator><operator pos:line="11" pos:column="11">*<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">hidata<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">)<pos:position pos:line="11" pos:column="19"/></operator><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">state<pos:position pos:line="11" pos:column="26"/></name></name> <operator pos:line="11" pos:column="27">&lt;<pos:position pos:line="11" pos:column="31"/></operator> <name pos:line="11" pos:column="29">IMAP_AUTHENTICATED<pos:position pos:line="11" pos:column="47"/></name></expr>)<pos:position pos:line="11" pos:column="48"/></condition><then pos:line="11" pos:column="48">
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">FREE<pos:position pos:line="13" pos:column="9"/></name> <argument_list pos:line="13" pos:column="10">(<argument><expr><operator pos:line="13" pos:column="11">&amp;<pos:position pos:line="13" pos:column="16"/></operator><name><name pos:line="13" pos:column="12">mx<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">.<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">mbox<pos:position pos:line="13" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="21"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">-<pos:position pos:line="14" pos:column="13"/></operator><literal type="number" pos:line="14" pos:column="13">1<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">imap_fix_path<pos:position pos:line="17" pos:column="16"/></name> <argument_list pos:line="17" pos:column="17">(<argument><expr><operator pos:line="17" pos:column="18">*<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="19">hidata<pos:position pos:line="17" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="27">mx<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">.<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="30">mbox<pos:position pos:line="17" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="36">buf<pos:position pos:line="17" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="41">blen<pos:position pos:line="17" pos:column="45"/></name></expr></argument>)<pos:position pos:line="17" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="47"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">!<pos:position pos:line="18" pos:column="8"/></operator><operator pos:line="18" pos:column="8">*<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="9">buf<pos:position pos:line="18" pos:column="12"/></name></expr>)<pos:position pos:line="18" pos:column="13"/></condition><then pos:line="18" pos:column="13">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="5">strfcpy<pos:position pos:line="19" pos:column="12"/></name> <argument_list pos:line="19" pos:column="13">(<argument><expr><name pos:line="19" pos:column="14">buf<pos:position pos:line="19" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="19">"INBOX"<pos:position pos:line="19" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="28">blen<pos:position pos:line="19" pos:column="32"/></name></expr></argument>)<pos:position pos:line="19" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">FREE<pos:position pos:line="20" pos:column="7"/></name> <argument_list pos:line="20" pos:column="8">(<argument><expr><operator pos:line="20" pos:column="9">&amp;<pos:position pos:line="20" pos:column="14"/></operator><name><name pos:line="20" pos:column="10">mx<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">.<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">mbox<pos:position pos:line="20" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>

  <return pos:line="22" pos:column="3">return <expr><literal type="number" pos:line="22" pos:column="10">0<pos:position pos:line="22" pos:column="11"/></literal></expr>;<pos:position pos:line="22" pos:column="12"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

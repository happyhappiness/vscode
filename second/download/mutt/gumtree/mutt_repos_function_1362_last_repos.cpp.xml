<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1362_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">mutt_generate_recvattach_list<pos:position pos:line="1" pos:column="42"/></name> <parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">ATTACH_CONTEXT<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">actx<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
                                           <parameter><decl><type><name pos:line="2" pos:column="44">HEADER<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">hdr<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>,
                                           <parameter><decl><type><name pos:line="3" pos:column="44">BODY<pos:position pos:line="3" pos:column="48"/></name> <modifier pos:line="3" pos:column="49">*<pos:position pos:line="3" pos:column="50"/></modifier></type><name pos:line="3" pos:column="50">m<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>,
                                           <parameter><decl><type><name pos:line="4" pos:column="44">FILE<pos:position pos:line="4" pos:column="48"/></name> <modifier pos:line="4" pos:column="49">*<pos:position pos:line="4" pos:column="50"/></modifier></type><name pos:line="4" pos:column="50">fp<pos:position pos:line="4" pos:column="52"/></name></decl></parameter>,
                                           <parameter><decl><type><name pos:line="5" pos:column="44">int<pos:position pos:line="5" pos:column="47"/></name></type> <name pos:line="5" pos:column="48">parent_type<pos:position pos:line="5" pos:column="59"/></name></decl></parameter>,
                                           <parameter><decl><type><name pos:line="6" pos:column="44">int<pos:position pos:line="6" pos:column="47"/></name></type> <name pos:line="6" pos:column="48">level<pos:position pos:line="6" pos:column="53"/></name></decl></parameter>,
                                           <parameter><decl><type><name pos:line="7" pos:column="44">int<pos:position pos:line="7" pos:column="47"/></name></type> <name pos:line="7" pos:column="48">decrypted<pos:position pos:line="7" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="58"/></parameter_list>
<block pos:line="8" pos:column="1">{
  <expr_stmt><expr><name pos:line="9" pos:column="3">ATTACHPTR<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></operator><operator pos:line="9" pos:column="14">new<pos:position pos:line="9" pos:column="17"/></operator></expr>;<pos:position pos:line="9" pos:column="18"/></expr_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">BODY<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">new_body<pos:position pos:line="10" pos:column="17"/></name> <init pos:line="10" pos:column="18">= <expr><name pos:line="10" pos:column="20">NULL<pos:position pos:line="10" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">FILE<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">new_fp<pos:position pos:line="11" pos:column="15"/></name> <init pos:line="11" pos:column="16">= <expr><name pos:line="11" pos:column="18">NULL<pos:position pos:line="11" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">need_secured<pos:position pos:line="12" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="21">secured<pos:position pos:line="12" pos:column="28"/></name></decl>;<pos:position pos:line="12" pos:column="29"/></decl_stmt>

  <for pos:line="14" pos:column="3">for <control pos:line="14" pos:column="7">(<init pos:line="14" pos:column="8">;<pos:position pos:line="14" pos:column="9"/></init> <condition><expr><name pos:line="14" pos:column="10">m<pos:position pos:line="14" pos:column="11"/></name></expr>;<pos:position pos:line="14" pos:column="12"/></condition> <incr><expr><name pos:line="14" pos:column="13">m<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <name><name pos:line="14" pos:column="17">m<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">next<pos:position pos:line="14" pos:column="24"/></name></name></expr></incr>)<pos:position pos:line="14" pos:column="25"/></control>
  <block pos:line="15" pos:column="3">{
    <expr_stmt><expr><name pos:line="16" pos:column="5">need_secured<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <name pos:line="16" pos:column="20">secured<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">=<pos:position pos:line="16" pos:column="29"/></operator> <literal type="number" pos:line="16" pos:column="30">0<pos:position pos:line="16" pos:column="31"/></literal></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">WithCrypto<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">&amp;<pos:position pos:line="18" pos:column="26"/></operator> <name pos:line="18" pos:column="23">APPLICATION_SMIME<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">)<pos:position pos:line="18" pos:column="41"/></operator> <operator pos:line="18" pos:column="42">&amp;&amp;<pos:position pos:line="18" pos:column="52"/></operator>
        <call><name pos:line="19" pos:column="9">mutt_is_application_smime<pos:position pos:line="19" pos:column="34"/></name> <argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">m<pos:position pos:line="19" pos:column="37"/></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="39"/></condition><then pos:line="19" pos:column="39">
    <block pos:line="20" pos:column="5">{
      <expr_stmt><expr><name pos:line="21" pos:column="7">need_secured<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <literal type="number" pos:line="21" pos:column="22">1<pos:position pos:line="21" pos:column="23"/></literal></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>

      <if pos:line="23" pos:column="7">if <condition pos:line="23" pos:column="10">(<expr><operator pos:line="23" pos:column="11">!<pos:position pos:line="23" pos:column="12"/></operator><call><name pos:line="23" pos:column="12">crypt_valid_passphrase<pos:position pos:line="23" pos:column="34"/></name> <argument_list pos:line="23" pos:column="35">(<argument><expr><name pos:line="23" pos:column="36">APPLICATION_SMIME<pos:position pos:line="23" pos:column="53"/></name></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="55"/></condition><then pos:line="23" pos:column="55">
        <block type="pseudo"><goto pos:line="24" pos:column="9">goto <name pos:line="24" pos:column="14">decrypt_failed<pos:position pos:line="24" pos:column="28"/></name>;<pos:position pos:line="24" pos:column="29"/></goto></block></then></if>

      <if pos:line="26" pos:column="7">if <condition pos:line="26" pos:column="10">(<expr><name><name pos:line="26" pos:column="11">hdr<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">-&gt;<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="16">env<pos:position pos:line="26" pos:column="19"/></name></name></expr>)<pos:position pos:line="26" pos:column="20"/></condition><then pos:line="26" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="9">crypt_smime_getkeys<pos:position pos:line="27" pos:column="28"/></name> <argument_list pos:line="27" pos:column="29">(<argument><expr><name><name pos:line="27" pos:column="30">hdr<pos:position pos:line="27" pos:column="33"/></name><operator pos:line="27" pos:column="33">-&gt;<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="35">env<pos:position pos:line="27" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="40"/></expr_stmt></block></then></if>

      <expr_stmt><expr><name pos:line="29" pos:column="7">secured<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator> <operator pos:line="29" pos:column="17">!<pos:position pos:line="29" pos:column="18"/></operator><call><name pos:line="29" pos:column="18">crypt_smime_decrypt_mime<pos:position pos:line="29" pos:column="42"/></name> <argument_list pos:line="29" pos:column="43">(<argument><expr><name pos:line="29" pos:column="44">fp<pos:position pos:line="29" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="48">&amp;<pos:position pos:line="29" pos:column="53"/></operator><name pos:line="29" pos:column="49">new_fp<pos:position pos:line="29" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="57">m<pos:position pos:line="29" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="60">&amp;<pos:position pos:line="29" pos:column="65"/></operator><name pos:line="29" pos:column="61">new_body<pos:position pos:line="29" pos:column="69"/></name></expr></argument>)<pos:position pos:line="29" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="71"/></expr_stmt>

      <comment type="block" pos:line="31" pos:column="7">/* S/MIME nesting */</comment>
      <if pos:line="32" pos:column="7">if <condition pos:line="32" pos:column="10">(<expr><operator pos:line="32" pos:column="11">(<pos:position pos:line="32" pos:column="12"/></operator><call><name pos:line="32" pos:column="12">mutt_is_application_smime<pos:position pos:line="32" pos:column="37"/></name> <argument_list pos:line="32" pos:column="38">(<argument><expr><name pos:line="32" pos:column="39">new_body<pos:position pos:line="32" pos:column="47"/></name></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call> <operator pos:line="32" pos:column="49">&amp;<pos:position pos:line="32" pos:column="54"/></operator> <name pos:line="32" pos:column="51">SMIMEOPAQUE<pos:position pos:line="32" pos:column="62"/></name><operator pos:line="32" pos:column="62">)<pos:position pos:line="32" pos:column="63"/></operator></expr>)<pos:position pos:line="32" pos:column="64"/></condition><then pos:line="32" pos:column="64">
      <block pos:line="33" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="34" pos:column="9">BODY<pos:position pos:line="34" pos:column="13"/></name> <modifier pos:line="34" pos:column="14">*<pos:position pos:line="34" pos:column="15"/></modifier></type><name pos:line="34" pos:column="15">outer_new_body<pos:position pos:line="34" pos:column="29"/></name> <init pos:line="34" pos:column="30">= <expr><name pos:line="34" pos:column="32">new_body<pos:position pos:line="34" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="34" pos:column="41"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="35" pos:column="9">FILE<pos:position pos:line="35" pos:column="13"/></name> <modifier pos:line="35" pos:column="14">*<pos:position pos:line="35" pos:column="15"/></modifier></type><name pos:line="35" pos:column="15">outer_fp<pos:position pos:line="35" pos:column="23"/></name> <init pos:line="35" pos:column="24">= <expr><name pos:line="35" pos:column="26">new_fp<pos:position pos:line="35" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="35" pos:column="33"/></decl_stmt>

        <expr_stmt><expr><name pos:line="37" pos:column="9">new_body<pos:position pos:line="37" pos:column="17"/></name> <operator pos:line="37" pos:column="18">=<pos:position pos:line="37" pos:column="19"/></operator> <name pos:line="37" pos:column="20">NULL<pos:position pos:line="37" pos:column="24"/></name></expr>;<pos:position pos:line="37" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="38" pos:column="9">new_fp<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <name pos:line="38" pos:column="18">NULL<pos:position pos:line="38" pos:column="22"/></name></expr>;<pos:position pos:line="38" pos:column="23"/></expr_stmt>

        <expr_stmt><expr><name pos:line="40" pos:column="9">secured<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">=<pos:position pos:line="40" pos:column="18"/></operator> <operator pos:line="40" pos:column="19">!<pos:position pos:line="40" pos:column="20"/></operator><call><name pos:line="40" pos:column="20">crypt_smime_decrypt_mime<pos:position pos:line="40" pos:column="44"/></name> <argument_list pos:line="40" pos:column="45">(<argument><expr><name pos:line="40" pos:column="46">outer_fp<pos:position pos:line="40" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="56">&amp;<pos:position pos:line="40" pos:column="61"/></operator><name pos:line="40" pos:column="57">new_fp<pos:position pos:line="40" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="65">outer_new_body<pos:position pos:line="40" pos:column="79"/></name></expr></argument>,
                                               <argument><expr><operator pos:line="41" pos:column="48">&amp;<pos:position pos:line="41" pos:column="53"/></operator><name pos:line="41" pos:column="49">new_body<pos:position pos:line="41" pos:column="57"/></name></expr></argument>)<pos:position pos:line="41" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="59"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="43" pos:column="9">mutt_free_body<pos:position pos:line="43" pos:column="23"/></name> <argument_list pos:line="43" pos:column="24">(<argument><expr><operator pos:line="43" pos:column="25">&amp;<pos:position pos:line="43" pos:column="30"/></operator><name pos:line="43" pos:column="26">outer_new_body<pos:position pos:line="43" pos:column="40"/></name></expr></argument>)<pos:position pos:line="43" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">safe_fclose<pos:position pos:line="44" pos:column="20"/></name> <argument_list pos:line="44" pos:column="21">(<argument><expr><operator pos:line="44" pos:column="22">&amp;<pos:position pos:line="44" pos:column="27"/></operator><name pos:line="44" pos:column="23">outer_fp<pos:position pos:line="44" pos:column="31"/></name></expr></argument>)<pos:position pos:line="44" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="33"/></expr_stmt>
      }<pos:position pos:line="45" pos:column="8"/></block></then></if>

      <if pos:line="47" pos:column="7">if <condition pos:line="47" pos:column="10">(<expr><name pos:line="47" pos:column="11">secured<pos:position pos:line="47" pos:column="18"/></name></expr>)<pos:position pos:line="47" pos:column="19"/></condition><then pos:line="47" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="48" pos:column="9">hdr<pos:position pos:line="48" pos:column="12"/></name><operator pos:line="48" pos:column="12">-&gt;<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="14">security<pos:position pos:line="48" pos:column="22"/></name></name> <operator pos:line="48" pos:column="23">|=<pos:position pos:line="48" pos:column="25"/></operator> <name pos:line="48" pos:column="26">SMIMEENCRYPT<pos:position pos:line="48" pos:column="38"/></name></expr>;<pos:position pos:line="48" pos:column="39"/></expr_stmt></block></then></if>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><operator pos:line="51" pos:column="9">(<pos:position pos:line="51" pos:column="10"/></operator><name pos:line="51" pos:column="10">WithCrypto<pos:position pos:line="51" pos:column="20"/></name> <operator pos:line="51" pos:column="21">&amp;<pos:position pos:line="51" pos:column="26"/></operator> <name pos:line="51" pos:column="23">APPLICATION_PGP<pos:position pos:line="51" pos:column="38"/></name><operator pos:line="51" pos:column="38">)<pos:position pos:line="51" pos:column="39"/></operator> <operator pos:line="51" pos:column="40">&amp;&amp;<pos:position pos:line="51" pos:column="50"/></operator>
        <operator pos:line="52" pos:column="9">(<pos:position pos:line="52" pos:column="10"/></operator><call><name pos:line="52" pos:column="10">mutt_is_multipart_encrypted<pos:position pos:line="52" pos:column="37"/></name> <argument_list pos:line="52" pos:column="38">(<argument><expr><name pos:line="52" pos:column="39">m<pos:position pos:line="52" pos:column="40"/></name></expr></argument>)<pos:position pos:line="52" pos:column="41"/></argument_list></call> <operator pos:line="52" pos:column="42">||<pos:position pos:line="52" pos:column="44"/></operator>
         <call><name pos:line="53" pos:column="10">mutt_is_malformed_multipart_pgp_encrypted<pos:position pos:line="53" pos:column="51"/></name> <argument_list pos:line="53" pos:column="52">(<argument><expr><name pos:line="53" pos:column="53">m<pos:position pos:line="53" pos:column="54"/></name></expr></argument>)<pos:position pos:line="53" pos:column="55"/></argument_list></call><operator pos:line="53" pos:column="55">)<pos:position pos:line="53" pos:column="56"/></operator></expr>)<pos:position pos:line="53" pos:column="57"/></condition><then pos:line="53" pos:column="57">
    <block pos:line="54" pos:column="5">{
      <expr_stmt><expr><name pos:line="55" pos:column="7">need_secured<pos:position pos:line="55" pos:column="19"/></name> <operator pos:line="55" pos:column="20">=<pos:position pos:line="55" pos:column="21"/></operator> <literal type="number" pos:line="55" pos:column="22">1<pos:position pos:line="55" pos:column="23"/></literal></expr>;<pos:position pos:line="55" pos:column="24"/></expr_stmt>

      <if pos:line="57" pos:column="7">if <condition pos:line="57" pos:column="10">(<expr><operator pos:line="57" pos:column="11">!<pos:position pos:line="57" pos:column="12"/></operator><call><name pos:line="57" pos:column="12">crypt_valid_passphrase<pos:position pos:line="57" pos:column="34"/></name> <argument_list pos:line="57" pos:column="35">(<argument><expr><name pos:line="57" pos:column="36">APPLICATION_PGP<pos:position pos:line="57" pos:column="51"/></name></expr></argument>)<pos:position pos:line="57" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="53"/></condition><then pos:line="57" pos:column="53">
        <block type="pseudo"><goto pos:line="58" pos:column="9">goto <name pos:line="58" pos:column="14">decrypt_failed<pos:position pos:line="58" pos:column="28"/></name>;<pos:position pos:line="58" pos:column="29"/></goto></block></then></if>

      <expr_stmt><expr><name pos:line="60" pos:column="7">secured<pos:position pos:line="60" pos:column="14"/></name> <operator pos:line="60" pos:column="15">=<pos:position pos:line="60" pos:column="16"/></operator> <operator pos:line="60" pos:column="17">!<pos:position pos:line="60" pos:column="18"/></operator><call><name pos:line="60" pos:column="18">crypt_pgp_decrypt_mime<pos:position pos:line="60" pos:column="40"/></name> <argument_list pos:line="60" pos:column="41">(<argument><expr><name pos:line="60" pos:column="42">fp<pos:position pos:line="60" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="46">&amp;<pos:position pos:line="60" pos:column="51"/></operator><name pos:line="60" pos:column="47">new_fp<pos:position pos:line="60" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="55">m<pos:position pos:line="60" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="58">&amp;<pos:position pos:line="60" pos:column="63"/></operator><name pos:line="60" pos:column="59">new_body<pos:position pos:line="60" pos:column="67"/></name></expr></argument>)<pos:position pos:line="60" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="69"/></expr_stmt>

      <if pos:line="62" pos:column="7">if <condition pos:line="62" pos:column="10">(<expr><name pos:line="62" pos:column="11">secured<pos:position pos:line="62" pos:column="18"/></name></expr>)<pos:position pos:line="62" pos:column="19"/></condition><then pos:line="62" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="63" pos:column="9">hdr<pos:position pos:line="63" pos:column="12"/></name><operator pos:line="63" pos:column="12">-&gt;<pos:position pos:line="63" pos:column="17"/></operator><name pos:line="63" pos:column="14">security<pos:position pos:line="63" pos:column="22"/></name></name> <operator pos:line="63" pos:column="23">|=<pos:position pos:line="63" pos:column="25"/></operator> <name pos:line="63" pos:column="26">PGPENCRYPT<pos:position pos:line="63" pos:column="36"/></name></expr>;<pos:position pos:line="63" pos:column="37"/></expr_stmt></block></then></if>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>

    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name pos:line="66" pos:column="9">need_secured<pos:position pos:line="66" pos:column="21"/></name> <operator pos:line="66" pos:column="22">&amp;&amp;<pos:position pos:line="66" pos:column="32"/></operator> <name pos:line="66" pos:column="25">secured<pos:position pos:line="66" pos:column="32"/></name></expr>)<pos:position pos:line="66" pos:column="33"/></condition><then pos:line="66" pos:column="33">
    <block pos:line="67" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="68" pos:column="7">mutt_actx_add_fp<pos:position pos:line="68" pos:column="23"/></name> <argument_list pos:line="68" pos:column="24">(<argument><expr><name pos:line="68" pos:column="25">actx<pos:position pos:line="68" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="31">new_fp<pos:position pos:line="68" pos:column="37"/></name></expr></argument>)<pos:position pos:line="68" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="69" pos:column="7">mutt_actx_add_body<pos:position pos:line="69" pos:column="25"/></name> <argument_list pos:line="69" pos:column="26">(<argument><expr><name pos:line="69" pos:column="27">actx<pos:position pos:line="69" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="33">new_body<pos:position pos:line="69" pos:column="41"/></name></expr></argument>)<pos:position pos:line="69" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="70" pos:column="7">mutt_generate_recvattach_list<pos:position pos:line="70" pos:column="36"/></name> <argument_list pos:line="70" pos:column="37">(<argument><expr><name pos:line="70" pos:column="38">actx<pos:position pos:line="70" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="44">hdr<pos:position pos:line="70" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="49">new_body<pos:position pos:line="70" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="59">new_fp<pos:position pos:line="70" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="67">parent_type<pos:position pos:line="70" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="80">level<pos:position pos:line="70" pos:column="85"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="87">1<pos:position pos:line="70" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="90"/></expr_stmt>
      <continue pos:line="71" pos:column="7">continue;<pos:position pos:line="71" pos:column="16"/></continue>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if>

<label><name pos:line="74" pos:column="1">decrypt_failed<pos:position pos:line="74" pos:column="15"/></name>:<pos:position pos:line="74" pos:column="16"/></label>
    <comment type="block" pos:line="75" pos:column="5">/* Fall through and show the original parts if decryption fails */</comment>
    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><name pos:line="76" pos:column="9">need_secured<pos:position pos:line="76" pos:column="21"/></name> <operator pos:line="76" pos:column="22">&amp;&amp;<pos:position pos:line="76" pos:column="32"/></operator> <operator pos:line="76" pos:column="25">!<pos:position pos:line="76" pos:column="26"/></operator><name pos:line="76" pos:column="26">secured<pos:position pos:line="76" pos:column="33"/></name></expr>)<pos:position pos:line="76" pos:column="34"/></condition><then pos:line="76" pos:column="34">
      <block type="pseudo"><decl_stmt><decl><type><name pos:line="77" pos:column="7">mutt_error<pos:position pos:line="77" pos:column="17"/></name></type> <name pos:line="77" pos:column="18">_<pos:position pos:line="77" pos:column="19"/></name><argument_list pos:line="77" pos:column="19">(<argument><expr><literal type="string" pos:line="77" pos:column="20">"Can't decrypt encrypted message!"<pos:position pos:line="77" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="55"/></argument_list></decl>;<pos:position pos:line="77" pos:column="56"/></decl_stmt></block></then></if>

    <comment type="block" pos:line="79" pos:column="5">/* Strip out the top level multipart */</comment>
    <if pos:line="80" pos:column="5">if <condition pos:line="80" pos:column="8">(<expr><name><name pos:line="80" pos:column="9">m<pos:position pos:line="80" pos:column="10"/></name><operator pos:line="80" pos:column="10">-&gt;<pos:position pos:line="80" pos:column="15"/></operator><name pos:line="80" pos:column="12">type<pos:position pos:line="80" pos:column="16"/></name></name> <operator pos:line="80" pos:column="17">==<pos:position pos:line="80" pos:column="19"/></operator> <name pos:line="80" pos:column="20">TYPEMULTIPART<pos:position pos:line="80" pos:column="33"/></name> <operator pos:line="80" pos:column="34">&amp;&amp;<pos:position pos:line="80" pos:column="44"/></operator>
        <name><name pos:line="81" pos:column="9">m<pos:position pos:line="81" pos:column="10"/></name><operator pos:line="81" pos:column="10">-&gt;<pos:position pos:line="81" pos:column="15"/></operator><name pos:line="81" pos:column="12">parts<pos:position pos:line="81" pos:column="17"/></name></name> <operator pos:line="81" pos:column="18">&amp;&amp;<pos:position pos:line="81" pos:column="28"/></operator>
        <operator pos:line="82" pos:column="9">!<pos:position pos:line="82" pos:column="10"/></operator><name pos:line="82" pos:column="10">need_secured<pos:position pos:line="82" pos:column="22"/></name> <operator pos:line="82" pos:column="23">&amp;&amp;<pos:position pos:line="82" pos:column="33"/></operator>
        <operator pos:line="83" pos:column="9">(<pos:position pos:line="83" pos:column="10"/></operator><name pos:line="83" pos:column="10">parent_type<pos:position pos:line="83" pos:column="21"/></name> <operator pos:line="83" pos:column="22">==<pos:position pos:line="83" pos:column="24"/></operator> <operator pos:line="83" pos:column="25">-<pos:position pos:line="83" pos:column="26"/></operator><literal type="number" pos:line="83" pos:column="26">1<pos:position pos:line="83" pos:column="27"/></literal> <operator pos:line="83" pos:column="28">&amp;&amp;<pos:position pos:line="83" pos:column="38"/></operator> <call><name pos:line="83" pos:column="31">ascii_strcasecmp<pos:position pos:line="83" pos:column="47"/></name> <argument_list pos:line="83" pos:column="48">(<argument><expr><literal type="string" pos:line="83" pos:column="49">"alternative"<pos:position pos:line="83" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="64">m<pos:position pos:line="83" pos:column="65"/></name><operator pos:line="83" pos:column="65">-&gt;<pos:position pos:line="83" pos:column="70"/></operator><name pos:line="83" pos:column="67">subtype<pos:position pos:line="83" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="75"/></argument_list></call><operator pos:line="83" pos:column="75">)<pos:position pos:line="83" pos:column="76"/></operator></expr>)<pos:position pos:line="83" pos:column="77"/></condition><then pos:line="83" pos:column="77">
    <block pos:line="84" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="85" pos:column="7">mutt_generate_recvattach_list<pos:position pos:line="85" pos:column="36"/></name> <argument_list pos:line="85" pos:column="37">(<argument><expr><name pos:line="85" pos:column="38">actx<pos:position pos:line="85" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="44">hdr<pos:position pos:line="85" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="49">m<pos:position pos:line="85" pos:column="50"/></name><operator pos:line="85" pos:column="50">-&gt;<pos:position pos:line="85" pos:column="55"/></operator><name pos:line="85" pos:column="52">parts<pos:position pos:line="85" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="59">fp<pos:position pos:line="85" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="63">m<pos:position pos:line="85" pos:column="64"/></name><operator pos:line="85" pos:column="64">-&gt;<pos:position pos:line="85" pos:column="69"/></operator><name pos:line="85" pos:column="66">type<pos:position pos:line="85" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="72">level<pos:position pos:line="85" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="79">decrypted<pos:position pos:line="85" pos:column="88"/></name></expr></argument>)<pos:position pos:line="85" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="90"/></expr_stmt>
    }<pos:position pos:line="86" pos:column="6"/></block></then>
    <else pos:line="87" pos:column="5">else
    <block pos:line="88" pos:column="5">{
      <expr_stmt><expr><operator pos:line="89" pos:column="7">new<pos:position pos:line="89" pos:column="10"/></operator> <operator pos:line="89" pos:column="11">=<pos:position pos:line="89" pos:column="12"/></operator> <operator pos:line="89" pos:column="13">(<pos:position pos:line="89" pos:column="14"/></operator><name pos:line="89" pos:column="14">ATTACHPTR<pos:position pos:line="89" pos:column="23"/></name> <operator pos:line="89" pos:column="24">*<pos:position pos:line="89" pos:column="25"/></operator><operator pos:line="89" pos:column="25">)<pos:position pos:line="89" pos:column="26"/></operator> <call><name pos:line="89" pos:column="27">safe_calloc<pos:position pos:line="89" pos:column="38"/></name> <argument_list pos:line="89" pos:column="39">(<argument><expr><literal type="number" pos:line="89" pos:column="40">1<pos:position pos:line="89" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="89" pos:column="43">sizeof <argument_list pos:line="89" pos:column="50">(<argument><expr><name pos:line="89" pos:column="51">ATTACHPTR<pos:position pos:line="89" pos:column="60"/></name></expr></argument>)<pos:position pos:line="89" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="89" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="63"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="90" pos:column="7">mutt_actx_add_attach<pos:position pos:line="90" pos:column="27"/></name> <argument_list pos:line="90" pos:column="28">(<argument><expr><name pos:line="90" pos:column="29">actx<pos:position pos:line="90" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="35">new<pos:position pos:line="90" pos:column="38"/></operator></expr></argument>)<pos:position pos:line="90" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="40"/></expr_stmt>

      <expr_stmt><expr><operator pos:line="92" pos:column="7">new<pos:position pos:line="92" pos:column="10"/></operator><operator pos:line="92" pos:column="10">-&gt;<pos:position pos:line="92" pos:column="15"/></operator><name pos:line="92" pos:column="12">content<pos:position pos:line="92" pos:column="19"/></name> <operator pos:line="92" pos:column="20">=<pos:position pos:line="92" pos:column="21"/></operator> <name pos:line="92" pos:column="22">m<pos:position pos:line="92" pos:column="23"/></name></expr>;<pos:position pos:line="92" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="93" pos:column="7">new<pos:position pos:line="93" pos:column="10"/></operator><operator pos:line="93" pos:column="10">-&gt;<pos:position pos:line="93" pos:column="15"/></operator><name pos:line="93" pos:column="12">fp<pos:position pos:line="93" pos:column="14"/></name> <operator pos:line="93" pos:column="15">=<pos:position pos:line="93" pos:column="16"/></operator> <name pos:line="93" pos:column="17">fp<pos:position pos:line="93" pos:column="19"/></name></expr>;<pos:position pos:line="93" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="94" pos:column="7">m<pos:position pos:line="94" pos:column="8"/></name><operator pos:line="94" pos:column="8">-&gt;<pos:position pos:line="94" pos:column="13"/></operator><name pos:line="94" pos:column="10">aptr<pos:position pos:line="94" pos:column="14"/></name></name> <operator pos:line="94" pos:column="15">=<pos:position pos:line="94" pos:column="16"/></operator> <operator pos:line="94" pos:column="17">new<pos:position pos:line="94" pos:column="20"/></operator></expr>;<pos:position pos:line="94" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="95" pos:column="7">new<pos:position pos:line="95" pos:column="10"/></operator><operator pos:line="95" pos:column="10">-&gt;<pos:position pos:line="95" pos:column="15"/></operator><name pos:line="95" pos:column="12">parent_type<pos:position pos:line="95" pos:column="23"/></name> <operator pos:line="95" pos:column="24">=<pos:position pos:line="95" pos:column="25"/></operator> <name pos:line="95" pos:column="26">parent_type<pos:position pos:line="95" pos:column="37"/></name></expr>;<pos:position pos:line="95" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="96" pos:column="7">new<pos:position pos:line="96" pos:column="10"/></operator><operator pos:line="96" pos:column="10">-&gt;<pos:position pos:line="96" pos:column="15"/></operator><name pos:line="96" pos:column="12">level<pos:position pos:line="96" pos:column="17"/></name> <operator pos:line="96" pos:column="18">=<pos:position pos:line="96" pos:column="19"/></operator> <name pos:line="96" pos:column="20">level<pos:position pos:line="96" pos:column="25"/></name></expr>;<pos:position pos:line="96" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="97" pos:column="7">new<pos:position pos:line="97" pos:column="10"/></operator><operator pos:line="97" pos:column="10">-&gt;<pos:position pos:line="97" pos:column="15"/></operator><name pos:line="97" pos:column="12">decrypted<pos:position pos:line="97" pos:column="21"/></name> <operator pos:line="97" pos:column="22">=<pos:position pos:line="97" pos:column="23"/></operator> <name pos:line="97" pos:column="24">decrypted<pos:position pos:line="97" pos:column="33"/></name></expr>;<pos:position pos:line="97" pos:column="34"/></expr_stmt>

      <if pos:line="99" pos:column="7">if <condition pos:line="99" pos:column="10">(<expr><name><name pos:line="99" pos:column="11">m<pos:position pos:line="99" pos:column="12"/></name><operator pos:line="99" pos:column="12">-&gt;<pos:position pos:line="99" pos:column="17"/></operator><name pos:line="99" pos:column="14">type<pos:position pos:line="99" pos:column="18"/></name></name> <operator pos:line="99" pos:column="19">==<pos:position pos:line="99" pos:column="21"/></operator> <name pos:line="99" pos:column="22">TYPEMULTIPART<pos:position pos:line="99" pos:column="35"/></name></expr>)<pos:position pos:line="99" pos:column="36"/></condition><then pos:line="99" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="100" pos:column="9">mutt_generate_recvattach_list<pos:position pos:line="100" pos:column="38"/></name> <argument_list pos:line="100" pos:column="39">(<argument><expr><name pos:line="100" pos:column="40">actx<pos:position pos:line="100" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="46">hdr<pos:position pos:line="100" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="51">m<pos:position pos:line="100" pos:column="52"/></name><operator pos:line="100" pos:column="52">-&gt;<pos:position pos:line="100" pos:column="57"/></operator><name pos:line="100" pos:column="54">parts<pos:position pos:line="100" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="61">fp<pos:position pos:line="100" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="65">m<pos:position pos:line="100" pos:column="66"/></name><operator pos:line="100" pos:column="66">-&gt;<pos:position pos:line="100" pos:column="71"/></operator><name pos:line="100" pos:column="68">type<pos:position pos:line="100" pos:column="72"/></name></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="74">level<pos:position pos:line="100" pos:column="79"/></name> <operator pos:line="100" pos:column="80">+<pos:position pos:line="100" pos:column="81"/></operator> <literal type="number" pos:line="100" pos:column="82">1<pos:position pos:line="100" pos:column="83"/></literal></expr></argument>, <argument><expr><name pos:line="100" pos:column="85">decrypted<pos:position pos:line="100" pos:column="94"/></name></expr></argument>)<pos:position pos:line="100" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="96"/></expr_stmt></block></then>
      <elseif pos:line="101" pos:column="7">else <if pos:line="101" pos:column="12">if <condition pos:line="101" pos:column="15">(<expr><call><name pos:line="101" pos:column="16">mutt_is_message_type<pos:position pos:line="101" pos:column="36"/></name> <argument_list pos:line="101" pos:column="37">(<argument><expr><name><name pos:line="101" pos:column="38">m<pos:position pos:line="101" pos:column="39"/></name><operator pos:line="101" pos:column="39">-&gt;<pos:position pos:line="101" pos:column="44"/></operator><name pos:line="101" pos:column="41">type<pos:position pos:line="101" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="101" pos:column="47">m<pos:position pos:line="101" pos:column="48"/></name><operator pos:line="101" pos:column="48">-&gt;<pos:position pos:line="101" pos:column="53"/></operator><name pos:line="101" pos:column="50">subtype<pos:position pos:line="101" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="101" pos:column="59"/></condition><then pos:line="101" pos:column="59">
      <block pos:line="102" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="103" pos:column="9">mutt_generate_recvattach_list<pos:position pos:line="103" pos:column="38"/></name> <argument_list pos:line="103" pos:column="39">(<argument><expr><name pos:line="103" pos:column="40">actx<pos:position pos:line="103" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="46">m<pos:position pos:line="103" pos:column="47"/></name><operator pos:line="103" pos:column="47">-&gt;<pos:position pos:line="103" pos:column="52"/></operator><name pos:line="103" pos:column="49">hdr<pos:position pos:line="103" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="54">m<pos:position pos:line="103" pos:column="55"/></name><operator pos:line="103" pos:column="55">-&gt;<pos:position pos:line="103" pos:column="60"/></operator><name pos:line="103" pos:column="57">parts<pos:position pos:line="103" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="64">fp<pos:position pos:line="103" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="68">m<pos:position pos:line="103" pos:column="69"/></name><operator pos:line="103" pos:column="69">-&gt;<pos:position pos:line="103" pos:column="74"/></operator><name pos:line="103" pos:column="71">type<pos:position pos:line="103" pos:column="75"/></name></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="77">level<pos:position pos:line="103" pos:column="82"/></name> <operator pos:line="103" pos:column="83">+<pos:position pos:line="103" pos:column="84"/></operator> <literal type="number" pos:line="103" pos:column="85">1<pos:position pos:line="103" pos:column="86"/></literal></expr></argument>, <argument><expr><name pos:line="103" pos:column="88">decrypted<pos:position pos:line="103" pos:column="97"/></name></expr></argument>)<pos:position pos:line="103" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="99"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="104" pos:column="9">hdr<pos:position pos:line="104" pos:column="12"/></name><operator pos:line="104" pos:column="12">-&gt;<pos:position pos:line="104" pos:column="17"/></operator><name pos:line="104" pos:column="14">security<pos:position pos:line="104" pos:column="22"/></name></name> <operator pos:line="104" pos:column="23">|=<pos:position pos:line="104" pos:column="25"/></operator> <name><name pos:line="104" pos:column="26">m<pos:position pos:line="104" pos:column="27"/></name><operator pos:line="104" pos:column="27">-&gt;<pos:position pos:line="104" pos:column="32"/></operator><name pos:line="104" pos:column="29">hdr<pos:position pos:line="104" pos:column="32"/></name><operator pos:line="104" pos:column="32">-&gt;<pos:position pos:line="104" pos:column="37"/></operator><name pos:line="104" pos:column="34">security<pos:position pos:line="104" pos:column="42"/></name></name></expr>;<pos:position pos:line="104" pos:column="43"/></expr_stmt>
      }<pos:position pos:line="105" pos:column="8"/></block></then></if></elseif></if>
    }<pos:position pos:line="106" pos:column="6"/></block></else></if>
  }<pos:position pos:line="107" pos:column="4"/></block></for>
}<pos:position pos:line="108" pos:column="2"/></block></function></unit>

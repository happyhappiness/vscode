<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_111_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">pop_authenticate<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">POP_DATA<pos:position pos:line="1" pos:column="31"/></name><modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type> <name pos:line="1" pos:column="33">pop_data<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">ACCOUNT<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">acct<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><operator pos:line="3" pos:column="19">&amp;<pos:position pos:line="3" pos:column="24"/></operator><name><name pos:line="3" pos:column="20">pop_data<pos:position pos:line="3" pos:column="28"/></name><operator pos:line="3" pos:column="28">-&gt;<pos:position pos:line="3" pos:column="33"/></operator><name pos:line="3" pos:column="30">conn<pos:position pos:line="3" pos:column="34"/></name><operator pos:line="3" pos:column="34">-&gt;<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="36">account<pos:position pos:line="3" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="44"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">pop_auth_t<pos:position pos:line="4" pos:column="19"/></name><modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type> <name pos:line="4" pos:column="21">authenticator<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name><modifier pos:line="5" pos:column="7">*<pos:position pos:line="5" pos:column="8"/></modifier></type> <name pos:line="5" pos:column="9">methods<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name><modifier pos:line="6" pos:column="7">*<pos:position pos:line="6" pos:column="8"/></modifier></type> <name pos:line="6" pos:column="9">comma<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name><modifier pos:line="7" pos:column="7">*<pos:position pos:line="7" pos:column="8"/></modifier></type> <name pos:line="7" pos:column="9">method<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">attempts<pos:position pos:line="8" pos:column="15"/></name> <init pos:line="8" pos:column="16">= <expr><literal type="number" pos:line="8" pos:column="18">0<pos:position pos:line="8" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">ret<pos:position pos:line="9" pos:column="10"/></name> <init pos:line="9" pos:column="11">= <expr><name pos:line="9" pos:column="13">POP_A_UNAVAIL<pos:position pos:line="9" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><call><name pos:line="11" pos:column="7">mutt_account_getuser<pos:position pos:line="11" pos:column="27"/></name> <argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">acct<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call> <operator pos:line="11" pos:column="35">||<pos:position pos:line="11" pos:column="37"/></operator> <operator pos:line="11" pos:column="38">!<pos:position pos:line="11" pos:column="39"/></operator><name><name pos:line="11" pos:column="39">acct<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">-&gt;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="45">user<pos:position pos:line="11" pos:column="49"/></name><index pos:line="11" pos:column="49">[<expr><literal type="number" pos:line="11" pos:column="50">0<pos:position pos:line="11" pos:column="51"/></literal></expr>]<pos:position pos:line="11" pos:column="52"/></index></name> <operator pos:line="11" pos:column="53">||<pos:position pos:line="11" pos:column="55"/></operator>
      <call><name pos:line="12" pos:column="7">mutt_account_getpass<pos:position pos:line="12" pos:column="27"/></name> <argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">acct<pos:position pos:line="12" pos:column="33"/></name></expr></argument>)<pos:position pos:line="12" pos:column="34"/></argument_list></call> <operator pos:line="12" pos:column="35">||<pos:position pos:line="12" pos:column="37"/></operator> <operator pos:line="12" pos:column="38">!<pos:position pos:line="12" pos:column="39"/></operator><name><name pos:line="12" pos:column="39">acct<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">-&gt;<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="45">pass<pos:position pos:line="12" pos:column="49"/></name><index pos:line="12" pos:column="49">[<expr><literal type="number" pos:line="12" pos:column="50">0<pos:position pos:line="12" pos:column="51"/></literal></expr>]<pos:position pos:line="12" pos:column="52"/></index></name></expr>)<pos:position pos:line="12" pos:column="53"/></condition><then pos:line="12" pos:column="53">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">-<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">3<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></return></block></then></if>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">PopAuthenticators<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">&amp;&amp;<pos:position pos:line="15" pos:column="35"/></operator> <operator pos:line="15" pos:column="28">*<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="29">PopAuthenticators<pos:position pos:line="15" pos:column="46"/></name></expr>)<pos:position pos:line="15" pos:column="47"/></condition><then pos:line="15" pos:column="47">
  <block pos:line="16" pos:column="3">{
    <comment type="block" pos:line="17" pos:column="5">/* Try user-specified list of authentication methods */</comment>
    <expr_stmt><expr><name pos:line="18" pos:column="5">methods<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <call><name pos:line="18" pos:column="15">safe_strdup<pos:position pos:line="18" pos:column="26"/></name> <argument_list pos:line="18" pos:column="27">(<argument><expr><name pos:line="18" pos:column="28">PopAuthenticators<pos:position pos:line="18" pos:column="45"/></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">method<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <name pos:line="19" pos:column="14">methods<pos:position pos:line="19" pos:column="21"/></name></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>

    <while pos:line="21" pos:column="5">while <condition pos:line="21" pos:column="11">(<expr><name pos:line="21" pos:column="12">method<pos:position pos:line="21" pos:column="18"/></name></expr>)<pos:position pos:line="21" pos:column="19"/></condition>
    <block pos:line="22" pos:column="5">{
      <expr_stmt><expr><name pos:line="23" pos:column="7">comma<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <call><name pos:line="23" pos:column="15">strchr<pos:position pos:line="23" pos:column="21"/></name> <argument_list pos:line="23" pos:column="22">(<argument><expr><name pos:line="23" pos:column="23">method<pos:position pos:line="23" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="23" pos:column="31">':'<pos:position pos:line="23" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
      <if pos:line="24" pos:column="7">if <condition pos:line="24" pos:column="10">(<expr><name pos:line="24" pos:column="11">comma<pos:position pos:line="24" pos:column="16"/></name></expr>)<pos:position pos:line="24" pos:column="17"/></condition><then pos:line="24" pos:column="17">
	<block type="pseudo"><expr_stmt><expr><operator pos:line="25" pos:column="9">*<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">comma<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">++<pos:position pos:line="25" pos:column="17"/></operator> <operator pos:line="25" pos:column="18">=<pos:position pos:line="25" pos:column="19"/></operator> <literal type="char" pos:line="25" pos:column="20">'\0'<pos:position pos:line="25" pos:column="24"/></literal></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">dprint<pos:position pos:line="26" pos:column="13"/></name> <argument_list pos:line="26" pos:column="14">(<argument><expr><literal type="number" pos:line="26" pos:column="15">2<pos:position pos:line="26" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="26" pos:column="18">(<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="19">debugfile<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">,<pos:position pos:line="26" pos:column="29"/></operator> <literal type="string" pos:line="26" pos:column="30">"pop_authenticate: Trying method %s\n"<pos:position pos:line="26" pos:column="68"/></literal><operator pos:line="26" pos:column="68">,<pos:position pos:line="26" pos:column="69"/></operator> <name pos:line="26" pos:column="70">method<pos:position pos:line="26" pos:column="76"/></name><operator pos:line="26" pos:column="76">)<pos:position pos:line="26" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="79"/></expr_stmt>
      <expr_stmt><expr><name pos:line="27" pos:column="7">authenticator<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <name pos:line="27" pos:column="23">pop_authenticators<pos:position pos:line="27" pos:column="41"/></name></expr>;<pos:position pos:line="27" pos:column="42"/></expr_stmt>

      <while pos:line="29" pos:column="7">while <condition pos:line="29" pos:column="13">(<expr><name><name pos:line="29" pos:column="14">authenticator<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">-&gt;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="29">authenticate<pos:position pos:line="29" pos:column="41"/></name></name></expr>)<pos:position pos:line="29" pos:column="42"/></condition>
      <block pos:line="30" pos:column="7">{
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">!<pos:position pos:line="31" pos:column="14"/></operator><name><name pos:line="31" pos:column="14">authenticator<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">-&gt;<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="29">method<pos:position pos:line="31" pos:column="35"/></name></name> <operator pos:line="31" pos:column="36">||<pos:position pos:line="31" pos:column="38"/></operator>
	    <operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><call><name pos:line="32" pos:column="14">ascii_strcasecmp<pos:position pos:line="32" pos:column="30"/></name> <argument_list pos:line="32" pos:column="31">(<argument><expr><name><name pos:line="32" pos:column="32">authenticator<pos:position pos:line="32" pos:column="45"/></name><operator pos:line="32" pos:column="45">-&gt;<pos:position pos:line="32" pos:column="50"/></operator><name pos:line="32" pos:column="47">method<pos:position pos:line="32" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="55">method<pos:position pos:line="32" pos:column="61"/></name></expr></argument>)<pos:position pos:line="32" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="63"/></condition><then pos:line="32" pos:column="63">
	<block pos:line="33" pos:column="9">{
	  <expr_stmt><expr><name pos:line="34" pos:column="11">ret<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <call><name><name pos:line="34" pos:column="17">authenticator<pos:position pos:line="34" pos:column="30"/></name><operator pos:line="34" pos:column="30">-&gt;<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="32">authenticate<pos:position pos:line="34" pos:column="44"/></name></name> <argument_list pos:line="34" pos:column="45">(<argument><expr><name pos:line="34" pos:column="46">pop_data<pos:position pos:line="34" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="56">method<pos:position pos:line="34" pos:column="62"/></name></expr></argument>)<pos:position pos:line="34" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="64"/></expr_stmt>
	  <if pos:line="35" pos:column="11">if <condition pos:line="35" pos:column="14">(<expr><name pos:line="35" pos:column="15">ret<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">==<pos:position pos:line="35" pos:column="21"/></operator> <name pos:line="35" pos:column="22">POP_A_SOCKET<pos:position pos:line="35" pos:column="34"/></name></expr>)<pos:position pos:line="35" pos:column="35"/></condition><then pos:line="35" pos:column="35">
	    <block type="pseudo"><switch pos:line="36" pos:column="13">switch <condition pos:line="36" pos:column="20">(<expr><call><name pos:line="36" pos:column="21">pop_connect<pos:position pos:line="36" pos:column="32"/></name> <argument_list pos:line="36" pos:column="33">(<argument><expr><name pos:line="36" pos:column="34">pop_data<pos:position pos:line="36" pos:column="42"/></name></expr></argument>)<pos:position pos:line="36" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="44"/></condition>
	    <block pos:line="37" pos:column="13">{
	      <case pos:line="38" pos:column="15">case <expr><literal type="number" pos:line="38" pos:column="20">0<pos:position pos:line="38" pos:column="21"/></literal></expr>:<pos:position pos:line="38" pos:column="22"/></case>
	      <block pos:line="39" pos:column="15">{
		<expr_stmt><expr><name pos:line="40" pos:column="17">ret<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <call><name><name pos:line="40" pos:column="23">authenticator<pos:position pos:line="40" pos:column="36"/></name><operator pos:line="40" pos:column="36">-&gt;<pos:position pos:line="40" pos:column="41"/></operator><name pos:line="40" pos:column="38">authenticate<pos:position pos:line="40" pos:column="50"/></name></name> <argument_list pos:line="40" pos:column="51">(<argument><expr><name pos:line="40" pos:column="52">pop_data<pos:position pos:line="40" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="62">method<pos:position pos:line="40" pos:column="68"/></name></expr></argument>)<pos:position pos:line="40" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="70"/></expr_stmt>
		<break pos:line="41" pos:column="17">break;<pos:position pos:line="41" pos:column="23"/></break>
	      }<pos:position pos:line="42" pos:column="16"/></block>
	      <case pos:line="43" pos:column="15">case <expr><operator pos:line="43" pos:column="20">-<pos:position pos:line="43" pos:column="21"/></operator><literal type="number" pos:line="43" pos:column="21">2<pos:position pos:line="43" pos:column="22"/></literal></expr>:<pos:position pos:line="43" pos:column="23"/></case>
		<expr_stmt><expr><name pos:line="44" pos:column="17">ret<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">=<pos:position pos:line="44" pos:column="22"/></operator> <name pos:line="44" pos:column="23">POP_A_FAILURE<pos:position pos:line="44" pos:column="36"/></name></expr>;<pos:position pos:line="44" pos:column="37"/></expr_stmt>
	    }<pos:position pos:line="45" pos:column="14"/></block></switch></block></then></if>

	  <if pos:line="47" pos:column="11">if <condition pos:line="47" pos:column="14">(<expr><name pos:line="47" pos:column="15">ret<pos:position pos:line="47" pos:column="18"/></name> <operator pos:line="47" pos:column="19">!=<pos:position pos:line="47" pos:column="21"/></operator> <name pos:line="47" pos:column="22">POP_A_UNAVAIL<pos:position pos:line="47" pos:column="35"/></name></expr>)<pos:position pos:line="47" pos:column="36"/></condition><then pos:line="47" pos:column="36">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="13">attempts<pos:position pos:line="48" pos:column="21"/></name><operator pos:line="48" pos:column="21">++<pos:position pos:line="48" pos:column="23"/></operator></expr>;<pos:position pos:line="48" pos:column="24"/></expr_stmt></block></then></if>
	  <if pos:line="49" pos:column="11">if <condition pos:line="49" pos:column="14">(<expr><name pos:line="49" pos:column="15">ret<pos:position pos:line="49" pos:column="18"/></name> <operator pos:line="49" pos:column="19">==<pos:position pos:line="49" pos:column="21"/></operator> <name pos:line="49" pos:column="22">POP_A_SUCCESS<pos:position pos:line="49" pos:column="35"/></name> <operator pos:line="49" pos:column="36">||<pos:position pos:line="49" pos:column="38"/></operator> <name pos:line="49" pos:column="39">ret<pos:position pos:line="49" pos:column="42"/></name> <operator pos:line="49" pos:column="43">==<pos:position pos:line="49" pos:column="45"/></operator> <name pos:line="49" pos:column="46">POP_A_SOCKET<pos:position pos:line="49" pos:column="58"/></name> <operator pos:line="49" pos:column="59">||<pos:position pos:line="49" pos:column="61"/></operator>
	      <operator pos:line="50" pos:column="15">(<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="16">ret<pos:position pos:line="50" pos:column="19"/></name> <operator pos:line="50" pos:column="20">==<pos:position pos:line="50" pos:column="22"/></operator> <name pos:line="50" pos:column="23">POP_A_FAILURE<pos:position pos:line="50" pos:column="36"/></name> <operator pos:line="50" pos:column="37">&amp;&amp;<pos:position pos:line="50" pos:column="47"/></operator> <operator pos:line="50" pos:column="40">!<pos:position pos:line="50" pos:column="41"/></operator><call><name pos:line="50" pos:column="41">option<pos:position pos:line="50" pos:column="47"/></name> <argument_list pos:line="50" pos:column="48">(<argument><expr><name pos:line="50" pos:column="49">OPTPOPAUTHTRYALL<pos:position pos:line="50" pos:column="65"/></name></expr></argument>)<pos:position pos:line="50" pos:column="66"/></argument_list></call><operator pos:line="50" pos:column="66">)<pos:position pos:line="50" pos:column="67"/></operator></expr>)<pos:position pos:line="50" pos:column="68"/></condition><then pos:line="50" pos:column="68">
	  <block pos:line="51" pos:column="11">{
	    <expr_stmt><expr><name pos:line="52" pos:column="13">comma<pos:position pos:line="52" pos:column="18"/></name> <operator pos:line="52" pos:column="19">=<pos:position pos:line="52" pos:column="20"/></operator> <name pos:line="52" pos:column="21">NULL<pos:position pos:line="52" pos:column="25"/></name></expr>;<pos:position pos:line="52" pos:column="26"/></expr_stmt>
	    <break pos:line="53" pos:column="13">break;<pos:position pos:line="53" pos:column="19"/></break>
	  }<pos:position pos:line="54" pos:column="12"/></block></then></if>
	}<pos:position pos:line="55" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="56" pos:column="9">authenticator<pos:position pos:line="56" pos:column="22"/></name><operator pos:line="56" pos:column="22">++<pos:position pos:line="56" pos:column="24"/></operator></expr>;<pos:position pos:line="56" pos:column="25"/></expr_stmt>
      }<pos:position pos:line="57" pos:column="8"/></block></while>

      <expr_stmt><expr><name pos:line="59" pos:column="7">method<pos:position pos:line="59" pos:column="13"/></name> <operator pos:line="59" pos:column="14">=<pos:position pos:line="59" pos:column="15"/></operator> <name pos:line="59" pos:column="16">comma<pos:position pos:line="59" pos:column="21"/></name></expr>;<pos:position pos:line="59" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="62" pos:column="5">FREE<pos:position pos:line="62" pos:column="9"/></name> <argument_list pos:line="62" pos:column="10">(<argument><expr><operator pos:line="62" pos:column="11">&amp;<pos:position pos:line="62" pos:column="16"/></operator><name pos:line="62" pos:column="12">methods<pos:position pos:line="62" pos:column="19"/></name></expr></argument>)<pos:position pos:line="62" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="63" pos:column="4"/></block></then>
  <else pos:line="64" pos:column="3">else
  <block pos:line="65" pos:column="3">{
    <comment type="block" pos:line="66" pos:column="5">/* Fall back to default: any authenticator */</comment>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">dprint<pos:position pos:line="67" pos:column="11"/></name> <argument_list pos:line="67" pos:column="12">(<argument><expr><literal type="number" pos:line="67" pos:column="13">2<pos:position pos:line="67" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="67" pos:column="16">(<pos:position pos:line="67" pos:column="17"/></operator><name pos:line="67" pos:column="17">debugfile<pos:position pos:line="67" pos:column="26"/></name><operator pos:line="67" pos:column="26">,<pos:position pos:line="67" pos:column="27"/></operator> <literal type="string" pos:line="67" pos:column="28">"pop_authenticate: Using any available method.\n"<pos:position pos:line="67" pos:column="77"/></literal><operator pos:line="67" pos:column="77">)<pos:position pos:line="67" pos:column="78"/></operator></expr></argument>)<pos:position pos:line="67" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><name pos:line="68" pos:column="5">authenticator<pos:position pos:line="68" pos:column="18"/></name> <operator pos:line="68" pos:column="19">=<pos:position pos:line="68" pos:column="20"/></operator> <name pos:line="68" pos:column="21">pop_authenticators<pos:position pos:line="68" pos:column="39"/></name></expr>;<pos:position pos:line="68" pos:column="40"/></expr_stmt>

    <while pos:line="70" pos:column="5">while <condition pos:line="70" pos:column="11">(<expr><name><name pos:line="70" pos:column="12">authenticator<pos:position pos:line="70" pos:column="25"/></name><operator pos:line="70" pos:column="25">-&gt;<pos:position pos:line="70" pos:column="30"/></operator><name pos:line="70" pos:column="27">authenticate<pos:position pos:line="70" pos:column="39"/></name></name></expr>)<pos:position pos:line="70" pos:column="40"/></condition>
    <block pos:line="71" pos:column="5">{
      <expr_stmt><expr><name pos:line="72" pos:column="7">ret<pos:position pos:line="72" pos:column="10"/></name> <operator pos:line="72" pos:column="11">=<pos:position pos:line="72" pos:column="12"/></operator> <call><name><name pos:line="72" pos:column="13">authenticator<pos:position pos:line="72" pos:column="26"/></name><operator pos:line="72" pos:column="26">-&gt;<pos:position pos:line="72" pos:column="31"/></operator><name pos:line="72" pos:column="28">authenticate<pos:position pos:line="72" pos:column="40"/></name></name> <argument_list pos:line="72" pos:column="41">(<argument><expr><name pos:line="72" pos:column="42">pop_data<pos:position pos:line="72" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="52">authenticator<pos:position pos:line="72" pos:column="65"/></name><operator pos:line="72" pos:column="65">-&gt;<pos:position pos:line="72" pos:column="70"/></operator><name pos:line="72" pos:column="67">method<pos:position pos:line="72" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="75"/></expr_stmt>
      <if pos:line="73" pos:column="7">if <condition pos:line="73" pos:column="10">(<expr><name pos:line="73" pos:column="11">ret<pos:position pos:line="73" pos:column="14"/></name> <operator pos:line="73" pos:column="15">==<pos:position pos:line="73" pos:column="17"/></operator> <name pos:line="73" pos:column="18">POP_A_SOCKET<pos:position pos:line="73" pos:column="30"/></name></expr>)<pos:position pos:line="73" pos:column="31"/></condition><then pos:line="73" pos:column="31">
	<block type="pseudo"><switch pos:line="74" pos:column="9">switch <condition pos:line="74" pos:column="16">(<expr><call><name pos:line="74" pos:column="17">pop_connect<pos:position pos:line="74" pos:column="28"/></name> <argument_list pos:line="74" pos:column="29">(<argument><expr><name pos:line="74" pos:column="30">pop_data<pos:position pos:line="74" pos:column="38"/></name></expr></argument>)<pos:position pos:line="74" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="74" pos:column="40"/></condition>
	<block pos:line="75" pos:column="9">{
	  <case pos:line="76" pos:column="11">case <expr><literal type="number" pos:line="76" pos:column="16">0<pos:position pos:line="76" pos:column="17"/></literal></expr>:<pos:position pos:line="76" pos:column="18"/></case>
	  <block pos:line="77" pos:column="11">{
	    <expr_stmt><expr><name pos:line="78" pos:column="13">ret<pos:position pos:line="78" pos:column="16"/></name> <operator pos:line="78" pos:column="17">=<pos:position pos:line="78" pos:column="18"/></operator> <call><name><name pos:line="78" pos:column="19">authenticator<pos:position pos:line="78" pos:column="32"/></name><operator pos:line="78" pos:column="32">-&gt;<pos:position pos:line="78" pos:column="37"/></operator><name pos:line="78" pos:column="34">authenticate<pos:position pos:line="78" pos:column="46"/></name></name> <argument_list pos:line="78" pos:column="47">(<argument><expr><name pos:line="78" pos:column="48">pop_data<pos:position pos:line="78" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="58">authenticator<pos:position pos:line="78" pos:column="71"/></name><operator pos:line="78" pos:column="71">-&gt;<pos:position pos:line="78" pos:column="76"/></operator><name pos:line="78" pos:column="73">method<pos:position pos:line="78" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="81"/></expr_stmt>
	    <break pos:line="79" pos:column="13">break;<pos:position pos:line="79" pos:column="19"/></break>
	  }<pos:position pos:line="80" pos:column="12"/></block>
	  <case pos:line="81" pos:column="11">case <expr><operator pos:line="81" pos:column="16">-<pos:position pos:line="81" pos:column="17"/></operator><literal type="number" pos:line="81" pos:column="17">2<pos:position pos:line="81" pos:column="18"/></literal></expr>:<pos:position pos:line="81" pos:column="19"/></case>
	    <expr_stmt><expr><name pos:line="82" pos:column="13">ret<pos:position pos:line="82" pos:column="16"/></name> <operator pos:line="82" pos:column="17">=<pos:position pos:line="82" pos:column="18"/></operator> <name pos:line="82" pos:column="19">POP_A_FAILURE<pos:position pos:line="82" pos:column="32"/></name></expr>;<pos:position pos:line="82" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="83" pos:column="10"/></block></switch></block></then></if>

      <if pos:line="85" pos:column="7">if <condition pos:line="85" pos:column="10">(<expr><name pos:line="85" pos:column="11">ret<pos:position pos:line="85" pos:column="14"/></name> <operator pos:line="85" pos:column="15">!=<pos:position pos:line="85" pos:column="17"/></operator> <name pos:line="85" pos:column="18">POP_A_UNAVAIL<pos:position pos:line="85" pos:column="31"/></name></expr>)<pos:position pos:line="85" pos:column="32"/></condition><then pos:line="85" pos:column="32">
	<block type="pseudo"><expr_stmt><expr><name pos:line="86" pos:column="9">attempts<pos:position pos:line="86" pos:column="17"/></name><operator pos:line="86" pos:column="17">++<pos:position pos:line="86" pos:column="19"/></operator></expr>;<pos:position pos:line="86" pos:column="20"/></expr_stmt></block></then></if>
      <if pos:line="87" pos:column="7">if <condition pos:line="87" pos:column="10">(<expr><name pos:line="87" pos:column="11">ret<pos:position pos:line="87" pos:column="14"/></name> <operator pos:line="87" pos:column="15">==<pos:position pos:line="87" pos:column="17"/></operator> <name pos:line="87" pos:column="18">POP_A_SUCCESS<pos:position pos:line="87" pos:column="31"/></name> <operator pos:line="87" pos:column="32">||<pos:position pos:line="87" pos:column="34"/></operator> <name pos:line="87" pos:column="35">ret<pos:position pos:line="87" pos:column="38"/></name> <operator pos:line="87" pos:column="39">==<pos:position pos:line="87" pos:column="41"/></operator> <name pos:line="87" pos:column="42">POP_A_SOCKET<pos:position pos:line="87" pos:column="54"/></name> <operator pos:line="87" pos:column="55">||<pos:position pos:line="87" pos:column="57"/></operator>
	  <operator pos:line="88" pos:column="11">(<pos:position pos:line="88" pos:column="12"/></operator><name pos:line="88" pos:column="12">ret<pos:position pos:line="88" pos:column="15"/></name> <operator pos:line="88" pos:column="16">==<pos:position pos:line="88" pos:column="18"/></operator> <name pos:line="88" pos:column="19">POP_A_FAILURE<pos:position pos:line="88" pos:column="32"/></name> <operator pos:line="88" pos:column="33">&amp;&amp;<pos:position pos:line="88" pos:column="43"/></operator> <operator pos:line="88" pos:column="36">!<pos:position pos:line="88" pos:column="37"/></operator><call><name pos:line="88" pos:column="37">option<pos:position pos:line="88" pos:column="43"/></name> <argument_list pos:line="88" pos:column="44">(<argument><expr><name pos:line="88" pos:column="45">OPTPOPAUTHTRYALL<pos:position pos:line="88" pos:column="61"/></name></expr></argument>)<pos:position pos:line="88" pos:column="62"/></argument_list></call><operator pos:line="88" pos:column="62">)<pos:position pos:line="88" pos:column="63"/></operator></expr>)<pos:position pos:line="88" pos:column="64"/></condition><then pos:line="88" pos:column="64">
	<block type="pseudo"><break pos:line="89" pos:column="9">break;<pos:position pos:line="89" pos:column="15"/></break></block></then></if>

      <expr_stmt><expr><name pos:line="91" pos:column="7">authenticator<pos:position pos:line="91" pos:column="20"/></name><operator pos:line="91" pos:column="20">++<pos:position pos:line="91" pos:column="22"/></operator></expr>;<pos:position pos:line="91" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="92" pos:column="6"/></block></while>
  }<pos:position pos:line="93" pos:column="4"/></block></else></if>

  <switch pos:line="95" pos:column="3">switch <condition pos:line="95" pos:column="10">(<expr><name pos:line="95" pos:column="11">ret<pos:position pos:line="95" pos:column="14"/></name></expr>)<pos:position pos:line="95" pos:column="15"/></condition>
  <block pos:line="96" pos:column="3">{
    <case pos:line="97" pos:column="5">case <expr><name pos:line="97" pos:column="10">POP_A_SUCCESS<pos:position pos:line="97" pos:column="23"/></name></expr>:<pos:position pos:line="97" pos:column="24"/></case>
      <return pos:line="98" pos:column="7">return <expr><literal type="number" pos:line="98" pos:column="14">0<pos:position pos:line="98" pos:column="15"/></literal></expr>;<pos:position pos:line="98" pos:column="16"/></return>
    <case pos:line="99" pos:column="5">case <expr><name pos:line="99" pos:column="10">POP_A_SOCKET<pos:position pos:line="99" pos:column="22"/></name></expr>:<pos:position pos:line="99" pos:column="23"/></case>
      <return pos:line="100" pos:column="7">return <expr><operator pos:line="100" pos:column="14">-<pos:position pos:line="100" pos:column="15"/></operator><literal type="number" pos:line="100" pos:column="15">1<pos:position pos:line="100" pos:column="16"/></literal></expr>;<pos:position pos:line="100" pos:column="17"/></return>
    <case pos:line="101" pos:column="5">case <expr><name pos:line="101" pos:column="10">POP_A_UNAVAIL<pos:position pos:line="101" pos:column="23"/></name></expr>:<pos:position pos:line="101" pos:column="24"/></case>
      <if pos:line="102" pos:column="7">if <condition pos:line="102" pos:column="10">(<expr><operator pos:line="102" pos:column="11">!<pos:position pos:line="102" pos:column="12"/></operator><name pos:line="102" pos:column="12">attempts<pos:position pos:line="102" pos:column="20"/></name></expr>)<pos:position pos:line="102" pos:column="21"/></condition><then pos:line="102" pos:column="21">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="103" pos:column="9">mutt_error<pos:position pos:line="103" pos:column="19"/></name> <argument_list pos:line="103" pos:column="20">(<argument><expr><call><name pos:line="103" pos:column="21">_<pos:position pos:line="103" pos:column="22"/></name><argument_list pos:line="103" pos:column="22">(<argument><expr><literal type="string" pos:line="103" pos:column="23">"No authenticators available"<pos:position pos:line="103" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="103" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="55"/></expr_stmt></block></then></if>
  }<pos:position pos:line="104" pos:column="4"/></block></switch>

  <return pos:line="106" pos:column="3">return <expr><operator pos:line="106" pos:column="10">-<pos:position pos:line="106" pos:column="11"/></operator><literal type="number" pos:line="106" pos:column="11">2<pos:position pos:line="106" pos:column="12"/></literal></expr>;<pos:position pos:line="106" pos:column="13"/></return>
}<pos:position pos:line="107" pos:column="2"/></block></function></unit>

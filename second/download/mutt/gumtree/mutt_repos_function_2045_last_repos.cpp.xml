<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2045_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">imap_read_literal<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">FILE<pos:position pos:line="1" pos:column="28"/></name><modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type> <name pos:line="1" pos:column="30">fp<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">IMAP_DATA<pos:position pos:line="1" pos:column="43"/></name><modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type> <name pos:line="1" pos:column="45">idata<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">long<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">bytes<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">progress_t<pos:position pos:line="1" pos:column="74"/></name><modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type> <name pos:line="1" pos:column="76">pbar<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">long<pos:position pos:line="3" pos:column="7"/></name></type> <name pos:line="3" pos:column="8">pos<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name pos:line="4" pos:column="8">c<pos:position pos:line="4" pos:column="9"/></name></decl>;<pos:position pos:line="4" pos:column="10"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">r<pos:position pos:line="6" pos:column="8"/></name> <init pos:line="6" pos:column="9">= <expr><literal type="number" pos:line="6" pos:column="11">0<pos:position pos:line="6" pos:column="12"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">dprint<pos:position pos:line="8" pos:column="9"/></name> <argument_list pos:line="8" pos:column="10">(<argument><expr><literal type="number" pos:line="8" pos:column="11">2<pos:position pos:line="8" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="14">(<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">debugfile<pos:position pos:line="8" pos:column="24"/></name><operator pos:line="8" pos:column="24">,<pos:position pos:line="8" pos:column="25"/></operator> <literal type="string" pos:line="8" pos:column="26">"imap_read_literal: reading %ld bytes\n"<pos:position pos:line="8" pos:column="66"/></literal><operator pos:line="8" pos:column="66">,<pos:position pos:line="8" pos:column="67"/></operator> <name pos:line="8" pos:column="68">bytes<pos:position pos:line="8" pos:column="73"/></name><operator pos:line="8" pos:column="73">)<pos:position pos:line="8" pos:column="74"/></operator></expr></argument>)<pos:position pos:line="8" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="76"/></expr_stmt>

  <for pos:line="10" pos:column="3">for <control pos:line="10" pos:column="7">(<init><expr><name pos:line="10" pos:column="8">pos<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <literal type="number" pos:line="10" pos:column="14">0<pos:position pos:line="10" pos:column="15"/></literal></expr>;<pos:position pos:line="10" pos:column="16"/></init> <condition><expr><name pos:line="10" pos:column="17">pos<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">&lt;<pos:position pos:line="10" pos:column="25"/></operator> <name pos:line="10" pos:column="23">bytes<pos:position pos:line="10" pos:column="28"/></name></expr>;<pos:position pos:line="10" pos:column="29"/></condition> <incr><expr><name pos:line="10" pos:column="30">pos<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">++<pos:position pos:line="10" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="36"/></control>
  <block pos:line="11" pos:column="3">{
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">mutt_socket_readchar<pos:position pos:line="12" pos:column="29"/></name> <argument_list pos:line="12" pos:column="30">(<argument><expr><name><name pos:line="12" pos:column="31">idata<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">-&gt;<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="38">conn<pos:position pos:line="12" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="44">&amp;<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="45">c<pos:position pos:line="12" pos:column="46"/></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call> <operator pos:line="12" pos:column="48">!=<pos:position pos:line="12" pos:column="50"/></operator> <literal type="number" pos:line="12" pos:column="51">1<pos:position pos:line="12" pos:column="52"/></literal></expr>)<pos:position pos:line="12" pos:column="53"/></condition><then pos:line="12" pos:column="53">
    <block pos:line="13" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">dprint<pos:position pos:line="14" pos:column="13"/></name> <argument_list pos:line="14" pos:column="14">(<argument><expr><literal type="number" pos:line="14" pos:column="15">1<pos:position pos:line="14" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="18">(<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="19">debugfile<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">,<pos:position pos:line="14" pos:column="29"/></operator> <literal type="string" pos:line="14" pos:column="30">"imap_read_literal: error during read, %ld bytes read\n"<pos:position pos:line="14" pos:column="86"/></literal><operator pos:line="14" pos:column="86">,<pos:position pos:line="14" pos:column="87"/></operator> <name pos:line="14" pos:column="88">pos<pos:position pos:line="14" pos:column="91"/></name><operator pos:line="14" pos:column="91">)<pos:position pos:line="14" pos:column="92"/></operator></expr></argument>)<pos:position pos:line="14" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="94"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="15" pos:column="7">idata<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">status<pos:position pos:line="15" pos:column="20"/></name></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <name pos:line="15" pos:column="23">IMAP_FATAL<pos:position pos:line="15" pos:column="33"/></name></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>

      <return pos:line="17" pos:column="7">return <expr><operator pos:line="17" pos:column="14">-<pos:position pos:line="17" pos:column="15"/></operator><literal type="number" pos:line="17" pos:column="15">1<pos:position pos:line="17" pos:column="16"/></literal></expr>;<pos:position pos:line="17" pos:column="17"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

<cpp:if pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">if<pos:position pos:line="20" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="20" pos:column="5">1<pos:position pos:line="20" pos:column="6"/></literal></expr></cpp:if>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">r<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">==<pos:position pos:line="21" pos:column="13"/></operator> <literal type="number" pos:line="21" pos:column="14">1<pos:position pos:line="21" pos:column="15"/></literal> <operator pos:line="21" pos:column="16">&amp;&amp;<pos:position pos:line="21" pos:column="26"/></operator> <name pos:line="21" pos:column="19">c<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">!=<pos:position pos:line="21" pos:column="23"/></operator> <literal type="char" pos:line="21" pos:column="24">'\n'<pos:position pos:line="21" pos:column="28"/></literal></expr>)<pos:position pos:line="21" pos:column="29"/></condition><then pos:line="21" pos:column="29">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="7">fputc<pos:position pos:line="22" pos:column="12"/></name> <argument_list pos:line="22" pos:column="13">(<argument><expr><literal type="char" pos:line="22" pos:column="14">'\r'<pos:position pos:line="22" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="20">fp<pos:position pos:line="22" pos:column="22"/></name></expr></argument>)<pos:position pos:line="22" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt></block></then></if>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">c<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">==<pos:position pos:line="24" pos:column="13"/></operator> <literal type="char" pos:line="24" pos:column="14">'\r'<pos:position pos:line="24" pos:column="18"/></literal></expr>)<pos:position pos:line="24" pos:column="19"/></condition><then pos:line="24" pos:column="19">
    <block pos:line="25" pos:column="5">{
      <expr_stmt><expr><name pos:line="26" pos:column="7">r<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator> <literal type="number" pos:line="26" pos:column="11">1<pos:position pos:line="26" pos:column="12"/></literal></expr>;<pos:position pos:line="26" pos:column="13"/></expr_stmt>
      <continue pos:line="27" pos:column="7">continue;<pos:position pos:line="27" pos:column="16"/></continue>
    }<pos:position pos:line="28" pos:column="6"/></block></then>
    <else pos:line="29" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="7">r<pos:position pos:line="30" pos:column="8"/></name> <operator pos:line="30" pos:column="9">=<pos:position pos:line="30" pos:column="10"/></operator> <literal type="number" pos:line="30" pos:column="11">0<pos:position pos:line="30" pos:column="12"/></literal></expr>;<pos:position pos:line="30" pos:column="13"/></expr_stmt></block></else></if>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">fputc<pos:position pos:line="32" pos:column="10"/></name> <argument_list pos:line="32" pos:column="11">(<argument><expr><name pos:line="32" pos:column="12">c<pos:position pos:line="32" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="15">fp<pos:position pos:line="32" pos:column="17"/></name></expr></argument>)<pos:position pos:line="32" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="19"/></expr_stmt>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">pbar<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">&amp;&amp;<pos:position pos:line="34" pos:column="24"/></operator> <operator pos:line="34" pos:column="17">!<pos:position pos:line="34" pos:column="18"/></operator><operator pos:line="34" pos:column="18">(<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="19">pos<pos:position pos:line="34" pos:column="22"/></name> <operator pos:line="34" pos:column="23">%<pos:position pos:line="34" pos:column="24"/></operator> <literal type="number" pos:line="34" pos:column="25">1024<pos:position pos:line="34" pos:column="29"/></literal><operator pos:line="34" pos:column="29">)<pos:position pos:line="34" pos:column="30"/></operator></expr>)<pos:position pos:line="34" pos:column="31"/></condition><then pos:line="34" pos:column="31">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="7">mutt_progress_update<pos:position pos:line="35" pos:column="27"/></name> <argument_list pos:line="35" pos:column="28">(<argument><expr><name pos:line="35" pos:column="29">pbar<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="35">pos<pos:position pos:line="35" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="40">-<pos:position pos:line="35" pos:column="41"/></operator><literal type="number" pos:line="35" pos:column="41">1<pos:position pos:line="35" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="44"/></expr_stmt></block></then></if>
<cpp:ifdef pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">ifdef<pos:position pos:line="36" pos:column="7"/></cpp:directive> <name pos:line="36" pos:column="8">DEBUG<pos:position pos:line="36" pos:column="13"/></name></cpp:ifdef>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">debuglevel<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">&gt;=<pos:position pos:line="37" pos:column="25"/></operator> <name pos:line="37" pos:column="23">IMAP_LOG_LTRL<pos:position pos:line="37" pos:column="36"/></name></expr>)<pos:position pos:line="37" pos:column="37"/></condition><then pos:line="37" pos:column="37">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="7">fputc<pos:position pos:line="38" pos:column="12"/></name> <argument_list pos:line="38" pos:column="13">(<argument><expr><name pos:line="38" pos:column="14">c<pos:position pos:line="38" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="17">debugfile<pos:position pos:line="38" pos:column="26"/></name></expr></argument>)<pos:position pos:line="38" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="28"/></expr_stmt></block></then></if>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="40" pos:column="4"/></block></for>

  <return pos:line="42" pos:column="3">return <expr><literal type="number" pos:line="42" pos:column="10">0<pos:position pos:line="42" pos:column="11"/></literal></expr>;<pos:position pos:line="42" pos:column="12"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_463_mutt-1.4.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pgp_send_menu<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">int<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">bits<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">int<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">redraw<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">pgp_key_t<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">p<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">input_signas<pos:position pos:line="4" pos:column="20"/></name><index pos:line="4" pos:column="20">[<expr><name pos:line="4" pos:column="21">SHORT_STRING<pos:position pos:line="4" pos:column="33"/></name></expr>]<pos:position pos:line="4" pos:column="34"/></index></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>

  <switch pos:line="6" pos:column="3">switch <condition pos:line="6" pos:column="10">(<expr><call><name pos:line="6" pos:column="11">mutt_multi_choice<pos:position pos:line="6" pos:column="28"/></name> <argument_list pos:line="6" pos:column="29">(<argument><expr><call><name pos:line="6" pos:column="30">_<pos:position pos:line="6" pos:column="31"/></name><argument_list pos:line="6" pos:column="31">(<argument><expr><literal type="string" pos:line="6" pos:column="32">"(e)ncrypt, (s)ign, sign (a)s, (b)oth, or (f)orget it? "<pos:position pos:line="6" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="89"/></argument_list></call></expr></argument>,
			     <argument><expr><call><name pos:line="7" pos:column="30">_<pos:position pos:line="7" pos:column="31"/></name><argument_list pos:line="7" pos:column="31">(<argument><expr><literal type="string" pos:line="7" pos:column="32">"esabf"<pos:position pos:line="7" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="42"/></condition>
  <block pos:line="8" pos:column="3">{
  <case pos:line="9" pos:column="3">case <expr><literal type="number" pos:line="9" pos:column="8">1<pos:position pos:line="9" pos:column="9"/></literal></expr>:<pos:position pos:line="9" pos:column="10"/></case> <comment type="block" pos:line="9" pos:column="11">/* (e)ncrypt */</comment>
    <expr_stmt><expr><name pos:line="10" pos:column="5">bits<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">|=<pos:position pos:line="10" pos:column="12"/></operator> <name pos:line="10" pos:column="13">PGPENCRYPT<pos:position pos:line="10" pos:column="23"/></name></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>
    <break pos:line="11" pos:column="5">break;<pos:position pos:line="11" pos:column="11"/></break>

  <case pos:line="13" pos:column="3">case <expr><literal type="number" pos:line="13" pos:column="8">2<pos:position pos:line="13" pos:column="9"/></literal></expr>:<pos:position pos:line="13" pos:column="10"/></case> <comment type="block" pos:line="13" pos:column="11">/* (s)ign */</comment>
    <expr_stmt><expr><name pos:line="14" pos:column="5">bits<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">|=<pos:position pos:line="14" pos:column="12"/></operator> <name pos:line="14" pos:column="13">PGPSIGN<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
    <break pos:line="15" pos:column="5">break;<pos:position pos:line="15" pos:column="11"/></break>

  <case pos:line="17" pos:column="3">case <expr><literal type="number" pos:line="17" pos:column="8">3<pos:position pos:line="17" pos:column="9"/></literal></expr>:<pos:position pos:line="17" pos:column="10"/></case> <comment type="block" pos:line="17" pos:column="11">/* sign (a)s */</comment>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">unset_option<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">(<argument><expr><name pos:line="19" pos:column="18">OPTPGPCHECKTRUST<pos:position pos:line="19" pos:column="34"/></name></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">p<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <call><name pos:line="21" pos:column="14">pgp_ask_for_key<pos:position pos:line="21" pos:column="29"/></name> <argument_list pos:line="21" pos:column="30">(<argument><expr><call><name pos:line="21" pos:column="31">_<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><literal type="string" pos:line="21" pos:column="33">"Sign as: "<pos:position pos:line="21" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="21" pos:column="47">NULL<pos:position pos:line="21" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="53">KEYFLAG_CANSIGN<pos:position pos:line="21" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="70">PGP_SECRING<pos:position pos:line="21" pos:column="81"/></name></expr></argument>)<pos:position pos:line="21" pos:column="82"/></argument_list></call><operator pos:line="21" pos:column="82">)<pos:position pos:line="21" pos:column="83"/></operator></expr>)<pos:position pos:line="21" pos:column="84"/></condition><then pos:line="21" pos:column="84">
    <block pos:line="22" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">snprintf<pos:position pos:line="23" pos:column="15"/></name> <argument_list pos:line="23" pos:column="16">(<argument><expr><name pos:line="23" pos:column="17">input_signas<pos:position pos:line="23" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="31">sizeof <argument_list pos:line="23" pos:column="38">(<argument><expr><name pos:line="23" pos:column="39">input_signas<pos:position pos:line="23" pos:column="51"/></name></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="54">"0x%s"<pos:position pos:line="23" pos:column="60"/></literal></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="62">pgp_keyid<pos:position pos:line="23" pos:column="71"/></name> <argument_list pos:line="23" pos:column="72">(<argument><expr><name pos:line="23" pos:column="73">p<pos:position pos:line="23" pos:column="74"/></name></expr></argument>)<pos:position pos:line="23" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="77"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">mutt_str_replace<pos:position pos:line="24" pos:column="23"/></name> <argument_list pos:line="24" pos:column="24">(<argument><expr><operator pos:line="24" pos:column="25">&amp;<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="26">PgpSignAs<pos:position pos:line="24" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="37">input_signas<pos:position pos:line="24" pos:column="49"/></name></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">pgp_free_key<pos:position pos:line="25" pos:column="19"/></name> <argument_list pos:line="25" pos:column="20">(<argument><expr><operator pos:line="25" pos:column="21">&amp;<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="22">p<pos:position pos:line="25" pos:column="23"/></name></expr></argument>)<pos:position pos:line="25" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>
      
      <expr_stmt><expr><name pos:line="27" pos:column="7">bits<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">|=<pos:position pos:line="27" pos:column="14"/></operator> <name pos:line="27" pos:column="15">PGPSIGN<pos:position pos:line="27" pos:column="22"/></name></expr>;<pos:position pos:line="27" pos:column="23"/></expr_stmt>
	
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">pgp_void_passphrase<pos:position pos:line="29" pos:column="26"/></name> <argument_list pos:line="29" pos:column="27">()<pos:position pos:line="29" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>	<comment type="block" pos:line="29" pos:column="33">/* probably need a different passphrase */</comment>
    }<pos:position pos:line="30" pos:column="6"/></block></then>
    <else pos:line="31" pos:column="5">else
    <block pos:line="32" pos:column="5">{
      <expr_stmt><expr><name pos:line="33" pos:column="7">bits<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">&amp;=<pos:position pos:line="33" pos:column="18"/></operator> <operator pos:line="33" pos:column="15">~<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="16">PGPSIGN<pos:position pos:line="33" pos:column="23"/></name></expr>;<pos:position pos:line="33" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></else></if>

    <expr_stmt><expr><operator pos:line="36" pos:column="5">*<pos:position pos:line="36" pos:column="6"/></operator><name pos:line="36" pos:column="6">redraw<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">=<pos:position pos:line="36" pos:column="14"/></operator> <name pos:line="36" pos:column="15">REDRAW_FULL<pos:position pos:line="36" pos:column="26"/></name></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>
    <break pos:line="37" pos:column="5">break;<pos:position pos:line="37" pos:column="11"/></break>

  <case pos:line="39" pos:column="3">case <expr><literal type="number" pos:line="39" pos:column="8">4<pos:position pos:line="39" pos:column="9"/></literal></expr>:<pos:position pos:line="39" pos:column="10"/></case> <comment type="block" pos:line="39" pos:column="11">/* (b)oth */</comment>
    <expr_stmt><expr><name pos:line="40" pos:column="5">bits<pos:position pos:line="40" pos:column="9"/></name> <operator pos:line="40" pos:column="10">=<pos:position pos:line="40" pos:column="11"/></operator> <name pos:line="40" pos:column="12">PGPENCRYPT<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">|<pos:position pos:line="40" pos:column="24"/></operator> <name pos:line="40" pos:column="25">PGPSIGN<pos:position pos:line="40" pos:column="32"/></name></expr>;<pos:position pos:line="40" pos:column="33"/></expr_stmt>
    <break pos:line="41" pos:column="5">break;<pos:position pos:line="41" pos:column="11"/></break>

  <case pos:line="43" pos:column="3">case <expr><literal type="number" pos:line="43" pos:column="8">5<pos:position pos:line="43" pos:column="9"/></literal></expr>:<pos:position pos:line="43" pos:column="10"/></case> <comment type="block" pos:line="43" pos:column="11">/* (f)orget it */</comment>
    <expr_stmt><expr><name pos:line="44" pos:column="5">bits<pos:position pos:line="44" pos:column="9"/></name> <operator pos:line="44" pos:column="10">=<pos:position pos:line="44" pos:column="11"/></operator> <literal type="number" pos:line="44" pos:column="12">0<pos:position pos:line="44" pos:column="13"/></literal></expr>;<pos:position pos:line="44" pos:column="14"/></expr_stmt>
    <break pos:line="45" pos:column="5">break;<pos:position pos:line="45" pos:column="11"/></break>
  }<pos:position pos:line="46" pos:column="4"/></block></switch>
  <if pos:line="47" pos:column="3">if <condition pos:line="47" pos:column="6">(<expr><operator pos:line="47" pos:column="7">!<pos:position pos:line="47" pos:column="8"/></operator><operator pos:line="47" pos:column="8">*<pos:position pos:line="47" pos:column="9"/></operator><name pos:line="47" pos:column="9">redraw<pos:position pos:line="47" pos:column="15"/></name></expr>)<pos:position pos:line="47" pos:column="16"/></condition><then pos:line="47" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="5">redraw_pgp_lines<pos:position pos:line="48" pos:column="21"/></name> <argument_list pos:line="48" pos:column="22">(<argument><expr><name pos:line="48" pos:column="23">bits<pos:position pos:line="48" pos:column="27"/></name></expr></argument>)<pos:position pos:line="48" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="29"/></expr_stmt></block></then></if>
  <return pos:line="49" pos:column="3">return <expr><operator pos:line="49" pos:column="10">(<pos:position pos:line="49" pos:column="11"/></operator><name pos:line="49" pos:column="11">bits<pos:position pos:line="49" pos:column="15"/></name><operator pos:line="49" pos:column="15">)<pos:position pos:line="49" pos:column="16"/></operator></expr>;<pos:position pos:line="49" pos:column="17"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1796_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_parse_rc_line<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<comment type="block" pos:line="1" pos:column="25">/* const */</comment> <parameter><decl><type><name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">line<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">BUFFER<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">token<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">BUFFER<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">err<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="10">r<pos:position pos:line="3" pos:column="11"/></name> <init pos:line="3" pos:column="12">= <expr><operator pos:line="3" pos:column="14">-<pos:position pos:line="3" pos:column="15"/></operator><literal type="number" pos:line="3" pos:column="15">1<pos:position pos:line="3" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">BUFFER<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">expn<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">!<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">line<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">||<pos:position pos:line="6" pos:column="15"/></operator> <operator pos:line="6" pos:column="16">!<pos:position pos:line="6" pos:column="17"/></operator><operator pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="18">line<pos:position pos:line="6" pos:column="22"/></name></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><literal type="number" pos:line="7" pos:column="12">0<pos:position pos:line="7" pos:column="13"/></literal></expr>;<pos:position pos:line="7" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">mutt_buffer_init<pos:position pos:line="9" pos:column="19"/></name> <argument_list pos:line="9" pos:column="20">(<argument><expr><operator pos:line="9" pos:column="21">&amp;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="22">expn<pos:position pos:line="9" pos:column="26"/></name></expr></argument>)<pos:position pos:line="9" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">expn<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">.<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">data<pos:position pos:line="10" pos:column="12"/></name></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <name><name pos:line="10" pos:column="15">expn<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">.<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="20">dptr<pos:position pos:line="10" pos:column="24"/></name></name> <operator pos:line="10" pos:column="25">=<pos:position pos:line="10" pos:column="26"/></operator> <name pos:line="10" pos:column="27">line<pos:position pos:line="10" pos:column="31"/></name></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">expn<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">.<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">dsize<pos:position pos:line="11" pos:column="13"/></name></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <call><name pos:line="11" pos:column="16">mutt_strlen<pos:position pos:line="11" pos:column="27"/></name> <argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">line<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="13" pos:column="3">*<pos:position pos:line="13" pos:column="4"/></operator><name><name pos:line="13" pos:column="4">err<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">-&gt;<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="9">data<pos:position pos:line="13" pos:column="13"/></name></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <literal type="number" pos:line="13" pos:column="16">0<pos:position pos:line="13" pos:column="17"/></literal></expr>;<pos:position pos:line="13" pos:column="18"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">SKIPWS<pos:position pos:line="15" pos:column="9"/></name> <argument_list pos:line="15" pos:column="10">(<argument><expr><name><name pos:line="15" pos:column="11">expn<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">.<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="16">dptr<pos:position pos:line="15" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>
  <while pos:line="16" pos:column="3">while <condition pos:line="16" pos:column="9">(<expr><operator pos:line="16" pos:column="10">*<pos:position pos:line="16" pos:column="11"/></operator><name><name pos:line="16" pos:column="11">expn<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">.<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="16">dptr<pos:position pos:line="16" pos:column="20"/></name></name></expr>)<pos:position pos:line="16" pos:column="21"/></condition>
  <block pos:line="17" pos:column="3">{
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">*<pos:position pos:line="18" pos:column="10"/></operator><name><name pos:line="18" pos:column="10">expn<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">.<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">dptr<pos:position pos:line="18" pos:column="19"/></name></name> <operator pos:line="18" pos:column="20">==<pos:position pos:line="18" pos:column="22"/></operator> <literal type="char" pos:line="18" pos:column="23">'#'<pos:position pos:line="18" pos:column="26"/></literal></expr>)<pos:position pos:line="18" pos:column="27"/></condition><then pos:line="18" pos:column="27">
      <block type="pseudo"><break pos:line="19" pos:column="7">break;<pos:position pos:line="19" pos:column="13"/></break></block></then></if> <comment type="block" pos:line="19" pos:column="14">/* rest of line is a comment */</comment>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">*<pos:position pos:line="20" pos:column="10"/></operator><name><name pos:line="20" pos:column="10">expn<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">.<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">dptr<pos:position pos:line="20" pos:column="19"/></name></name> <operator pos:line="20" pos:column="20">==<pos:position pos:line="20" pos:column="22"/></operator> <literal type="char" pos:line="20" pos:column="23">';'<pos:position pos:line="20" pos:column="26"/></literal></expr>)<pos:position pos:line="20" pos:column="27"/></condition><then pos:line="20" pos:column="27">
    <block pos:line="21" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="22" pos:column="7">expn<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">.<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="12">dptr<pos:position pos:line="22" pos:column="16"/></name></name><operator pos:line="22" pos:column="16">++<pos:position pos:line="22" pos:column="18"/></operator></expr>;<pos:position pos:line="22" pos:column="19"/></expr_stmt>
      <continue pos:line="23" pos:column="7">continue;<pos:position pos:line="23" pos:column="16"/></continue>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">mutt_extract_token<pos:position pos:line="25" pos:column="23"/></name> <argument_list pos:line="25" pos:column="24">(<argument><expr><name pos:line="25" pos:column="25">token<pos:position pos:line="25" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="32">&amp;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="33">expn<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="39">0<pos:position pos:line="25" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="42"/></expr_stmt>
    <for pos:line="26" pos:column="5">for <control pos:line="26" pos:column="9">(<init><expr><name pos:line="26" pos:column="10">i<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <literal type="number" pos:line="26" pos:column="14">0<pos:position pos:line="26" pos:column="15"/></literal></expr>;<pos:position pos:line="26" pos:column="16"/></init> <condition><expr><name><name pos:line="26" pos:column="17">Commands<pos:position pos:line="26" pos:column="25"/></name><index pos:line="26" pos:column="25">[<expr><name pos:line="26" pos:column="26">i<pos:position pos:line="26" pos:column="27"/></name></expr>]<pos:position pos:line="26" pos:column="28"/></index></name><operator pos:line="26" pos:column="28">.<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="29">name<pos:position pos:line="26" pos:column="33"/></name></expr>;<pos:position pos:line="26" pos:column="34"/></condition> <incr><expr><name pos:line="26" pos:column="35">i<pos:position pos:line="26" pos:column="36"/></name><operator pos:line="26" pos:column="36">++<pos:position pos:line="26" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="39"/></control>
    <block pos:line="27" pos:column="5">{
      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><operator pos:line="28" pos:column="11">!<pos:position pos:line="28" pos:column="12"/></operator><call><name pos:line="28" pos:column="12">mutt_strcmp<pos:position pos:line="28" pos:column="23"/></name> <argument_list pos:line="28" pos:column="24">(<argument><expr><name><name pos:line="28" pos:column="25">token<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">-&gt;<pos:position pos:line="28" pos:column="35"/></operator><name pos:line="28" pos:column="32">data<pos:position pos:line="28" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="38">Commands<pos:position pos:line="28" pos:column="46"/></name><index pos:line="28" pos:column="46">[<expr><name pos:line="28" pos:column="47">i<pos:position pos:line="28" pos:column="48"/></name></expr>]<pos:position pos:line="28" pos:column="49"/></index></name><operator pos:line="28" pos:column="49">.<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="50">name<pos:position pos:line="28" pos:column="54"/></name></expr></argument>)<pos:position pos:line="28" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="56"/></condition><then pos:line="28" pos:column="56">
      <block pos:line="29" pos:column="7">{
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name><name pos:line="30" pos:column="13">Commands<pos:position pos:line="30" pos:column="21"/></name><index pos:line="30" pos:column="21">[<expr><name pos:line="30" pos:column="22">i<pos:position pos:line="30" pos:column="23"/></name></expr>]<pos:position pos:line="30" pos:column="24"/></index></name><operator pos:line="30" pos:column="24">.<pos:position pos:line="30" pos:column="25"/></operator><call><name pos:line="30" pos:column="25">func<pos:position pos:line="30" pos:column="29"/></name> <argument_list pos:line="30" pos:column="30">(<argument><expr><name pos:line="30" pos:column="31">token<pos:position pos:line="30" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="38">&amp;<pos:position pos:line="30" pos:column="43"/></operator><name pos:line="30" pos:column="39">expn<pos:position pos:line="30" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="45">Commands<pos:position pos:line="30" pos:column="53"/></name><index pos:line="30" pos:column="53">[<expr><name pos:line="30" pos:column="54">i<pos:position pos:line="30" pos:column="55"/></name></expr>]<pos:position pos:line="30" pos:column="56"/></index></name><operator pos:line="30" pos:column="56">.<pos:position pos:line="30" pos:column="57"/></operator><name pos:line="30" pos:column="57">data<pos:position pos:line="30" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="63">err<pos:position pos:line="30" pos:column="66"/></name></expr></argument>)<pos:position pos:line="30" pos:column="67"/></argument_list></call> <operator pos:line="30" pos:column="68">!=<pos:position pos:line="30" pos:column="70"/></operator> <literal type="number" pos:line="30" pos:column="71">0<pos:position pos:line="30" pos:column="72"/></literal></expr>)<pos:position pos:line="30" pos:column="73"/></condition><then pos:line="30" pos:column="73">
	  <block type="pseudo"><goto pos:line="31" pos:column="11">goto <name pos:line="31" pos:column="16">finish<pos:position pos:line="31" pos:column="22"/></name>;<pos:position pos:line="31" pos:column="23"/></goto></block></then></if>
        <break pos:line="32" pos:column="9">break;<pos:position pos:line="32" pos:column="15"/></break>
      }<pos:position pos:line="33" pos:column="8"/></block></then></if>
    }<pos:position pos:line="34" pos:column="6"/></block></for>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><operator pos:line="35" pos:column="9">!<pos:position pos:line="35" pos:column="10"/></operator><name><name pos:line="35" pos:column="10">Commands<pos:position pos:line="35" pos:column="18"/></name><index pos:line="35" pos:column="18">[<expr><name pos:line="35" pos:column="19">i<pos:position pos:line="35" pos:column="20"/></name></expr>]<pos:position pos:line="35" pos:column="21"/></index></name><operator pos:line="35" pos:column="21">.<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">name<pos:position pos:line="35" pos:column="26"/></name></expr>)<pos:position pos:line="35" pos:column="27"/></condition><then pos:line="35" pos:column="27">
    <block pos:line="36" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="37" pos:column="7">snprintf<pos:position pos:line="37" pos:column="15"/></name> <argument_list pos:line="37" pos:column="16">(<argument><expr><name><name pos:line="37" pos:column="17">err<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">-&gt;<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="22">data<pos:position pos:line="37" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="28">err<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">-&gt;<pos:position pos:line="37" pos:column="36"/></operator><name pos:line="37" pos:column="33">dsize<pos:position pos:line="37" pos:column="38"/></name></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="40">_<pos:position pos:line="37" pos:column="41"/></name><argument_list pos:line="37" pos:column="41">(<argument><expr><literal type="string" pos:line="37" pos:column="42">"%s: unknown command"<pos:position pos:line="37" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="66">NONULL<pos:position pos:line="37" pos:column="72"/></name> <argument_list pos:line="37" pos:column="73">(<argument><expr><name><name pos:line="37" pos:column="74">token<pos:position pos:line="37" pos:column="79"/></name><operator pos:line="37" pos:column="79">-&gt;<pos:position pos:line="37" pos:column="84"/></operator><name pos:line="37" pos:column="81">data<pos:position pos:line="37" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="88"/></expr_stmt>
      <goto pos:line="38" pos:column="7">goto <name pos:line="38" pos:column="12">finish<pos:position pos:line="38" pos:column="18"/></name>;<pos:position pos:line="38" pos:column="19"/></goto>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
  }<pos:position pos:line="40" pos:column="4"/></block></while>
  <expr_stmt><expr><name pos:line="41" pos:column="3">r<pos:position pos:line="41" pos:column="4"/></name> <operator pos:line="41" pos:column="5">=<pos:position pos:line="41" pos:column="6"/></operator> <literal type="number" pos:line="41" pos:column="7">0<pos:position pos:line="41" pos:column="8"/></literal></expr>;<pos:position pos:line="41" pos:column="9"/></expr_stmt>
<label><name pos:line="42" pos:column="1">finish<pos:position pos:line="42" pos:column="7"/></name>:<pos:position pos:line="42" pos:column="8"/></label>
  <if pos:line="43" pos:column="3">if <condition pos:line="43" pos:column="6">(<expr><name><name pos:line="43" pos:column="7">expn<pos:position pos:line="43" pos:column="11"/></name><operator pos:line="43" pos:column="11">.<pos:position pos:line="43" pos:column="12"/></operator><name pos:line="43" pos:column="12">destroy<pos:position pos:line="43" pos:column="19"/></name></name></expr>)<pos:position pos:line="43" pos:column="20"/></condition><then pos:line="43" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="5">FREE<pos:position pos:line="44" pos:column="9"/></name> <argument_list pos:line="44" pos:column="10">(<argument><expr><operator pos:line="44" pos:column="11">&amp;<pos:position pos:line="44" pos:column="16"/></operator><name><name pos:line="44" pos:column="12">expn<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">.<pos:position pos:line="44" pos:column="17"/></operator><name pos:line="44" pos:column="17">data<pos:position pos:line="44" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="23"/></expr_stmt></block></then></if>
  <return pos:line="45" pos:column="3">return <expr><operator pos:line="45" pos:column="10">(<pos:position pos:line="45" pos:column="11"/></operator><name pos:line="45" pos:column="11">r<pos:position pos:line="45" pos:column="12"/></name><operator pos:line="45" pos:column="12">)<pos:position pos:line="45" pos:column="13"/></operator></expr>;<pos:position pos:line="45" pos:column="14"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

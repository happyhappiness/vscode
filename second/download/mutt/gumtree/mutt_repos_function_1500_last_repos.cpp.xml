<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1500_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">is_ansi<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">unsigned<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">buf<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <while pos:line="3" pos:column="3">while <condition pos:line="3" pos:column="9">(<expr><operator pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></operator><name pos:line="3" pos:column="11">buf<pos:position pos:line="3" pos:column="14"/></name> <operator pos:line="3" pos:column="15">&amp;&amp;<pos:position pos:line="3" pos:column="25"/></operator> <operator pos:line="3" pos:column="18">(<pos:position pos:line="3" pos:column="19"/></operator><call><name pos:line="3" pos:column="19">isdigit<pos:position pos:line="3" pos:column="26"/></name><argument_list pos:line="3" pos:column="26">(<argument><expr><operator pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></operator><name pos:line="3" pos:column="28">buf<pos:position pos:line="3" pos:column="31"/></name></expr></argument>)<pos:position pos:line="3" pos:column="32"/></argument_list></call> <operator pos:line="3" pos:column="33">||<pos:position pos:line="3" pos:column="35"/></operator> <operator pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></operator><name pos:line="3" pos:column="37">buf<pos:position pos:line="3" pos:column="40"/></name> <operator pos:line="3" pos:column="41">==<pos:position pos:line="3" pos:column="43"/></operator> <literal type="char" pos:line="3" pos:column="44">';'<pos:position pos:line="3" pos:column="47"/></literal><operator pos:line="3" pos:column="47">)<pos:position pos:line="3" pos:column="48"/></operator></expr>)<pos:position pos:line="3" pos:column="49"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="4" pos:column="5">buf<pos:position pos:line="4" pos:column="8"/></name><operator pos:line="4" pos:column="8">++<pos:position pos:line="4" pos:column="10"/></operator></expr>;<pos:position pos:line="4" pos:column="11"/></expr_stmt></block></while>
  <return pos:line="5" pos:column="3">return <expr><operator pos:line="5" pos:column="10">(<pos:position pos:line="5" pos:column="11"/></operator><operator pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></operator><name pos:line="5" pos:column="12">buf<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">==<pos:position pos:line="5" pos:column="18"/></operator> <literal type="char" pos:line="5" pos:column="19">'m'<pos:position pos:line="5" pos:column="22"/></literal><operator pos:line="5" pos:column="22">)<pos:position pos:line="5" pos:column="23"/></operator></expr>;<pos:position pos:line="5" pos:column="24"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

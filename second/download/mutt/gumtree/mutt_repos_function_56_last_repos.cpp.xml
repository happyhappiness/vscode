<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_56_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_make_help<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">char<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">d<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="31">size_t<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">dlen<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">txt<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">int<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">menu<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="71">int<pos:position pos:line="1" pos:column="74"/></name></type> <name pos:line="1" pos:column="75">op<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buf<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">SHORT_STRING<pos:position pos:line="3" pos:column="24"/></name></expr>]<pos:position pos:line="3" pos:column="25"/></index></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name pos:line="5" pos:column="7">km_expand_key<pos:position pos:line="5" pos:column="20"/></name> <argument_list pos:line="5" pos:column="21">(<argument><expr><name pos:line="5" pos:column="22">buf<pos:position pos:line="5" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="27">sizeof <argument_list pos:line="5" pos:column="34">(<argument><expr><name pos:line="5" pos:column="35">buf<pos:position pos:line="5" pos:column="38"/></name></expr></argument>)<pos:position pos:line="5" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="41">km_find_func<pos:position pos:line="5" pos:column="53"/></name> <argument_list pos:line="5" pos:column="54">(<argument><expr><name pos:line="5" pos:column="55">menu<pos:position pos:line="5" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="61">op<pos:position pos:line="5" pos:column="63"/></name></expr></argument>)<pos:position pos:line="5" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="65"/></argument_list></call> <operator pos:line="5" pos:column="66">||<pos:position pos:line="5" pos:column="68"/></operator>
      <call><name pos:line="6" pos:column="7">km_expand_key<pos:position pos:line="6" pos:column="20"/></name> <argument_list pos:line="6" pos:column="21">(<argument><expr><name pos:line="6" pos:column="22">buf<pos:position pos:line="6" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="27">sizeof <argument_list pos:line="6" pos:column="34">(<argument><expr><name pos:line="6" pos:column="35">buf<pos:position pos:line="6" pos:column="38"/></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="41">km_find_func<pos:position pos:line="6" pos:column="53"/></name> <argument_list pos:line="6" pos:column="54">(<argument><expr><name pos:line="6" pos:column="55">MENU_GENERIC<pos:position pos:line="6" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="69">op<pos:position pos:line="6" pos:column="71"/></name></expr></argument>)<pos:position pos:line="6" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="74"/></condition><then pos:line="6" pos:column="74">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="5">snprintf<pos:position pos:line="7" pos:column="13"/></name> <argument_list pos:line="7" pos:column="14">(<argument><expr><name pos:line="7" pos:column="15">d<pos:position pos:line="7" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="18">dlen<pos:position pos:line="7" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="24">"%s:%s"<pos:position pos:line="7" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="33">buf<pos:position pos:line="7" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="38">txt<pos:position pos:line="7" pos:column="41"/></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="43"/></expr_stmt></block></then>
  <else pos:line="8" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="9" pos:column="5">d<pos:position pos:line="9" pos:column="6"/></name><index pos:line="9" pos:column="6">[<expr><literal type="number" pos:line="9" pos:column="7">0<pos:position pos:line="9" pos:column="8"/></literal></expr>]<pos:position pos:line="9" pos:column="9"/></index></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></expr_stmt></block></else></if>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_859_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_edit_headers<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">editor<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>,
			<parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">char<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">body<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>,
			<parameter><decl><type><name pos:line="3" pos:column="25">HEADER<pos:position pos:line="3" pos:column="31"/></name> <modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">msg<pos:position pos:line="3" pos:column="36"/></name></decl></parameter>,
			<parameter><decl><type><name pos:line="4" pos:column="25">char<pos:position pos:line="4" pos:column="29"/></name> <modifier pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></modifier></type><name pos:line="4" pos:column="31">fcc<pos:position pos:line="4" pos:column="34"/></name></decl></parameter>,
			<parameter><decl><type><name pos:line="5" pos:column="25">size_t<pos:position pos:line="5" pos:column="31"/></name></type> <name pos:line="5" pos:column="32">fcclen<pos:position pos:line="5" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="39"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">path<pos:position pos:line="7" pos:column="12"/></name><index pos:line="7" pos:column="12">[<expr><name pos:line="7" pos:column="13">_POSIX_PATH_MAX<pos:position pos:line="7" pos:column="28"/></name></expr>]<pos:position pos:line="7" pos:column="29"/></index></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>	<comment type="block" pos:line="7" pos:column="33">/* tempfile used to edit headers + body */</comment>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">buffer<pos:position pos:line="8" pos:column="14"/></name><index pos:line="8" pos:column="14">[<expr><name pos:line="8" pos:column="15">LONG_STRING<pos:position pos:line="8" pos:column="26"/></name></expr>]<pos:position pos:line="8" pos:column="27"/></index></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="9" pos:column="3">const<pos:position pos:line="9" pos:column="8"/></specifier> <name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">p<pos:position pos:line="9" pos:column="16"/></name></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">FILE<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">ifp<pos:position pos:line="10" pos:column="12"/></name></decl>, <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="15">ofp<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">i<pos:position pos:line="11" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="10">keep<pos:position pos:line="11" pos:column="14"/></name></decl>;<pos:position pos:line="11" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">ENVELOPE<pos:position pos:line="12" pos:column="11"/></name> <modifier pos:line="12" pos:column="12">*<pos:position pos:line="12" pos:column="13"/></modifier></type><name pos:line="12" pos:column="13">n<pos:position pos:line="12" pos:column="14"/></name></decl>;<pos:position pos:line="12" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">time_t<pos:position pos:line="13" pos:column="9"/></name></type> <name pos:line="13" pos:column="10">mtime<pos:position pos:line="13" pos:column="15"/></name></decl>;<pos:position pos:line="13" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="14" pos:column="3">struct<pos:position pos:line="14" pos:column="9"/></name> <name pos:line="14" pos:column="10">stat<pos:position pos:line="14" pos:column="14"/></name></name></type> <name pos:line="14" pos:column="15">st<pos:position pos:line="14" pos:column="17"/></name></decl>;<pos:position pos:line="14" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">LIST<pos:position pos:line="15" pos:column="7"/></name> <modifier pos:line="15" pos:column="8">*<pos:position pos:line="15" pos:column="9"/></modifier></type><name pos:line="15" pos:column="9">cur<pos:position pos:line="15" pos:column="12"/></name></decl>, <modifier pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></modifier><modifier pos:line="15" pos:column="15">*<pos:position pos:line="15" pos:column="16"/></modifier><decl><type ref="prev"/><name pos:line="15" pos:column="16">last<pos:position pos:line="15" pos:column="20"/></name> <init pos:line="15" pos:column="21">= <expr><name pos:line="15" pos:column="23">NULL<pos:position pos:line="15" pos:column="27"/></name></expr></init></decl>, <modifier pos:line="15" pos:column="29">*<pos:position pos:line="15" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="15" pos:column="30">tmp<pos:position pos:line="15" pos:column="33"/></name></decl>;<pos:position pos:line="15" pos:column="34"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">mutt_mktemp<pos:position pos:line="17" pos:column="14"/></name> <argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">path<pos:position pos:line="17" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="22">sizeof <argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">path<pos:position pos:line="17" pos:column="34"/></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">(<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">ofp<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">safe_fopen<pos:position pos:line="18" pos:column="24"/></name> <argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">path<pos:position pos:line="18" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="32">"w"<pos:position pos:line="18" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></call><operator pos:line="18" pos:column="36">)<pos:position pos:line="18" pos:column="37"/></operator> <operator pos:line="18" pos:column="38">==<pos:position pos:line="18" pos:column="40"/></operator> <name pos:line="18" pos:column="41">NULL<pos:position pos:line="18" pos:column="45"/></name></expr>)<pos:position pos:line="18" pos:column="46"/></condition><then pos:line="18" pos:column="46">
  <block pos:line="19" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">mutt_perror<pos:position pos:line="20" pos:column="16"/></name> <argument_list pos:line="20" pos:column="17">(<argument><expr><name pos:line="20" pos:column="18">path<pos:position pos:line="20" pos:column="22"/></name></expr></argument>)<pos:position pos:line="20" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="24"/></expr_stmt>
    <return pos:line="21" pos:column="5">return;<pos:position pos:line="21" pos:column="12"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>
  
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">mutt_env_to_local<pos:position pos:line="24" pos:column="20"/></name> <argument_list pos:line="24" pos:column="21">(<argument><expr><name><name pos:line="24" pos:column="22">msg<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">-&gt;<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="27">env<pos:position pos:line="24" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">mutt_write_rfc822_header<pos:position pos:line="25" pos:column="27"/></name> <argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">ofp<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="34">msg<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">-&gt;<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="39">env<pos:position pos:line="25" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="44">NULL<pos:position pos:line="25" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="50">1<pos:position pos:line="25" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="53">0<pos:position pos:line="25" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">fputc<pos:position pos:line="26" pos:column="8"/></name> <argument_list pos:line="26" pos:column="9">(<argument><expr><literal type="char" pos:line="26" pos:column="10">'\n'<pos:position pos:line="26" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="16">ofp<pos:position pos:line="26" pos:column="19"/></name></expr></argument>)<pos:position pos:line="26" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="21"/></expr_stmt>	<comment type="block" pos:line="26" pos:column="25">/* tie off the header. */</comment>

  <comment type="block" pos:line="28" pos:column="3">/* now copy the body of the message. */</comment>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><operator pos:line="29" pos:column="7">(<pos:position pos:line="29" pos:column="8"/></operator><name pos:line="29" pos:column="8">ifp<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <call><name pos:line="29" pos:column="14">fopen<pos:position pos:line="29" pos:column="19"/></name> <argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">body<pos:position pos:line="29" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="27">"r"<pos:position pos:line="29" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="31"/></argument_list></call><operator pos:line="29" pos:column="31">)<pos:position pos:line="29" pos:column="32"/></operator> <operator pos:line="29" pos:column="33">==<pos:position pos:line="29" pos:column="35"/></operator> <name pos:line="29" pos:column="36">NULL<pos:position pos:line="29" pos:column="40"/></name></expr>)<pos:position pos:line="29" pos:column="41"/></condition><then pos:line="29" pos:column="41">
  <block pos:line="30" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">mutt_perror<pos:position pos:line="31" pos:column="16"/></name> <argument_list pos:line="31" pos:column="17">(<argument><expr><name pos:line="31" pos:column="18">body<pos:position pos:line="31" pos:column="22"/></name></expr></argument>)<pos:position pos:line="31" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt>
    <return pos:line="32" pos:column="5">return;<pos:position pos:line="32" pos:column="12"/></return>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="35" pos:column="3">mutt_copy_stream<pos:position pos:line="35" pos:column="19"/></name> <argument_list pos:line="35" pos:column="20">(<argument><expr><name pos:line="35" pos:column="21">ifp<pos:position pos:line="35" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="26">ofp<pos:position pos:line="35" pos:column="29"/></name></expr></argument>)<pos:position pos:line="35" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="37" pos:column="3">safe_fclose<pos:position pos:line="37" pos:column="14"/></name> <argument_list pos:line="37" pos:column="15">(<argument><expr><operator pos:line="37" pos:column="16">&amp;<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="17">ifp<pos:position pos:line="37" pos:column="20"/></name></expr></argument>)<pos:position pos:line="37" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="38" pos:column="3">safe_fclose<pos:position pos:line="38" pos:column="14"/></name> <argument_list pos:line="38" pos:column="15">(<argument><expr><operator pos:line="38" pos:column="16">&amp;<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="17">ofp<pos:position pos:line="38" pos:column="20"/></name></expr></argument>)<pos:position pos:line="38" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="22"/></expr_stmt>

  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><call><name pos:line="40" pos:column="7">stat<pos:position pos:line="40" pos:column="11"/></name> <argument_list pos:line="40" pos:column="12">(<argument><expr><name pos:line="40" pos:column="13">path<pos:position pos:line="40" pos:column="17"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="19">&amp;<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="20">st<pos:position pos:line="40" pos:column="22"/></name></expr></argument>)<pos:position pos:line="40" pos:column="23"/></argument_list></call> <operator pos:line="40" pos:column="24">==<pos:position pos:line="40" pos:column="26"/></operator> <operator pos:line="40" pos:column="27">-<pos:position pos:line="40" pos:column="28"/></operator><literal type="number" pos:line="40" pos:column="28">1<pos:position pos:line="40" pos:column="29"/></literal></expr>)<pos:position pos:line="40" pos:column="30"/></condition><then pos:line="40" pos:column="30">
  <block pos:line="41" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">mutt_perror<pos:position pos:line="42" pos:column="16"/></name> <argument_list pos:line="42" pos:column="17">(<argument><expr><name pos:line="42" pos:column="18">path<pos:position pos:line="42" pos:column="22"/></name></expr></argument>)<pos:position pos:line="42" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="24"/></expr_stmt>
    <return pos:line="43" pos:column="5">return;<pos:position pos:line="43" pos:column="12"/></return>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="46" pos:column="3">mtime<pos:position pos:line="46" pos:column="8"/></name> <operator pos:line="46" pos:column="9">=<pos:position pos:line="46" pos:column="10"/></operator> <call><name pos:line="46" pos:column="11">mutt_decrease_mtime<pos:position pos:line="46" pos:column="30"/></name> <argument_list pos:line="46" pos:column="31">(<argument><expr><name pos:line="46" pos:column="32">path<pos:position pos:line="46" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="38">&amp;<pos:position pos:line="46" pos:column="43"/></operator><name pos:line="46" pos:column="39">st<pos:position pos:line="46" pos:column="41"/></name></expr></argument>)<pos:position pos:line="46" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="48" pos:column="3">mutt_edit_file<pos:position pos:line="48" pos:column="17"/></name> <argument_list pos:line="48" pos:column="18">(<argument><expr><name pos:line="48" pos:column="19">editor<pos:position pos:line="48" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="27">path<pos:position pos:line="48" pos:column="31"/></name></expr></argument>)<pos:position pos:line="48" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="49" pos:column="3">stat<pos:position pos:line="49" pos:column="7"/></name> <argument_list pos:line="49" pos:column="8">(<argument><expr><name pos:line="49" pos:column="9">path<pos:position pos:line="49" pos:column="13"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="15">&amp;<pos:position pos:line="49" pos:column="20"/></operator><name pos:line="49" pos:column="16">st<pos:position pos:line="49" pos:column="18"/></name></expr></argument>)<pos:position pos:line="49" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="20"/></expr_stmt>
  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><name pos:line="50" pos:column="7">mtime<pos:position pos:line="50" pos:column="12"/></name> <operator pos:line="50" pos:column="13">==<pos:position pos:line="50" pos:column="15"/></operator> <name><name pos:line="50" pos:column="16">st<pos:position pos:line="50" pos:column="18"/></name><operator pos:line="50" pos:column="18">.<pos:position pos:line="50" pos:column="19"/></operator><name pos:line="50" pos:column="19">st_mtime<pos:position pos:line="50" pos:column="27"/></name></name></expr>)<pos:position pos:line="50" pos:column="28"/></condition><then pos:line="50" pos:column="28">
  <block pos:line="51" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">dprint<pos:position pos:line="52" pos:column="11"/></name> <argument_list pos:line="52" pos:column="12">(<argument><expr><literal type="number" pos:line="52" pos:column="13">1<pos:position pos:line="52" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="52" pos:column="16">(<pos:position pos:line="52" pos:column="17"/></operator><name pos:line="52" pos:column="17">debugfile<pos:position pos:line="52" pos:column="26"/></name><operator pos:line="52" pos:column="26">,<pos:position pos:line="52" pos:column="27"/></operator> <literal type="string" pos:line="52" pos:column="28">"ci_edit_headers(): temp file was not modified.\n"<pos:position pos:line="52" pos:column="78"/></literal><operator pos:line="52" pos:column="78">)<pos:position pos:line="52" pos:column="79"/></operator></expr></argument>)<pos:position pos:line="52" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="81"/></expr_stmt>
    <comment type="block" pos:line="53" pos:column="5">/* the file has not changed! */</comment>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">mutt_unlink<pos:position pos:line="54" pos:column="16"/></name> <argument_list pos:line="54" pos:column="17">(<argument><expr><name pos:line="54" pos:column="18">path<pos:position pos:line="54" pos:column="22"/></name></expr></argument>)<pos:position pos:line="54" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="24"/></expr_stmt>
    <return pos:line="55" pos:column="5">return;<pos:position pos:line="55" pos:column="12"/></return>
  }<pos:position pos:line="56" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="58" pos:column="3">mutt_unlink<pos:position pos:line="58" pos:column="14"/></name> <argument_list pos:line="58" pos:column="15">(<argument><expr><name pos:line="58" pos:column="16">body<pos:position pos:line="58" pos:column="20"/></name></expr></argument>)<pos:position pos:line="58" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="59" pos:column="3">mutt_free_list<pos:position pos:line="59" pos:column="17"/></name> <argument_list pos:line="59" pos:column="18">(<argument><expr><operator pos:line="59" pos:column="19">&amp;<pos:position pos:line="59" pos:column="24"/></operator><name><name pos:line="59" pos:column="20">msg<pos:position pos:line="59" pos:column="23"/></name><operator pos:line="59" pos:column="23">-&gt;<pos:position pos:line="59" pos:column="28"/></operator><name pos:line="59" pos:column="25">env<pos:position pos:line="59" pos:column="28"/></name><operator pos:line="59" pos:column="28">-&gt;<pos:position pos:line="59" pos:column="33"/></operator><name pos:line="59" pos:column="30">userhdrs<pos:position pos:line="59" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="40"/></expr_stmt>

  <comment type="block" pos:line="61" pos:column="3">/* Read the temp file back in */</comment>
  <if pos:line="62" pos:column="3">if <condition pos:line="62" pos:column="6">(<expr><operator pos:line="62" pos:column="7">(<pos:position pos:line="62" pos:column="8"/></operator><name pos:line="62" pos:column="8">ifp<pos:position pos:line="62" pos:column="11"/></name> <operator pos:line="62" pos:column="12">=<pos:position pos:line="62" pos:column="13"/></operator> <call><name pos:line="62" pos:column="14">fopen<pos:position pos:line="62" pos:column="19"/></name> <argument_list pos:line="62" pos:column="20">(<argument><expr><name pos:line="62" pos:column="21">path<pos:position pos:line="62" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="27">"r"<pos:position pos:line="62" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="31"/></argument_list></call><operator pos:line="62" pos:column="31">)<pos:position pos:line="62" pos:column="32"/></operator> <operator pos:line="62" pos:column="33">==<pos:position pos:line="62" pos:column="35"/></operator> <name pos:line="62" pos:column="36">NULL<pos:position pos:line="62" pos:column="40"/></name></expr>)<pos:position pos:line="62" pos:column="41"/></condition><then pos:line="62" pos:column="41">
  <block pos:line="63" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">mutt_perror<pos:position pos:line="64" pos:column="16"/></name> <argument_list pos:line="64" pos:column="17">(<argument><expr><name pos:line="64" pos:column="18">path<pos:position pos:line="64" pos:column="22"/></name></expr></argument>)<pos:position pos:line="64" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="24"/></expr_stmt>
    <return pos:line="65" pos:column="5">return;<pos:position pos:line="65" pos:column="12"/></return>
  }<pos:position pos:line="66" pos:column="4"/></block></then></if>
  
  <if pos:line="68" pos:column="3">if <condition pos:line="68" pos:column="6">(<expr><operator pos:line="68" pos:column="7">(<pos:position pos:line="68" pos:column="8"/></operator><name pos:line="68" pos:column="8">ofp<pos:position pos:line="68" pos:column="11"/></name> <operator pos:line="68" pos:column="12">=<pos:position pos:line="68" pos:column="13"/></operator> <call><name pos:line="68" pos:column="14">safe_fopen<pos:position pos:line="68" pos:column="24"/></name> <argument_list pos:line="68" pos:column="25">(<argument><expr><name pos:line="68" pos:column="26">body<pos:position pos:line="68" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="32">"w"<pos:position pos:line="68" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="36"/></argument_list></call><operator pos:line="68" pos:column="36">)<pos:position pos:line="68" pos:column="37"/></operator> <operator pos:line="68" pos:column="38">==<pos:position pos:line="68" pos:column="40"/></operator> <name pos:line="68" pos:column="41">NULL<pos:position pos:line="68" pos:column="45"/></name></expr>)<pos:position pos:line="68" pos:column="46"/></condition><then pos:line="68" pos:column="46">
  <block pos:line="69" pos:column="3">{
    <comment type="block" pos:line="70" pos:column="5">/* intentionally leak a possible temporary file here */</comment>
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">safe_fclose<pos:position pos:line="71" pos:column="16"/></name> <argument_list pos:line="71" pos:column="17">(<argument><expr><operator pos:line="71" pos:column="18">&amp;<pos:position pos:line="71" pos:column="23"/></operator><name pos:line="71" pos:column="19">ifp<pos:position pos:line="71" pos:column="22"/></name></expr></argument>)<pos:position pos:line="71" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">mutt_perror<pos:position pos:line="72" pos:column="16"/></name> <argument_list pos:line="72" pos:column="17">(<argument><expr><name pos:line="72" pos:column="18">body<pos:position pos:line="72" pos:column="22"/></name></expr></argument>)<pos:position pos:line="72" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="24"/></expr_stmt>
    <return pos:line="73" pos:column="5">return;<pos:position pos:line="73" pos:column="12"/></return>
  }<pos:position pos:line="74" pos:column="4"/></block></then></if>
  
  <expr_stmt><expr><name pos:line="76" pos:column="3">n<pos:position pos:line="76" pos:column="4"/></name> <operator pos:line="76" pos:column="5">=<pos:position pos:line="76" pos:column="6"/></operator> <call><name pos:line="76" pos:column="7">mutt_read_rfc822_header<pos:position pos:line="76" pos:column="30"/></name> <argument_list pos:line="76" pos:column="31">(<argument><expr><name pos:line="76" pos:column="32">ifp<pos:position pos:line="76" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="37">NULL<pos:position pos:line="76" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="43">1<pos:position pos:line="76" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="46">0<pos:position pos:line="76" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="49"/></expr_stmt>
  <while pos:line="77" pos:column="3">while <condition pos:line="77" pos:column="9">(<expr><operator pos:line="77" pos:column="10">(<pos:position pos:line="77" pos:column="11"/></operator><name pos:line="77" pos:column="11">i<pos:position pos:line="77" pos:column="12"/></name> <operator pos:line="77" pos:column="13">=<pos:position pos:line="77" pos:column="14"/></operator> <call><name pos:line="77" pos:column="15">fread<pos:position pos:line="77" pos:column="20"/></name> <argument_list pos:line="77" pos:column="21">(<argument><expr><name pos:line="77" pos:column="22">buffer<pos:position pos:line="77" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="30">1<pos:position pos:line="77" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="77" pos:column="33">sizeof <argument_list pos:line="77" pos:column="40">(<argument><expr><name pos:line="77" pos:column="41">buffer<pos:position pos:line="77" pos:column="47"/></name></expr></argument>)<pos:position pos:line="77" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="77" pos:column="50">ifp<pos:position pos:line="77" pos:column="53"/></name></expr></argument>)<pos:position pos:line="77" pos:column="54"/></argument_list></call><operator pos:line="77" pos:column="54">)<pos:position pos:line="77" pos:column="55"/></operator> <operator pos:line="77" pos:column="56">&gt;<pos:position pos:line="77" pos:column="60"/></operator> <literal type="number" pos:line="77" pos:column="58">0<pos:position pos:line="77" pos:column="59"/></literal></expr>)<pos:position pos:line="77" pos:column="60"/></condition>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="5">fwrite<pos:position pos:line="78" pos:column="11"/></name> <argument_list pos:line="78" pos:column="12">(<argument><expr><name pos:line="78" pos:column="13">buffer<pos:position pos:line="78" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="21">1<pos:position pos:line="78" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="24">i<pos:position pos:line="78" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="27">ofp<pos:position pos:line="78" pos:column="30"/></name></expr></argument>)<pos:position pos:line="78" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="32"/></expr_stmt></block></while>
  <expr_stmt><expr><call><name pos:line="79" pos:column="3">safe_fclose<pos:position pos:line="79" pos:column="14"/></name> <argument_list pos:line="79" pos:column="15">(<argument><expr><operator pos:line="79" pos:column="16">&amp;<pos:position pos:line="79" pos:column="21"/></operator><name pos:line="79" pos:column="17">ofp<pos:position pos:line="79" pos:column="20"/></name></expr></argument>)<pos:position pos:line="79" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="80" pos:column="3">safe_fclose<pos:position pos:line="80" pos:column="14"/></name> <argument_list pos:line="80" pos:column="15">(<argument><expr><operator pos:line="80" pos:column="16">&amp;<pos:position pos:line="80" pos:column="21"/></operator><name pos:line="80" pos:column="17">ifp<pos:position pos:line="80" pos:column="20"/></name></expr></argument>)<pos:position pos:line="80" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="81" pos:column="3">mutt_unlink<pos:position pos:line="81" pos:column="14"/></name> <argument_list pos:line="81" pos:column="15">(<argument><expr><name pos:line="81" pos:column="16">path<pos:position pos:line="81" pos:column="20"/></name></expr></argument>)<pos:position pos:line="81" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="22"/></expr_stmt>

  <comment type="block" pos:line="83" pos:column="3">/* in case the user modifies/removes the In-Reply-To header with
     $edit_headers set, we remove References: as they're likely invalid;
     we can simply compare strings as we don't generate References for
     multiple Message-Ids in IRT anyways */</comment>
  <if pos:line="87" pos:column="3">if <condition pos:line="87" pos:column="6">(<expr><name><name pos:line="87" pos:column="7">msg<pos:position pos:line="87" pos:column="10"/></name><operator pos:line="87" pos:column="10">-&gt;<pos:position pos:line="87" pos:column="15"/></operator><name pos:line="87" pos:column="12">env<pos:position pos:line="87" pos:column="15"/></name><operator pos:line="87" pos:column="15">-&gt;<pos:position pos:line="87" pos:column="20"/></operator><name pos:line="87" pos:column="17">in_reply_to<pos:position pos:line="87" pos:column="28"/></name></name> <operator pos:line="87" pos:column="29">&amp;&amp;<pos:position pos:line="87" pos:column="39"/></operator>
      <operator pos:line="88" pos:column="7">(<pos:position pos:line="88" pos:column="8"/></operator><operator pos:line="88" pos:column="8">!<pos:position pos:line="88" pos:column="9"/></operator><name><name pos:line="88" pos:column="9">n<pos:position pos:line="88" pos:column="10"/></name><operator pos:line="88" pos:column="10">-&gt;<pos:position pos:line="88" pos:column="15"/></operator><name pos:line="88" pos:column="12">in_reply_to<pos:position pos:line="88" pos:column="23"/></name></name> <operator pos:line="88" pos:column="24">||<pos:position pos:line="88" pos:column="26"/></operator> <call><name pos:line="88" pos:column="27">mutt_strcmp<pos:position pos:line="88" pos:column="38"/></name> <argument_list pos:line="88" pos:column="39">(<argument><expr><name><name pos:line="88" pos:column="40">n<pos:position pos:line="88" pos:column="41"/></name><operator pos:line="88" pos:column="41">-&gt;<pos:position pos:line="88" pos:column="46"/></operator><name pos:line="88" pos:column="43">in_reply_to<pos:position pos:line="88" pos:column="54"/></name><operator pos:line="88" pos:column="54">-&gt;<pos:position pos:line="88" pos:column="59"/></operator><name pos:line="88" pos:column="56">data<pos:position pos:line="88" pos:column="60"/></name></name></expr></argument>,
				       <argument><expr><name><name pos:line="89" pos:column="40">msg<pos:position pos:line="89" pos:column="43"/></name><operator pos:line="89" pos:column="43">-&gt;<pos:position pos:line="89" pos:column="48"/></operator><name pos:line="89" pos:column="45">env<pos:position pos:line="89" pos:column="48"/></name><operator pos:line="89" pos:column="48">-&gt;<pos:position pos:line="89" pos:column="53"/></operator><name pos:line="89" pos:column="50">in_reply_to<pos:position pos:line="89" pos:column="61"/></name><operator pos:line="89" pos:column="61">-&gt;<pos:position pos:line="89" pos:column="66"/></operator><name pos:line="89" pos:column="63">data<pos:position pos:line="89" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="68"/></argument_list></call> <operator pos:line="89" pos:column="69">!=<pos:position pos:line="89" pos:column="71"/></operator> <literal type="number" pos:line="89" pos:column="72">0<pos:position pos:line="89" pos:column="73"/></literal><operator pos:line="89" pos:column="73">)<pos:position pos:line="89" pos:column="74"/></operator></expr>)<pos:position pos:line="89" pos:column="75"/></condition><then pos:line="89" pos:column="75">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="5">mutt_free_list<pos:position pos:line="90" pos:column="19"/></name> <argument_list pos:line="90" pos:column="20">(<argument><expr><operator pos:line="90" pos:column="21">&amp;<pos:position pos:line="90" pos:column="26"/></operator><name><name pos:line="90" pos:column="22">msg<pos:position pos:line="90" pos:column="25"/></name><operator pos:line="90" pos:column="25">-&gt;<pos:position pos:line="90" pos:column="30"/></operator><name pos:line="90" pos:column="27">env<pos:position pos:line="90" pos:column="30"/></name><operator pos:line="90" pos:column="30">-&gt;<pos:position pos:line="90" pos:column="35"/></operator><name pos:line="90" pos:column="32">references<pos:position pos:line="90" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="44"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="92" pos:column="3">/* restore old info. */</comment>
  <expr_stmt><expr><call><name pos:line="93" pos:column="3">mutt_free_list<pos:position pos:line="93" pos:column="17"/></name> <argument_list pos:line="93" pos:column="18">(<argument><expr><operator pos:line="93" pos:column="19">&amp;<pos:position pos:line="93" pos:column="24"/></operator><name><name pos:line="93" pos:column="20">n<pos:position pos:line="93" pos:column="21"/></name><operator pos:line="93" pos:column="21">-&gt;<pos:position pos:line="93" pos:column="26"/></operator><name pos:line="93" pos:column="23">references<pos:position pos:line="93" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="94" pos:column="3">n<pos:position pos:line="94" pos:column="4"/></name><operator pos:line="94" pos:column="4">-&gt;<pos:position pos:line="94" pos:column="9"/></operator><name pos:line="94" pos:column="6">references<pos:position pos:line="94" pos:column="16"/></name></name> <operator pos:line="94" pos:column="17">=<pos:position pos:line="94" pos:column="18"/></operator> <name><name pos:line="94" pos:column="19">msg<pos:position pos:line="94" pos:column="22"/></name><operator pos:line="94" pos:column="22">-&gt;<pos:position pos:line="94" pos:column="27"/></operator><name pos:line="94" pos:column="24">env<pos:position pos:line="94" pos:column="27"/></name><operator pos:line="94" pos:column="27">-&gt;<pos:position pos:line="94" pos:column="32"/></operator><name pos:line="94" pos:column="29">references<pos:position pos:line="94" pos:column="39"/></name></name></expr>;<pos:position pos:line="94" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="95" pos:column="3">msg<pos:position pos:line="95" pos:column="6"/></name><operator pos:line="95" pos:column="6">-&gt;<pos:position pos:line="95" pos:column="11"/></operator><name pos:line="95" pos:column="8">env<pos:position pos:line="95" pos:column="11"/></name><operator pos:line="95" pos:column="11">-&gt;<pos:position pos:line="95" pos:column="16"/></operator><name pos:line="95" pos:column="13">references<pos:position pos:line="95" pos:column="23"/></name></name> <operator pos:line="95" pos:column="24">=<pos:position pos:line="95" pos:column="25"/></operator> <name pos:line="95" pos:column="26">NULL<pos:position pos:line="95" pos:column="30"/></name></expr>;<pos:position pos:line="95" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="97" pos:column="3">mutt_free_envelope<pos:position pos:line="97" pos:column="21"/></name> <argument_list pos:line="97" pos:column="22">(<argument><expr><operator pos:line="97" pos:column="23">&amp;<pos:position pos:line="97" pos:column="28"/></operator><name><name pos:line="97" pos:column="24">msg<pos:position pos:line="97" pos:column="27"/></name><operator pos:line="97" pos:column="27">-&gt;<pos:position pos:line="97" pos:column="32"/></operator><name pos:line="97" pos:column="29">env<pos:position pos:line="97" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="98" pos:column="3">msg<pos:position pos:line="98" pos:column="6"/></name><operator pos:line="98" pos:column="6">-&gt;<pos:position pos:line="98" pos:column="11"/></operator><name pos:line="98" pos:column="8">env<pos:position pos:line="98" pos:column="11"/></name></name> <operator pos:line="98" pos:column="12">=<pos:position pos:line="98" pos:column="13"/></operator> <name pos:line="98" pos:column="14">n<pos:position pos:line="98" pos:column="15"/></name></expr>;<pos:position pos:line="98" pos:column="16"/></expr_stmt> <expr_stmt><expr><name pos:line="98" pos:column="17">n<pos:position pos:line="98" pos:column="18"/></name> <operator pos:line="98" pos:column="19">=<pos:position pos:line="98" pos:column="20"/></operator> <name pos:line="98" pos:column="21">NULL<pos:position pos:line="98" pos:column="25"/></name></expr>;<pos:position pos:line="98" pos:column="26"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="100" pos:column="3">mutt_expand_aliases_env<pos:position pos:line="100" pos:column="26"/></name> <argument_list pos:line="100" pos:column="27">(<argument><expr><name><name pos:line="100" pos:column="28">msg<pos:position pos:line="100" pos:column="31"/></name><operator pos:line="100" pos:column="31">-&gt;<pos:position pos:line="100" pos:column="36"/></operator><name pos:line="100" pos:column="33">env<pos:position pos:line="100" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="38"/></expr_stmt>

  <comment type="block" pos:line="102" pos:column="3">/* search through the user defined headers added to see if 
   * fcc: or attach: or pgp: was specified
   */</comment>

  <expr_stmt><expr><name pos:line="106" pos:column="3">cur<pos:position pos:line="106" pos:column="6"/></name> <operator pos:line="106" pos:column="7">=<pos:position pos:line="106" pos:column="8"/></operator> <name><name pos:line="106" pos:column="9">msg<pos:position pos:line="106" pos:column="12"/></name><operator pos:line="106" pos:column="12">-&gt;<pos:position pos:line="106" pos:column="17"/></operator><name pos:line="106" pos:column="14">env<pos:position pos:line="106" pos:column="17"/></name><operator pos:line="106" pos:column="17">-&gt;<pos:position pos:line="106" pos:column="22"/></operator><name pos:line="106" pos:column="19">userhdrs<pos:position pos:line="106" pos:column="27"/></name></name></expr>;<pos:position pos:line="106" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name pos:line="107" pos:column="3">last<pos:position pos:line="107" pos:column="7"/></name> <operator pos:line="107" pos:column="8">=<pos:position pos:line="107" pos:column="9"/></operator> <operator pos:line="107" pos:column="10">&amp;<pos:position pos:line="107" pos:column="15"/></operator><name><name pos:line="107" pos:column="11">msg<pos:position pos:line="107" pos:column="14"/></name><operator pos:line="107" pos:column="14">-&gt;<pos:position pos:line="107" pos:column="19"/></operator><name pos:line="107" pos:column="16">env<pos:position pos:line="107" pos:column="19"/></name><operator pos:line="107" pos:column="19">-&gt;<pos:position pos:line="107" pos:column="24"/></operator><name pos:line="107" pos:column="21">userhdrs<pos:position pos:line="107" pos:column="29"/></name></name></expr>;<pos:position pos:line="107" pos:column="30"/></expr_stmt>
  <while pos:line="108" pos:column="3">while <condition pos:line="108" pos:column="9">(<expr><name pos:line="108" pos:column="10">cur<pos:position pos:line="108" pos:column="13"/></name></expr>)<pos:position pos:line="108" pos:column="14"/></condition>
  <block pos:line="109" pos:column="3">{
    <expr_stmt><expr><name pos:line="110" pos:column="5">keep<pos:position pos:line="110" pos:column="9"/></name> <operator pos:line="110" pos:column="10">=<pos:position pos:line="110" pos:column="11"/></operator> <literal type="number" pos:line="110" pos:column="12">1<pos:position pos:line="110" pos:column="13"/></literal></expr>;<pos:position pos:line="110" pos:column="14"/></expr_stmt>

    <if pos:line="112" pos:column="5">if <condition pos:line="112" pos:column="8">(<expr><name pos:line="112" pos:column="9">fcc<pos:position pos:line="112" pos:column="12"/></name> <operator pos:line="112" pos:column="13">&amp;&amp;<pos:position pos:line="112" pos:column="23"/></operator> <call><name pos:line="112" pos:column="16">ascii_strncasecmp<pos:position pos:line="112" pos:column="33"/></name> <argument_list pos:line="112" pos:column="34">(<argument><expr><literal type="string" pos:line="112" pos:column="35">"fcc:"<pos:position pos:line="112" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="112" pos:column="43">cur<pos:position pos:line="112" pos:column="46"/></name><operator pos:line="112" pos:column="46">-&gt;<pos:position pos:line="112" pos:column="51"/></operator><name pos:line="112" pos:column="48">data<pos:position pos:line="112" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="112" pos:column="54">4<pos:position pos:line="112" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="56"/></argument_list></call> <operator pos:line="112" pos:column="57">==<pos:position pos:line="112" pos:column="59"/></operator> <literal type="number" pos:line="112" pos:column="60">0<pos:position pos:line="112" pos:column="61"/></literal></expr>)<pos:position pos:line="112" pos:column="62"/></condition><then pos:line="112" pos:column="62">
    <block pos:line="113" pos:column="5">{
      <expr_stmt><expr><name pos:line="114" pos:column="7">p<pos:position pos:line="114" pos:column="8"/></name> <operator pos:line="114" pos:column="9">=<pos:position pos:line="114" pos:column="10"/></operator> <call><name pos:line="114" pos:column="11">skip_email_wsp<pos:position pos:line="114" pos:column="25"/></name><argument_list pos:line="114" pos:column="25">(<argument><expr><name><name pos:line="114" pos:column="26">cur<pos:position pos:line="114" pos:column="29"/></name><operator pos:line="114" pos:column="29">-&gt;<pos:position pos:line="114" pos:column="34"/></operator><name pos:line="114" pos:column="31">data<pos:position pos:line="114" pos:column="35"/></name></name> <operator pos:line="114" pos:column="36">+<pos:position pos:line="114" pos:column="37"/></operator> <literal type="number" pos:line="114" pos:column="38">4<pos:position pos:line="114" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="41"/></expr_stmt>
      <if pos:line="115" pos:column="7">if <condition pos:line="115" pos:column="10">(<expr><operator pos:line="115" pos:column="11">*<pos:position pos:line="115" pos:column="12"/></operator><name pos:line="115" pos:column="12">p<pos:position pos:line="115" pos:column="13"/></name></expr>)<pos:position pos:line="115" pos:column="14"/></condition><then pos:line="115" pos:column="14">
      <block pos:line="116" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="117" pos:column="9">strfcpy<pos:position pos:line="117" pos:column="16"/></name> <argument_list pos:line="117" pos:column="17">(<argument><expr><name pos:line="117" pos:column="18">fcc<pos:position pos:line="117" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="23">p<pos:position pos:line="117" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="26">fcclen<pos:position pos:line="117" pos:column="32"/></name></expr></argument>)<pos:position pos:line="117" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="118" pos:column="9">mutt_pretty_mailbox<pos:position pos:line="118" pos:column="28"/></name> <argument_list pos:line="118" pos:column="29">(<argument><expr><name pos:line="118" pos:column="30">fcc<pos:position pos:line="118" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="35">fcclen<pos:position pos:line="118" pos:column="41"/></name></expr></argument>)<pos:position pos:line="118" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="43"/></expr_stmt>
      }<pos:position pos:line="119" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="120" pos:column="7">keep<pos:position pos:line="120" pos:column="11"/></name> <operator pos:line="120" pos:column="12">=<pos:position pos:line="120" pos:column="13"/></operator> <literal type="number" pos:line="120" pos:column="14">0<pos:position pos:line="120" pos:column="15"/></literal></expr>;<pos:position pos:line="120" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="121" pos:column="6"/></block></then>
    <elseif pos:line="122" pos:column="5">else <if pos:line="122" pos:column="10">if <condition pos:line="122" pos:column="13">(<expr><call><name pos:line="122" pos:column="14">ascii_strncasecmp<pos:position pos:line="122" pos:column="31"/></name> <argument_list pos:line="122" pos:column="32">(<argument><expr><literal type="string" pos:line="122" pos:column="33">"attach:"<pos:position pos:line="122" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="122" pos:column="44">cur<pos:position pos:line="122" pos:column="47"/></name><operator pos:line="122" pos:column="47">-&gt;<pos:position pos:line="122" pos:column="52"/></operator><name pos:line="122" pos:column="49">data<pos:position pos:line="122" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="122" pos:column="55">7<pos:position pos:line="122" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="57"/></argument_list></call> <operator pos:line="122" pos:column="58">==<pos:position pos:line="122" pos:column="60"/></operator> <literal type="number" pos:line="122" pos:column="61">0<pos:position pos:line="122" pos:column="62"/></literal></expr>)<pos:position pos:line="122" pos:column="63"/></condition><then pos:line="122" pos:column="63">
    <block pos:line="123" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="124" pos:column="7">BODY<pos:position pos:line="124" pos:column="11"/></name> <modifier pos:line="124" pos:column="12">*<pos:position pos:line="124" pos:column="13"/></modifier></type><name pos:line="124" pos:column="13">body<pos:position pos:line="124" pos:column="17"/></name></decl>;<pos:position pos:line="124" pos:column="18"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="125" pos:column="7">BODY<pos:position pos:line="125" pos:column="11"/></name> <modifier pos:line="125" pos:column="12">*<pos:position pos:line="125" pos:column="13"/></modifier></type><name pos:line="125" pos:column="13">parts<pos:position pos:line="125" pos:column="18"/></name></decl>;<pos:position pos:line="125" pos:column="19"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="126" pos:column="7">size_t<pos:position pos:line="126" pos:column="13"/></name></type> <name pos:line="126" pos:column="14">l<pos:position pos:line="126" pos:column="15"/></name> <init pos:line="126" pos:column="16">= <expr><literal type="number" pos:line="126" pos:column="18">0<pos:position pos:line="126" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="126" pos:column="20"/></decl_stmt>

      <expr_stmt><expr><name pos:line="128" pos:column="7">p<pos:position pos:line="128" pos:column="8"/></name> <operator pos:line="128" pos:column="9">=<pos:position pos:line="128" pos:column="10"/></operator> <call><name pos:line="128" pos:column="11">skip_email_wsp<pos:position pos:line="128" pos:column="25"/></name><argument_list pos:line="128" pos:column="25">(<argument><expr><name><name pos:line="128" pos:column="26">cur<pos:position pos:line="128" pos:column="29"/></name><operator pos:line="128" pos:column="29">-&gt;<pos:position pos:line="128" pos:column="34"/></operator><name pos:line="128" pos:column="31">data<pos:position pos:line="128" pos:column="35"/></name></name> <operator pos:line="128" pos:column="36">+<pos:position pos:line="128" pos:column="37"/></operator> <literal type="number" pos:line="128" pos:column="38">7<pos:position pos:line="128" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="41"/></expr_stmt>
      <if pos:line="129" pos:column="7">if <condition pos:line="129" pos:column="10">(<expr><operator pos:line="129" pos:column="11">*<pos:position pos:line="129" pos:column="12"/></operator><name pos:line="129" pos:column="12">p<pos:position pos:line="129" pos:column="13"/></name></expr>)<pos:position pos:line="129" pos:column="14"/></condition><then pos:line="129" pos:column="14">
      <block pos:line="130" pos:column="7">{
	<for pos:line="131" pos:column="9">for <control pos:line="131" pos:column="13">( <init pos:line="131" pos:column="15">;<pos:position pos:line="131" pos:column="16"/></init> <condition><expr><operator pos:line="131" pos:column="17">*<pos:position pos:line="131" pos:column="18"/></operator><name pos:line="131" pos:column="18">p<pos:position pos:line="131" pos:column="19"/></name> <operator pos:line="131" pos:column="20">&amp;&amp;<pos:position pos:line="131" pos:column="30"/></operator> <operator pos:line="131" pos:column="23">*<pos:position pos:line="131" pos:column="24"/></operator><name pos:line="131" pos:column="24">p<pos:position pos:line="131" pos:column="25"/></name> <operator pos:line="131" pos:column="26">!=<pos:position pos:line="131" pos:column="28"/></operator> <literal type="char" pos:line="131" pos:column="29">' '<pos:position pos:line="131" pos:column="32"/></literal> <operator pos:line="131" pos:column="33">&amp;&amp;<pos:position pos:line="131" pos:column="43"/></operator> <operator pos:line="131" pos:column="36">*<pos:position pos:line="131" pos:column="37"/></operator><name pos:line="131" pos:column="37">p<pos:position pos:line="131" pos:column="38"/></name> <operator pos:line="131" pos:column="39">!=<pos:position pos:line="131" pos:column="41"/></operator> <literal type="char" pos:line="131" pos:column="42">'\t'<pos:position pos:line="131" pos:column="46"/></literal></expr>;<pos:position pos:line="131" pos:column="47"/></condition> <incr><expr><name pos:line="131" pos:column="48">p<pos:position pos:line="131" pos:column="49"/></name><operator pos:line="131" pos:column="49">++<pos:position pos:line="131" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="131" pos:column="52"/></control>
	<block pos:line="132" pos:column="9">{
	  <if pos:line="133" pos:column="11">if <condition pos:line="133" pos:column="14">(<expr><operator pos:line="133" pos:column="15">*<pos:position pos:line="133" pos:column="16"/></operator><name pos:line="133" pos:column="16">p<pos:position pos:line="133" pos:column="17"/></name> <operator pos:line="133" pos:column="18">==<pos:position pos:line="133" pos:column="20"/></operator> <literal type="char" pos:line="133" pos:column="21">'\\'<pos:position pos:line="133" pos:column="25"/></literal></expr>)<pos:position pos:line="133" pos:column="26"/></condition><then pos:line="133" pos:column="26">
	  <block pos:line="134" pos:column="11">{
	    <if pos:line="135" pos:column="13">if <condition pos:line="135" pos:column="16">(<expr><operator pos:line="135" pos:column="17">!<pos:position pos:line="135" pos:column="18"/></operator><operator pos:line="135" pos:column="18">*<pos:position pos:line="135" pos:column="19"/></operator><operator pos:line="135" pos:column="19">(<pos:position pos:line="135" pos:column="20"/></operator><name pos:line="135" pos:column="20">p<pos:position pos:line="135" pos:column="21"/></name><operator pos:line="135" pos:column="21">+<pos:position pos:line="135" pos:column="22"/></operator><literal type="number" pos:line="135" pos:column="22">1<pos:position pos:line="135" pos:column="23"/></literal><operator pos:line="135" pos:column="23">)<pos:position pos:line="135" pos:column="24"/></operator></expr>)<pos:position pos:line="135" pos:column="25"/></condition><then pos:line="135" pos:column="25">
	      <block type="pseudo"><break pos:line="136" pos:column="15">break;<pos:position pos:line="136" pos:column="21"/></break></block></then></if>
	    <expr_stmt><expr><name pos:line="137" pos:column="13">p<pos:position pos:line="137" pos:column="14"/></name><operator pos:line="137" pos:column="14">++<pos:position pos:line="137" pos:column="16"/></operator></expr>;<pos:position pos:line="137" pos:column="17"/></expr_stmt>
	  }<pos:position pos:line="138" pos:column="12"/></block></then></if>
	  <if pos:line="139" pos:column="11">if <condition pos:line="139" pos:column="14">(<expr><name pos:line="139" pos:column="15">l<pos:position pos:line="139" pos:column="16"/></name> <operator pos:line="139" pos:column="17">&lt;<pos:position pos:line="139" pos:column="21"/></operator> <sizeof pos:line="139" pos:column="19">sizeof <argument_list pos:line="139" pos:column="26">(<argument><expr><name pos:line="139" pos:column="27">path<pos:position pos:line="139" pos:column="31"/></name></expr></argument>)<pos:position pos:line="139" pos:column="32"/></argument_list></sizeof> <operator pos:line="139" pos:column="33">-<pos:position pos:line="139" pos:column="34"/></operator> <literal type="number" pos:line="139" pos:column="35">1<pos:position pos:line="139" pos:column="36"/></literal></expr>)<pos:position pos:line="139" pos:column="37"/></condition><then pos:line="139" pos:column="37">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="140" pos:column="13">path<pos:position pos:line="140" pos:column="17"/></name><index pos:line="140" pos:column="17">[<expr><name pos:line="140" pos:column="18">l<pos:position pos:line="140" pos:column="19"/></name><operator pos:line="140" pos:column="19">++<pos:position pos:line="140" pos:column="21"/></operator></expr>]<pos:position pos:line="140" pos:column="22"/></index></name> <operator pos:line="140" pos:column="23">=<pos:position pos:line="140" pos:column="24"/></operator> <operator pos:line="140" pos:column="25">*<pos:position pos:line="140" pos:column="26"/></operator><name pos:line="140" pos:column="26">p<pos:position pos:line="140" pos:column="27"/></name></expr>;<pos:position pos:line="140" pos:column="28"/></expr_stmt></block></then></if>
	}<pos:position pos:line="141" pos:column="10"/></block></for>
	<expr_stmt><expr><name pos:line="142" pos:column="9">p<pos:position pos:line="142" pos:column="10"/></name> <operator pos:line="142" pos:column="11">=<pos:position pos:line="142" pos:column="12"/></operator> <call><name pos:line="142" pos:column="13">skip_email_wsp<pos:position pos:line="142" pos:column="27"/></name><argument_list pos:line="142" pos:column="27">(<argument><expr><name pos:line="142" pos:column="28">p<pos:position pos:line="142" pos:column="29"/></name></expr></argument>)<pos:position pos:line="142" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="143" pos:column="9">path<pos:position pos:line="143" pos:column="13"/></name><index pos:line="143" pos:column="13">[<expr><name pos:line="143" pos:column="14">l<pos:position pos:line="143" pos:column="15"/></name></expr>]<pos:position pos:line="143" pos:column="16"/></index></name> <operator pos:line="143" pos:column="17">=<pos:position pos:line="143" pos:column="18"/></operator> <literal type="number" pos:line="143" pos:column="19">0<pos:position pos:line="143" pos:column="20"/></literal></expr>;<pos:position pos:line="143" pos:column="21"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="145" pos:column="9">mutt_expand_path<pos:position pos:line="145" pos:column="25"/></name> <argument_list pos:line="145" pos:column="26">(<argument><expr><name pos:line="145" pos:column="27">path<pos:position pos:line="145" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="145" pos:column="33">sizeof <argument_list pos:line="145" pos:column="40">(<argument><expr><name pos:line="145" pos:column="41">path<pos:position pos:line="145" pos:column="45"/></name></expr></argument>)<pos:position pos:line="145" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="145" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="48"/></expr_stmt>
	<if pos:line="146" pos:column="9">if <condition pos:line="146" pos:column="12">(<expr><operator pos:line="146" pos:column="13">(<pos:position pos:line="146" pos:column="14"/></operator><name pos:line="146" pos:column="14">body<pos:position pos:line="146" pos:column="18"/></name> <operator pos:line="146" pos:column="19">=<pos:position pos:line="146" pos:column="20"/></operator> <call><name pos:line="146" pos:column="21">mutt_make_file_attach<pos:position pos:line="146" pos:column="42"/></name> <argument_list pos:line="146" pos:column="43">(<argument><expr><name pos:line="146" pos:column="44">path<pos:position pos:line="146" pos:column="48"/></name></expr></argument>)<pos:position pos:line="146" pos:column="49"/></argument_list></call><operator pos:line="146" pos:column="49">)<pos:position pos:line="146" pos:column="50"/></operator></expr>)<pos:position pos:line="146" pos:column="51"/></condition><then pos:line="146" pos:column="51">
	<block pos:line="147" pos:column="9">{
	  <expr_stmt><expr><name><name pos:line="148" pos:column="11">body<pos:position pos:line="148" pos:column="15"/></name><operator pos:line="148" pos:column="15">-&gt;<pos:position pos:line="148" pos:column="20"/></operator><name pos:line="148" pos:column="17">description<pos:position pos:line="148" pos:column="28"/></name></name> <operator pos:line="148" pos:column="29">=<pos:position pos:line="148" pos:column="30"/></operator> <call><name pos:line="148" pos:column="31">safe_strdup<pos:position pos:line="148" pos:column="42"/></name> <argument_list pos:line="148" pos:column="43">(<argument><expr><name pos:line="148" pos:column="44">p<pos:position pos:line="148" pos:column="45"/></name></expr></argument>)<pos:position pos:line="148" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="47"/></expr_stmt>
	  <for pos:line="149" pos:column="11">for <control pos:line="149" pos:column="15">(<init><expr><name pos:line="149" pos:column="16">parts<pos:position pos:line="149" pos:column="21"/></name> <operator pos:line="149" pos:column="22">=<pos:position pos:line="149" pos:column="23"/></operator> <name><name pos:line="149" pos:column="24">msg<pos:position pos:line="149" pos:column="27"/></name><operator pos:line="149" pos:column="27">-&gt;<pos:position pos:line="149" pos:column="32"/></operator><name pos:line="149" pos:column="29">content<pos:position pos:line="149" pos:column="36"/></name></name></expr>;<pos:position pos:line="149" pos:column="37"/></init> <condition><expr><name><name pos:line="149" pos:column="38">parts<pos:position pos:line="149" pos:column="43"/></name><operator pos:line="149" pos:column="43">-&gt;<pos:position pos:line="149" pos:column="48"/></operator><name pos:line="149" pos:column="45">next<pos:position pos:line="149" pos:column="49"/></name></name></expr>;<pos:position pos:line="149" pos:column="50"/></condition> <incr><expr><name pos:line="149" pos:column="51">parts<pos:position pos:line="149" pos:column="56"/></name> <operator pos:line="149" pos:column="57">=<pos:position pos:line="149" pos:column="58"/></operator> <name><name pos:line="149" pos:column="59">parts<pos:position pos:line="149" pos:column="64"/></name><operator pos:line="149" pos:column="64">-&gt;<pos:position pos:line="149" pos:column="69"/></operator><name pos:line="149" pos:column="66">next<pos:position pos:line="149" pos:column="70"/></name></name></expr></incr>)<pos:position pos:line="149" pos:column="71"/></control> <block type="pseudo"><empty_stmt pos:line="149" pos:column="72">;<pos:position pos:line="149" pos:column="73"/></empty_stmt></block></for>
	  <expr_stmt><expr><name><name pos:line="150" pos:column="11">parts<pos:position pos:line="150" pos:column="16"/></name><operator pos:line="150" pos:column="16">-&gt;<pos:position pos:line="150" pos:column="21"/></operator><name pos:line="150" pos:column="18">next<pos:position pos:line="150" pos:column="22"/></name></name> <operator pos:line="150" pos:column="23">=<pos:position pos:line="150" pos:column="24"/></operator> <name pos:line="150" pos:column="25">body<pos:position pos:line="150" pos:column="29"/></name></expr>;<pos:position pos:line="150" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="151" pos:column="10"/></block></then>
	<else pos:line="152" pos:column="9">else
	<block pos:line="153" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="154" pos:column="11">mutt_pretty_mailbox<pos:position pos:line="154" pos:column="30"/></name> <argument_list pos:line="154" pos:column="31">(<argument><expr><name pos:line="154" pos:column="32">path<pos:position pos:line="154" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="154" pos:column="38">sizeof <argument_list pos:line="154" pos:column="45">(<argument><expr><name pos:line="154" pos:column="46">path<pos:position pos:line="154" pos:column="50"/></name></expr></argument>)<pos:position pos:line="154" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="154" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="53"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="155" pos:column="11">mutt_error<pos:position pos:line="155" pos:column="21"/></name> <argument_list pos:line="155" pos:column="22">(<argument><expr><call><name pos:line="155" pos:column="23">_<pos:position pos:line="155" pos:column="24"/></name><argument_list pos:line="155" pos:column="24">(<argument><expr><literal type="string" pos:line="155" pos:column="25">"%s: unable to attach file"<pos:position pos:line="155" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="155" pos:column="55">path<pos:position pos:line="155" pos:column="59"/></name></expr></argument>)<pos:position pos:line="155" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="61"/></expr_stmt>
	}<pos:position pos:line="156" pos:column="10"/></block></else></if>
      }<pos:position pos:line="157" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="158" pos:column="7">keep<pos:position pos:line="158" pos:column="11"/></name> <operator pos:line="158" pos:column="12">=<pos:position pos:line="158" pos:column="13"/></operator> <literal type="number" pos:line="158" pos:column="14">0<pos:position pos:line="158" pos:column="15"/></literal></expr>;<pos:position pos:line="158" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="159" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="160" pos:column="5">else <if pos:line="160" pos:column="10">if <condition pos:line="160" pos:column="13">(<expr><operator pos:line="160" pos:column="14">(<pos:position pos:line="160" pos:column="15"/></operator><name pos:line="160" pos:column="15">WithCrypto<pos:position pos:line="160" pos:column="25"/></name> <operator pos:line="160" pos:column="26">&amp;<pos:position pos:line="160" pos:column="31"/></operator> <name pos:line="160" pos:column="28">APPLICATION_PGP<pos:position pos:line="160" pos:column="43"/></name><operator pos:line="160" pos:column="43">)<pos:position pos:line="160" pos:column="44"/></operator>
             <operator pos:line="161" pos:column="14">&amp;&amp;<pos:position pos:line="161" pos:column="24"/></operator> <call><name pos:line="161" pos:column="17">ascii_strncasecmp<pos:position pos:line="161" pos:column="34"/></name> <argument_list pos:line="161" pos:column="35">(<argument><expr><literal type="string" pos:line="161" pos:column="36">"pgp:"<pos:position pos:line="161" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="161" pos:column="44">cur<pos:position pos:line="161" pos:column="47"/></name><operator pos:line="161" pos:column="47">-&gt;<pos:position pos:line="161" pos:column="52"/></operator><name pos:line="161" pos:column="49">data<pos:position pos:line="161" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="161" pos:column="55">4<pos:position pos:line="161" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="57"/></argument_list></call> <operator pos:line="161" pos:column="58">==<pos:position pos:line="161" pos:column="60"/></operator> <literal type="number" pos:line="161" pos:column="61">0<pos:position pos:line="161" pos:column="62"/></literal></expr>)<pos:position pos:line="161" pos:column="63"/></condition><then pos:line="161" pos:column="63">
    <block pos:line="162" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="163" pos:column="7">msg<pos:position pos:line="163" pos:column="10"/></name><operator pos:line="163" pos:column="10">-&gt;<pos:position pos:line="163" pos:column="15"/></operator><name pos:line="163" pos:column="12">security<pos:position pos:line="163" pos:column="20"/></name></name> <operator pos:line="163" pos:column="21">=<pos:position pos:line="163" pos:column="22"/></operator> <call><name pos:line="163" pos:column="23">mutt_parse_crypt_hdr<pos:position pos:line="163" pos:column="43"/></name> <argument_list pos:line="163" pos:column="44">(<argument><expr><name><name pos:line="163" pos:column="45">cur<pos:position pos:line="163" pos:column="48"/></name><operator pos:line="163" pos:column="48">-&gt;<pos:position pos:line="163" pos:column="53"/></operator><name pos:line="163" pos:column="50">data<pos:position pos:line="163" pos:column="54"/></name></name> <operator pos:line="163" pos:column="55">+<pos:position pos:line="163" pos:column="56"/></operator> <literal type="number" pos:line="163" pos:column="57">4<pos:position pos:line="163" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="163" pos:column="60">0<pos:position pos:line="163" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="163" pos:column="63">APPLICATION_PGP<pos:position pos:line="163" pos:column="78"/></name></expr></argument>)<pos:position pos:line="163" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="80"/></expr_stmt>
      <if pos:line="164" pos:column="7">if <condition pos:line="164" pos:column="10">(<expr><name><name pos:line="164" pos:column="11">msg<pos:position pos:line="164" pos:column="14"/></name><operator pos:line="164" pos:column="14">-&gt;<pos:position pos:line="164" pos:column="19"/></operator><name pos:line="164" pos:column="16">security<pos:position pos:line="164" pos:column="24"/></name></name></expr>)<pos:position pos:line="164" pos:column="25"/></condition><then pos:line="164" pos:column="25">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="165" pos:column="9">msg<pos:position pos:line="165" pos:column="12"/></name><operator pos:line="165" pos:column="12">-&gt;<pos:position pos:line="165" pos:column="17"/></operator><name pos:line="165" pos:column="14">security<pos:position pos:line="165" pos:column="22"/></name></name> <operator pos:line="165" pos:column="23">|=<pos:position pos:line="165" pos:column="25"/></operator> <name pos:line="165" pos:column="26">APPLICATION_PGP<pos:position pos:line="165" pos:column="41"/></name></expr>;<pos:position pos:line="165" pos:column="42"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="166" pos:column="7">keep<pos:position pos:line="166" pos:column="11"/></name> <operator pos:line="166" pos:column="12">=<pos:position pos:line="166" pos:column="13"/></operator> <literal type="number" pos:line="166" pos:column="14">0<pos:position pos:line="166" pos:column="15"/></literal></expr>;<pos:position pos:line="166" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="167" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="169" pos:column="5">if <condition pos:line="169" pos:column="8">(<expr><name pos:line="169" pos:column="9">keep<pos:position pos:line="169" pos:column="13"/></name></expr>)<pos:position pos:line="169" pos:column="14"/></condition><then pos:line="169" pos:column="14">
    <block pos:line="170" pos:column="5">{
      <expr_stmt><expr><name pos:line="171" pos:column="7">last<pos:position pos:line="171" pos:column="11"/></name> <operator pos:line="171" pos:column="12">=<pos:position pos:line="171" pos:column="13"/></operator> <operator pos:line="171" pos:column="14">&amp;<pos:position pos:line="171" pos:column="19"/></operator><name><name pos:line="171" pos:column="15">cur<pos:position pos:line="171" pos:column="18"/></name><operator pos:line="171" pos:column="18">-&gt;<pos:position pos:line="171" pos:column="23"/></operator><name pos:line="171" pos:column="20">next<pos:position pos:line="171" pos:column="24"/></name></name></expr>;<pos:position pos:line="171" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="172" pos:column="7">cur<pos:position pos:line="172" pos:column="10"/></name>  <operator pos:line="172" pos:column="12">=<pos:position pos:line="172" pos:column="13"/></operator> <name><name pos:line="172" pos:column="14">cur<pos:position pos:line="172" pos:column="17"/></name><operator pos:line="172" pos:column="17">-&gt;<pos:position pos:line="172" pos:column="22"/></operator><name pos:line="172" pos:column="19">next<pos:position pos:line="172" pos:column="23"/></name></name></expr>;<pos:position pos:line="172" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="173" pos:column="6"/></block></then>
    <else pos:line="174" pos:column="5">else
    <block pos:line="175" pos:column="5">{
      <expr_stmt><expr><name pos:line="176" pos:column="7">tmp<pos:position pos:line="176" pos:column="10"/></name>       <operator pos:line="176" pos:column="17">=<pos:position pos:line="176" pos:column="18"/></operator> <name pos:line="176" pos:column="19">cur<pos:position pos:line="176" pos:column="22"/></name></expr>;<pos:position pos:line="176" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="177" pos:column="7">*<pos:position pos:line="177" pos:column="8"/></operator><name pos:line="177" pos:column="8">last<pos:position pos:line="177" pos:column="12"/></name>     <operator pos:line="177" pos:column="17">=<pos:position pos:line="177" pos:column="18"/></operator> <name><name pos:line="177" pos:column="19">cur<pos:position pos:line="177" pos:column="22"/></name><operator pos:line="177" pos:column="22">-&gt;<pos:position pos:line="177" pos:column="27"/></operator><name pos:line="177" pos:column="24">next<pos:position pos:line="177" pos:column="28"/></name></name></expr>;<pos:position pos:line="177" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name pos:line="178" pos:column="7">cur<pos:position pos:line="178" pos:column="10"/></name>       <operator pos:line="178" pos:column="17">=<pos:position pos:line="178" pos:column="18"/></operator> <name><name pos:line="178" pos:column="19">cur<pos:position pos:line="178" pos:column="22"/></name><operator pos:line="178" pos:column="22">-&gt;<pos:position pos:line="178" pos:column="27"/></operator><name pos:line="178" pos:column="24">next<pos:position pos:line="178" pos:column="28"/></name></name></expr>;<pos:position pos:line="178" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="179" pos:column="7">tmp<pos:position pos:line="179" pos:column="10"/></name><operator pos:line="179" pos:column="10">-&gt;<pos:position pos:line="179" pos:column="15"/></operator><name pos:line="179" pos:column="12">next<pos:position pos:line="179" pos:column="16"/></name></name> <operator pos:line="179" pos:column="17">=<pos:position pos:line="179" pos:column="18"/></operator> <name pos:line="179" pos:column="19">NULL<pos:position pos:line="179" pos:column="23"/></name></expr>;<pos:position pos:line="179" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="180" pos:column="7">mutt_free_list<pos:position pos:line="180" pos:column="21"/></name> <argument_list pos:line="180" pos:column="22">(<argument><expr><operator pos:line="180" pos:column="23">&amp;<pos:position pos:line="180" pos:column="28"/></operator><name pos:line="180" pos:column="24">tmp<pos:position pos:line="180" pos:column="27"/></name></expr></argument>)<pos:position pos:line="180" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="181" pos:column="6"/></block></else></if>
  }<pos:position pos:line="182" pos:column="4"/></block></while>
}<pos:position pos:line="183" pos:column="2"/></block></function></unit>

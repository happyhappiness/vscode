<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1355_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">can_print<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">ATTACH_CONTEXT<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">actx<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">BODY<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">top<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">int<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">tag<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">type<pos:position pos:line="3" pos:column="12"/></name> <index pos:line="3" pos:column="13">[<expr><name pos:line="3" pos:column="14">STRING<pos:position pos:line="3" pos:column="20"/></name></expr>]<pos:position pos:line="3" pos:column="21"/></index></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>

  <for pos:line="6" pos:column="3">for <control pos:line="6" pos:column="7">(<init><expr><name pos:line="6" pos:column="8">i<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <literal type="number" pos:line="6" pos:column="12">0<pos:position pos:line="6" pos:column="13"/></literal></expr>;<pos:position pos:line="6" pos:column="14"/></init> <condition><expr><operator pos:line="6" pos:column="15">!<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">tag<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">||<pos:position pos:line="6" pos:column="22"/></operator> <name pos:line="6" pos:column="23">i<pos:position pos:line="6" pos:column="24"/></name> <operator pos:line="6" pos:column="25">&lt;<pos:position pos:line="6" pos:column="29"/></operator> <name><name pos:line="6" pos:column="27">actx<pos:position pos:line="6" pos:column="31"/></name><operator pos:line="6" pos:column="31">-&gt;<pos:position pos:line="6" pos:column="36"/></operator><name pos:line="6" pos:column="33">idxlen<pos:position pos:line="6" pos:column="39"/></name></name></expr>;<pos:position pos:line="6" pos:column="40"/></condition> <incr><expr><name pos:line="6" pos:column="41">i<pos:position pos:line="6" pos:column="42"/></name><operator pos:line="6" pos:column="42">++<pos:position pos:line="6" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="45"/></control>
  <block pos:line="7" pos:column="3">{
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">tag<pos:position pos:line="8" pos:column="12"/></name></expr>)<pos:position pos:line="8" pos:column="13"/></condition><then pos:line="8" pos:column="13">
      <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="7">top<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <name><name pos:line="9" pos:column="13">actx<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-&gt;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="19">idx<pos:position pos:line="9" pos:column="22"/></name><index pos:line="9" pos:column="22">[<expr><name pos:line="9" pos:column="23">i<pos:position pos:line="9" pos:column="24"/></name></expr>]<pos:position pos:line="9" pos:column="25"/></index></name><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">content<pos:position pos:line="9" pos:column="34"/></name></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">snprintf<pos:position pos:line="10" pos:column="13"/></name> <argument_list pos:line="10" pos:column="14">(<argument><expr><name pos:line="10" pos:column="15">type<pos:position pos:line="10" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="21">sizeof <argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">type<pos:position pos:line="10" pos:column="33"/></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="36">"%s/%s"<pos:position pos:line="10" pos:column="43"/></literal></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="45">TYPE<pos:position pos:line="10" pos:column="49"/></name> <argument_list pos:line="10" pos:column="50">(<argument><expr><name pos:line="10" pos:column="51">top<pos:position pos:line="10" pos:column="54"/></name></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="57">top<pos:position pos:line="10" pos:column="60"/></name><operator pos:line="10" pos:column="60">-&gt;<pos:position pos:line="10" pos:column="65"/></operator><name pos:line="10" pos:column="62">subtype<pos:position pos:line="10" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="71"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">tag<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">||<pos:position pos:line="11" pos:column="16"/></operator> <name><name pos:line="11" pos:column="17">top<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">tagged<pos:position pos:line="11" pos:column="28"/></name></name></expr>)<pos:position pos:line="11" pos:column="29"/></condition><then pos:line="11" pos:column="29">
    <block pos:line="12" pos:column="5">{
      <if pos:line="13" pos:column="7">if <condition pos:line="13" pos:column="10">(<expr><operator pos:line="13" pos:column="11">!<pos:position pos:line="13" pos:column="12"/></operator><call><name pos:line="13" pos:column="12">rfc1524_mailcap_lookup<pos:position pos:line="13" pos:column="34"/></name> <argument_list pos:line="13" pos:column="35">(<argument><expr><name pos:line="13" pos:column="36">top<pos:position pos:line="13" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="41">type<pos:position pos:line="13" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="47">NULL<pos:position pos:line="13" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="53">MUTT_PRINT<pos:position pos:line="13" pos:column="63"/></name></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="65"/></condition><then pos:line="13" pos:column="65">
      <block pos:line="14" pos:column="7">{
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">ascii_strcasecmp<pos:position pos:line="15" pos:column="29"/></name> <argument_list pos:line="15" pos:column="30">(<argument><expr><literal type="string" pos:line="15" pos:column="31">"text/plain"<pos:position pos:line="15" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="45">top<pos:position pos:line="15" pos:column="48"/></name><operator pos:line="15" pos:column="48">-&gt;<pos:position pos:line="15" pos:column="53"/></operator><name pos:line="15" pos:column="50">subtype<pos:position pos:line="15" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="58"/></argument_list></call> <operator pos:line="15" pos:column="59">&amp;&amp;<pos:position pos:line="15" pos:column="69"/></operator>
	    <call><name pos:line="16" pos:column="13">ascii_strcasecmp<pos:position pos:line="16" pos:column="29"/></name> <argument_list pos:line="16" pos:column="30">(<argument><expr><literal type="string" pos:line="16" pos:column="31">"application/postscript"<pos:position pos:line="16" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="57">top<pos:position pos:line="16" pos:column="60"/></name><operator pos:line="16" pos:column="60">-&gt;<pos:position pos:line="16" pos:column="65"/></operator><name pos:line="16" pos:column="62">subtype<pos:position pos:line="16" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="71"/></condition><then pos:line="16" pos:column="71">
	<block pos:line="17" pos:column="9">{
	  <if pos:line="18" pos:column="11">if <condition pos:line="18" pos:column="14">(<expr><operator pos:line="18" pos:column="15">!<pos:position pos:line="18" pos:column="16"/></operator><call><name pos:line="18" pos:column="16">mutt_can_decode<pos:position pos:line="18" pos:column="31"/></name> <argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">top<pos:position pos:line="18" pos:column="36"/></name></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="38"/></condition><then pos:line="18" pos:column="38">
	  <block pos:line="19" pos:column="11">{
	    <expr_stmt><expr><call><name pos:line="20" pos:column="13">mutt_error<pos:position pos:line="20" pos:column="23"/></name> <argument_list pos:line="20" pos:column="24">(<argument><expr><call><name pos:line="20" pos:column="25">_<pos:position pos:line="20" pos:column="26"/></name><argument_list pos:line="20" pos:column="26">(<argument><expr><literal type="string" pos:line="20" pos:column="27">"I don't know how to print %s attachments!"<pos:position pos:line="20" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="20" pos:column="73">type<pos:position pos:line="20" pos:column="77"/></name></expr></argument>)<pos:position pos:line="20" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="79"/></expr_stmt>
	    <return pos:line="21" pos:column="13">return <expr><operator pos:line="21" pos:column="20">(<pos:position pos:line="21" pos:column="21"/></operator><literal type="number" pos:line="21" pos:column="21">0<pos:position pos:line="21" pos:column="22"/></literal><operator pos:line="21" pos:column="22">)<pos:position pos:line="21" pos:column="23"/></operator></expr>;<pos:position pos:line="21" pos:column="24"/></return>
	  }<pos:position pos:line="22" pos:column="12"/></block></then></if>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>
      }<pos:position pos:line="24" pos:column="8"/></block></then></if>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">!<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">tag<pos:position pos:line="26" pos:column="13"/></name></expr>)<pos:position pos:line="26" pos:column="14"/></condition><then pos:line="26" pos:column="14">
      <block type="pseudo"><break pos:line="27" pos:column="7">break;<pos:position pos:line="27" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="28" pos:column="4"/></block></for>
  <return pos:line="29" pos:column="3">return <expr><operator pos:line="29" pos:column="10">(<pos:position pos:line="29" pos:column="11"/></operator><literal type="number" pos:line="29" pos:column="11">1<pos:position pos:line="29" pos:column="12"/></literal><operator pos:line="29" pos:column="12">)<pos:position pos:line="29" pos:column="13"/></operator></expr>;<pos:position pos:line="29" pos:column="14"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

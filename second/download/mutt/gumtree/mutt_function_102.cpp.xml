<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_function_102.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_write_fcc<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><specifier pos:line="1" pos:column="21">const<pos:position pos:line="1" pos:column="26"/></specifier> <name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">path<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">HEADER<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">hdr<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">msgid<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="71">int<pos:position pos:line="1" pos:column="74"/></name></type> <name pos:line="1" pos:column="75">post<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="81">char<pos:position pos:line="1" pos:column="85"/></name> <modifier pos:line="1" pos:column="86">*<pos:position pos:line="1" pos:column="87"/></modifier></type><name pos:line="1" pos:column="87">fcc<pos:position pos:line="1" pos:column="90"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="91"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CONTEXT<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">f<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">MESSAGE<pos:position pos:line="4" pos:column="10"/></name> <modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">msg<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">tempfile<pos:position pos:line="5" pos:column="16"/></name><index pos:line="5" pos:column="16">[<expr><name pos:line="5" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="5" pos:column="32"/></name></expr>]<pos:position pos:line="5" pos:column="33"/></index></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">FILE<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">tempfp<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><name pos:line="6" pos:column="18">NULL<pos:position pos:line="6" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">r<pos:position pos:line="7" pos:column="8"/></name></decl>;<pos:position pos:line="7" pos:column="9"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">post<pos:position pos:line="9" pos:column="11"/></name></expr>)<pos:position pos:line="9" pos:column="12"/></condition><then pos:line="9" pos:column="12">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="5">set_noconv_flags<pos:position pos:line="10" pos:column="21"/></name> <argument_list pos:line="10" pos:column="22">(<argument><expr><name><name pos:line="10" pos:column="23">hdr<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">content<pos:position pos:line="10" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="37">1<pos:position pos:line="10" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt></block></then></if>
  
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><call><name pos:line="12" pos:column="7">mx_open_mailbox<pos:position pos:line="12" pos:column="22"/></name> <argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">path<pos:position pos:line="12" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="30">M_APPEND<pos:position pos:line="12" pos:column="38"/></name> <operator pos:line="12" pos:column="39">|<pos:position pos:line="12" pos:column="40"/></operator> <name pos:line="12" pos:column="41">M_QUIET<pos:position pos:line="12" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="50">&amp;<pos:position pos:line="12" pos:column="55"/></operator><name pos:line="12" pos:column="51">f<pos:position pos:line="12" pos:column="52"/></name></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call> <operator pos:line="12" pos:column="54">==<pos:position pos:line="12" pos:column="56"/></operator> <name pos:line="12" pos:column="57">NULL<pos:position pos:line="12" pos:column="61"/></name></expr>)<pos:position pos:line="12" pos:column="62"/></condition><then pos:line="12" pos:column="62">
  <block pos:line="13" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">dprint<pos:position pos:line="14" pos:column="11"/></name> <argument_list pos:line="14" pos:column="12">(<argument><expr><literal type="number" pos:line="14" pos:column="13">1<pos:position pos:line="14" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="16">(<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">debugfile<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">,<pos:position pos:line="14" pos:column="27"/></operator> <literal type="string" pos:line="14" pos:column="28">"mutt_write_fcc(): unable to open mailbox %s in append-mode, aborting.\n"<pos:position pos:line="14" pos:column="101"/></literal><operator pos:line="14" pos:column="101">,<pos:position pos:line="14" pos:column="102"/></operator>
		<name pos:line="15" pos:column="17">path<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">)<pos:position pos:line="15" pos:column="22"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><operator pos:line="16" pos:column="13">-<pos:position pos:line="16" pos:column="14"/></operator><literal type="number" pos:line="16" pos:column="14">1<pos:position pos:line="16" pos:column="15"/></literal><operator pos:line="16" pos:column="15">)<pos:position pos:line="16" pos:column="16"/></operator></expr>;<pos:position pos:line="16" pos:column="17"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="19" pos:column="3">/* We need to add a Content-Length field to avoid problems where a line in
   * the message body begins with "From "   
   */</comment>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name><name pos:line="22" pos:column="7">f<pos:position pos:line="22" pos:column="8"/></name><operator pos:line="22" pos:column="8">.<pos:position pos:line="22" pos:column="9"/></operator><name pos:line="22" pos:column="9">magic<pos:position pos:line="22" pos:column="14"/></name></name> <operator pos:line="22" pos:column="15">==<pos:position pos:line="22" pos:column="17"/></operator> <name pos:line="22" pos:column="18">M_MMDF<pos:position pos:line="22" pos:column="24"/></name> <operator pos:line="22" pos:column="25">||<pos:position pos:line="22" pos:column="27"/></operator> <name><name pos:line="22" pos:column="28">f<pos:position pos:line="22" pos:column="29"/></name><operator pos:line="22" pos:column="29">.<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="30">magic<pos:position pos:line="22" pos:column="35"/></name></name> <operator pos:line="22" pos:column="36">==<pos:position pos:line="22" pos:column="38"/></operator> <name pos:line="22" pos:column="39">M_MBOX<pos:position pos:line="22" pos:column="45"/></name> <operator pos:line="22" pos:column="46">||<pos:position pos:line="22" pos:column="48"/></operator> <name><name pos:line="22" pos:column="49">f<pos:position pos:line="22" pos:column="50"/></name><operator pos:line="22" pos:column="50">.<pos:position pos:line="22" pos:column="51"/></operator><name pos:line="22" pos:column="51">magic<pos:position pos:line="22" pos:column="56"/></name></name> <operator pos:line="22" pos:column="57">==<pos:position pos:line="22" pos:column="59"/></operator> <name pos:line="22" pos:column="60">M_KENDRA<pos:position pos:line="22" pos:column="68"/></name></expr>)<pos:position pos:line="22" pos:column="69"/></condition><then pos:line="22" pos:column="69">
  <block pos:line="23" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">mutt_mktemp<pos:position pos:line="24" pos:column="16"/></name> <argument_list pos:line="24" pos:column="17">(<argument><expr><name pos:line="24" pos:column="18">tempfile<pos:position pos:line="24" pos:column="26"/></name></expr></argument>)<pos:position pos:line="24" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">(<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">tempfp<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <call><name pos:line="25" pos:column="19">safe_fopen<pos:position pos:line="25" pos:column="29"/></name> <argument_list pos:line="25" pos:column="30">(<argument><expr><name pos:line="25" pos:column="31">tempfile<pos:position pos:line="25" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="41">"w+"<pos:position pos:line="25" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="46"/></argument_list></call><operator pos:line="25" pos:column="46">)<pos:position pos:line="25" pos:column="47"/></operator> <operator pos:line="25" pos:column="48">==<pos:position pos:line="25" pos:column="50"/></operator> <name pos:line="25" pos:column="51">NULL<pos:position pos:line="25" pos:column="55"/></name></expr>)<pos:position pos:line="25" pos:column="56"/></condition><then pos:line="25" pos:column="56">
    <block pos:line="26" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">mutt_perror<pos:position pos:line="27" pos:column="18"/></name> <argument_list pos:line="27" pos:column="19">(<argument><expr><name pos:line="27" pos:column="20">tempfile<pos:position pos:line="27" pos:column="28"/></name></expr></argument>)<pos:position pos:line="27" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="28" pos:column="7">mx_close_mailbox<pos:position pos:line="28" pos:column="23"/></name> <argument_list pos:line="28" pos:column="24">(<argument><expr><operator pos:line="28" pos:column="25">&amp;<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="26">f<pos:position pos:line="28" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="29">NULL<pos:position pos:line="28" pos:column="33"/></name></expr></argument>)<pos:position pos:line="28" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt>
      <return pos:line="29" pos:column="7">return <expr><operator pos:line="29" pos:column="14">(<pos:position pos:line="29" pos:column="15"/></operator><operator pos:line="29" pos:column="15">-<pos:position pos:line="29" pos:column="16"/></operator><literal type="number" pos:line="29" pos:column="16">1<pos:position pos:line="29" pos:column="17"/></literal><operator pos:line="29" pos:column="17">)<pos:position pos:line="29" pos:column="18"/></operator></expr>;<pos:position pos:line="29" pos:column="19"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="33" pos:column="3">hdr<pos:position pos:line="33" pos:column="6"/></name><operator pos:line="33" pos:column="6">-&gt;<pos:position pos:line="33" pos:column="11"/></operator><name pos:line="33" pos:column="8">read<pos:position pos:line="33" pos:column="12"/></name></name> <operator pos:line="33" pos:column="13">=<pos:position pos:line="33" pos:column="14"/></operator> <operator pos:line="33" pos:column="15">!<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="16">post<pos:position pos:line="33" pos:column="20"/></name></expr>;<pos:position pos:line="33" pos:column="21"/></expr_stmt> <comment type="block" pos:line="33" pos:column="22">/* make sure to put it in the `cur' directory (maildir) */</comment>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><operator pos:line="34" pos:column="7">(<pos:position pos:line="34" pos:column="8"/></operator><name pos:line="34" pos:column="8">msg<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">=<pos:position pos:line="34" pos:column="13"/></operator> <call><name pos:line="34" pos:column="14">mx_open_new_message<pos:position pos:line="34" pos:column="33"/></name> <argument_list pos:line="34" pos:column="34">(<argument><expr><operator pos:line="34" pos:column="35">&amp;<pos:position pos:line="34" pos:column="40"/></operator><name pos:line="34" pos:column="36">f<pos:position pos:line="34" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="39">hdr<pos:position pos:line="34" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="44">M_ADD_FROM<pos:position pos:line="34" pos:column="54"/></name></expr></argument>)<pos:position pos:line="34" pos:column="55"/></argument_list></call><operator pos:line="34" pos:column="55">)<pos:position pos:line="34" pos:column="56"/></operator> <operator pos:line="34" pos:column="57">==<pos:position pos:line="34" pos:column="59"/></operator> <name pos:line="34" pos:column="60">NULL<pos:position pos:line="34" pos:column="64"/></name></expr>)<pos:position pos:line="34" pos:column="65"/></condition><then pos:line="34" pos:column="65">
  <block pos:line="35" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">mx_close_mailbox<pos:position pos:line="36" pos:column="21"/></name> <argument_list pos:line="36" pos:column="22">(<argument><expr><operator pos:line="36" pos:column="23">&amp;<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="24">f<pos:position pos:line="36" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="27">NULL<pos:position pos:line="36" pos:column="31"/></name></expr></argument>)<pos:position pos:line="36" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="33"/></expr_stmt>
    <return pos:line="37" pos:column="5">return <expr><operator pos:line="37" pos:column="12">(<pos:position pos:line="37" pos:column="13"/></operator><operator pos:line="37" pos:column="13">-<pos:position pos:line="37" pos:column="14"/></operator><literal type="number" pos:line="37" pos:column="14">1<pos:position pos:line="37" pos:column="15"/></literal><operator pos:line="37" pos:column="15">)<pos:position pos:line="37" pos:column="16"/></operator></expr>;<pos:position pos:line="37" pos:column="17"/></return>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="40" pos:column="3">/* post == 1 =&gt; postpone message. Set mode = -1 in mutt_write_rfc822_header()
   * post == 0 =&gt; Normal mode. Set mode = 0 in mutt_write_rfc822_header() 
   * */</comment>
  <expr_stmt><expr><call><name pos:line="43" pos:column="3">mutt_write_rfc822_header<pos:position pos:line="43" pos:column="27"/></name> <argument_list pos:line="43" pos:column="28">(<argument><expr><name><name pos:line="43" pos:column="29">msg<pos:position pos:line="43" pos:column="32"/></name><operator pos:line="43" pos:column="32">-&gt;<pos:position pos:line="43" pos:column="37"/></operator><name pos:line="43" pos:column="34">fp<pos:position pos:line="43" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="38">hdr<pos:position pos:line="43" pos:column="41"/></name><operator pos:line="43" pos:column="41">-&gt;<pos:position pos:line="43" pos:column="46"/></operator><name pos:line="43" pos:column="43">env<pos:position pos:line="43" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="48">hdr<pos:position pos:line="43" pos:column="51"/></name><operator pos:line="43" pos:column="51">-&gt;<pos:position pos:line="43" pos:column="56"/></operator><name pos:line="43" pos:column="53">content<pos:position pos:line="43" pos:column="60"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="43" pos:column="62">post<pos:position pos:line="43" pos:column="66"/></name></expr> ?<pos:position pos:line="43" pos:column="68"/></condition><then pos:line="43" pos:column="68"> <expr><operator pos:line="43" pos:column="69">-<pos:position pos:line="43" pos:column="70"/></operator><name pos:line="43" pos:column="70">post<pos:position pos:line="43" pos:column="74"/></name></expr> <pos:position pos:line="43" pos:column="75"/></then><else pos:line="43" pos:column="75">: <expr><literal type="number" pos:line="43" pos:column="77">0<pos:position pos:line="43" pos:column="78"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="80">0<pos:position pos:line="43" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="83"/></expr_stmt>

  <comment type="block" pos:line="45" pos:column="3">/* (postponment) if this was a reply of some sort, &lt;msgid&gt; contians the
   * Message-ID: of message replied to.  Save it using a special X-Mutt-
   * header so it can be picked up if the message is recalled at a later
   * point in time.  This will allow the message to be marked as replied if
   * the same mailbox is still open.
   */</comment>
  <if pos:line="51" pos:column="3">if <condition pos:line="51" pos:column="6">(<expr><name pos:line="51" pos:column="7">post<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">&amp;&amp;<pos:position pos:line="51" pos:column="22"/></operator> <name pos:line="51" pos:column="15">msgid<pos:position pos:line="51" pos:column="20"/></name></expr>)<pos:position pos:line="51" pos:column="21"/></condition><then pos:line="51" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="5">fprintf<pos:position pos:line="52" pos:column="12"/></name> <argument_list pos:line="52" pos:column="13">(<argument><expr><name><name pos:line="52" pos:column="14">msg<pos:position pos:line="52" pos:column="17"/></name><operator pos:line="52" pos:column="17">-&gt;<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="19">fp<pos:position pos:line="52" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="23">"X-Mutt-References: %s\n"<pos:position pos:line="52" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="50">msgid<pos:position pos:line="52" pos:column="55"/></name></expr></argument>)<pos:position pos:line="52" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="57"/></expr_stmt></block></then></if>
  
  <comment type="block" pos:line="54" pos:column="3">/* (postponment) save the Fcc: using a special X-Mutt- header so that
   * it can be picked up when the message is recalled 
   */</comment>
  <if pos:line="57" pos:column="3">if <condition pos:line="57" pos:column="6">(<expr><name pos:line="57" pos:column="7">post<pos:position pos:line="57" pos:column="11"/></name> <operator pos:line="57" pos:column="12">&amp;&amp;<pos:position pos:line="57" pos:column="22"/></operator> <name pos:line="57" pos:column="15">fcc<pos:position pos:line="57" pos:column="18"/></name></expr>)<pos:position pos:line="57" pos:column="19"/></condition><then pos:line="57" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="5">fprintf<pos:position pos:line="58" pos:column="12"/></name> <argument_list pos:line="58" pos:column="13">(<argument><expr><name><name pos:line="58" pos:column="14">msg<pos:position pos:line="58" pos:column="17"/></name><operator pos:line="58" pos:column="17">-&gt;<pos:position pos:line="58" pos:column="22"/></operator><name pos:line="58" pos:column="19">fp<pos:position pos:line="58" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="23">"X-Mutt-Fcc: %s\n"<pos:position pos:line="58" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="43">fcc<pos:position pos:line="58" pos:column="46"/></name></expr></argument>)<pos:position pos:line="58" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="48"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="59" pos:column="3">fprintf<pos:position pos:line="59" pos:column="10"/></name> <argument_list pos:line="59" pos:column="11">(<argument><expr><name><name pos:line="59" pos:column="12">msg<pos:position pos:line="59" pos:column="15"/></name><operator pos:line="59" pos:column="15">-&gt;<pos:position pos:line="59" pos:column="20"/></operator><name pos:line="59" pos:column="17">fp<pos:position pos:line="59" pos:column="19"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="21">"Status: RO\n"<pos:position pos:line="59" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="37"/></expr_stmt>



<cpp:ifdef pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">ifdef<pos:position pos:line="63" pos:column="7"/></cpp:directive> <name pos:line="63" pos:column="8">HAVE_PGP<pos:position pos:line="63" pos:column="16"/></name></cpp:ifdef>
  <comment type="block" pos:line="64" pos:column="3">/* (postponment) if the mail is to be signed or encrypted, save this info */</comment>
  <if pos:line="65" pos:column="3">if <condition pos:line="65" pos:column="6">(<expr><name pos:line="65" pos:column="7">post<pos:position pos:line="65" pos:column="11"/></name> <operator pos:line="65" pos:column="12">&amp;&amp;<pos:position pos:line="65" pos:column="22"/></operator> <operator pos:line="65" pos:column="15">(<pos:position pos:line="65" pos:column="16"/></operator><name><name pos:line="65" pos:column="16">hdr<pos:position pos:line="65" pos:column="19"/></name><operator pos:line="65" pos:column="19">-&gt;<pos:position pos:line="65" pos:column="24"/></operator><name pos:line="65" pos:column="21">pgp<pos:position pos:line="65" pos:column="24"/></name></name> <operator pos:line="65" pos:column="25">&amp;<pos:position pos:line="65" pos:column="30"/></operator> <operator pos:line="65" pos:column="27">(<pos:position pos:line="65" pos:column="28"/></operator><name pos:line="65" pos:column="28">PGPENCRYPT<pos:position pos:line="65" pos:column="38"/></name> <operator pos:line="65" pos:column="39">|<pos:position pos:line="65" pos:column="40"/></operator> <name pos:line="65" pos:column="41">PGPSIGN<pos:position pos:line="65" pos:column="48"/></name><operator pos:line="65" pos:column="48">)<pos:position pos:line="65" pos:column="49"/></operator><operator pos:line="65" pos:column="49">)<pos:position pos:line="65" pos:column="50"/></operator></expr>)<pos:position pos:line="65" pos:column="51"/></condition><then pos:line="65" pos:column="51">
  <block pos:line="66" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">fputs<pos:position pos:line="67" pos:column="10"/></name> <argument_list pos:line="67" pos:column="11">(<argument><expr><literal type="string" pos:line="67" pos:column="12">"X-Mutt-PGP: "<pos:position pos:line="67" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="28">msg<pos:position pos:line="67" pos:column="31"/></name><operator pos:line="67" pos:column="31">-&gt;<pos:position pos:line="67" pos:column="36"/></operator><name pos:line="67" pos:column="33">fp<pos:position pos:line="67" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="37"/></expr_stmt>
    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><name><name pos:line="68" pos:column="9">hdr<pos:position pos:line="68" pos:column="12"/></name><operator pos:line="68" pos:column="12">-&gt;<pos:position pos:line="68" pos:column="17"/></operator><name pos:line="68" pos:column="14">pgp<pos:position pos:line="68" pos:column="17"/></name></name> <operator pos:line="68" pos:column="18">&amp;<pos:position pos:line="68" pos:column="23"/></operator> <name pos:line="68" pos:column="20">PGPENCRYPT<pos:position pos:line="68" pos:column="30"/></name></expr>)<pos:position pos:line="68" pos:column="31"/></condition><then pos:line="68" pos:column="31"> 
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="7">fputc<pos:position pos:line="69" pos:column="12"/></name> <argument_list pos:line="69" pos:column="13">(<argument><expr><literal type="char" pos:line="69" pos:column="14">'E'<pos:position pos:line="69" pos:column="17"/></literal></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="19">msg<pos:position pos:line="69" pos:column="22"/></name><operator pos:line="69" pos:column="22">-&gt;<pos:position pos:line="69" pos:column="27"/></operator><name pos:line="69" pos:column="24">fp<pos:position pos:line="69" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="28"/></expr_stmt></block></then></if>
    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><name><name pos:line="70" pos:column="9">hdr<pos:position pos:line="70" pos:column="12"/></name><operator pos:line="70" pos:column="12">-&gt;<pos:position pos:line="70" pos:column="17"/></operator><name pos:line="70" pos:column="14">pgp<pos:position pos:line="70" pos:column="17"/></name></name> <operator pos:line="70" pos:column="18">&amp;<pos:position pos:line="70" pos:column="23"/></operator> <name pos:line="70" pos:column="20">PGPSIGN<pos:position pos:line="70" pos:column="27"/></name></expr>)<pos:position pos:line="70" pos:column="28"/></condition><then pos:line="70" pos:column="28">
    <block pos:line="71" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="72" pos:column="7">fputc<pos:position pos:line="72" pos:column="12"/></name> <argument_list pos:line="72" pos:column="13">(<argument><expr><literal type="char" pos:line="72" pos:column="14">'S'<pos:position pos:line="72" pos:column="17"/></literal></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="19">msg<pos:position pos:line="72" pos:column="22"/></name><operator pos:line="72" pos:column="22">-&gt;<pos:position pos:line="72" pos:column="27"/></operator><name pos:line="72" pos:column="24">fp<pos:position pos:line="72" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="28"/></expr_stmt>
      <if pos:line="73" pos:column="7">if <condition pos:line="73" pos:column="10">(<expr><name pos:line="73" pos:column="11">PgpSignAs<pos:position pos:line="73" pos:column="20"/></name> <operator pos:line="73" pos:column="21">&amp;&amp;<pos:position pos:line="73" pos:column="31"/></operator> <operator pos:line="73" pos:column="24">*<pos:position pos:line="73" pos:column="25"/></operator><name pos:line="73" pos:column="25">PgpSignAs<pos:position pos:line="73" pos:column="34"/></name></expr>)<pos:position pos:line="73" pos:column="35"/></condition><then pos:line="73" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="9">fprintf<pos:position pos:line="74" pos:column="16"/></name> <argument_list pos:line="74" pos:column="17">(<argument><expr><name><name pos:line="74" pos:column="18">msg<pos:position pos:line="74" pos:column="21"/></name><operator pos:line="74" pos:column="21">-&gt;<pos:position pos:line="74" pos:column="26"/></operator><name pos:line="74" pos:column="23">fp<pos:position pos:line="74" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="27">"&lt;%s&gt;"<pos:position pos:line="74" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="35">PgpSignAs<pos:position pos:line="74" pos:column="44"/></name></expr></argument>)<pos:position pos:line="74" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="46"/></expr_stmt></block></then></if>
    }<pos:position pos:line="75" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="76" pos:column="5">fputc<pos:position pos:line="76" pos:column="10"/></name> <argument_list pos:line="76" pos:column="11">(<argument><expr><literal type="char" pos:line="76" pos:column="12">'\n'<pos:position pos:line="76" pos:column="16"/></literal></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="18">msg<pos:position pos:line="76" pos:column="21"/></name><operator pos:line="76" pos:column="21">-&gt;<pos:position pos:line="76" pos:column="26"/></operator><name pos:line="76" pos:column="23">fp<pos:position pos:line="76" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="77" pos:column="4"/></block></then></if>
<cpp:endif pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">endif<pos:position pos:line="78" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="78" pos:column="8">/* HAVE_PGP */</comment>

<cpp:ifdef pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">ifdef<pos:position pos:line="80" pos:column="7"/></cpp:directive> <name pos:line="80" pos:column="8">MIXMASTER<pos:position pos:line="80" pos:column="17"/></name></cpp:ifdef>
  <comment type="block" pos:line="81" pos:column="3">/* (postponement) if the mail is to be sent through a mixmaster 
   * chain, save that information
   */</comment>
  
  <if pos:line="85" pos:column="3">if <condition pos:line="85" pos:column="6">(<expr><name pos:line="85" pos:column="7">post<pos:position pos:line="85" pos:column="11"/></name> <operator pos:line="85" pos:column="12">&amp;&amp;<pos:position pos:line="85" pos:column="22"/></operator> <name><name pos:line="85" pos:column="15">hdr<pos:position pos:line="85" pos:column="18"/></name><operator pos:line="85" pos:column="18">-&gt;<pos:position pos:line="85" pos:column="23"/></operator><name pos:line="85" pos:column="20">chain<pos:position pos:line="85" pos:column="25"/></name></name> <operator pos:line="85" pos:column="26">&amp;&amp;<pos:position pos:line="85" pos:column="36"/></operator> <name><name pos:line="85" pos:column="29">hdr<pos:position pos:line="85" pos:column="32"/></name><operator pos:line="85" pos:column="32">-&gt;<pos:position pos:line="85" pos:column="37"/></operator><name pos:line="85" pos:column="34">chain<pos:position pos:line="85" pos:column="39"/></name></name></expr>)<pos:position pos:line="85" pos:column="40"/></condition><then pos:line="85" pos:column="40">
  <block pos:line="86" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="87" pos:column="5">LIST<pos:position pos:line="87" pos:column="9"/></name> <modifier pos:line="87" pos:column="10">*<pos:position pos:line="87" pos:column="11"/></modifier></type><name pos:line="87" pos:column="11">p<pos:position pos:line="87" pos:column="12"/></name></decl>;<pos:position pos:line="87" pos:column="13"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="89" pos:column="5">fputs<pos:position pos:line="89" pos:column="10"/></name> <argument_list pos:line="89" pos:column="11">(<argument><expr><literal type="string" pos:line="89" pos:column="12">"X-Mutt-Mix:"<pos:position pos:line="89" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="27">msg<pos:position pos:line="89" pos:column="30"/></name><operator pos:line="89" pos:column="30">-&gt;<pos:position pos:line="89" pos:column="35"/></operator><name pos:line="89" pos:column="32">fp<pos:position pos:line="89" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="36"/></expr_stmt>
    <for pos:line="90" pos:column="5">for <control pos:line="90" pos:column="9">(<init><expr><name pos:line="90" pos:column="10">p<pos:position pos:line="90" pos:column="11"/></name> <operator pos:line="90" pos:column="12">=<pos:position pos:line="90" pos:column="13"/></operator> <name><name pos:line="90" pos:column="14">hdr<pos:position pos:line="90" pos:column="17"/></name><operator pos:line="90" pos:column="17">-&gt;<pos:position pos:line="90" pos:column="22"/></operator><name pos:line="90" pos:column="19">chain<pos:position pos:line="90" pos:column="24"/></name></name></expr>;<pos:position pos:line="90" pos:column="25"/></init> <condition><expr><name pos:line="90" pos:column="26">p<pos:position pos:line="90" pos:column="27"/></name></expr>;<pos:position pos:line="90" pos:column="28"/></condition> <incr><expr><name pos:line="90" pos:column="29">p<pos:position pos:line="90" pos:column="30"/></name> <operator pos:line="90" pos:column="31">=<pos:position pos:line="90" pos:column="32"/></operator> <name><name pos:line="90" pos:column="33">p<pos:position pos:line="90" pos:column="34"/></name><operator pos:line="90" pos:column="34">-&gt;<pos:position pos:line="90" pos:column="39"/></operator><name pos:line="90" pos:column="36">next<pos:position pos:line="90" pos:column="40"/></name></name></expr></incr>)<pos:position pos:line="90" pos:column="41"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="91" pos:column="7">fprintf<pos:position pos:line="91" pos:column="14"/></name> <argument_list pos:line="91" pos:column="15">(<argument><expr><name><name pos:line="91" pos:column="16">msg<pos:position pos:line="91" pos:column="19"/></name><operator pos:line="91" pos:column="19">-&gt;<pos:position pos:line="91" pos:column="24"/></operator><name pos:line="91" pos:column="21">fp<pos:position pos:line="91" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="25">" %s"<pos:position pos:line="91" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="91" pos:column="32">(<pos:position pos:line="91" pos:column="33"/></operator><name pos:line="91" pos:column="33">char<pos:position pos:line="91" pos:column="37"/></name> <operator pos:line="91" pos:column="38">*<pos:position pos:line="91" pos:column="39"/></operator><operator pos:line="91" pos:column="39">)<pos:position pos:line="91" pos:column="40"/></operator> <name><name pos:line="91" pos:column="41">p<pos:position pos:line="91" pos:column="42"/></name><operator pos:line="91" pos:column="42">-&gt;<pos:position pos:line="91" pos:column="47"/></operator><name pos:line="91" pos:column="44">data<pos:position pos:line="91" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="50"/></expr_stmt></block></for>
    
    <expr_stmt><expr><call><name pos:line="93" pos:column="5">fputc<pos:position pos:line="93" pos:column="10"/></name> <argument_list pos:line="93" pos:column="11">(<argument><expr><literal type="char" pos:line="93" pos:column="12">'\n'<pos:position pos:line="93" pos:column="16"/></literal></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="18">msg<pos:position pos:line="93" pos:column="21"/></name><operator pos:line="93" pos:column="21">-&gt;<pos:position pos:line="93" pos:column="26"/></operator><name pos:line="93" pos:column="23">fp<pos:position pos:line="93" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="94" pos:column="4"/></block></then></if>
<cpp:endif pos:line="95" pos:column="1">#<cpp:directive pos:line="95" pos:column="2">endif<pos:position pos:line="95" pos:column="7"/></cpp:directive></cpp:endif>    

  <if pos:line="97" pos:column="3">if <condition pos:line="97" pos:column="6">(<expr><name pos:line="97" pos:column="7">tempfp<pos:position pos:line="97" pos:column="13"/></name></expr>)<pos:position pos:line="97" pos:column="14"/></condition><then pos:line="97" pos:column="14">
  <block pos:line="98" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="99" pos:column="5">char<pos:position pos:line="99" pos:column="9"/></name></type> <name><name pos:line="99" pos:column="10">sasha<pos:position pos:line="99" pos:column="15"/></name><index pos:line="99" pos:column="15">[<expr><name pos:line="99" pos:column="16">LONG_STRING<pos:position pos:line="99" pos:column="27"/></name></expr>]<pos:position pos:line="99" pos:column="28"/></index></name></decl>;<pos:position pos:line="99" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="100" pos:column="5">int<pos:position pos:line="100" pos:column="8"/></name></type> <name pos:line="100" pos:column="9">lines<pos:position pos:line="100" pos:column="14"/></name> <init pos:line="100" pos:column="15">= <expr><literal type="number" pos:line="100" pos:column="17">0<pos:position pos:line="100" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="100" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="102" pos:column="5">mutt_write_mime_body<pos:position pos:line="102" pos:column="25"/></name> <argument_list pos:line="102" pos:column="26">(<argument><expr><name><name pos:line="102" pos:column="27">hdr<pos:position pos:line="102" pos:column="30"/></name><operator pos:line="102" pos:column="30">-&gt;<pos:position pos:line="102" pos:column="35"/></operator><name pos:line="102" pos:column="32">content<pos:position pos:line="102" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="41">tempfp<pos:position pos:line="102" pos:column="47"/></name></expr></argument>)<pos:position pos:line="102" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="49"/></expr_stmt>

    <comment type="block" pos:line="104" pos:column="5">/* make sure the last line ends with a newline.  Emacs doesn't ensure
     * this will happen, and it can cause problems parsing the mailbox   
     * later.
     */</comment>
    <expr_stmt><expr><call><name pos:line="108" pos:column="5">fseek<pos:position pos:line="108" pos:column="10"/></name> <argument_list pos:line="108" pos:column="11">(<argument><expr><name pos:line="108" pos:column="12">tempfp<pos:position pos:line="108" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="108" pos:column="20">-<pos:position pos:line="108" pos:column="21"/></operator><literal type="number" pos:line="108" pos:column="21">1<pos:position pos:line="108" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="108" pos:column="24">2<pos:position pos:line="108" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="27"/></expr_stmt>
    <if pos:line="109" pos:column="5">if <condition pos:line="109" pos:column="8">(<expr><call><name pos:line="109" pos:column="9">fgetc<pos:position pos:line="109" pos:column="14"/></name> <argument_list pos:line="109" pos:column="15">(<argument><expr><name pos:line="109" pos:column="16">tempfp<pos:position pos:line="109" pos:column="22"/></name></expr></argument>)<pos:position pos:line="109" pos:column="23"/></argument_list></call> <operator pos:line="109" pos:column="24">!=<pos:position pos:line="109" pos:column="26"/></operator> <literal type="char" pos:line="109" pos:column="27">'\n'<pos:position pos:line="109" pos:column="31"/></literal></expr>)<pos:position pos:line="109" pos:column="32"/></condition><then pos:line="109" pos:column="32">
    <block pos:line="110" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="111" pos:column="7">fseek<pos:position pos:line="111" pos:column="12"/></name> <argument_list pos:line="111" pos:column="13">(<argument><expr><name pos:line="111" pos:column="14">tempfp<pos:position pos:line="111" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="111" pos:column="22">0<pos:position pos:line="111" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="111" pos:column="25">2<pos:position pos:line="111" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="112" pos:column="7">fputc<pos:position pos:line="112" pos:column="12"/></name> <argument_list pos:line="112" pos:column="13">(<argument><expr><literal type="char" pos:line="112" pos:column="14">'\n'<pos:position pos:line="112" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="112" pos:column="20">tempfp<pos:position pos:line="112" pos:column="26"/></name></expr></argument>)<pos:position pos:line="112" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="113" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="115" pos:column="5">fflush<pos:position pos:line="115" pos:column="11"/></name> <argument_list pos:line="115" pos:column="12">(<argument><expr><name pos:line="115" pos:column="13">tempfp<pos:position pos:line="115" pos:column="19"/></name></expr></argument>)<pos:position pos:line="115" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="21"/></expr_stmt>
    <if pos:line="116" pos:column="5">if <condition pos:line="116" pos:column="8">(<expr><call><name pos:line="116" pos:column="9">ferror<pos:position pos:line="116" pos:column="15"/></name> <argument_list pos:line="116" pos:column="16">(<argument><expr><name pos:line="116" pos:column="17">tempfp<pos:position pos:line="116" pos:column="23"/></name></expr></argument>)<pos:position pos:line="116" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="116" pos:column="25"/></condition><then pos:line="116" pos:column="25">
    <block pos:line="117" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="118" pos:column="7">dprint<pos:position pos:line="118" pos:column="13"/></name> <argument_list pos:line="118" pos:column="14">(<argument><expr><literal type="number" pos:line="118" pos:column="15">1<pos:position pos:line="118" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="118" pos:column="18">(<pos:position pos:line="118" pos:column="19"/></operator><name pos:line="118" pos:column="19">debugfile<pos:position pos:line="118" pos:column="28"/></name><operator pos:line="118" pos:column="28">,<pos:position pos:line="118" pos:column="29"/></operator> <literal type="string" pos:line="118" pos:column="30">"mutt_write_fcc(): %s: write failed.\n"<pos:position pos:line="118" pos:column="69"/></literal><operator pos:line="118" pos:column="69">,<pos:position pos:line="118" pos:column="70"/></operator> <name pos:line="118" pos:column="71">tempfile<pos:position pos:line="118" pos:column="79"/></name><operator pos:line="118" pos:column="79">)<pos:position pos:line="118" pos:column="80"/></operator></expr></argument>)<pos:position pos:line="118" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="82"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="119" pos:column="7">fclose<pos:position pos:line="119" pos:column="13"/></name> <argument_list pos:line="119" pos:column="14">(<argument><expr><name pos:line="119" pos:column="15">tempfp<pos:position pos:line="119" pos:column="21"/></name></expr></argument>)<pos:position pos:line="119" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="120" pos:column="7">unlink<pos:position pos:line="120" pos:column="13"/></name> <argument_list pos:line="120" pos:column="14">(<argument><expr><name pos:line="120" pos:column="15">tempfile<pos:position pos:line="120" pos:column="23"/></name></expr></argument>)<pos:position pos:line="120" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="121" pos:column="7">mx_commit_message<pos:position pos:line="121" pos:column="24"/></name> <argument_list pos:line="121" pos:column="25">(<argument><expr><name pos:line="121" pos:column="26">msg<pos:position pos:line="121" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="121" pos:column="31">&amp;<pos:position pos:line="121" pos:column="36"/></operator><name pos:line="121" pos:column="32">f<pos:position pos:line="121" pos:column="33"/></name></expr></argument>)<pos:position pos:line="121" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="35"/></expr_stmt>	<comment type="block" pos:line="121" pos:column="41">/* XXX - really? */</comment>
      <expr_stmt><expr><call><name pos:line="122" pos:column="7">mx_close_message<pos:position pos:line="122" pos:column="23"/></name> <argument_list pos:line="122" pos:column="24">(<argument><expr><operator pos:line="122" pos:column="25">&amp;<pos:position pos:line="122" pos:column="30"/></operator><name pos:line="122" pos:column="26">msg<pos:position pos:line="122" pos:column="29"/></name></expr></argument>)<pos:position pos:line="122" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="123" pos:column="7">mx_close_mailbox<pos:position pos:line="123" pos:column="23"/></name> <argument_list pos:line="123" pos:column="24">(<argument><expr><operator pos:line="123" pos:column="25">&amp;<pos:position pos:line="123" pos:column="30"/></operator><name pos:line="123" pos:column="26">f<pos:position pos:line="123" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="29">NULL<pos:position pos:line="123" pos:column="33"/></name></expr></argument>)<pos:position pos:line="123" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="35"/></expr_stmt>
      <return pos:line="124" pos:column="7">return <expr><operator pos:line="124" pos:column="14">-<pos:position pos:line="124" pos:column="15"/></operator><literal type="number" pos:line="124" pos:column="15">1<pos:position pos:line="124" pos:column="16"/></literal></expr>;<pos:position pos:line="124" pos:column="17"/></return>
    }<pos:position pos:line="125" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="127" pos:column="5">/* count the number of lines */</comment>
    <expr_stmt><expr><call><name pos:line="128" pos:column="5">rewind<pos:position pos:line="128" pos:column="11"/></name> <argument_list pos:line="128" pos:column="12">(<argument><expr><name pos:line="128" pos:column="13">tempfp<pos:position pos:line="128" pos:column="19"/></name></expr></argument>)<pos:position pos:line="128" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="21"/></expr_stmt>
    <while pos:line="129" pos:column="5">while <condition pos:line="129" pos:column="11">(<expr><call><name pos:line="129" pos:column="12">fgets<pos:position pos:line="129" pos:column="17"/></name> <argument_list pos:line="129" pos:column="18">(<argument><expr><name pos:line="129" pos:column="19">sasha<pos:position pos:line="129" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="129" pos:column="26">sizeof <argument_list pos:line="129" pos:column="33">(<argument><expr><name pos:line="129" pos:column="34">sasha<pos:position pos:line="129" pos:column="39"/></name></expr></argument>)<pos:position pos:line="129" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="129" pos:column="42">tempfp<pos:position pos:line="129" pos:column="48"/></name></expr></argument>)<pos:position pos:line="129" pos:column="49"/></argument_list></call> <operator pos:line="129" pos:column="50">!=<pos:position pos:line="129" pos:column="52"/></operator> <name pos:line="129" pos:column="53">NULL<pos:position pos:line="129" pos:column="57"/></name></expr>)<pos:position pos:line="129" pos:column="58"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="130" pos:column="7">lines<pos:position pos:line="130" pos:column="12"/></name><operator pos:line="130" pos:column="12">++<pos:position pos:line="130" pos:column="14"/></operator></expr>;<pos:position pos:line="130" pos:column="15"/></expr_stmt></block></while>
    <expr_stmt><expr><call><name pos:line="131" pos:column="5">fprintf<pos:position pos:line="131" pos:column="12"/></name> <argument_list pos:line="131" pos:column="13">(<argument><expr><name><name pos:line="131" pos:column="14">msg<pos:position pos:line="131" pos:column="17"/></name><operator pos:line="131" pos:column="17">-&gt;<pos:position pos:line="131" pos:column="22"/></operator><name pos:line="131" pos:column="19">fp<pos:position pos:line="131" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="23">"Content-Length: %ld\n"<pos:position pos:line="131" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="131" pos:column="48">(<pos:position pos:line="131" pos:column="49"/></operator><name pos:line="131" pos:column="49">long<pos:position pos:line="131" pos:column="53"/></name><operator pos:line="131" pos:column="53">)<pos:position pos:line="131" pos:column="54"/></operator> <call><name pos:line="131" pos:column="55">ftell<pos:position pos:line="131" pos:column="60"/></name> <argument_list pos:line="131" pos:column="61">(<argument><expr><name pos:line="131" pos:column="62">tempfp<pos:position pos:line="131" pos:column="68"/></name></expr></argument>)<pos:position pos:line="131" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="131" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="132" pos:column="5">fprintf<pos:position pos:line="132" pos:column="12"/></name> <argument_list pos:line="132" pos:column="13">(<argument><expr><name><name pos:line="132" pos:column="14">msg<pos:position pos:line="132" pos:column="17"/></name><operator pos:line="132" pos:column="17">-&gt;<pos:position pos:line="132" pos:column="22"/></operator><name pos:line="132" pos:column="19">fp<pos:position pos:line="132" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="23">"Lines: %d\n\n"<pos:position pos:line="132" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="132" pos:column="40">lines<pos:position pos:line="132" pos:column="45"/></name></expr></argument>)<pos:position pos:line="132" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="47"/></expr_stmt>

    <comment type="block" pos:line="134" pos:column="5">/* copy the body and clean up */</comment>
    <expr_stmt><expr><call><name pos:line="135" pos:column="5">rewind<pos:position pos:line="135" pos:column="11"/></name> <argument_list pos:line="135" pos:column="12">(<argument><expr><name pos:line="135" pos:column="13">tempfp<pos:position pos:line="135" pos:column="19"/></name></expr></argument>)<pos:position pos:line="135" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="136" pos:column="5">r<pos:position pos:line="136" pos:column="6"/></name> <operator pos:line="136" pos:column="7">=<pos:position pos:line="136" pos:column="8"/></operator> <call><name pos:line="136" pos:column="9">mutt_copy_stream<pos:position pos:line="136" pos:column="25"/></name> <argument_list pos:line="136" pos:column="26">(<argument><expr><name pos:line="136" pos:column="27">tempfp<pos:position pos:line="136" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="136" pos:column="35">msg<pos:position pos:line="136" pos:column="38"/></name><operator pos:line="136" pos:column="38">-&gt;<pos:position pos:line="136" pos:column="43"/></operator><name pos:line="136" pos:column="40">fp<pos:position pos:line="136" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="136" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="44"/></expr_stmt>
    <if pos:line="137" pos:column="5">if <condition pos:line="137" pos:column="8">(<expr><call><name pos:line="137" pos:column="9">fclose<pos:position pos:line="137" pos:column="15"/></name> <argument_list pos:line="137" pos:column="16">(<argument><expr><name pos:line="137" pos:column="17">tempfp<pos:position pos:line="137" pos:column="23"/></name></expr></argument>)<pos:position pos:line="137" pos:column="24"/></argument_list></call> <operator pos:line="137" pos:column="25">!=<pos:position pos:line="137" pos:column="27"/></operator> <literal type="number" pos:line="137" pos:column="28">0<pos:position pos:line="137" pos:column="29"/></literal></expr>)<pos:position pos:line="137" pos:column="30"/></condition><then pos:line="137" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name pos:line="138" pos:column="7">r<pos:position pos:line="138" pos:column="8"/></name> <operator pos:line="138" pos:column="9">=<pos:position pos:line="138" pos:column="10"/></operator> <operator pos:line="138" pos:column="11">-<pos:position pos:line="138" pos:column="12"/></operator><literal type="number" pos:line="138" pos:column="12">1<pos:position pos:line="138" pos:column="13"/></literal></expr>;<pos:position pos:line="138" pos:column="14"/></expr_stmt></block></then></if>
    <comment type="block" pos:line="139" pos:column="5">/* if there was an error, leave the temp version */</comment>
    <if pos:line="140" pos:column="5">if <condition pos:line="140" pos:column="8">(<expr><operator pos:line="140" pos:column="9">!<pos:position pos:line="140" pos:column="10"/></operator><name pos:line="140" pos:column="10">r<pos:position pos:line="140" pos:column="11"/></name></expr>)<pos:position pos:line="140" pos:column="12"/></condition><then pos:line="140" pos:column="12">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="141" pos:column="7">unlink<pos:position pos:line="141" pos:column="13"/></name> <argument_list pos:line="141" pos:column="14">(<argument><expr><name pos:line="141" pos:column="15">tempfile<pos:position pos:line="141" pos:column="23"/></name></expr></argument>)<pos:position pos:line="141" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="25"/></expr_stmt></block></then></if>
  }<pos:position pos:line="142" pos:column="4"/></block></then>
  <else pos:line="143" pos:column="3">else
  <block pos:line="144" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="145" pos:column="5">fputc<pos:position pos:line="145" pos:column="10"/></name> <argument_list pos:line="145" pos:column="11">(<argument><expr><literal type="char" pos:line="145" pos:column="12">'\n'<pos:position pos:line="145" pos:column="16"/></literal></expr></argument>, <argument><expr><name><name pos:line="145" pos:column="18">msg<pos:position pos:line="145" pos:column="21"/></name><operator pos:line="145" pos:column="21">-&gt;<pos:position pos:line="145" pos:column="26"/></operator><name pos:line="145" pos:column="23">fp<pos:position pos:line="145" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="145" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="27"/></expr_stmt> <comment type="block" pos:line="145" pos:column="28">/* finish off the header */</comment>
    <expr_stmt><expr><name pos:line="146" pos:column="5">r<pos:position pos:line="146" pos:column="6"/></name> <operator pos:line="146" pos:column="7">=<pos:position pos:line="146" pos:column="8"/></operator> <call><name pos:line="146" pos:column="9">mutt_write_mime_body<pos:position pos:line="146" pos:column="29"/></name> <argument_list pos:line="146" pos:column="30">(<argument><expr><name><name pos:line="146" pos:column="31">hdr<pos:position pos:line="146" pos:column="34"/></name><operator pos:line="146" pos:column="34">-&gt;<pos:position pos:line="146" pos:column="39"/></operator><name pos:line="146" pos:column="36">content<pos:position pos:line="146" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="146" pos:column="45">msg<pos:position pos:line="146" pos:column="48"/></name><operator pos:line="146" pos:column="48">-&gt;<pos:position pos:line="146" pos:column="53"/></operator><name pos:line="146" pos:column="50">fp<pos:position pos:line="146" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="146" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="54"/></expr_stmt>
  }<pos:position pos:line="147" pos:column="4"/></block></else></if>

  <if pos:line="149" pos:column="3">if <condition pos:line="149" pos:column="6">(<expr><call><name pos:line="149" pos:column="7">mx_commit_message<pos:position pos:line="149" pos:column="24"/></name> <argument_list pos:line="149" pos:column="25">(<argument><expr><name pos:line="149" pos:column="26">msg<pos:position pos:line="149" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="149" pos:column="31">&amp;<pos:position pos:line="149" pos:column="36"/></operator><name pos:line="149" pos:column="32">f<pos:position pos:line="149" pos:column="33"/></name></expr></argument>)<pos:position pos:line="149" pos:column="34"/></argument_list></call> <operator pos:line="149" pos:column="35">!=<pos:position pos:line="149" pos:column="37"/></operator> <literal type="number" pos:line="149" pos:column="38">0<pos:position pos:line="149" pos:column="39"/></literal></expr>)<pos:position pos:line="149" pos:column="40"/></condition><then pos:line="149" pos:column="40">
    <block type="pseudo"><expr_stmt><expr><name pos:line="150" pos:column="5">r<pos:position pos:line="150" pos:column="6"/></name> <operator pos:line="150" pos:column="7">=<pos:position pos:line="150" pos:column="8"/></operator> <operator pos:line="150" pos:column="9">-<pos:position pos:line="150" pos:column="10"/></operator><literal type="number" pos:line="150" pos:column="10">1<pos:position pos:line="150" pos:column="11"/></literal></expr>;<pos:position pos:line="150" pos:column="12"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="151" pos:column="3">mx_close_message<pos:position pos:line="151" pos:column="19"/></name> <argument_list pos:line="151" pos:column="20">(<argument><expr><operator pos:line="151" pos:column="21">&amp;<pos:position pos:line="151" pos:column="26"/></operator><name pos:line="151" pos:column="22">msg<pos:position pos:line="151" pos:column="25"/></name></expr></argument>)<pos:position pos:line="151" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="152" pos:column="3">mx_close_mailbox<pos:position pos:line="152" pos:column="19"/></name> <argument_list pos:line="152" pos:column="20">(<argument><expr><operator pos:line="152" pos:column="21">&amp;<pos:position pos:line="152" pos:column="26"/></operator><name pos:line="152" pos:column="22">f<pos:position pos:line="152" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="25">NULL<pos:position pos:line="152" pos:column="29"/></name></expr></argument>)<pos:position pos:line="152" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="31"/></expr_stmt>

  <if pos:line="154" pos:column="3">if <condition pos:line="154" pos:column="6">(<expr><name pos:line="154" pos:column="7">post<pos:position pos:line="154" pos:column="11"/></name></expr>)<pos:position pos:line="154" pos:column="12"/></condition><then pos:line="154" pos:column="12">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="155" pos:column="5">set_noconv_flags<pos:position pos:line="155" pos:column="21"/></name> <argument_list pos:line="155" pos:column="22">(<argument><expr><name><name pos:line="155" pos:column="23">hdr<pos:position pos:line="155" pos:column="26"/></name><operator pos:line="155" pos:column="26">-&gt;<pos:position pos:line="155" pos:column="31"/></operator><name pos:line="155" pos:column="28">content<pos:position pos:line="155" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="155" pos:column="37">0<pos:position pos:line="155" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="40"/></expr_stmt></block></then></if>
  
  <return pos:line="157" pos:column="3">return <expr><name pos:line="157" pos:column="10">r<pos:position pos:line="157" pos:column="11"/></name></expr>;<pos:position pos:line="157" pos:column="12"/></return>
}<pos:position pos:line="158" pos:column="2"/></block></function></unit>

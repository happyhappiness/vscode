<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1302_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">imap_logout<pos:position pos:line="1" pos:column="17"/></name> <parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">IMAP_DATA<pos:position pos:line="1" pos:column="28"/></name><modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type> <name pos:line="1" pos:column="30">idata<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* we set status here to let imap_handle_untagged know we _expect_ to
   * receive a bye response (so it doesn't freak out and close the conn) */</comment>
  <expr_stmt><expr><name><name pos:line="5" pos:column="3">idata<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">-&gt;<pos:position pos:line="5" pos:column="13"/></operator><name pos:line="5" pos:column="10">status<pos:position pos:line="5" pos:column="16"/></name></name> <operator pos:line="5" pos:column="17">=<pos:position pos:line="5" pos:column="18"/></operator> <name pos:line="5" pos:column="19">IMAP_BYE<pos:position pos:line="5" pos:column="27"/></name></expr>;<pos:position pos:line="5" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">imap_cmd_start<pos:position pos:line="6" pos:column="17"/></name> <argument_list pos:line="6" pos:column="18">(<argument><expr><name pos:line="6" pos:column="19">idata<pos:position pos:line="6" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="26">"LOGOUT"<pos:position pos:line="6" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="36"/></expr_stmt>
  <while pos:line="7" pos:column="3">while <condition pos:line="7" pos:column="9">(<expr><call><name pos:line="7" pos:column="10">imap_cmd_step<pos:position pos:line="7" pos:column="23"/></name> <argument_list pos:line="7" pos:column="24">(<argument><expr><name pos:line="7" pos:column="25">idata<pos:position pos:line="7" pos:column="30"/></name></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call> <operator pos:line="7" pos:column="32">==<pos:position pos:line="7" pos:column="34"/></operator> <name pos:line="7" pos:column="35">IMAP_CMD_CONTINUE<pos:position pos:line="7" pos:column="52"/></name></expr>)<pos:position pos:line="7" pos:column="53"/></condition>
    <block type="pseudo"><empty_stmt pos:line="8" pos:column="5">;<pos:position pos:line="8" pos:column="6"/></empty_stmt></block></while>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1317_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">imap_utf7_decode<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier><modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">s<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">Charset<pos:position pos:line="3" pos:column="14"/></name></expr>)<pos:position pos:line="3" pos:column="15"/></condition><then pos:line="3" pos:column="15">
  <block pos:line="4" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">t<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><call><name pos:line="5" pos:column="15">utf7_to_utf8<pos:position pos:line="5" pos:column="27"/></name> <argument_list pos:line="5" pos:column="28">(<argument><expr><operator pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="30">s<pos:position pos:line="5" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="33">strlen<pos:position pos:line="5" pos:column="39"/></name> <argument_list pos:line="5" pos:column="40">(<argument><expr><operator pos:line="5" pos:column="41">*<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="42">s<pos:position pos:line="5" pos:column="43"/></name></expr></argument>)<pos:position pos:line="5" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="46">0<pos:position pos:line="5" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="49">0<pos:position pos:line="5" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="52"/></decl_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">t<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">&amp;&amp;<pos:position pos:line="6" pos:column="21"/></operator> <operator pos:line="6" pos:column="14">!<pos:position pos:line="6" pos:column="15"/></operator><call><name pos:line="6" pos:column="15">mutt_convert_string<pos:position pos:line="6" pos:column="34"/></name> <argument_list pos:line="6" pos:column="35">(<argument><expr><operator pos:line="6" pos:column="36">&amp;<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="37">t<pos:position pos:line="6" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="40">"UTF-8"<pos:position pos:line="6" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="49">Charset<pos:position pos:line="6" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="58">0<pos:position pos:line="6" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="61"/></condition><then pos:line="6" pos:column="61">
    <block pos:line="7" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="8" pos:column="7">safe_free<pos:position pos:line="8" pos:column="16"/></name> <argument_list pos:line="8" pos:column="17">(<argument><expr><operator pos:line="8" pos:column="18">(<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="19">void<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></operator><operator pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></operator><operator pos:line="8" pos:column="26">)<pos:position pos:line="8" pos:column="27"/></operator> <name pos:line="8" pos:column="28">s<pos:position pos:line="8" pos:column="29"/></name></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="9" pos:column="7">*<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">s<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <name pos:line="9" pos:column="12">t<pos:position pos:line="9" pos:column="13"/></name></expr>;<pos:position pos:line="9" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

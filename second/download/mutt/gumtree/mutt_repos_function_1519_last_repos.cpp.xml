<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1519_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">is_from<pos:position pos:line="1" pos:column="12"/></name> <parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><specifier pos:line="1" pos:column="14">const<pos:position pos:line="1" pos:column="19"/></specifier> <name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">s<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">path<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">size_t<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">pathlen<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">time_t<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">tp<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">tm<pos:position pos:line="3" pos:column="12"/></name></name></type> <name pos:line="3" pos:column="13">tm<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">yr<pos:position pos:line="4" pos:column="9"/></name></decl>;<pos:position pos:line="4" pos:column="10"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">path<pos:position pos:line="6" pos:column="11"/></name></expr>)<pos:position pos:line="6" pos:column="12"/></condition><then pos:line="6" pos:column="12">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="7" pos:column="5">*<pos:position pos:line="7" pos:column="6"/></operator><name pos:line="7" pos:column="6">path<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">=<pos:position pos:line="7" pos:column="12"/></operator> <literal type="number" pos:line="7" pos:column="13">0<pos:position pos:line="7" pos:column="14"/></literal></expr>;<pos:position pos:line="7" pos:column="15"/></expr_stmt></block></then></if>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><call><name pos:line="9" pos:column="7">mutt_strncmp<pos:position pos:line="9" pos:column="19"/></name> <argument_list pos:line="9" pos:column="20">(<argument><expr><literal type="string" pos:line="9" pos:column="21">"From "<pos:position pos:line="9" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="30">s<pos:position pos:line="9" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="33">5<pos:position pos:line="9" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call> <operator pos:line="9" pos:column="36">!=<pos:position pos:line="9" pos:column="38"/></operator> <literal type="number" pos:line="9" pos:column="39">0<pos:position pos:line="9" pos:column="40"/></literal></expr>)<pos:position pos:line="9" pos:column="41"/></condition><then pos:line="9" pos:column="41">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><literal type="number" pos:line="10" pos:column="12">0<pos:position pos:line="10" pos:column="13"/></literal></expr>;<pos:position pos:line="10" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="12" pos:column="3">s<pos:position pos:line="12" pos:column="4"/></name> <operator pos:line="12" pos:column="5">=<pos:position pos:line="12" pos:column="6"/></operator> <call><name pos:line="12" pos:column="7">next_word<pos:position pos:line="12" pos:column="16"/></name> <argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">s<pos:position pos:line="12" pos:column="19"/></name></expr></argument>)<pos:position pos:line="12" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt> <comment type="block" pos:line="12" pos:column="22">/* skip over the From part. */</comment>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><operator pos:line="13" pos:column="7">!<pos:position pos:line="13" pos:column="8"/></operator><operator pos:line="13" pos:column="8">*<pos:position pos:line="13" pos:column="9"/></operator><name pos:line="13" pos:column="9">s<pos:position pos:line="13" pos:column="10"/></name></expr>)<pos:position pos:line="13" pos:column="11"/></condition><then pos:line="13" pos:column="11">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><literal type="number" pos:line="14" pos:column="12">0<pos:position pos:line="14" pos:column="13"/></literal></expr>;<pos:position pos:line="14" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">dprint<pos:position pos:line="16" pos:column="9"/></name> <argument_list pos:line="16" pos:column="10">(<argument><expr><literal type="number" pos:line="16" pos:column="11">3<pos:position pos:line="16" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="14">(<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">debugfile<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">,<pos:position pos:line="16" pos:column="25"/></operator> <literal type="string" pos:line="16" pos:column="26">"\nis_from(): parsing: %s"<pos:position pos:line="16" pos:column="52"/></literal><operator pos:line="16" pos:column="52">,<pos:position pos:line="16" pos:column="53"/></operator> <name pos:line="16" pos:column="54">s<pos:position pos:line="16" pos:column="55"/></name><operator pos:line="16" pos:column="55">)<pos:position pos:line="16" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="16" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="58"/></expr_stmt>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">!<pos:position pos:line="18" pos:column="8"/></operator><call><name pos:line="18" pos:column="8">is_day_name<pos:position pos:line="18" pos:column="19"/></name> <argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">s<pos:position pos:line="18" pos:column="22"/></name></expr></argument>)<pos:position pos:line="18" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="24"/></condition><then pos:line="18" pos:column="24">
  <block pos:line="19" pos:column="3">{
    <decl_stmt><decl><type><specifier pos:line="20" pos:column="5">const<pos:position pos:line="20" pos:column="10"/></specifier> <name pos:line="20" pos:column="11">char<pos:position pos:line="20" pos:column="15"/></name> <modifier pos:line="20" pos:column="16">*<pos:position pos:line="20" pos:column="17"/></modifier></type><name pos:line="20" pos:column="17">p<pos:position pos:line="20" pos:column="18"/></name></decl>;<pos:position pos:line="20" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">size_t<pos:position pos:line="21" pos:column="11"/></name></type> <name pos:line="21" pos:column="12">len<pos:position pos:line="21" pos:column="15"/></name></decl>;<pos:position pos:line="21" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">short<pos:position pos:line="22" pos:column="10"/></name></type> <name pos:line="22" pos:column="11">q<pos:position pos:line="22" pos:column="12"/></name> <init pos:line="22" pos:column="13">= <expr><literal type="number" pos:line="22" pos:column="15">0<pos:position pos:line="22" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="17"/></decl_stmt>

    <for pos:line="24" pos:column="5">for <control pos:line="24" pos:column="9">(<init><expr><name pos:line="24" pos:column="10">p<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <name pos:line="24" pos:column="14">s<pos:position pos:line="24" pos:column="15"/></name></expr>;<pos:position pos:line="24" pos:column="16"/></init> <condition><expr><operator pos:line="24" pos:column="17">*<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">p<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">&amp;&amp;<pos:position pos:line="24" pos:column="30"/></operator> <operator pos:line="24" pos:column="23">(<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="24">q<pos:position pos:line="24" pos:column="25"/></name> <operator pos:line="24" pos:column="26">||<pos:position pos:line="24" pos:column="28"/></operator> <operator pos:line="24" pos:column="29">!<pos:position pos:line="24" pos:column="30"/></operator><call><name pos:line="24" pos:column="30">ISSPACE<pos:position pos:line="24" pos:column="37"/></name> <argument_list pos:line="24" pos:column="38">(<argument><expr><operator pos:line="24" pos:column="39">*<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="40">p<pos:position pos:line="24" pos:column="41"/></name></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call><operator pos:line="24" pos:column="42">)<pos:position pos:line="24" pos:column="43"/></operator></expr>;<pos:position pos:line="24" pos:column="44"/></condition> <incr><expr><name pos:line="24" pos:column="45">p<pos:position pos:line="24" pos:column="46"/></name><operator pos:line="24" pos:column="46">++<pos:position pos:line="24" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="49"/></control>
    <block pos:line="25" pos:column="5">{
      <if pos:line="26" pos:column="7">if <condition pos:line="26" pos:column="10">(<expr><operator pos:line="26" pos:column="11">*<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="12">p<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">==<pos:position pos:line="26" pos:column="16"/></operator> <literal type="char" pos:line="26" pos:column="17">'\\'<pos:position pos:line="26" pos:column="21"/></literal></expr>)<pos:position pos:line="26" pos:column="22"/></condition><then pos:line="26" pos:column="22">
      <block pos:line="27" pos:column="7">{
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">*<pos:position pos:line="28" pos:column="14"/></operator><operator pos:line="28" pos:column="14">++<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="16">p<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">==<pos:position pos:line="28" pos:column="20"/></operator> <literal type="char" pos:line="28" pos:column="21">'\0'<pos:position pos:line="28" pos:column="25"/></literal></expr>)<pos:position pos:line="28" pos:column="26"/></condition><then pos:line="28" pos:column="26"> 
	  <block type="pseudo"><return pos:line="29" pos:column="11">return <expr><literal type="number" pos:line="29" pos:column="18">0<pos:position pos:line="29" pos:column="19"/></literal></expr>;<pos:position pos:line="29" pos:column="20"/></return></block></then></if>
      }<pos:position pos:line="30" pos:column="8"/></block></then>
      <elseif pos:line="31" pos:column="7">else <if pos:line="31" pos:column="12">if <condition pos:line="31" pos:column="15">(<expr><operator pos:line="31" pos:column="16">*<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="17">p<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">==<pos:position pos:line="31" pos:column="21"/></operator> <literal type="char" pos:line="31" pos:column="22">'"'<pos:position pos:line="31" pos:column="25"/></literal></expr>)<pos:position pos:line="31" pos:column="26"/></condition><then pos:line="31" pos:column="26">
      <block pos:line="32" pos:column="7">{
	<expr_stmt><expr><name pos:line="33" pos:column="9">q<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">=<pos:position pos:line="33" pos:column="12"/></operator> <operator pos:line="33" pos:column="13">!<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">q<pos:position pos:line="33" pos:column="15"/></name></expr>;<pos:position pos:line="33" pos:column="16"/></expr_stmt>
      }<pos:position pos:line="34" pos:column="8"/></block></then></if></elseif></if>
    }<pos:position pos:line="35" pos:column="6"/></block></for>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">q<pos:position pos:line="37" pos:column="10"/></name> <operator pos:line="37" pos:column="11">||<pos:position pos:line="37" pos:column="13"/></operator> <operator pos:line="37" pos:column="14">!<pos:position pos:line="37" pos:column="15"/></operator><operator pos:line="37" pos:column="15">*<pos:position pos:line="37" pos:column="16"/></operator><name pos:line="37" pos:column="16">p<pos:position pos:line="37" pos:column="17"/></name></expr>)<pos:position pos:line="37" pos:column="18"/></condition><then pos:line="37" pos:column="18"> <block type="pseudo"><return pos:line="37" pos:column="19">return <expr><literal type="number" pos:line="37" pos:column="26">0<pos:position pos:line="37" pos:column="27"/></literal></expr>;<pos:position pos:line="37" pos:column="28"/></return></block></then></if>

    <comment type="block" pos:line="39" pos:column="5">/* pipermail archives have the return_path obscured such as "me at mutt.org" */</comment>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><call><name pos:line="40" pos:column="9">ascii_strncasecmp<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><name pos:line="40" pos:column="27">p<pos:position pos:line="40" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="30">" at "<pos:position pos:line="40" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="38">4<pos:position pos:line="40" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="40"/></argument_list></call> <operator pos:line="40" pos:column="41">==<pos:position pos:line="40" pos:column="43"/></operator> <literal type="number" pos:line="40" pos:column="44">0<pos:position pos:line="40" pos:column="45"/></literal></expr>)<pos:position pos:line="40" pos:column="46"/></condition><then pos:line="40" pos:column="46">
    <block pos:line="41" pos:column="5">{
      <expr_stmt><expr><name pos:line="42" pos:column="7">p<pos:position pos:line="42" pos:column="8"/></name> <operator pos:line="42" pos:column="9">=<pos:position pos:line="42" pos:column="10"/></operator> <call><name pos:line="42" pos:column="11">strchr<pos:position pos:line="42" pos:column="17"/></name><argument_list pos:line="42" pos:column="17">(<argument><expr><name pos:line="42" pos:column="18">p<pos:position pos:line="42" pos:column="19"/></name> <operator pos:line="42" pos:column="20">+<pos:position pos:line="42" pos:column="21"/></operator> <literal type="number" pos:line="42" pos:column="22">4<pos:position pos:line="42" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="42" pos:column="25">' '<pos:position pos:line="42" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="30"/></expr_stmt>
      <if pos:line="43" pos:column="7">if <condition pos:line="43" pos:column="10">(<expr><operator pos:line="43" pos:column="11">!<pos:position pos:line="43" pos:column="12"/></operator><name pos:line="43" pos:column="12">p<pos:position pos:line="43" pos:column="13"/></name></expr>)<pos:position pos:line="43" pos:column="14"/></condition><then pos:line="43" pos:column="14">
      <block pos:line="44" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="45" pos:column="9">dprint<pos:position pos:line="45" pos:column="15"/></name> <argument_list pos:line="45" pos:column="16">(<argument><expr><literal type="number" pos:line="45" pos:column="17">1<pos:position pos:line="45" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="45" pos:column="20">(<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="21">debugfile<pos:position pos:line="45" pos:column="30"/></name><operator pos:line="45" pos:column="30">,<pos:position pos:line="45" pos:column="31"/></operator> <literal type="string" pos:line="45" pos:column="32">"is_from(): error parsing what appears to be a pipermail-style obscured return_path: %s\n"<pos:position pos:line="45" pos:column="122"/></literal><operator pos:line="45" pos:column="122">,<pos:position pos:line="45" pos:column="123"/></operator> <name pos:line="45" pos:column="124">s<pos:position pos:line="45" pos:column="125"/></name><operator pos:line="45" pos:column="125">)<pos:position pos:line="45" pos:column="126"/></operator></expr></argument>)<pos:position pos:line="45" pos:column="127"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="128"/></expr_stmt>
	<return pos:line="46" pos:column="9">return <expr><literal type="number" pos:line="46" pos:column="16">0<pos:position pos:line="46" pos:column="17"/></literal></expr>;<pos:position pos:line="46" pos:column="18"/></return>
      }<pos:position pos:line="47" pos:column="8"/></block></then></if>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>
    
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name pos:line="50" pos:column="9">path<pos:position pos:line="50" pos:column="13"/></name></expr>)<pos:position pos:line="50" pos:column="14"/></condition><then pos:line="50" pos:column="14">
    <block pos:line="51" pos:column="5">{
      <expr_stmt><expr><name pos:line="52" pos:column="7">len<pos:position pos:line="52" pos:column="10"/></name> <operator pos:line="52" pos:column="11">=<pos:position pos:line="52" pos:column="12"/></operator> <call pos:line="52" pos:column="13">(<name pos:line="52" pos:column="14">size_t<pos:position pos:line="52" pos:column="20"/></name>) <argument_list pos:line="52" pos:column="22">(<argument><expr><name pos:line="52" pos:column="23">p<pos:position pos:line="52" pos:column="24"/></name> <operator pos:line="52" pos:column="25">-<pos:position pos:line="52" pos:column="26"/></operator> <name pos:line="52" pos:column="27">s<pos:position pos:line="52" pos:column="28"/></name></expr></argument>)<pos:position pos:line="52" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="30"/></expr_stmt>
      <if pos:line="53" pos:column="7">if <condition pos:line="53" pos:column="10">(<expr><name pos:line="53" pos:column="11">len<pos:position pos:line="53" pos:column="14"/></name> <operator pos:line="53" pos:column="15">+<pos:position pos:line="53" pos:column="16"/></operator> <literal type="number" pos:line="53" pos:column="17">1<pos:position pos:line="53" pos:column="18"/></literal> <operator pos:line="53" pos:column="19">&gt;<pos:position pos:line="53" pos:column="23"/></operator> <name pos:line="53" pos:column="21">pathlen<pos:position pos:line="53" pos:column="28"/></name></expr>)<pos:position pos:line="53" pos:column="29"/></condition><then pos:line="53" pos:column="29">
	<block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="9">len<pos:position pos:line="54" pos:column="12"/></name> <operator pos:line="54" pos:column="13">=<pos:position pos:line="54" pos:column="14"/></operator> <name pos:line="54" pos:column="15">pathlen<pos:position pos:line="54" pos:column="22"/></name> <operator pos:line="54" pos:column="23">-<pos:position pos:line="54" pos:column="24"/></operator> <literal type="number" pos:line="54" pos:column="25">1<pos:position pos:line="54" pos:column="26"/></literal></expr>;<pos:position pos:line="54" pos:column="27"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="55" pos:column="7">memcpy<pos:position pos:line="55" pos:column="13"/></name> <argument_list pos:line="55" pos:column="14">(<argument><expr><name pos:line="55" pos:column="15">path<pos:position pos:line="55" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="21">s<pos:position pos:line="55" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="24">len<pos:position pos:line="55" pos:column="27"/></name></expr></argument>)<pos:position pos:line="55" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="56" pos:column="7">path<pos:position pos:line="56" pos:column="11"/></name><index pos:line="56" pos:column="11">[<expr><name pos:line="56" pos:column="12">len<pos:position pos:line="56" pos:column="15"/></name></expr>]<pos:position pos:line="56" pos:column="16"/></index></name> <operator pos:line="56" pos:column="17">=<pos:position pos:line="56" pos:column="18"/></operator> <literal type="number" pos:line="56" pos:column="19">0<pos:position pos:line="56" pos:column="20"/></literal></expr>;<pos:position pos:line="56" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="57" pos:column="7">dprint<pos:position pos:line="57" pos:column="13"/></name> <argument_list pos:line="57" pos:column="14">(<argument><expr><literal type="number" pos:line="57" pos:column="15">3<pos:position pos:line="57" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="57" pos:column="18">(<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="19">debugfile<pos:position pos:line="57" pos:column="28"/></name><operator pos:line="57" pos:column="28">,<pos:position pos:line="57" pos:column="29"/></operator> <literal type="string" pos:line="57" pos:column="30">"is_from(): got return path: %s\n"<pos:position pos:line="57" pos:column="64"/></literal><operator pos:line="57" pos:column="64">,<pos:position pos:line="57" pos:column="65"/></operator> <name pos:line="57" pos:column="66">path<pos:position pos:line="57" pos:column="70"/></name><operator pos:line="57" pos:column="70">)<pos:position pos:line="57" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="57" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name pos:line="60" pos:column="5">s<pos:position pos:line="60" pos:column="6"/></name> <operator pos:line="60" pos:column="7">=<pos:position pos:line="60" pos:column="8"/></operator> <name pos:line="60" pos:column="9">p<pos:position pos:line="60" pos:column="10"/></name> <operator pos:line="60" pos:column="11">+<pos:position pos:line="60" pos:column="12"/></operator> <literal type="number" pos:line="60" pos:column="13">1<pos:position pos:line="60" pos:column="14"/></literal></expr>;<pos:position pos:line="60" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">SKIPWS<pos:position pos:line="61" pos:column="11"/></name> <argument_list pos:line="61" pos:column="12">(<argument><expr><name pos:line="61" pos:column="13">s<pos:position pos:line="61" pos:column="14"/></name></expr></argument>)<pos:position pos:line="61" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="16"/></expr_stmt>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><operator pos:line="62" pos:column="9">!<pos:position pos:line="62" pos:column="10"/></operator><operator pos:line="62" pos:column="10">*<pos:position pos:line="62" pos:column="11"/></operator><name pos:line="62" pos:column="11">s<pos:position pos:line="62" pos:column="12"/></name></expr>)<pos:position pos:line="62" pos:column="13"/></condition><then pos:line="62" pos:column="13">
      <block type="pseudo"><return pos:line="63" pos:column="7">return <expr><literal type="number" pos:line="63" pos:column="14">0<pos:position pos:line="63" pos:column="15"/></literal></expr>;<pos:position pos:line="63" pos:column="16"/></return></block></then></if>

    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><operator pos:line="65" pos:column="9">!<pos:position pos:line="65" pos:column="10"/></operator><call><name pos:line="65" pos:column="10">is_day_name<pos:position pos:line="65" pos:column="21"/></name> <argument_list pos:line="65" pos:column="22">(<argument><expr><name pos:line="65" pos:column="23">s<pos:position pos:line="65" pos:column="24"/></name></expr></argument>)<pos:position pos:line="65" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="26"/></condition><then pos:line="65" pos:column="26">
    <block pos:line="66" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="67" pos:column="7">dprint<pos:position pos:line="67" pos:column="13"/></name><argument_list pos:line="67" pos:column="13">(<argument><expr><literal type="number" pos:line="67" pos:column="14">1<pos:position pos:line="67" pos:column="15"/></literal></expr></argument>, <argument><expr><operator pos:line="67" pos:column="17">(<pos:position pos:line="67" pos:column="18"/></operator><name pos:line="67" pos:column="18">debugfile<pos:position pos:line="67" pos:column="27"/></name><operator pos:line="67" pos:column="27">,<pos:position pos:line="67" pos:column="28"/></operator> <literal type="string" pos:line="67" pos:column="29">"is_from():  expected weekday, got: %s\n"<pos:position pos:line="67" pos:column="70"/></literal><operator pos:line="67" pos:column="70">,<pos:position pos:line="67" pos:column="71"/></operator> <name pos:line="67" pos:column="72">s<pos:position pos:line="67" pos:column="73"/></name><operator pos:line="67" pos:column="73">)<pos:position pos:line="67" pos:column="74"/></operator></expr></argument>)<pos:position pos:line="67" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="76"/></expr_stmt>
      <return pos:line="68" pos:column="7">return <expr><literal type="number" pos:line="68" pos:column="14">0<pos:position pos:line="68" pos:column="15"/></literal></expr>;<pos:position pos:line="68" pos:column="16"/></return>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>
  }<pos:position pos:line="70" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="72" pos:column="3">s<pos:position pos:line="72" pos:column="4"/></name> <operator pos:line="72" pos:column="5">=<pos:position pos:line="72" pos:column="6"/></operator> <call><name pos:line="72" pos:column="7">next_word<pos:position pos:line="72" pos:column="16"/></name> <argument_list pos:line="72" pos:column="17">(<argument><expr><name pos:line="72" pos:column="18">s<pos:position pos:line="72" pos:column="19"/></name></expr></argument>)<pos:position pos:line="72" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="21"/></expr_stmt>
  <if pos:line="73" pos:column="3">if <condition pos:line="73" pos:column="6">(<expr><operator pos:line="73" pos:column="7">!<pos:position pos:line="73" pos:column="8"/></operator><operator pos:line="73" pos:column="8">*<pos:position pos:line="73" pos:column="9"/></operator><name pos:line="73" pos:column="9">s<pos:position pos:line="73" pos:column="10"/></name></expr>)<pos:position pos:line="73" pos:column="11"/></condition><then pos:line="73" pos:column="11"> <block type="pseudo"><return pos:line="73" pos:column="12">return <expr><literal type="number" pos:line="73" pos:column="19">0<pos:position pos:line="73" pos:column="20"/></literal></expr>;<pos:position pos:line="73" pos:column="21"/></return></block></then></if>

  <comment type="block" pos:line="75" pos:column="3">/* do a quick check to make sure that this isn't really the day of the week.
   * this could happen when receiving mail from a local user whose login name
   * is the same as a three-letter abbreviation of the day of the week.
   */</comment>
  <if pos:line="79" pos:column="3">if <condition pos:line="79" pos:column="6">(<expr><call><name pos:line="79" pos:column="7">is_day_name<pos:position pos:line="79" pos:column="18"/></name> <argument_list pos:line="79" pos:column="19">(<argument><expr><name pos:line="79" pos:column="20">s<pos:position pos:line="79" pos:column="21"/></name></expr></argument>)<pos:position pos:line="79" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="79" pos:column="23"/></condition><then pos:line="79" pos:column="23">
  <block pos:line="80" pos:column="3">{
    <expr_stmt><expr><name pos:line="81" pos:column="5">s<pos:position pos:line="81" pos:column="6"/></name> <operator pos:line="81" pos:column="7">=<pos:position pos:line="81" pos:column="8"/></operator> <call><name pos:line="81" pos:column="9">next_word<pos:position pos:line="81" pos:column="18"/></name> <argument_list pos:line="81" pos:column="19">(<argument><expr><name pos:line="81" pos:column="20">s<pos:position pos:line="81" pos:column="21"/></name></expr></argument>)<pos:position pos:line="81" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="23"/></expr_stmt>
    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><operator pos:line="82" pos:column="9">!<pos:position pos:line="82" pos:column="10"/></operator><operator pos:line="82" pos:column="10">*<pos:position pos:line="82" pos:column="11"/></operator><name pos:line="82" pos:column="11">s<pos:position pos:line="82" pos:column="12"/></name></expr>)<pos:position pos:line="82" pos:column="13"/></condition><then pos:line="82" pos:column="13"> <block type="pseudo"><return pos:line="82" pos:column="14">return <expr><literal type="number" pos:line="82" pos:column="21">0<pos:position pos:line="82" pos:column="22"/></literal></expr>;<pos:position pos:line="82" pos:column="23"/></return></block></then></if>
  }<pos:position pos:line="83" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="85" pos:column="3">/* now we should be on the month. */</comment>
  <if pos:line="86" pos:column="3">if <condition pos:line="86" pos:column="6">(<expr><operator pos:line="86" pos:column="7">(<pos:position pos:line="86" pos:column="8"/></operator><name><name pos:line="86" pos:column="8">tm<pos:position pos:line="86" pos:column="10"/></name><operator pos:line="86" pos:column="10">.<pos:position pos:line="86" pos:column="11"/></operator><name pos:line="86" pos:column="11">tm_mon<pos:position pos:line="86" pos:column="17"/></name></name> <operator pos:line="86" pos:column="18">=<pos:position pos:line="86" pos:column="19"/></operator> <call><name pos:line="86" pos:column="20">mutt_check_month<pos:position pos:line="86" pos:column="36"/></name> <argument_list pos:line="86" pos:column="37">(<argument><expr><name pos:line="86" pos:column="38">s<pos:position pos:line="86" pos:column="39"/></name></expr></argument>)<pos:position pos:line="86" pos:column="40"/></argument_list></call><operator pos:line="86" pos:column="40">)<pos:position pos:line="86" pos:column="41"/></operator> <operator pos:line="86" pos:column="42">&lt;<pos:position pos:line="86" pos:column="46"/></operator> <literal type="number" pos:line="86" pos:column="44">0<pos:position pos:line="86" pos:column="45"/></literal></expr>)<pos:position pos:line="86" pos:column="46"/></condition><then pos:line="86" pos:column="46"> <block type="pseudo"><return pos:line="86" pos:column="47">return <expr><literal type="number" pos:line="86" pos:column="54">0<pos:position pos:line="86" pos:column="55"/></literal></expr>;<pos:position pos:line="86" pos:column="56"/></return></block></then></if>

  <comment type="block" pos:line="88" pos:column="3">/* day */</comment>
  <expr_stmt><expr><name pos:line="89" pos:column="3">s<pos:position pos:line="89" pos:column="4"/></name> <operator pos:line="89" pos:column="5">=<pos:position pos:line="89" pos:column="6"/></operator> <call><name pos:line="89" pos:column="7">next_word<pos:position pos:line="89" pos:column="16"/></name> <argument_list pos:line="89" pos:column="17">(<argument><expr><name pos:line="89" pos:column="18">s<pos:position pos:line="89" pos:column="19"/></name></expr></argument>)<pos:position pos:line="89" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="21"/></expr_stmt>
  <if pos:line="90" pos:column="3">if <condition pos:line="90" pos:column="6">(<expr><operator pos:line="90" pos:column="7">!<pos:position pos:line="90" pos:column="8"/></operator><operator pos:line="90" pos:column="8">*<pos:position pos:line="90" pos:column="9"/></operator><name pos:line="90" pos:column="9">s<pos:position pos:line="90" pos:column="10"/></name></expr>)<pos:position pos:line="90" pos:column="11"/></condition><then pos:line="90" pos:column="11"> <block type="pseudo"><return pos:line="90" pos:column="12">return <expr><literal type="number" pos:line="90" pos:column="19">0<pos:position pos:line="90" pos:column="20"/></literal></expr>;<pos:position pos:line="90" pos:column="21"/></return></block></then></if>
  <if pos:line="91" pos:column="3">if <condition pos:line="91" pos:column="6">(<expr><call><name pos:line="91" pos:column="7">sscanf<pos:position pos:line="91" pos:column="13"/></name> <argument_list pos:line="91" pos:column="14">(<argument><expr><name pos:line="91" pos:column="15">s<pos:position pos:line="91" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="18">"%d"<pos:position pos:line="91" pos:column="22"/></literal></expr></argument>, <argument><expr><operator pos:line="91" pos:column="24">&amp;<pos:position pos:line="91" pos:column="29"/></operator><name><name pos:line="91" pos:column="25">tm<pos:position pos:line="91" pos:column="27"/></name><operator pos:line="91" pos:column="27">.<pos:position pos:line="91" pos:column="28"/></operator><name pos:line="91" pos:column="28">tm_mday<pos:position pos:line="91" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="36"/></argument_list></call> <operator pos:line="91" pos:column="37">!=<pos:position pos:line="91" pos:column="39"/></operator> <literal type="number" pos:line="91" pos:column="40">1<pos:position pos:line="91" pos:column="41"/></literal></expr>)<pos:position pos:line="91" pos:column="42"/></condition><then pos:line="91" pos:column="42"> <block type="pseudo"><return pos:line="91" pos:column="43">return <expr><literal type="number" pos:line="91" pos:column="50">0<pos:position pos:line="91" pos:column="51"/></literal></expr>;<pos:position pos:line="91" pos:column="52"/></return></block></then></if>

  <comment type="block" pos:line="93" pos:column="3">/* time */</comment>
  <expr_stmt><expr><name pos:line="94" pos:column="3">s<pos:position pos:line="94" pos:column="4"/></name> <operator pos:line="94" pos:column="5">=<pos:position pos:line="94" pos:column="6"/></operator> <call><name pos:line="94" pos:column="7">next_word<pos:position pos:line="94" pos:column="16"/></name> <argument_list pos:line="94" pos:column="17">(<argument><expr><name pos:line="94" pos:column="18">s<pos:position pos:line="94" pos:column="19"/></name></expr></argument>)<pos:position pos:line="94" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="21"/></expr_stmt>
  <if pos:line="95" pos:column="3">if <condition pos:line="95" pos:column="6">(<expr><operator pos:line="95" pos:column="7">!<pos:position pos:line="95" pos:column="8"/></operator><operator pos:line="95" pos:column="8">*<pos:position pos:line="95" pos:column="9"/></operator><name pos:line="95" pos:column="9">s<pos:position pos:line="95" pos:column="10"/></name></expr>)<pos:position pos:line="95" pos:column="11"/></condition><then pos:line="95" pos:column="11"> <block type="pseudo"><return pos:line="95" pos:column="12">return <expr><literal type="number" pos:line="95" pos:column="19">0<pos:position pos:line="95" pos:column="20"/></literal></expr>;<pos:position pos:line="95" pos:column="21"/></return></block></then></if>

  <comment type="block" pos:line="97" pos:column="3">/* Accept either HH:MM or HH:MM:SS */</comment>
  <if pos:line="98" pos:column="3">if <condition pos:line="98" pos:column="6">(<expr><call><name pos:line="98" pos:column="7">sscanf<pos:position pos:line="98" pos:column="13"/></name> <argument_list pos:line="98" pos:column="14">(<argument><expr><name pos:line="98" pos:column="15">s<pos:position pos:line="98" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="18">"%d:%d:%d"<pos:position pos:line="98" pos:column="28"/></literal></expr></argument>, <argument><expr><operator pos:line="98" pos:column="30">&amp;<pos:position pos:line="98" pos:column="35"/></operator><name><name pos:line="98" pos:column="31">tm<pos:position pos:line="98" pos:column="33"/></name><operator pos:line="98" pos:column="33">.<pos:position pos:line="98" pos:column="34"/></operator><name pos:line="98" pos:column="34">tm_hour<pos:position pos:line="98" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="98" pos:column="43">&amp;<pos:position pos:line="98" pos:column="48"/></operator><name><name pos:line="98" pos:column="44">tm<pos:position pos:line="98" pos:column="46"/></name><operator pos:line="98" pos:column="46">.<pos:position pos:line="98" pos:column="47"/></operator><name pos:line="98" pos:column="47">tm_min<pos:position pos:line="98" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="98" pos:column="55">&amp;<pos:position pos:line="98" pos:column="60"/></operator><name><name pos:line="98" pos:column="56">tm<pos:position pos:line="98" pos:column="58"/></name><operator pos:line="98" pos:column="58">.<pos:position pos:line="98" pos:column="59"/></operator><name pos:line="98" pos:column="59">tm_sec<pos:position pos:line="98" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="66"/></argument_list></call> <operator pos:line="98" pos:column="67">==<pos:position pos:line="98" pos:column="69"/></operator> <literal type="number" pos:line="98" pos:column="70">3<pos:position pos:line="98" pos:column="71"/></literal></expr>)<pos:position pos:line="98" pos:column="72"/></condition><then><block type="pseudo"><empty_stmt pos:line="98" pos:column="72">;<pos:position pos:line="98" pos:column="73"/></empty_stmt></block></then>
  <elseif pos:line="99" pos:column="3">else <if pos:line="99" pos:column="8">if <condition pos:line="99" pos:column="11">(<expr><call><name pos:line="99" pos:column="12">sscanf<pos:position pos:line="99" pos:column="18"/></name> <argument_list pos:line="99" pos:column="19">(<argument><expr><name pos:line="99" pos:column="20">s<pos:position pos:line="99" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="23">"%d:%d"<pos:position pos:line="99" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="99" pos:column="32">&amp;<pos:position pos:line="99" pos:column="37"/></operator><name><name pos:line="99" pos:column="33">tm<pos:position pos:line="99" pos:column="35"/></name><operator pos:line="99" pos:column="35">.<pos:position pos:line="99" pos:column="36"/></operator><name pos:line="99" pos:column="36">tm_hour<pos:position pos:line="99" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="99" pos:column="45">&amp;<pos:position pos:line="99" pos:column="50"/></operator><name><name pos:line="99" pos:column="46">tm<pos:position pos:line="99" pos:column="48"/></name><operator pos:line="99" pos:column="48">.<pos:position pos:line="99" pos:column="49"/></operator><name pos:line="99" pos:column="49">tm_min<pos:position pos:line="99" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="56"/></argument_list></call> <operator pos:line="99" pos:column="57">==<pos:position pos:line="99" pos:column="59"/></operator> <literal type="number" pos:line="99" pos:column="60">2<pos:position pos:line="99" pos:column="61"/></literal></expr>)<pos:position pos:line="99" pos:column="62"/></condition><then pos:line="99" pos:column="62">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="100" pos:column="5">tm<pos:position pos:line="100" pos:column="7"/></name><operator pos:line="100" pos:column="7">.<pos:position pos:line="100" pos:column="8"/></operator><name pos:line="100" pos:column="8">tm_sec<pos:position pos:line="100" pos:column="14"/></name></name> <operator pos:line="100" pos:column="15">=<pos:position pos:line="100" pos:column="16"/></operator> <literal type="number" pos:line="100" pos:column="17">0<pos:position pos:line="100" pos:column="18"/></literal></expr>;<pos:position pos:line="100" pos:column="19"/></expr_stmt></block></then></if></elseif>
  <else pos:line="101" pos:column="3">else
    <block type="pseudo"><return pos:line="102" pos:column="5">return <expr><literal type="number" pos:line="102" pos:column="12">0<pos:position pos:line="102" pos:column="13"/></literal></expr>;<pos:position pos:line="102" pos:column="14"/></return></block></else></if>

  <expr_stmt><expr><name pos:line="104" pos:column="3">s<pos:position pos:line="104" pos:column="4"/></name> <operator pos:line="104" pos:column="5">=<pos:position pos:line="104" pos:column="6"/></operator> <call><name pos:line="104" pos:column="7">next_word<pos:position pos:line="104" pos:column="16"/></name> <argument_list pos:line="104" pos:column="17">(<argument><expr><name pos:line="104" pos:column="18">s<pos:position pos:line="104" pos:column="19"/></name></expr></argument>)<pos:position pos:line="104" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="21"/></expr_stmt>
  <if pos:line="105" pos:column="3">if <condition pos:line="105" pos:column="6">(<expr><operator pos:line="105" pos:column="7">!<pos:position pos:line="105" pos:column="8"/></operator><operator pos:line="105" pos:column="8">*<pos:position pos:line="105" pos:column="9"/></operator><name pos:line="105" pos:column="9">s<pos:position pos:line="105" pos:column="10"/></name></expr>)<pos:position pos:line="105" pos:column="11"/></condition><then pos:line="105" pos:column="11"> <block type="pseudo"><return pos:line="105" pos:column="12">return <expr><literal type="number" pos:line="105" pos:column="19">0<pos:position pos:line="105" pos:column="20"/></literal></expr>;<pos:position pos:line="105" pos:column="21"/></return></block></then></if>

  <comment type="block" pos:line="107" pos:column="3">/* timezone? */</comment>
  <if pos:line="108" pos:column="3">if <condition pos:line="108" pos:column="6">(<expr><call><name pos:line="108" pos:column="7">isalpha<pos:position pos:line="108" pos:column="14"/></name> <argument_list pos:line="108" pos:column="15">(<argument><expr><operator pos:line="108" pos:column="16">(<pos:position pos:line="108" pos:column="17"/></operator><name pos:line="108" pos:column="17">unsigned<pos:position pos:line="108" pos:column="25"/></name> <name pos:line="108" pos:column="26">char<pos:position pos:line="108" pos:column="30"/></name><operator pos:line="108" pos:column="30">)<pos:position pos:line="108" pos:column="31"/></operator> <operator pos:line="108" pos:column="32">*<pos:position pos:line="108" pos:column="33"/></operator><name pos:line="108" pos:column="33">s<pos:position pos:line="108" pos:column="34"/></name></expr></argument>)<pos:position pos:line="108" pos:column="35"/></argument_list></call> <operator pos:line="108" pos:column="36">||<pos:position pos:line="108" pos:column="38"/></operator> <operator pos:line="108" pos:column="39">*<pos:position pos:line="108" pos:column="40"/></operator><name pos:line="108" pos:column="40">s<pos:position pos:line="108" pos:column="41"/></name> <operator pos:line="108" pos:column="42">==<pos:position pos:line="108" pos:column="44"/></operator> <literal type="char" pos:line="108" pos:column="45">'+'<pos:position pos:line="108" pos:column="48"/></literal> <operator pos:line="108" pos:column="49">||<pos:position pos:line="108" pos:column="51"/></operator> <operator pos:line="108" pos:column="52">*<pos:position pos:line="108" pos:column="53"/></operator><name pos:line="108" pos:column="53">s<pos:position pos:line="108" pos:column="54"/></name> <operator pos:line="108" pos:column="55">==<pos:position pos:line="108" pos:column="57"/></operator> <literal type="char" pos:line="108" pos:column="58">'-'<pos:position pos:line="108" pos:column="61"/></literal></expr>)<pos:position pos:line="108" pos:column="62"/></condition><then pos:line="108" pos:column="62">
  <block pos:line="109" pos:column="3">{
    <expr_stmt><expr><name pos:line="110" pos:column="5">s<pos:position pos:line="110" pos:column="6"/></name> <operator pos:line="110" pos:column="7">=<pos:position pos:line="110" pos:column="8"/></operator> <call><name pos:line="110" pos:column="9">next_word<pos:position pos:line="110" pos:column="18"/></name> <argument_list pos:line="110" pos:column="19">(<argument><expr><name pos:line="110" pos:column="20">s<pos:position pos:line="110" pos:column="21"/></name></expr></argument>)<pos:position pos:line="110" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="23"/></expr_stmt>
    <if pos:line="111" pos:column="5">if <condition pos:line="111" pos:column="8">(<expr><operator pos:line="111" pos:column="9">!<pos:position pos:line="111" pos:column="10"/></operator><operator pos:line="111" pos:column="10">*<pos:position pos:line="111" pos:column="11"/></operator><name pos:line="111" pos:column="11">s<pos:position pos:line="111" pos:column="12"/></name></expr>)<pos:position pos:line="111" pos:column="13"/></condition><then pos:line="111" pos:column="13"> <block type="pseudo"><return pos:line="111" pos:column="14">return <expr><literal type="number" pos:line="111" pos:column="21">0<pos:position pos:line="111" pos:column="22"/></literal></expr>;<pos:position pos:line="111" pos:column="23"/></return></block></then></if>

    <comment type="block" pos:line="113" pos:column="5">/*
     * some places have two timezone fields after the time, e.g.
     *      From xxxx@yyyyyyy.fr Wed Aug  2 00:39:12 MET DST 1995
     */</comment>
    <if pos:line="117" pos:column="5">if <condition pos:line="117" pos:column="8">(<expr><call><name pos:line="117" pos:column="9">isalpha<pos:position pos:line="117" pos:column="16"/></name> <argument_list pos:line="117" pos:column="17">(<argument><expr><operator pos:line="117" pos:column="18">(<pos:position pos:line="117" pos:column="19"/></operator><name pos:line="117" pos:column="19">unsigned<pos:position pos:line="117" pos:column="27"/></name> <name pos:line="117" pos:column="28">char<pos:position pos:line="117" pos:column="32"/></name><operator pos:line="117" pos:column="32">)<pos:position pos:line="117" pos:column="33"/></operator> <operator pos:line="117" pos:column="34">*<pos:position pos:line="117" pos:column="35"/></operator><name pos:line="117" pos:column="35">s<pos:position pos:line="117" pos:column="36"/></name></expr></argument>)<pos:position pos:line="117" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="117" pos:column="38"/></condition><then pos:line="117" pos:column="38">
    <block pos:line="118" pos:column="5">{
      <expr_stmt><expr><name pos:line="119" pos:column="7">s<pos:position pos:line="119" pos:column="8"/></name> <operator pos:line="119" pos:column="9">=<pos:position pos:line="119" pos:column="10"/></operator> <call><name pos:line="119" pos:column="11">next_word<pos:position pos:line="119" pos:column="20"/></name> <argument_list pos:line="119" pos:column="21">(<argument><expr><name pos:line="119" pos:column="22">s<pos:position pos:line="119" pos:column="23"/></name></expr></argument>)<pos:position pos:line="119" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="25"/></expr_stmt>
      <if pos:line="120" pos:column="7">if <condition pos:line="120" pos:column="10">(<expr><operator pos:line="120" pos:column="11">!<pos:position pos:line="120" pos:column="12"/></operator><operator pos:line="120" pos:column="12">*<pos:position pos:line="120" pos:column="13"/></operator><name pos:line="120" pos:column="13">s<pos:position pos:line="120" pos:column="14"/></name></expr>)<pos:position pos:line="120" pos:column="15"/></condition><then pos:line="120" pos:column="15"> <block type="pseudo"><return pos:line="120" pos:column="16">return <expr><literal type="number" pos:line="120" pos:column="23">0<pos:position pos:line="120" pos:column="24"/></literal></expr>;<pos:position pos:line="120" pos:column="25"/></return></block></then></if>
    }<pos:position pos:line="121" pos:column="6"/></block></then></if>
  }<pos:position pos:line="122" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="124" pos:column="3">/* year */</comment>
  <if pos:line="125" pos:column="3">if <condition pos:line="125" pos:column="6">(<expr><call><name pos:line="125" pos:column="7">sscanf<pos:position pos:line="125" pos:column="13"/></name> <argument_list pos:line="125" pos:column="14">(<argument><expr><name pos:line="125" pos:column="15">s<pos:position pos:line="125" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="125" pos:column="18">"%d"<pos:position pos:line="125" pos:column="22"/></literal></expr></argument>, <argument><expr><operator pos:line="125" pos:column="24">&amp;<pos:position pos:line="125" pos:column="29"/></operator><name pos:line="125" pos:column="25">yr<pos:position pos:line="125" pos:column="27"/></name></expr></argument>)<pos:position pos:line="125" pos:column="28"/></argument_list></call> <operator pos:line="125" pos:column="29">!=<pos:position pos:line="125" pos:column="31"/></operator> <literal type="number" pos:line="125" pos:column="32">1<pos:position pos:line="125" pos:column="33"/></literal></expr>)<pos:position pos:line="125" pos:column="34"/></condition><then pos:line="125" pos:column="34"> <block type="pseudo"><return pos:line="125" pos:column="35">return <expr><literal type="number" pos:line="125" pos:column="42">0<pos:position pos:line="125" pos:column="43"/></literal></expr>;<pos:position pos:line="125" pos:column="44"/></return></block></then></if>
  <expr_stmt><expr><name><name pos:line="126" pos:column="3">tm<pos:position pos:line="126" pos:column="5"/></name><operator pos:line="126" pos:column="5">.<pos:position pos:line="126" pos:column="6"/></operator><name pos:line="126" pos:column="6">tm_year<pos:position pos:line="126" pos:column="13"/></name></name> <operator pos:line="126" pos:column="14">=<pos:position pos:line="126" pos:column="15"/></operator> <ternary><condition><expr><name pos:line="126" pos:column="16">yr<pos:position pos:line="126" pos:column="18"/></name> <operator pos:line="126" pos:column="19">&gt;<pos:position pos:line="126" pos:column="23"/></operator> <literal type="number" pos:line="126" pos:column="21">1900<pos:position pos:line="126" pos:column="25"/></literal></expr> ?<pos:position pos:line="126" pos:column="27"/></condition><then pos:line="126" pos:column="27"> <expr><name pos:line="126" pos:column="28">yr<pos:position pos:line="126" pos:column="30"/></name> <operator pos:line="126" pos:column="31">-<pos:position pos:line="126" pos:column="32"/></operator> <literal type="number" pos:line="126" pos:column="33">1900<pos:position pos:line="126" pos:column="37"/></literal></expr> <pos:position pos:line="126" pos:column="38"/></then><else pos:line="126" pos:column="38">: <expr><operator pos:line="126" pos:column="40">(<pos:position pos:line="126" pos:column="41"/></operator><ternary><condition><expr><name pos:line="126" pos:column="41">yr<pos:position pos:line="126" pos:column="43"/></name> <operator pos:line="126" pos:column="44">&lt;<pos:position pos:line="126" pos:column="48"/></operator> <literal type="number" pos:line="126" pos:column="46">70<pos:position pos:line="126" pos:column="48"/></literal></expr> ?<pos:position pos:line="126" pos:column="50"/></condition><then pos:line="126" pos:column="50"> <expr><name pos:line="126" pos:column="51">yr<pos:position pos:line="126" pos:column="53"/></name> <operator pos:line="126" pos:column="54">+<pos:position pos:line="126" pos:column="55"/></operator> <literal type="number" pos:line="126" pos:column="56">100<pos:position pos:line="126" pos:column="59"/></literal></expr> <pos:position pos:line="126" pos:column="60"/></then><else pos:line="126" pos:column="60">: <expr><name pos:line="126" pos:column="62">yr<pos:position pos:line="126" pos:column="64"/></name></expr></else></ternary><operator pos:line="126" pos:column="64">)<pos:position pos:line="126" pos:column="65"/></operator></expr></else></ternary></expr>;<pos:position pos:line="126" pos:column="66"/></expr_stmt>
  
  <expr_stmt><expr><call><name pos:line="128" pos:column="3">dprint<pos:position pos:line="128" pos:column="9"/></name> <argument_list pos:line="128" pos:column="10">(<argument><expr><literal type="number" pos:line="128" pos:column="11">3<pos:position pos:line="128" pos:column="12"/></literal></expr></argument>,<argument><expr><operator pos:line="128" pos:column="13">(<pos:position pos:line="128" pos:column="14"/></operator><name pos:line="128" pos:column="14">debugfile<pos:position pos:line="128" pos:column="23"/></name><operator pos:line="128" pos:column="23">,<pos:position pos:line="128" pos:column="24"/></operator> <literal type="string" pos:line="128" pos:column="25">"is_from(): month=%d, day=%d, hr=%d, min=%d, sec=%d, yr=%d.\n"<pos:position pos:line="128" pos:column="87"/></literal><operator pos:line="128" pos:column="87">,<pos:position pos:line="128" pos:column="88"/></operator>
	     <name><name pos:line="129" pos:column="14">tm<pos:position pos:line="129" pos:column="16"/></name><operator pos:line="129" pos:column="16">.<pos:position pos:line="129" pos:column="17"/></operator><name pos:line="129" pos:column="17">tm_mon<pos:position pos:line="129" pos:column="23"/></name></name><operator pos:line="129" pos:column="23">,<pos:position pos:line="129" pos:column="24"/></operator> <name><name pos:line="129" pos:column="25">tm<pos:position pos:line="129" pos:column="27"/></name><operator pos:line="129" pos:column="27">.<pos:position pos:line="129" pos:column="28"/></operator><name pos:line="129" pos:column="28">tm_mday<pos:position pos:line="129" pos:column="35"/></name></name><operator pos:line="129" pos:column="35">,<pos:position pos:line="129" pos:column="36"/></operator> <name><name pos:line="129" pos:column="37">tm<pos:position pos:line="129" pos:column="39"/></name><operator pos:line="129" pos:column="39">.<pos:position pos:line="129" pos:column="40"/></operator><name pos:line="129" pos:column="40">tm_hour<pos:position pos:line="129" pos:column="47"/></name></name><operator pos:line="129" pos:column="47">,<pos:position pos:line="129" pos:column="48"/></operator> <name><name pos:line="129" pos:column="49">tm<pos:position pos:line="129" pos:column="51"/></name><operator pos:line="129" pos:column="51">.<pos:position pos:line="129" pos:column="52"/></operator><name pos:line="129" pos:column="52">tm_min<pos:position pos:line="129" pos:column="58"/></name></name><operator pos:line="129" pos:column="58">,<pos:position pos:line="129" pos:column="59"/></operator> <name><name pos:line="129" pos:column="60">tm<pos:position pos:line="129" pos:column="62"/></name><operator pos:line="129" pos:column="62">.<pos:position pos:line="129" pos:column="63"/></operator><name pos:line="129" pos:column="63">tm_sec<pos:position pos:line="129" pos:column="69"/></name></name><operator pos:line="129" pos:column="69">,<pos:position pos:line="129" pos:column="70"/></operator> <name><name pos:line="129" pos:column="71">tm<pos:position pos:line="129" pos:column="73"/></name><operator pos:line="129" pos:column="73">.<pos:position pos:line="129" pos:column="74"/></operator><name pos:line="129" pos:column="74">tm_year<pos:position pos:line="129" pos:column="81"/></name></name><operator pos:line="129" pos:column="81">)<pos:position pos:line="129" pos:column="82"/></operator></expr></argument>)<pos:position pos:line="129" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="84"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="131" pos:column="3">tm<pos:position pos:line="131" pos:column="5"/></name><operator pos:line="131" pos:column="5">.<pos:position pos:line="131" pos:column="6"/></operator><name pos:line="131" pos:column="6">tm_isdst<pos:position pos:line="131" pos:column="14"/></name></name> <operator pos:line="131" pos:column="15">=<pos:position pos:line="131" pos:column="16"/></operator> <operator pos:line="131" pos:column="17">-<pos:position pos:line="131" pos:column="18"/></operator><literal type="number" pos:line="131" pos:column="18">1<pos:position pos:line="131" pos:column="19"/></literal></expr>;<pos:position pos:line="131" pos:column="20"/></expr_stmt>

  <if pos:line="133" pos:column="3">if <condition pos:line="133" pos:column="6">(<expr><name pos:line="133" pos:column="7">tp<pos:position pos:line="133" pos:column="9"/></name></expr>)<pos:position pos:line="133" pos:column="10"/></condition><then pos:line="133" pos:column="10"> <block type="pseudo"><expr_stmt><expr><operator pos:line="133" pos:column="11">*<pos:position pos:line="133" pos:column="12"/></operator><name pos:line="133" pos:column="12">tp<pos:position pos:line="133" pos:column="14"/></name> <operator pos:line="133" pos:column="15">=<pos:position pos:line="133" pos:column="16"/></operator> <call><name pos:line="133" pos:column="17">mutt_mktime<pos:position pos:line="133" pos:column="28"/></name> <argument_list pos:line="133" pos:column="29">(<argument><expr><operator pos:line="133" pos:column="30">&amp;<pos:position pos:line="133" pos:column="35"/></operator><name pos:line="133" pos:column="31">tm<pos:position pos:line="133" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="133" pos:column="35">0<pos:position pos:line="133" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="38"/></expr_stmt></block></then></if>
  <return pos:line="134" pos:column="3">return <expr><literal type="number" pos:line="134" pos:column="10">1<pos:position pos:line="134" pos:column="11"/></literal></expr>;<pos:position pos:line="134" pos:column="12"/></return>
}<pos:position pos:line="135" pos:column="2"/></block></function></unit>

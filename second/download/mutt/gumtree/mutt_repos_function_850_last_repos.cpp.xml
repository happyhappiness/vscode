<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_850_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">_mutt_parse_uncolor<pos:position pos:line="1" pos:column="31"/></name> <parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">BUFFER<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">buf<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">BUFFER<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">s<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">unsigned<pos:position pos:line="1" pos:column="65"/></name> <name pos:line="1" pos:column="66">long<pos:position pos:line="1" pos:column="70"/></name></type> <name pos:line="1" pos:column="71">data<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
				<parameter><decl><type><name pos:line="2" pos:column="33">BUFFER<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">err<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">short<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">parse_uncolor<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">object<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="19">do_cache<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><literal type="number" pos:line="4" pos:column="30">0<pos:position pos:line="4" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">COLOR_LINE<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">tmp<pos:position pos:line="5" pos:column="18"/></name></decl>, <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="21">last<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name pos:line="5" pos:column="28">NULL<pos:position pos:line="5" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">COLOR_LINE<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier><modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">list<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">mutt_extract_token<pos:position pos:line="8" pos:column="21"/></name> <argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">buf<pos:position pos:line="8" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="28">s<pos:position pos:line="8" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="31">0<pos:position pos:line="8" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">(<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">object<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <call><name pos:line="10" pos:column="17">mutt_getvaluebyname<pos:position pos:line="10" pos:column="36"/></name> <argument_list pos:line="10" pos:column="37">(<argument><expr><name><name pos:line="10" pos:column="38">buf<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">-&gt;<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="43">data<pos:position pos:line="10" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="49">Fields<pos:position pos:line="10" pos:column="55"/></name></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call><operator pos:line="10" pos:column="56">)<pos:position pos:line="10" pos:column="57"/></operator> <operator pos:line="10" pos:column="58">==<pos:position pos:line="10" pos:column="60"/></operator> <operator pos:line="10" pos:column="61">-<pos:position pos:line="10" pos:column="62"/></operator><literal type="number" pos:line="10" pos:column="62">1<pos:position pos:line="10" pos:column="63"/></literal></expr>)<pos:position pos:line="10" pos:column="64"/></condition><then pos:line="10" pos:column="64">
  <block pos:line="11" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">snprintf<pos:position pos:line="12" pos:column="13"/></name> <argument_list pos:line="12" pos:column="14">(<argument><expr><name><name pos:line="12" pos:column="15">err<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">-&gt;<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="20">data<pos:position pos:line="12" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="26">err<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">dsize<pos:position pos:line="12" pos:column="36"/></name></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="38">_<pos:position pos:line="12" pos:column="39"/></name><argument_list pos:line="12" pos:column="39">(<argument><expr><literal type="string" pos:line="12" pos:column="40">"%s: no such object"<pos:position pos:line="12" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="63">buf<pos:position pos:line="12" pos:column="66"/></name><operator pos:line="12" pos:column="66">-&gt;<pos:position pos:line="12" pos:column="71"/></operator><name pos:line="12" pos:column="68">data<pos:position pos:line="12" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="74"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><operator pos:line="13" pos:column="13">-<pos:position pos:line="13" pos:column="14"/></operator><literal type="number" pos:line="13" pos:column="14">1<pos:position pos:line="13" pos:column="15"/></literal><operator pos:line="13" pos:column="15">)<pos:position pos:line="13" pos:column="16"/></operator></expr>;<pos:position pos:line="13" pos:column="17"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><call><name pos:line="16" pos:column="7">mutt_strncmp<pos:position pos:line="16" pos:column="19"/></name> <argument_list pos:line="16" pos:column="20">(<argument><expr><name><name pos:line="16" pos:column="21">buf<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">-&gt;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="26">data<pos:position pos:line="16" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="32">"index"<pos:position pos:line="16" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="41">5<pos:position pos:line="16" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="43"/></argument_list></call> <operator pos:line="16" pos:column="44">==<pos:position pos:line="16" pos:column="46"/></operator> <literal type="number" pos:line="16" pos:column="47">0<pos:position pos:line="16" pos:column="48"/></literal></expr>)<pos:position pos:line="16" pos:column="49"/></condition><then pos:line="16" pos:column="49">
    <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="5">list<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <operator pos:line="17" pos:column="12">&amp;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="13">ColorIndexList<pos:position pos:line="17" pos:column="27"/></name></expr>;<pos:position pos:line="17" pos:column="28"/></expr_stmt></block></then>
  <elseif pos:line="18" pos:column="3">else <if pos:line="18" pos:column="8">if <condition pos:line="18" pos:column="11">(<expr><call><name pos:line="18" pos:column="12">mutt_strncmp<pos:position pos:line="18" pos:column="24"/></name> <argument_list pos:line="18" pos:column="25">(<argument><expr><name><name pos:line="18" pos:column="26">buf<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">-&gt;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="31">data<pos:position pos:line="18" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="37">"body"<pos:position pos:line="18" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="45">4<pos:position pos:line="18" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call> <operator pos:line="18" pos:column="48">==<pos:position pos:line="18" pos:column="50"/></operator> <literal type="number" pos:line="18" pos:column="51">0<pos:position pos:line="18" pos:column="52"/></literal></expr>)<pos:position pos:line="18" pos:column="53"/></condition><then pos:line="18" pos:column="53">
    <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="5">list<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <operator pos:line="19" pos:column="12">&amp;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="13">ColorBodyList<pos:position pos:line="19" pos:column="26"/></name></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="20" pos:column="3">else <if pos:line="20" pos:column="8">if <condition pos:line="20" pos:column="11">(<expr><call><name pos:line="20" pos:column="12">mutt_strncmp<pos:position pos:line="20" pos:column="24"/></name> <argument_list pos:line="20" pos:column="25">(<argument><expr><name><name pos:line="20" pos:column="26">buf<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">-&gt;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="31">data<pos:position pos:line="20" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="37">"header"<pos:position pos:line="20" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="47">7<pos:position pos:line="20" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call> <operator pos:line="20" pos:column="50">==<pos:position pos:line="20" pos:column="52"/></operator> <literal type="number" pos:line="20" pos:column="53">0<pos:position pos:line="20" pos:column="54"/></literal></expr>)<pos:position pos:line="20" pos:column="55"/></condition><then pos:line="20" pos:column="55">
    <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="5">list<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator> <operator pos:line="21" pos:column="12">&amp;<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="13">ColorHdrList<pos:position pos:line="21" pos:column="25"/></name></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt></block></then></if></elseif>
  <else pos:line="22" pos:column="3">else
  <block pos:line="23" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">snprintf<pos:position pos:line="24" pos:column="13"/></name> <argument_list pos:line="24" pos:column="14">(<argument><expr><name><name pos:line="24" pos:column="15">err<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">-&gt;<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="20">data<pos:position pos:line="24" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="26">err<pos:position pos:line="24" pos:column="29"/></name><operator pos:line="24" pos:column="29">-&gt;<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="31">dsize<pos:position pos:line="24" pos:column="36"/></name></name></expr></argument>,
	      <argument><expr><call><name pos:line="25" pos:column="15">_<pos:position pos:line="25" pos:column="16"/></name><argument_list pos:line="25" pos:column="16">(<argument><expr><literal type="string" pos:line="25" pos:column="17">"%s: command valid only for index, body, header objects"<pos:position pos:line="25" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="74"/></argument_list></call></expr></argument>,
	      <argument><expr><ternary><condition><expr><name pos:line="26" pos:column="15">parse_uncolor<pos:position pos:line="26" pos:column="28"/></name></expr> ?<pos:position pos:line="26" pos:column="30"/></condition><then pos:line="26" pos:column="30"> <expr><literal type="string" pos:line="26" pos:column="31">"uncolor"<pos:position pos:line="26" pos:column="40"/></literal></expr> <pos:position pos:line="26" pos:column="41"/></then><else pos:line="26" pos:column="41">: <expr><literal type="string" pos:line="26" pos:column="43">"unmono"<pos:position pos:line="26" pos:column="51"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="26" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="53"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><operator pos:line="27" pos:column="12">(<pos:position pos:line="27" pos:column="13"/></operator><operator pos:line="27" pos:column="13">-<pos:position pos:line="27" pos:column="14"/></operator><literal type="number" pos:line="27" pos:column="14">1<pos:position pos:line="27" pos:column="15"/></literal><operator pos:line="27" pos:column="15">)<pos:position pos:line="27" pos:column="16"/></operator></expr>;<pos:position pos:line="27" pos:column="17"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></else></if>

  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><operator pos:line="30" pos:column="7">!<pos:position pos:line="30" pos:column="8"/></operator><call><name pos:line="30" pos:column="8">MoreArgs<pos:position pos:line="30" pos:column="16"/></name> <argument_list pos:line="30" pos:column="17">(<argument><expr><name pos:line="30" pos:column="18">s<pos:position pos:line="30" pos:column="19"/></name></expr></argument>)<pos:position pos:line="30" pos:column="20"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="21"/></condition><then pos:line="30" pos:column="21">
  <block pos:line="31" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">snprintf<pos:position pos:line="32" pos:column="13"/></name> <argument_list pos:line="32" pos:column="14">(<argument><expr><name><name pos:line="32" pos:column="15">err<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">-&gt;<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="20">data<pos:position pos:line="32" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="26">err<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">-&gt;<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="31">dsize<pos:position pos:line="32" pos:column="36"/></name></name></expr></argument>,
	      <argument><expr><call><name pos:line="33" pos:column="15">_<pos:position pos:line="33" pos:column="16"/></name><argument_list pos:line="33" pos:column="16">(<argument><expr><literal type="string" pos:line="33" pos:column="17">"%s: too few arguments"<pos:position pos:line="33" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="33" pos:column="43">parse_uncolor<pos:position pos:line="33" pos:column="56"/></name></expr> ?<pos:position pos:line="33" pos:column="58"/></condition><then pos:line="33" pos:column="58"> <expr><literal type="string" pos:line="33" pos:column="59">"uncolor"<pos:position pos:line="33" pos:column="68"/></literal></expr> <pos:position pos:line="33" pos:column="69"/></then><else pos:line="33" pos:column="69">: <expr><literal type="string" pos:line="33" pos:column="71">"unmono"<pos:position pos:line="33" pos:column="79"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="33" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="81"/></expr_stmt>
    <return pos:line="34" pos:column="5">return <expr><operator pos:line="34" pos:column="12">(<pos:position pos:line="34" pos:column="13"/></operator><operator pos:line="34" pos:column="13">-<pos:position pos:line="34" pos:column="14"/></operator><literal type="number" pos:line="34" pos:column="14">1<pos:position pos:line="34" pos:column="15"/></literal><operator pos:line="34" pos:column="15">)<pos:position pos:line="34" pos:column="16"/></operator></expr>;<pos:position pos:line="34" pos:column="17"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <if pos:line="37" pos:column="3">if<condition pos:line="37" pos:column="5">(
<cpp:ifdef pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">ifdef<pos:position pos:line="38" pos:column="7"/></cpp:directive> <name pos:line="38" pos:column="8">HAVE_COLOR<pos:position pos:line="38" pos:column="18"/></name></cpp:ifdef>
     <comment type="block" pos:line="39" pos:column="6">/* we're running without curses */</comment>
     <expr><call><name pos:line="40" pos:column="6">option<pos:position pos:line="40" pos:column="12"/></name> <argument_list pos:line="40" pos:column="13">(<argument><expr><name pos:line="40" pos:column="14">OPTNOCURSES<pos:position pos:line="40" pos:column="25"/></name></expr></argument>)<pos:position pos:line="40" pos:column="26"/></argument_list></call> 
     <operator pos:line="41" pos:column="6">||<pos:position pos:line="41" pos:column="8"/></operator> <comment type="block" pos:line="41" pos:column="9">/* we're parsing an uncolor command, and have no colors */</comment>
     <operator pos:line="42" pos:column="6">(<pos:position pos:line="42" pos:column="7"/></operator><name pos:line="42" pos:column="7">parse_uncolor<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">&amp;&amp;<pos:position pos:line="42" pos:column="31"/></operator> <operator pos:line="42" pos:column="24">!<pos:position pos:line="42" pos:column="25"/></operator><call><name pos:line="42" pos:column="25">has_colors<pos:position pos:line="42" pos:column="35"/></name><argument_list pos:line="42" pos:column="35">()<pos:position pos:line="42" pos:column="37"/></argument_list></call><operator pos:line="42" pos:column="37">)<pos:position pos:line="42" pos:column="38"/></operator>
     <comment type="block" pos:line="43" pos:column="6">/* we're parsing an unmono command, and have colors */</comment>
     <operator pos:line="44" pos:column="6">||<pos:position pos:line="44" pos:column="8"/></operator> <operator pos:line="44" pos:column="9">(<pos:position pos:line="44" pos:column="10"/></operator><operator pos:line="44" pos:column="10">!<pos:position pos:line="44" pos:column="11"/></operator><name pos:line="44" pos:column="11">parse_uncolor<pos:position pos:line="44" pos:column="24"/></name> <operator pos:line="44" pos:column="25">&amp;&amp;<pos:position pos:line="44" pos:column="35"/></operator> <call><name pos:line="44" pos:column="28">has_colors<pos:position pos:line="44" pos:column="38"/></name><argument_list pos:line="44" pos:column="38">()<pos:position pos:line="44" pos:column="40"/></argument_list></call><operator pos:line="44" pos:column="40">)<pos:position pos:line="44" pos:column="41"/></operator>
<cpp:else pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">else<pos:position pos:line="45" pos:column="6"/></cpp:directive></cpp:else>
     <comment type="block" pos:line="46" pos:column="6">/* We don't even have colors compiled in */</comment>
     <name pos:line="47" pos:column="6">parse_uncolor<pos:position pos:line="47" pos:column="19"/></name></expr>
<cpp:endif pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">endif<pos:position pos:line="48" pos:column="7"/></cpp:directive></cpp:endif>
     )<pos:position pos:line="49" pos:column="7"/></condition><then pos:line="49" pos:column="7">
  <block pos:line="50" pos:column="3">{
    <comment type="block" pos:line="51" pos:column="5">/* just eat the command, but don't do anything real about it */</comment>
    <do pos:line="52" pos:column="5">do
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="7">mutt_extract_token<pos:position pos:line="53" pos:column="25"/></name> <argument_list pos:line="53" pos:column="26">(<argument><expr><name pos:line="53" pos:column="27">buf<pos:position pos:line="53" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="32">s<pos:position pos:line="53" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="35">0<pos:position pos:line="53" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="38"/></expr_stmt></block>
    while <condition pos:line="54" pos:column="11">(<expr><call><name pos:line="54" pos:column="12">MoreArgs<pos:position pos:line="54" pos:column="20"/></name> <argument_list pos:line="54" pos:column="21">(<argument><expr><name pos:line="54" pos:column="22">s<pos:position pos:line="54" pos:column="23"/></name></expr></argument>)<pos:position pos:line="54" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="25"/></condition>;<pos:position pos:line="54" pos:column="26"/></do>

    <return pos:line="56" pos:column="5">return <expr><literal type="number" pos:line="56" pos:column="12">0<pos:position pos:line="56" pos:column="13"/></literal></expr>;<pos:position pos:line="56" pos:column="14"/></return>
  }<pos:position pos:line="57" pos:column="4"/></block></then></if>

  <do pos:line="59" pos:column="3">do
  <block pos:line="60" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">mutt_extract_token<pos:position pos:line="61" pos:column="23"/></name> <argument_list pos:line="61" pos:column="24">(<argument><expr><name pos:line="61" pos:column="25">buf<pos:position pos:line="61" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="30">s<pos:position pos:line="61" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="33">0<pos:position pos:line="61" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="36"/></expr_stmt>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><operator pos:line="62" pos:column="9">!<pos:position pos:line="62" pos:column="10"/></operator><call><name pos:line="62" pos:column="10">mutt_strcmp<pos:position pos:line="62" pos:column="21"/></name> <argument_list pos:line="62" pos:column="22">(<argument><expr><literal type="string" pos:line="62" pos:column="23">"*"<pos:position pos:line="62" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="28">buf<pos:position pos:line="62" pos:column="31"/></name><operator pos:line="62" pos:column="31">-&gt;<pos:position pos:line="62" pos:column="36"/></operator><name pos:line="62" pos:column="33">data<pos:position pos:line="62" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="39"/></condition><then pos:line="62" pos:column="39">
    <block pos:line="63" pos:column="5">{
      <for pos:line="64" pos:column="7">for <control pos:line="64" pos:column="11">(<init><expr><name pos:line="64" pos:column="12">tmp<pos:position pos:line="64" pos:column="15"/></name> <operator pos:line="64" pos:column="16">=<pos:position pos:line="64" pos:column="17"/></operator> <operator pos:line="64" pos:column="18">*<pos:position pos:line="64" pos:column="19"/></operator><name pos:line="64" pos:column="19">list<pos:position pos:line="64" pos:column="23"/></name></expr>;<pos:position pos:line="64" pos:column="24"/></init> <condition><expr><name pos:line="64" pos:column="25">tmp<pos:position pos:line="64" pos:column="28"/></name></expr>;<pos:position pos:line="64" pos:column="29"/></condition> <incr/>)<pos:position pos:line="64" pos:column="31"/></control>
      <block pos:line="65" pos:column="7">{
        <if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><operator pos:line="66" pos:column="13">!<pos:position pos:line="66" pos:column="14"/></operator><name pos:line="66" pos:column="14">do_cache<pos:position pos:line="66" pos:column="22"/></name></expr>)<pos:position pos:line="66" pos:column="23"/></condition><then pos:line="66" pos:column="23">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="11">do_cache<pos:position pos:line="67" pos:column="19"/></name> <operator pos:line="67" pos:column="20">=<pos:position pos:line="67" pos:column="21"/></operator> <literal type="number" pos:line="67" pos:column="22">1<pos:position pos:line="67" pos:column="23"/></literal></expr>;<pos:position pos:line="67" pos:column="24"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="68" pos:column="9">last<pos:position pos:line="68" pos:column="13"/></name> <operator pos:line="68" pos:column="14">=<pos:position pos:line="68" pos:column="15"/></operator> <name pos:line="68" pos:column="16">tmp<pos:position pos:line="68" pos:column="19"/></name></expr>;<pos:position pos:line="68" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><name pos:line="69" pos:column="9">tmp<pos:position pos:line="69" pos:column="12"/></name> <operator pos:line="69" pos:column="13">=<pos:position pos:line="69" pos:column="14"/></operator> <name><name pos:line="69" pos:column="15">tmp<pos:position pos:line="69" pos:column="18"/></name><operator pos:line="69" pos:column="18">-&gt;<pos:position pos:line="69" pos:column="23"/></operator><name pos:line="69" pos:column="20">next<pos:position pos:line="69" pos:column="24"/></name></name></expr>;<pos:position pos:line="69" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="70" pos:column="9">mutt_free_color_line<pos:position pos:line="70" pos:column="29"/></name><argument_list pos:line="70" pos:column="29">(<argument><expr><operator pos:line="70" pos:column="30">&amp;<pos:position pos:line="70" pos:column="35"/></operator><name pos:line="70" pos:column="31">last<pos:position pos:line="70" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="37">parse_uncolor<pos:position pos:line="70" pos:column="50"/></name></expr></argument>)<pos:position pos:line="70" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="52"/></expr_stmt>
      }<pos:position pos:line="71" pos:column="8"/></block></for>
      <expr_stmt><expr><operator pos:line="72" pos:column="7">*<pos:position pos:line="72" pos:column="8"/></operator><name pos:line="72" pos:column="8">list<pos:position pos:line="72" pos:column="12"/></name> <operator pos:line="72" pos:column="13">=<pos:position pos:line="72" pos:column="14"/></operator> <name pos:line="72" pos:column="15">NULL<pos:position pos:line="72" pos:column="19"/></name></expr>;<pos:position pos:line="72" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="73" pos:column="6"/></block></then>
    <else pos:line="74" pos:column="5">else
    <block pos:line="75" pos:column="5">{
      <for pos:line="76" pos:column="7">for <control pos:line="76" pos:column="11">(<init><expr><name pos:line="76" pos:column="12">last<pos:position pos:line="76" pos:column="16"/></name> <operator pos:line="76" pos:column="17">=<pos:position pos:line="76" pos:column="18"/></operator> <name pos:line="76" pos:column="19">NULL<pos:position pos:line="76" pos:column="23"/></name></expr><operator pos:line="76" pos:column="23">,<pos:position pos:line="76" pos:column="24"/></operator> <expr><name pos:line="76" pos:column="25">tmp<pos:position pos:line="76" pos:column="28"/></name> <operator pos:line="76" pos:column="29">=<pos:position pos:line="76" pos:column="30"/></operator> <operator pos:line="76" pos:column="31">*<pos:position pos:line="76" pos:column="32"/></operator><name pos:line="76" pos:column="32">list<pos:position pos:line="76" pos:column="36"/></name></expr>;<pos:position pos:line="76" pos:column="37"/></init> <condition><expr><name pos:line="76" pos:column="38">tmp<pos:position pos:line="76" pos:column="41"/></name></expr>;<pos:position pos:line="76" pos:column="42"/></condition> <incr><expr><name pos:line="76" pos:column="43">last<pos:position pos:line="76" pos:column="47"/></name> <operator pos:line="76" pos:column="48">=<pos:position pos:line="76" pos:column="49"/></operator> <name pos:line="76" pos:column="50">tmp<pos:position pos:line="76" pos:column="53"/></name></expr><operator pos:line="76" pos:column="53">,<pos:position pos:line="76" pos:column="54"/></operator> <expr><name pos:line="76" pos:column="55">tmp<pos:position pos:line="76" pos:column="58"/></name> <operator pos:line="76" pos:column="59">=<pos:position pos:line="76" pos:column="60"/></operator> <name><name pos:line="76" pos:column="61">tmp<pos:position pos:line="76" pos:column="64"/></name><operator pos:line="76" pos:column="64">-&gt;<pos:position pos:line="76" pos:column="69"/></operator><name pos:line="76" pos:column="66">next<pos:position pos:line="76" pos:column="70"/></name></name></expr></incr>)<pos:position pos:line="76" pos:column="71"/></control>
      <block pos:line="77" pos:column="7">{
	<if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><operator pos:line="78" pos:column="13">!<pos:position pos:line="78" pos:column="14"/></operator><call><name pos:line="78" pos:column="14">mutt_strcmp<pos:position pos:line="78" pos:column="25"/></name> <argument_list pos:line="78" pos:column="26">(<argument><expr><name><name pos:line="78" pos:column="27">buf<pos:position pos:line="78" pos:column="30"/></name><operator pos:line="78" pos:column="30">-&gt;<pos:position pos:line="78" pos:column="35"/></operator><name pos:line="78" pos:column="32">data<pos:position pos:line="78" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="38">tmp<pos:position pos:line="78" pos:column="41"/></name><operator pos:line="78" pos:column="41">-&gt;<pos:position pos:line="78" pos:column="46"/></operator><name pos:line="78" pos:column="43">pattern<pos:position pos:line="78" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="78" pos:column="52"/></condition><then pos:line="78" pos:column="52">
	<block pos:line="79" pos:column="9">{
          <if pos:line="80" pos:column="11">if <condition pos:line="80" pos:column="14">(<expr><operator pos:line="80" pos:column="15">!<pos:position pos:line="80" pos:column="16"/></operator><name pos:line="80" pos:column="16">do_cache<pos:position pos:line="80" pos:column="24"/></name></expr>)<pos:position pos:line="80" pos:column="25"/></condition><then pos:line="80" pos:column="25">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="81" pos:column="13">do_cache<pos:position pos:line="81" pos:column="21"/></name> <operator pos:line="81" pos:column="22">=<pos:position pos:line="81" pos:column="23"/></operator> <literal type="number" pos:line="81" pos:column="24">1<pos:position pos:line="81" pos:column="25"/></literal></expr>;<pos:position pos:line="81" pos:column="26"/></expr_stmt></block></then></if>
	  <expr_stmt><expr><call><name pos:line="82" pos:column="11">dprint<pos:position pos:line="82" pos:column="17"/></name><argument_list pos:line="82" pos:column="17">(<argument><expr><literal type="number" pos:line="82" pos:column="18">1<pos:position pos:line="82" pos:column="19"/></literal></expr></argument>,<argument><expr><operator pos:line="82" pos:column="20">(<pos:position pos:line="82" pos:column="21"/></operator><name pos:line="82" pos:column="21">debugfile<pos:position pos:line="82" pos:column="30"/></name><operator pos:line="82" pos:column="30">,<pos:position pos:line="82" pos:column="31"/></operator><literal type="string" pos:line="82" pos:column="31">"Freeing pattern \"%s\" from color list\n"<pos:position pos:line="82" pos:column="73"/></literal><operator pos:line="82" pos:column="73">,<pos:position pos:line="82" pos:column="74"/></operator>
	                       <name><name pos:line="83" pos:column="32">tmp<pos:position pos:line="83" pos:column="35"/></name><operator pos:line="83" pos:column="35">-&gt;<pos:position pos:line="83" pos:column="40"/></operator><name pos:line="83" pos:column="37">pattern<pos:position pos:line="83" pos:column="44"/></name></name><operator pos:line="83" pos:column="44">)<pos:position pos:line="83" pos:column="45"/></operator></expr></argument>)<pos:position pos:line="83" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="47"/></expr_stmt>
	  <if pos:line="84" pos:column="11">if <condition pos:line="84" pos:column="14">(<expr><name pos:line="84" pos:column="15">last<pos:position pos:line="84" pos:column="19"/></name></expr>)<pos:position pos:line="84" pos:column="20"/></condition><then pos:line="84" pos:column="20">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="85" pos:column="13">last<pos:position pos:line="85" pos:column="17"/></name><operator pos:line="85" pos:column="17">-&gt;<pos:position pos:line="85" pos:column="22"/></operator><name pos:line="85" pos:column="19">next<pos:position pos:line="85" pos:column="23"/></name></name> <operator pos:line="85" pos:column="24">=<pos:position pos:line="85" pos:column="25"/></operator> <name><name pos:line="85" pos:column="26">tmp<pos:position pos:line="85" pos:column="29"/></name><operator pos:line="85" pos:column="29">-&gt;<pos:position pos:line="85" pos:column="34"/></operator><name pos:line="85" pos:column="31">next<pos:position pos:line="85" pos:column="35"/></name></name></expr>;<pos:position pos:line="85" pos:column="36"/></expr_stmt></block></then>
	  <else pos:line="86" pos:column="11">else
	    <block type="pseudo"><expr_stmt><expr><operator pos:line="87" pos:column="13">*<pos:position pos:line="87" pos:column="14"/></operator><name pos:line="87" pos:column="14">list<pos:position pos:line="87" pos:column="18"/></name> <operator pos:line="87" pos:column="19">=<pos:position pos:line="87" pos:column="20"/></operator> <name><name pos:line="87" pos:column="21">tmp<pos:position pos:line="87" pos:column="24"/></name><operator pos:line="87" pos:column="24">-&gt;<pos:position pos:line="87" pos:column="29"/></operator><name pos:line="87" pos:column="26">next<pos:position pos:line="87" pos:column="30"/></name></name></expr>;<pos:position pos:line="87" pos:column="31"/></expr_stmt></block></else></if>
	  <expr_stmt><expr><call><name pos:line="88" pos:column="11">mutt_free_color_line<pos:position pos:line="88" pos:column="31"/></name><argument_list pos:line="88" pos:column="31">(<argument><expr><operator pos:line="88" pos:column="32">&amp;<pos:position pos:line="88" pos:column="37"/></operator><name pos:line="88" pos:column="33">tmp<pos:position pos:line="88" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="38">parse_uncolor<pos:position pos:line="88" pos:column="51"/></name></expr></argument>)<pos:position pos:line="88" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="53"/></expr_stmt>
	  <break pos:line="89" pos:column="11">break;<pos:position pos:line="89" pos:column="17"/></break>
	}<pos:position pos:line="90" pos:column="10"/></block></then></if>
      }<pos:position pos:line="91" pos:column="8"/></block></for>
    }<pos:position pos:line="92" pos:column="6"/></block></else></if>
  }<pos:position pos:line="93" pos:column="4"/></block>
  while <condition pos:line="94" pos:column="9">(<expr><call><name pos:line="94" pos:column="10">MoreArgs<pos:position pos:line="94" pos:column="18"/></name> <argument_list pos:line="94" pos:column="19">(<argument><expr><name pos:line="94" pos:column="20">s<pos:position pos:line="94" pos:column="21"/></name></expr></argument>)<pos:position pos:line="94" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="94" pos:column="23"/></condition>;<pos:position pos:line="94" pos:column="24"/></do>


  <if pos:line="97" pos:column="3">if <condition pos:line="97" pos:column="6">(<expr><name pos:line="97" pos:column="7">do_cache<pos:position pos:line="97" pos:column="15"/></name> <operator pos:line="97" pos:column="16">&amp;&amp;<pos:position pos:line="97" pos:column="26"/></operator> <operator pos:line="97" pos:column="19">!<pos:position pos:line="97" pos:column="20"/></operator><call><name pos:line="97" pos:column="20">option<pos:position pos:line="97" pos:column="26"/></name> <argument_list pos:line="97" pos:column="27">(<argument><expr><name pos:line="97" pos:column="28">OPTNOCURSES<pos:position pos:line="97" pos:column="39"/></name></expr></argument>)<pos:position pos:line="97" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="97" pos:column="41"/></condition><then pos:line="97" pos:column="41">
  <block pos:line="98" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="99" pos:column="5">int<pos:position pos:line="99" pos:column="8"/></name></type> <name pos:line="99" pos:column="9">i<pos:position pos:line="99" pos:column="10"/></name></decl>;<pos:position pos:line="99" pos:column="11"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="100" pos:column="5">mutt_set_menu_redraw_full<pos:position pos:line="100" pos:column="30"/></name> <argument_list pos:line="100" pos:column="31">(<argument><expr><name pos:line="100" pos:column="32">MENU_MAIN<pos:position pos:line="100" pos:column="41"/></name></expr></argument>)<pos:position pos:line="100" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="43"/></expr_stmt>
    <comment type="block" pos:line="101" pos:column="5">/* force re-caching of index colors */</comment>
    <for pos:line="102" pos:column="5">for <control pos:line="102" pos:column="9">(<init><expr><name pos:line="102" pos:column="10">i<pos:position pos:line="102" pos:column="11"/></name> <operator pos:line="102" pos:column="12">=<pos:position pos:line="102" pos:column="13"/></operator> <literal type="number" pos:line="102" pos:column="14">0<pos:position pos:line="102" pos:column="15"/></literal></expr>;<pos:position pos:line="102" pos:column="16"/></init> <condition><expr><name pos:line="102" pos:column="17">Context<pos:position pos:line="102" pos:column="24"/></name> <operator pos:line="102" pos:column="25">&amp;&amp;<pos:position pos:line="102" pos:column="35"/></operator> <name pos:line="102" pos:column="28">i<pos:position pos:line="102" pos:column="29"/></name> <operator pos:line="102" pos:column="30">&lt;<pos:position pos:line="102" pos:column="34"/></operator> <name><name pos:line="102" pos:column="32">Context<pos:position pos:line="102" pos:column="39"/></name><operator pos:line="102" pos:column="39">-&gt;<pos:position pos:line="102" pos:column="44"/></operator><name pos:line="102" pos:column="41">msgcount<pos:position pos:line="102" pos:column="49"/></name></name></expr>;<pos:position pos:line="102" pos:column="50"/></condition> <incr><expr><name pos:line="102" pos:column="51">i<pos:position pos:line="102" pos:column="52"/></name><operator pos:line="102" pos:column="52">++<pos:position pos:line="102" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="102" pos:column="55"/></control>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="103" pos:column="7">Context<pos:position pos:line="103" pos:column="14"/></name><operator pos:line="103" pos:column="14">-&gt;<pos:position pos:line="103" pos:column="19"/></operator><name pos:line="103" pos:column="16">hdrs<pos:position pos:line="103" pos:column="20"/></name><index pos:line="103" pos:column="20">[<expr><name pos:line="103" pos:column="21">i<pos:position pos:line="103" pos:column="22"/></name></expr>]<pos:position pos:line="103" pos:column="23"/></index></name><operator pos:line="103" pos:column="23">-&gt;<pos:position pos:line="103" pos:column="28"/></operator><name pos:line="103" pos:column="25">pair<pos:position pos:line="103" pos:column="29"/></name> <operator pos:line="103" pos:column="30">=<pos:position pos:line="103" pos:column="31"/></operator> <literal type="number" pos:line="103" pos:column="32">0<pos:position pos:line="103" pos:column="33"/></literal></expr>;<pos:position pos:line="103" pos:column="34"/></expr_stmt></block></for>
  }<pos:position pos:line="104" pos:column="4"/></block></then></if>
  <return pos:line="105" pos:column="3">return <expr><operator pos:line="105" pos:column="10">(<pos:position pos:line="105" pos:column="11"/></operator><literal type="number" pos:line="105" pos:column="11">0<pos:position pos:line="105" pos:column="12"/></literal><operator pos:line="105" pos:column="12">)<pos:position pos:line="105" pos:column="13"/></operator></expr>;<pos:position pos:line="105" pos:column="14"/></return>
}<pos:position pos:line="106" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2057_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">imap_has_flag<pos:position pos:line="1" pos:column="18"/></name> <parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">LIST<pos:position pos:line="1" pos:column="24"/></name><modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type> <name pos:line="1" pos:column="26">flag_list<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name><modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type> <name pos:line="1" pos:column="49">flag<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><operator pos:line="3" pos:column="7">!<pos:position pos:line="3" pos:column="8"/></operator><name pos:line="3" pos:column="8">flag_list<pos:position pos:line="3" pos:column="17"/></name></expr>)<pos:position pos:line="3" pos:column="18"/></condition><then pos:line="3" pos:column="18">
    <block type="pseudo"><return pos:line="4" pos:column="5">return <expr><literal type="number" pos:line="4" pos:column="12">0<pos:position pos:line="4" pos:column="13"/></literal></expr>;<pos:position pos:line="4" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="6" pos:column="3">flag_list<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <name><name pos:line="6" pos:column="15">flag_list<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">-&gt;<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="26">next<pos:position pos:line="6" pos:column="30"/></name></name></expr>;<pos:position pos:line="6" pos:column="31"/></expr_stmt>
  <while pos:line="7" pos:column="3">while <condition pos:line="7" pos:column="9">(<expr><name pos:line="7" pos:column="10">flag_list<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition>
  <block pos:line="8" pos:column="3">{
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><call><name pos:line="9" pos:column="10">ascii_strncasecmp<pos:position pos:line="9" pos:column="27"/></name> <argument_list pos:line="9" pos:column="28">(<argument><expr><name><name pos:line="9" pos:column="29">flag_list<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">-&gt;<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="40">data<pos:position pos:line="9" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="46">flag<pos:position pos:line="9" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="52">strlen<pos:position pos:line="9" pos:column="58"/></name> <argument_list pos:line="9" pos:column="59">(<argument><expr><name><name pos:line="9" pos:column="60">flag_list<pos:position pos:line="9" pos:column="69"/></name><operator pos:line="9" pos:column="69">-&gt;<pos:position pos:line="9" pos:column="74"/></operator><name pos:line="9" pos:column="71">data<pos:position pos:line="9" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="78"/></condition><then pos:line="9" pos:column="78">
      <block type="pseudo"><return pos:line="10" pos:column="7">return <expr><literal type="number" pos:line="10" pos:column="14">1<pos:position pos:line="10" pos:column="15"/></literal></expr>;<pos:position pos:line="10" pos:column="16"/></return></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><call><name pos:line="12" pos:column="10">ascii_strncmp<pos:position pos:line="12" pos:column="23"/></name> <argument_list pos:line="12" pos:column="24">(<argument><expr><name><name pos:line="12" pos:column="25">flag_list<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">-&gt;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="36">data<pos:position pos:line="12" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="42">"\\*"<pos:position pos:line="12" pos:column="47"/></literal></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="49">strlen<pos:position pos:line="12" pos:column="55"/></name> <argument_list pos:line="12" pos:column="56">(<argument><expr><name><name pos:line="12" pos:column="57">flag_list<pos:position pos:line="12" pos:column="66"/></name><operator pos:line="12" pos:column="66">-&gt;<pos:position pos:line="12" pos:column="71"/></operator><name pos:line="12" pos:column="68">data<pos:position pos:line="12" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="75"/></condition><then pos:line="12" pos:column="75">
      <block type="pseudo"><return pos:line="13" pos:column="7">return <expr><literal type="number" pos:line="13" pos:column="14">1<pos:position pos:line="13" pos:column="15"/></literal></expr>;<pos:position pos:line="13" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="15" pos:column="5">flag_list<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <name><name pos:line="15" pos:column="17">flag_list<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">next<pos:position pos:line="15" pos:column="32"/></name></name></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="16" pos:column="4"/></block></while>

  <return pos:line="18" pos:column="3">return <expr><literal type="number" pos:line="18" pos:column="10">0<pos:position pos:line="18" pos:column="11"/></literal></expr>;<pos:position pos:line="18" pos:column="12"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

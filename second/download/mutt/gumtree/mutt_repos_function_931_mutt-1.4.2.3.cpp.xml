<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_931_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_needs_mailcap<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">BODY<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">m<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <switch pos:line="3" pos:column="3">switch <condition pos:line="3" pos:column="10">(<expr><name><name pos:line="3" pos:column="11">m<pos:position pos:line="3" pos:column="12"/></name><operator pos:line="3" pos:column="12">-&gt;<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="14">type<pos:position pos:line="3" pos:column="18"/></name></name></expr>)<pos:position pos:line="3" pos:column="19"/></condition>
  <block pos:line="4" pos:column="3">{
    <case pos:line="5" pos:column="5">case <expr><name pos:line="5" pos:column="10">TYPETEXT<pos:position pos:line="5" pos:column="18"/></name></expr>:<pos:position pos:line="5" pos:column="19"/></case>

      <if pos:line="7" pos:column="7">if <condition pos:line="7" pos:column="10">(<expr><operator pos:line="7" pos:column="11">!<pos:position pos:line="7" pos:column="12"/></operator><call><name pos:line="7" pos:column="12">ascii_strcasecmp<pos:position pos:line="7" pos:column="28"/></name> <argument_list pos:line="7" pos:column="29">(<argument><expr><literal type="string" pos:line="7" pos:column="30">"plain"<pos:position pos:line="7" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="39">m<pos:position pos:line="7" pos:column="40"/></name><operator pos:line="7" pos:column="40">-&gt;<pos:position pos:line="7" pos:column="45"/></operator><name pos:line="7" pos:column="42">subtype<pos:position pos:line="7" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></call> <operator pos:line="7" pos:column="51">||<pos:position pos:line="7" pos:column="53"/></operator>
	  <operator pos:line="8" pos:column="11">!<pos:position pos:line="8" pos:column="12"/></operator><call><name pos:line="8" pos:column="12">ascii_strcasecmp<pos:position pos:line="8" pos:column="28"/></name> <argument_list pos:line="8" pos:column="29">(<argument><expr><literal type="string" pos:line="8" pos:column="30">"rfc822-headers"<pos:position pos:line="8" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="48">m<pos:position pos:line="8" pos:column="49"/></name><operator pos:line="8" pos:column="49">-&gt;<pos:position pos:line="8" pos:column="54"/></operator><name pos:line="8" pos:column="51">subtype<pos:position pos:line="8" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="59"/></argument_list></call> <operator pos:line="8" pos:column="60">||<pos:position pos:line="8" pos:column="62"/></operator>
	  <operator pos:line="9" pos:column="11">!<pos:position pos:line="9" pos:column="12"/></operator><call><name pos:line="9" pos:column="12">ascii_strcasecmp<pos:position pos:line="9" pos:column="28"/></name> <argument_list pos:line="9" pos:column="29">(<argument><expr><literal type="string" pos:line="9" pos:column="30">"enriched"<pos:position pos:line="9" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="42">m<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">-&gt;<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="45">subtype<pos:position pos:line="9" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="54"/></condition><then pos:line="9" pos:column="54">
	<block type="pseudo"><return pos:line="10" pos:column="9">return <expr><literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal></expr>;<pos:position pos:line="10" pos:column="18"/></return></block></then></if>
      <break pos:line="11" pos:column="7">break;<pos:position pos:line="11" pos:column="13"/></break>



<cpp:ifdef pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">ifdef<pos:position pos:line="15" pos:column="7"/></cpp:directive> <name pos:line="15" pos:column="8">HAVE_PGP<pos:position pos:line="15" pos:column="16"/></name></cpp:ifdef>
    <case pos:line="16" pos:column="5">case <expr><name pos:line="16" pos:column="10">TYPEAPPLICATION<pos:position pos:line="16" pos:column="25"/></name></expr>:<pos:position pos:line="16" pos:column="26"/></case>
      <if pos:line="17" pos:column="7">if<condition pos:line="17" pos:column="9">(<expr><call><name pos:line="17" pos:column="10">mutt_is_application_pgp<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">m<pos:position pos:line="17" pos:column="35"/></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="37"/></condition><then pos:line="17" pos:column="37">
	<block type="pseudo"><return pos:line="18" pos:column="9">return <expr><literal type="number" pos:line="18" pos:column="16">0<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></return></block></then></if>
      <break pos:line="19" pos:column="7">break;<pos:position pos:line="19" pos:column="13"/></break>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="20" pos:column="8">/* HAVE_PGP */</comment>


    <case pos:line="23" pos:column="5">case <expr><name pos:line="23" pos:column="10">TYPEMULTIPART<pos:position pos:line="23" pos:column="23"/></name></expr>:<pos:position pos:line="23" pos:column="24"/></case>
    <case pos:line="24" pos:column="5">case <expr><name pos:line="24" pos:column="10">TYPEMESSAGE<pos:position pos:line="24" pos:column="21"/></name></expr>:<pos:position pos:line="24" pos:column="22"/></case>

      <return pos:line="26" pos:column="7">return <expr><literal type="number" pos:line="26" pos:column="14">0<pos:position pos:line="26" pos:column="15"/></literal></expr>;<pos:position pos:line="26" pos:column="16"/></return>
  }<pos:position pos:line="27" pos:column="4"/></block></switch>

  <return pos:line="29" pos:column="3">return <expr><literal type="number" pos:line="29" pos:column="10">1<pos:position pos:line="29" pos:column="11"/></literal></expr>;<pos:position pos:line="29" pos:column="12"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

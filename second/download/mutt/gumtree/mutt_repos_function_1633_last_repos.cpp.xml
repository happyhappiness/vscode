<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1633_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">open_mailbox<pos:position pos:line="2" pos:column="13"/></name> <parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">CONTEXT<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">ctx<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><operator pos:line="4" pos:column="7">!<pos:position pos:line="4" pos:column="8"/></operator><name pos:line="4" pos:column="8">ctx<pos:position pos:line="4" pos:column="11"/></name> <operator pos:line="4" pos:column="12">||<pos:position pos:line="4" pos:column="14"/></operator> <operator pos:line="4" pos:column="15">(<pos:position pos:line="4" pos:column="16"/></operator><name><name pos:line="4" pos:column="16">ctx<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">-&gt;<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="21">magic<pos:position pos:line="4" pos:column="26"/></name></name> <operator pos:line="4" pos:column="27">!=<pos:position pos:line="4" pos:column="29"/></operator> <name pos:line="4" pos:column="30">MUTT_COMPRESSED<pos:position pos:line="4" pos:column="45"/></name><operator pos:line="4" pos:column="45">)<pos:position pos:line="4" pos:column="46"/></operator></expr>)<pos:position pos:line="4" pos:column="47"/></condition><then pos:line="4" pos:column="47">
    <block type="pseudo"><return pos:line="5" pos:column="5">return <expr><operator pos:line="5" pos:column="12">-<pos:position pos:line="5" pos:column="13"/></operator><literal type="number" pos:line="5" pos:column="13">1<pos:position pos:line="5" pos:column="14"/></literal></expr>;<pos:position pos:line="5" pos:column="15"/></return></block></then></if>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">COMPRESS_INFO<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">ci<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><call><name pos:line="7" pos:column="23">set_compress_info<pos:position pos:line="7" pos:column="40"/></name> <argument_list pos:line="7" pos:column="41">(<argument><expr><name pos:line="7" pos:column="42">ctx<pos:position pos:line="7" pos:column="45"/></name></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="47"/></decl_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">ci<pos:position pos:line="8" pos:column="10"/></name></expr>)<pos:position pos:line="8" pos:column="11"/></condition><then pos:line="8" pos:column="11">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">-<pos:position pos:line="9" pos:column="13"/></operator><literal type="number" pos:line="9" pos:column="13">1<pos:position pos:line="9" pos:column="14"/></literal></expr>;<pos:position pos:line="9" pos:column="15"/></return></block></then></if>

  <comment type="block" pos:line="11" pos:column="3">/* If there's no close-hook, or the file isn't writable */</comment>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><name><name pos:line="12" pos:column="8">ci<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">close<pos:position pos:line="12" pos:column="17"/></name></name> <operator pos:line="12" pos:column="18">||<pos:position pos:line="12" pos:column="20"/></operator> <operator pos:line="12" pos:column="21">(<pos:position pos:line="12" pos:column="22"/></operator><call><name pos:line="12" pos:column="22">access<pos:position pos:line="12" pos:column="28"/></name> <argument_list pos:line="12" pos:column="29">(<argument><expr><name><name pos:line="12" pos:column="30">ctx<pos:position pos:line="12" pos:column="33"/></name><operator pos:line="12" pos:column="33">-&gt;<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="35">path<pos:position pos:line="12" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="41">W_OK<pos:position pos:line="12" pos:column="45"/></name></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></call> <operator pos:line="12" pos:column="47">!=<pos:position pos:line="12" pos:column="49"/></operator> <literal type="number" pos:line="12" pos:column="50">0<pos:position pos:line="12" pos:column="51"/></literal><operator pos:line="12" pos:column="51">)<pos:position pos:line="12" pos:column="52"/></operator></expr>)<pos:position pos:line="12" pos:column="53"/></condition><then pos:line="12" pos:column="53">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="5">ctx<pos:position pos:line="13" pos:column="8"/></name><operator pos:line="13" pos:column="8">-&gt;<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="10">readonly<pos:position pos:line="13" pos:column="18"/></name></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <literal type="number" pos:line="13" pos:column="21">1<pos:position pos:line="13" pos:column="22"/></literal></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt></block></then></if>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><call><name pos:line="15" pos:column="7">setup_paths<pos:position pos:line="15" pos:column="18"/></name> <argument_list pos:line="15" pos:column="19">(<argument><expr><name pos:line="15" pos:column="20">ctx<pos:position pos:line="15" pos:column="23"/></name></expr></argument>)<pos:position pos:line="15" pos:column="24"/></argument_list></call> <operator pos:line="15" pos:column="25">!=<pos:position pos:line="15" pos:column="27"/></operator> <literal type="number" pos:line="15" pos:column="28">0<pos:position pos:line="15" pos:column="29"/></literal></expr>)<pos:position pos:line="15" pos:column="30"/></condition><then pos:line="15" pos:column="30">
    <block type="pseudo"><goto pos:line="16" pos:column="5">goto <name pos:line="16" pos:column="10">or_fail<pos:position pos:line="16" pos:column="17"/></name>;<pos:position pos:line="16" pos:column="18"/></goto></block></then></if>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">store_size<pos:position pos:line="17" pos:column="13"/></name> <argument_list pos:line="17" pos:column="14">(<argument><expr><name pos:line="17" pos:column="15">ctx<pos:position pos:line="17" pos:column="18"/></name></expr></argument>)<pos:position pos:line="17" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="20"/></expr_stmt>

  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><operator pos:line="19" pos:column="7">!<pos:position pos:line="19" pos:column="8"/></operator><call><name pos:line="19" pos:column="8">lock_realpath<pos:position pos:line="19" pos:column="21"/></name> <argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">ctx<pos:position pos:line="19" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="28">0<pos:position pos:line="19" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="31"/></condition><then pos:line="19" pos:column="31">
  <block pos:line="20" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">mutt_error<pos:position pos:line="21" pos:column="15"/></name> <argument_list pos:line="21" pos:column="16">(<argument><expr><call><name pos:line="21" pos:column="17">_<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><literal type="string" pos:line="21" pos:column="19">"Unable to lock mailbox!"<pos:position pos:line="21" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt>
    <goto pos:line="22" pos:column="5">goto <name pos:line="22" pos:column="10">or_fail<pos:position pos:line="22" pos:column="17"/></name>;<pos:position pos:line="22" pos:column="18"/></goto>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="25" pos:column="3">int<pos:position pos:line="25" pos:column="6"/></name></type> <name pos:line="25" pos:column="7">rc<pos:position pos:line="25" pos:column="9"/></name> <init pos:line="25" pos:column="10">= <expr><call><name pos:line="25" pos:column="12">execute_command<pos:position pos:line="25" pos:column="27"/></name> <argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">ctx<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="34">ci<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">-&gt;<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="38">open<pos:position pos:line="25" pos:column="42"/></name></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="44">_<pos:position pos:line="25" pos:column="45"/></name><argument_list pos:line="25" pos:column="45">(<argument><expr><literal type="string" pos:line="25" pos:column="46">"Decompressing %s"<pos:position pos:line="25" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="67"/></decl_stmt>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name pos:line="26" pos:column="7">rc<pos:position pos:line="26" pos:column="9"/></name> <operator pos:line="26" pos:column="10">==<pos:position pos:line="26" pos:column="12"/></operator> <literal type="number" pos:line="26" pos:column="13">0<pos:position pos:line="26" pos:column="14"/></literal></expr>)<pos:position pos:line="26" pos:column="15"/></condition><then pos:line="26" pos:column="15">
    <block type="pseudo"><goto pos:line="27" pos:column="5">goto <name pos:line="27" pos:column="10">or_fail<pos:position pos:line="27" pos:column="17"/></name>;<pos:position pos:line="27" pos:column="18"/></goto></block></then></if>

  <expr_stmt><expr><call><name pos:line="29" pos:column="3">unlock_realpath<pos:position pos:line="29" pos:column="18"/></name> <argument_list pos:line="29" pos:column="19">(<argument><expr><name pos:line="29" pos:column="20">ctx<pos:position pos:line="29" pos:column="23"/></name></expr></argument>)<pos:position pos:line="29" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="31" pos:column="3">ctx<pos:position pos:line="31" pos:column="6"/></name><operator pos:line="31" pos:column="6">-&gt;<pos:position pos:line="31" pos:column="11"/></operator><name pos:line="31" pos:column="8">magic<pos:position pos:line="31" pos:column="13"/></name></name> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <call><name pos:line="31" pos:column="16">mx_get_magic<pos:position pos:line="31" pos:column="28"/></name> <argument_list pos:line="31" pos:column="29">(<argument><expr><name><name pos:line="31" pos:column="30">ctx<pos:position pos:line="31" pos:column="33"/></name><operator pos:line="31" pos:column="33">-&gt;<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="35">path<pos:position pos:line="31" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="41"/></expr_stmt>
  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name><name pos:line="32" pos:column="7">ctx<pos:position pos:line="32" pos:column="10"/></name><operator pos:line="32" pos:column="10">-&gt;<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="12">magic<pos:position pos:line="32" pos:column="17"/></name></name> <operator pos:line="32" pos:column="18">==<pos:position pos:line="32" pos:column="20"/></operator> <literal type="number" pos:line="32" pos:column="21">0<pos:position pos:line="32" pos:column="22"/></literal></expr>)<pos:position pos:line="32" pos:column="23"/></condition><then pos:line="32" pos:column="23">
  <block pos:line="33" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">mutt_error<pos:position pos:line="34" pos:column="15"/></name> <argument_list pos:line="34" pos:column="16">(<argument><expr><call><name pos:line="34" pos:column="17">_<pos:position pos:line="34" pos:column="18"/></name><argument_list pos:line="34" pos:column="18">(<argument><expr><literal type="string" pos:line="34" pos:column="19">"Can't identify the contents of the compressed file"<pos:position pos:line="34" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="74"/></expr_stmt>
    <goto pos:line="35" pos:column="5">goto <name pos:line="35" pos:column="10">or_fail<pos:position pos:line="35" pos:column="17"/></name>;<pos:position pos:line="35" pos:column="18"/></goto>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="38" pos:column="3">ci<pos:position pos:line="38" pos:column="5"/></name><operator pos:line="38" pos:column="5">-&gt;<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="7">child_ops<pos:position pos:line="38" pos:column="16"/></name></name> <operator pos:line="38" pos:column="17">=<pos:position pos:line="38" pos:column="18"/></operator> <call><name pos:line="38" pos:column="19">mx_get_ops<pos:position pos:line="38" pos:column="29"/></name> <argument_list pos:line="38" pos:column="30">(<argument><expr><name><name pos:line="38" pos:column="31">ctx<pos:position pos:line="38" pos:column="34"/></name><operator pos:line="38" pos:column="34">-&gt;<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="36">magic<pos:position pos:line="38" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="43"/></expr_stmt>
  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><operator pos:line="39" pos:column="7">!<pos:position pos:line="39" pos:column="8"/></operator><name><name pos:line="39" pos:column="8">ci<pos:position pos:line="39" pos:column="10"/></name><operator pos:line="39" pos:column="10">-&gt;<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="12">child_ops<pos:position pos:line="39" pos:column="21"/></name></name></expr>)<pos:position pos:line="39" pos:column="22"/></condition><then pos:line="39" pos:column="22">
  <block pos:line="40" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">mutt_error<pos:position pos:line="41" pos:column="15"/></name> <argument_list pos:line="41" pos:column="16">(<argument><expr><call><name pos:line="41" pos:column="17">_<pos:position pos:line="41" pos:column="18"/></name><argument_list pos:line="41" pos:column="18">(<argument><expr><literal type="string" pos:line="41" pos:column="19">"Can't find mailbox ops for mailbox type %d"<pos:position pos:line="41" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="66">ctx<pos:position pos:line="41" pos:column="69"/></name><operator pos:line="41" pos:column="69">-&gt;<pos:position pos:line="41" pos:column="74"/></operator><name pos:line="41" pos:column="71">magic<pos:position pos:line="41" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="78"/></expr_stmt>
    <goto pos:line="42" pos:column="5">goto <name pos:line="42" pos:column="10">or_fail<pos:position pos:line="42" pos:column="17"/></name>;<pos:position pos:line="42" pos:column="18"/></goto>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>

  <return pos:line="45" pos:column="3">return <expr><call><name><name pos:line="45" pos:column="10">ci<pos:position pos:line="45" pos:column="12"/></name><operator pos:line="45" pos:column="12">-&gt;<pos:position pos:line="45" pos:column="17"/></operator><name pos:line="45" pos:column="14">child_ops<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">-&gt;<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="25">open<pos:position pos:line="45" pos:column="29"/></name></name> <argument_list pos:line="45" pos:column="30">(<argument><expr><name pos:line="45" pos:column="31">ctx<pos:position pos:line="45" pos:column="34"/></name></expr></argument>)<pos:position pos:line="45" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="36"/></return>

<label><name pos:line="47" pos:column="1">or_fail<pos:position pos:line="47" pos:column="8"/></name>:<pos:position pos:line="47" pos:column="9"/></label>
  <comment type="block" pos:line="48" pos:column="3">/* remove the partial uncompressed file */</comment>
  <expr_stmt><expr><call><name pos:line="49" pos:column="3">remove<pos:position pos:line="49" pos:column="9"/></name> <argument_list pos:line="49" pos:column="10">(<argument><expr><name><name pos:line="49" pos:column="11">ctx<pos:position pos:line="49" pos:column="14"/></name><operator pos:line="49" pos:column="14">-&gt;<pos:position pos:line="49" pos:column="19"/></operator><name pos:line="49" pos:column="16">path<pos:position pos:line="49" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="50" pos:column="3">mutt_free_compress_info<pos:position pos:line="50" pos:column="26"/></name> <argument_list pos:line="50" pos:column="27">(<argument><expr><name pos:line="50" pos:column="28">ctx<pos:position pos:line="50" pos:column="31"/></name></expr></argument>)<pos:position pos:line="50" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="33"/></expr_stmt>
  <return pos:line="51" pos:column="3">return <expr><operator pos:line="51" pos:column="10">-<pos:position pos:line="51" pos:column="11"/></operator><literal type="number" pos:line="51" pos:column="11">1<pos:position pos:line="51" pos:column="12"/></literal></expr>;<pos:position pos:line="51" pos:column="13"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>
